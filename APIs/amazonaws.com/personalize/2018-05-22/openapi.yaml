openapi: 3.0.0
info:
  version: '2018-05-22'
  x-release: v4
  title: Amazon Personalize
  description: Amazon Personalize is a machine learning service that makes it easy to add individualized recommendations to customers.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: personalize
  x-aws-signingName: personalize
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/personalize-2018-05-22.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/personalize/'
servers:
  - url: 'http://personalize.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Personalize multi-region endpoint
  - url: 'https://personalize.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Personalize multi-region endpoint
  - url: 'http://personalize.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Personalize endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://personalize.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Personalize endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AmazonPersonalize.CreateBatchInferenceJob:
    post:
      operationId: CreateBatchInferenceJob
      description: 'Creates a batch inference job. The operation can handle up to 50 million records and the input file must be in JSON format. For more information, see <a>recommendations-batch</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBatchInferenceJobResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBatchInferenceJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.CreateBatchInferenceJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.CreateCampaign:
    post:
      operationId: CreateCampaign
      description: '<p>Creates a campaign by deploying a solution version. When a client calls the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> and <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetPersonalizedRanking.html">GetPersonalizedRanking</a> APIs, a campaign is specified in the request.</p> <p> <b>Minimum Provisioned TPS and Auto-Scaling</b> </p> <p>A transaction is a single <code>GetRecommendations</code> or <code>GetPersonalizedRanking</code> call. Transactions per second (TPS) is the throughput and unit of billing for Amazon Personalize. The minimum provisioned TPS (<code>minProvisionedTPS</code>) specifies the baseline throughput provisioned by Amazon Personalize, and thus, the minimum billing charge. </p> <p> If your TPS increases beyond <code>minProvisionedTPS</code>, Amazon Personalize auto-scales the provisioned capacity up and down, but never below <code>minProvisionedTPS</code>. There''s a short time delay while the capacity is increased that might cause loss of transactions.</p> <p>The actual TPS used is calculated as the average requests/second within a 5-minute window. You pay for maximum of either the minimum provisioned TPS or the actual TPS. We recommend starting with a low <code>minProvisionedTPS</code>, track your usage using Amazon CloudWatch metrics, and then increase the <code>minProvisionedTPS</code> as necessary.</p> <p> <b>Status</b> </p> <p>A campaign can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the campaign status, call <a>DescribeCampaign</a>.</p> <note> <p>Wait until the <code>status</code> of the campaign is <code>ACTIVE</code> before asking the campaign for recommendations.</p> </note> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListCampaigns</a> </p> </li> <li> <p> <a>DescribeCampaign</a> </p> </li> <li> <p> <a>UpdateCampaign</a> </p> </li> <li> <p> <a>DeleteCampaign</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCampaignResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaignRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.CreateCampaign
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.CreateDataset:
    post:
      operationId: CreateDataset
      description: '<p>Creates an empty dataset and adds it to the specified dataset group. Use <a>CreateDatasetImportJob</a> to import your training data to a dataset.</p> <p>There are three types of datasets:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul> <p>Each dataset type has an associated schema with required field types. Only the <code>Interactions</code> dataset is required in order to train a model (also referred to as creating a solution).</p> <p>A dataset can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the status of the dataset, call <a>DescribeDataset</a>.</p> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>CreateDatasetGroup</a> </p> </li> <li> <p> <a>ListDatasets</a> </p> </li> <li> <p> <a>DescribeDataset</a> </p> </li> <li> <p> <a>DeleteDataset</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.CreateDataset
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.CreateDatasetExportJob:
    post:
      operationId: CreateDatasetExportJob
      description: '<p> Creates a job that exports data from your dataset to an Amazon S3 bucket. To allow Amazon Personalize to export the training data, you must specify an service-linked IAM role that gives Amazon Personalize <code>PutObject</code> permissions for your Amazon S3 bucket. For information, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/export-data.html">Exporting a dataset</a> in the Amazon Personalize developer guide. </p> <p> <b>Status</b> </p> <p>A dataset export job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul> <p> To get the status of the export job, call <a>DescribeDatasetExportJob</a>, and specify the Amazon Resource Name (ARN) of the dataset export job. The dataset export is complete when the status shows as ACTIVE. If the status shows as CREATE FAILED, the response includes a <code>failureReason</code> key, which describes why the job failed. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetExportJobResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetExportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.CreateDatasetExportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.CreateDatasetGroup:
    post:
      operationId: CreateDatasetGroup
      description: '<p>Creates an empty dataset group. A dataset group contains related datasets that supply data for training a model. A dataset group can contain at most three datasets, one for each type of dataset:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul> <p>To train a model (create a solution), a dataset group that contains an <code>Interactions</code> dataset is required. Call <a>CreateDataset</a> to add a dataset to the group.</p> <p>A dataset group can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING</p> </li> </ul> <p>To get the status of the dataset group, call <a>DescribeDatasetGroup</a>. If the status shows as CREATE FAILED, the response includes a <code>failureReason</code> key, which describes why the creation failed.</p> <note> <p>You must wait until the <code>status</code> of the dataset group is <code>ACTIVE</code> before adding a dataset to the group.</p> </note> <p>You can specify an Key Management Service (KMS) key to encrypt the datasets in the group. If you specify a KMS key, you must also include an Identity and Access Management (IAM) role that has permission to access the key.</p> <p class="title"> <b>APIs that require a dataset group ARN in the request</b> </p> <ul> <li> <p> <a>CreateDataset</a> </p> </li> <li> <p> <a>CreateEventTracker</a> </p> </li> <li> <p> <a>CreateSolution</a> </p> </li> </ul> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListDatasetGroups</a> </p> </li> <li> <p> <a>DescribeDatasetGroup</a> </p> </li> <li> <p> <a>DeleteDatasetGroup</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetGroupResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.CreateDatasetGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.CreateDatasetImportJob:
    post:
      operationId: CreateDatasetImportJob
      description: '<p>Creates a job that imports training data from your data source (an Amazon S3 bucket) to an Amazon Personalize dataset. To allow Amazon Personalize to import the training data, you must specify an IAM service role that has permission to read from the data source, as Amazon Personalize makes a copy of your data and processes it internally. For information on granting access to your Amazon S3 bucket, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/granting-personalize-s3-access.html">Giving Amazon Personalize Access to Amazon S3 Resources</a>. </p> <important> <p>The dataset import job replaces any existing data in the dataset that you imported in bulk.</p> </important> <p> <b>Status</b> </p> <p>A dataset import job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul> <p>To get the status of the import job, call <a>DescribeDatasetImportJob</a>, providing the Amazon Resource Name (ARN) of the dataset import job. The dataset import is complete when the status shows as ACTIVE. If the status shows as CREATE FAILED, the response includes a <code>failureReason</code> key, which describes why the job failed.</p> <note> <p>Importing takes time. You must wait until the status shows as ACTIVE before training a model using the dataset.</p> </note> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListDatasetImportJobs</a> </p> </li> <li> <p> <a>DescribeDatasetImportJob</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetImportJobResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetImportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.CreateDatasetImportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.CreateEventTracker:
    post:
      operationId: CreateEventTracker
      description: '<p>Creates an event tracker that you use when adding event data to a specified dataset group using the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html">PutEvents</a> API.</p> <note> <p>Only one event tracker can be associated with a dataset group. You will get an error if you call <code>CreateEventTracker</code> using the same dataset group as an existing event tracker.</p> </note> <p>When you create an event tracker, the response includes a tracking ID, which you pass as a parameter when you use the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html">PutEvents</a> operation. Amazon Personalize then appends the event data to the Interactions dataset of the dataset group you specify in your event tracker. </p> <p>The event tracker can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the status of the event tracker, call <a>DescribeEventTracker</a>.</p> <note> <p>The event tracker must be in the ACTIVE state before using the tracking ID.</p> </note> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListEventTrackers</a> </p> </li> <li> <p> <a>DescribeEventTracker</a> </p> </li> <li> <p> <a>DeleteEventTracker</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventTrackerResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventTrackerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.CreateEventTracker
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.CreateFilter:
    post:
      operationId: CreateFilter
      description: 'Creates a recommendation filter. For more information, see <a>filter</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFilterResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFilterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.CreateFilter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.CreateSchema:
    post:
      operationId: CreateSchema
      description: <p>Creates an Amazon Personalize schema from the specified schema string. The schema you create must be in Avro JSON format.</p> <p>Amazon Personalize recognizes three schema variants. Each schema is associated with a dataset type and has a set of required field and keywords. You specify a schema when you call <a>CreateDataset</a>.</p> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListSchemas</a> </p> </li> <li> <p> <a>DescribeSchema</a> </p> </li> <li> <p> <a>DeleteSchema</a> </p> </li> </ul>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSchemaResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchemaRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.CreateSchema
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.CreateSolution:
    post:
      operationId: CreateSolution
      description: '<p>Creates the configuration for training a model. A trained model is known as a solution. After the configuration is created, you train the model (create a solution) by calling the <a>CreateSolutionVersion</a> operation. Every time you call <code>CreateSolutionVersion</code>, a new version of the solution is created.</p> <p>After creating a solution version, you check its accuracy by calling <a>GetSolutionMetrics</a>. When you are satisfied with the version, you deploy it using <a>CreateCampaign</a>. The campaign provides recommendations to a client through the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> API.</p> <p>To train a model, Amazon Personalize requires training data and a recipe. The training data comes from the dataset group that you provide in the request. A recipe specifies the training algorithm and a feature transformation. You can specify one of the predefined recipes provided by Amazon Personalize. Alternatively, you can specify <code>performAutoML</code> and Amazon Personalize will analyze your data and select the optimum USER_PERSONALIZATION recipe for you.</p> <note> <p>Amazon Personalize doesn''t support configuring the <code>hpoObjective</code> for solution hyperparameter optimization at this time.</p> </note> <p> <b>Status</b> </p> <p>A solution can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the status of the solution, call <a>DescribeSolution</a>. Wait until the status shows as ACTIVE before calling <code>CreateSolutionVersion</code>.</p> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListSolutions</a> </p> </li> <li> <p> <a>CreateSolutionVersion</a> </p> </li> <li> <p> <a>DescribeSolution</a> </p> </li> <li> <p> <a>DeleteSolution</a> </p> </li> </ul> <ul> <li> <p> <a>ListSolutionVersions</a> </p> </li> <li> <p> <a>DescribeSolutionVersion</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSolutionResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolutionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.CreateSolution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.CreateSolutionVersion:
    post:
      operationId: CreateSolutionVersion
      description: '<p>Trains or retrains an active solution. A solution is created using the <a>CreateSolution</a> operation and must be in the ACTIVE state before calling <code>CreateSolutionVersion</code>. A new version of the solution is created every time you call this operation.</p> <p> <b>Status</b> </p> <p>A solution version can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING</p> </li> <li> <p>CREATE IN_PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p> </li> <li> <p>CREATE STOPPING</p> </li> <li> <p>CREATE STOPPED</p> </li> </ul> <p>To get the status of the version, call <a>DescribeSolutionVersion</a>. Wait until the status shows as ACTIVE before calling <code>CreateCampaign</code>.</p> <p>If the status shows as CREATE FAILED, the response includes a <code>failureReason</code> key, which describes why the job failed.</p> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListSolutionVersions</a> </p> </li> <li> <p> <a>DescribeSolutionVersion</a> </p> </li> </ul> <ul> <li> <p> <a>ListSolutions</a> </p> </li> <li> <p> <a>CreateSolution</a> </p> </li> <li> <p> <a>DescribeSolution</a> </p> </li> <li> <p> <a>DeleteSolution</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSolutionVersionResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolutionVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.CreateSolutionVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DeleteCampaign:
    post:
      operationId: DeleteCampaign
      description: 'Removes a campaign by deleting the solution deployment. The solution that the campaign is based on is not deleted and can be redeployed when needed. A deleted campaign can no longer be specified in a <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> request. For more information on campaigns, see <a>CreateCampaign</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCampaignRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DeleteCampaign
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DeleteDataset:
    post:
      operationId: DeleteDataset
      description: 'Deletes a dataset. You can''t delete a dataset if an associated <code>DatasetImportJob</code> or <code>SolutionVersion</code> is in the CREATE PENDING or IN PROGRESS state. For more information on datasets, see <a>CreateDataset</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatasetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DeleteDataset
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DeleteDatasetGroup:
    post:
      operationId: DeleteDatasetGroup
      description: '<p>Deletes a dataset group. Before you delete a dataset group, you must delete the following:</p> <ul> <li> <p>All associated event trackers.</p> </li> <li> <p>All associated solutions.</p> </li> <li> <p>All datasets in the dataset group.</p> </li> </ul>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatasetGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DeleteDatasetGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DeleteEventTracker:
    post:
      operationId: DeleteEventTracker
      description: 'Deletes the event tracker. Does not delete the event-interactions dataset from the associated dataset group. For more information on event trackers, see <a>CreateEventTracker</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEventTrackerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DeleteEventTracker
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DeleteFilter:
    post:
      operationId: DeleteFilter
      description: Deletes a filter.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFilterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DeleteFilter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DeleteSchema:
    post:
      operationId: DeleteSchema
      description: 'Deletes a schema. Before deleting a schema, you must delete all datasets referencing the schema. For more information on schemas, see <a>CreateSchema</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSchemaRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DeleteSchema
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DeleteSolution:
    post:
      operationId: DeleteSolution
      description: 'Deletes all versions of a solution and the <code>Solution</code> object itself. Before deleting a solution, you must delete all campaigns based on the solution. To determine what campaigns are using the solution, call <a>ListCampaigns</a> and supply the Amazon Resource Name (ARN) of the solution. You can''t delete a solution if an associated <code>SolutionVersion</code> is in the CREATE PENDING or IN PROGRESS state. For more information on solutions, see <a>CreateSolution</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSolutionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DeleteSolution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeAlgorithm:
    post:
      operationId: DescribeAlgorithm
      description: Describes the given algorithm.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAlgorithmResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAlgorithmRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeAlgorithm
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeBatchInferenceJob:
    post:
      operationId: DescribeBatchInferenceJob
      description: 'Gets the properties of a batch inference job including name, Amazon Resource Name (ARN), status, input and output configurations, and the ARN of the solution version used to generate the recommendations.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBatchInferenceJobResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeBatchInferenceJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeBatchInferenceJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeCampaign:
    post:
      operationId: DescribeCampaign
      description: '<p>Describes the given campaign, including its status.</p> <p>A campaign can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>When the <code>status</code> is <code>CREATE FAILED</code>, the response includes the <code>failureReason</code> key, which describes why.</p> <p>For more information on campaigns, see <a>CreateCampaign</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCampaignResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCampaignRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeCampaign
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeDataset:
    post:
      operationId: DescribeDataset
      description: 'Describes the given dataset. For more information on datasets, see <a>CreateDataset</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeDataset
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeDatasetExportJob:
    post:
      operationId: DescribeDatasetExportJob
      description: 'Describes the dataset export job created by <a>CreateDatasetExportJob</a>, including the export job status.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetExportJobResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetExportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeDatasetExportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeDatasetGroup:
    post:
      operationId: DescribeDatasetGroup
      description: 'Describes the given dataset group. For more information on dataset groups, see <a>CreateDatasetGroup</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetGroupResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeDatasetGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeDatasetImportJob:
    post:
      operationId: DescribeDatasetImportJob
      description: 'Describes the dataset import job created by <a>CreateDatasetImportJob</a>, including the import job status.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetImportJobResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetImportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeDatasetImportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeEventTracker:
    post:
      operationId: DescribeEventTracker
      description: 'Describes an event tracker. The response includes the <code>trackingId</code> and <code>status</code> of the event tracker. For more information on event trackers, see <a>CreateEventTracker</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventTrackerResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventTrackerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeEventTracker
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeFeatureTransformation:
    post:
      operationId: DescribeFeatureTransformation
      description: Describes the given feature transformation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFeatureTransformationResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFeatureTransformationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeFeatureTransformation
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeFilter:
    post:
      operationId: DescribeFilter
      description: Describes a filter's properties.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFilterResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFilterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeFilter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeRecipe:
    post:
      operationId: DescribeRecipe
      description: '<p>Describes a recipe.</p> <p>A recipe contains three items:</p> <ul> <li> <p>An algorithm that trains a model.</p> </li> <li> <p>Hyperparameters that govern the training.</p> </li> <li> <p>Feature transformation information for modifying the input data before training.</p> </li> </ul> <p>Amazon Personalize provides a set of predefined recipes. You specify a recipe when you create a solution with the <a>CreateSolution</a> API. <code>CreateSolution</code> trains a model by using the algorithm in the specified recipe and a training dataset. The solution, when deployed as a campaign, can provide recommendations using the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> API.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRecipeResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRecipeRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeRecipe
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeSchema:
    post:
      operationId: DescribeSchema
      description: 'Describes a schema. For more information on schemas, see <a>CreateSchema</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSchemaResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSchemaRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeSchema
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeSolution:
    post:
      operationId: DescribeSolution
      description: 'Describes a solution. For more information on solutions, see <a>CreateSolution</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSolutionResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSolutionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeSolution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.DescribeSolutionVersion:
    post:
      operationId: DescribeSolutionVersion
      description: 'Describes a specific version of a solution. For more information on solutions, see <a>CreateSolution</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSolutionVersionResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSolutionVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.DescribeSolutionVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.GetSolutionMetrics:
    post:
      operationId: GetSolutionMetrics
      description: Gets the metrics for the specified solution version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolutionMetricsResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSolutionMetricsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.GetSolutionMetrics
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.ListBatchInferenceJobs:
    post:
      operationId: ListBatchInferenceJobs
      description: Gets a list of the batch inference jobs that have been performed off of a solution version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchInferenceJobsResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListBatchInferenceJobsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.ListBatchInferenceJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.ListCampaigns:
    post:
      operationId: ListCampaigns
      description: 'Returns a list of campaigns that use the given solution. When a solution is not specified, all the campaigns associated with the account are listed. The response provides the properties for each campaign, including the Amazon Resource Name (ARN). For more information on campaigns, see <a>CreateCampaign</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCampaignsResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCampaignsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.ListCampaigns
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.ListDatasetExportJobs:
    post:
      operationId: ListDatasetExportJobs
      description: 'Returns a list of dataset export jobs that use the given dataset. When a dataset is not specified, all the dataset export jobs associated with the account are listed. The response provides the properties for each dataset export job, including the Amazon Resource Name (ARN). For more information on dataset export jobs, see <a>CreateDatasetExportJob</a>. For more information on datasets, see <a>CreateDataset</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetExportJobsResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetExportJobsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.ListDatasetExportJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.ListDatasetGroups:
    post:
      operationId: ListDatasetGroups
      description: 'Returns a list of dataset groups. The response provides the properties for each dataset group, including the Amazon Resource Name (ARN). For more information on dataset groups, see <a>CreateDatasetGroup</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetGroupsResponse'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetGroupsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.ListDatasetGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.ListDatasetImportJobs:
    post:
      operationId: ListDatasetImportJobs
      description: 'Returns a list of dataset import jobs that use the given dataset. When a dataset is not specified, all the dataset import jobs associated with the account are listed. The response provides the properties for each dataset import job, including the Amazon Resource Name (ARN). For more information on dataset import jobs, see <a>CreateDatasetImportJob</a>. For more information on datasets, see <a>CreateDataset</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetImportJobsResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetImportJobsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.ListDatasetImportJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.ListDatasets:
    post:
      operationId: ListDatasets
      description: 'Returns the list of datasets contained in the given dataset group. The response provides the properties for each dataset, including the Amazon Resource Name (ARN). For more information on datasets, see <a>CreateDataset</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.ListDatasets
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.ListEventTrackers:
    post:
      operationId: ListEventTrackers
      description: 'Returns the list of event trackers associated with the account. The response provides the properties for each event tracker, including the Amazon Resource Name (ARN) and tracking ID. For more information on event trackers, see <a>CreateEventTracker</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventTrackersResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEventTrackersRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.ListEventTrackers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.ListFilters:
    post:
      operationId: ListFilters
      description: Lists all filters that belong to a given dataset group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFiltersResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFiltersRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.ListFilters
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.ListRecipes:
    post:
      operationId: ListRecipes
      description: 'Returns a list of available recipes. The response provides the properties for each recipe, including the recipe''s Amazon Resource Name (ARN).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecipesResponse'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRecipesRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.ListRecipes
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.ListSchemas:
    post:
      operationId: ListSchemas
      description: 'Returns the list of schemas associated with the account. The response provides the properties for each schema, including the Amazon Resource Name (ARN). For more information on schemas, see <a>CreateSchema</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchemasResponse'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSchemasRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.ListSchemas
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.ListSolutionVersions:
    post:
      operationId: ListSolutionVersions
      description: 'Returns a list of solution versions for the given solution. When a solution is not specified, all the solution versions associated with the account are listed. The response provides the properties for each solution version, including the Amazon Resource Name (ARN). For more information on solutions, see <a>CreateSolution</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSolutionVersionsResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSolutionVersionsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.ListSolutionVersions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.ListSolutions:
    post:
      operationId: ListSolutions
      description: 'Returns a list of solutions that use the given dataset group. When a dataset group is not specified, all the solutions associated with the account are listed. The response provides the properties for each solution, including the Amazon Resource Name (ARN). For more information on solutions, see <a>CreateSolution</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSolutionsResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSolutionsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.ListSolutions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.StopSolutionVersionCreation:
    post:
      operationId: StopSolutionVersionCreation
      description: '<p>Stops creating a solution version that is in a state of CREATE_PENDING or CREATE IN_PROGRESS. </p> <p>Depending on the current state of the solution version, the solution version state changes as follows:</p> <ul> <li> <p>CREATE_PENDING &gt; CREATE_STOPPED</p> <p>or</p> </li> <li> <p>CREATE_IN_PROGRESS &gt; CREATE_STOPPING &gt; CREATE_STOPPED</p> </li> </ul> <p>You are billed for all of the training completed up until you stop the solution version creation. You cannot resume creating a solution version once it has been stopped.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopSolutionVersionCreationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.StopSolutionVersionCreation
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AmazonPersonalize.UpdateCampaign:
    post:
      operationId: UpdateCampaign
      description: '<p>Updates a campaign by either deploying a new solution or changing the value of the campaign''s <code>minProvisionedTPS</code> parameter.</p> <p>To update a campaign, the campaign status must be ACTIVE or CREATE FAILED. Check the campaign status using the <a>DescribeCampaign</a> API.</p> <note> <p>You must wait until the <code>status</code> of the updated campaign is <code>ACTIVE</code> before asking the campaign for recommendations.</p> </note> <p>For more information on campaigns, see <a>CreateCampaign</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCampaignResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonPersonalize.UpdateCampaign
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateBatchInferenceJobResponse:
      type: object
      properties:
        batchInferenceJobArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the batch inference job.
    CreateBatchInferenceJobRequest:
      type: object
      required:
        - jobName
        - solutionVersionArn
        - jobInput
        - jobOutput
        - roleArn
      title: CreateBatchInferenceJobRequest
      properties:
        jobName:
          $ref: '#/components/schemas/Name'
          description: The name of the batch inference job to create.
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the solution version that will be used to generate the batch inference recommendations.
        filterArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN of the filter to apply to the batch inference job. For more information on using filters, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter-batch.html">Filtering Batch Recommendations</a>..'
        numResults:
          $ref: '#/components/schemas/NumBatchResults'
          description: The number of recommendations to retreive.
        jobInput:
          $ref: '#/components/schemas/BatchInferenceJobInput'
          description: The Amazon S3 path that leads to the input file to base your recommendations on. The input material must be in JSON format.
        jobOutput:
          $ref: '#/components/schemas/BatchInferenceJobOutput'
          description: The path to the Amazon S3 bucket where the job's output will be stored.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the Amazon Identity and Access Management role that has permissions to read and write to your input and output Amazon S3 buckets respectively.
        batchInferenceJobConfig:
          $ref: '#/components/schemas/BatchInferenceJobConfig'
          description: The configuration details of a batch inference job.
    InvalidInputException: {}
    ResourceAlreadyExistsException: {}
    LimitExceededException: {}
    ResourceNotFoundException: {}
    ResourceInUseException: {}
    CreateCampaignResponse:
      type: object
      properties:
        campaignArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the campaign.
    CreateCampaignRequest:
      type: object
      required:
        - name
        - solutionVersionArn
      title: CreateCampaignRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: A name for the new campaign. The campaign name must be unique within your account.
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the solution version to deploy.
        minProvisionedTPS:
          $ref: '#/components/schemas/TransactionsPerSecond'
          description: Specifies the requested minimum provisioned transactions (recommendations) per second that Amazon Personalize will support.
        campaignConfig:
          $ref: '#/components/schemas/CampaignConfig'
          description: The configuration details of a campaign.
    CreateDatasetResponse:
      type: object
      properties:
        datasetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset.
    CreateDatasetRequest:
      type: object
      required:
        - name
        - schemaArn
        - datasetGroupArn
        - datasetType
      title: CreateDatasetRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name for the dataset.
        schemaArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the schema to associate with the dataset. The schema defines the dataset fields.
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group to add the dataset to.
        datasetType:
          $ref: '#/components/schemas/DatasetType'
          description: '<p>The type of dataset.</p> <p>One of the following (case insensitive) values:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul>'
    CreateDatasetExportJobResponse:
      type: object
      properties:
        datasetExportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset export job.
    CreateDatasetExportJobRequest:
      type: object
      required:
        - jobName
        - datasetArn
        - roleArn
        - jobOutput
      title: CreateDatasetExportJobRequest
      properties:
        jobName:
          $ref: '#/components/schemas/Name'
          description: The name for the dataset export job.
        datasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset that contains the data to export.
        ingestionMode:
          $ref: '#/components/schemas/IngestionMode'
          description: 'The data to export, based on how you imported the data. You can choose to export only <code>BULK</code> data that you imported using a dataset import job, only <code>PUT</code> data that you imported incrementally (using the console, PutEvents, PutUsers and PutItems operations), or <code>ALL</code> for both types. The default value is <code>PUT</code>. '
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM service role that has permissions to add data to your output Amazon S3 bucket.
        jobOutput:
          $ref: '#/components/schemas/DatasetExportJobOutput'
          description: The path to the Amazon S3 bucket where the job's output is stored.
    CreateDatasetGroupResponse:
      type: object
      properties:
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the new dataset group.
    CreateDatasetGroupRequest:
      type: object
      required:
        - name
      title: CreateDatasetGroupRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name for the new dataset group.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the Identity and Access Management (IAM) role that has permissions to access the Key Management Service (KMS) key. Supplying an IAM role is only valid when also specifying a KMS key.
        kmsKeyArn:
          $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of a Key Management Service (KMS) key used to encrypt the datasets.
    CreateDatasetImportJobResponse:
      type: object
      properties:
        datasetImportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset import job.
    CreateDatasetImportJobRequest:
      type: object
      required:
        - jobName
        - datasetArn
        - dataSource
        - roleArn
      title: CreateDatasetImportJobRequest
      properties:
        jobName:
          $ref: '#/components/schemas/Name'
          description: The name for the dataset import job.
        datasetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset that receives the imported data.
        dataSource:
          $ref: '#/components/schemas/DataSource'
          description: The Amazon S3 bucket that contains the training data to import.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
    CreateEventTrackerResponse:
      type: object
      properties:
        eventTrackerArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the event tracker.
        trackingId:
          $ref: '#/components/schemas/TrackingId'
          description: 'The ID of the event tracker. Include this ID in requests to the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html">PutEvents</a> API.'
    CreateEventTrackerRequest:
      type: object
      required:
        - name
        - datasetGroupArn
      title: CreateEventTrackerRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name for the event tracker.
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group that receives the event data.
    CreateFilterResponse:
      type: object
      properties:
        filterArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the new filter.
    CreateFilterRequest:
      type: object
      required:
        - name
        - datasetGroupArn
        - filterExpression
      title: CreateFilterRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the filter to create.
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset group that the filter will belong to.
        filterExpression:
          $ref: '#/components/schemas/FilterExpression'
          description: 'The filter expression defines which items are included or excluded from recommendations. Filter expression must follow specific format rules. For information about filter expression structure and syntax, see <a>filter-expressions</a>.'
    CreateSchemaResponse:
      type: object
      properties:
        schemaArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the created schema.
    CreateSchemaRequest:
      type: object
      required:
        - name
        - schema
      title: CreateSchemaRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name for the schema.
        schema:
          $ref: '#/components/schemas/AvroSchema'
          description: A schema in Avro JSON format.
    CreateSolutionResponse:
      type: object
      properties:
        solutionArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the solution.
    CreateSolutionRequest:
      type: object
      required:
        - name
        - datasetGroupArn
      title: CreateSolutionRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name for the solution.
        performHPO:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Whether to perform hyperparameter optimization (HPO) on the specified or selected recipe. The default is <code>false</code>.</p> <p>When performing AutoML, this parameter is always <code>true</code> and you should not set it to <code>false</code>.</p>'
        performAutoML:
          $ref: '#/components/schemas/PerformAutoML'
          description: '<p>Whether to perform automated machine learning (AutoML). The default is <code>false</code>. For this case, you must specify <code>recipeArn</code>.</p> <p>When set to <code>true</code>, Amazon Personalize analyzes your training data and selects the optimal USER_PERSONALIZATION recipe and hyperparameters. In this case, you must omit <code>recipeArn</code>. Amazon Personalize determines the optimal recipe by running tests with different values for the hyperparameters. AutoML lengthens the training process as compared to selecting a specific recipe.</p>'
        recipeArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the recipe to use for model training. Only specified when <code>performAutoML</code> is false.
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group that provides the training data.
        eventType:
          $ref: '#/components/schemas/EventType'
          description: '<p>When your have multiple event types (using an <code>EVENT_TYPE</code> schema field), this parameter specifies which event type (for example, ''click'' or ''like'') is used for training the model.</p> <p>If you do not provide an <code>eventType</code>, Amazon Personalize will use all interactions for training with equal weight regardless of type.</p>'
        solutionConfig:
          $ref: '#/components/schemas/SolutionConfig'
          description: '<p>The configuration to use with the solution. When <code>performAutoML</code> is set to true, Amazon Personalize only evaluates the <code>autoMLConfig</code> section of the solution configuration.</p> <note> <p>Amazon Personalize doesn''t support configuring the <code>hpoObjective</code> at this time.</p> </note>'
    CreateSolutionVersionResponse:
      type: object
      properties:
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the new solution version.
    CreateSolutionVersionRequest:
      type: object
      required:
        - solutionArn
      title: CreateSolutionVersionRequest
      properties:
        solutionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the solution containing the training configuration information.
        trainingMode:
          $ref: '#/components/schemas/TrainingMode'
          description: '<p>The scope of training to be performed when creating the solution version. The <code>FULL</code> option trains the solution version based on the entirety of the input solution''s training data, while the <code>UPDATE</code> option processes only the data that has changed in comparison to the input solution. Choose <code>UPDATE</code> when you want to incrementally update your solution version instead of creating an entirely new one.</p> <important> <p>The <code>UPDATE</code> option can only be used when you already have an active solution version created from the input solution using the <code>FULL</code> option and the input solution was trained with the <a href="https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-new-item-USER_PERSONALIZATION.html">User-Personalization</a> recipe or the <a href="https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-hrnn-coldstart.html">HRNN-Coldstart</a> recipe.</p> </important>'
    DeleteCampaignRequest:
      type: object
      required:
        - campaignArn
      title: DeleteCampaignRequest
      properties:
        campaignArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the campaign to delete.
    DeleteDatasetRequest:
      type: object
      required:
        - datasetArn
      title: DeleteDatasetRequest
      properties:
        datasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset to delete.
    DeleteDatasetGroupRequest:
      type: object
      required:
        - datasetGroupArn
      title: DeleteDatasetGroupRequest
      properties:
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset group to delete.
    DeleteEventTrackerRequest:
      type: object
      required:
        - eventTrackerArn
      title: DeleteEventTrackerRequest
      properties:
        eventTrackerArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the event tracker to delete.
    DeleteFilterRequest:
      type: object
      required:
        - filterArn
      title: DeleteFilterRequest
      properties:
        filterArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the filter to delete.
    DeleteSchemaRequest:
      type: object
      required:
        - schemaArn
      title: DeleteSchemaRequest
      properties:
        schemaArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the schema to delete.
    DeleteSolutionRequest:
      type: object
      required:
        - solutionArn
      title: DeleteSolutionRequest
      properties:
        solutionArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the solution to delete.
    DescribeAlgorithmResponse:
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/Algorithm'
          description: A listing of the properties of the algorithm.
    DescribeAlgorithmRequest:
      type: object
      required:
        - algorithmArn
      title: DescribeAlgorithmRequest
      properties:
        algorithmArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the algorithm to describe.
    DescribeBatchInferenceJobResponse:
      type: object
      properties:
        batchInferenceJob:
          $ref: '#/components/schemas/BatchInferenceJob'
          description: Information on the specified batch inference job.
    DescribeBatchInferenceJobRequest:
      type: object
      required:
        - batchInferenceJobArn
      title: DescribeBatchInferenceJobRequest
      properties:
        batchInferenceJobArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the batch inference job to describe.
    DescribeCampaignResponse:
      type: object
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
          description: The properties of the campaign.
    DescribeCampaignRequest:
      type: object
      required:
        - campaignArn
      title: DescribeCampaignRequest
      properties:
        campaignArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the campaign.
    DescribeDatasetResponse:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Dataset'
          description: A listing of the dataset's properties.
    DescribeDatasetRequest:
      type: object
      required:
        - datasetArn
      title: DescribeDatasetRequest
      properties:
        datasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset to describe.
    DescribeDatasetExportJobResponse:
      type: object
      properties:
        datasetExportJob:
          $ref: '#/components/schemas/DatasetExportJob'
          description: '<p>Information about the dataset export job, including the status.</p> <p>The status is one of the following values:</p> <ul> <li> <p>CREATE PENDING</p> </li> <li> <p>CREATE IN_PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p> </li> </ul>'
    DescribeDatasetExportJobRequest:
      type: object
      required:
        - datasetExportJobArn
      title: DescribeDatasetExportJobRequest
      properties:
        datasetExportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset export job to describe.
    DescribeDatasetGroupResponse:
      type: object
      properties:
        datasetGroup:
          $ref: '#/components/schemas/DatasetGroup'
          description: A listing of the dataset group's properties.
    DescribeDatasetGroupRequest:
      type: object
      required:
        - datasetGroupArn
      title: DescribeDatasetGroupRequest
      properties:
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group to describe.
    DescribeDatasetImportJobResponse:
      type: object
      properties:
        datasetImportJob:
          $ref: '#/components/schemas/DatasetImportJob'
          description: '<p>Information about the dataset import job, including the status.</p> <p>The status is one of the following values:</p> <ul> <li> <p>CREATE PENDING</p> </li> <li> <p>CREATE IN_PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p> </li> </ul>'
    DescribeDatasetImportJobRequest:
      type: object
      required:
        - datasetImportJobArn
      title: DescribeDatasetImportJobRequest
      properties:
        datasetImportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset import job to describe.
    DescribeEventTrackerResponse:
      type: object
      properties:
        eventTracker:
          $ref: '#/components/schemas/EventTracker'
          description: An object that describes the event tracker.
    DescribeEventTrackerRequest:
      type: object
      required:
        - eventTrackerArn
      title: DescribeEventTrackerRequest
      properties:
        eventTrackerArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the event tracker to describe.
    DescribeFeatureTransformationResponse:
      type: object
      properties:
        featureTransformation:
          $ref: '#/components/schemas/FeatureTransformation'
          description: A listing of the FeatureTransformation properties.
    DescribeFeatureTransformationRequest:
      type: object
      required:
        - featureTransformationArn
      title: DescribeFeatureTransformationRequest
      properties:
        featureTransformationArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the feature transformation to describe.
    DescribeFilterResponse:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/Filter'
          description: The filter's details.
    DescribeFilterRequest:
      type: object
      required:
        - filterArn
      title: DescribeFilterRequest
      properties:
        filterArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the filter to describe.
    DescribeRecipeResponse:
      type: object
      properties:
        recipe:
          $ref: '#/components/schemas/Recipe'
          description: An object that describes the recipe.
    DescribeRecipeRequest:
      type: object
      required:
        - recipeArn
      title: DescribeRecipeRequest
      properties:
        recipeArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the recipe to describe.
    DescribeSchemaResponse:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/DatasetSchema'
          description: The requested schema.
    DescribeSchemaRequest:
      type: object
      required:
        - schemaArn
      title: DescribeSchemaRequest
      properties:
        schemaArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the schema to retrieve.
    DescribeSolutionResponse:
      type: object
      properties:
        solution:
          $ref: '#/components/schemas/Solution'
          description: An object that describes the solution.
    DescribeSolutionRequest:
      type: object
      required:
        - solutionArn
      title: DescribeSolutionRequest
      properties:
        solutionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the solution to describe.
    DescribeSolutionVersionResponse:
      type: object
      properties:
        solutionVersion:
          $ref: '#/components/schemas/SolutionVersion'
          description: The solution version.
    DescribeSolutionVersionRequest:
      type: object
      required:
        - solutionVersionArn
      title: DescribeSolutionVersionRequest
      properties:
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the solution version.
    GetSolutionMetricsResponse:
      type: object
      properties:
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The same solution version ARN as specified in the request.
        metrics:
          $ref: '#/components/schemas/Metrics'
          description: The metrics for the solution version.
    GetSolutionMetricsRequest:
      type: object
      required:
        - solutionVersionArn
      title: GetSolutionMetricsRequest
      properties:
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the solution version for which to get metrics.
    ListBatchInferenceJobsResponse:
      type: object
      properties:
        batchInferenceJobs:
          $ref: '#/components/schemas/BatchInferenceJobs'
          description: A list containing information on each job that is returned.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. The value is <code>null</code> when there are no more results to return.
    ListBatchInferenceJobsRequest:
      type: object
      title: ListBatchInferenceJobsRequest
      properties:
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the solution version from which the batch inference jobs were created.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to request the next page of results.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of batch inference job results to return in each page. The default value is 100.
    InvalidNextTokenException: {}
    ListCampaignsResponse:
      type: object
      properties:
        campaigns:
          $ref: '#/components/schemas/Campaigns'
          description: A list of the campaigns.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token for getting the next set of campaigns (if they exist).
    ListCampaignsRequest:
      type: object
      title: ListCampaignsRequest
      properties:
        solutionArn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) of the solution to list the campaigns for. When a solution is not specified, all the campaigns associated with the account are listed.'
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token returned from the previous call to <code>ListCampaigns</code> for getting the next set of campaigns (if they exist).
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of campaigns to return.
    ListDatasetExportJobsResponse:
      type: object
      properties:
        datasetExportJobs:
          $ref: '#/components/schemas/DatasetExportJobs'
          description: The list of dataset export jobs.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token for getting the next set of dataset export jobs (if they exist).
    ListDatasetExportJobsRequest:
      type: object
      title: ListDatasetExportJobsRequest
      properties:
        datasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset to list the dataset export jobs for.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token returned from the previous call to <code>ListDatasetExportJobs</code> for getting the next set of dataset export jobs (if they exist).
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of dataset export jobs to return.
    ListDatasetGroupsResponse:
      type: object
      properties:
        datasetGroups:
          $ref: '#/components/schemas/DatasetGroups'
          description: The list of your dataset groups.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token for getting the next set of dataset groups (if they exist).
    ListDatasetGroupsRequest:
      type: object
      title: ListDatasetGroupsRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token returned from the previous call to <code>ListDatasetGroups</code> for getting the next set of dataset groups (if they exist).
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of dataset groups to return.
    ListDatasetImportJobsResponse:
      type: object
      properties:
        datasetImportJobs:
          $ref: '#/components/schemas/DatasetImportJobs'
          description: The list of dataset import jobs.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token for getting the next set of dataset import jobs (if they exist).
    ListDatasetImportJobsRequest:
      type: object
      title: ListDatasetImportJobsRequest
      properties:
        datasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset to list the dataset import jobs for.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token returned from the previous call to <code>ListDatasetImportJobs</code> for getting the next set of dataset import jobs (if they exist).
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of dataset import jobs to return.
    ListDatasetsResponse:
      type: object
      properties:
        datasets:
          $ref: '#/components/schemas/Datasets'
          description: An array of <code>Dataset</code> objects. Each object provides metadata information.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token for getting the next set of datasets (if they exist).
    ListDatasetsRequest:
      type: object
      title: ListDatasetsRequest
      properties:
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group that contains the datasets to list.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token returned from the previous call to <code>ListDatasetImportJobs</code> for getting the next set of dataset import jobs (if they exist).
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of datasets to return.
    ListEventTrackersResponse:
      type: object
      properties:
        eventTrackers:
          $ref: '#/components/schemas/EventTrackers'
          description: A list of event trackers.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token for getting the next set of event trackers (if they exist).
    ListEventTrackersRequest:
      type: object
      title: ListEventTrackersRequest
      properties:
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of a dataset group used to filter the response.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token returned from the previous call to <code>ListEventTrackers</code> for getting the next set of event trackers (if they exist).
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of event trackers to return.
    ListFiltersResponse:
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/Filters'
          description: A list of returned filters.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token for getting the next set of filters (if they exist).
    ListFiltersRequest:
      type: object
      title: ListFiltersRequest
      properties:
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset group that contains the filters.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token returned from the previous call to <code>ListFilters</code> for getting the next set of filters (if they exist).
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of filters to return.
    ListRecipesResponse:
      type: object
      properties:
        recipes:
          $ref: '#/components/schemas/Recipes'
          description: The list of available recipes.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token for getting the next set of recipes.
    ListRecipesRequest:
      type: object
      title: ListRecipesRequest
      properties:
        recipeProvider:
          $ref: '#/components/schemas/RecipeProvider'
          description: The default is <code>SERVICE</code>.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token returned from the previous call to <code>ListRecipes</code> for getting the next set of recipes (if they exist).
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of recipes to return.
    ListSchemasResponse:
      type: object
      properties:
        schemas:
          $ref: '#/components/schemas/Schemas'
          description: A list of schemas.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token used to get the next set of schemas (if they exist).
    ListSchemasRequest:
      type: object
      title: ListSchemasRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token returned from the previous call to <code>ListSchemas</code> for getting the next set of schemas (if they exist).
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of schemas to return.
    ListSolutionVersionsResponse:
      type: object
      properties:
        solutionVersions:
          $ref: '#/components/schemas/SolutionVersions'
          description: A list of solution versions describing the version properties.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token for getting the next set of solution versions (if they exist).
    ListSolutionVersionsRequest:
      type: object
      title: ListSolutionVersionsRequest
      properties:
        solutionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the solution.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token returned from the previous call to <code>ListSolutionVersions</code> for getting the next set of solution versions (if they exist).
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of solution versions to return.
    ListSolutionsResponse:
      type: object
      properties:
        solutions:
          $ref: '#/components/schemas/Solutions'
          description: A list of the current solutions.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token for getting the next set of solutions (if they exist).
    ListSolutionsRequest:
      type: object
      title: ListSolutionsRequest
      properties:
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token returned from the previous call to <code>ListSolutions</code> for getting the next set of solutions (if they exist).
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of solutions to return.
    StopSolutionVersionCreationRequest:
      type: object
      required:
        - solutionVersionArn
      title: StopSolutionVersionCreationRequest
      properties:
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the solution version you want to stop creating.
    UpdateCampaignResponse:
      type: object
      properties:
        campaignArn:
          $ref: '#/components/schemas/Arn'
          description: The same campaign ARN as given in the request.
    UpdateCampaignRequest:
      type: object
      required:
        - campaignArn
      title: UpdateCampaignRequest
      properties:
        campaignArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the campaign.
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of a new solution version to deploy.
        minProvisionedTPS:
          $ref: '#/components/schemas/TransactionsPerSecond'
          description: Specifies the requested minimum provisioned transactions (recommendations) per second that Amazon Personalize will support.
        campaignConfig:
          $ref: '#/components/schemas/CampaignConfig'
          description: The configuration details of a campaign.
    AccountId:
      type: string
      maxLength: 256
    Name:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
      minLength: 1
      maxLength: 63
    Arn:
      type: string
      pattern: 'arn:([a-z\d-]+):personalize:.*:.*:.+'
      maxLength: 256
    AlgorithmImage:
      type: object
      required:
        - dockerURI
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the algorithm image.
        dockerURI:
          $ref: '#/components/schemas/DockerURI'
          description: The URI of the Docker container for the algorithm image.
      description: Describes an algorithm image.
    HyperParameters:
      type: object
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
    DefaultHyperParameterRanges:
      type: object
      properties:
        integerHyperParameterRanges:
          $ref: '#/components/schemas/DefaultIntegerHyperParameterRanges'
          description: The integer-valued hyperparameters and their default ranges.
        continuousHyperParameterRanges:
          $ref: '#/components/schemas/DefaultContinuousHyperParameterRanges'
          description: The continuous hyperparameters and their default ranges.
        categoricalHyperParameterRanges:
          $ref: '#/components/schemas/DefaultCategoricalHyperParameterRanges'
          description: The categorical hyperparameters and their default ranges.
      description: 'Specifies the hyperparameters and their default ranges. Hyperparameters can be categorical, continuous, or integer-valued.'
    ResourceConfig:
      type: object
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
    TrainingInputMode:
      type: string
      maxLength: 256
    Date:
      type: string
      format: date-time
    Algorithm:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the algorithm.
        algorithmArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the algorithm.
        algorithmImage:
          $ref: '#/components/schemas/AlgorithmImage'
          description: The URI of the Docker container for the algorithm image.
        defaultHyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: Specifies the default hyperparameters.
        defaultHyperParameterRanges:
          $ref: '#/components/schemas/DefaultHyperParameterRanges'
          description: 'Specifies the default hyperparameters, their ranges, and whether they are tunable. A tunable hyperparameter can have its value determined during hyperparameter optimization (HPO).'
        defaultResourceConfig:
          $ref: '#/components/schemas/ResourceConfig'
          description: Specifies the default maximum number of training jobs and parallel training jobs.
        trainingInputMode:
          $ref: '#/components/schemas/TrainingInputMode'
          description: The training input mode.
        roleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the role.
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the algorithm was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the algorithm was last updated.
      description: Describes a custom algorithm.
    DockerURI:
      type: string
      maxLength: 256
    ArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      maxItems: 100
    MetricName:
      type: string
      maxLength: 256
    AutoMLConfig:
      type: object
      properties:
        metricName:
          $ref: '#/components/schemas/MetricName'
          description: The metric to optimize.
        recipeList:
          $ref: '#/components/schemas/ArnList'
          description: The list of candidate recipes.
      description: 'When the solution performs AutoML (<code>performAutoML</code> is true in <a>CreateSolution</a>), Amazon Personalize determines which recipe, from the specified list, optimizes the given metric. Amazon Personalize then uses that recipe for the solution.'
    AutoMLResult:
      type: object
      properties:
        bestRecipeArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the best recipe.
      description: 'When the solution performs AutoML (<code>performAutoML</code> is true in <a>CreateSolution</a>), specifies the recipe that best optimized the specified metric.'
    AvroSchema:
      type: string
      maxLength: 10000
    FailureReason:
      type: string
    NumBatchResults:
      type: integer
    BatchInferenceJobInput:
      type: object
      required:
        - s3DataSource
      properties:
        s3DataSource:
          $ref: '#/components/schemas/S3DataConfig'
          description: The URI of the Amazon S3 location that contains your input data. The Amazon S3 bucket must be in the same region as the API endpoint you are calling.
      description: The input configuration of a batch inference job.
    BatchInferenceJobOutput:
      type: object
      required:
        - s3DataDestination
      properties:
        s3DataDestination:
          $ref: '#/components/schemas/S3DataConfig'
          description: Information on the Amazon S3 bucket in which the batch inference job's output is stored.
      description: The output configuration parameters of a batch inference job.
    BatchInferenceJobConfig:
      type: object
      properties:
        itemExplorationConfig:
          $ref: '#/components/schemas/HyperParameters'
          description: 'A string to string map specifying the exploration configuration hyperparameters, including <code>explorationWeight</code> and <code>explorationItemAgeCutOff</code>, you want to use to configure the amount of item exploration Amazon Personalize uses when recommending items. See <a href="https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-new-item-USER_PERSONALIZATION.html">User-Personalization</a>.'
      description: The configuration details of a batch inference job.
    RoleArn:
      type: string
      pattern: 'arn:([a-z\d-]+):iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+'
      maxLength: 256
    Status:
      type: string
      maxLength: 256
    BatchInferenceJob:
      type: object
      properties:
        jobName:
          $ref: '#/components/schemas/Name'
          description: The name of the batch inference job.
        batchInferenceJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the batch inference job.
        filterArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the filter used on the batch inference job.
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the batch inference job failed, the reason for the failure.'
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the solution version from which the batch inference job was created.
        numResults:
          $ref: '#/components/schemas/NumBatchResults'
          description: The number of recommendations generated by the batch inference job. This number includes the error messages generated for failed input records.
        jobInput:
          $ref: '#/components/schemas/BatchInferenceJobInput'
          description: The Amazon S3 path that leads to the input data used to generate the batch inference job.
        jobOutput:
          $ref: '#/components/schemas/BatchInferenceJobOutput'
          description: The Amazon S3 bucket that contains the output data generated by the batch inference job.
        batchInferenceJobConfig:
          $ref: '#/components/schemas/BatchInferenceJobConfig'
          description: A string to string map of the configuration details of a batch inference job.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the Amazon Identity and Access Management (IAM) role that requested the batch inference job.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the batch inference job. The status is one of the following values:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>IN PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The time at which the batch inference job was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The time at which the batch inference job was last updated.
      description: Contains information on a batch inference job.
    S3DataConfig:
      type: object
      required:
        - path
      properties:
        path:
          $ref: '#/components/schemas/S3Location'
          description: The file path of the Amazon S3 bucket.
        kmsKeyArn:
          $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of the Key Management Service (KMS) key that Amazon Personalize uses to encrypt or decrypt the input and output files of a batch inference job.
      description: The configuration details of an Amazon S3 input or output bucket.
    BatchInferenceJobSummary:
      type: object
      properties:
        batchInferenceJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the batch inference job.
        jobName:
          $ref: '#/components/schemas/Name'
          description: The name of the batch inference job.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the batch inference job. The status is one of the following values:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>IN PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The time at which the batch inference job was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The time at which the batch inference job was last updated.
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the batch inference job failed, the reason for the failure.'
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the solution version used by the batch inference job.
      description: A truncated version of the <a>BatchInferenceJob</a> datatype. The <a>ListBatchInferenceJobs</a> operation returns a list of batch inference job summaries.
    BatchInferenceJobs:
      type: array
      items:
        $ref: '#/components/schemas/BatchInferenceJobSummary'
      maxItems: 100
    Boolean:
      type: boolean
    TransactionsPerSecond:
      type: integer
      minimum: 1
    CampaignConfig:
      type: object
      properties:
        itemExplorationConfig:
          $ref: '#/components/schemas/HyperParameters'
          description: 'A string to string map specifying the exploration configuration hyperparameters, including <code>explorationWeight</code> and <code>explorationItemAgeCutOff</code>, you want to use to configure the amount of item exploration Amazon Personalize uses when recommending items. Provide <code>itemExplorationConfig</code> data only if your solution uses the <a href="https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-new-item-USER_PERSONALIZATION.html">User-Personalization</a> recipe.'
      description: The configuration details of a campaign.
    CampaignUpdateSummary:
      type: object
      properties:
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the deployed solution version.
        minProvisionedTPS:
          $ref: '#/components/schemas/TransactionsPerSecond'
          description: Specifies the requested minimum provisioned transactions (recommendations) per second that Amazon Personalize will support.
        campaignConfig:
          $ref: '#/components/schemas/CampaignConfig'
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the campaign update.</p> <p>A campaign update can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If a campaign update fails, the reason behind the failure.'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the campaign update was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the campaign update was last updated.
      description: 'Provides a summary of the properties of a campaign update. For a complete listing, call the <a>DescribeCampaign</a> API.'
    Campaign:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the campaign.
        campaignArn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) of the campaign. '
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of a specific version of the solution.
        minProvisionedTPS:
          $ref: '#/components/schemas/TransactionsPerSecond'
          description: Specifies the requested minimum provisioned transactions (recommendations) per second.
        campaignConfig:
          $ref: '#/components/schemas/CampaignConfig'
          description: The configuration details of a campaign.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the campaign.</p> <p>A campaign can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If a campaign fails, the reason behind the failure.'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix format) that the campaign was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix format) that the campaign was last updated.
        latestCampaignUpdate:
          $ref: '#/components/schemas/CampaignUpdateSummary'
      description: 'Describes a deployed solution version, otherwise known as a campaign. For more information on campaigns, see <a>CreateCampaign</a>.'
    CampaignSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the campaign.
        campaignArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the campaign.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the campaign.</p> <p>A campaign can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the campaign was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the campaign was last updated.
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If a campaign fails, the reason behind the failure.'
      description: 'Provides a summary of the properties of a campaign. For a complete listing, call the <a>DescribeCampaign</a> API.'
    Campaigns:
      type: array
      items:
        $ref: '#/components/schemas/CampaignSummary'
      maxItems: 100
    ParameterName:
      type: string
      maxLength: 256
    CategoricalValues:
      type: array
      items:
        $ref: '#/components/schemas/CategoricalValue'
      maxItems: 100
    CategoricalHyperParameterRange:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ParameterName'
          description: The name of the hyperparameter.
        values:
          $ref: '#/components/schemas/CategoricalValues'
          description: A list of the categories for the hyperparameter.
      description: Provides the name and range of a categorical hyperparameter.
    CategoricalHyperParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/CategoricalHyperParameterRange'
      maxItems: 100
    CategoricalValue:
      type: string
      maxLength: 1000
    ContinuousMinValue:
      type: number
      format: double
      minimum: -1000000
    ContinuousMaxValue:
      type: number
      format: double
      minimum: -1000000
    ContinuousHyperParameterRange:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ParameterName'
          description: The name of the hyperparameter.
        minValue:
          $ref: '#/components/schemas/ContinuousMinValue'
          description: The minimum allowable value for the hyperparameter.
        maxValue:
          $ref: '#/components/schemas/ContinuousMaxValue'
          description: The maximum allowable value for the hyperparameter.
      description: Provides the name and range of a continuous hyperparameter.
    ContinuousHyperParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/ContinuousHyperParameterRange'
      maxItems: 100
    IngestionMode:
      type: string
      enum:
        - BULK
        - PUT
        - ALL
    DatasetExportJobOutput:
      type: object
      required:
        - s3DataDestination
      properties:
        s3DataDestination:
          $ref: '#/components/schemas/S3DataConfig'
      description: The output configuration parameters of a dataset export job.
    KmsKeyArn:
      type: string
      pattern: 'arn:aws.*:kms:.*:[0-9]{12}:key/.*'
    DataSource:
      type: object
      properties:
        dataLocation:
          $ref: '#/components/schemas/S3Location'
          description: '<p>The path to the Amazon S3 bucket where the data that you want to upload to your dataset is stored. For example: </p> <p> <code>s3://bucket-name/folder-name/</code> </p>'
      description: Describes the data source that contains the data to upload to a dataset.
    DatasetType:
      type: string
      maxLength: 256
    TrackingId:
      type: string
      maxLength: 256
    FilterExpression:
      type: string
      minLength: 1
      maxLength: 2500
      format: password
    PerformAutoML:
      type: boolean
    EventType:
      type: string
      maxLength: 256
    SolutionConfig:
      type: object
      properties:
        eventValueThreshold:
          $ref: '#/components/schemas/EventValueThreshold'
          description: Only events with a value greater than or equal to this threshold are used for training a model.
        hpoConfig:
          $ref: '#/components/schemas/HPOConfig'
          description: Describes the properties for hyperparameter optimization (HPO).
        algorithmHyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: Lists the hyperparameter names and ranges.
        featureTransformationParameters:
          $ref: '#/components/schemas/FeatureTransformationParameters'
          description: Lists the feature transformation parameters.
        autoMLConfig:
          $ref: '#/components/schemas/AutoMLConfig'
          description: The <a>AutoMLConfig</a> object containing a list of recipes to search when AutoML is performed.
        optimizationObjective:
          $ref: '#/components/schemas/OptimizationObjective'
          description: 'Describes the additional objective for the solution, such as maximizing streaming minutes or increasing revenue. For more information see <a href="https://docs.aws.amazon.com/personalize/latest/dg/optimizing-solution-for-objective.html">Optimizing a solution</a>.'
      description: Describes the configuration properties for the solution.
    TrainingMode:
      type: string
      enum:
        - FULL
        - UPDATE
    S3Location:
      type: string
      pattern: '(s3|http|https)://.+'
      maxLength: 256
    Dataset:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset.
        datasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset that you want metadata for.
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group.
        datasetType:
          $ref: '#/components/schemas/DatasetType'
          description: '<p>One of the following values:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul>'
        schemaArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the associated schema.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the dataset.</p> <p>A dataset can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The creation date and time (in Unix time) of the dataset.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: A time stamp that shows when the dataset was updated.
      description: Provides metadata for a dataset.
    DatasetExportJob:
      type: object
      properties:
        jobName:
          $ref: '#/components/schemas/Name'
          description: The name of the export job.
        datasetExportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset export job.
        datasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset to export.
        ingestionMode:
          $ref: '#/components/schemas/IngestionMode'
          description: 'The data to export, based on how you imported the data. You can choose to export <code>BULK</code> data that you imported using a dataset import job, <code>PUT</code> data that you imported incrementally (using the console, PutEvents, PutUsers and PutItems operations), or <code>ALL</code> for both types. The default value is <code>PUT</code>. '
        roleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the IAM service role that has permissions to add data to your output Amazon S3 bucket.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the dataset export job.</p> <p>A dataset export job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
        jobOutput:
          $ref: '#/components/schemas/DatasetExportJobOutput'
          description: '<p>The path to the Amazon S3 bucket where the job''s output is stored. For example:</p> <p> <code>s3://bucket-name/folder-name/</code> </p>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The creation date and time (in Unix time) of the dataset export job.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) the status of the dataset export job was last updated.
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If a dataset export job fails, provides the reason why.'
      description: '<p>Describes a job that exports a dataset to an Amazon S3 bucket. For more information, see <a>CreateDatasetExportJob</a>.</p> <p>A dataset export job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
    DatasetExportJobSummary:
      type: object
      properties:
        datasetExportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset export job.
        jobName:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset export job.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the dataset export job.</p> <p>A dataset export job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the dataset export job was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the dataset export job status was last updated.
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If a dataset export job fails, the reason behind the failure.'
      description: 'Provides a summary of the properties of a dataset export job. For a complete listing, call the <a>DescribeDatasetExportJob</a> API.'
    DatasetExportJobs:
      type: array
      items:
        $ref: '#/components/schemas/DatasetExportJobSummary'
      maxItems: 100
    DatasetGroup:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset group.
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The current status of the dataset group.</p> <p>A dataset group can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING</p> </li> </ul>'
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role that has permissions to create the dataset group.
        kmsKeyArn:
          $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of the Key Management Service (KMS) key used to encrypt the datasets.
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The creation date and time (in Unix time) of the dataset group.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The last update date and time (in Unix time) of the dataset group.
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If creating a dataset group fails, provides the reason why.'
      description: '<p>A dataset group is a collection of related datasets (Interactions, User, and Item). You create a dataset group by calling <a>CreateDatasetGroup</a>. You then create a dataset and add it to a dataset group by calling <a>CreateDataset</a>. The dataset group is used to create and train a solution by calling <a>CreateSolution</a>. A dataset group can contain only one of each type of dataset.</p> <p>You can specify an Key Management Service (KMS) key to encrypt the datasets in the group.</p>'
    DatasetGroupSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset group.
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the dataset group.</p> <p>A dataset group can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the dataset group was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the dataset group was last updated.
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If creating a dataset group fails, the reason behind the failure.'
      description: 'Provides a summary of the properties of a dataset group. For a complete listing, call the <a>DescribeDatasetGroup</a> API.'
    DatasetGroups:
      type: array
      items:
        $ref: '#/components/schemas/DatasetGroupSummary'
      maxItems: 100
    DatasetImportJob:
      type: object
      properties:
        jobName:
          $ref: '#/components/schemas/Name'
          description: The name of the import job.
        datasetImportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset import job.
        datasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset that receives the imported data.
        dataSource:
          $ref: '#/components/schemas/DataSource'
          description: The Amazon S3 bucket that contains the training data to import.
        roleArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the dataset import job.</p> <p>A dataset import job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The creation date and time (in Unix time) of the dataset import job.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) the dataset was last updated.
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If a dataset import job fails, provides the reason why.'
      description: '<p>Describes a job that imports training data from a data source (Amazon S3 bucket) to an Amazon Personalize dataset. For more information, see <a>CreateDatasetImportJob</a>.</p> <p>A dataset import job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
    DatasetImportJobSummary:
      type: object
      properties:
        datasetImportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset import job.
        jobName:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset import job.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the dataset import job.</p> <p>A dataset import job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the dataset import job was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the dataset import job status was last updated.
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If a dataset import job fails, the reason behind the failure.'
      description: 'Provides a summary of the properties of a dataset import job. For a complete listing, call the <a>DescribeDatasetImportJob</a> API.'
    DatasetImportJobs:
      type: array
      items:
        $ref: '#/components/schemas/DatasetImportJobSummary'
      maxItems: 100
    DatasetSchema:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the schema.
        schemaArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the schema.
        schema:
          $ref: '#/components/schemas/AvroSchema'
          description: The schema.
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the schema was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the schema was last updated.
      description: 'Describes the schema for a dataset. For more information on schemas, see <a>CreateSchema</a>.'
    DatasetSchemaSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the schema.
        schemaArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the schema.
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the schema was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the schema was last updated.
      description: 'Provides a summary of the properties of a dataset schema. For a complete listing, call the <a>DescribeSchema</a> API.'
    DatasetSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset.
        datasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
        datasetType:
          $ref: '#/components/schemas/DatasetType'
          description: '<p>The dataset type. One of the following values:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> <li> <p>Event-Interactions</p> </li> </ul>'
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the dataset.</p> <p>A dataset can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the dataset was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the dataset was last updated.
      description: 'Provides a summary of the properties of a dataset. For a complete listing, call the <a>DescribeDataset</a> API.'
    Datasets:
      type: array
      items:
        $ref: '#/components/schemas/DatasetSummary'
      maxItems: 100
    Tunable:
      type: boolean
    DefaultCategoricalHyperParameterRange:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ParameterName'
          description: The name of the hyperparameter.
        values:
          $ref: '#/components/schemas/CategoricalValues'
          description: A list of the categories for the hyperparameter.
        isTunable:
          $ref: '#/components/schemas/Tunable'
          description: Whether the hyperparameter is tunable.
      description: Provides the name and default range of a categorical hyperparameter and whether the hyperparameter is tunable. A tunable hyperparameter can have its value determined during hyperparameter optimization (HPO).
    DefaultCategoricalHyperParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/DefaultCategoricalHyperParameterRange'
      maxItems: 100
    DefaultContinuousHyperParameterRange:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ParameterName'
          description: The name of the hyperparameter.
        minValue:
          $ref: '#/components/schemas/ContinuousMinValue'
          description: The minimum allowable value for the hyperparameter.
        maxValue:
          $ref: '#/components/schemas/ContinuousMaxValue'
          description: The maximum allowable value for the hyperparameter.
        isTunable:
          $ref: '#/components/schemas/Tunable'
          description: Whether the hyperparameter is tunable.
      description: Provides the name and default range of a continuous hyperparameter and whether the hyperparameter is tunable. A tunable hyperparameter can have its value determined during hyperparameter optimization (HPO).
    DefaultContinuousHyperParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/DefaultContinuousHyperParameterRange'
      maxItems: 100
    DefaultIntegerHyperParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/DefaultIntegerHyperParameterRange'
      maxItems: 100
    IntegerMinValue:
      type: integer
      minimum: -1000000
    IntegerMaxValue:
      type: integer
      maximum: 1000000
    DefaultIntegerHyperParameterRange:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ParameterName'
          description: The name of the hyperparameter.
        minValue:
          $ref: '#/components/schemas/IntegerMinValue'
          description: The minimum allowable value for the hyperparameter.
        maxValue:
          $ref: '#/components/schemas/IntegerMaxValue'
          description: The maximum allowable value for the hyperparameter.
        isTunable:
          $ref: '#/components/schemas/Tunable'
          description: Indicates whether the hyperparameter is tunable.
      description: Provides the name and default range of a integer-valued hyperparameter and whether the hyperparameter is tunable. A tunable hyperparameter can have its value determined during hyperparameter optimization (HPO).
    EventTracker:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the event tracker.
        eventTrackerArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the event tracker.
        accountId:
          $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account that owns the event tracker.
        trackingId:
          $ref: '#/components/schemas/TrackingId'
          description: 'The ID of the event tracker. Include this ID in requests to the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html">PutEvents</a> API.'
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group that receives the event data.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the event tracker.</p> <p>An event tracker can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix format) that the event tracker was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the event tracker was last updated.
      description: Provides information about an event tracker.
    FeatureTransformation:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the feature transformation.
        featureTransformationArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the FeatureTransformation object.
        defaultParameters:
          $ref: '#/components/schemas/FeaturizationParameters'
          description: Provides the default parameters for feature transformation.
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The creation date and time (in Unix time) of the feature transformation.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The last update date and time (in Unix time) of the feature transformation.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the feature transformation.</p> <p>A feature transformation can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
      description: Provides feature transformation information. Feature transformation is the process of modifying raw input data into a form more suitable for model training.
    Filter:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the filter.
        filterArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the filter.
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The time at which the filter was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The time at which the filter was last updated.
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset group to which the filter belongs.
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the filter failed, the reason for its failure.'
        filterExpression:
          $ref: '#/components/schemas/FilterExpression'
          description: 'Specifies the type of item interactions to filter out of recommendation results. The filter expression must follow specific format rules. For information about filter expression structure and syntax, see <a>filter-expressions</a>.'
        status:
          $ref: '#/components/schemas/Status'
          description: The status of the filter.
      description: 'Contains information on a recommendation filter, including its ARN, status, and filter expression.'
    Recipe:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the recipe.
        recipeArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the recipe.
        algorithmArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the algorithm that Amazon Personalize uses to train the model.
        featureTransformationArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the FeatureTransformation object.
        status:
          $ref: '#/components/schemas/Status'
          description: The status of the recipe.
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the recipe.
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix format) that the recipe was created.
        recipeType:
          $ref: '#/components/schemas/RecipeType'
          description: '<p>One of the following values:</p> <ul> <li> <p>PERSONALIZED_RANKING</p> </li> <li> <p>RELATED_ITEMS</p> </li> <li> <p>USER_PERSONALIZATION</p> </li> </ul>'
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix format) that the recipe was last updated.
      description: 'Provides information about a recipe. Each recipe provides an algorithm that Amazon Personalize uses in model training when you use the <a>CreateSolution</a> operation. '
    Solution:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the solution.
        solutionArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the solution.
        performHPO:
          $ref: '#/components/schemas/PerformHPO'
          description: Whether to perform hyperparameter optimization (HPO) on the chosen recipe. The default is <code>false</code>.
        performAutoML:
          $ref: '#/components/schemas/PerformAutoML'
          description: 'When true, Amazon Personalize performs a search for the best USER_PERSONALIZATION recipe from the list specified in the solution configuration (<code>recipeArn</code> must not be specified). When false (the default), Amazon Personalize uses <code>recipeArn</code> for training.'
        recipeArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the recipe used to create the solution.
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group that provides the training data.
        eventType:
          $ref: '#/components/schemas/EventType'
          description: 'The event type (for example, ''click'' or ''like'') that is used for training the model. If no <code>eventType</code> is provided, Amazon Personalize uses all interactions for training with equal weight regardless of type.'
        solutionConfig:
          $ref: '#/components/schemas/SolutionConfig'
          description: Describes the configuration properties for the solution.
        autoMLResult:
          $ref: '#/components/schemas/AutoMLResult'
          description: 'When <code>performAutoML</code> is true, specifies the best recipe found.'
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the solution.</p> <p>A solution can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The creation date and time (in Unix time) of the solution.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the solution was last updated.
        latestSolutionVersion:
          $ref: '#/components/schemas/SolutionVersionSummary'
          description: 'Describes the latest version of the solution, including the status and the ARN.'
      description: An object that provides information about a solution. A solution is a trained model that can be deployed as a campaign.
    SolutionVersion:
      type: object
      properties:
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the solution version.
        solutionArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the solution.
        performHPO:
          $ref: '#/components/schemas/PerformHPO'
          description: Whether to perform hyperparameter optimization (HPO) on the chosen recipe. The default is <code>false</code>.
        performAutoML:
          $ref: '#/components/schemas/PerformAutoML'
          description: 'When true, Amazon Personalize searches for the most optimal recipe according to the solution configuration. When false (the default), Amazon Personalize uses <code>recipeArn</code>.'
        recipeArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the recipe used in the solution.
        eventType:
          $ref: '#/components/schemas/EventType'
          description: 'The event type (for example, ''click'' or ''like'') that is used for training the model.'
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group providing the training data.
        solutionConfig:
          $ref: '#/components/schemas/SolutionConfig'
          description: Describes the configuration properties for the solution.
        trainingHours:
          $ref: '#/components/schemas/TrainingHours'
          description: The time used to train the model. You are billed for the time it takes to train a model. This field is visible only after Amazon Personalize successfully trains a model.
        trainingMode:
          $ref: '#/components/schemas/TrainingMode'
          description: '<p>The scope of training to be performed when creating the solution version. The <code>FULL</code> option trains the solution version based on the entirety of the input solution''s training data, while the <code>UPDATE</code> option processes only the data that has changed in comparison to the input solution. Choose <code>UPDATE</code> when you want to incrementally update your solution version instead of creating an entirely new one.</p> <important> <p>The <code>UPDATE</code> option can only be used when you already have an active solution version created from the input solution using the <code>FULL</code> option and the input solution was trained with the <a href="https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-new-item-USER_PERSONALIZATION.html">User-Personalization</a> recipe or the <a href="https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-hrnn-coldstart.html">HRNN-Coldstart</a> recipe.</p> </important>'
        tunedHPOParams:
          $ref: '#/components/schemas/TunedHPOParams'
          description: 'If hyperparameter optimization was performed, contains the hyperparameter values of the best performing model.'
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the solution version.</p> <p>A solution version can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING</p> </li> <li> <p>CREATE IN_PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p> </li> <li> <p>CREATE STOPPING</p> </li> <li> <p>CREATE STOPPED</p> </li> </ul>'
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If training a solution version fails, the reason for the failure.'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that this version of the solution was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the solution was last updated.
      description: An object that provides information about a specific version of a <a>Solution</a>.
    Description:
      type: string
    EventTrackerSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the event tracker.
        eventTrackerArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the event tracker.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the event tracker.</p> <p>An event tracker can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the event tracker was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the event tracker was last updated.
      description: 'Provides a summary of the properties of an event tracker. For a complete listing, call the <a>DescribeEventTracker</a> API.'
    EventTrackers:
      type: array
      items:
        $ref: '#/components/schemas/EventTrackerSummary'
      maxItems: 100
    EventValueThreshold:
      type: string
      maxLength: 256
    FeaturizationParameters:
      type: object
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
    ParameterValue:
      type: string
      maxLength: 1000
    FeatureTransformationParameters:
      type: object
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
    FilterSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the filter.
        filterArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the filter.
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The time at which the filter was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The time at which the filter was last updated.
        datasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset group to which the filter belongs.
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the filter failed, the reason for the failure.'
        status:
          $ref: '#/components/schemas/Status'
          description: The status of the filter.
      description: A short summary of a filter's attributes.
    Filters:
      type: array
      items:
        $ref: '#/components/schemas/FilterSummary'
      maxItems: 100
    Metrics:
      type: object
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/MetricValue'
    HPOObjective:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/HPOObjectiveType'
          description: The type of the metric. Valid values are <code>Maximize</code> and <code>Minimize</code>.
        metricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metric.
        metricRegex:
          $ref: '#/components/schemas/MetricRegex'
          description: A regular expression for finding the metric in the training job logs.
      description: <p>The metric to optimize during hyperparameter optimization (HPO).</p> <note> <p>Amazon Personalize doesn't support configuring the <code>hpoObjective</code> at this time.</p> </note>
    HPOResourceConfig:
      type: object
      properties:
        maxNumberOfTrainingJobs:
          $ref: '#/components/schemas/HPOResource'
          description: The maximum number of training jobs when you create a solution version. The maximum value for <code>maxNumberOfTrainingJobs</code> is <code>40</code>.
        maxParallelTrainingJobs:
          $ref: '#/components/schemas/HPOResource'
          description: The maximum number of parallel training jobs when you create a solution version. The maximum value for <code>maxParallelTrainingJobs</code> is <code>10</code>.
      description: Describes the resource configuration for hyperparameter optimization (HPO).
    HyperParameterRanges:
      type: object
      properties:
        integerHyperParameterRanges:
          $ref: '#/components/schemas/IntegerHyperParameterRanges'
          description: The integer-valued hyperparameters and their ranges.
        continuousHyperParameterRanges:
          $ref: '#/components/schemas/ContinuousHyperParameterRanges'
          description: The continuous hyperparameters and their ranges.
        categoricalHyperParameterRanges:
          $ref: '#/components/schemas/CategoricalHyperParameterRanges'
          description: The categorical hyperparameters and their ranges.
      description: 'Specifies the hyperparameters and their ranges. Hyperparameters can be categorical, continuous, or integer-valued.'
    HPOConfig:
      type: object
      properties:
        hpoObjective:
          $ref: '#/components/schemas/HPOObjective'
          description: <p>The metric to optimize during HPO.</p> <note> <p>Amazon Personalize doesn't support configuring the <code>hpoObjective</code> at this time.</p> </note>
        hpoResourceConfig:
          $ref: '#/components/schemas/HPOResourceConfig'
          description: Describes the resource configuration for HPO.
        algorithmHyperParameterRanges:
          $ref: '#/components/schemas/HyperParameterRanges'
          description: The hyperparameters and their allowable ranges.
      description: Describes the properties for hyperparameter optimization (HPO).
    HPOObjectiveType:
      type: string
      maxLength: 256
    MetricRegex:
      type: string
      maxLength: 256
    HPOResource:
      type: string
      maxLength: 256
    IntegerHyperParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/IntegerHyperParameterRange'
      maxItems: 100
    IntegerHyperParameterRange:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ParameterName'
          description: The name of the hyperparameter.
        minValue:
          $ref: '#/components/schemas/IntegerMinValue'
          description: The minimum allowable value for the hyperparameter.
        maxValue:
          $ref: '#/components/schemas/IntegerMaxValue'
          description: The maximum allowable value for the hyperparameter.
      description: Provides the name and range of an integer-valued hyperparameter.
    ItemAttribute:
      type: string
      minLength: 1
      maxLength: 150
    NextToken:
      type: string
      maxLength: 1300
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    RecipeProvider:
      type: string
      enum:
        - SERVICE
    Recipes:
      type: array
      items:
        $ref: '#/components/schemas/RecipeSummary'
      maxItems: 100
    Schemas:
      type: array
      items:
        $ref: '#/components/schemas/DatasetSchemaSummary'
      maxItems: 100
    SolutionVersions:
      type: array
      items:
        $ref: '#/components/schemas/SolutionVersionSummary'
      maxItems: 100
    Solutions:
      type: array
      items:
        $ref: '#/components/schemas/SolutionSummary'
      maxItems: 100
    MetricValue:
      type: number
      format: double
    ObjectiveSensitivity:
      type: string
      enum:
        - LOW
        - MEDIUM
        - HIGH
        - 'OFF'
    OptimizationObjective:
      type: object
      properties:
        itemAttribute:
          $ref: '#/components/schemas/ItemAttribute'
          description: 'The numerical metadata column in an Items dataset related to the optimization objective. For example, VIDEO_LENGTH (to maximize streaming minutes), or PRICE (to maximize revenue).'
        objectiveSensitivity:
          $ref: '#/components/schemas/ObjectiveSensitivity'
          description: Specifies how Amazon Personalize balances the importance of your optimization objective versus relevance.
      description: 'Describes the additional objective for the solution, such as maximizing streaming minutes or increasing revenue. For more information see <a href="https://docs.aws.amazon.com/personalize/latest/dg/optimizing-solution-for-objective.html">Optimizing a solution</a>.'
    PerformHPO:
      type: boolean
    RecipeType:
      type: string
      maxLength: 256
    RecipeSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the recipe.
        recipeArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the recipe.
        status:
          $ref: '#/components/schemas/Status'
          description: The status of the recipe.
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the recipe was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the recipe was last updated.
      description: 'Provides a summary of the properties of a recipe. For a complete listing, call the <a>DescribeRecipe</a> API.'
    SolutionVersionSummary:
      type: object
      properties:
        solutionVersionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the solution version.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the solution version.</p> <p>A solution version can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that this version of a solution was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the solution version was last updated.
        failureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If a solution version fails, the reason behind the failure.'
      description: 'Provides a summary of the properties of a solution version. For a complete listing, call the <a>DescribeSolutionVersion</a> API.'
    SolutionSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the solution.
        solutionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the solution.
        status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the solution.</p> <p>A solution can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
        creationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the solution was created.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time (in Unix time) that the solution was last updated.
      description: 'Provides a summary of the properties of a solution. For a complete listing, call the <a>DescribeSolution</a> API.'
    TrainingHours:
      type: number
      format: double
      minimum: 0
    TunedHPOParams:
      type: object
      properties:
        algorithmHyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: A list of the hyperparameter values of the best performing model.
      description: 'If hyperparameter optimization (HPO) was performed, contains the hyperparameter values of the best performing model.'
security:
  - hmac: []
