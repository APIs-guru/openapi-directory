openapi: 3.0.0
info:
  version: '2010-12-01'
  x-release: v4
  title: AWS Elastic Beanstalk
  description: '<fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href="http://aws.amazon.com/elasticbeanstalk/">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href="https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: elasticbeanstalk
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticbeanstalk-2010-12-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/elasticbeanstalk/'
servers:
  - url: 'http://elasticbeanstalk.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Elastic Beanstalk multi-region endpoint
  - url: 'https://elasticbeanstalk.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Elastic Beanstalk multi-region endpoint
  - url: 'http://elasticbeanstalk.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Elastic Beanstalk endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://elasticbeanstalk.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Elastic Beanstalk endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#Action=AbortEnvironmentUpdate:
    get:
      x-aws-operation-name: AbortEnvironmentUpdate
      operationId: GET_AbortEnvironmentUpdate
      description: Cancels in-progress environment configuration update or application version deployment.
      responses:
        '200':
          description: Success
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: This specifies the ID of the environment with the in-progress update that you want to cancel.
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: This specifies the name of the environment with the in-progress update that you want to cancel.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AbortEnvironmentUpdate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AbortEnvironmentUpdate
      operationId: POST_AbortEnvironmentUpdate
      description: Cancels in-progress environment configuration update or application version deployment.
      responses:
        '200':
          description: Success
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AbortEnvironmentUpdateMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AbortEnvironmentUpdate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=ApplyEnvironmentManagedAction:
    get:
      x-aws-operation-name: ApplyEnvironmentManagedAction
      operationId: GET_ApplyEnvironmentManagedAction
      description: Applies a scheduled managed action immediately. A managed action can be applied only if its status is <code>Scheduled</code>. Get the status and action ID of a managed action with <a>DescribeEnvironmentManagedActions</a>.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplyEnvironmentManagedActionResult'
        '480':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
        '481':
          description: ManagedActionInvalidStateException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ManagedActionInvalidStateException'
      parameters:
        - name: EnvironmentName
          in: query
          required: false
          description: The name of the target environment.
          schema:
            type: string
        - name: EnvironmentId
          in: query
          required: false
          description: The environment ID of the target environment.
          schema:
            type: string
        - name: ActionId
          in: query
          required: true
          description: The action ID of the scheduled managed action to execute.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ApplyEnvironmentManagedAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ApplyEnvironmentManagedAction
      operationId: POST_ApplyEnvironmentManagedAction
      description: Applies a scheduled managed action immediately. A managed action can be applied only if its status is <code>Scheduled</code>. Get the status and action ID of a managed action with <a>DescribeEnvironmentManagedActions</a>.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplyEnvironmentManagedActionResult'
        '480':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
        '481':
          description: ManagedActionInvalidStateException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ManagedActionInvalidStateException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ApplyEnvironmentManagedActionRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ApplyEnvironmentManagedAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=AssociateEnvironmentOperationsRole:
    get:
      x-aws-operation-name: AssociateEnvironmentOperationsRole
      operationId: GET_AssociateEnvironmentOperationsRole
      description: 'Add or change the operations role used by an environment. After this call is made, Elastic Beanstalk uses the associated operations role for permissions to downstream services during subsequent calls acting on this environment. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.'
      responses:
        '200':
          description: Success
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: EnvironmentName
          in: query
          required: true
          description: The name of the environment to which to set the operations role.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: OperationsRole
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment's operations role.
          schema:
            type: string
            minLength: 1
            maxLength: 256
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AssociateEnvironmentOperationsRole
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateEnvironmentOperationsRole
      operationId: POST_AssociateEnvironmentOperationsRole
      description: 'Add or change the operations role used by an environment. After this call is made, Elastic Beanstalk uses the associated operations role for permissions to downstream services during subsequent calls acting on this environment. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.'
      responses:
        '200':
          description: Success
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateEnvironmentOperationsRoleMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AssociateEnvironmentOperationsRole
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=CheckDNSAvailability:
    get:
      x-aws-operation-name: CheckDNSAvailability
      operationId: GET_CheckDNSAvailability
      description: Checks if the specified CNAME is available.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CheckDNSAvailabilityResultMessage'
      parameters:
        - name: CNAMEPrefix
          in: query
          required: true
          description: The prefix used when this CNAME is reserved.
          schema:
            type: string
            minLength: 4
            maxLength: 63
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CheckDNSAvailability
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CheckDNSAvailability
      operationId: POST_CheckDNSAvailability
      description: Checks if the specified CNAME is available.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CheckDNSAvailabilityResultMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CheckDNSAvailabilityMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CheckDNSAvailability
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=ComposeEnvironments:
    get:
      x-aws-operation-name: ComposeEnvironments
      operationId: GET_ComposeEnvironments
      description: 'Create or update a group of environments that each run a separate component of a single application. Takes a list of version labels that specify application source bundles for each of the environments to create or update. The name of each environment and other required information must be included in the source bundles in an environment manifest named <code>env.yaml</code>. See <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-mgmt-compose.html">Compose Environments</a> for details.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnvironmentDescriptionsMessage'
        '480':
          description: TooManyEnvironmentsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyEnvironmentsException'
        '481':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: ApplicationName
          in: query
          required: false
          description: The name of the application to which the specified source bundles belong.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: GroupName
          in: query
          required: false
          description: 'The name of the group to which the target environments belong. Specify a group name only if the environment name defined in each target environment''s manifest ends with a + (plus) character. See <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment Manifest (env.yaml)</a> for details.'
          schema:
            type: string
            minLength: 1
            maxLength: 19
        - name: VersionLabels
          in: query
          required: false
          description: 'A list of version labels, specifying one or more application source bundles that belong to the target application. Each source bundle must include an environment manifest that specifies the name of the environment and the name of the solution stack to use, and optionally can specify environment links to create.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/VersionLabel'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ComposeEnvironments
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ComposeEnvironments
      operationId: POST_ComposeEnvironments
      description: 'Create or update a group of environments that each run a separate component of a single application. Takes a list of version labels that specify application source bundles for each of the environments to create or update. The name of each environment and other required information must be included in the source bundles in an environment manifest named <code>env.yaml</code>. See <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-mgmt-compose.html">Compose Environments</a> for details.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnvironmentDescriptionsMessage'
        '480':
          description: TooManyEnvironmentsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyEnvironmentsException'
        '481':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ComposeEnvironmentsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ComposeEnvironments
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=CreateApplication:
    get:
      x-aws-operation-name: CreateApplication
      operationId: GET_CreateApplication
      description: Creates an application that has one configuration template named <code>default</code> and no application versions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationDescriptionMessage'
        '480':
          description: TooManyApplicationsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyApplicationsException'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application. Must be unique within your account.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Description
          in: query
          required: false
          description: Your description of the application.
          schema:
            type: string
            maxLength: 200
        - name: ResourceLifecycleConfig
          in: query
          required: false
          description: Specifies an application resource lifecycle configuration to prevent your application from accumulating too many versions.
          schema:
            type: object
            properties:
              ServiceRole:
                $ref: '#/components/schemas/String'
                description: '<p>The ARN of an IAM service role that Elastic Beanstalk has permission to assume.</p> <p>The <code>ServiceRole</code> property is required the first time that you provide a <code>VersionLifecycleConfig</code> for the application in one of the supporting calls (<code>CreateApplication</code> or <code>UpdateApplicationResourceLifecycle</code>). After you provide it once, in either one of the calls, Elastic Beanstalk persists the Service Role with the application, and you don''t need to specify it again in subsequent <code>UpdateApplicationResourceLifecycle</code> calls. You can, however, specify it in subsequent calls to change the Service Role to another value.</p>'
              VersionLifecycleConfig:
                $ref: '#/components/schemas/ApplicationVersionLifecycleConfig'
                description: Defines lifecycle settings for application versions.
            description: 'The resource lifecycle configuration for an application. Defines lifecycle settings for resources that belong to the application, and the service role that AWS Elastic Beanstalk assumes in order to apply lifecycle settings. The version lifecycle configuration defines lifecycle settings for application versions.'
        - name: Tags
          in: query
          required: false
          description: <p>Specifies the tags applied to the application.</p> <p>Elastic Beanstalk applies these tags only to the application. Environments that you create in the application don't inherit the tags.</p>
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Tag'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateApplication
      operationId: POST_CreateApplication
      description: Creates an application that has one configuration template named <code>default</code> and no application versions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationDescriptionMessage'
        '480':
          description: TooManyApplicationsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyApplicationsException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateApplicationMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=CreateApplicationVersion:
    get:
      x-aws-operation-name: CreateApplicationVersion
      operationId: GET_CreateApplicationVersion
      description: '<p>Creates an application version for the specified application. You can create an application version from a source bundle in Amazon S3, a commit in AWS CodeCommit, or the output of an AWS CodeBuild build as follows:</p> <p>Specify a commit in an AWS CodeCommit repository with <code>SourceBuildInformation</code>.</p> <p>Specify a build in an AWS CodeBuild with <code>SourceBuildInformation</code> and <code>BuildConfiguration</code>.</p> <p>Specify a source bundle in S3 with <code>SourceBundle</code> </p> <p>Omit both <code>SourceBuildInformation</code> and <code>SourceBundle</code> to use the default sample application.</p> <note> <p>After you create an application version with a specified Amazon S3 bucket and key location, you can''t change that Amazon S3 location. If you change the Amazon S3 location, you receive an exception when you attempt to launch an environment from the application version.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationVersionDescriptionMessage'
        '480':
          description: TooManyApplicationsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyApplicationsException'
        '481':
          description: TooManyApplicationVersionsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyApplicationVersionsException'
        '482':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '483':
          description: S3LocationNotInServiceRegionException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/S3LocationNotInServiceRegionException'
        '484':
          description: CodeBuildNotInServiceRegionException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CodeBuildNotInServiceRegionException'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: ' The name of the application. If no application is found with this name, and <code>AutoCreateApplication</code> is <code>false</code>, returns an <code>InvalidParameterValue</code> error. '
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: VersionLabel
          in: query
          required: true
          description: '<p>A label identifying this version.</p> <p>Constraint: Must be unique per application. If an application version already exists with this label for the specified application, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Description
          in: query
          required: false
          description: A description of this application version.
          schema:
            type: string
            maxLength: 200
        - name: SourceBuildInformation
          in: query
          required: false
          description: Specify a commit in an AWS CodeCommit Git repository to use as the source code for the application version.
          schema:
            type: object
            required:
              - SourceType
              - SourceRepository
              - SourceLocation
            properties:
              SourceType:
                $ref: '#/components/schemas/SourceType'
                description: <p>The type of repository.</p> <ul> <li> <p> <code>Git</code> </p> </li> <li> <p> <code>Zip</code> </p> </li> </ul>
              SourceRepository:
                $ref: '#/components/schemas/SourceRepository'
                description: <p>Location where the repository is stored.</p> <ul> <li> <p> <code>CodeCommit</code> </p> </li> <li> <p> <code>S3</code> </p> </li> </ul>
              SourceLocation:
                $ref: '#/components/schemas/SourceLocation'
                description: '<p>The location of the source code, as a formatted string, depending on the value of <code>SourceRepository</code> </p> <ul> <li> <p>For <code>CodeCommit</code>, the format is the repository name and commit ID, separated by a forward slash. For example, <code>my-git-repo/265cfa0cf6af46153527f55d6503ec030551f57a</code>.</p> </li> <li> <p>For <code>S3</code>, the format is the S3 bucket name and object key, separated by a forward slash. For example, <code>my-s3-bucket/Folders/my-source-file</code>.</p> </li> </ul>'
            description: Location of the source code for an application version.
        - name: SourceBundle
          in: query
          required: false
          description: '<p>The Amazon S3 bucket and key that identify the location of the source bundle for this version.</p> <note> <p>The Amazon S3 bucket must be in the same region as the environment.</p> </note> <p>Specify a source bundle in S3 or a commit in an AWS CodeCommit repository (with <code>SourceBuildInformation</code>), but not both. If neither <code>SourceBundle</code> nor <code>SourceBuildInformation</code> are provided, Elastic Beanstalk uses a sample application.</p>'
          schema:
            type: object
            properties:
              S3Bucket:
                $ref: '#/components/schemas/S3Bucket'
                description: The Amazon S3 bucket where the data is located.
              S3Key:
                $ref: '#/components/schemas/S3Key'
                description: The Amazon S3 key where the data is located.
            description: The bucket and key of an item stored in Amazon S3.
        - name: BuildConfiguration
          in: query
          required: false
          description: Settings for an AWS CodeBuild build.
          schema:
            type: object
            required:
              - CodeBuildServiceRole
              - Image
            properties:
              ArtifactName:
                $ref: '#/components/schemas/String'
                description: 'The name of the artifact of the CodeBuild build. If provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>-<i>artifact-name</i>.zip. If not provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>.zip. '
              CodeBuildServiceRole:
                $ref: '#/components/schemas/NonEmptyString'
                description: The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
              ComputeType:
                $ref: '#/components/schemas/ComputeType'
                description: '<p>Information about the compute resources the build project will use.</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL: Use up to 3 GB memory and 2 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM: Use up to 7 GB memory and 4 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE: Use up to 15 GB memory and 8 vCPUs for builds</code> </p> </li> </ul>'
              Image:
                $ref: '#/components/schemas/NonEmptyString'
                description: The ID of the Docker image to use for this build project.
              TimeoutInMinutes:
                $ref: '#/components/schemas/BoxedInt'
                description: 'How long in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.'
            description: Settings for an AWS CodeBuild build.
        - name: AutoCreateApplication
          in: query
          required: false
          description: Set to <code>true</code> to create an application with the specified name if it doesn't already exist.
          schema:
            type: boolean
        - name: Process
          in: query
          required: false
          description: '<p>Pre-processes and validates the environment manifest (<code>env.yaml</code>) and configuration files (<code>*.config</code> files in the <code>.ebextensions</code> folder) in the source bundle. Validating configuration files can identify issues prior to deploying the application version to an environment.</p> <p>You must turn processing on for application versions that you create using AWS CodeBuild or AWS CodeCommit. For application versions built from a source bundle in Amazon S3, processing is optional.</p> <note> <p>The <code>Process</code> option validates Elastic Beanstalk configuration files. It doesn''t validate your application''s configuration files, like proxy server or Docker configuration.</p> </note>'
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: <p>Specifies the tags applied to the application version.</p> <p>Elastic Beanstalk applies these tags only to the application version. Environments that use the application version don't inherit the tags.</p>
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Tag'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateApplicationVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateApplicationVersion
      operationId: POST_CreateApplicationVersion
      description: '<p>Creates an application version for the specified application. You can create an application version from a source bundle in Amazon S3, a commit in AWS CodeCommit, or the output of an AWS CodeBuild build as follows:</p> <p>Specify a commit in an AWS CodeCommit repository with <code>SourceBuildInformation</code>.</p> <p>Specify a build in an AWS CodeBuild with <code>SourceBuildInformation</code> and <code>BuildConfiguration</code>.</p> <p>Specify a source bundle in S3 with <code>SourceBundle</code> </p> <p>Omit both <code>SourceBuildInformation</code> and <code>SourceBundle</code> to use the default sample application.</p> <note> <p>After you create an application version with a specified Amazon S3 bucket and key location, you can''t change that Amazon S3 location. If you change the Amazon S3 location, you receive an exception when you attempt to launch an environment from the application version.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationVersionDescriptionMessage'
        '480':
          description: TooManyApplicationsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyApplicationsException'
        '481':
          description: TooManyApplicationVersionsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyApplicationVersionsException'
        '482':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '483':
          description: S3LocationNotInServiceRegionException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/S3LocationNotInServiceRegionException'
        '484':
          description: CodeBuildNotInServiceRegionException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CodeBuildNotInServiceRegionException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateApplicationVersionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateApplicationVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=CreateConfigurationTemplate:
    get:
      x-aws-operation-name: CreateConfigurationTemplate
      operationId: GET_CreateConfigurationTemplate
      description: '<p>Creates an AWS Elastic Beanstalk configuration template, associated with a specific Elastic Beanstalk application. You define application configuration settings in a configuration template. You can then use the configuration template to deploy different versions of the application with the same configuration settings.</p> <p>Templates aren''t associated with any environment. The <code>EnvironmentName</code> response element is always <code>null</code>.</p> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> <li> <p> <a>DescribeConfigurationSettings</a> </p> </li> <li> <p> <a>ListAvailableSolutionStacks</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfigurationSettingsDescription'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
        '482':
          description: TooManyConfigurationTemplatesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyConfigurationTemplatesException'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the Elastic Beanstalk application to associate with this configuration template.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: true
          description: '<p>The name of the configuration template.</p> <p>Constraint: This name must be unique per application.</p>'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: SolutionStackName
          in: query
          required: false
          description: '<p>The name of an Elastic Beanstalk solution stack (platform version) that this configuration uses. For example, <code>64bit Amazon Linux 2013.09 running Tomcat 7 Java 7</code>. A solution stack specifies the operating system, runtime, and application server for a configuration template. It also determines the set of configuration options as well as the possible and default values. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html">Supported Platforms</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.</p> <p>You must specify <code>SolutionStackName</code> if you don''t specify <code>PlatformArn</code>, <code>EnvironmentId</code>, or <code>SourceConfiguration</code>.</p> <p>Use the <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_ListAvailableSolutionStacks.html"> <code>ListAvailableSolutionStacks</code> </a> API to obtain a list of available solution stacks.</p>'
          schema:
            type: string
        - name: PlatformArn
          in: query
          required: false
          description: '<p>The Amazon Resource Name (ARN) of the custom platform. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/custom-platforms.html"> Custom Platforms</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.</p> <note> <p>If you specify <code>PlatformArn</code>, then don''t specify <code>SolutionStackName</code>.</p> </note>'
          schema:
            type: string
        - name: SourceConfiguration
          in: query
          required: false
          description: '<p>An Elastic Beanstalk configuration template to base this one on. If specified, Elastic Beanstalk uses the configuration values from the specified configuration template to create a new configuration.</p> <p>Values specified in <code>OptionSettings</code> override any values obtained from the <code>SourceConfiguration</code>.</p> <p>You must specify <code>SourceConfiguration</code> if you don''t specify <code>PlatformArn</code>, <code>EnvironmentId</code>, or <code>SolutionStackName</code>.</p> <p>Constraint: If both solution stack name and source configuration are specified, the solution stack of the source configuration template must match the specified solution stack name.</p>'
          schema:
            type: object
            properties:
              ApplicationName:
                $ref: '#/components/schemas/ApplicationName'
                description: The name of the application associated with the configuration.
              TemplateName:
                $ref: '#/components/schemas/ConfigurationTemplateName'
                description: The name of the configuration template.
            description: A specification for an environment configuration.
        - name: EnvironmentId
          in: query
          required: false
          description: 'The ID of an environment whose settings you want to use to create the configuration template. You must specify <code>EnvironmentId</code> if you don''t specify <code>PlatformArn</code>, <code>SolutionStackName</code>, or <code>SourceConfiguration</code>.'
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: An optional description for this configuration.
          schema:
            type: string
            maxLength: 200
        - name: OptionSettings
          in: query
          required: false
          description: 'Option values for the Elastic Beanstalk configuration, such as the instance type. If specified, these values override the values obtained from the solution stack or the source configuration template. For a complete list of Elastic Beanstalk configuration options, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html">Option Values</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurationOptionSetting'
        - name: Tags
          in: query
          required: false
          description: Specifies the tags applied to the configuration template.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Tag'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateConfigurationTemplate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateConfigurationTemplate
      operationId: POST_CreateConfigurationTemplate
      description: '<p>Creates an AWS Elastic Beanstalk configuration template, associated with a specific Elastic Beanstalk application. You define application configuration settings in a configuration template. You can then use the configuration template to deploy different versions of the application with the same configuration settings.</p> <p>Templates aren''t associated with any environment. The <code>EnvironmentName</code> response element is always <code>null</code>.</p> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> <li> <p> <a>DescribeConfigurationSettings</a> </p> </li> <li> <p> <a>ListAvailableSolutionStacks</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfigurationSettingsDescription'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
        '482':
          description: TooManyConfigurationTemplatesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyConfigurationTemplatesException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateConfigurationTemplateMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateConfigurationTemplate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=CreateEnvironment:
    get:
      x-aws-operation-name: CreateEnvironment
      operationId: GET_CreateEnvironment
      description: Launches an AWS Elastic Beanstalk environment for the specified application using the specified configuration.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnvironmentDescription'
        '480':
          description: TooManyEnvironmentsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyEnvironmentsException'
        '481':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application that is associated with this environment.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentName
          in: query
          required: false
          description: '<p>A unique name for the environment.</p> <p>Constraint: Must be from 4 to 40 characters in length. The name can contain only letters, numbers, and hyphens. It can''t start or end with a hyphen. This name must be unique within a region in your account. If the specified name already exists in the region, Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>If you don''t specify the <code>CNAMEPrefix</code> parameter, the environment name becomes part of the CNAME, and therefore part of the visible URL for your application.</p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: GroupName
          in: query
          required: false
          description: 'The name of the group to which the target environment belongs. Specify a group name only if the environment''s name is specified in an environment manifest and not with the environment name parameter. See <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment Manifest (env.yaml)</a> for details.'
          schema:
            type: string
            minLength: 1
            maxLength: 19
        - name: Description
          in: query
          required: false
          description: Your description for this environment.
          schema:
            type: string
            maxLength: 200
        - name: CNAMEPrefix
          in: query
          required: false
          description: 'If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name.'
          schema:
            type: string
            minLength: 4
            maxLength: 63
        - name: Tier
          in: query
          required: false
          description: Specifies the tier to use in creating this environment. The environment tier that you choose determines whether Elastic Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles background-processing tasks.
          schema:
            type: object
            properties:
              Name:
                $ref: '#/components/schemas/String'
                description: '<p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>'
              Type:
                $ref: '#/components/schemas/String'
                description: '<p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>'
              Version:
                $ref: '#/components/schemas/String'
                description: '<p>The version of this environment tier. When you don''t set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>'
            description: Describes the properties of an environment tier
        - name: Tags
          in: query
          required: false
          description: Specifies the tags applied to resources in the environment.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Tag'
        - name: VersionLabel
          in: query
          required: false
          description: '<p>The name of the application version to deploy.</p> <p>Default: If not specified, Elastic Beanstalk attempts to deploy the sample application.</p>'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: false
          description: '<p>The name of the Elastic Beanstalk configuration template to use with the environment.</p> <note> <p>If you specify <code>TemplateName</code>, then don''t specify <code>SolutionStackName</code>.</p> </note>'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: SolutionStackName
          in: query
          required: false
          description: '<p>The name of an Elastic Beanstalk solution stack (platform version) to use with the environment. If specified, Elastic Beanstalk sets the configuration values to the default values associated with the specified solution stack. For a list of current solution stacks, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/platforms/platforms-supported.html">Elastic Beanstalk Supported Platforms</a> in the <i>AWS Elastic Beanstalk Platforms</i> guide.</p> <note> <p>If you specify <code>SolutionStackName</code>, don''t specify <code>PlatformArn</code> or <code>TemplateName</code>.</p> </note>'
          schema:
            type: string
        - name: PlatformArn
          in: query
          required: false
          description: '<p>The Amazon Resource Name (ARN) of the custom platform to use with the environment. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/custom-platforms.html">Custom Platforms</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.</p> <note> <p>If you specify <code>PlatformArn</code>, don''t specify <code>SolutionStackName</code>.</p> </note>'
          schema:
            type: string
        - name: OptionSettings
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk sets the specified configuration options to the requested value in the configuration set for the new environment. These override the values obtained from the solution stack or the configuration template.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurationOptionSetting'
        - name: OptionsToRemove
          in: query
          required: false
          description: A list of custom user-defined configuration options to remove from the configuration set for this new environment.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OptionSpecification'
        - name: OperationsRole
          in: query
          required: false
          description: 'The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment''s operations role. If specified, Elastic Beanstalk uses the operations role for permissions to downstream services during this call and during subsequent calls acting on this environment. To specify an operations role, you must have the <code>iam:PassRole</code> permission for the role. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.'
          schema:
            type: string
            minLength: 1
            maxLength: 256
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateEnvironment
      operationId: POST_CreateEnvironment
      description: Launches an AWS Elastic Beanstalk environment for the specified application using the specified configuration.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnvironmentDescription'
        '480':
          description: TooManyEnvironmentsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyEnvironmentsException'
        '481':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=CreatePlatformVersion:
    get:
      x-aws-operation-name: CreatePlatformVersion
      operationId: GET_CreatePlatformVersion
      description: Create a new version of your custom platform.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePlatformVersionResult'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
        '482':
          description: TooManyPlatformsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyPlatformsException'
      parameters:
        - name: PlatformName
          in: query
          required: true
          description: The name of your custom platform.
          schema:
            type: string
        - name: PlatformVersion
          in: query
          required: true
          description: 'The number, such as 1.0.2, for the new platform version.'
          schema:
            type: string
        - name: PlatformDefinitionBundle
          in: query
          required: true
          description: The location of the platform definition archive in Amazon S3.
          schema:
            type: object
            properties:
              S3Bucket:
                $ref: '#/components/schemas/S3Bucket'
                description: The Amazon S3 bucket where the data is located.
              S3Key:
                $ref: '#/components/schemas/S3Key'
                description: The Amazon S3 key where the data is located.
            description: The bucket and key of an item stored in Amazon S3.
        - name: EnvironmentName
          in: query
          required: false
          description: The name of the builder environment.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: OptionSettings
          in: query
          required: false
          description: The configuration option settings to apply to the builder environment.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurationOptionSetting'
        - name: Tags
          in: query
          required: false
          description: <p>Specifies the tags applied to the new platform version.</p> <p>Elastic Beanstalk applies these tags only to the platform version. Environments that you create using the platform version don't inherit the tags.</p>
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Tag'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreatePlatformVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreatePlatformVersion
      operationId: POST_CreatePlatformVersion
      description: Create a new version of your custom platform.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePlatformVersionResult'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
        '482':
          description: TooManyPlatformsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyPlatformsException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreatePlatformVersionRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreatePlatformVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=CreateStorageLocation:
    get:
      x-aws-operation-name: CreateStorageLocation
      operationId: GET_CreateStorageLocation
      description: 'Creates a bucket in Amazon S3 to store application versions, logs, and other files used by Elastic Beanstalk environments. The Elastic Beanstalk console and EB CLI call this API the first time you create an environment in a region. If the storage location already exists, <code>CreateStorageLocation</code> still returns the bucket name but does not create a new bucket.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateStorageLocationResultMessage'
        '480':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
        '481':
          description: S3SubscriptionRequiredException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/S3SubscriptionRequiredException'
        '482':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateStorageLocation
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateStorageLocation
      operationId: POST_CreateStorageLocation
      description: 'Creates a bucket in Amazon S3 to store application versions, logs, and other files used by Elastic Beanstalk environments. The Elastic Beanstalk console and EB CLI call this API the first time you create an environment in a region. If the storage location already exists, <code>CreateStorageLocation</code> still returns the bucket name but does not create a new bucket.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateStorageLocationResultMessage'
        '480':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
        '481':
          description: S3SubscriptionRequiredException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/S3SubscriptionRequiredException'
        '482':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateStorageLocation
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DeleteApplication:
    get:
      x-aws-operation-name: DeleteApplication
      operationId: GET_DeleteApplication
      description: <p>Deletes the specified application along with all associated versions and configurations. The application versions will not be deleted from your Amazon S3 bucket.</p> <note> <p>You cannot delete an application that has a running environment.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OperationInProgressException'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application to delete.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TerminateEnvByForce
          in: query
          required: false
          description: 'When set to true, running environments will be terminated before deleting the application.'
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteApplication
      operationId: POST_DeleteApplication
      description: <p>Deletes the specified application along with all associated versions and configurations. The application versions will not be deleted from your Amazon S3 bucket.</p> <note> <p>You cannot delete an application that has a running environment.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OperationInProgressException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteApplicationMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DeleteApplicationVersion:
    get:
      x-aws-operation-name: DeleteApplicationVersion
      operationId: GET_DeleteApplicationVersion
      description: <p>Deletes the specified version from the specified application.</p> <note> <p>You cannot delete an application version that is associated with a running environment.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: SourceBundleDeletionException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceBundleDeletionException'
        '481':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '482':
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OperationInProgressException'
        '483':
          description: S3LocationNotInServiceRegionException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/S3LocationNotInServiceRegionException'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application to which the version belongs.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: VersionLabel
          in: query
          required: true
          description: The label of the version to delete.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: DeleteSourceBundle
          in: query
          required: false
          description: 'Set to <code>true</code> to delete the source bundle from your storage bucket. Otherwise, the application version is deleted only from Elastic Beanstalk and the source bundle remains in Amazon S3.'
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteApplicationVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteApplicationVersion
      operationId: POST_DeleteApplicationVersion
      description: <p>Deletes the specified version from the specified application.</p> <note> <p>You cannot delete an application version that is associated with a running environment.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: SourceBundleDeletionException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceBundleDeletionException'
        '481':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '482':
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OperationInProgressException'
        '483':
          description: S3LocationNotInServiceRegionException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/S3LocationNotInServiceRegionException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteApplicationVersionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteApplicationVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DeleteConfigurationTemplate:
    get:
      x-aws-operation-name: DeleteConfigurationTemplate
      operationId: GET_DeleteConfigurationTemplate
      description: '<p>Deletes the specified configuration template.</p> <note> <p>When you launch an environment using a configuration template, the environment gets a copy of the template. You can delete or modify the environment''s copy of the template without affecting the running environment.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OperationInProgressException'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application to delete the configuration template from.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: true
          description: The name of the configuration template to delete.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteConfigurationTemplate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteConfigurationTemplate
      operationId: POST_DeleteConfigurationTemplate
      description: '<p>Deletes the specified configuration template.</p> <note> <p>When you launch an environment using a configuration template, the environment gets a copy of the template. You can delete or modify the environment''s copy of the template without affecting the running environment.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OperationInProgressException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteConfigurationTemplateMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteConfigurationTemplate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DeleteEnvironmentConfiguration:
    get:
      x-aws-operation-name: DeleteEnvironmentConfiguration
      operationId: GET_DeleteEnvironmentConfiguration
      description: <p>Deletes the draft configuration associated with the running environment.</p> <p>Updating a running environment with any configuration changes creates a draft configuration set. You can get the draft configuration using <a>DescribeConfigurationSettings</a> while the update is in progress or if the update fails. The <code>DeploymentStatus</code> for the draft configuration indicates whether the deployment is in process or has failed. The draft configuration remains in existence until it is deleted with this action.</p>
      responses:
        '200':
          description: Success
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application the environment is associated with.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentName
          in: query
          required: true
          description: The name of the environment to delete the draft configuration from.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEnvironmentConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteEnvironmentConfiguration
      operationId: POST_DeleteEnvironmentConfiguration
      description: <p>Deletes the draft configuration associated with the running environment.</p> <p>Updating a running environment with any configuration changes creates a draft configuration set. You can get the draft configuration using <a>DescribeConfigurationSettings</a> while the update is in progress or if the update fails. The <code>DeploymentStatus</code> for the draft configuration indicates whether the deployment is in process or has failed. The draft configuration remains in existence until it is deleted with this action.</p>
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteEnvironmentConfigurationMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEnvironmentConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DeletePlatformVersion:
    get:
      x-aws-operation-name: DeletePlatformVersion
      operationId: GET_DeletePlatformVersion
      description: Deletes the specified version of a custom platform.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeletePlatformVersionResult'
        '480':
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OperationInProgressException'
        '481':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '482':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
        '483':
          description: PlatformVersionStillReferencedException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PlatformVersionStillReferencedException'
      parameters:
        - name: PlatformArn
          in: query
          required: false
          description: The ARN of the version of the custom platform.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeletePlatformVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeletePlatformVersion
      operationId: POST_DeletePlatformVersion
      description: Deletes the specified version of a custom platform.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeletePlatformVersionResult'
        '480':
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OperationInProgressException'
        '481':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '482':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
        '483':
          description: PlatformVersionStillReferencedException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PlatformVersionStillReferencedException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeletePlatformVersionRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeletePlatformVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribeAccountAttributes:
    get:
      x-aws-operation-name: DescribeAccountAttributes
      operationId: GET_DescribeAccountAttributes
      description: <p>Returns attributes related to AWS Elastic Beanstalk that are associated with the calling AWS account.</p> <p>The result currently has one set of attributes—resource quotas.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAccountAttributesResult'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAccountAttributes
      operationId: POST_DescribeAccountAttributes
      description: <p>Returns attributes related to AWS Elastic Beanstalk that are associated with the calling AWS account.</p> <p>The result currently has one set of attributes—resource quotas.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAccountAttributesResult'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribeApplicationVersions:
    get:
      x-aws-operation-name: DescribeApplicationVersions
      operationId: GET_DescribeApplicationVersions
      description: Retrieve a list of application versions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationVersionDescriptionsMessage'
      parameters:
        - name: ApplicationName
          in: query
          required: false
          description: Specify an application name to show only application versions for that application.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: VersionLabels
          in: query
          required: false
          description: Specify a version label to show a specific application version.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/VersionLabel'
        - name: MaxRecords
          in: query
          required: false
          description: '<p>For a paginated request. Specify a maximum number of application versions to include in each response.</p> <p>If no <code>MaxRecords</code> is specified, all available application versions are retrieved in a single response.</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: '<p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeApplicationVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeApplicationVersions
      operationId: POST_DescribeApplicationVersions
      description: Retrieve a list of application versions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationVersionDescriptionsMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeApplicationVersionsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeApplicationVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribeApplications:
    get:
      x-aws-operation-name: DescribeApplications
      operationId: GET_DescribeApplications
      description: Returns the descriptions of existing applications.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationDescriptionsMessage'
      parameters:
        - name: ApplicationNames
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to only include those with the specified names.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ApplicationName'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeApplications
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeApplications
      operationId: POST_DescribeApplications
      description: Returns the descriptions of existing applications.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationDescriptionsMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeApplicationsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeApplications
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribeConfigurationOptions:
    get:
      x-aws-operation-name: DescribeConfigurationOptions
      operationId: GET_DescribeConfigurationOptions
      description: 'Describes the configuration options that are used in a particular configuration template or environment, or that a specified solution stack defines. The description includes the values the options, their default values, and an indication of the required action on a running environment if an option value is changed.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfigurationOptionsDescription'
        '480':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
      parameters:
        - name: ApplicationName
          in: query
          required: false
          description: The name of the application associated with the configuration template or environment. Only needed if you want to describe the configuration options associated with either the configuration template or environment.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: false
          description: The name of the configuration template whose configuration options you want to describe.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentName
          in: query
          required: false
          description: The name of the environment whose configuration options you want to describe.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: SolutionStackName
          in: query
          required: false
          description: The name of the solution stack whose configuration options you want to describe.
          schema:
            type: string
        - name: PlatformArn
          in: query
          required: false
          description: The ARN of the custom platform.
          schema:
            type: string
        - name: Options
          in: query
          required: false
          description: 'If specified, restricts the descriptions to only the specified options.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OptionSpecification'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeConfigurationOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeConfigurationOptions
      operationId: POST_DescribeConfigurationOptions
      description: 'Describes the configuration options that are used in a particular configuration template or environment, or that a specified solution stack defines. The description includes the values the options, their default values, and an indication of the required action on a running environment if an option value is changed.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfigurationOptionsDescription'
        '480':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeConfigurationOptionsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeConfigurationOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribeConfigurationSettings:
    get:
      x-aws-operation-name: DescribeConfigurationSettings
      operationId: GET_DescribeConfigurationSettings
      description: '<p>Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment.</p> <p>When describing the settings for the configuration set associated with a running environment, it is possible to receive two sets of setting descriptions. One is the deployed configuration set, and the other is a draft configuration of an environment that is either in the process of deployment or that failed to deploy.</p> <p>Related Topics</p> <ul> <li> <p> <a>DeleteEnvironmentConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfigurationSettingsDescriptions'
        '480':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The application for the environment or configuration template.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: false
          description: '<p>The name of the configuration template to describe.</p> <p> Conditional: You must specify either this parameter or an EnvironmentName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns a <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentName
          in: query
          required: false
          description: '<p>The name of the environment to describe.</p> <p> Condition: You must specify either this or a TemplateName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeConfigurationSettings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeConfigurationSettings
      operationId: POST_DescribeConfigurationSettings
      description: '<p>Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment.</p> <p>When describing the settings for the configuration set associated with a running environment, it is possible to receive two sets of setting descriptions. One is the deployed configuration set, and the other is a draft configuration of an environment that is either in the process of deployment or that failed to deploy.</p> <p>Related Topics</p> <ul> <li> <p> <a>DeleteEnvironmentConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfigurationSettingsDescriptions'
        '480':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeConfigurationSettingsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeConfigurationSettings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribeEnvironmentHealth:
    get:
      x-aws-operation-name: DescribeEnvironmentHealth
      operationId: GET_DescribeEnvironmentHealth
      description: Returns information about the overall health of the specified environment. The <b>DescribeEnvironmentHealth</b> operation is only available with AWS Elastic Beanstalk Enhanced Health.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEnvironmentHealthResult'
        '480':
          description: InvalidRequestException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
      parameters:
        - name: EnvironmentName
          in: query
          required: false
          description: '<p>Specify the environment by name.</p> <p>You must specify either this or an EnvironmentName, or both.</p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: EnvironmentId
          in: query
          required: false
          description: '<p>Specify the environment by ID.</p> <p>You must specify either this or an EnvironmentName, or both.</p>'
          schema:
            type: string
        - name: AttributeNames
          in: query
          required: false
          description: 'Specify the response elements to return. To retrieve all attributes, set to <code>All</code>. If no attribute names are specified, returns the name of the environment.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EnvironmentHealthAttribute'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEnvironmentHealth
      operationId: POST_DescribeEnvironmentHealth
      description: Returns information about the overall health of the specified environment. The <b>DescribeEnvironmentHealth</b> operation is only available with AWS Elastic Beanstalk Enhanced Health.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEnvironmentHealthResult'
        '480':
          description: InvalidRequestException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEnvironmentHealthRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribeEnvironmentManagedActionHistory:
    get:
      x-aws-operation-name: DescribeEnvironmentManagedActionHistory
      operationId: GET_DescribeEnvironmentManagedActionHistory
      description: Lists an environment's completed and failed managed actions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEnvironmentManagedActionHistoryResult'
        '480':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: The environment ID of the target environment.
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: The name of the target environment.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: NextToken
          in: query
          required: false
          description: The pagination token returned by a previous request.
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of items to return for a single request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentManagedActionHistory
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEnvironmentManagedActionHistory
      operationId: POST_DescribeEnvironmentManagedActionHistory
      description: Lists an environment's completed and failed managed actions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEnvironmentManagedActionHistoryResult'
        '480':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEnvironmentManagedActionHistoryRequest'
      parameters:
        - name: MaxItems
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentManagedActionHistory
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribeEnvironmentManagedActions:
    get:
      x-aws-operation-name: DescribeEnvironmentManagedActions
      operationId: GET_DescribeEnvironmentManagedActions
      description: Lists an environment's upcoming and in-progress managed actions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEnvironmentManagedActionsResult'
        '480':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
      parameters:
        - name: EnvironmentName
          in: query
          required: false
          description: The name of the target environment.
          schema:
            type: string
        - name: EnvironmentId
          in: query
          required: false
          description: The environment ID of the target environment.
          schema:
            type: string
        - name: Status
          in: query
          required: false
          description: 'To show only actions with a particular status, specify a status.'
          schema:
            type: string
            enum:
              - Scheduled
              - Pending
              - Running
              - Unknown
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentManagedActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEnvironmentManagedActions
      operationId: POST_DescribeEnvironmentManagedActions
      description: Lists an environment's upcoming and in-progress managed actions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEnvironmentManagedActionsResult'
        '480':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEnvironmentManagedActionsRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentManagedActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribeEnvironmentResources:
    get:
      x-aws-operation-name: DescribeEnvironmentResources
      operationId: GET_DescribeEnvironmentResources
      description: Returns AWS resources for this environment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnvironmentResourceDescriptionsMessage'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: '<p>The ID of the environment to retrieve AWS resource usage data.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: '<p>The name of the environment to retrieve AWS resource usage data.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentResources
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEnvironmentResources
      operationId: POST_DescribeEnvironmentResources
      description: Returns AWS resources for this environment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnvironmentResourceDescriptionsMessage'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEnvironmentResourcesMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentResources
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribeEnvironments:
    get:
      x-aws-operation-name: DescribeEnvironments
      operationId: GET_DescribeEnvironments
      description: Returns descriptions for existing environments.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnvironmentDescriptionsMessage'
      parameters:
        - name: ApplicationName
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application.'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: VersionLabel
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application version.'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentIds
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified IDs.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EnvironmentId'
        - name: EnvironmentNames
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified names.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EnvironmentName'
        - name: IncludeDeleted
          in: query
          required: false
          description: '<p>Indicates whether to include deleted environments:</p> <p> <code>true</code>: Environments that have been deleted after <code>IncludedDeletedBackTo</code> are displayed.</p> <p> <code>false</code>: Do not include deleted environments.</p>'
          schema:
            type: boolean
        - name: IncludedDeletedBackTo
          in: query
          required: false
          description: ' If specified when <code>IncludeDeleted</code> is set to <code>true</code>, then environments deleted after this date are displayed. '
          schema:
            type: string
            format: date-time
        - name: MaxRecords
          in: query
          required: false
          description: '<p>For a paginated request. Specify a maximum number of environments to include in each response.</p> <p>If no <code>MaxRecords</code> is specified, all available environments are retrieved in a single response.</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: '<p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironments
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEnvironments
      operationId: POST_DescribeEnvironments
      description: Returns descriptions for existing environments.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnvironmentDescriptionsMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEnvironmentsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironments
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribeEvents:
    get:
      x-aws-operation-name: DescribeEvents
      operationId: GET_DescribeEvents
      description: '<p>Returns list of event descriptions matching criteria up to the last 6 weeks.</p> <note> <p>This action returns the most recent 1,000 events from the specified <code>NextToken</code>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventDescriptionsMessage'
      parameters:
        - name: ApplicationName
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those associated with this application.'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: VersionLabel
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this application version.'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that are associated with this environment configuration.'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentId
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.'
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: PlatformArn
          in: query
          required: false
          description: 'The ARN of a custom platform version. If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this custom platform version.'
          schema:
            type: string
        - name: RequestId
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk restricts the described events to include only those associated with this request ID.'
          schema:
            type: string
        - name: Severity
          in: query
          required: false
          description: 'If specified, limits the events returned from this call to include only those with the specified severity or higher.'
          schema:
            type: string
            enum:
              - TRACE
              - DEBUG
              - INFO
              - WARN
              - ERROR
              - FATAL
        - name: StartTime
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur on or after this time.'
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: ' If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur up to, but not including, the <code>EndTime</code>. '
          schema:
            type: string
            format: date-time
        - name: MaxRecords
          in: query
          required: false
          description: 'Specifies the maximum number of events that can be returned, beginning with the most recent event.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: 'Pagination token. If specified, the events return the next batch of results.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEvents
      operationId: POST_DescribeEvents
      description: '<p>Returns list of event descriptions matching criteria up to the last 6 weeks.</p> <note> <p>This action returns the most recent 1,000 events from the specified <code>NextToken</code>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventDescriptionsMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribeInstancesHealth:
    get:
      x-aws-operation-name: DescribeInstancesHealth
      operationId: GET_DescribeInstancesHealth
      description: 'Retrieves detailed information about the health of instances in your AWS Elastic Beanstalk. This operation requires <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced.html">enhanced health reporting</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstancesHealthResult'
        '480':
          description: InvalidRequestException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
      parameters:
        - name: EnvironmentName
          in: query
          required: false
          description: Specify the AWS Elastic Beanstalk environment by name.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: EnvironmentId
          in: query
          required: false
          description: Specify the AWS Elastic Beanstalk environment by ID.
          schema:
            type: string
        - name: AttributeNames
          in: query
          required: false
          description: 'Specifies the response elements you wish to receive. To retrieve all attributes, set to <code>All</code>. If no attribute names are specified, returns a list of instances.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InstancesHealthAttribute'
        - name: NextToken
          in: query
          required: false
          description: Specify the pagination token returned by a previous call.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeInstancesHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeInstancesHealth
      operationId: POST_DescribeInstancesHealth
      description: 'Retrieves detailed information about the health of instances in your AWS Elastic Beanstalk. This operation requires <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced.html">enhanced health reporting</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstancesHealthResult'
        '480':
          description: InvalidRequestException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeInstancesHealthRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeInstancesHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DescribePlatformVersion:
    get:
      x-aws-operation-name: DescribePlatformVersion
      operationId: GET_DescribePlatformVersion
      description: '<p>Describes a platform version. Provides full details. Compare to <a>ListPlatformVersions</a>, which provides summary information about a list of platform versions.</p> <p>For definitions of platform version and other platform-related terms, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html">AWS Elastic Beanstalk Platforms Glossary</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribePlatformVersionResult'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
      parameters:
        - name: PlatformArn
          in: query
          required: false
          description: The ARN of the platform version.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribePlatformVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribePlatformVersion
      operationId: POST_DescribePlatformVersion
      description: '<p>Describes a platform version. Provides full details. Compare to <a>ListPlatformVersions</a>, which provides summary information about a list of platform versions.</p> <p>For definitions of platform version and other platform-related terms, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html">AWS Elastic Beanstalk Platforms Glossary</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribePlatformVersionResult'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribePlatformVersionRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribePlatformVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=DisassociateEnvironmentOperationsRole:
    get:
      x-aws-operation-name: DisassociateEnvironmentOperationsRole
      operationId: GET_DisassociateEnvironmentOperationsRole
      description: 'Disassociate the operations role from an environment. After this call is made, Elastic Beanstalk uses the caller''s permissions for permissions to downstream services during subsequent calls acting on this environment. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.'
      responses:
        '200':
          description: Success
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: EnvironmentName
          in: query
          required: true
          description: The name of the environment from which to disassociate the operations role.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisassociateEnvironmentOperationsRole
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateEnvironmentOperationsRole
      operationId: POST_DisassociateEnvironmentOperationsRole
      description: 'Disassociate the operations role from an environment. After this call is made, Elastic Beanstalk uses the caller''s permissions for permissions to downstream services during subsequent calls acting on this environment. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.'
      responses:
        '200':
          description: Success
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateEnvironmentOperationsRoleMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisassociateEnvironmentOperationsRole
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=ListAvailableSolutionStacks:
    get:
      x-aws-operation-name: ListAvailableSolutionStacks
      operationId: GET_ListAvailableSolutionStacks
      description: 'Returns a list of the available solution stack names, with the public version first and then in reverse chronological order.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAvailableSolutionStacksResultMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListAvailableSolutionStacks
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListAvailableSolutionStacks
      operationId: POST_ListAvailableSolutionStacks
      description: 'Returns a list of the available solution stack names, with the public version first and then in reverse chronological order.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAvailableSolutionStacksResultMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListAvailableSolutionStacks
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=ListPlatformBranches:
    get:
      x-aws-operation-name: ListPlatformBranches
      operationId: GET_ListPlatformBranches
      description: '<p>Lists the platform branches available for your account in an AWS Region. Provides summary information about each platform branch.</p> <p>For definitions of platform branch and other platform-related terms, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html">AWS Elastic Beanstalk Platforms Glossary</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPlatformBranchesResult'
      parameters:
        - name: Filters
          in: query
          required: false
          description: '<p>Criteria for restricting the resulting list of platform branches. The filter is evaluated as a logical conjunction (AND) of the separate <code>SearchFilter</code> terms.</p> <p>The following list shows valid attribute values for each of the <code>SearchFilter</code> terms. Most operators take a single value. The <code>in</code> and <code>not_in</code> operators can take multiple values.</p> <ul> <li> <p> <code>Attribute = BranchName</code>:</p> <ul> <li> <p> <code>Operator</code>: <code>=</code> | <code>!=</code> | <code>begins_with</code> | <code>ends_with</code> | <code>contains</code> | <code>in</code> | <code>not_in</code> </p> </li> </ul> </li> <li> <p> <code>Attribute = LifecycleState</code>:</p> <ul> <li> <p> <code>Operator</code>: <code>=</code> | <code>!=</code> | <code>in</code> | <code>not_in</code> </p> </li> <li> <p> <code>Values</code>: <code>beta</code> | <code>supported</code> | <code>deprecated</code> | <code>retired</code> </p> </li> </ul> </li> <li> <p> <code>Attribute = PlatformName</code>:</p> <ul> <li> <p> <code>Operator</code>: <code>=</code> | <code>!=</code> | <code>begins_with</code> | <code>ends_with</code> | <code>contains</code> | <code>in</code> | <code>not_in</code> </p> </li> </ul> </li> <li> <p> <code>Attribute = TierType</code>:</p> <ul> <li> <p> <code>Operator</code>: <code>=</code> | <code>!=</code> </p> </li> <li> <p> <code>Values</code>: <code>WebServer/Standard</code> | <code>Worker/SQS/HTTP</code> </p> </li> </ul> </li> </ul> <p>Array size: limited to 10 <code>SearchFilter</code> objects.</p> <p>Within each <code>SearchFilter</code> item, the <code>Values</code> array is limited to 10 items.</p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SearchFilter'
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of platform branch values returned in one call.
          schema:
            type: integer
            minimum: 1
        - name: NextToken
          in: query
          required: false
          description: '<p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListPlatformBranches
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListPlatformBranches
      operationId: POST_ListPlatformBranches
      description: '<p>Lists the platform branches available for your account in an AWS Region. Provides summary information about each platform branch.</p> <p>For definitions of platform branch and other platform-related terms, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html">AWS Elastic Beanstalk Platforms Glossary</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPlatformBranchesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListPlatformBranchesRequest'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListPlatformBranches
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=ListPlatformVersions:
    get:
      x-aws-operation-name: ListPlatformVersions
      operationId: GET_ListPlatformVersions
      description: '<p>Lists the platform versions available for your account in an AWS Region. Provides summary information about each platform version. Compare to <a>DescribePlatformVersion</a>, which provides full details about a single platform version.</p> <p>For definitions of platform version and other platform-related terms, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html">AWS Elastic Beanstalk Platforms Glossary</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPlatformVersionsResult'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
      parameters:
        - name: Filters
          in: query
          required: false
          description: Criteria for restricting the resulting list of platform versions. The filter is interpreted as a logical conjunction (AND) of the separate <code>PlatformFilter</code> terms.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PlatformFilter'
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of platform version values returned in one call.
          schema:
            type: integer
            minimum: 1
        - name: NextToken
          in: query
          required: false
          description: '<p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListPlatformVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListPlatformVersions
      operationId: POST_ListPlatformVersions
      description: '<p>Lists the platform versions available for your account in an AWS Region. Provides summary information about each platform version. Compare to <a>DescribePlatformVersion</a>, which provides full details about a single platform version.</p> <p>For definitions of platform version and other platform-related terms, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html">AWS Elastic Beanstalk Platforms Glossary</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPlatformVersionsResult'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ElasticBeanstalkServiceException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListPlatformVersionsRequest'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListPlatformVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=ListTagsForResource:
    get:
      x-aws-operation-name: ListTagsForResource
      operationId: GET_ListTagsForResource
      description: '<p>Return the tags applied to an AWS Elastic Beanstalk resource. The response contains a list of tag key-value pairs.</p> <p>Elastic Beanstalk supports tagging of all of its resources. For details about resource tagging, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-tagging-resources.html">Tagging Application Resources</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceTagsDescriptionMessage'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceTypeNotSupportedException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceTypeNotSupportedException'
      parameters:
        - name: ResourceArn
          in: query
          required: true
          description: <p>The Amazon Resource Name (ARN) of the resouce for which a tag list is requested.</p> <p>Must be the ARN of an Elastic Beanstalk resource.</p>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListTagsForResource
      operationId: POST_ListTagsForResource
      description: '<p>Return the tags applied to an AWS Elastic Beanstalk resource. The response contains a list of tag key-value pairs.</p> <p>Elastic Beanstalk supports tagging of all of its resources. For details about resource tagging, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-tagging-resources.html">Tagging Application Resources</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceTagsDescriptionMessage'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceTypeNotSupportedException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceTypeNotSupportedException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=RebuildEnvironment:
    get:
      x-aws-operation-name: RebuildEnvironment
      operationId: GET_RebuildEnvironment
      description: 'Deletes and recreates all of the AWS resources (for example: the Auto Scaling group, load balancer, etc.) for a specified environment and forces a restart.'
      responses:
        '200':
          description: Success
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: '<p>The ID of the environment to rebuild.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: '<p>The name of the environment to rebuild.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebuildEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RebuildEnvironment
      operationId: POST_RebuildEnvironment
      description: 'Deletes and recreates all of the AWS resources (for example: the Auto Scaling group, load balancer, etc.) for a specified environment and forces a restart.'
      responses:
        '200':
          description: Success
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RebuildEnvironmentMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebuildEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=RequestEnvironmentInfo:
    get:
      x-aws-operation-name: RequestEnvironmentInfo
      operationId: GET_RequestEnvironmentInfo
      description: <p>Initiates a request to compile the specified type of information of the deployed environment.</p> <p> Setting the <code>InfoType</code> to <code>tail</code> compiles the last lines from the application server log files of every Amazon EC2 instance in your environment. </p> <p> Setting the <code>InfoType</code> to <code>bundle</code> compresses the application server log files for every Amazon EC2 instance into a <code>.zip</code> file. Legacy and .NET containers do not support bundle logs. </p> <p> Use <a>RetrieveEnvironmentInfo</a> to obtain the set of logs. </p> <p>Related Topics</p> <ul> <li> <p> <a>RetrieveEnvironmentInfo</a> </p> </li> </ul>
      responses:
        '200':
          description: Success
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: '<p>The ID of the environment of the requested data.</p> <p>If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: '<p>The name of the environment of the requested data.</p> <p>If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: InfoType
          in: query
          required: true
          description: The type of information to request.
          schema:
            type: string
            enum:
              - tail
              - bundle
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RequestEnvironmentInfo
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RequestEnvironmentInfo
      operationId: POST_RequestEnvironmentInfo
      description: <p>Initiates a request to compile the specified type of information of the deployed environment.</p> <p> Setting the <code>InfoType</code> to <code>tail</code> compiles the last lines from the application server log files of every Amazon EC2 instance in your environment. </p> <p> Setting the <code>InfoType</code> to <code>bundle</code> compresses the application server log files for every Amazon EC2 instance into a <code>.zip</code> file. Legacy and .NET containers do not support bundle logs. </p> <p> Use <a>RetrieveEnvironmentInfo</a> to obtain the set of logs. </p> <p>Related Topics</p> <ul> <li> <p> <a>RetrieveEnvironmentInfo</a> </p> </li> </ul>
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RequestEnvironmentInfoMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RequestEnvironmentInfo
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=RestartAppServer:
    get:
      x-aws-operation-name: RestartAppServer
      operationId: GET_RestartAppServer
      description: Causes the environment to restart the application container server running on each Amazon EC2 instance.
      responses:
        '200':
          description: Success
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: '<p>The ID of the environment to restart the server for.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: '<p>The name of the environment to restart the server for.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestartAppServer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RestartAppServer
      operationId: POST_RestartAppServer
      description: Causes the environment to restart the application container server running on each Amazon EC2 instance.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestartAppServerMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestartAppServer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=RetrieveEnvironmentInfo:
    get:
      x-aws-operation-name: RetrieveEnvironmentInfo
      operationId: GET_RetrieveEnvironmentInfo
      description: <p>Retrieves the compiled information from a <a>RequestEnvironmentInfo</a> request.</p> <p>Related Topics</p> <ul> <li> <p> <a>RequestEnvironmentInfo</a> </p> </li> </ul>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RetrieveEnvironmentInfoResultMessage'
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: '<p>The ID of the data''s environment.</p> <p>If no such environment is found, returns an <code>InvalidParameterValue</code> error.</p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error.</p>'
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: '<p>The name of the data''s environment.</p> <p> If no such environment is found, returns an <code>InvalidParameterValue</code> error. </p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: InfoType
          in: query
          required: true
          description: The type of information to retrieve.
          schema:
            type: string
            enum:
              - tail
              - bundle
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RetrieveEnvironmentInfo
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RetrieveEnvironmentInfo
      operationId: POST_RetrieveEnvironmentInfo
      description: <p>Retrieves the compiled information from a <a>RequestEnvironmentInfo</a> request.</p> <p>Related Topics</p> <ul> <li> <p> <a>RequestEnvironmentInfo</a> </p> </li> </ul>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RetrieveEnvironmentInfoResultMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RetrieveEnvironmentInfoMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RetrieveEnvironmentInfo
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=SwapEnvironmentCNAMEs:
    get:
      x-aws-operation-name: SwapEnvironmentCNAMEs
      operationId: GET_SwapEnvironmentCNAMEs
      description: Swaps the CNAMEs of two environments.
      responses:
        '200':
          description: Success
      parameters:
        - name: SourceEnvironmentId
          in: query
          required: false
          description: '<p>The ID of the source environment.</p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentId</code>, you must specify the <code>DestinationEnvironmentId</code>. </p>'
          schema:
            type: string
        - name: SourceEnvironmentName
          in: query
          required: false
          description: '<p>The name of the source environment.</p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentName</code>, you must specify the <code>DestinationEnvironmentName</code>. </p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: DestinationEnvironmentId
          in: query
          required: false
          description: '<p>The ID of the destination environment.</p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentId</code> with the <code>DestinationEnvironmentId</code>. </p>'
          schema:
            type: string
        - name: DestinationEnvironmentName
          in: query
          required: false
          description: '<p>The name of the destination environment.</p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentName</code> with the <code>DestinationEnvironmentName</code>. </p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SwapEnvironmentCNAMEs
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: SwapEnvironmentCNAMEs
      operationId: POST_SwapEnvironmentCNAMEs
      description: Swaps the CNAMEs of two environments.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SwapEnvironmentCNAMEsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SwapEnvironmentCNAMEs
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=TerminateEnvironment:
    get:
      x-aws-operation-name: TerminateEnvironment
      operationId: GET_TerminateEnvironment
      description: Terminates the specified environment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnvironmentDescription'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: '<p>The ID of the environment to terminate.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: '<p>The name of the environment to terminate.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: TerminateResources
          in: query
          required: false
          description: '<p>Indicates whether the associated AWS resources should shut down when the environment is terminated:</p> <ul> <li> <p> <code>true</code>: The specified environment as well as the associated AWS resources, such as Auto Scaling group and LoadBalancer, are terminated.</p> </li> <li> <p> <code>false</code>: AWS Elastic Beanstalk resource management is removed from the environment, but the AWS resources continue to operate.</p> </li> </ul> <p> For more information, see the <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/ug/"> AWS Elastic Beanstalk User Guide. </a> </p> <p> Default: <code>true</code> </p> <p> Valid Values: <code>true</code> | <code>false</code> </p>'
          schema:
            type: boolean
        - name: ForceTerminate
          in: query
          required: false
          description: Terminates the target environment even if another environment in the same group is dependent on it.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - TerminateEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: TerminateEnvironment
      operationId: POST_TerminateEnvironment
      description: Terminates the specified environment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnvironmentDescription'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TerminateEnvironmentMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - TerminateEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=UpdateApplication:
    get:
      x-aws-operation-name: UpdateApplication
      operationId: GET_UpdateApplication
      description: '<p>Updates the specified application to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear these properties, specify an empty string.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationDescriptionMessage'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: 'The name of the application to update. If no such application is found, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. '
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Description
          in: query
          required: false
          description: '<p>A new description for the application.</p> <p>Default: If not specified, AWS Elastic Beanstalk does not update the description.</p>'
          schema:
            type: string
            maxLength: 200
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdateApplication
      operationId: POST_UpdateApplication
      description: '<p>Updates the specified application to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear these properties, specify an empty string.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationDescriptionMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateApplicationMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=UpdateApplicationResourceLifecycle:
    get:
      x-aws-operation-name: UpdateApplicationResourceLifecycle
      operationId: GET_UpdateApplicationResourceLifecycle
      description: Modifies lifecycle settings for an application.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationResourceLifecycleDescriptionMessage'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: ResourceLifecycleConfig
          in: query
          required: true
          description: The lifecycle configuration.
          schema:
            type: object
            properties:
              ServiceRole:
                $ref: '#/components/schemas/String'
                description: '<p>The ARN of an IAM service role that Elastic Beanstalk has permission to assume.</p> <p>The <code>ServiceRole</code> property is required the first time that you provide a <code>VersionLifecycleConfig</code> for the application in one of the supporting calls (<code>CreateApplication</code> or <code>UpdateApplicationResourceLifecycle</code>). After you provide it once, in either one of the calls, Elastic Beanstalk persists the Service Role with the application, and you don''t need to specify it again in subsequent <code>UpdateApplicationResourceLifecycle</code> calls. You can, however, specify it in subsequent calls to change the Service Role to another value.</p>'
              VersionLifecycleConfig:
                $ref: '#/components/schemas/ApplicationVersionLifecycleConfig'
                description: Defines lifecycle settings for application versions.
            description: 'The resource lifecycle configuration for an application. Defines lifecycle settings for resources that belong to the application, and the service role that AWS Elastic Beanstalk assumes in order to apply lifecycle settings. The version lifecycle configuration defines lifecycle settings for application versions.'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateApplicationResourceLifecycle
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdateApplicationResourceLifecycle
      operationId: POST_UpdateApplicationResourceLifecycle
      description: Modifies lifecycle settings for an application.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationResourceLifecycleDescriptionMessage'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateApplicationResourceLifecycleMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateApplicationResourceLifecycle
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=UpdateApplicationVersion:
    get:
      x-aws-operation-name: UpdateApplicationVersion
      operationId: GET_UpdateApplicationVersion
      description: '<p>Updates the specified application version to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear properties, specify an empty string.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationVersionDescriptionMessage'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: '<p>The name of the application associated with this version.</p> <p> If no application is found with this name, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error.</p>'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: VersionLabel
          in: query
          required: true
          description: '<p>The name of the version to update.</p> <p>If no application version is found with this label, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. </p>'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Description
          in: query
          required: false
          description: A new description for this version.
          schema:
            type: string
            maxLength: 200
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateApplicationVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdateApplicationVersion
      operationId: POST_UpdateApplicationVersion
      description: '<p>Updates the specified application version to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear properties, specify an empty string.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationVersionDescriptionMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateApplicationVersionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateApplicationVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=UpdateConfigurationTemplate:
    get:
      x-aws-operation-name: UpdateConfigurationTemplate
      operationId: GET_UpdateConfigurationTemplate
      description: '<p>Updates the specified configuration template to have the specified properties or configuration option values.</p> <note> <p>If a property (for example, <code>ApplicationName</code>) is not provided, its value remains unchanged. To clear such properties, specify an empty string.</p> </note> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfigurationSettingsDescription'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: '<p>The name of the application associated with the configuration template to update.</p> <p> If no application is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error. </p>'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: true
          description: '<p>The name of the configuration template to update.</p> <p> If no configuration template is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error. </p>'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Description
          in: query
          required: false
          description: A new description for the configuration.
          schema:
            type: string
            maxLength: 200
        - name: OptionSettings
          in: query
          required: false
          description: A list of configuration option settings to update with the new specified option value.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurationOptionSetting'
        - name: OptionsToRemove
          in: query
          required: false
          description: '<p>A list of configuration options to remove from the configuration set.</p> <p> Constraint: You can remove only <code>UserDefined</code> configuration options. </p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OptionSpecification'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateConfigurationTemplate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdateConfigurationTemplate
      operationId: POST_UpdateConfigurationTemplate
      description: '<p>Updates the specified configuration template to have the specified properties or configuration option values.</p> <note> <p>If a property (for example, <code>ApplicationName</code>) is not provided, its value remains unchanged. To clear such properties, specify an empty string.</p> </note> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfigurationSettingsDescription'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateConfigurationTemplateMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateConfigurationTemplate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=UpdateEnvironment:
    get:
      x-aws-operation-name: UpdateEnvironment
      operationId: GET_UpdateEnvironment
      description: '<p>Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment.</p> <p> Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p> <p> When updating the configuration settings to a new template or individual settings, a draft configuration is created and <a>DescribeConfigurationSettings</a> for this environment returns two setting descriptions with different <code>DeploymentStatus</code> values. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnvironmentDescription'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
      parameters:
        - name: ApplicationName
          in: query
          required: false
          description: The name of the application with which the environment is associated.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentId
          in: query
          required: false
          description: '<p>The ID of the environment to update.</p> <p>If no environment with this ID exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.</p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: '<p>The name of the environment to update. If no environment with this name exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: GroupName
          in: query
          required: false
          description: 'The name of the group to which the target environment belongs. Specify a group name only if the environment''s name is specified in an environment manifest and not with the environment name or environment ID parameters. See <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment Manifest (env.yaml)</a> for details.'
          schema:
            type: string
            minLength: 1
            maxLength: 19
        - name: Description
          in: query
          required: false
          description: 'If this parameter is specified, AWS Elastic Beanstalk updates the description of this environment.'
          schema:
            type: string
            maxLength: 200
        - name: Tier
          in: query
          required: false
          description: '<p>This specifies the tier to use to update the environment.</p> <p>Condition: At this time, if you change the tier version, name, or type, AWS Elastic Beanstalk returns <code>InvalidParameterValue</code> error. </p>'
          schema:
            type: object
            properties:
              Name:
                $ref: '#/components/schemas/String'
                description: '<p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>'
              Type:
                $ref: '#/components/schemas/String'
                description: '<p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>'
              Version:
                $ref: '#/components/schemas/String'
                description: '<p>The version of this environment tier. When you don''t set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>'
            description: Describes the properties of an environment tier
        - name: VersionLabel
          in: query
          required: false
          description: 'If this parameter is specified, AWS Elastic Beanstalk deploys the named application version to the environment. If no such application version is found, returns an <code>InvalidParameterValue</code> error. '
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: false
          description: 'If this parameter is specified, AWS Elastic Beanstalk deploys this configuration template to the environment. If no such configuration template is found, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. '
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: SolutionStackName
          in: query
          required: false
          description: This specifies the platform version that the environment will run after the environment is updated.
          schema:
            type: string
        - name: PlatformArn
          in: query
          required: false
          description: 'The ARN of the platform, if used.'
          schema:
            type: string
        - name: OptionSettings
          in: query
          required: false
          description: 'If specified, AWS Elastic Beanstalk updates the configuration set associated with the running environment and sets the specified configuration options to the requested value.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurationOptionSetting'
        - name: OptionsToRemove
          in: query
          required: false
          description: A list of custom user-defined configuration options to remove from the configuration set for this environment.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OptionSpecification'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdateEnvironment
      operationId: POST_UpdateEnvironment
      description: '<p>Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment.</p> <p> Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p> <p> When updating the configuration settings to a new template or individual settings, a draft configuration is created and <a>DescribeConfigurationSettings</a> for this environment returns two setting descriptions with different <code>DeploymentStatus</code> values. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnvironmentDescription'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=UpdateTagsForResource:
    get:
      x-aws-operation-name: UpdateTagsForResource
      operationId: GET_UpdateTagsForResource
      description: '<p>Update the list of tags applied to an AWS Elastic Beanstalk resource. Two lists can be passed: <code>TagsToAdd</code> for tags to add or update, and <code>TagsToRemove</code>.</p> <p>Elastic Beanstalk supports tagging of all of its resources. For details about resource tagging, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-tagging-resources.html">Tagging Application Resources</a>.</p> <p>If you create a custom IAM user policy to control permission to this operation, specify one of the following two virtual actions (or both) instead of the API operation name:</p> <dl> <dt>elasticbeanstalk:AddTags</dt> <dd> <p>Controls permission to call <code>UpdateTagsForResource</code> and pass a list of tags to add in the <code>TagsToAdd</code> parameter.</p> </dd> <dt>elasticbeanstalk:RemoveTags</dt> <dd> <p>Controls permission to call <code>UpdateTagsForResource</code> and pass a list of tag keys to remove in the <code>TagsToRemove</code> parameter.</p> </dd> </dl> <p>For details about creating a custom user policy, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.managed-policies.html#AWSHowTo.iam.policies">Creating a Custom User Policy</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OperationInProgressException'
        '482':
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ResourceTypeNotSupportedException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceTypeNotSupportedException'
      parameters:
        - name: ResourceArn
          in: query
          required: true
          description: <p>The Amazon Resource Name (ARN) of the resouce to be updated.</p> <p>Must be the ARN of an Elastic Beanstalk resource.</p>
          schema:
            type: string
        - name: TagsToAdd
          in: query
          required: false
          description: '<p>A list of tags to add or update. If a key of an existing tag is added, the tag''s value is updated.</p> <p>Specify at least one of these parameters: <code>TagsToAdd</code>, <code>TagsToRemove</code>.</p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Tag'
        - name: TagsToRemove
          in: query
          required: false
          description: '<p>A list of tag keys to remove. If a tag key doesn''t exist, it is silently ignored.</p> <p>Specify at least one of these parameters: <code>TagsToAdd</code>, <code>TagsToRemove</code>.</p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdateTagsForResource
      operationId: POST_UpdateTagsForResource
      description: '<p>Update the list of tags applied to an AWS Elastic Beanstalk resource. Two lists can be passed: <code>TagsToAdd</code> for tags to add or update, and <code>TagsToRemove</code>.</p> <p>Elastic Beanstalk supports tagging of all of its resources. For details about resource tagging, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-tagging-resources.html">Tagging Application Resources</a>.</p> <p>If you create a custom IAM user policy to control permission to this operation, specify one of the following two virtual actions (or both) instead of the API operation name:</p> <dl> <dt>elasticbeanstalk:AddTags</dt> <dd> <p>Controls permission to call <code>UpdateTagsForResource</code> and pass a list of tags to add in the <code>TagsToAdd</code> parameter.</p> </dd> <dt>elasticbeanstalk:RemoveTags</dt> <dd> <p>Controls permission to call <code>UpdateTagsForResource</code> and pass a list of tag keys to remove in the <code>TagsToRemove</code> parameter.</p> </dd> </dl> <p>For details about creating a custom user policy, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.managed-policies.html#AWSHowTo.iam.policies">Creating a Custom User Policy</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OperationInProgressException'
        '482':
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ResourceTypeNotSupportedException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceTypeNotSupportedException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateTagsForResourceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
  /#Action=ValidateConfigurationSettings:
    get:
      x-aws-operation-name: ValidateConfigurationSettings
      operationId: GET_ValidateConfigurationSettings
      description: '<p>Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid.</p> <p>This action returns a list of messages indicating any errors or warnings associated with the selection of option values.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfigurationSettingsValidationMessages'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application that the configuration template or environment belongs to.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: false
          description: '<p>The name of the configuration template to validate the settings against.</p> <p>Condition: You cannot specify both this and an environment name.</p>'
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentName
          in: query
          required: false
          description: '<p>The name of the environment to validate the settings against.</p> <p>Condition: You cannot specify both this and a configuration template name.</p>'
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: OptionSettings
          in: query
          required: true
          description: A list of the options and desired values to evaluate.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurationOptionSetting'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ValidateConfigurationSettings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ValidateConfigurationSettings
      operationId: POST_ValidateConfigurationSettings
      description: '<p>Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid.</p> <p>This action returns a list of messages indicating any errors or warnings associated with the selection of option values.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfigurationSettingsValidationMessages'
        '480':
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientPrivilegesException'
        '481':
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyBucketsException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ValidateConfigurationSettingsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ValidateConfigurationSettings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2010-12-01'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    InsufficientPrivilegesException: {}
    ApplyEnvironmentManagedActionResult:
      type: object
      properties:
        ActionId:
          $ref: '#/components/schemas/String'
          description: The action ID of the managed action.
        ActionDescription:
          $ref: '#/components/schemas/String'
          description: A description of the managed action.
        ActionType:
          $ref: '#/components/schemas/ActionType'
          description: The type of managed action.
        Status:
          $ref: '#/components/schemas/String'
          description: The status of the managed action.
      description: The result message containing information about the managed action.
    ElasticBeanstalkServiceException: {}
    ManagedActionInvalidStateException: {}
    CheckDNSAvailabilityResultMessage:
      type: object
      example:
        Available: true
        FullyQualifiedCNAME: my-cname.us-west-2.elasticbeanstalk.com
      properties:
        Available:
          $ref: '#/components/schemas/CnameAvailability'
          description: '<p>Indicates if the specified CNAME is available:</p> <ul> <li> <p> <code>true</code> : The CNAME is available.</p> </li> <li> <p> <code>false</code> : The CNAME is not available.</p> </li> </ul>'
        FullyQualifiedCNAME:
          $ref: '#/components/schemas/DNSCname'
          description: The fully qualified CNAME to reserve when <a>CreateEnvironment</a> is called with the provided prefix.
      description: Indicates if the specified CNAME is available.
    EnvironmentDescriptionsMessage:
      type: object
      example:
        Environments:
          - AbortableOperationInProgress: false
            ApplicationName: my-app
            CNAME: my-env.elasticbeanstalk.com
            DateCreated: '2015-08-07T20:48:49.599Z'
            DateUpdated: '2015-08-12T18:16:55.019Z'
            EndpointURL: awseb-e-w-AWSEBLoa-1483140XB0Q4L-109QXY8121.us-west-2.elb.amazonaws.com
            EnvironmentId: e-rpqsewtp2j
            EnvironmentName: my-env
            Health: Green
            SolutionStackName: 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8
            Status: Ready
            Tier:
              Name: WebServer
              Type: Standard
              Version: ' '
            VersionLabel: 7f58-stage-150812_025409
      properties:
        Environments:
          $ref: '#/components/schemas/EnvironmentDescriptionsList'
          description: ' Returns an <a>EnvironmentDescription</a> list. '
        NextToken:
          $ref: '#/components/schemas/Token'
          description: 'In a paginated request, the token that you can pass in a subsequent request to get the next response page.'
      description: Result message containing a list of environment descriptions.
    VersionLabel:
      type: string
      minLength: 1
      maxLength: 100
    TooManyEnvironmentsException: {}
    ApplicationDescriptionMessage:
      type: object
      example:
        Application:
          ApplicationName: my-app
          ConfigurationTemplates: []
          DateCreated: '2015-08-13T19:15:50.449Z'
          DateUpdated: '2015-08-20T22:34:56.195Z'
          Description: my Elastic Beanstalk application
          Versions:
            - 2fba-stage-150819_234450
            - bf07-stage-150820_214945
            - 93f8
            - fd7c-stage-150820_000431
            - 22a0-stage-150819_185942
      properties:
        Application:
          $ref: '#/components/schemas/ApplicationDescription'
          description: ' The <a>ApplicationDescription</a> of the application. '
      description: Result message containing a single description of an application.
    String:
      type: string
    ApplicationVersionLifecycleConfig:
      type: object
      properties:
        MaxCountRule:
          $ref: '#/components/schemas/MaxCountRule'
          description: Specify a max count rule to restrict the number of application versions that are retained for an application.
        MaxAgeRule:
          $ref: '#/components/schemas/MaxAgeRule'
          description: Specify a max age rule to restrict the length of time that application versions are retained for an application.
      description: '<p>The application version lifecycle settings for an application. Defines the rules that Elastic Beanstalk applies to an application''s versions in order to avoid hitting the per-region limit for application versions.</p> <p>When Elastic Beanstalk deletes an application version from its database, you can no longer deploy that version to an environment. The source bundle remains in S3 unless you configure the rule to delete it.</p>'
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The key of the tag.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The value of the tag.
      description: Describes a tag applied to a resource in an environment.
    TooManyApplicationsException: {}
    ApplicationVersionDescriptionMessage:
      type: object
      example:
        ApplicationVersion:
          ApplicationName: my-app
          DateCreated: '2015-08-19T18:59:17.646Z'
          DateUpdated: '2015-08-20T22:53:28.871Z'
          Description: new description
          SourceBundle:
            S3Bucket: elasticbeanstalk-us-west-2-0123456789012
            S3Key: my-app/22a0-stage-150819_185942.war
          VersionLabel: 22a0-stage-150819_185942
      properties:
        ApplicationVersion:
          $ref: '#/components/schemas/ApplicationVersionDescription'
          description: ' The <a>ApplicationVersionDescription</a> of the application version. '
      description: Result message wrapping a single description of an application version.
    SourceType:
      type: string
      enum:
        - Git
        - Zip
    SourceRepository:
      type: string
      enum:
        - CodeCommit
        - S3
    SourceLocation:
      type: string
      pattern: .+/.+
      minLength: 3
      maxLength: 255
    S3Bucket:
      type: string
      maxLength: 255
    S3Key:
      type: string
      maxLength: 1024
    NonEmptyString:
      type: string
      pattern: .*\S.*
    ComputeType:
      type: string
      enum:
        - BUILD_GENERAL1_SMALL
        - BUILD_GENERAL1_MEDIUM
        - BUILD_GENERAL1_LARGE
    BoxedInt:
      type: integer
    TooManyApplicationVersionsException: {}
    S3LocationNotInServiceRegionException: {}
    CodeBuildNotInServiceRegionException: {}
    ConfigurationSettingsDescription:
      type: object
      example:
        ApplicationName: my-app
        DateCreated: '2015-08-20T22:39:31Z'
        DateUpdated: '2015-08-20T22:43:11Z'
        SolutionStackName: 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8
        TemplateName: my-template
      properties:
        SolutionStackName:
          $ref: '#/components/schemas/SolutionStackName'
          description: The name of the solution stack this configuration set uses.
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: The ARN of the platform version.
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application associated with this configuration set.
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: ' If not <code>null</code>, the name of the configuration template for this configuration set. '
        Description:
          $ref: '#/components/schemas/Description'
          description: Describes this configuration set.
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: ' If not <code>null</code>, the name of the environment for this configuration set. '
        DeploymentStatus:
          $ref: '#/components/schemas/ConfigurationDeploymentStatus'
          description: '<p> If this configuration set is associated with an environment, the <code>DeploymentStatus</code> parameter indicates the deployment status of this configuration set: </p> <ul> <li> <p> <code>null</code>: This configuration is not associated with a running environment.</p> </li> <li> <p> <code>pending</code>: This is a draft configuration that is not deployed to the associated environment but is in the process of deploying.</p> </li> <li> <p> <code>deployed</code>: This is the configuration that is currently deployed to the associated running environment.</p> </li> <li> <p> <code>failed</code>: This is a draft configuration that failed to successfully deploy.</p> </li> </ul>'
        DateCreated:
          $ref: '#/components/schemas/CreationDate'
          description: The date (in UTC time) when this configuration set was created.
        DateUpdated:
          $ref: '#/components/schemas/UpdateDate'
          description: The date (in UTC time) when this configuration set was last modified.
        OptionSettings:
          $ref: '#/components/schemas/ConfigurationOptionSettingsList'
          description: A list of the configuration options and their values in this configuration set.
      description: Describes the settings for a configuration set.
    ApplicationName:
      type: string
      minLength: 1
      maxLength: 100
    ConfigurationTemplateName:
      type: string
      minLength: 1
      maxLength: 100
    ConfigurationOptionSetting:
      type: object
      properties:
        ResourceName:
          $ref: '#/components/schemas/ResourceName'
          description: A unique resource name for the option setting. Use it for a time–based scaling configuration option.
        Namespace:
          $ref: '#/components/schemas/OptionNamespace'
          description: A unique namespace that identifies the option's associated AWS resource.
        OptionName:
          $ref: '#/components/schemas/ConfigurationOptionName'
          description: The name of the configuration option.
        Value:
          $ref: '#/components/schemas/ConfigurationOptionValue'
          description: The current value for the configuration option.
      description: 'A specification identifying an individual configuration option along with its current value. For a list of possible namespaces and option values, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html">Option Values</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>. '
    TooManyBucketsException: {}
    TooManyConfigurationTemplatesException: {}
    EnvironmentDescription:
      type: object
      example:
        AbortableOperationInProgress: true
        ApplicationName: my-app
        CNAME: my-env.elasticbeanstalk.com
        DateCreated: '2015-08-07T20:48:49.599Z'
        DateUpdated: '2015-08-12T18:15:23.804Z'
        EndpointURL: awseb-e-w-AWSEBLoa-14XB83101Q4L-104QXY80921.sa-east-1.elb.amazonaws.com
        EnvironmentId: e-wtp2rpqsej
        EnvironmentName: my-env
        Health: Grey
        SolutionStackName: 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8
        Status: Updating
        Tier:
          Name: WebServer
          Type: Standard
          Version: ' '
        VersionLabel: 7f58-stage-150812_025409
      properties:
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: The name of this environment.
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: The ID of this environment.
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application associated with this environment.
        VersionLabel:
          $ref: '#/components/schemas/VersionLabel'
          description: The application version deployed in this environment.
        SolutionStackName:
          $ref: '#/components/schemas/SolutionStackName'
          description: ' The name of the <code>SolutionStack</code> deployed with this environment. '
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: The ARN of the platform version.
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: The name of the configuration template used to originally launch this environment.
        Description:
          $ref: '#/components/schemas/Description'
          description: Describes this environment.
        EndpointURL:
          $ref: '#/components/schemas/EndpointURL'
          description: 'For load-balanced, autoscaling environments, the URL to the LoadBalancer. For single-instance environments, the IP address of the instance.'
        CNAME:
          $ref: '#/components/schemas/DNSCname'
          description: The URL to the CNAME for this environment.
        DateCreated:
          $ref: '#/components/schemas/CreationDate'
          description: The creation date for this environment.
        DateUpdated:
          $ref: '#/components/schemas/UpdateDate'
          description: The last modified date for this environment.
        Status:
          $ref: '#/components/schemas/EnvironmentStatus'
          description: '<p>The current operational status of the environment:</p> <ul> <li> <p> <code>Launching</code>: Environment is in the process of initial deployment.</p> </li> <li> <p> <code>Updating</code>: Environment is in the process of updating its configuration settings or application version.</p> </li> <li> <p> <code>Ready</code>: Environment is available to have an action performed on it, such as update or terminate.</p> </li> <li> <p> <code>Terminating</code>: Environment is in the shut-down process.</p> </li> <li> <p> <code>Terminated</code>: Environment is not running.</p> </li> </ul>'
        AbortableOperationInProgress:
          $ref: '#/components/schemas/AbortableOperationInProgress'
          description: '<p>Indicates if there is an in-progress environment configuration update or application version deployment that you can cancel.</p> <p> <code>true:</code> There is an update in progress. </p> <p> <code>false:</code> There are no updates currently in progress. </p>'
        Health:
          $ref: '#/components/schemas/EnvironmentHealth'
          description: '<p>Describes the health status of the environment. AWS Elastic Beanstalk indicates the failure levels for a running environment:</p> <ul> <li> <p> <code>Red</code>: Indicates the environment is not responsive. Occurs when three or more consecutive failures occur for an environment.</p> </li> <li> <p> <code>Yellow</code>: Indicates that something is wrong. Occurs when two consecutive failures occur for an environment.</p> </li> <li> <p> <code>Green</code>: Indicates the environment is healthy and fully functional.</p> </li> <li> <p> <code>Grey</code>: Default health for a new environment. The environment is not fully launched and health checks have not started or health checks are suspended during an <code>UpdateEnvironment</code> or <code>RestartEnvironment</code> request.</p> </li> </ul> <p> Default: <code>Grey</code> </p>'
        HealthStatus:
          $ref: '#/components/schemas/EnvironmentHealthStatus'
          description: 'Returns the health status of the application running in your environment. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">Health Colors and Statuses</a>.'
        Resources:
          $ref: '#/components/schemas/EnvironmentResourcesDescription'
          description: The description of the AWS resources used by this environment.
        Tier:
          $ref: '#/components/schemas/EnvironmentTier'
          description: Describes the current tier of this environment.
        EnvironmentLinks:
          $ref: '#/components/schemas/EnvironmentLinks'
          description: A list of links to other environments in the same group.
        EnvironmentArn:
          $ref: '#/components/schemas/EnvironmentArn'
          description: 'The environment''s Amazon Resource Name (ARN), which can be used in other API requests that require an ARN.'
        OperationsRole:
          $ref: '#/components/schemas/OperationsRole'
          description: 'The Amazon Resource Name (ARN) of the environment''s operations role. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.'
      description: Describes the properties of an environment.
    OptionSpecification:
      type: object
      properties:
        ResourceName:
          $ref: '#/components/schemas/ResourceName'
          description: A unique resource name for a time-based scaling configuration option.
        Namespace:
          $ref: '#/components/schemas/OptionNamespace'
          description: A unique namespace identifying the option's associated AWS resource.
        OptionName:
          $ref: '#/components/schemas/ConfigurationOptionName'
          description: The name of the configuration option.
      description: A specification identifying an individual configuration option.
    CreatePlatformVersionResult:
      type: object
      properties:
        PlatformSummary:
          $ref: '#/components/schemas/PlatformSummary'
          description: Detailed information about the new version of the custom platform.
        Builder:
          $ref: '#/components/schemas/Builder'
          description: The builder used to create the custom platform.
    TooManyPlatformsException: {}
    CreateStorageLocationResultMessage:
      type: object
      example:
        S3Bucket: elasticbeanstalk-us-west-2-0123456789012
      properties:
        S3Bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: The name of the Amazon S3 bucket created.
      description: Results of a <a>CreateStorageLocationResult</a> call.
    S3SubscriptionRequiredException: {}
    OperationInProgressException: {}
    SourceBundleDeletionException: {}
    DeletePlatformVersionResult:
      type: object
      properties:
        PlatformSummary:
          $ref: '#/components/schemas/PlatformSummary'
          description: Detailed information about the version of the custom platform.
    PlatformVersionStillReferencedException: {}
    DescribeAccountAttributesResult:
      type: object
      properties:
        ResourceQuotas:
          $ref: '#/components/schemas/ResourceQuotas'
          description: The Elastic Beanstalk resource quotas associated with the calling AWS account.
    ApplicationVersionDescriptionsMessage:
      type: object
      example:
        ApplicationVersions:
          - ApplicationName: my-app
            DateCreated: '2015-07-23T01:32:26.079Z'
            DateUpdated: '2015-07-23T01:32:26.079Z'
            Description: update cover page
            SourceBundle:
              S3Bucket: elasticbeanstalk-us-west-2-015321684451
              S3Key: my-app/5026-stage-150723_224258.war
            VersionLabel: v2
          - ApplicationName: my-app
            DateCreated: '2015-07-23T22:26:10.816Z'
            DateUpdated: '2015-07-23T22:26:10.816Z'
            Description: initial version
            SourceBundle:
              S3Bucket: elasticbeanstalk-us-west-2-015321684451
              S3Key: my-app/5026-stage-150723_222618.war
            VersionLabel: v1
      properties:
        ApplicationVersions:
          $ref: '#/components/schemas/ApplicationVersionDescriptionList'
          description: List of <code>ApplicationVersionDescription</code> objects sorted in order of creation.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: 'In a paginated request, the token that you can pass in a subsequent request to get the next response page.'
      description: Result message wrapping a list of application version descriptions.
    ApplicationDescriptionsMessage:
      type: object
      example:
        Applications:
          - ApplicationName: ruby
            ConfigurationTemplates: []
            DateCreated: '2015-08-13T21:05:44.376Z'
            DateUpdated: '2015-08-13T21:05:44.376Z'
            Versions:
              - Sample Application
          - ApplicationName: pythonsample
            ConfigurationTemplates: []
            DateCreated: '2015-08-13T19:05:43.637Z'
            DateUpdated: '2015-08-13T19:05:43.637Z'
            Description: Application created from the EB CLI using "eb init"
            Versions:
              - Sample Application
          - ApplicationName: nodejs-example
            ConfigurationTemplates: []
            DateCreated: '2015-08-06T17:50:02.486Z'
            DateUpdated: '2015-08-06T17:50:02.486Z'
            Versions:
              - add elasticache
              - First Release
      properties:
        Applications:
          $ref: '#/components/schemas/ApplicationDescriptionList'
          description: This parameter contains a list of <a>ApplicationDescription</a>.
      description: Result message containing a list of application descriptions.
    ConfigurationOptionsDescription:
      type: object
      example:
        Options:
          - ChangeSeverity: NoInterruption
            DefaultValue: '30'
            MaxValue: 300
            MinValue: 5
            Name: Interval
            Namespace: 'aws:elb:healthcheck'
            UserDefined: false
            ValueType: Scalar
          - ChangeSeverity: NoInterruption
            DefaultValue: '2000000'
            MinValue: 0
            Name: LowerThreshold
            Namespace: 'aws:autoscaling:trigger'
            UserDefined: false
            ValueType: Scalar
      properties:
        SolutionStackName:
          $ref: '#/components/schemas/SolutionStackName'
          description: The name of the solution stack these configuration options belong to.
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: The ARN of the platform version.
        Options:
          $ref: '#/components/schemas/ConfigurationOptionDescriptionsList'
          description: ' A list of <a>ConfigurationOptionDescription</a>. '
      description: Describes the settings for a specified configuration set.
    ConfigurationSettingsDescriptions:
      type: object
      example:
        ConfigurationSettings:
          - ApplicationName: my-app
            DateCreated: '2015-08-13T19:16:25Z'
            DateUpdated: '2015-08-13T23:30:07Z'
            DeploymentStatus: deployed
            Description: Environment created from the EB CLI using "eb create"
            EnvironmentName: my-env
            OptionSettings:
              - Namespace: 'aws:autoscaling:asg'
                OptionName: Availability Zones
                ResourceName: AWSEBAutoScalingGroup
                Value: Any
              - Namespace: 'aws:autoscaling:asg'
                OptionName: Cooldown
                ResourceName: AWSEBAutoScalingGroup
                Value: '360'
              - Namespace: 'aws:elb:policies'
                OptionName: ConnectionDrainingTimeout
                ResourceName: AWSEBLoadBalancer
                Value: '20'
              - Namespace: 'aws:elb:policies'
                OptionName: ConnectionSettingIdleTimeout
                ResourceName: AWSEBLoadBalancer
                Value: '60'
            SolutionStackName: 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8
      properties:
        ConfigurationSettings:
          $ref: '#/components/schemas/ConfigurationSettingsDescriptionList'
          description: ' A list of <a>ConfigurationSettingsDescription</a>. '
      description: The results from a request to change the configuration settings of an environment.
    DescribeEnvironmentHealthResult:
      type: object
      example:
        ApplicationMetrics:
          Duration: 10
          Latency:
            P10: 0.001
            P50: 0.001
            P75: 0.002
            P85: 0.003
            P90: 0.003
            P95: 0.004
            P99: 0.004
            P999: 0.004
          RequestCount: 45
          StatusCodes:
            Status2xx: 45
            Status3xx: 0
            Status4xx: 0
            Status5xx: 0
        Causes: []
        Color: Green
        EnvironmentName: my-env
        HealthStatus: Ok
        InstancesHealth:
          Degraded: 0
          Info: 0
          NoData: 0
          Ok: 1
          Pending: 0
          Severe: 0
          Unknown: 0
          Warning: 0
        RefreshedAt: '2015-08-20T21:09:18Z'
      properties:
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: The environment's name.
        HealthStatus:
          $ref: '#/components/schemas/String'
          description: 'The <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">health status</a> of the environment. For example, <code>Ok</code>.'
        Status:
          $ref: '#/components/schemas/EnvironmentHealth'
          description: 'The environment''s operational status. <code>Ready</code>, <code>Launching</code>, <code>Updating</code>, <code>Terminating</code>, or <code>Terminated</code>.'
        Color:
          $ref: '#/components/schemas/String'
          description: 'The <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">health color</a> of the environment.'
        Causes:
          $ref: '#/components/schemas/Causes'
          description: Descriptions of the data that contributed to the environment's current health status.
        ApplicationMetrics:
          $ref: '#/components/schemas/ApplicationMetrics'
          description: Application request metrics for the environment.
        InstancesHealth:
          $ref: '#/components/schemas/InstanceHealthSummary'
          description: Summary health information for the instances in the environment.
        RefreshedAt:
          $ref: '#/components/schemas/RefreshedAt'
          description: The date and time that the health information was retrieved.
      description: Health details for an AWS Elastic Beanstalk environment.
    EnvironmentHealthAttribute:
      type: string
      enum:
        - Status
        - Color
        - Causes
        - ApplicationMetrics
        - InstancesHealth
        - All
        - HealthStatus
        - RefreshedAt
    InvalidRequestException: {}
    DescribeEnvironmentManagedActionHistoryResult:
      type: object
      properties:
        ManagedActionHistoryItems:
          $ref: '#/components/schemas/ManagedActionHistoryItems'
          description: A list of completed and failed managed actions.
        NextToken:
          $ref: '#/components/schemas/String'
          description: A pagination token that you pass to <a>DescribeEnvironmentManagedActionHistory</a> to get the next page of results.
      description: A result message containing a list of completed and failed managed actions.
    DescribeEnvironmentManagedActionsResult:
      type: object
      properties:
        ManagedActions:
          $ref: '#/components/schemas/ManagedActions'
          description: A list of upcoming and in-progress managed actions.
      description: The result message containing a list of managed actions.
    EnvironmentResourceDescriptionsMessage:
      type: object
      example:
        EnvironmentResources:
          AutoScalingGroups:
            - Name: awseb-e-qu3fyyjyjs-stack-AWSEBAutoScalingGroup-QSB2ZO88SXZT
          EnvironmentName: my-env
          Instances:
            - Id: i-0c91c786
          LaunchConfigurations:
            - Name: awseb-e-qu3fyyjyjs-stack-AWSEBAutoScalingLaunchConfiguration-1UUVQIBC96TQ2
          LoadBalancers:
            - Name: awseb-e-q-AWSEBLoa-1EEPZ0K98BIF0
          Queues: []
          Triggers: []
      properties:
        EnvironmentResources:
          $ref: '#/components/schemas/EnvironmentResourceDescription'
          description: ' A list of <a>EnvironmentResourceDescription</a>. '
      description: Result message containing a list of environment resource descriptions.
    EnvironmentId:
      type: string
    EnvironmentName:
      type: string
      minLength: 4
      maxLength: 40
    EventDescriptionsMessage:
      type: object
      example:
        Events:
          - ApplicationName: my-app
            EnvironmentName: my-env
            EventDate: '2015-08-20T07:06:53.535Z'
            Message: Environment health has transitioned from Info to Ok.
            Severity: INFO
          - ApplicationName: my-app
            EnvironmentName: my-env
            EventDate: '2015-08-20T07:06:02.049Z'
            Message: Environment update completed successfully.
            RequestId: b7f3960b-4709-11e5-ba1e-07e16200da41
            Severity: INFO
          - ApplicationName: my-app
            EnvironmentName: my-env
            EventDate: '2015-08-13T19:16:27.561Z'
            Message: Using elasticbeanstalk-us-west-2-012445113685 as Amazon S3 storage bucket for environment data.
            RequestId: ca8dfbf6-41ef-11e5-988b-651aa638f46b
            Severity: INFO
          - ApplicationName: my-app
            EnvironmentName: my-env
            EventDate: '2015-08-13T19:16:26.581Z'
            Message: createEnvironment is starting.
            RequestId: cdfba8f6-41ef-11e5-988b-65638f41aa6b
            Severity: INFO
      properties:
        Events:
          $ref: '#/components/schemas/EventDescriptionList'
          description: ' A list of <a>EventDescription</a>. '
        NextToken:
          $ref: '#/components/schemas/Token'
          description: ' If returned, this indicates that there are more results to obtain. Use this token in the next <a>DescribeEvents</a> call to get the next batch of events. '
      description: Result message wrapping a list of event descriptions.
    DescribeInstancesHealthResult:
      type: object
      example:
        InstanceHealthList:
          - ApplicationMetrics:
              Duration: 10
              Latency:
                P10: 0
                P50: 0.001
                P75: 0.002
                P85: 0.003
                P90: 0.004
                P95: 0.005
                P99: 0.006
                P999: 0.006
              RequestCount: 48
              StatusCodes:
                Status2xx: 47
                Status3xx: 0
                Status4xx: 1
                Status5xx: 0
            Causes: []
            Color: Green
            HealthStatus: Ok
            InstanceId: i-08691cc7
            LaunchedAt: '2015-08-13T19:17:09Z'
            System:
              CPUUtilization:
                IOWait: 0.2
                IRQ: 0
                Idle: 97.8
                Nice: 0.1
                SoftIRQ: 0.1
                System: 0.3
                User: 1.5
              LoadAverage:
                - 0
                - 0.02
                - 0.05
        RefreshedAt: '2015-08-20T21:09:08Z'
      properties:
        InstanceHealthList:
          $ref: '#/components/schemas/InstanceHealthList'
          description: <p>Detailed health information about each instance.</p> <p>The output differs slightly between Linux and Windows environments. There is a difference in the members that are supported under the <code>&lt;CPUUtilization&gt;</code> type.</p>
        RefreshedAt:
          $ref: '#/components/schemas/RefreshedAt'
          description: The date and time that the health information was retrieved.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'Pagination token for the next page of results, if available.'
      description: Detailed health information about the Amazon EC2 instances in an AWS Elastic Beanstalk environment.
    InstancesHealthAttribute:
      type: string
      enum:
        - HealthStatus
        - Color
        - Causes
        - ApplicationMetrics
        - RefreshedAt
        - LaunchedAt
        - System
        - Deployment
        - AvailabilityZone
        - InstanceType
        - All
    DescribePlatformVersionResult:
      type: object
      properties:
        PlatformDescription:
          $ref: '#/components/schemas/PlatformDescription'
          description: Detailed information about the platform version.
    ListAvailableSolutionStacksResultMessage:
      type: object
      example:
        SolutionStackDetails:
          - PermittedFileTypes:
              - zip
            SolutionStackName: 64bit Amazon Linux 2015.03 v2.0.0 running Node.js
        SolutionStacks:
          - 64bit Amazon Linux 2015.03 v2.0.0 running Node.js
          - 64bit Amazon Linux 2015.03 v2.0.0 running PHP 5.6
          - 64bit Amazon Linux 2015.03 v2.0.0 running PHP 5.5
          - 64bit Amazon Linux 2015.03 v2.0.0 running PHP 5.4
          - 64bit Amazon Linux 2015.03 v2.0.0 running Python 3.4
          - 64bit Amazon Linux 2015.03 v2.0.0 running Python 2.7
          - 64bit Amazon Linux 2015.03 v2.0.0 running Python
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.2 (Puma)
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.2 (Passenger Standalone)
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.1 (Puma)
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.1 (Passenger Standalone)
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.0 (Puma)
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.0 (Passenger Standalone)
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 1.9.3
          - 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8
          - 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 7 Java 7
          - 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 7 Java 6
          - 64bit Windows Server Core 2012 R2 running IIS 8.5
          - 64bit Windows Server 2012 R2 running IIS 8.5
          - 64bit Windows Server 2012 running IIS 8
          - 64bit Windows Server 2008 R2 running IIS 7.5
          - 64bit Amazon Linux 2015.03 v2.0.0 running Docker 1.6.2
          - 64bit Amazon Linux 2015.03 v2.0.0 running Multi-container Docker 1.6.2 (Generic)
          - 64bit Debian jessie v2.0.0 running GlassFish 4.1 Java 8 (Preconfigured - Docker)
          - 64bit Debian jessie v2.0.0 running GlassFish 4.0 Java 7 (Preconfigured - Docker)
          - 64bit Debian jessie v2.0.0 running Go 1.4 (Preconfigured - Docker)
          - 64bit Debian jessie v2.0.0 running Go 1.3 (Preconfigured - Docker)
          - 64bit Debian jessie v2.0.0 running Python 3.4 (Preconfigured - Docker)
      properties:
        SolutionStacks:
          $ref: '#/components/schemas/AvailableSolutionStackNamesList'
          description: A list of available solution stacks.
        SolutionStackDetails:
          $ref: '#/components/schemas/AvailableSolutionStackDetailsList'
          description: ' A list of available solution stacks and their <a>SolutionStackDescription</a>. '
      description: A list of available AWS Elastic Beanstalk solution stacks.
    ListPlatformBranchesResult:
      type: object
      properties:
        PlatformBranchSummaryList:
          $ref: '#/components/schemas/PlatformBranchSummaryList'
          description: Summary information about the platform branches.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: 'In a paginated request, if this value isn''t <code>null</code>, it''s the token that you can pass in a subsequent request to get the next response page.'
    SearchFilter:
      type: object
      properties:
        Attribute:
          $ref: '#/components/schemas/SearchFilterAttribute'
          description: The result attribute to which the filter values are applied. Valid values vary by API action.
        Operator:
          $ref: '#/components/schemas/SearchFilterOperator'
          description: The operator to apply to the <code>Attribute</code> with each of the <code>Values</code>. Valid values vary by <code>Attribute</code>.
        Values:
          $ref: '#/components/schemas/SearchFilterValues'
          description: The list of values applied to the <code>Attribute</code> and <code>Operator</code> attributes. Number of values and valid values vary by <code>Attribute</code>.
      description: '<p>Describes criteria to restrict a list of results.</p> <p>For operators that apply a single value to the attribute, the filter is evaluated as follows: <code>Attribute Operator Values[1]</code> </p> <p>Some operators, e.g. <code>in</code>, can apply multiple values. In this case, the filter is evaluated as a logical union (OR) of applications of the operator to the attribute with each one of the values: <code>(Attribute Operator Values[1]) OR (Attribute Operator Values[2]) OR ...</code> </p> <p>The valid values for attributes of <code>SearchFilter</code> depend on the API action. For valid values, see the reference page for the API action you''re calling that takes a <code>SearchFilter</code> parameter.</p>'
    ListPlatformVersionsResult:
      type: object
      properties:
        PlatformSummaryList:
          $ref: '#/components/schemas/PlatformSummaryList'
          description: Summary information about the platform versions.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: 'In a paginated request, if this value isn''t <code>null</code>, it''s the token that you can pass in a subsequent request to get the next response page.'
    PlatformFilter:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/PlatformFilterType'
          description: '<p>The platform version attribute to which the filter values are applied.</p> <p>Valid values: <code>PlatformName</code> | <code>PlatformVersion</code> | <code>PlatformStatus</code> | <code>PlatformBranchName</code> | <code>PlatformLifecycleState</code> | <code>PlatformOwner</code> | <code>SupportedTier</code> | <code>SupportedAddon</code> | <code>ProgrammingLanguageName</code> | <code>OperatingSystemName</code> </p>'
        Operator:
          $ref: '#/components/schemas/PlatformFilterOperator'
          description: '<p>The operator to apply to the <code>Type</code> with each of the <code>Values</code>.</p> <p>Valid values: <code>=</code> | <code>!=</code> | <code>&lt;</code> | <code>&lt;=</code> | <code>&gt;</code> | <code>&gt;=</code> | <code>contains</code> | <code>begins_with</code> | <code>ends_with</code> </p>'
        Values:
          $ref: '#/components/schemas/PlatformFilterValueList'
          description: '<p>The list of values applied to the filtering platform version attribute. Only one value is supported for all current operators.</p> <p>The following list shows valid filter values for some filter attributes.</p> <ul> <li> <p> <code>PlatformStatus</code>: <code>Creating</code> | <code>Failed</code> | <code>Ready</code> | <code>Deleting</code> | <code>Deleted</code> </p> </li> <li> <p> <code>PlatformLifecycleState</code>: <code>recommended</code> </p> </li> <li> <p> <code>SupportedTier</code>: <code>WebServer/Standard</code> | <code>Worker/SQS/HTTP</code> </p> </li> <li> <p> <code>SupportedAddon</code>: <code>Log/S3</code> | <code>Monitoring/Healthd</code> | <code>WorkerDaemon/SQSD</code> </p> </li> </ul>'
      description: '<p>Describes criteria to restrict the results when listing platform versions.</p> <p>The filter is evaluated as follows: <code>Type Operator Values[1]</code> </p>'
    ResourceTagsDescriptionMessage:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource for which a tag list was requested.
        ResourceTags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag key-value pairs.
    ResourceNotFoundException: {}
    ResourceTypeNotSupportedException: {}
    RetrieveEnvironmentInfoResultMessage:
      type: object
      example:
        EnvironmentInfo:
          - Ec2InstanceId: i-09c1c867
            InfoType: tail
            Message: 'https://elasticbeanstalk-us-west-2-0123456789012.s3.amazonaws.com/resources/environments/logs/tail/e-fyqyju3yjs/i-09c1c867/TailLogs-1440109397703.out?AWSAccessKeyId=AKGPT4J56IAJ2EUBL5CQ&Expires=1440195891&Signature=n%2BEalOV6A2HIOx4Rcfb7LT16bBM%3D'
            SampleTimestamp: '2015-08-20T22:23:17.703Z'
      properties:
        EnvironmentInfo:
          $ref: '#/components/schemas/EnvironmentInfoDescriptionList'
          description: ' The <a>EnvironmentInfoDescription</a> of the environment. '
      description: Result message containing a description of the requested environment info.
    ApplicationResourceLifecycleDescriptionMessage:
      type: object
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application.
        ResourceLifecycleConfig:
          $ref: '#/components/schemas/ApplicationResourceLifecycleConfig'
          description: The lifecycle configuration.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TooManyTagsException: {}
    ConfigurationSettingsValidationMessages:
      type: object
      example:
        Messages: []
      properties:
        Messages:
          $ref: '#/components/schemas/ValidationMessagesList'
          description: ' A list of <a>ValidationMessage</a>. '
      description: Provides a list of validation messages.
    ARN:
      type: string
    AbortEnvironmentUpdateMessage:
      type: object
      title: AbortEnvironmentUpdateMessage
      properties:
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: This specifies the ID of the environment with the in-progress update that you want to cancel.
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: This specifies the name of the environment with the in-progress update that you want to cancel.
      description: <p/>
    AbortableOperationInProgress:
      type: boolean
    ActionHistoryStatus:
      type: string
      enum:
        - Completed
        - Failed
        - Unknown
    ActionStatus:
      type: string
      enum:
        - Scheduled
        - Pending
        - Running
        - Unknown
    ActionType:
      type: string
      enum:
        - InstanceRefresh
        - PlatformUpdate
        - Unknown
    ApplicationArn:
      type: string
    Description:
      type: string
      maxLength: 200
    CreationDate:
      type: string
      format: date-time
    UpdateDate:
      type: string
      format: date-time
    VersionLabelsList:
      type: array
      items:
        $ref: '#/components/schemas/VersionLabel'
    ConfigurationTemplateNamesList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationTemplateName'
    ApplicationResourceLifecycleConfig:
      type: object
      properties:
        ServiceRole:
          $ref: '#/components/schemas/String'
          description: '<p>The ARN of an IAM service role that Elastic Beanstalk has permission to assume.</p> <p>The <code>ServiceRole</code> property is required the first time that you provide a <code>VersionLifecycleConfig</code> for the application in one of the supporting calls (<code>CreateApplication</code> or <code>UpdateApplicationResourceLifecycle</code>). After you provide it once, in either one of the calls, Elastic Beanstalk persists the Service Role with the application, and you don''t need to specify it again in subsequent <code>UpdateApplicationResourceLifecycle</code> calls. You can, however, specify it in subsequent calls to change the Service Role to another value.</p>'
        VersionLifecycleConfig:
          $ref: '#/components/schemas/ApplicationVersionLifecycleConfig'
          description: Defines lifecycle settings for application versions.
      description: 'The resource lifecycle configuration for an application. Defines lifecycle settings for resources that belong to the application, and the service role that AWS Elastic Beanstalk assumes in order to apply lifecycle settings. The version lifecycle configuration defines lifecycle settings for application versions.'
    ApplicationDescription:
      type: object
      properties:
        ApplicationArn:
          $ref: '#/components/schemas/ApplicationArn'
          description: The Amazon Resource Name (ARN) of the application.
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application.
        Description:
          $ref: '#/components/schemas/Description'
          description: User-defined description of the application.
        DateCreated:
          $ref: '#/components/schemas/CreationDate'
          description: The date when the application was created.
        DateUpdated:
          $ref: '#/components/schemas/UpdateDate'
          description: The date when the application was last modified.
        Versions:
          $ref: '#/components/schemas/VersionLabelsList'
          description: The names of the versions for this application.
        ConfigurationTemplates:
          $ref: '#/components/schemas/ConfigurationTemplateNamesList'
          description: The names of the configuration templates associated with this application.
        ResourceLifecycleConfig:
          $ref: '#/components/schemas/ApplicationResourceLifecycleConfig'
          description: The lifecycle settings for the application.
      description: Describes the properties of an application.
    ApplicationDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationDescription'
    NullableInteger:
      type: integer
    RequestCount:
      type: integer
    StatusCodes:
      type: object
      properties:
        Status2xx:
          $ref: '#/components/schemas/NullableInteger'
          description: 'The percentage of requests over the last 10 seconds that resulted in a 2xx (200, 201, etc.) status code.'
        Status3xx:
          $ref: '#/components/schemas/NullableInteger'
          description: 'The percentage of requests over the last 10 seconds that resulted in a 3xx (300, 301, etc.) status code.'
        Status4xx:
          $ref: '#/components/schemas/NullableInteger'
          description: 'The percentage of requests over the last 10 seconds that resulted in a 4xx (400, 401, etc.) status code.'
        Status5xx:
          $ref: '#/components/schemas/NullableInteger'
          description: 'The percentage of requests over the last 10 seconds that resulted in a 5xx (500, 501, etc.) status code.'
      description: 'Represents the percentage of requests over the last 10 seconds that resulted in each type of status code response. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html">Status Code Definitions</a>.'
    Latency:
      type: object
      properties:
        P999:
          $ref: '#/components/schemas/NullableDouble'
          description: The average latency for the slowest 0.1 percent of requests over the last 10 seconds.
        P99:
          $ref: '#/components/schemas/NullableDouble'
          description: The average latency for the slowest 1 percent of requests over the last 10 seconds.
        P95:
          $ref: '#/components/schemas/NullableDouble'
          description: The average latency for the slowest 5 percent of requests over the last 10 seconds.
        P90:
          $ref: '#/components/schemas/NullableDouble'
          description: The average latency for the slowest 10 percent of requests over the last 10 seconds.
        P85:
          $ref: '#/components/schemas/NullableDouble'
          description: The average latency for the slowest 15 percent of requests over the last 10 seconds.
        P75:
          $ref: '#/components/schemas/NullableDouble'
          description: The average latency for the slowest 25 percent of requests over the last 10 seconds.
        P50:
          $ref: '#/components/schemas/NullableDouble'
          description: The average latency for the slowest 50 percent of requests over the last 10 seconds.
        P10:
          $ref: '#/components/schemas/NullableDouble'
          description: The average latency for the slowest 90 percent of requests over the last 10 seconds.
      description: Represents the average latency for the slowest X percent of requests over the last 10 seconds.
    ApplicationMetrics:
      type: object
      properties:
        Duration:
          $ref: '#/components/schemas/NullableInteger'
          description: 'The amount of time that the metrics cover (usually 10 seconds). For example, you might have 5 requests (<code>request_count</code>) within the most recent time slice of 10 seconds (<code>duration</code>).'
        RequestCount:
          $ref: '#/components/schemas/RequestCount'
          description: Average number of requests handled by the web server per second over the last 10 seconds.
        StatusCodes:
          $ref: '#/components/schemas/StatusCodes'
          description: Represents the percentage of requests over the last 10 seconds that resulted in each type of status code response.
        Latency:
          $ref: '#/components/schemas/Latency'
          description: Represents the average latency for the slowest X percent of requests over the last 10 seconds. Latencies are in seconds with one millisecond resolution.
      description: Application request metrics for an AWS Elastic Beanstalk environment.
    ApplicationNamesList:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationName'
    ApplicationVersionArn:
      type: string
    SourceBuildInformation:
      type: object
      required:
        - SourceType
        - SourceRepository
        - SourceLocation
      properties:
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: <p>The type of repository.</p> <ul> <li> <p> <code>Git</code> </p> </li> <li> <p> <code>Zip</code> </p> </li> </ul>
        SourceRepository:
          $ref: '#/components/schemas/SourceRepository'
          description: <p>Location where the repository is stored.</p> <ul> <li> <p> <code>CodeCommit</code> </p> </li> <li> <p> <code>S3</code> </p> </li> </ul>
        SourceLocation:
          $ref: '#/components/schemas/SourceLocation'
          description: '<p>The location of the source code, as a formatted string, depending on the value of <code>SourceRepository</code> </p> <ul> <li> <p>For <code>CodeCommit</code>, the format is the repository name and commit ID, separated by a forward slash. For example, <code>my-git-repo/265cfa0cf6af46153527f55d6503ec030551f57a</code>.</p> </li> <li> <p>For <code>S3</code>, the format is the S3 bucket name and object key, separated by a forward slash. For example, <code>my-s3-bucket/Folders/my-source-file</code>.</p> </li> </ul>'
      description: Location of the source code for an application version.
    S3Location:
      type: object
      properties:
        S3Bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: The Amazon S3 bucket where the data is located.
        S3Key:
          $ref: '#/components/schemas/S3Key'
          description: The Amazon S3 key where the data is located.
      description: The bucket and key of an item stored in Amazon S3.
    ApplicationVersionStatus:
      type: string
      enum:
        - Processed
        - Unprocessed
        - Failed
        - Processing
        - Building
    ApplicationVersionDescription:
      type: object
      properties:
        ApplicationVersionArn:
          $ref: '#/components/schemas/ApplicationVersionArn'
          description: The Amazon Resource Name (ARN) of the application version.
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application to which the application version belongs.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the application version.
        VersionLabel:
          $ref: '#/components/schemas/VersionLabel'
          description: A unique identifier for the application version.
        SourceBuildInformation:
          $ref: '#/components/schemas/SourceBuildInformation'
          description: 'If the version''s source code was retrieved from AWS CodeCommit, the location of the source code for the application version.'
        BuildArn:
          $ref: '#/components/schemas/String'
          description: Reference to the artifact from the AWS CodeBuild build.
        SourceBundle:
          $ref: '#/components/schemas/S3Location'
          description: The storage location of the application version's source bundle in Amazon S3.
        DateCreated:
          $ref: '#/components/schemas/CreationDate'
          description: The creation date of the application version.
        DateUpdated:
          $ref: '#/components/schemas/UpdateDate'
          description: The last modified date of the application version.
        Status:
          $ref: '#/components/schemas/ApplicationVersionStatus'
          description: <p>The processing status of the application version. Reflects the state of the application version during its creation. Many of the values are only applicable if you specified <code>True</code> for the <code>Process</code> parameter of the <code>CreateApplicationVersion</code> action. The following list describes the possible values.</p> <ul> <li> <p> <code>Unprocessed</code> – Application version wasn't pre-processed or validated. Elastic Beanstalk will validate configuration files during deployment of the application version to an environment.</p> </li> <li> <p> <code>Processing</code> – Elastic Beanstalk is currently processing the application version.</p> </li> <li> <p> <code>Building</code> – Application version is currently undergoing an AWS CodeBuild build.</p> </li> <li> <p> <code>Processed</code> – Elastic Beanstalk was successfully pre-processed and validated.</p> </li> <li> <p> <code>Failed</code> – Either the AWS CodeBuild build failed or configuration files didn't pass validation. This application version isn't usable.</p> </li> </ul>
      description: Describes the properties of an application version.
    ApplicationVersionDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationVersionDescription'
    Token:
      type: string
    MaxCountRule:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          $ref: '#/components/schemas/BoxedBoolean'
          description: 'Specify <code>true</code> to apply the rule, or <code>false</code> to disable it.'
        MaxCount:
          $ref: '#/components/schemas/BoxedInt'
          description: Specify the maximum number of application versions to retain.
        DeleteSourceFromS3:
          $ref: '#/components/schemas/BoxedBoolean'
          description: Set to <code>true</code> to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
      description: A lifecycle rule that deletes the oldest application version when the maximum count is exceeded.
    MaxAgeRule:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          $ref: '#/components/schemas/BoxedBoolean'
          description: 'Specify <code>true</code> to apply the rule, or <code>false</code> to disable it.'
        MaxAgeInDays:
          $ref: '#/components/schemas/BoxedInt'
          description: Specify the number of days to retain an application versions.
        DeleteSourceFromS3:
          $ref: '#/components/schemas/BoxedBoolean'
          description: Set to <code>true</code> to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
      description: A lifecycle rule that deletes application versions after the specified number of days.
    ApplicationVersionProccess:
      type: boolean
    ApplyEnvironmentManagedActionRequest:
      type: object
      required:
        - ActionId
      title: ApplyEnvironmentManagedActionRequest
      properties:
        EnvironmentName:
          $ref: '#/components/schemas/String'
          description: The name of the target environment.
        EnvironmentId:
          $ref: '#/components/schemas/String'
          description: The environment ID of the target environment.
        ActionId:
          $ref: '#/components/schemas/String'
          description: The action ID of the scheduled managed action to execute.
      description: Request to execute a scheduled managed action immediately.
    OperationsRole:
      type: string
      minLength: 1
      maxLength: 256
    AssociateEnvironmentOperationsRoleMessage:
      type: object
      required:
        - EnvironmentName
        - OperationsRole
      title: AssociateEnvironmentOperationsRoleMessage
      properties:
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: The name of the environment to which to set the operations role.
        OperationsRole:
          $ref: '#/components/schemas/OperationsRole'
          description: The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment's operations role.
      description: Request to add or change the operations role used by an environment.
    AutoCreateApplication:
      type: boolean
    ResourceId:
      type: string
    AutoScalingGroup:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ResourceId'
          description: 'The name of the <code>AutoScalingGroup</code> . '
      description: Describes an Auto Scaling launch configuration.
    AutoScalingGroupList:
      type: array
      items:
        $ref: '#/components/schemas/AutoScalingGroup'
    SolutionStackDescription:
      type: object
      properties:
        SolutionStackName:
          $ref: '#/components/schemas/SolutionStackName'
          description: The name of the solution stack.
        PermittedFileTypes:
          $ref: '#/components/schemas/SolutionStackFileTypeList'
          description: The permitted file types allowed for a solution stack.
      description: Describes the solution stack.
    AvailableSolutionStackDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/SolutionStackDescription'
    SolutionStackName:
      type: string
    AvailableSolutionStackNamesList:
      type: array
      items:
        $ref: '#/components/schemas/SolutionStackName'
    BoxedBoolean:
      type: boolean
    BranchName:
      type: string
    BranchOrder:
      type: integer
    BuildConfiguration:
      type: object
      required:
        - CodeBuildServiceRole
        - Image
      properties:
        ArtifactName:
          $ref: '#/components/schemas/String'
          description: 'The name of the artifact of the CodeBuild build. If provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>-<i>artifact-name</i>.zip. If not provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>.zip. '
        CodeBuildServiceRole:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
        ComputeType:
          $ref: '#/components/schemas/ComputeType'
          description: '<p>Information about the compute resources the build project will use.</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL: Use up to 3 GB memory and 2 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM: Use up to 7 GB memory and 4 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE: Use up to 15 GB memory and 8 vCPUs for builds</code> </p> </li> </ul>'
        Image:
          $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Docker image to use for this build project.
        TimeoutInMinutes:
          $ref: '#/components/schemas/BoxedInt'
          description: 'How long in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.'
      description: Settings for an AWS CodeBuild build.
    Builder:
      type: object
      properties:
        ARN:
          $ref: '#/components/schemas/ARN'
          description: The ARN of the builder.
      description: The builder used to build the custom platform.
    NullableDouble:
      type: number
      format: double
    CPUUtilization:
      type: object
      properties:
        User:
          $ref: '#/components/schemas/NullableDouble'
          description: Percentage of time that the CPU has spent in the <code>User</code> state over the last 10 seconds.
        Nice:
          $ref: '#/components/schemas/NullableDouble'
          description: <p>Available on Linux environments only.</p> <p>Percentage of time that the CPU has spent in the <code>Nice</code> state over the last 10 seconds.</p>
        System:
          $ref: '#/components/schemas/NullableDouble'
          description: <p>Available on Linux environments only.</p> <p>Percentage of time that the CPU has spent in the <code>System</code> state over the last 10 seconds.</p>
        Idle:
          $ref: '#/components/schemas/NullableDouble'
          description: Percentage of time that the CPU has spent in the <code>Idle</code> state over the last 10 seconds.
        IOWait:
          $ref: '#/components/schemas/NullableDouble'
          description: <p>Available on Linux environments only.</p> <p>Percentage of time that the CPU has spent in the <code>I/O Wait</code> state over the last 10 seconds.</p>
        IRQ:
          $ref: '#/components/schemas/NullableDouble'
          description: <p>Available on Linux environments only.</p> <p>Percentage of time that the CPU has spent in the <code>IRQ</code> state over the last 10 seconds.</p>
        SoftIRQ:
          $ref: '#/components/schemas/NullableDouble'
          description: <p>Available on Linux environments only.</p> <p>Percentage of time that the CPU has spent in the <code>SoftIRQ</code> state over the last 10 seconds.</p>
        Privileged:
          $ref: '#/components/schemas/NullableDouble'
          description: <p>Available on Windows environments only.</p> <p>Percentage of time that the CPU has spent in the <code>Privileged</code> state over the last 10 seconds.</p>
      description: CPU utilization metrics for an instance.
    Cause:
      type: string
      minLength: 1
      maxLength: 255
    Causes:
      type: array
      items:
        $ref: '#/components/schemas/Cause'
    DNSCnamePrefix:
      type: string
      minLength: 4
      maxLength: 63
    CheckDNSAvailabilityMessage:
      type: object
      required:
        - CNAMEPrefix
      title: CheckDNSAvailabilityMessage
      properties:
        CNAMEPrefix:
          $ref: '#/components/schemas/DNSCnamePrefix'
          description: The prefix used when this CNAME is reserved.
      description: Results message indicating whether a CNAME is available.
    CnameAvailability:
      type: boolean
    DNSCname:
      type: string
      minLength: 1
      maxLength: 255
    GroupName:
      type: string
      minLength: 1
      maxLength: 19
    VersionLabels:
      type: array
      items:
        $ref: '#/components/schemas/VersionLabel'
    ComposeEnvironmentsMessage:
      type: object
      title: ComposeEnvironmentsMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application to which the specified source bundles belong.
        GroupName:
          $ref: '#/components/schemas/GroupName'
          description: 'The name of the group to which the target environments belong. Specify a group name only if the environment name defined in each target environment''s manifest ends with a + (plus) character. See <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment Manifest (env.yaml)</a> for details.'
        VersionLabels:
          $ref: '#/components/schemas/VersionLabels'
          description: 'A list of version labels, specifying one or more application source bundles that belong to the target application. Each source bundle must include an environment manifest that specifies the name of the environment and the name of the solution stack to use, and optionally can specify environment links to create.'
      description: Request to create or update a group of environments.
    ConfigurationDeploymentStatus:
      type: string
      enum:
        - deployed
        - pending
        - failed
    ConfigurationOptionDefaultValue:
      type: string
    OptionNamespace:
      type: string
    ConfigurationOptionName:
      type: string
    ConfigurationOptionSeverity:
      type: string
    UserDefinedOption:
      type: boolean
    ConfigurationOptionValueType:
      type: string
      enum:
        - Scalar
        - List
    ConfigurationOptionPossibleValues:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationOptionPossibleValue'
    OptionRestrictionMinValue:
      type: integer
    OptionRestrictionMaxValue:
      type: integer
    OptionRestrictionMaxLength:
      type: integer
    OptionRestrictionRegex:
      type: object
      properties:
        Pattern:
          $ref: '#/components/schemas/RegexPattern'
          description: The regular expression pattern that a string configuration option value with this restriction must match.
        Label:
          $ref: '#/components/schemas/RegexLabel'
          description: A unique name representing this regular expression.
      description: A regular expression representing a restriction on a string configuration option value.
    ConfigurationOptionDescription:
      type: object
      properties:
        Namespace:
          $ref: '#/components/schemas/OptionNamespace'
          description: A unique namespace identifying the option's associated AWS resource.
        Name:
          $ref: '#/components/schemas/ConfigurationOptionName'
          description: The name of the configuration option.
        DefaultValue:
          $ref: '#/components/schemas/ConfigurationOptionDefaultValue'
          description: The default value for this configuration option.
        ChangeSeverity:
          $ref: '#/components/schemas/ConfigurationOptionSeverity'
          description: '<p>An indication of which action is required if the value for this configuration option changes:</p> <ul> <li> <p> <code>NoInterruption</code> : There is no interruption to the environment or application availability.</p> </li> <li> <p> <code>RestartEnvironment</code> : The environment is entirely restarted, all AWS resources are deleted and recreated, and the environment is unavailable during the process.</p> </li> <li> <p> <code>RestartApplicationServer</code> : The environment is available the entire time. However, a short application outage occurs when the application servers on the running Amazon EC2 instances are restarted.</p> </li> </ul>'
        UserDefined:
          $ref: '#/components/schemas/UserDefinedOption'
          description: '<p>An indication of whether the user defined this configuration option:</p> <ul> <li> <p> <code>true</code> : This configuration option was defined by the user. It is a valid choice for specifying if this as an <code>Option to Remove</code> when updating configuration settings. </p> </li> <li> <p> <code>false</code> : This configuration was not defined by the user.</p> </li> </ul> <p> Constraint: You can remove only <code>UserDefined</code> options from a configuration. </p> <p> Valid Values: <code>true</code> | <code>false</code> </p>'
        ValueType:
          $ref: '#/components/schemas/ConfigurationOptionValueType'
          description: '<p>An indication of which type of values this option has and whether it is allowable to select one or more than one of the possible values:</p> <ul> <li> <p> <code>Scalar</code> : Values for this option are a single selection from the possible values, or an unformatted string, or numeric value governed by the <code>MIN/MAX/Regex</code> constraints.</p> </li> <li> <p> <code>List</code> : Values for this option are multiple selections from the possible values.</p> </li> <li> <p> <code>Boolean</code> : Values for this option are either <code>true</code> or <code>false</code> .</p> </li> <li> <p> <code>Json</code> : Values for this option are a JSON representation of a <code>ConfigDocument</code>.</p> </li> </ul>'
        ValueOptions:
          $ref: '#/components/schemas/ConfigurationOptionPossibleValues'
          description: 'If specified, values for the configuration option are selected from this list.'
        MinValue:
          $ref: '#/components/schemas/OptionRestrictionMinValue'
          description: 'If specified, the configuration option must be a numeric value greater than this value.'
        MaxValue:
          $ref: '#/components/schemas/OptionRestrictionMaxValue'
          description: 'If specified, the configuration option must be a numeric value less than this value.'
        MaxLength:
          $ref: '#/components/schemas/OptionRestrictionMaxLength'
          description: 'If specified, the configuration option must be a string value no longer than this value.'
        Regex:
          $ref: '#/components/schemas/OptionRestrictionRegex'
          description: 'If specified, the configuration option must be a string value that satisfies this regular expression.'
      description: Describes the possible values for a configuration option.
    ConfigurationOptionDescriptionsList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationOptionDescription'
    ConfigurationOptionPossibleValue:
      type: string
    ResourceName:
      type: string
      minLength: 1
      maxLength: 256
    ConfigurationOptionValue:
      type: string
    ConfigurationOptionSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationOptionSetting'
    PlatformArn:
      type: string
    ConfigurationSettingsDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationSettingsDescription'
    ValidationMessagesList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationMessage'
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    CreateApplicationMessage:
      type: object
      required:
        - ApplicationName
      title: CreateApplicationMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application. Must be unique within your account.
        Description:
          $ref: '#/components/schemas/Description'
          description: Your description of the application.
        ResourceLifecycleConfig:
          $ref: '#/components/schemas/ApplicationResourceLifecycleConfig'
          description: Specifies an application resource lifecycle configuration to prevent your application from accumulating too many versions.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: <p>Specifies the tags applied to the application.</p> <p>Elastic Beanstalk applies these tags only to the application. Environments that you create in the application don't inherit the tags.</p>
      description: Request to create an application.
    CreateApplicationVersionMessage:
      type: object
      required:
        - ApplicationName
        - VersionLabel
      title: CreateApplicationVersionMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: ' The name of the application. If no application is found with this name, and <code>AutoCreateApplication</code> is <code>false</code>, returns an <code>InvalidParameterValue</code> error. '
        VersionLabel:
          $ref: '#/components/schemas/VersionLabel'
          description: '<p>A label identifying this version.</p> <p>Constraint: Must be unique per application. If an application version already exists with this label for the specified application, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>'
        Description:
          $ref: '#/components/schemas/Description'
          description: A description of this application version.
        SourceBuildInformation:
          $ref: '#/components/schemas/SourceBuildInformation'
          description: Specify a commit in an AWS CodeCommit Git repository to use as the source code for the application version.
        SourceBundle:
          $ref: '#/components/schemas/S3Location'
          description: '<p>The Amazon S3 bucket and key that identify the location of the source bundle for this version.</p> <note> <p>The Amazon S3 bucket must be in the same region as the environment.</p> </note> <p>Specify a source bundle in S3 or a commit in an AWS CodeCommit repository (with <code>SourceBuildInformation</code>), but not both. If neither <code>SourceBundle</code> nor <code>SourceBuildInformation</code> are provided, Elastic Beanstalk uses a sample application.</p>'
        BuildConfiguration:
          $ref: '#/components/schemas/BuildConfiguration'
          description: Settings for an AWS CodeBuild build.
        AutoCreateApplication:
          $ref: '#/components/schemas/AutoCreateApplication'
          description: Set to <code>true</code> to create an application with the specified name if it doesn't already exist.
        Process:
          $ref: '#/components/schemas/ApplicationVersionProccess'
          description: '<p>Pre-processes and validates the environment manifest (<code>env.yaml</code>) and configuration files (<code>*.config</code> files in the <code>.ebextensions</code> folder) in the source bundle. Validating configuration files can identify issues prior to deploying the application version to an environment.</p> <p>You must turn processing on for application versions that you create using AWS CodeBuild or AWS CodeCommit. For application versions built from a source bundle in Amazon S3, processing is optional.</p> <note> <p>The <code>Process</code> option validates Elastic Beanstalk configuration files. It doesn''t validate your application''s configuration files, like proxy server or Docker configuration.</p> </note>'
        Tags:
          $ref: '#/components/schemas/Tags'
          description: <p>Specifies the tags applied to the application version.</p> <p>Elastic Beanstalk applies these tags only to the application version. Environments that use the application version don't inherit the tags.</p>
      description: <p/>
    SourceConfiguration:
      type: object
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application associated with the configuration.
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: The name of the configuration template.
      description: A specification for an environment configuration.
    CreateConfigurationTemplateMessage:
      type: object
      required:
        - ApplicationName
        - TemplateName
      title: CreateConfigurationTemplateMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the Elastic Beanstalk application to associate with this configuration template.
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: '<p>The name of the configuration template.</p> <p>Constraint: This name must be unique per application.</p>'
        SolutionStackName:
          $ref: '#/components/schemas/SolutionStackName'
          description: '<p>The name of an Elastic Beanstalk solution stack (platform version) that this configuration uses. For example, <code>64bit Amazon Linux 2013.09 running Tomcat 7 Java 7</code>. A solution stack specifies the operating system, runtime, and application server for a configuration template. It also determines the set of configuration options as well as the possible and default values. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html">Supported Platforms</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.</p> <p>You must specify <code>SolutionStackName</code> if you don''t specify <code>PlatformArn</code>, <code>EnvironmentId</code>, or <code>SourceConfiguration</code>.</p> <p>Use the <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_ListAvailableSolutionStacks.html"> <code>ListAvailableSolutionStacks</code> </a> API to obtain a list of available solution stacks.</p>'
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: '<p>The Amazon Resource Name (ARN) of the custom platform. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/custom-platforms.html"> Custom Platforms</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.</p> <note> <p>If you specify <code>PlatformArn</code>, then don''t specify <code>SolutionStackName</code>.</p> </note>'
        SourceConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
          description: '<p>An Elastic Beanstalk configuration template to base this one on. If specified, Elastic Beanstalk uses the configuration values from the specified configuration template to create a new configuration.</p> <p>Values specified in <code>OptionSettings</code> override any values obtained from the <code>SourceConfiguration</code>.</p> <p>You must specify <code>SourceConfiguration</code> if you don''t specify <code>PlatformArn</code>, <code>EnvironmentId</code>, or <code>SolutionStackName</code>.</p> <p>Constraint: If both solution stack name and source configuration are specified, the solution stack of the source configuration template must match the specified solution stack name.</p>'
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: 'The ID of an environment whose settings you want to use to create the configuration template. You must specify <code>EnvironmentId</code> if you don''t specify <code>PlatformArn</code>, <code>SolutionStackName</code>, or <code>SourceConfiguration</code>.'
        Description:
          $ref: '#/components/schemas/Description'
          description: An optional description for this configuration.
        OptionSettings:
          $ref: '#/components/schemas/ConfigurationOptionSettingsList'
          description: 'Option values for the Elastic Beanstalk configuration, such as the instance type. If specified, these values override the values obtained from the solution stack or the source configuration template. For a complete list of Elastic Beanstalk configuration options, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html">Option Values</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.'
        Tags:
          $ref: '#/components/schemas/Tags'
          description: Specifies the tags applied to the configuration template.
      description: Request to create a configuration template.
    EnvironmentTier:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: '<p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>'
        Type:
          $ref: '#/components/schemas/String'
          description: '<p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>'
        Version:
          $ref: '#/components/schemas/String'
          description: '<p>The version of this environment tier. When you don''t set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>'
      description: Describes the properties of an environment tier
    OptionsSpecifierList:
      type: array
      items:
        $ref: '#/components/schemas/OptionSpecification'
    CreateEnvironmentMessage:
      type: object
      required:
        - ApplicationName
      title: CreateEnvironmentMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application that is associated with this environment.
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>A unique name for the environment.</p> <p>Constraint: Must be from 4 to 40 characters in length. The name can contain only letters, numbers, and hyphens. It can''t start or end with a hyphen. This name must be unique within a region in your account. If the specified name already exists in the region, Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>If you don''t specify the <code>CNAMEPrefix</code> parameter, the environment name becomes part of the CNAME, and therefore part of the visible URL for your application.</p>'
        GroupName:
          $ref: '#/components/schemas/GroupName'
          description: 'The name of the group to which the target environment belongs. Specify a group name only if the environment''s name is specified in an environment manifest and not with the environment name parameter. See <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment Manifest (env.yaml)</a> for details.'
        Description:
          $ref: '#/components/schemas/Description'
          description: Your description for this environment.
        CNAMEPrefix:
          $ref: '#/components/schemas/DNSCnamePrefix'
          description: 'If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name.'
        Tier:
          $ref: '#/components/schemas/EnvironmentTier'
          description: Specifies the tier to use in creating this environment. The environment tier that you choose determines whether Elastic Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles background-processing tasks.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: Specifies the tags applied to resources in the environment.
        VersionLabel:
          $ref: '#/components/schemas/VersionLabel'
          description: '<p>The name of the application version to deploy.</p> <p>Default: If not specified, Elastic Beanstalk attempts to deploy the sample application.</p>'
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: '<p>The name of the Elastic Beanstalk configuration template to use with the environment.</p> <note> <p>If you specify <code>TemplateName</code>, then don''t specify <code>SolutionStackName</code>.</p> </note>'
        SolutionStackName:
          $ref: '#/components/schemas/SolutionStackName'
          description: '<p>The name of an Elastic Beanstalk solution stack (platform version) to use with the environment. If specified, Elastic Beanstalk sets the configuration values to the default values associated with the specified solution stack. For a list of current solution stacks, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/platforms/platforms-supported.html">Elastic Beanstalk Supported Platforms</a> in the <i>AWS Elastic Beanstalk Platforms</i> guide.</p> <note> <p>If you specify <code>SolutionStackName</code>, don''t specify <code>PlatformArn</code> or <code>TemplateName</code>.</p> </note>'
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: '<p>The Amazon Resource Name (ARN) of the custom platform to use with the environment. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/custom-platforms.html">Custom Platforms</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.</p> <note> <p>If you specify <code>PlatformArn</code>, don''t specify <code>SolutionStackName</code>.</p> </note>'
        OptionSettings:
          $ref: '#/components/schemas/ConfigurationOptionSettingsList'
          description: 'If specified, AWS Elastic Beanstalk sets the specified configuration options to the requested value in the configuration set for the new environment. These override the values obtained from the solution stack or the configuration template.'
        OptionsToRemove:
          $ref: '#/components/schemas/OptionsSpecifierList'
          description: A list of custom user-defined configuration options to remove from the configuration set for this new environment.
        OperationsRole:
          $ref: '#/components/schemas/OperationsRole'
          description: 'The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment''s operations role. If specified, Elastic Beanstalk uses the operations role for permissions to downstream services during this call and during subsequent calls acting on this environment. To specify an operations role, you must have the <code>iam:PassRole</code> permission for the role. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.'
      description: <p/>
    PlatformName:
      type: string
    PlatformVersion:
      type: string
    CreatePlatformVersionRequest:
      type: object
      required:
        - PlatformName
        - PlatformVersion
        - PlatformDefinitionBundle
      title: CreatePlatformVersionRequest
      properties:
        PlatformName:
          $ref: '#/components/schemas/PlatformName'
          description: The name of your custom platform.
        PlatformVersion:
          $ref: '#/components/schemas/PlatformVersion'
          description: 'The number, such as 1.0.2, for the new platform version.'
        PlatformDefinitionBundle:
          $ref: '#/components/schemas/S3Location'
          description: The location of the platform definition archive in Amazon S3.
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: The name of the builder environment.
        OptionSettings:
          $ref: '#/components/schemas/ConfigurationOptionSettingsList'
          description: The configuration option settings to apply to the builder environment.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: <p>Specifies the tags applied to the new platform version.</p> <p>Elastic Beanstalk applies these tags only to the platform version. Environments that you create using the platform version don't inherit the tags.</p>
      description: Request to create a new platform version.
    PlatformSummary:
      type: object
      properties:
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: The ARN of the platform version.
        PlatformOwner:
          $ref: '#/components/schemas/PlatformOwner'
          description: The AWS account ID of the person who created the platform version.
        PlatformStatus:
          $ref: '#/components/schemas/PlatformStatus'
          description: The status of the platform version. You can create an environment from the platform version once it is ready.
        PlatformCategory:
          $ref: '#/components/schemas/PlatformCategory'
          description: The category of platform version.
        OperatingSystemName:
          $ref: '#/components/schemas/OperatingSystemName'
          description: The operating system used by the platform version.
        OperatingSystemVersion:
          $ref: '#/components/schemas/OperatingSystemVersion'
          description: The version of the operating system used by the platform version.
        SupportedTierList:
          $ref: '#/components/schemas/SupportedTierList'
          description: The tiers in which the platform version runs.
        SupportedAddonList:
          $ref: '#/components/schemas/SupportedAddonList'
          description: The additions associated with the platform version.
        PlatformLifecycleState:
          $ref: '#/components/schemas/PlatformLifecycleState'
          description: '<p>The state of the platform version in its lifecycle.</p> <p>Possible values: <code>recommended</code> | empty</p> <p>If an empty value is returned, the platform version is supported but isn''t the recommended one for its branch.</p>'
        PlatformVersion:
          $ref: '#/components/schemas/PlatformVersion'
          description: The version string of the platform version.
        PlatformBranchName:
          $ref: '#/components/schemas/BranchName'
          description: The platform branch to which the platform version belongs.
        PlatformBranchLifecycleState:
          $ref: '#/components/schemas/PlatformBranchLifecycleState'
          description: '<p>The state of the platform version''s branch in its lifecycle.</p> <p>Possible values: <code>beta</code> | <code>supported</code> | <code>deprecated</code> | <code>retired</code> </p>'
      description: Summary information about a platform version.
    VirtualizationType:
      type: string
    ImageId:
      type: string
    CustomAmi:
      type: object
      properties:
        VirtualizationType:
          $ref: '#/components/schemas/VirtualizationType'
          description: The type of virtualization used to create the custom AMI.
        ImageId:
          $ref: '#/components/schemas/ImageId'
          description: THe ID of the image used to create the custom AMI.
      description: A custom AMI available to platforms.
    CustomAmiList:
      type: array
      items:
        $ref: '#/components/schemas/CustomAmi'
    TerminateEnvForce:
      type: boolean
    DeleteApplicationMessage:
      type: object
      required:
        - ApplicationName
      title: DeleteApplicationMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application to delete.
        TerminateEnvByForce:
          $ref: '#/components/schemas/TerminateEnvForce'
          description: 'When set to true, running environments will be terminated before deleting the application.'
      description: Request to delete an application.
    DeleteSourceBundle:
      type: boolean
    DeleteApplicationVersionMessage:
      type: object
      required:
        - ApplicationName
        - VersionLabel
      title: DeleteApplicationVersionMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application to which the version belongs.
        VersionLabel:
          $ref: '#/components/schemas/VersionLabel'
          description: The label of the version to delete.
        DeleteSourceBundle:
          $ref: '#/components/schemas/DeleteSourceBundle'
          description: 'Set to <code>true</code> to delete the source bundle from your storage bucket. Otherwise, the application version is deleted only from Elastic Beanstalk and the source bundle remains in Amazon S3.'
      description: Request to delete an application version.
    DeleteConfigurationTemplateMessage:
      type: object
      required:
        - ApplicationName
        - TemplateName
      title: DeleteConfigurationTemplateMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application to delete the configuration template from.
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: The name of the configuration template to delete.
      description: Request to delete a configuration template.
    DeleteEnvironmentConfigurationMessage:
      type: object
      required:
        - ApplicationName
        - EnvironmentName
      title: DeleteEnvironmentConfigurationMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application the environment is associated with.
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: The name of the environment to delete the draft configuration from.
      description: Request to delete a draft environment configuration.
    DeletePlatformVersionRequest:
      type: object
      title: DeletePlatformVersionRequest
      properties:
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: The ARN of the version of the custom platform.
    NullableLong:
      type: integer
    DeploymentTimestamp:
      type: string
      format: date-time
    Deployment:
      type: object
      properties:
        VersionLabel:
          $ref: '#/components/schemas/String'
          description: The version label of the application version in the deployment.
        DeploymentId:
          $ref: '#/components/schemas/NullableLong'
          description: The ID of the deployment. This number increases by one each time that you deploy source code or change instance configuration settings.
        Status:
          $ref: '#/components/schemas/String'
          description: '<p>The status of the deployment:</p> <ul> <li> <p> <code>In Progress</code> : The deployment is in progress.</p> </li> <li> <p> <code>Deployed</code> : The deployment succeeded.</p> </li> <li> <p> <code>Failed</code> : The deployment failed.</p> </li> </ul>'
        DeploymentTime:
          $ref: '#/components/schemas/DeploymentTimestamp'
          description: '<p>For in-progress deployments, the time that the deployment started.</p> <p>For completed deployments, the time that the deployment ended.</p>'
      description: Information about an application version deployment.
    ResourceQuotas:
      type: object
      properties:
        ApplicationQuota:
          $ref: '#/components/schemas/ResourceQuota'
          description: The quota for applications in the AWS account.
        ApplicationVersionQuota:
          $ref: '#/components/schemas/ResourceQuota'
          description: The quota for application versions in the AWS account.
        EnvironmentQuota:
          $ref: '#/components/schemas/ResourceQuota'
          description: The quota for environments in the AWS account.
        ConfigurationTemplateQuota:
          $ref: '#/components/schemas/ResourceQuota'
          description: The quota for configuration templates in the AWS account.
        CustomPlatformQuota:
          $ref: '#/components/schemas/ResourceQuota'
          description: The quota for custom platforms in the AWS account.
      description: A set of per-resource AWS Elastic Beanstalk quotas associated with an AWS account. They reflect Elastic Beanstalk resource limits for this account.
    MaxRecords:
      type: integer
      minimum: 1
      maximum: 1000
    DescribeApplicationVersionsMessage:
      type: object
      title: DescribeApplicationVersionsMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: Specify an application name to show only application versions for that application.
        VersionLabels:
          $ref: '#/components/schemas/VersionLabelsList'
          description: Specify a version label to show a specific application version.
        MaxRecords:
          $ref: '#/components/schemas/MaxRecords'
          description: '<p>For a paginated request. Specify a maximum number of application versions to include in each response.</p> <p>If no <code>MaxRecords</code> is specified, all available application versions are retrieved in a single response.</p>'
        NextToken:
          $ref: '#/components/schemas/Token'
          description: '<p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>'
      description: Request to describe application versions.
    DescribeApplicationsMessage:
      type: object
      title: DescribeApplicationsMessage
      properties:
        ApplicationNames:
          $ref: '#/components/schemas/ApplicationNamesList'
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to only include those with the specified names.'
      description: Request to describe one or more applications.
    DescribeConfigurationOptionsMessage:
      type: object
      title: DescribeConfigurationOptionsMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application associated with the configuration template or environment. Only needed if you want to describe the configuration options associated with either the configuration template or environment.
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: The name of the configuration template whose configuration options you want to describe.
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: The name of the environment whose configuration options you want to describe.
        SolutionStackName:
          $ref: '#/components/schemas/SolutionStackName'
          description: The name of the solution stack whose configuration options you want to describe.
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: The ARN of the custom platform.
        Options:
          $ref: '#/components/schemas/OptionsSpecifierList'
          description: 'If specified, restricts the descriptions to only the specified options.'
      description: Result message containing a list of application version descriptions.
    DescribeConfigurationSettingsMessage:
      type: object
      required:
        - ApplicationName
      title: DescribeConfigurationSettingsMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The application for the environment or configuration template.
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: '<p>The name of the configuration template to describe.</p> <p> Conditional: You must specify either this parameter or an EnvironmentName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns a <code>MissingRequiredParameter</code> error. </p>'
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>The name of the environment to describe.</p> <p> Condition: You must specify either this or a TemplateName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
      description: Result message containing all of the configuration settings for a specified solution stack or configuration template.
    EnvironmentHealthAttributes:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentHealthAttribute'
    DescribeEnvironmentHealthRequest:
      type: object
      title: DescribeEnvironmentHealthRequest
      properties:
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>Specify the environment by name.</p> <p>You must specify either this or an EnvironmentName, or both.</p>'
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: '<p>Specify the environment by ID.</p> <p>You must specify either this or an EnvironmentName, or both.</p>'
        AttributeNames:
          $ref: '#/components/schemas/EnvironmentHealthAttributes'
          description: 'Specify the response elements to return. To retrieve all attributes, set to <code>All</code>. If no attribute names are specified, returns the name of the environment.'
      description: See the example below to learn how to create a request body.
    EnvironmentHealth:
      type: string
      enum:
        - Green
        - Yellow
        - Red
        - Grey
    InstanceHealthSummary:
      type: object
      properties:
        NoData:
          $ref: '#/components/schemas/NullableInteger'
          description: ' <b>Grey.</b> AWS Elastic Beanstalk and the health agent are reporting no data on an instance.'
        Unknown:
          $ref: '#/components/schemas/NullableInteger'
          description: ' <b>Grey.</b> AWS Elastic Beanstalk and the health agent are reporting an insufficient amount of data on an instance.'
        Pending:
          $ref: '#/components/schemas/NullableInteger'
          description: ' <b>Grey.</b> An operation is in progress on an instance within the command timeout.'
        Ok:
          $ref: '#/components/schemas/NullableInteger'
          description: ' <b>Green.</b> An instance is passing health checks and the health agent is not reporting any problems.'
        Info:
          $ref: '#/components/schemas/NullableInteger'
          description: ' <b>Green.</b> An operation is in progress on an instance.'
        Warning:
          $ref: '#/components/schemas/NullableInteger'
          description: ' <b>Yellow.</b> The health agent is reporting a moderate number of request failures or other issues for an instance or environment.'
        Degraded:
          $ref: '#/components/schemas/NullableInteger'
          description: ' <b>Red.</b> The health agent is reporting a high number of request failures or other issues for an instance or environment.'
        Severe:
          $ref: '#/components/schemas/NullableInteger'
          description: ' <b>Red.</b> The health agent is reporting a very high number of request failures or other issues for an instance or environment.'
      description: 'Represents summary information about the health of an instance. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">Health Colors and Statuses</a>.'
    RefreshedAt:
      type: string
      format: date-time
    ManagedActionHistoryMaxItems:
      type: integer
      minimum: 1
      maximum: 100
    DescribeEnvironmentManagedActionHistoryRequest:
      type: object
      title: DescribeEnvironmentManagedActionHistoryRequest
      properties:
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: The environment ID of the target environment.
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: The name of the target environment.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The pagination token returned by a previous request.
        MaxItems:
          $ref: '#/components/schemas/ManagedActionHistoryMaxItems'
          description: The maximum number of items to return for a single request.
      description: Request to list completed and failed managed actions.
    ManagedActionHistoryItems:
      type: array
      items:
        $ref: '#/components/schemas/ManagedActionHistoryItem'
      minItems: 1
      maxItems: 100
    DescribeEnvironmentManagedActionsRequest:
      type: object
      title: DescribeEnvironmentManagedActionsRequest
      properties:
        EnvironmentName:
          $ref: '#/components/schemas/String'
          description: The name of the target environment.
        EnvironmentId:
          $ref: '#/components/schemas/String'
          description: The environment ID of the target environment.
        Status:
          $ref: '#/components/schemas/ActionStatus'
          description: 'To show only actions with a particular status, specify a status.'
      description: Request to list an environment's upcoming and in-progress managed actions.
    ManagedActions:
      type: array
      items:
        $ref: '#/components/schemas/ManagedAction'
      minItems: 1
      maxItems: 100
    DescribeEnvironmentResourcesMessage:
      type: object
      title: DescribeEnvironmentResourcesMessage
      properties:
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: '<p>The ID of the environment to retrieve AWS resource usage data.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>The name of the environment to retrieve AWS resource usage data.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
      description: Request to describe the resources in an environment.
    EnvironmentIdList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentId'
    EnvironmentNamesList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentName'
    IncludeDeleted:
      type: boolean
    IncludeDeletedBackTo:
      type: string
      format: date-time
    DescribeEnvironmentsMessage:
      type: object
      title: DescribeEnvironmentsMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application.'
        VersionLabel:
          $ref: '#/components/schemas/VersionLabel'
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application version.'
        EnvironmentIds:
          $ref: '#/components/schemas/EnvironmentIdList'
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified IDs.'
        EnvironmentNames:
          $ref: '#/components/schemas/EnvironmentNamesList'
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified names.'
        IncludeDeleted:
          $ref: '#/components/schemas/IncludeDeleted'
          description: '<p>Indicates whether to include deleted environments:</p> <p> <code>true</code>: Environments that have been deleted after <code>IncludedDeletedBackTo</code> are displayed.</p> <p> <code>false</code>: Do not include deleted environments.</p>'
        IncludedDeletedBackTo:
          $ref: '#/components/schemas/IncludeDeletedBackTo'
          description: ' If specified when <code>IncludeDeleted</code> is set to <code>true</code>, then environments deleted after this date are displayed. '
        MaxRecords:
          $ref: '#/components/schemas/MaxRecords'
          description: '<p>For a paginated request. Specify a maximum number of environments to include in each response.</p> <p>If no <code>MaxRecords</code> is specified, all available environments are retrieved in a single response.</p>'
        NextToken:
          $ref: '#/components/schemas/Token'
          description: '<p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>'
      description: Request to describe one or more environments.
    RequestId:
      type: string
    EventSeverity:
      type: string
      enum:
        - TRACE
        - DEBUG
        - INFO
        - WARN
        - ERROR
        - FATAL
    TimeFilterStart:
      type: string
      format: date-time
    TimeFilterEnd:
      type: string
      format: date-time
    DescribeEventsMessage:
      type: object
      title: DescribeEventsMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those associated with this application.'
        VersionLabel:
          $ref: '#/components/schemas/VersionLabel'
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this application version.'
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that are associated with this environment configuration.'
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.'
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.'
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: 'The ARN of a custom platform version. If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this custom platform version.'
        RequestId:
          $ref: '#/components/schemas/RequestId'
          description: 'If specified, AWS Elastic Beanstalk restricts the described events to include only those associated with this request ID.'
        Severity:
          $ref: '#/components/schemas/EventSeverity'
          description: 'If specified, limits the events returned from this call to include only those with the specified severity or higher.'
        StartTime:
          $ref: '#/components/schemas/TimeFilterStart'
          description: 'If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur on or after this time.'
        EndTime:
          $ref: '#/components/schemas/TimeFilterEnd'
          description: ' If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur up to, but not including, the <code>EndTime</code>. '
        MaxRecords:
          $ref: '#/components/schemas/MaxRecords'
          description: 'Specifies the maximum number of events that can be returned, beginning with the most recent event.'
        NextToken:
          $ref: '#/components/schemas/Token'
          description: 'Pagination token. If specified, the events return the next batch of results.'
      description: Request to retrieve a list of events for an environment.
    InstancesHealthAttributes:
      type: array
      items:
        $ref: '#/components/schemas/InstancesHealthAttribute'
    NextToken:
      type: string
      minLength: 1
      maxLength: 100
    DescribeInstancesHealthRequest:
      type: object
      title: DescribeInstancesHealthRequest
      properties:
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: Specify the AWS Elastic Beanstalk environment by name.
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: Specify the AWS Elastic Beanstalk environment by ID.
        AttributeNames:
          $ref: '#/components/schemas/InstancesHealthAttributes'
          description: 'Specifies the response elements you wish to receive. To retrieve all attributes, set to <code>All</code>. If no attribute names are specified, returns a list of instances.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Specify the pagination token returned by a previous call.
      description: Parameters for a call to <code>DescribeInstancesHealth</code>.
    InstanceHealthList:
      type: array
      items:
        $ref: '#/components/schemas/SingleInstanceHealth'
    DescribePlatformVersionRequest:
      type: object
      title: DescribePlatformVersionRequest
      properties:
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: The ARN of the platform version.
    PlatformDescription:
      type: object
      properties:
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: The ARN of the platform version.
        PlatformOwner:
          $ref: '#/components/schemas/PlatformOwner'
          description: The AWS account ID of the person who created the platform version.
        PlatformName:
          $ref: '#/components/schemas/PlatformName'
          description: The name of the platform version.
        PlatformVersion:
          $ref: '#/components/schemas/PlatformVersion'
          description: The version of the platform version.
        SolutionStackName:
          $ref: '#/components/schemas/SolutionStackName'
          description: The name of the solution stack used by the platform version.
        PlatformStatus:
          $ref: '#/components/schemas/PlatformStatus'
          description: The status of the platform version.
        DateCreated:
          $ref: '#/components/schemas/CreationDate'
          description: The date when the platform version was created.
        DateUpdated:
          $ref: '#/components/schemas/UpdateDate'
          description: The date when the platform version was last updated.
        PlatformCategory:
          $ref: '#/components/schemas/PlatformCategory'
          description: The category of the platform version.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the platform version.
        Maintainer:
          $ref: '#/components/schemas/Maintainer'
          description: Information about the maintainer of the platform version.
        OperatingSystemName:
          $ref: '#/components/schemas/OperatingSystemName'
          description: The operating system used by the platform version.
        OperatingSystemVersion:
          $ref: '#/components/schemas/OperatingSystemVersion'
          description: The version of the operating system used by the platform version.
        ProgrammingLanguages:
          $ref: '#/components/schemas/PlatformProgrammingLanguages'
          description: The programming languages supported by the platform version.
        Frameworks:
          $ref: '#/components/schemas/PlatformFrameworks'
          description: The frameworks supported by the platform version.
        CustomAmiList:
          $ref: '#/components/schemas/CustomAmiList'
          description: The custom AMIs supported by the platform version.
        SupportedTierList:
          $ref: '#/components/schemas/SupportedTierList'
          description: The tiers supported by the platform version.
        SupportedAddonList:
          $ref: '#/components/schemas/SupportedAddonList'
          description: The additions supported by the platform version.
        PlatformLifecycleState:
          $ref: '#/components/schemas/PlatformLifecycleState'
          description: '<p>The state of the platform version in its lifecycle.</p> <p>Possible values: <code>Recommended</code> | <code>null</code> </p> <p>If a null value is returned, the platform version isn''t the recommended one for its branch. Each platform branch has a single recommended platform version, typically the most recent one.</p>'
        PlatformBranchName:
          $ref: '#/components/schemas/BranchName'
          description: The platform branch to which the platform version belongs.
        PlatformBranchLifecycleState:
          $ref: '#/components/schemas/PlatformBranchLifecycleState'
          description: '<p>The state of the platform version''s branch in its lifecycle.</p> <p>Possible values: <code>Beta</code> | <code>Supported</code> | <code>Deprecated</code> | <code>Retired</code> </p>'
      description: Detailed information about a platform version.
    DisassociateEnvironmentOperationsRoleMessage:
      type: object
      required:
        - EnvironmentName
      title: DisassociateEnvironmentOperationsRoleMessage
      properties:
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: The name of the environment from which to disassociate the operations role.
      description: Request to disassociate the operations role from an environment.
    Ec2InstanceId:
      type: string
    EndpointURL:
      type: string
    EnvironmentArn:
      type: string
    EnvironmentStatus:
      type: string
      enum:
        - Aborting
        - Launching
        - Updating
        - LinkingFrom
        - LinkingTo
        - Ready
        - Terminating
        - Terminated
    EnvironmentHealthStatus:
      type: string
      enum:
        - NoData
        - Unknown
        - Pending
        - Ok
        - Info
        - Warning
        - Degraded
        - Severe
        - Suspended
    EnvironmentResourcesDescription:
      type: object
      properties:
        LoadBalancer:
          $ref: '#/components/schemas/LoadBalancerDescription'
          description: Describes the LoadBalancer.
      description: Describes the AWS resources in use by this environment. This data is not live data.
    EnvironmentLinks:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentLink'
    EnvironmentDescriptionsList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentDescription'
    EnvironmentInfoType:
      type: string
      enum:
        - tail
        - bundle
    SampleTimestamp:
      type: string
      format: date-time
    Message:
      type: string
    EnvironmentInfoDescription:
      type: object
      properties:
        InfoType:
          $ref: '#/components/schemas/EnvironmentInfoType'
          description: The type of information retrieved.
        Ec2InstanceId:
          $ref: '#/components/schemas/Ec2InstanceId'
          description: The Amazon EC2 Instance ID for this information.
        SampleTimestamp:
          $ref: '#/components/schemas/SampleTimestamp'
          description: The time stamp when this information was retrieved.
        Message:
          $ref: '#/components/schemas/Message'
          description: <p>The retrieved information. Currently contains a presigned Amazon S3 URL. The files are deleted after 15 minutes.</p> <p>Anyone in possession of this URL can access the files before they are deleted. Make the URL available only to trusted parties.</p>
      description: The information retrieved from the Amazon EC2 instances.
    EnvironmentInfoDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentInfoDescription'
    EnvironmentLink:
      type: object
      properties:
        LinkName:
          $ref: '#/components/schemas/String'
          description: The name of the link.
        EnvironmentName:
          $ref: '#/components/schemas/String'
          description: The name of the linked environment (the dependency).
      description: 'A link to another environment, defined in the environment''s manifest. Links provide connection information in system properties that can be used to connect to another environment in the same group. See <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment Manifest (env.yaml)</a> for details.'
    InstanceList:
      type: array
      items:
        $ref: '#/components/schemas/Instance'
    LaunchConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/LaunchConfiguration'
    LaunchTemplateList:
      type: array
      items:
        $ref: '#/components/schemas/LaunchTemplate'
    LoadBalancerList:
      type: array
      items:
        $ref: '#/components/schemas/LoadBalancer'
    TriggerList:
      type: array
      items:
        $ref: '#/components/schemas/Trigger'
    QueueList:
      type: array
      items:
        $ref: '#/components/schemas/Queue'
    EnvironmentResourceDescription:
      type: object
      properties:
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: The name of the environment.
        AutoScalingGroups:
          $ref: '#/components/schemas/AutoScalingGroupList'
          description: ' The <code>AutoScalingGroups</code> used by this environment. '
        Instances:
          $ref: '#/components/schemas/InstanceList'
          description: The Amazon EC2 instances used by this environment.
        LaunchConfigurations:
          $ref: '#/components/schemas/LaunchConfigurationList'
          description: The Auto Scaling launch configurations in use by this environment.
        LaunchTemplates:
          $ref: '#/components/schemas/LaunchTemplateList'
          description: The Amazon EC2 launch templates in use by this environment.
        LoadBalancers:
          $ref: '#/components/schemas/LoadBalancerList'
          description: The LoadBalancers in use by this environment.
        Triggers:
          $ref: '#/components/schemas/TriggerList'
          description: 'The <code>AutoScaling</code> triggers in use by this environment. '
        Queues:
          $ref: '#/components/schemas/QueueList'
          description: The queues used by this environment.
      description: Describes the AWS resources in use by this environment. This data is live.
    LoadBalancerDescription:
      type: object
      properties:
        LoadBalancerName:
          $ref: '#/components/schemas/String'
          description: The name of the LoadBalancer.
        Domain:
          $ref: '#/components/schemas/String'
          description: The domain name of the LoadBalancer.
        Listeners:
          $ref: '#/components/schemas/LoadBalancerListenersDescription'
          description: A list of Listeners used by the LoadBalancer.
      description: Describes the details of a LoadBalancer.
    EventDate:
      type: string
      format: date-time
    EventMessage:
      type: string
    EventDescription:
      type: object
      properties:
        EventDate:
          $ref: '#/components/schemas/EventDate'
          description: The date when the event occurred.
        Message:
          $ref: '#/components/schemas/EventMessage'
          description: The event message.
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The application associated with the event.
        VersionLabel:
          $ref: '#/components/schemas/VersionLabel'
          description: The release label for the application version associated with this event.
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: The name of the configuration associated with this event.
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: The name of the environment associated with this event.
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: The ARN of the platform version.
        RequestId:
          $ref: '#/components/schemas/RequestId'
          description: The web service request ID for the activity of this event.
        Severity:
          $ref: '#/components/schemas/EventSeverity'
          description: The severity level of this event.
      description: Describes an event.
    EventDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/EventDescription'
    FailureType:
      type: string
      enum:
        - UpdateCancelled
        - CancellationFailed
        - RollbackFailed
        - RollbackSuccessful
        - InternalFailure
        - InvalidEnvironmentState
        - PermissionsError
    FileTypeExtension:
      type: string
      minLength: 1
      maxLength: 100
    ForceTerminate:
      type: boolean
    Instance:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ResourceId'
          description: The ID of the Amazon EC2 instance.
      description: The description of an Amazon EC2 instance.
    SingleInstanceHealth:
      type: object
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The ID of the Amazon EC2 instance.
        HealthStatus:
          $ref: '#/components/schemas/String'
          description: 'Returns the health status of the specified instance. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">Health Colors and Statuses</a>.'
        Color:
          $ref: '#/components/schemas/String'
          description: 'Represents the color indicator that gives you information about the health of the EC2 instance. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">Health Colors and Statuses</a>.'
        Causes:
          $ref: '#/components/schemas/Causes'
          description: 'Represents the causes, which provide more information about the current health status.'
        LaunchedAt:
          $ref: '#/components/schemas/LaunchedAt'
          description: The time at which the EC2 instance was launched.
        ApplicationMetrics:
          $ref: '#/components/schemas/ApplicationMetrics'
          description: Request metrics from your application.
        System:
          $ref: '#/components/schemas/SystemStatus'
          description: Operating system metrics from the instance.
        Deployment:
          $ref: '#/components/schemas/Deployment'
          description: Information about the most recent deployment to an instance.
        AvailabilityZone:
          $ref: '#/components/schemas/String'
          description: The availability zone in which the instance runs.
        InstanceType:
          $ref: '#/components/schemas/String'
          description: The instance's type.
      description: Detailed health information about an Amazon EC2 instance in your Elastic Beanstalk environment.
    InstanceId:
      type: string
      minLength: 1
      maxLength: 255
    Integer:
      type: integer
    LaunchConfiguration:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ResourceId'
          description: The name of the launch configuration.
      description: Describes an Auto Scaling launch configuration.
    LaunchTemplate:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ResourceId'
          description: The ID of the launch template.
      description: Describes an Amazon EC2 launch template.
    LaunchedAt:
      type: string
      format: date-time
    SearchFilters:
      type: array
      items:
        $ref: '#/components/schemas/SearchFilter'
    PlatformBranchMaxRecords:
      type: integer
      minimum: 1
    ListPlatformBranchesRequest:
      type: object
      title: ListPlatformBranchesRequest
      properties:
        Filters:
          $ref: '#/components/schemas/SearchFilters'
          description: '<p>Criteria for restricting the resulting list of platform branches. The filter is evaluated as a logical conjunction (AND) of the separate <code>SearchFilter</code> terms.</p> <p>The following list shows valid attribute values for each of the <code>SearchFilter</code> terms. Most operators take a single value. The <code>in</code> and <code>not_in</code> operators can take multiple values.</p> <ul> <li> <p> <code>Attribute = BranchName</code>:</p> <ul> <li> <p> <code>Operator</code>: <code>=</code> | <code>!=</code> | <code>begins_with</code> | <code>ends_with</code> | <code>contains</code> | <code>in</code> | <code>not_in</code> </p> </li> </ul> </li> <li> <p> <code>Attribute = LifecycleState</code>:</p> <ul> <li> <p> <code>Operator</code>: <code>=</code> | <code>!=</code> | <code>in</code> | <code>not_in</code> </p> </li> <li> <p> <code>Values</code>: <code>beta</code> | <code>supported</code> | <code>deprecated</code> | <code>retired</code> </p> </li> </ul> </li> <li> <p> <code>Attribute = PlatformName</code>:</p> <ul> <li> <p> <code>Operator</code>: <code>=</code> | <code>!=</code> | <code>begins_with</code> | <code>ends_with</code> | <code>contains</code> | <code>in</code> | <code>not_in</code> </p> </li> </ul> </li> <li> <p> <code>Attribute = TierType</code>:</p> <ul> <li> <p> <code>Operator</code>: <code>=</code> | <code>!=</code> </p> </li> <li> <p> <code>Values</code>: <code>WebServer/Standard</code> | <code>Worker/SQS/HTTP</code> </p> </li> </ul> </li> </ul> <p>Array size: limited to 10 <code>SearchFilter</code> objects.</p> <p>Within each <code>SearchFilter</code> item, the <code>Values</code> array is limited to 10 items.</p>'
        MaxRecords:
          $ref: '#/components/schemas/PlatformBranchMaxRecords'
          description: The maximum number of platform branch values returned in one call.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: '<p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>'
    PlatformBranchSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PlatformBranchSummary'
    PlatformFilters:
      type: array
      items:
        $ref: '#/components/schemas/PlatformFilter'
    PlatformMaxRecords:
      type: integer
      minimum: 1
    ListPlatformVersionsRequest:
      type: object
      title: ListPlatformVersionsRequest
      properties:
        Filters:
          $ref: '#/components/schemas/PlatformFilters'
          description: Criteria for restricting the resulting list of platform versions. The filter is interpreted as a logical conjunction (AND) of the separate <code>PlatformFilter</code> terms.
        MaxRecords:
          $ref: '#/components/schemas/PlatformMaxRecords'
          description: The maximum number of platform version values returned in one call.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: '<p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>'
    PlatformSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PlatformSummary'
    ResourceArn:
      type: string
    ListTagsForResourceMessage:
      type: object
      required:
        - ResourceArn
      title: ListTagsForResourceMessage
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: <p>The Amazon Resource Name (ARN) of the resouce for which a tag list is requested.</p> <p>Must be the ARN of an Elastic Beanstalk resource.</p>
    Listener:
      type: object
      properties:
        Protocol:
          $ref: '#/components/schemas/String'
          description: The protocol that is used by the Listener.
        Port:
          $ref: '#/components/schemas/Integer'
          description: The port that is used by the Listener.
      description: Describes the properties of a Listener for the LoadBalancer.
    LoadAverageValue:
      type: number
      format: double
    LoadAverage:
      type: array
      items:
        $ref: '#/components/schemas/LoadAverageValue'
    LoadBalancer:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ResourceId'
          description: The name of the LoadBalancer.
      description: Describes a LoadBalancer.
    LoadBalancerListenersDescription:
      type: array
      items:
        $ref: '#/components/schemas/Listener'
    Maintainer:
      type: string
    Timestamp:
      type: string
      format: date-time
    ManagedAction:
      type: object
      properties:
        ActionId:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the managed action.
        ActionDescription:
          $ref: '#/components/schemas/String'
          description: A description of the managed action.
        ActionType:
          $ref: '#/components/schemas/ActionType'
          description: The type of managed action.
        Status:
          $ref: '#/components/schemas/ActionStatus'
          description: 'The status of the managed action. If the action is <code>Scheduled</code>, you can apply it immediately with <a>ApplyEnvironmentManagedAction</a>.'
        WindowStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start time of the maintenance window in which the managed action will execute.
      description: The record of an upcoming or in-progress managed action.
    ManagedActionHistoryItem:
      type: object
      properties:
        ActionId:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the managed action.
        ActionType:
          $ref: '#/components/schemas/ActionType'
          description: The type of the managed action.
        ActionDescription:
          $ref: '#/components/schemas/String'
          description: A description of the managed action.
        FailureType:
          $ref: '#/components/schemas/FailureType'
          description: 'If the action failed, the type of failure.'
        Status:
          $ref: '#/components/schemas/ActionHistoryStatus'
          description: The status of the action.
        FailureDescription:
          $ref: '#/components/schemas/String'
          description: 'If the action failed, a description of the failure.'
        ExecutedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the action started executing.
        FinishedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the action finished executing.
      description: The record of a completed or failed managed action.
    OperatingSystemName:
      type: string
    OperatingSystemVersion:
      type: string
    RegexPattern:
      type: string
    RegexLabel:
      type: string
    PlatformBranchLifecycleState:
      type: string
    SupportedTierList:
      type: array
      items:
        $ref: '#/components/schemas/SupportedTier'
    PlatformBranchSummary:
      type: object
      properties:
        PlatformName:
          $ref: '#/components/schemas/PlatformName'
          description: The name of the platform to which this platform branch belongs.
        BranchName:
          $ref: '#/components/schemas/BranchName'
          description: The name of the platform branch.
        LifecycleState:
          $ref: '#/components/schemas/PlatformBranchLifecycleState'
          description: '<p>The support life cycle state of the platform branch.</p> <p>Possible values: <code>beta</code> | <code>supported</code> | <code>deprecated</code> | <code>retired</code> </p>'
        BranchOrder:
          $ref: '#/components/schemas/BranchOrder'
          description: '<p>An ordinal number that designates the order in which platform branches have been added to a platform. This can be helpful, for example, if your code calls the <code>ListPlatformBranches</code> action and then displays a list of platform branches.</p> <p>A larger <code>BranchOrder</code> value designates a newer platform branch within the platform.</p>'
        SupportedTierList:
          $ref: '#/components/schemas/SupportedTierList'
          description: '<p>The environment tiers that platform versions in this branch support.</p> <p>Possible values: <code>WebServer/Standard</code> | <code>Worker/SQS/HTTP</code> </p>'
      description: Summary information about a platform branch.
    PlatformCategory:
      type: string
    PlatformOwner:
      type: string
    PlatformStatus:
      type: string
      enum:
        - Creating
        - Failed
        - Ready
        - Deleting
        - Deleted
    PlatformProgrammingLanguages:
      type: array
      items:
        $ref: '#/components/schemas/PlatformProgrammingLanguage'
    PlatformFrameworks:
      type: array
      items:
        $ref: '#/components/schemas/PlatformFramework'
    SupportedAddonList:
      type: array
      items:
        $ref: '#/components/schemas/SupportedAddon'
    PlatformLifecycleState:
      type: string
    PlatformFilterType:
      type: string
    PlatformFilterOperator:
      type: string
    PlatformFilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/PlatformFilterValue'
    PlatformFilterValue:
      type: string
    PlatformFramework:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the framework.
        Version:
          $ref: '#/components/schemas/String'
          description: The version of the framework.
      description: A framework supported by the platform.
    PlatformProgrammingLanguage:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the programming language.
        Version:
          $ref: '#/components/schemas/String'
          description: The version of the programming language.
      description: A programming language supported by the platform.
    Queue:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the queue.
        URL:
          $ref: '#/components/schemas/String'
          description: The URL of the queue.
      description: Describes a queue.
    RebuildEnvironmentMessage:
      type: object
      title: RebuildEnvironmentMessage
      properties:
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: '<p>The ID of the environment to rebuild.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>The name of the environment to rebuild.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
      description: <p/>
    RequestEnvironmentInfoMessage:
      type: object
      required:
        - InfoType
      title: RequestEnvironmentInfoMessage
      properties:
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: '<p>The ID of the environment of the requested data.</p> <p>If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>The name of the environment of the requested data.</p> <p>If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
        InfoType:
          $ref: '#/components/schemas/EnvironmentInfoType'
          description: The type of information to request.
      description: Request to retrieve logs from an environment and store them in your Elastic Beanstalk storage bucket.
    ResourceQuota:
      type: object
      properties:
        Maximum:
          $ref: '#/components/schemas/BoxedInt'
          description: The maximum number of instances of this Elastic Beanstalk resource type that an AWS account can use.
      description: The AWS Elastic Beanstalk quota information for a single resource type in an AWS account. It reflects the resource's limits for this account.
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    RestartAppServerMessage:
      type: object
      title: RestartAppServerMessage
      properties:
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: '<p>The ID of the environment to restart the server for.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>The name of the environment to restart the server for.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
      description: <p/>
    RetrieveEnvironmentInfoMessage:
      type: object
      required:
        - InfoType
      title: RetrieveEnvironmentInfoMessage
      properties:
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: '<p>The ID of the data''s environment.</p> <p>If no such environment is found, returns an <code>InvalidParameterValue</code> error.</p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error.</p>'
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>The name of the data''s environment.</p> <p> If no such environment is found, returns an <code>InvalidParameterValue</code> error. </p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
        InfoType:
          $ref: '#/components/schemas/EnvironmentInfoType'
          description: The type of information to retrieve.
      description: Request to download logs retrieved with <a>RequestEnvironmentInfo</a>.
    SearchFilterAttribute:
      type: string
    SearchFilterOperator:
      type: string
    SearchFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/SearchFilterValue'
    SearchFilterValue:
      type: string
    SystemStatus:
      type: object
      properties:
        CPUUtilization:
          $ref: '#/components/schemas/CPUUtilization'
          description: CPU utilization metrics for the instance.
        LoadAverage:
          $ref: '#/components/schemas/LoadAverage'
          description: 'Load average in the last 1-minute, 5-minute, and 15-minute periods. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-metrics.html#health-enhanced-metrics-os">Operating System Metrics</a>.'
      description: CPU utilization and load average metrics for an Amazon EC2 instance.
    SolutionStackFileTypeList:
      type: array
      items:
        $ref: '#/components/schemas/FileTypeExtension'
    SupportedAddon:
      type: string
    SupportedTier:
      type: string
    SwapEnvironmentCNAMEsMessage:
      type: object
      title: SwapEnvironmentCNAMEsMessage
      properties:
        SourceEnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: '<p>The ID of the source environment.</p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentId</code>, you must specify the <code>DestinationEnvironmentId</code>. </p>'
        SourceEnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>The name of the source environment.</p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentName</code>, you must specify the <code>DestinationEnvironmentName</code>. </p>'
        DestinationEnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: '<p>The ID of the destination environment.</p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentId</code> with the <code>DestinationEnvironmentId</code>. </p>'
        DestinationEnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>The name of the destination environment.</p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentName</code> with the <code>DestinationEnvironmentName</code>. </p>'
      description: Swaps the CNAMEs of two environments.
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TerminateEnvironmentResources:
      type: boolean
    TerminateEnvironmentMessage:
      type: object
      title: TerminateEnvironmentMessage
      properties:
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: '<p>The ID of the environment to terminate.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>The name of the environment to terminate.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
        TerminateResources:
          $ref: '#/components/schemas/TerminateEnvironmentResources'
          description: '<p>Indicates whether the associated AWS resources should shut down when the environment is terminated:</p> <ul> <li> <p> <code>true</code>: The specified environment as well as the associated AWS resources, such as Auto Scaling group and LoadBalancer, are terminated.</p> </li> <li> <p> <code>false</code>: AWS Elastic Beanstalk resource management is removed from the environment, but the AWS resources continue to operate.</p> </li> </ul> <p> For more information, see the <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/ug/"> AWS Elastic Beanstalk User Guide. </a> </p> <p> Default: <code>true</code> </p> <p> Valid Values: <code>true</code> | <code>false</code> </p>'
        ForceTerminate:
          $ref: '#/components/schemas/ForceTerminate'
          description: Terminates the target environment even if another environment in the same group is dependent on it.
      description: Request to terminate an environment.
    Trigger:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ResourceId'
          description: The name of the trigger.
      description: Describes a trigger.
    UpdateApplicationMessage:
      type: object
      required:
        - ApplicationName
      title: UpdateApplicationMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: 'The name of the application to update. If no such application is found, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. '
        Description:
          $ref: '#/components/schemas/Description'
          description: '<p>A new description for the application.</p> <p>Default: If not specified, AWS Elastic Beanstalk does not update the description.</p>'
      description: Request to update an application.
    UpdateApplicationResourceLifecycleMessage:
      type: object
      required:
        - ApplicationName
        - ResourceLifecycleConfig
      title: UpdateApplicationResourceLifecycleMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application.
        ResourceLifecycleConfig:
          $ref: '#/components/schemas/ApplicationResourceLifecycleConfig'
          description: The lifecycle configuration.
    UpdateApplicationVersionMessage:
      type: object
      required:
        - ApplicationName
        - VersionLabel
      title: UpdateApplicationVersionMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: '<p>The name of the application associated with this version.</p> <p> If no application is found with this name, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error.</p>'
        VersionLabel:
          $ref: '#/components/schemas/VersionLabel'
          description: '<p>The name of the version to update.</p> <p>If no application version is found with this label, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. </p>'
        Description:
          $ref: '#/components/schemas/Description'
          description: A new description for this version.
      description: <p/>
    UpdateConfigurationTemplateMessage:
      type: object
      required:
        - ApplicationName
        - TemplateName
      title: UpdateConfigurationTemplateMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: '<p>The name of the application associated with the configuration template to update.</p> <p> If no application is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error. </p>'
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: '<p>The name of the configuration template to update.</p> <p> If no configuration template is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error. </p>'
        Description:
          $ref: '#/components/schemas/Description'
          description: A new description for the configuration.
        OptionSettings:
          $ref: '#/components/schemas/ConfigurationOptionSettingsList'
          description: A list of configuration option settings to update with the new specified option value.
        OptionsToRemove:
          $ref: '#/components/schemas/OptionsSpecifierList'
          description: '<p>A list of configuration options to remove from the configuration set.</p> <p> Constraint: You can remove only <code>UserDefined</code> configuration options. </p>'
      description: The result message containing the options for the specified solution stack.
    UpdateEnvironmentMessage:
      type: object
      title: UpdateEnvironmentMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application with which the environment is associated.
        EnvironmentId:
          $ref: '#/components/schemas/EnvironmentId'
          description: '<p>The ID of the environment to update.</p> <p>If no environment with this ID exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.</p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>The name of the environment to update. If no environment with this name exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>'
        GroupName:
          $ref: '#/components/schemas/GroupName'
          description: 'The name of the group to which the target environment belongs. Specify a group name only if the environment''s name is specified in an environment manifest and not with the environment name or environment ID parameters. See <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment Manifest (env.yaml)</a> for details.'
        Description:
          $ref: '#/components/schemas/Description'
          description: 'If this parameter is specified, AWS Elastic Beanstalk updates the description of this environment.'
        Tier:
          $ref: '#/components/schemas/EnvironmentTier'
          description: '<p>This specifies the tier to use to update the environment.</p> <p>Condition: At this time, if you change the tier version, name, or type, AWS Elastic Beanstalk returns <code>InvalidParameterValue</code> error. </p>'
        VersionLabel:
          $ref: '#/components/schemas/VersionLabel'
          description: 'If this parameter is specified, AWS Elastic Beanstalk deploys the named application version to the environment. If no such application version is found, returns an <code>InvalidParameterValue</code> error. '
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: 'If this parameter is specified, AWS Elastic Beanstalk deploys this configuration template to the environment. If no such configuration template is found, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. '
        SolutionStackName:
          $ref: '#/components/schemas/SolutionStackName'
          description: This specifies the platform version that the environment will run after the environment is updated.
        PlatformArn:
          $ref: '#/components/schemas/PlatformArn'
          description: 'The ARN of the platform, if used.'
        OptionSettings:
          $ref: '#/components/schemas/ConfigurationOptionSettingsList'
          description: 'If specified, AWS Elastic Beanstalk updates the configuration set associated with the running environment and sets the specified configuration options to the requested value.'
        OptionsToRemove:
          $ref: '#/components/schemas/OptionsSpecifierList'
          description: A list of custom user-defined configuration options to remove from the configuration set for this environment.
      description: Request to update an environment.
    UpdateTagsForResourceMessage:
      type: object
      required:
        - ResourceArn
      title: UpdateTagsForResourceMessage
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: <p>The Amazon Resource Name (ARN) of the resouce to be updated.</p> <p>Must be the ARN of an Elastic Beanstalk resource.</p>
        TagsToAdd:
          $ref: '#/components/schemas/TagList'
          description: '<p>A list of tags to add or update. If a key of an existing tag is added, the tag''s value is updated.</p> <p>Specify at least one of these parameters: <code>TagsToAdd</code>, <code>TagsToRemove</code>.</p>'
        TagsToRemove:
          $ref: '#/components/schemas/TagKeyList'
          description: '<p>A list of tag keys to remove. If a tag key doesn''t exist, it is silently ignored.</p> <p>Specify at least one of these parameters: <code>TagsToAdd</code>, <code>TagsToRemove</code>.</p>'
    ValidateConfigurationSettingsMessage:
      type: object
      required:
        - ApplicationName
        - OptionSettings
      title: ValidateConfigurationSettingsMessage
      properties:
        ApplicationName:
          $ref: '#/components/schemas/ApplicationName'
          description: The name of the application that the configuration template or environment belongs to.
        TemplateName:
          $ref: '#/components/schemas/ConfigurationTemplateName'
          description: '<p>The name of the configuration template to validate the settings against.</p> <p>Condition: You cannot specify both this and an environment name.</p>'
        EnvironmentName:
          $ref: '#/components/schemas/EnvironmentName'
          description: '<p>The name of the environment to validate the settings against.</p> <p>Condition: You cannot specify both this and a configuration template name.</p>'
        OptionSettings:
          $ref: '#/components/schemas/ConfigurationOptionSettingsList'
          description: A list of the options and desired values to evaluate.
      description: A list of validation messages for a specified configuration template.
    ValidationMessageString:
      type: string
    ValidationSeverity:
      type: string
      enum:
        - error
        - warning
    ValidationMessage:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ValidationMessageString'
          description: A message describing the error or warning.
        Severity:
          $ref: '#/components/schemas/ValidationSeverity'
          description: '<p>An indication of the severity of this message:</p> <ul> <li> <p> <code>error</code>: This message indicates that this is not a valid setting for an option.</p> </li> <li> <p> <code>warning</code>: This message is providing information you should take into account.</p> </li> </ul>'
        Namespace:
          $ref: '#/components/schemas/OptionNamespace'
          description: The namespace to which the option belongs.
        OptionName:
          $ref: '#/components/schemas/ConfigurationOptionName'
          description: The name of the option.
      description: An error or warning for a desired configuration option value.
security:
  - hmac: []
