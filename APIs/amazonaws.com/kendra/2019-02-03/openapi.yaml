openapi: 3.0.0
info:
  version: '2019-02-03'
  x-release: v4
  title: AWSKendraFrontendService
  description: Amazon Kendra is a service for indexing large document sets.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: kendra
  x-aws-signingName: kendra
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kendra-2019-02-03.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/kendra/'
servers:
  - url: 'http://kendra.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The kendra multi-region endpoint
  - url: 'https://kendra.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The kendra multi-region endpoint
  - url: 'http://kendra.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The kendra endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://kendra.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The kendra endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AWSKendraFrontendService.BatchDeleteDocument:
    post:
      operationId: BatchDeleteDocument
      description: <p>Removes one or more documents from an index. The documents must have been added with the <code>BatchPutDocument</code> operation.</p> <p>The documents are deleted asynchronously. You can see the progress of the deletion by using Amazon Web Services CloudWatch. Any error messages related to the processing of the batch are sent to you CloudWatch log.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteDocumentResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteDocumentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.BatchDeleteDocument
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.BatchGetDocumentStatus:
    post:
      operationId: BatchGetDocumentStatus
      description: '<p>Returns the indexing status for one or more documents submitted with the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchPutDocument.html"> BatchPutDocument</a> operation.</p> <p>When you use the <code>BatchPutDocument</code> operation, documents are indexed asynchronously. You can use the <code>BatchGetDocumentStatus</code> operation to get the current status of a list of documents so that you can determine if they have been successfully indexed.</p> <p>You can also use the <code>BatchGetDocumentStatus</code> operation to check the status of the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchDeleteDocument.html"> BatchDeleteDocument</a> operation. When a document is deleted from the index, Amazon Kendra returns <code>NOT_FOUND</code> as the status.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetDocumentStatusResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetDocumentStatusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.BatchGetDocumentStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.BatchPutDocument:
    post:
      operationId: BatchPutDocument
      description: '<p>Adds one or more documents to an index.</p> <p>The <code>BatchPutDocument</code> operation enables you to ingest inline documents or a set of documents stored in an Amazon S3 bucket. Use this operation to ingest your text and unstructured text into an index, add custom attributes to the documents, and to attach an access control list to the documents added to the index.</p> <p>The documents are indexed asynchronously. You can see the progress of the batch using Amazon Web Services CloudWatch. Any error messages related to processing the batch are sent to your Amazon Web Services CloudWatch log.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPutDocumentResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPutDocumentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.BatchPutDocument
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.ClearQuerySuggestions:
    post:
      operationId: ClearQuerySuggestions
      description: '<p>Clears existing query suggestions from an index.</p> <p>This deletes existing suggestions only, not the queries in the query log. After you clear suggestions, Amazon Kendra learns new suggestions based on new queries added to the query log from the time you cleared suggestions. If you do not see any new suggestions, then please allow Amazon Kendra to collect enough queries to learn new suggestions.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearQuerySuggestionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ClearQuerySuggestions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.CreateDataSource:
    post:
      operationId: CreateDataSource
      description: '<p>Creates a data source that you use to with an Amazon Kendra index. </p> <p>You specify a name, data source connector type and description for your data source. You also specify configuration information such as document metadata (author, source URI, and so on) and user context information.</p> <p> <code>CreateDataSource</code> is a synchronous operation. The operation returns 200 if the data source was successfully created. Otherwise, an exception is raised.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataSourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceAlreadyExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '487':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateDataSource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.CreateFaq:
    post:
      operationId: CreateFaq
      description: Creates an new set of frequently asked question (FAQ) questions and answers.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFaqResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFaqRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateFaq
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.CreateIndex:
    post:
      operationId: CreateIndex
      description: '<p>Creates a new Amazon Kendra index. Index creation is an asynchronous operation. To determine if index creation has completed, check the <code>Status</code> field returned from a call to <code>DescribeIndex</code>. The <code>Status</code> field is set to <code>ACTIVE</code> when the index is ready to use.</p> <p>Once the index is active you can index your documents using the <code>BatchPutDocument</code> operation or using one of the supported data sources. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIndexResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceAlreadyExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIndexRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateIndex
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.CreateQuerySuggestionsBlockList:
    post:
      operationId: CreateQuerySuggestionsBlockList
      description: '<p>Creates a block list to exlcude certain queries from suggestions.</p> <p>Any query that contains words or phrases specified in the block list is blocked or filtered out from being shown as a suggestion.</p> <p>You need to provide the file location of your block list text file in your S3 bucket. In your text file, enter each block word or phrase on a separate line.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQuerySuggestionsBlockListResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuerySuggestionsBlockListRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateQuerySuggestionsBlockList
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.CreateThesaurus:
    post:
      operationId: CreateThesaurus
      description: Creates a thesaurus for an index. The thesaurus contains a list of synonyms in Solr format.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateThesaurusResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThesaurusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateThesaurus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DeleteDataSource:
    post:
      operationId: DeleteDataSource
      description: 'Deletes an Amazon Kendra data source. An exception is not thrown if the data source is already being deleted. While the data source is being deleted, the <code>Status</code> field returned by a call to the <code>DescribeDataSource</code> operation is set to <code>DELETING</code>. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/delete-data-source.html">Deleting Data Sources</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDataSourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeleteDataSource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DeleteFaq:
    post:
      operationId: DeleteFaq
      description: Removes an FAQ from an index.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFaqRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeleteFaq
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DeleteIndex:
    post:
      operationId: DeleteIndex
      description: 'Deletes an existing Amazon Kendra index. An exception is not thrown if the index is already being deleted. While the index is being deleted, the <code>Status</code> field returned by a call to the <code>DescribeIndex</code> operation is set to <code>DELETING</code>.'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteIndexRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeleteIndex
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DeletePrincipalMapping:
    post:
      operationId: DeletePrincipalMapping
      description: '<p>Deletes a group so that all users and sub groups that belong to the group can no longer access documents only available to that group.</p> <p>For example, after deleting the group "Summer Interns", all interns who belonged to that group no longer see intern-only documents in their search results.</p> <p>If you want to delete or replace users or sub groups of a group, you need to use the <code>PutPrincipalMapping</code> operation. For example, if a user in the group "Engineering" leaves the engineering team and another user takes their place, you provide an updated list of users or sub groups that belong to the "Engineering" group when calling <code>PutPrincipalMapping</code>. You can update your internal list of users or sub groups and input this list when calling <code>PutPrincipalMapping</code>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePrincipalMappingRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeletePrincipalMapping
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DeleteQuerySuggestionsBlockList:
    post:
      operationId: DeleteQuerySuggestionsBlockList
      description: <p>Deletes a block list used for query suggestions for an index.</p> <p>A deleted block list might not take effect right away. Amazon Kendra needs to refresh the entire suggestions list to add back the queries that were previously blocked.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteQuerySuggestionsBlockListRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeleteQuerySuggestionsBlockList
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DeleteThesaurus:
    post:
      operationId: DeleteThesaurus
      description: 'Deletes an existing Amazon Kendra thesaurus. '
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteThesaurusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeleteThesaurus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DescribeDataSource:
    post:
      operationId: DescribeDataSource
      description: Gets information about a Amazon Kendra data source.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDataSourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDataSourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeDataSource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DescribeFaq:
    post:
      operationId: DescribeFaq
      description: Gets information about an FAQ list.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFaqResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFaqRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeFaq
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DescribeIndex:
    post:
      operationId: DescribeIndex
      description: Describes an existing Amazon Kendra index
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeIndexResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeIndexRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeIndex
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DescribePrincipalMapping:
    post:
      operationId: DescribePrincipalMapping
      description: 'Describes the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups. This includes information on the status of actions currently processing or yet to be processed, when actions were last updated, when actions were received by Amazon Kendra, the latest action that should process and apply after other actions, and useful error messages if an action could not be processed.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePrincipalMappingResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePrincipalMappingRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribePrincipalMapping
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DescribeQuerySuggestionsBlockList:
    post:
      operationId: DescribeQuerySuggestionsBlockList
      description: <p>Describes a block list used for query suggestions for an index.</p> <p>This is used to check the current settings that are applied to a block list.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeQuerySuggestionsBlockListResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeQuerySuggestionsBlockListRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeQuerySuggestionsBlockList
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DescribeQuerySuggestionsConfig:
    post:
      operationId: DescribeQuerySuggestionsConfig
      description: <p>Describes the settings of query suggestions for an index.</p> <p>This is used to check the current settings applied to query suggestions.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeQuerySuggestionsConfigResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeQuerySuggestionsConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeQuerySuggestionsConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.DescribeThesaurus:
    post:
      operationId: DescribeThesaurus
      description: Describes an existing Amazon Kendra thesaurus.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeThesaurusResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeThesaurusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeThesaurus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.GetQuerySuggestions:
    post:
      operationId: GetQuerySuggestions
      description: Fetches the queries that are suggested to your users.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuerySuggestionsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQuerySuggestionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.GetQuerySuggestions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.ListDataSourceSyncJobs:
    post:
      operationId: ListDataSourceSyncJobs
      description: Gets statistics about synchronizing Amazon Kendra with a data source.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSourceSyncJobsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDataSourceSyncJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListDataSourceSyncJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.ListDataSources:
    post:
      operationId: ListDataSources
      description: Lists the data sources that you have created.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSourcesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDataSourcesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListDataSources
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.ListFaqs:
    post:
      operationId: ListFaqs
      description: Gets a list of FAQ lists associated with an index.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFaqsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFaqsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListFaqs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.ListGroupsOlderThanOrderingId:
    post:
      operationId: ListGroupsOlderThanOrderingId
      description: Provides a list of groups that are mapped to users before a given ordering or timestamp identifier.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsOlderThanOrderingIdResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListGroupsOlderThanOrderingIdRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListGroupsOlderThanOrderingId
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.ListIndices:
    post:
      operationId: ListIndices
      description: Lists the Amazon Kendra indexes that you have created.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIndicesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListIndicesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListIndices
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.ListQuerySuggestionsBlockLists:
    post:
      operationId: ListQuerySuggestionsBlockLists
      description: '<p>Lists the block lists used for query suggestions for an index.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQuerySuggestionsBlockListsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListQuerySuggestionsBlockListsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListQuerySuggestionsBlockLists
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: 'Gets a list of tags associated with a specified resource. Indexes, FAQs, and data sources can have tags associated with them.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.ListThesauri:
    post:
      operationId: ListThesauri
      description: Lists the Amazon Kendra thesauri associated with an index.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThesauriResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListThesauriRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListThesauri
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.PutPrincipalMapping:
    post:
      operationId: PutPrincipalMapping
      description: '<p>Maps users to their groups. You can also map sub groups to groups. For example, the group "Company Intellectual Property Teams" includes sub groups "Research" and "Engineering". These sub groups include their own list of users or people who work in these teams. Only users who work in research and engineering, and therefore belong in the intellectual property group, can see top-secret company documents in their search results. </p> <p>You map users to their groups when you want to filter search results for different users based on their group’s access to documents. For more information on filtering search results for different users, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">Filtering on user context</a>.</p> <p>If more than five <code>PUT</code> actions for a group are currently processing, a validation exception is thrown.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPrincipalMappingRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.PutPrincipalMapping
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.Query:
    post:
      operationId: Query
      description: <p>Searches an active index. Use this API to search your documents using query. The <code>Query</code> operation enables to do faceted search and to filter results based on document attributes.</p> <p>It also enables you to provide user context that Amazon Kendra uses to enforce document access control in the search results. </p> <p>Amazon Kendra searches your index for text content and question and answer (FAQ) content. By default the response contains three types of results.</p> <ul> <li> <p>Relevant passages</p> </li> <li> <p>Matching FAQs</p> </li> <li> <p>Relevant documents</p> </li> </ul> <p>You can specify that the query return only one type of result using the <code>QueryResultTypeConfig</code> parameter.</p> <p>Each query returns the 100 most relevant results. </p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.Query
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.StartDataSourceSyncJob:
    post:
      operationId: StartDataSourceSyncJob
      description: 'Starts a synchronization job for a data source. If a synchronization job is already in progress, Amazon Kendra returns a <code>ResourceInUseException</code> exception.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDataSourceSyncJobResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDataSourceSyncJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.StartDataSourceSyncJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.StopDataSourceSyncJob:
    post:
      operationId: StopDataSourceSyncJob
      description: Stops a running synchronization job. You can't stop a scheduled synchronization job.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopDataSourceSyncJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.StopDataSourceSyncJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.SubmitFeedback:
    post:
      operationId: SubmitFeedback
      description: 'Enables you to provide feedback to Amazon Kendra to improve the performance of your index. '
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitFeedbackRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.SubmitFeedback
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.TagResource:
    post:
      operationId: TagResource
      description: 'Adds the specified tag to the specified index, FAQ, or data source resource. If the tag already exists, the existing value is replaced with the new value.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.UntagResource:
    post:
      operationId: UntagResource
      description: 'Removes a tag from an index, FAQ, or a data source.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.UpdateDataSource:
    post:
      operationId: UpdateDataSource
      description: Updates an existing Amazon Kendra data source.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateDataSource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.UpdateIndex:
    post:
      operationId: UpdateIndex
      description: Updates an existing Amazon Kendra index.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIndexRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateIndex
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.UpdateQuerySuggestionsBlockList:
    post:
      operationId: UpdateQuerySuggestionsBlockList
      description: '<p>Updates a block list used for query suggestions for an index.</p> <p>Updates to a block list might not take effect right away. Amazon Kendra needs to refresh the entire suggestions list to apply any updates to the block list. Other changes not related to the block list apply immediately.</p> <p>If a block list is updating, then you need to wait for the first update to finish before submitting another update.</p> <p>Amazon Kendra supports partial updates, so you only need to provide the fields you want to update.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateQuerySuggestionsBlockListRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateQuerySuggestionsBlockList
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.UpdateQuerySuggestionsConfig:
    post:
      operationId: UpdateQuerySuggestionsConfig
      description: '<p>Updates the settings of query suggestions for an index.</p> <p>Amazon Kendra supports partial updates, so you only need to provide the fields you want to update.</p> <p>If an update is currently processing (i.e. ''happening''), you need to wait for the update to finish before making another update.</p> <p>Updates to query suggestions settings might not take effect right away. The time for your updated settings to take effect depends on the updates made and the number of search queries in your index.</p> <p>You can still enable/disable query suggestions at any time.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateQuerySuggestionsConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateQuerySuggestionsConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSKendraFrontendService.UpdateThesaurus:
    post:
      operationId: UpdateThesaurus
      description: Updates a thesaurus file associated with an index.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThesaurusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateThesaurus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchDeleteDocumentResponse:
      type: object
      properties:
        FailedDocuments:
          $ref: '#/components/schemas/BatchDeleteDocumentResponseFailedDocuments'
          description: A list of documents that could not be removed from the index. Each entry contains an error message that indicates why the document couldn't be removed from the index.
    BatchDeleteDocumentRequest:
      type: object
      required:
        - IndexId
        - DocumentIdList
      title: BatchDeleteDocumentRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that contains the documents to delete.
        DocumentIdList:
          $ref: '#/components/schemas/DocumentIdList'
          description: One or more identifiers for documents to delete from the index.
        DataSourceSyncJobMetricTarget:
          $ref: '#/components/schemas/DataSourceSyncJobMetricTarget'
    ValidationException: {}
    ConflictException: {}
    ResourceNotFoundException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    InternalServerException: {}
    BatchGetDocumentStatusResponse:
      type: object
      properties:
        Errors:
          $ref: '#/components/schemas/BatchGetDocumentStatusResponseErrors'
          description: A list of documents that Amazon Kendra couldn't get the status for. The list includes the ID of the document and the reason that the status couldn't be found.
        DocumentStatusList:
          $ref: '#/components/schemas/DocumentStatusList'
          description: 'The status of documents. The status indicates if the document is waiting to be indexed, is in the process of indexing, has completed indexing, or failed indexing. If a document failed indexing, the status provides the reason why.'
    BatchGetDocumentStatusRequest:
      type: object
      required:
        - IndexId
        - DocumentInfoList
      title: BatchGetDocumentStatusRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: 'The identifier of the index to add documents to. The index ID is returned by the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_CreateIndex.html"> CreateIndex </a> operation.'
        DocumentInfoList:
          $ref: '#/components/schemas/DocumentInfoList'
          description: A list of <code>DocumentInfo</code> objects that identify the documents for which to get the status. You identify the documents by their document ID and optional attributes.
    BatchPutDocumentResponse:
      type: object
      properties:
        FailedDocuments:
          $ref: '#/components/schemas/BatchPutDocumentResponseFailedDocuments'
          description: '<p>A list of documents that were not added to the index because the document failed a validation check. Each document contains an error message that indicates why the document couldn''t be added to the index.</p> <p>If there was an error adding a document to an index the error is reported in your Amazon Web Services CloudWatch log. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/cloudwatch-logs.html">Monitoring Amazon Kendra with Amazon CloudWatch Logs</a> </p>'
    BatchPutDocumentRequest:
      type: object
      required:
        - IndexId
        - Documents
      title: BatchPutDocumentRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index to add the documents to. You need to create the index first using the <code>CreateIndex</code> operation.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Resource Name (ARN) of a role that is allowed to run the <code>BatchPutDocument</code> operation. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM Roles for Amazon Kendra</a>.'
        Documents:
          $ref: '#/components/schemas/DocumentList'
          description: '<p>One or more documents to add to the index.</p> <p>Documents can include custom attributes. For example, ''DataSourceId'' and ''DataSourceSyncJobId'' are custom attributes that provide information on the synchronization of documents running on a data source. Note, ''DataSourceSyncJobId'' could be an optional custom attribute as Amazon Kendra will use the ID of a running sync job.</p> <p>Documents have the following file size limits.</p> <ul> <li> <p>5 MB total size for inline documents</p> </li> <li> <p>50 MB total size for files from an S3 bucket</p> </li> <li> <p>5 MB extracted text for any file</p> </li> </ul> <p>For more information about file size and transaction per second quotas, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas</a>.</p>'
    ServiceQuotaExceededException: {}
    ClearQuerySuggestionsRequest:
      type: object
      required:
        - IndexId
      title: ClearQuerySuggestionsRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index you want to clear query suggestions from.
    CreateDataSourceResponse:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: '#/components/schemas/DataSourceId'
          description: A unique identifier for the data source.
    CreateDataSourceRequest:
      type: object
      required:
        - Name
        - IndexId
        - Type
      title: CreateDataSourceRequest
      properties:
        Name:
          $ref: '#/components/schemas/DataSourceName'
          description: A unique name for the data source. A data source name can't be changed without deleting and recreating the data source.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that should be associated with this data source.
        Type:
          $ref: '#/components/schemas/DataSourceType'
          description: The type of repository that contains the data source.
        Configuration:
          $ref: '#/components/schemas/DataSourceConfiguration'
          description: '<p>The connector configuration information that is required to access the repository.</p> <p>You can''t specify the <code>Configuration</code> parameter when the <code>Type</code> parameter is set to <code>CUSTOM</code>. If you do, you receive a <code>ValidationException</code> exception.</p> <p>The <code>Configuration</code> parameter is required for all other data sources.</p>'
        Description:
          $ref: '#/components/schemas/Description'
          description: A description for the data source.
        Schedule:
          $ref: '#/components/schemas/ScanSchedule'
          description: '<p>Sets the frequency that Amazon Kendra will check the documents in your repository and update the index. If you don''t set a schedule Amazon Kendra will not periodically update the index. You can call the <code>StartDataSourceSyncJob</code> operation to update the index.</p> <p>You can''t specify the <code>Schedule</code> parameter when the <code>Type</code> parameter is set to <code>CUSTOM</code>. If you do, you receive a <code>ValidationException</code> exception.</p>'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p>The Amazon Resource Name (ARN) of a role with permission to access the data source. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM Roles for Amazon Kendra</a>.</p> <p>You can''t specify the <code>RoleArn</code> parameter when the <code>Type</code> parameter is set to <code>CUSTOM</code>. If you do, you receive a <code>ValidationException</code> exception.</p> <p>The <code>RoleArn</code> parameter is required for all other data sources.</p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of key-value pairs that identify the data source. You can use the tags to identify and organize your resources and to control access to resources.
        ClientToken:
          $ref: '#/components/schemas/ClientTokenName'
          description: A token that you provide to identify the request to create a data source. Multiple calls to the <code>CreateDataSource</code> operation with the same client token will create only one data source.
    ResourceAlreadyExistException: {}
    CreateFaqResponse:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FaqId'
          description: The unique identifier of the FAQ.
    CreateFaqRequest:
      type: object
      required:
        - IndexId
        - Name
        - S3Path
        - RoleArn
      title: CreateFaqRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that contains the FAQ.
        Name:
          $ref: '#/components/schemas/FaqName'
          description: The name that should be associated with the FAQ.
        Description:
          $ref: '#/components/schemas/Description'
          description: A description of the FAQ.
        S3Path:
          $ref: '#/components/schemas/S3Path'
          description: The S3 location of the FAQ input data.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that contains the FAQs. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM Roles for Amazon Kendra</a>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of key-value pairs that identify the FAQ. You can use the tags to identify and organize your resources and to control access to resources.
        FileFormat:
          $ref: '#/components/schemas/FaqFileFormat'
          description: '<p>The format of the input file. You can choose between a basic CSV format, a CSV format that includes customs attributes in a header, and a JSON format that includes custom attributes.</p> <p>The format must match the format of the file stored in the S3 bucket identified in the <code>S3Path</code> parameter.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-creating-faq.html">Adding questions and answers</a>.</p>'
        ClientToken:
          $ref: '#/components/schemas/ClientTokenName'
          description: 'A token that you provide to identify the request to create a FAQ. Multiple calls to the <code>CreateFaqRequest</code> operation with the same client token will create only one FAQ. '
    CreateIndexResponse:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/IndexId'
          description: 'The unique identifier of the index. Use this identifier when you query an index, set up a data source, or index a document.'
    CreateIndexRequest:
      type: object
      required:
        - Name
        - RoleArn
      title: CreateIndexRequest
      properties:
        Name:
          $ref: '#/components/schemas/IndexName'
          description: The name for the new index.
        Edition:
          $ref: '#/components/schemas/IndexEdition'
          description: '<p>The Amazon Kendra edition to use for the index. Choose <code>DEVELOPER_EDITION</code> for indexes intended for development, testing, or proof of concept. Use <code>ENTERPRISE_EDITION</code> for your production databases. Once you set the edition for an index, it can''t be changed.</p> <p>The <code>Edition</code> parameter is optional. If you don''t supply a value, the default is <code>ENTERPRISE_EDITION</code>.</p> <p>For more information on quota limits for enterprise and developer editions, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas</a>.</p>'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: An Identity and Access Management(IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role used when you use the <code>BatchPutDocument</code> operation to index documents from an Amazon S3 bucket.
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
          description: The identifier of the KMScustomer managed key (CMK) to use to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs.
        Description:
          $ref: '#/components/schemas/Description'
          description: A description for the index.
        ClientToken:
          $ref: '#/components/schemas/ClientTokenName'
          description: A token that you provide to identify the request to create an index. Multiple calls to the <code>CreateIndex</code> operation with the same client token will create only one index.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of key-value pairs that identify the index. You can use the tags to identify and organize your resources and to control access to resources.
        UserTokenConfigurations:
          $ref: '#/components/schemas/UserTokenConfigurationList'
          description: The user token configuration.
        UserContextPolicy:
          $ref: '#/components/schemas/UserContextPolicy'
          description: '<p>The user context policy.</p> <dl> <dt>ATTRIBUTE_FILTER</dt> <dd> <p>All indexed content is searchable and displayable for all users. If there is an access control list, it is ignored. You can filter on user and group attributes. </p> </dd> <dt>USER_TOKEN</dt> <dd> <p>Enables SSO and token-based user access control. All documents with no access control and all documents accessible to the user will be searchable and displayable. </p> </dd> </dl>'
    CreateQuerySuggestionsBlockListResponse:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/QuerySuggestionsBlockListId'
          description: The unique identifier of the created block list.
    CreateQuerySuggestionsBlockListRequest:
      type: object
      required:
        - IndexId
        - Name
        - SourceS3Path
        - RoleArn
      title: CreateQuerySuggestionsBlockListRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index you want to create a query suggestions block list for.
        Name:
          $ref: '#/components/schemas/QuerySuggestionsBlockListName'
          description: '<p>A user friendly name for the block list.</p> <p>For example, the block list named ''offensive-words'' includes all offensive words that could appear in user queries and need to be blocked from suggestions.</p>'
        Description:
          $ref: '#/components/schemas/Description'
          description: '<p>A user-friendly description for the block list.</p> <p>For example, the description "List of all offensive words that can appear in user queries and need to be blocked from suggestions."</p>'
        SourceS3Path:
          $ref: '#/components/schemas/S3Path'
          description: '<p>The S3 path to your block list text file in your S3 bucket.</p> <p>Each block word or phrase should be on a separate line in a text file.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>'
        ClientToken:
          $ref: '#/components/schemas/ClientTokenName'
          description: A token that you provide to identify the request to create a query suggestions block list.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: <p>The IAM (Identity and Access Management) role used by Amazon Kendra to access the block list text file in your S3 bucket.</p> <p>You need permissions to the role ARN (Amazon Resource Name). The role needs S3 read permissions to your file in S3 and needs to give STS (Security Token Service) assume role permissions to Amazon Kendra.</p>
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A tag that you can assign to a block list that categorizes the block list.
    CreateThesaurusResponse:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ThesaurusId'
          description: 'The unique identifier of the thesaurus. '
    CreateThesaurusRequest:
      type: object
      required:
        - IndexId
        - Name
        - RoleArn
        - SourceS3Path
      title: CreateThesaurusRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: 'The unique identifier of the index for the new thesaurus. '
        Name:
          $ref: '#/components/schemas/ThesaurusName'
          description: The name for the new thesaurus.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description for the new thesaurus.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access thesaurus file specified in <code>SourceS3Path</code>. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of key-value pairs that identify the thesaurus. You can use the tags to identify and organize your resources and to control access to resources. '
        SourceS3Path:
          $ref: '#/components/schemas/S3Path'
          description: 'The thesaurus file Amazon S3 source path. '
        ClientToken:
          $ref: '#/components/schemas/ClientTokenName'
          description: 'A token that you provide to identify the request to create a thesaurus. Multiple calls to the <code>CreateThesaurus</code> operation with the same client token will create only one index. '
    DeleteDataSourceRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DeleteDataSourceRequest
      properties:
        Id:
          $ref: '#/components/schemas/DataSourceId'
          description: The unique identifier of the data source to delete.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The unique identifier of the index associated with the data source.
    DeleteFaqRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DeleteFaqRequest
      properties:
        Id:
          $ref: '#/components/schemas/FaqId'
          description: The identifier of the FAQ to remove.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The index to remove the FAQ from.
    DeleteIndexRequest:
      type: object
      required:
        - Id
      title: DeleteIndexRequest
      properties:
        Id:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index to delete.
    DeletePrincipalMappingRequest:
      type: object
      required:
        - IndexId
        - GroupId
      title: DeletePrincipalMappingRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index you want to delete a group from.
        DataSourceId:
          $ref: '#/components/schemas/DataSourceId'
          description: '<p>The identifier of the data source you want to delete a group from.</p> <p>This is useful if a group is tied to multiple data sources and you want to delete a group from accessing documents in a certain data source. For example, the groups "Research", "Engineering", and "Sales and Marketing" are all tied to the company''s documents stored in the data sources Confluence and Salesforce. You want to delete "Research" and "Engineering" groups from Salesforce, so that these groups cannot access customer-related documents stored in Salesforce. Only "Sales and Marketing" should access documents in the Salesforce data source.</p>'
        GroupId:
          $ref: '#/components/schemas/GroupId'
          description: The identifier of the group you want to delete.
        OrderingId:
          $ref: '#/components/schemas/PrincipalOrderingId'
          description: '<p>The timestamp identifier you specify to ensure Amazon Kendra does not override the latest <code>DELETE</code> action with previous actions. The highest number ID, which is the ordering ID, is the latest action you want to process and apply on top of other actions with lower number IDs. This prevents previous actions with lower number IDs from possibly overriding the latest action.</p> <p>The ordering ID can be the UNIX time of the last update you made to a group members list. You would then provide this list when calling <code>PutPrincipalMapping</code>. This ensures your <code>DELETE</code> action for that updated group with the latest members list doesn''t get overwritten by earlier <code>DELETE</code> actions for the same group which are yet to be processed.</p> <p>The default ordering ID is the current UNIX time in milliseconds that the action was received by Amazon Kendra. </p>'
    DeleteQuerySuggestionsBlockListRequest:
      type: object
      required:
        - IndexId
        - Id
      title: DeleteQuerySuggestionsBlockListRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the you want to delete a block list from.
        Id:
          $ref: '#/components/schemas/QuerySuggestionsBlockListId'
          description: The unique identifier of the block list that needs to be deleted.
    DeleteThesaurusRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DeleteThesaurusRequest
      properties:
        Id:
          $ref: '#/components/schemas/ThesaurusId'
          description: The identifier of the thesaurus to delete.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index associated with the thesaurus to delete.
    DescribeDataSourceResponse:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/DataSourceId'
          description: The identifier of the data source.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that contains the data source.
        Name:
          $ref: '#/components/schemas/DataSourceName'
          description: The name that you gave the data source when it was created.
        Type:
          $ref: '#/components/schemas/DataSourceType'
          description: The type of the data source.
        Configuration:
          $ref: '#/components/schemas/DataSourceConfiguration'
          description: Information that describes where the data source is located and how the data source is configured. The specific information in the description depends on the data source provider.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix timestamp of when the data source was created.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix timestamp of when the data source was last updated.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the data source.
        Status:
          $ref: '#/components/schemas/DataSourceStatus'
          description: 'The current status of the data source. When the status is <code>ACTIVE</code> the data source is ready to use. When the status is <code>FAILED</code>, the <code>ErrorMessage</code> field contains the reason that the data source failed.'
        Schedule:
          $ref: '#/components/schemas/ScanSchedule'
          description: The schedule that Amazon Kendra will update the data source.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the role that enables the data source to access its resources.
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'When the <code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field contains a description of the error that caused the data source to fail.'
    DescribeDataSourceRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DescribeDataSourceRequest
      properties:
        Id:
          $ref: '#/components/schemas/DataSourceId'
          description: The unique identifier of the data source to describe.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that contains the data source.
    DescribeFaqResponse:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FaqId'
          description: The identifier of the FAQ.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that contains the FAQ.
        Name:
          $ref: '#/components/schemas/FaqName'
          description: The name that you gave the FAQ when it was created.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the FAQ that you provided when it was created.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the FAQ was created.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the FAQ was last updated.
        S3Path:
          $ref: '#/components/schemas/S3Path'
        Status:
          $ref: '#/components/schemas/FaqStatus'
          description: The status of the FAQ. It is ready to use when the status is <code>ACTIVE</code>.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the role that provides access to the S3 bucket containing the input files for the FAQ.
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'If the <code>Status</code> field is <code>FAILED</code>, the <code>ErrorMessage</code> field contains the reason why the FAQ failed.'
        FileFormat:
          $ref: '#/components/schemas/FaqFileFormat'
          description: The file format used by the input files for the FAQ.
    DescribeFaqRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DescribeFaqRequest
      properties:
        Id:
          $ref: '#/components/schemas/FaqId'
          description: The unique identifier of the FAQ.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that contains the FAQ.
    DescribeIndexResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/IndexName'
          description: The name of the index.
        Id:
          $ref: '#/components/schemas/IndexId'
          description: The name of the index.
        Edition:
          $ref: '#/components/schemas/IndexEdition'
          description: The Amazon Kendra edition used for the index. You decide the edition when you create the index.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that gives Amazon Kendra permission to write to your Amazon Cloudwatch logs.
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
          description: The identifier of the KMScustomer master key (CMK) used to encrypt your data. Amazon Kendra doesn't support asymmetric CMKs.
        Status:
          $ref: '#/components/schemas/IndexStatus'
          description: 'The current status of the index. When the value is <code>ACTIVE</code>, the index is ready for use. If the <code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field contains a message that explains why.'
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the index.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix datetime that the index was created.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix datetime that the index was last updated.
        DocumentMetadataConfigurations:
          $ref: '#/components/schemas/DocumentMetadataConfigurationList'
          description: Configuration settings for any metadata applied to the documents in the index.
        IndexStatistics:
          $ref: '#/components/schemas/IndexStatistics'
          description: Provides information about the number of FAQ questions and answers and the number of text documents indexed.
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'When th e<code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field contains a message that explains why.'
        CapacityUnits:
          $ref: '#/components/schemas/CapacityUnitsConfiguration'
          description: 'For Enterprise edition indexes, you can choose to use additional capacity to meet the needs of your application. This contains the capacity units used for the index. A 0 for the query capacity or the storage capacity indicates that the index is using the default capacity for the index.'
        UserTokenConfigurations:
          $ref: '#/components/schemas/UserTokenConfigurationList'
          description: The user token configuration for the Amazon Kendra index.
        UserContextPolicy:
          $ref: '#/components/schemas/UserContextPolicy'
          description: The user context policy for the Amazon Kendra index.
    DescribeIndexRequest:
      type: object
      required:
        - Id
      title: DescribeIndexRequest
      properties:
        Id:
          $ref: '#/components/schemas/IndexId'
          description: The name of the index to describe.
    DescribePrincipalMappingResponse:
      type: object
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: Shows the identifier of the index to see information on the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
        DataSourceId:
          $ref: '#/components/schemas/DataSourceId'
          description: Shows the identifier of the data source to see information on the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
        GroupId:
          $ref: '#/components/schemas/GroupId'
          description: Shows the identifier of the group to see information on the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
        GroupOrderingIdSummaries:
          $ref: '#/components/schemas/GroupOrderingIdSummaries'
          description: '<p>Shows the following information on the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups:</p> <ul> <li> <p>Status – the status can be either <code>PROCESSING</code>, <code>SUCCEEDED</code>, <code>DELETING</code>, <code>DELETED</code>, or <code>FAILED</code>.</p> </li> <li> <p>Last updated – the last date-time an action was updated.</p> </li> <li> <p>Received – the last date-time an action was received or submitted.</p> </li> <li> <p>Ordering ID – the latest action that should process and apply after other actions.</p> </li> <li> <p>Failure reason – the reason an action could not be processed.</p> </li> </ul>'
    DescribePrincipalMappingRequest:
      type: object
      required:
        - IndexId
        - GroupId
      title: DescribePrincipalMappingRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index required to check the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
        DataSourceId:
          $ref: '#/components/schemas/DataSourceId'
          description: The identifier of the data source to check the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
        GroupId:
          $ref: '#/components/schemas/GroupId'
          description: The identifier of the group required to check the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
    DescribeQuerySuggestionsBlockListResponse:
      type: object
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: Shows the identifier of the index for the block list.
        Id:
          $ref: '#/components/schemas/QuerySuggestionsBlockListId'
          description: Shows the unique identifier of the block list.
        Name:
          $ref: '#/components/schemas/QuerySuggestionsBlockListName'
          description: Shows the name of the block list.
        Description:
          $ref: '#/components/schemas/Description'
          description: Shows the description for the block list.
        Status:
          $ref: '#/components/schemas/QuerySuggestionsBlockListStatus'
          description: Shows whether the current status of the block list is <code>ACTIVE</code> or <code>INACTIVE</code>.
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: Shows the error message with details when there are issues in processing the block list.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: Shows the date-time a block list for query suggestions was last created.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: Shows the date-time a block list for query suggestions was last updated.
        SourceS3Path:
          $ref: '#/components/schemas/S3Path'
          description: '<p>Shows the current S3 path to your block list text file in your S3 bucket.</p> <p>Each block word or phrase should be on a separate line in a text file.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>'
        ItemCount:
          $ref: '#/components/schemas/Integer'
          description: 'Shows the current number of valid, non-empty words or phrases in the block list text file.'
        FileSizeBytes:
          $ref: '#/components/schemas/Long'
          description: Shows the current size of the block list text file in S3.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: <p>Shows the current IAM (Identity and Access Management) role used by Amazon Kendra to access the block list text file in S3.</p> <p>The role needs S3 read permissions to your file in S3 and needs to give STS (Security Token Service) assume role permissions to Amazon Kendra.</p>
    DescribeQuerySuggestionsBlockListRequest:
      type: object
      required:
        - IndexId
        - Id
      title: DescribeQuerySuggestionsBlockListRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index for the block list.
        Id:
          $ref: '#/components/schemas/QuerySuggestionsBlockListId'
          description: The unique identifier of the block list.
    DescribeQuerySuggestionsConfigResponse:
      type: object
      properties:
        Mode:
          $ref: '#/components/schemas/Mode'
          description: '<p>Shows whether query suggestions are currently in <code>ENABLED</code> mode or <code>LEARN_ONLY</code> mode.</p> <p>By default, Amazon Kendra enables query suggestions.<code>LEARN_ONLY</code> turns off query suggestions for your users. You can change the mode using the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_UpdateQuerySuggestionsConfig.html">UpdateQuerySuggestionsConfig</a> operation.</p>'
        Status:
          $ref: '#/components/schemas/QuerySuggestionsStatus'
          description: <p>Shows whether the status of query suggestions settings is currently Active or Updating.</p> <p>Active means the current settings apply and Updating means your changed settings are in the process of applying.</p>
        QueryLogLookBackWindowInDays:
          $ref: '#/components/schemas/Integer'
          description: Shows how recent your queries are in your query log time window (in days).
        IncludeQueriesWithoutUserInformation:
          $ref: '#/components/schemas/ObjectBoolean'
          description: Shows whether Amazon Kendra uses all queries or only uses queries that include user information to generate query suggestions.
        MinimumNumberOfQueryingUsers:
          $ref: '#/components/schemas/MinimumNumberOfQueryingUsers'
          description: Shows the minimum number of unique users who must search a query in order for the query to be eligible to suggest to your users.
        MinimumQueryCount:
          $ref: '#/components/schemas/MinimumQueryCount'
          description: Shows the minimum number of times a query must be searched in order for the query to be eligible to suggest to your users.
        LastSuggestionsBuildTime:
          $ref: '#/components/schemas/Timestamp'
          description: Shows the date-time query suggestions for an index was last updated.
        LastClearTime:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>Shows the date-time query suggestions for an index was last cleared.</p> <p>After you clear suggestions, Amazon Kendra learns new suggestions based on new queries added to the query log from the time you cleared suggestions. Amazon Kendra only considers re-occurences of a query from the time you cleared suggestions. </p>'
        TotalSuggestionsCount:
          $ref: '#/components/schemas/Integer'
          description: '<p>Shows the current total count of query suggestions for an index.</p> <p>This count can change when you update your query suggestions settings, if you filter out certain queries from suggestions using a block list, and as the query log accumulates more queries for Amazon Kendra to learn from.</p>'
    DescribeQuerySuggestionsConfigRequest:
      type: object
      required:
        - IndexId
      title: DescribeQuerySuggestionsConfigRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index you want to describe query suggestions settings for.
    DescribeThesaurusResponse:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ThesaurusId'
          description: The identifier of the thesaurus.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index associated with the thesaurus to describe.
        Name:
          $ref: '#/components/schemas/ThesaurusName'
          description: The thesaurus name.
        Description:
          $ref: '#/components/schemas/Description'
          description: The thesaurus description.
        Status:
          $ref: '#/components/schemas/ThesaurusStatus'
          description: '<p>The current status of the thesaurus. When the value is <code>ACTIVE</code>, queries are able to use the thesaurus. If the <code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field provides more information. </p> <p>If the status is <code>ACTIVE_BUT_UPDATE_FAILED</code>, it means that Amazon Kendra could not ingest the new thesaurus file. The old thesaurus file is still active. </p>'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'When the <code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field provides more information. '
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix datetime that the thesaurus was created.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix datetime that the thesaurus was last updated.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access thesaurus file specified in <code>SourceS3Path</code>. '
        SourceS3Path:
          $ref: '#/components/schemas/S3Path'
        FileSizeBytes:
          $ref: '#/components/schemas/Long'
          description: The size of the thesaurus file in bytes.
        TermCount:
          $ref: '#/components/schemas/Long'
          description: 'The number of unique terms in the thesaurus file. For example, the synonyms <code>a,b,c</code> and <code>a=&gt;d</code>, the term count would be 4. '
        SynonymRuleCount:
          $ref: '#/components/schemas/Long'
          description: The number of synonym rules in the thesaurus file.
    DescribeThesaurusRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DescribeThesaurusRequest
      properties:
        Id:
          $ref: '#/components/schemas/ThesaurusId'
          description: The identifier of the thesaurus to describe.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index associated with the thesaurus to describe.
    GetQuerySuggestionsResponse:
      type: object
      properties:
        QuerySuggestionsId:
          $ref: '#/components/schemas/QuerySuggestionsId'
          description: The unique identifier for a list of query suggestions for an index.
        Suggestions:
          $ref: '#/components/schemas/SuggestionList'
          description: A list of query suggestions for an index.
    GetQuerySuggestionsRequest:
      type: object
      required:
        - IndexId
        - QueryText
      title: GetQuerySuggestionsRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index you want to get query suggestions from.
        QueryText:
          $ref: '#/components/schemas/SuggestionQueryText'
          description: <p>The text of a user's query to generate query suggestions.</p> <p>A query is suggested if the query prefix matches what a user starts to type as their query.</p> <p>Amazon Kendra does not show any suggestions if a user types fewer than two characters or more than 60 characters. A query must also have at least one search result and contain at least one word of more than four characters.</p>
        MaxSuggestionsCount:
          $ref: '#/components/schemas/Integer'
          description: The maximum number of query suggestions you want to show to your users.
    ListDataSourceSyncJobsResponse:
      type: object
      properties:
        History:
          $ref: '#/components/schemas/DataSourceSyncJobHistoryList'
          description: A history of synchronization jobs for the data source.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The <code>GetDataSourceSyncJobHistory</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Kendra returns the NextPage token. Include the token in the next request to the <code>GetDataSourceSyncJobHistory</code> operation to return in the next page of jobs.'
    ListDataSourceSyncJobsRequest:
      type: object
      required:
        - Id
        - IndexId
      title: ListDataSourceSyncJobsRequest
      properties:
        Id:
          $ref: '#/components/schemas/DataSourceId'
          description: The identifier of the data source.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that contains the data source.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request to <code>GetDataSourceSyncJobHistory</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.'
        MaxResults:
          $ref: '#/components/schemas/MaxResultsIntegerForListDataSourceSyncJobsRequest'
          description: 'The maximum number of synchronization jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.'
        StartTimeFilter:
          $ref: '#/components/schemas/TimeRange'
          description: 'When specified, the synchronization jobs returned in the list are limited to jobs between the specified dates. '
        StatusFilter:
          $ref: '#/components/schemas/DataSourceSyncJobStatus'
          description: 'When specified, only returns synchronization jobs with the <code>Status</code> field equal to the specified status.'
    ListDataSourcesResponse:
      type: object
      properties:
        SummaryItems:
          $ref: '#/components/schemas/DataSourceSummaryList'
          description: An array of summary information for one or more data sources.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of data sources. '
    ListDataSourcesRequest:
      type: object
      required:
        - IndexId
      title: ListDataSourcesRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that contains the data source.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of data sources (<code>DataSourceSummaryItems</code>). '
        MaxResults:
          $ref: '#/components/schemas/MaxResultsIntegerForListDataSourcesRequest'
          description: The maximum number of data sources to return.
    ListFaqsResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The <code>ListFaqs</code> operation returns a page of FAQs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Kendra returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListFaqs</code> operation to return the next page of FAQs.'
        FaqSummaryItems:
          $ref: '#/components/schemas/FaqSummaryItems'
          description: information about the FAQs associated with the specified index.
    ListFaqsRequest:
      type: object
      required:
        - IndexId
      title: ListFaqsRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The index that contains the FAQ lists.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request to <code>ListFaqs</code> was truncated, include the <code>NextToken</code> to fetch the next set of FAQs.'
        MaxResults:
          $ref: '#/components/schemas/MaxResultsIntegerForListFaqsRequest'
          description: 'The maximum number of FAQs to return in the response. If there are fewer results in the list, this response contains only the actual results.'
    ListGroupsOlderThanOrderingIdResponse:
      type: object
      properties:
        GroupsSummaries:
          $ref: '#/components/schemas/ListOfGroupSummaries'
          description: ' Summary information for list of groups that are mapped to users before a given ordering or timestamp identifier. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' The next items in the list of groups that go beyond the maximum. '
    ListGroupsOlderThanOrderingIdRequest:
      type: object
      required:
        - IndexId
        - OrderingId
      title: ListGroupsOlderThanOrderingIdRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index for getting a list of groups mapped to users before a given ordering or timestamp identifier.
        DataSourceId:
          $ref: '#/components/schemas/DataSourceId'
          description: The identifier of the data source for getting a list of groups mapped to users before a given ordering timestamp identifier.
        OrderingId:
          $ref: '#/components/schemas/PrincipalOrderingId'
          description: The timestamp identifier used for the latest <code>PUT</code> or <code>DELETE</code> action for mapping users to their groups.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' The next items in the list of groups that go beyond the maximum. '
        MaxResults:
          $ref: '#/components/schemas/MaxResultsIntegerForListPrincipalsRequest'
          description: ' The maximum results shown for a list of groups that are mapped to users before a given ordering or timestamp identifier. '
    ListIndicesResponse:
      type: object
      properties:
        IndexConfigurationSummaryItems:
          $ref: '#/components/schemas/IndexConfigurationSummaryList'
          description: An array of summary information for one or more indexes.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of indexes.'
    ListIndicesRequest:
      type: object
      title: ListIndicesRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of indexes (<code>DataSourceSummaryItems</code>). '
        MaxResults:
          $ref: '#/components/schemas/MaxResultsIntegerForListIndicesRequest'
          description: The maximum number of data sources to return.
    ListQuerySuggestionsBlockListsResponse:
      type: object
      properties:
        BlockListSummaryItems:
          $ref: '#/components/schemas/QuerySuggestionsBlockListSummaryItems'
          description: '<p>Summary items for a block list.</p> <p>This includes summary items on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of block lists.'
    ListQuerySuggestionsBlockListsRequest:
      type: object
      required:
        - IndexId
      title: ListQuerySuggestionsBlockListsRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: '<p>The identifier of the index for a list of all block lists that exist for that index.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of block lists (<code>BlockListSummaryItems</code>).'
        MaxResults:
          $ref: '#/components/schemas/MaxResultsIntegerForListQuerySuggestionsBlockLists'
          description: The maximum number of block lists to return.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags associated with the index, FAQ, or data source.'
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceARN
      title: ListTagsForResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: 'The Amazon Resource Name (ARN) of the index, FAQ, or data source to get a list of tags for.'
    ResourceUnavailableException: {}
    ListThesauriResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of thesauri. '
        ThesaurusSummaryItems:
          $ref: '#/components/schemas/ThesaurusSummaryItems'
          description: An array of summary information for one or more thesauruses.
    ListThesauriRequest:
      type: object
      required:
        - IndexId
      title: ListThesauriRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index associated with the thesaurus to list.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of thesauri (<code>ThesaurusSummaryItems</code>). '
        MaxResults:
          $ref: '#/components/schemas/MaxResultsIntegerForListThesauriRequest'
          description: The maximum number of thesauri to return.
    PutPrincipalMappingRequest:
      type: object
      required:
        - IndexId
        - GroupId
        - GroupMembers
      title: PutPrincipalMappingRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index you want to map users to their groups.
        DataSourceId:
          $ref: '#/components/schemas/DataSourceId'
          description: '<p>The identifier of the data source you want to map users to their groups.</p> <p>This is useful if a group is tied to multiple data sources, but you only want the group to access documents of a certain data source. For example, the groups "Research", "Engineering", and "Sales and Marketing" are all tied to the company''s documents stored in the data sources Confluence and Salesforce. However, "Sales and Marketing" team only needs access to customer-related documents stored in Salesforce.</p>'
        GroupId:
          $ref: '#/components/schemas/GroupId'
          description: The identifier of the group you want to map its users to.
        GroupMembers:
          $ref: '#/components/schemas/GroupMembers'
          description: '<p>The list that contains your users or sub groups that belong the same group.</p> <p>For example, the group "Company" includes the user "CEO" and the sub groups "Research", "Engineering", and "Sales and Marketing".</p> <p>If you have more than 1000 users and/or sub groups for a single group, you need to provide the path to the S3 file that lists your users and sub groups for a group. Your sub groups can contain more than 1000 users, but the list of sub groups that belong to a group (and/or users) must be no more than 1000.</p>'
        OrderingId:
          $ref: '#/components/schemas/PrincipalOrderingId'
          description: '<p>The timestamp identifier you specify to ensure Amazon Kendra does not override the latest <code>PUT</code> action with previous actions. The highest number ID, which is the ordering ID, is the latest action you want to process and apply on top of other actions with lower number IDs. This prevents previous actions with lower number IDs from possibly overriding the latest action.</p> <p>The ordering ID can be the UNIX time of the last update you made to a group members list. You would then provide this list when calling <code>PutPrincipalMapping</code>. This ensures your <code>PUT</code> action for that updated group with the latest members list doesn''t get overwritten by earlier <code>PUT</code> actions for the same group which are yet to be processed.</p> <p>The default ordering ID is the current UNIX time in milliseconds that the action was received by Amazon Kendra.</p>'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p>The Amazon Resource Name (ARN) of a role that has access to the S3 file that contains your list of users or sub groups that belong to a group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html#iam-roles-ds">IAM roles for Amazon Kendra</a>.</p>'
    QueryResult:
      type: object
      properties:
        QueryId:
          $ref: '#/components/schemas/QueryId'
          description: The unique identifier for the search. You use <code>QueryId</code> to identify the search when using the feedback API.
        ResultItems:
          $ref: '#/components/schemas/QueryResultItemList'
          description: The results of the search.
        FacetResults:
          $ref: '#/components/schemas/FacetResultList'
          description: Contains the facet results. A <code>FacetResult</code> contains the counts for each attribute key that was specified in the <code>Facets</code> input parameter.
        TotalNumberOfResults:
          $ref: '#/components/schemas/Integer'
          description: 'The total number of items found by the search; however, you can only retrieve up to 100 items. For example, if the search found 192 items, you can only retrieve the first 100 of the items.'
    QueryRequest:
      type: object
      required:
        - IndexId
        - QueryText
      title: QueryRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The unique identifier of the index to search. The identifier is returned in the response from the <code>CreateIndex</code> operation.
        QueryText:
          $ref: '#/components/schemas/QueryText'
          description: The text to search for.
        AttributeFilter:
          $ref: '#/components/schemas/AttributeFilter'
          description: '<p>Enables filtered searches based on document attributes. You can only provide one attribute filter; however, the <code>AndAllFilters</code>, <code>NotFilter</code>, and <code>OrAllFilters</code> parameters contain a list of other filters.</p> <p>The <code>AttributeFilter</code> parameter enables you to create a set of filtering rules that a document must satisfy to be included in the query results.</p>'
        Facets:
          $ref: '#/components/schemas/FacetList'
          description: An array of documents attributes. Amazon Kendra returns a count for each attribute key specified. You can use this information to help narrow the search for your user.
        RequestedDocumentAttributes:
          $ref: '#/components/schemas/DocumentAttributeKeyList'
          description: 'An array of document attributes to include in the response. No other document attributes are included in the response. By default all document attributes are included in the response. '
        QueryResultTypeFilter:
          $ref: '#/components/schemas/QueryResultType'
          description: Sets the type of query. Only results for the specified query type are returned.
        DocumentRelevanceOverrideConfigurations:
          $ref: '#/components/schemas/DocumentRelevanceOverrideConfigurationList'
          description: '<p>Overrides relevance tuning configurations of fields or attributes set at the index level.</p> <p>If you use this API to override the relevance tuning configured at the index level, but there is no relevance tuning configured at the index level, then Amazon Kendra does not apply any relevance tuning.</p> <p>If there is relevance tuning configured at the index level, but you do not use this API to override any relevance tuning in the index, then Amazon Kendra uses the relevance tuning that is configured at the index level.</p> <p>If there is relevance tuning configured for fields at the index level, but you use this API to override only some of these fields, then for the fields you did not override, the importance is set to 1.</p>'
        PageNumber:
          $ref: '#/components/schemas/Integer'
          description: 'Query results are returned in pages the size of the <code>PageSize</code> parameter. By default, Amazon Kendra returns the first page of results. Use this parameter to get result pages after the first one.'
        PageSize:
          $ref: '#/components/schemas/Integer'
          description: 'Sets the number of results that are returned in each page of results. The default page size is 10. The maximum number of results returned is 100. If you ask for more than 100 results, only 100 are returned.'
        SortingConfiguration:
          $ref: '#/components/schemas/SortingConfiguration'
          description: '<p>Provides information that determines how the results of the query are sorted. You can set the field that Amazon Kendra should sort the results on, and specify whether the results should be sorted in ascending or descending order. In the case of ties in sorting the results, the results are sorted by relevance.</p> <p>If you don''t provide sorting configuration, the results are sorted by the relevance that Amazon Kendra determines for the result.</p>'
        UserContext:
          $ref: '#/components/schemas/UserContext'
          description: The user context token.
        VisitorId:
          $ref: '#/components/schemas/VisitorId'
          description: 'Provides an identifier for a specific user. The <code>VisitorId</code> should be a unique identifier, such as a GUID. Don''t use personally identifiable information, such as the user''s email address, as the <code>VisitorId</code>.'
    StartDataSourceSyncJobResponse:
      type: object
      properties:
        ExecutionId:
          $ref: '#/components/schemas/String'
          description: Identifies a particular synchronization job.
    StartDataSourceSyncJobRequest:
      type: object
      required:
        - Id
        - IndexId
      title: StartDataSourceSyncJobRequest
      properties:
        Id:
          $ref: '#/components/schemas/DataSourceId'
          description: The identifier of the data source to synchronize.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that contains the data source.
    ResourceInUseException: {}
    StopDataSourceSyncJobRequest:
      type: object
      required:
        - Id
        - IndexId
      title: StopDataSourceSyncJobRequest
      properties:
        Id:
          $ref: '#/components/schemas/DataSourceId'
          description: The identifier of the data source for which to stop the synchronization jobs.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that contains the data source.
    SubmitFeedbackRequest:
      type: object
      required:
        - IndexId
        - QueryId
      title: SubmitFeedbackRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that was queried.
        QueryId:
          $ref: '#/components/schemas/QueryId'
          description: The identifier of the specific query for which you are submitting feedback. The query ID is returned in the response to the <code>Query</code> operation.
        ClickFeedbackItems:
          $ref: '#/components/schemas/ClickFeedbackList'
          description: 'Tells Amazon Kendra that a particular search result link was chosen by the user. '
        RelevanceFeedbackItems:
          $ref: '#/components/schemas/RelevanceFeedbackList'
          description: Provides Amazon Kendra with relevant or not relevant feedback for whether a particular item was relevant to the search.
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceARN
        - Tags
      title: TagResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: 'The Amazon Resource Name (ARN) of the index, FAQ, or data source to tag.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tag keys to add to the index, FAQ, or data source. If a tag already exists, the existing value is replaced with the new value.'
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceARN
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: 'The Amazon Resource Name (ARN) of the index, FAQ, or data source to remove the tag from.'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'A list of tag keys to remove from the index, FAQ, or data source. If a tag key does not exist on the resource, it is ignored.'
    UpdateDataSourceRequest:
      type: object
      required:
        - Id
        - IndexId
      title: UpdateDataSourceRequest
      properties:
        Id:
          $ref: '#/components/schemas/DataSourceId'
          description: The unique identifier of the data source to update.
        Name:
          $ref: '#/components/schemas/DataSourceName'
          description: The name of the data source to update. The name of the data source can't be updated. To rename a data source you must delete the data source and re-create it.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index that contains the data source to update.
        Configuration:
          $ref: '#/components/schemas/DataSourceConfiguration'
        Description:
          $ref: '#/components/schemas/Description'
          description: The new description for the data source.
        Schedule:
          $ref: '#/components/schemas/ScanSchedule'
          description: The new update schedule for the data source.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the new role to use when the data source is accessing resources on your behalf.
    UpdateIndexRequest:
      type: object
      required:
        - Id
      title: UpdateIndexRequest
      properties:
        Id:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index to update.
        Name:
          $ref: '#/components/schemas/IndexName'
          description: The name of the index to update.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: A new IAM role that gives Amazon Kendra permission to access your Amazon CloudWatch logs.
        Description:
          $ref: '#/components/schemas/Description'
          description: A new description for the index.
        DocumentMetadataConfigurationUpdates:
          $ref: '#/components/schemas/DocumentMetadataConfigurationList'
          description: 'The document metadata to update. '
        CapacityUnits:
          $ref: '#/components/schemas/CapacityUnitsConfiguration'
          description: '<p>Sets the number of additional storage and query capacity units that should be used by the index. You can change the capacity of the index up to 5 times per day.</p> <p>If you are using extra storage units, you can''t reduce the storage capacity below that required to meet the storage needs for your index.</p>'
        UserTokenConfigurations:
          $ref: '#/components/schemas/UserTokenConfigurationList'
          description: The user token configuration.
        UserContextPolicy:
          $ref: '#/components/schemas/UserContextPolicy'
          description: The user user token context policy.
    UpdateQuerySuggestionsBlockListRequest:
      type: object
      required:
        - IndexId
        - Id
      title: UpdateQuerySuggestionsBlockListRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index for a block list.
        Id:
          $ref: '#/components/schemas/QuerySuggestionsBlockListId'
          description: The unique identifier of a block list.
        Name:
          $ref: '#/components/schemas/QuerySuggestionsBlockListName'
          description: The name of a block list.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description for a block list.
        SourceS3Path:
          $ref: '#/components/schemas/S3Path'
          description: '<p>The S3 path where your block list text file sits in S3.</p> <p>If you update your block list and provide the same path to the block list text file in S3, then Amazon Kendra reloads the file to refresh the block list. Amazon Kendra does not automatically refresh your block list. You need to call the <code>UpdateQuerySuggestionsBlockList</code> API to refresh you block list.</p> <p>If you update your block list, then Amazon Kendra asynchronously refreshes all query suggestions with the latest content in the S3 file. This means changes might not take effect immediately.</p>'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The IAM (Identity and Access Management) role used to access the block list text file in S3.
    UpdateQuerySuggestionsConfigRequest:
      type: object
      required:
        - IndexId
      title: UpdateQuerySuggestionsConfigRequest
      properties:
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index you want to update query suggestions settings for.
        Mode:
          $ref: '#/components/schemas/Mode'
          description: '<p>Set the mode to <code>ENABLED</code> or <code>LEARN_ONLY</code>.</p> <p>By default, Amazon Kendra enables query suggestions. <code>LEARN_ONLY</code> mode allows you to turn off query suggestions. You can to update this at any time.</p> <p>In <code>LEARN_ONLY</code> mode, Amazon Kendra continues to learn from new queries to keep suggestions up to date for when you are ready to switch to ENABLED mode again.</p>'
        QueryLogLookBackWindowInDays:
          $ref: '#/components/schemas/Integer'
          description: '<p>How recent your queries are in your query log time window.</p> <p>The time window is the number of days from current day to past days.</p> <p>By default, Amazon Kendra sets this to 180.</p>'
        IncludeQueriesWithoutUserInformation:
          $ref: '#/components/schemas/ObjectBoolean'
          description: '<p> <code>TRUE</code> to include queries without user information (i.e. all queries, irrespective of the user), otherwise <code>FALSE</code> to only include queries with user information.</p> <p>If you pass user information to Amazon Kendra along with the queries, you can set this flag to <code>FALSE</code> and instruct Amazon Kendra to only consider queries with user information.</p> <p>If you set to <code>FALSE</code>, Amazon Kendra only considers queries searched at least <code>MinimumQueryCount</code> times across <code>MinimumNumberOfQueryingUsers</code> unique users for suggestions.</p> <p>If you set to <code>TRUE</code>, Amazon Kendra ignores all user information and learns from all queries.</p>'
        MinimumNumberOfQueryingUsers:
          $ref: '#/components/schemas/MinimumNumberOfQueryingUsers'
          description: '<p>The minimum number of unique users who must search a query in order for the query to be eligible to suggest to your users.</p> <p>Increasing this number might decrease the number of suggestions. However, this ensures a query is searched by many users and is truly popular to suggest to users.</p> <p>How you tune this setting depends on your specific needs.</p>'
        MinimumQueryCount:
          $ref: '#/components/schemas/MinimumQueryCount'
          description: '<p>The the minimum number of times a query must be searched in order to be eligible to suggest to your users.</p> <p>Decreasing this number increases the number of suggestions. However, this affects the quality of suggestions as it sets a low bar for a query to be considered popular to suggest to users.</p> <p>How you tune this setting depends on your specific needs.</p>'
    UpdateThesaurusRequest:
      type: object
      required:
        - Id
        - IndexId
      title: UpdateThesaurusRequest
      properties:
        Id:
          $ref: '#/components/schemas/ThesaurusId'
          description: The identifier of the thesaurus to update.
        Name:
          $ref: '#/components/schemas/ThesaurusName'
          description: The updated name of the thesaurus.
        IndexId:
          $ref: '#/components/schemas/IndexId'
          description: The identifier of the index associated with the thesaurus to update.
        Description:
          $ref: '#/components/schemas/Description'
          description: The updated description of the thesaurus.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The updated role ARN of the thesaurus.
        SourceS3Path:
          $ref: '#/components/schemas/S3Path'
    S3ObjectKey:
      type: string
      minLength: 1
      maxLength: 1024
    AccessControlListConfiguration:
      type: object
      properties:
        KeyPath:
          $ref: '#/components/schemas/S3ObjectKey'
          description: Path to the Amazon Web Services S3 bucket that contains the ACL files.
      description: 'Access Control List files for the documents in a data source. For the format of the file, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html">Access control for S3 data sources</a>.'
    ColumnName:
      type: string
      pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
      minLength: 1
      maxLength: 100
    AclConfiguration:
      type: object
      required:
        - AllowedGroupsColumnName
      properties:
        AllowedGroupsColumnName:
          $ref: '#/components/schemas/ColumnName'
          description: 'A list of groups, separated by semi-colons, that filters a query response based on user context. The document is only returned to users that are in one of the groups specified in the <code>UserContext</code> field of the <code>Query</code> operation.'
      description: Provides information about the column that should be used for filtering the query response by groups.
    String:
      type: string
      minLength: 1
      maxLength: 2048
    AdditionalResultAttributeValueType:
      type: string
      enum:
        - TEXT_WITH_HIGHLIGHTS_VALUE
    AdditionalResultAttributeValue:
      type: object
      properties:
        TextWithHighlightsValue:
          $ref: '#/components/schemas/TextWithHighlights'
          description: The text associated with the attribute and information about the highlight to apply to the text.
      description: An attribute returned with a document from a search.
    AdditionalResultAttribute:
      type: object
      required:
        - Key
        - ValueType
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/String'
          description: The key that identifies the attribute.
        ValueType:
          $ref: '#/components/schemas/AdditionalResultAttributeValueType'
          description: The data type of the <code>Value</code> property.
        Value:
          $ref: '#/components/schemas/AdditionalResultAttributeValue'
          description: An object that contains the attribute value.
      description: An attribute returned from an index query.
    AdditionalResultAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalResultAttribute'
    TextWithHighlights:
      type: object
      properties:
        Text:
          $ref: '#/components/schemas/String'
          description: The text to display to the user.
        Highlights:
          $ref: '#/components/schemas/HighlightList'
          description: The beginning and end of the text that should be highlighted.
      description: Provides text and information about where to highlight the text.
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1011
    AttributeFilterList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeFilter'
    AttributeFilter:
      type: object
      properties:
        AndAllFilters:
          $ref: '#/components/schemas/AttributeFilterList'
          description: Performs a logical <code>AND</code> operation on all supplied filters.
        OrAllFilters:
          $ref: '#/components/schemas/AttributeFilterList'
          description: Performs a logical <code>OR</code> operation on all supplied filters.
        NotFilter:
          $ref: '#/components/schemas/AttributeFilter'
          description: Performs a logical <code>NOT</code> operation on all supplied filters.
        EqualsTo:
          $ref: '#/components/schemas/DocumentAttribute'
          description: Performs an equals operation on two document attributes.
        ContainsAll:
          $ref: '#/components/schemas/DocumentAttribute'
          description: Returns true when a document contains all of the specified document attributes. This filter is only applicable to <code>StringListValue</code> metadata.
        ContainsAny:
          $ref: '#/components/schemas/DocumentAttribute'
          description: Returns true when a document contains any of the specified document attributes. This filter is only applicable to <code>StringListValue</code> metadata.
        GreaterThan:
          $ref: '#/components/schemas/DocumentAttribute'
          description: Performs a greater than operation on two document attributes. Use with a document attribute of type <code>Integer</code> or <code>Long</code>.
        GreaterThanOrEquals:
          $ref: '#/components/schemas/DocumentAttribute'
          description: Performs a greater or equals than operation on two document attributes. Use with a document attribute of type <code>Integer</code> or <code>Long</code>.
        LessThan:
          $ref: '#/components/schemas/DocumentAttribute'
          description: Performs a less than operation on two document attributes. Use with a document attribute of type <code>Integer</code> or <code>Long</code>.
        LessThanOrEquals:
          $ref: '#/components/schemas/DocumentAttribute'
          description: Performs a less than or equals operation on two document attributes. Use with a document attribute of type <code>Integer</code> or <code>Long</code>.
      description: '<p>Provides filtering the query results based on document attributes.</p> <p>When you use the <code>AndAllFilters</code> or <code>OrAllFilters</code>, filters you can use 2 layers under the first attribute filter. For example, you can use:</p> <p> <code>&lt;AndAllFilters&gt;</code> </p> <ol> <li> <p> <code> &lt;OrAllFilters&gt;</code> </p> </li> <li> <p> <code> &lt;EqualTo&gt;</code> </p> </li> </ol> <p>If you use more than 2 layers, you receive a <code>ValidationException</code> exception with the message "<code>AttributeFilter</code> cannot have a depth of more than 2."</p> <p>If you use more than 10 attribute filters, you receive a <code>ValidationException</code> exception with the message "<code>AttributeFilter</code> cannot have a length of more than 10".</p>'
    DocumentAttribute:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/DocumentAttributeKey'
          description: The identifier for the attribute.
        Value:
          $ref: '#/components/schemas/DocumentAttributeValue'
          description: The value of the attribute.
      description: 'A custom attribute value assigned to a document. '
    BasicAuthenticationConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/BasicAuthenticationConfiguration'
      minItems: 0
      maxItems: 10
    AuthenticationConfiguration:
      type: object
      properties:
        BasicAuthentication:
          $ref: '#/components/schemas/BasicAuthenticationConfigurationList'
          description: <p>The list of configuration information that's required to connect to and crawl a website host using basic authentication credentials.</p> <p>The list includes the name and port number of the website host.</p>
      description: Provides the configuration information to connect to websites that require user authentication.
    Host:
      type: string
      pattern: '([^\s]*)'
      minLength: 1
      maxLength: 253
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    SecretArn:
      type: string
      pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
      minLength: 1
      maxLength: 1284
    BasicAuthenticationConfiguration:
      type: object
      required:
        - Host
        - Port
        - Credentials
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: '<p>The name of the website host you want to connect to using authentication credentials.</p> <p>For example, the host name of https://a.example.com/page1.html is "a.example.com".</p>'
        Port:
          $ref: '#/components/schemas/Port'
          description: '<p>The port number of the website host you want to connect to using authentication credentials.</p> <p>For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.</p>'
        Credentials:
          $ref: '#/components/schemas/SecretArn'
          description: '<p>Your secret ARN, which you can create in <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html">AWS Secrets Manager</a> </p> <p>You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.</p>'
      description: Provides the configuration information to connect to websites that require basic user authentication.
    IndexId:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9-]*'
      minLength: 36
      maxLength: 36
    DocumentIdList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentId'
      minItems: 1
      maxItems: 10
    DataSourceSyncJobMetricTarget:
      type: object
      required:
        - DataSourceId
      properties:
        DataSourceId:
          $ref: '#/components/schemas/DataSourceId'
          description: The ID of the data source that is running the sync job.
        DataSourceSyncJobId:
          $ref: '#/components/schemas/DataSourceSyncJobId'
          description: '<p>The ID of the sync job that is running on the data source.</p> <p>If the ID of a sync job is not provided and there is a sync job running, then the ID of this sync job is used and metrics are generated for this sync job.</p> <p>If the ID of a sync job is not provided and there is no sync job running, then no metrics are generated and documents are indexed/deleted at the index level without sync job metrics included.</p>'
      description: Maps a particular data source sync job to a particular data source.
    BatchDeleteDocumentResponseFailedDocuments:
      type: array
      items:
        $ref: '#/components/schemas/BatchDeleteDocumentResponseFailedDocument'
    DocumentId:
      type: string
      minLength: 1
      maxLength: 2048
    ErrorCode:
      type: string
      enum:
        - InternalError
        - InvalidRequest
    ErrorMessage:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 2048
    BatchDeleteDocumentResponseFailedDocument:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/DocumentId'
          description: The identifier of the document that couldn't be removed from the index.
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: The error code for why the document couldn't be removed from the index.
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: An explanation for why the document couldn't be removed from the index.
      description: Provides information about documents that could not be removed from an index by the <code>BatchDeleteDocument</code> operation.
    DocumentInfoList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentInfo'
      minItems: 1
      maxItems: 10
    BatchGetDocumentStatusResponseErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetDocumentStatusResponseError'
    DocumentStatusList:
      type: array
      items:
        $ref: '#/components/schemas/Status'
    BatchGetDocumentStatusResponseError:
      type: object
      properties:
        DocumentId:
          $ref: '#/components/schemas/DocumentId'
          description: The unique identifier of the document whose status could not be retrieved.
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: Indicates the source of the error.
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: States that the API could not get the status of a document. This could be because the request is not valid or there is a system error.
      description: Provides a response when the status of a document could not be retrieved.
    RoleArn:
      type: string
      pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
      minLength: 1
      maxLength: 1284
    DocumentList:
      type: array
      items:
        $ref: '#/components/schemas/Document'
      minItems: 1
      maxItems: 10
    BatchPutDocumentResponseFailedDocuments:
      type: array
      items:
        $ref: '#/components/schemas/BatchPutDocumentResponseFailedDocument'
    BatchPutDocumentResponseFailedDocument:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/DocumentId'
          description: The unique identifier of the document.
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: The type of error that caused the document to fail to be indexed.
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: A description of the reason why the document could not be indexed.
      description: Provides information about a document that could not be indexed.
    Blob:
      type: string
    Boolean:
      type: boolean
    StorageCapacityUnit:
      type: integer
      minimum: 0
    QueryCapacityUnit:
      type: integer
      minimum: 0
    CapacityUnitsConfiguration:
      type: object
      required:
        - StorageCapacityUnits
        - QueryCapacityUnits
      properties:
        StorageCapacityUnits:
          $ref: '#/components/schemas/StorageCapacityUnit'
          description: 'The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first.'
        QueryCapacityUnits:
          $ref: '#/components/schemas/QueryCapacityUnit'
          description: '<p>The amount of extra query capacity for an index and <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_GetQuerySuggestions.html">GetQuerySuggestions</a> capacity.</p> <p>A single extra capacity unit for an index provides 0.1 queries per second or approximately 8,000 queries per day.</p> <p> <code>GetQuerySuggestions</code> capacity is five times the provisioned query capacity for an index, or the base capacity of 2.5 calls per second, whichever is higher. For example, the base capacity for an index is 0.1 queries per second, and <code>GetQuerySuggestions</code> capacity has a base of 2.5 calls per second. If you add another 0.1 queries per second to total 0.2 queries per second for an index, the <code>GetQuerySuggestions</code> capacity is 2.5 calls per second (higher than five times 0.2 queries per second).</p>'
      description: Specifies capacity units configured for your enterprise edition index. You can add and remove capacity units to tune an index to your requirements.
    ChangeDetectingColumns:
      type: array
      items:
        $ref: '#/components/schemas/ColumnName'
      minItems: 1
      maxItems: 5
    ClaimRegex:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 100
    ResultId:
      type: string
      minLength: 1
      maxLength: 73
    Timestamp:
      type: string
      format: date-time
    ClickFeedback:
      type: object
      required:
        - ResultId
        - ClickTime
      properties:
        ResultId:
          $ref: '#/components/schemas/ResultId'
          description: The unique identifier of the search result that was clicked.
        ClickTime:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix timestamp of the date and time that the result was clicked.
      description: Gathers information about when a particular result was clicked by a user. Your application uses the <code>SubmitFeedback</code> operation to provide click information.
    ClickFeedbackList:
      type: array
      items:
        $ref: '#/components/schemas/ClickFeedback'
    ClientTokenName:
      type: string
      minLength: 1
      maxLength: 100
    DataSourceToIndexFieldMappingList:
      type: array
      items:
        $ref: '#/components/schemas/DataSourceToIndexFieldMapping'
      minItems: 1
      maxItems: 100
    ColumnConfiguration:
      type: object
      required:
        - DocumentIdColumnName
        - DocumentDataColumnName
        - ChangeDetectingColumns
      properties:
        DocumentIdColumnName:
          $ref: '#/components/schemas/ColumnName'
          description: The column that provides the document's unique identifier.
        DocumentDataColumnName:
          $ref: '#/components/schemas/ColumnName'
          description: The column that contains the contents of the document.
        DocumentTitleColumnName:
          $ref: '#/components/schemas/ColumnName'
          description: The column that contains the title of the document.
        FieldMappings:
          $ref: '#/components/schemas/DataSourceToIndexFieldMappingList'
          description: An array of objects that map database column names to the corresponding fields in an index. You must first create the fields in the index using the <code>UpdateIndex</code> operation.
        ChangeDetectingColumns:
          $ref: '#/components/schemas/ChangeDetectingColumns'
          description: One to five columns that indicate when a document in the database has changed.
      description: Provides information about how Amazon Kendra should use the columns of a database in an index.
    ConfluenceAttachmentFieldMappingsList:
      type: array
      items:
        $ref: '#/components/schemas/ConfluenceAttachmentToIndexFieldMapping'
      minItems: 1
      maxItems: 11
    ConfluenceAttachmentConfiguration:
      type: object
      properties:
        CrawlAttachments:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether Amazon Kendra indexes attachments to the pages and blogs in the Confluence data source. '
        AttachmentFieldMappings:
          $ref: '#/components/schemas/ConfluenceAttachmentFieldMappingsList'
          description: '<p>Defines how attachment metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the <code>UpdateIndex</code> operation.</p> <p>If you specify the <code>AttachentFieldMappings</code> parameter, you must specify at least one field mapping.</p>'
      description: 'Specifies the attachment settings for the Confluence data source. Attachment settings are optional, if you don''t specify settings attachments, Amazon Kendra won''t index them.'
    ConfluenceAttachmentToIndexFieldMapping:
      type: object
      properties:
        DataSourceFieldName:
          $ref: '#/components/schemas/ConfluenceAttachmentFieldName'
          description: <p>The name of the field in the data source. </p> <p>You must first create the index field using the <code>UpdateIndex</code> operation. </p>
        DateFieldFormat:
          $ref: '#/components/schemas/DataSourceDateFieldFormat'
          description: 'The format for date fields in the data source. If the field specified in <code>DataSourceFieldName</code> is a date field you must specify the date format. If the field is not a date field, an exception is thrown.'
        IndexFieldName:
          $ref: '#/components/schemas/IndexFieldName'
          description: The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.
      description: <p>Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.</p> <p>You must first create the index field using the <code>UpdateIndex</code> operation. </p>
    ConfluenceAttachmentFieldName:
      type: string
      enum:
        - AUTHOR
        - CONTENT_TYPE
        - CREATED_DATE
        - DISPLAY_URL
        - FILE_SIZE
        - ITEM_TYPE
        - PARENT_ID
        - SPACE_KEY
        - SPACE_NAME
        - URL
        - VERSION
    DataSourceDateFieldFormat:
      type: string
      pattern: ^(?!\s).*(?<!\s)$
      minLength: 4
      maxLength: 40
    IndexFieldName:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 30
    ConfluenceBlogFieldMappingsList:
      type: array
      items:
        $ref: '#/components/schemas/ConfluenceBlogToIndexFieldMapping'
      minItems: 1
      maxItems: 9
    ConfluenceBlogConfiguration:
      type: object
      properties:
        BlogFieldMappings:
          $ref: '#/components/schemas/ConfluenceBlogFieldMappingsList'
          description: '<p>Defines how blog metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the <code>UpdateIndex</code> operation.</p> <p>If you specify the <code>BlogFieldMappings</code> parameter, you must specify at least one field mapping.</p>'
      description: Specifies the blog settings for the Confluence data source. Blogs are always indexed unless filtered from the index by the <code>ExclusionPatterns</code> or <code>InclusionPatterns</code> fields in the <code>ConfluenceConfiguration</code> type.
    ConfluenceBlogToIndexFieldMapping:
      type: object
      properties:
        DataSourceFieldName:
          $ref: '#/components/schemas/ConfluenceBlogFieldName'
          description: 'The name of the field in the data source. '
        DateFieldFormat:
          $ref: '#/components/schemas/DataSourceDateFieldFormat'
          description: 'The format for date fields in the data source. If the field specified in <code>DataSourceFieldName</code> is a date field you must specify the date format. If the field is not a date field, an exception is thrown.'
        IndexFieldName:
          $ref: '#/components/schemas/IndexFieldName'
          description: The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.
      description: <p>Defines the mapping between a blog field in the Confluence data source to a Amazon Kendra index field.</p> <p>You must first create the index field using the <code>UpdateIndex</code> operation. </p>
    ConfluenceBlogFieldName:
      type: string
      enum:
        - AUTHOR
        - DISPLAY_URL
        - ITEM_TYPE
        - LABELS
        - PUBLISH_DATE
        - SPACE_KEY
        - SPACE_NAME
        - URL
        - VERSION
    Url:
      type: string
      pattern: '^(https?|ftp|file):\/\/([^\s]*)'
      minLength: 1
      maxLength: 2048
    ConfluenceVersion:
      type: string
      enum:
        - CLOUD
        - SERVER
    ConfluenceSpaceConfiguration:
      type: object
      properties:
        CrawlPersonalSpaces:
          $ref: '#/components/schemas/Boolean'
          description: 'Specifies whether Amazon Kendra should index personal spaces. Users can add restrictions to items in personal spaces. If personal spaces are indexed, queries without user context information may return restricted items from a personal space in their results. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">Filtering on user context</a>.'
        CrawlArchivedSpaces:
          $ref: '#/components/schemas/Boolean'
          description: Specifies whether Amazon Kendra should index archived spaces.
        IncludeSpaces:
          $ref: '#/components/schemas/ConfluenceSpaceList'
          description: 'A list of space keys for Confluence spaces. If you include a key, the blogs, documents, and attachments in the space are indexed. Spaces that aren''t in the list aren''t indexed. A space in the list must exist. Otherwise, Amazon Kendra logs an error when the data source is synchronized. If a space is in both the <code>IncludeSpaces</code> and the <code>ExcludeSpaces</code> list, the space is excluded.'
        ExcludeSpaces:
          $ref: '#/components/schemas/ConfluenceSpaceList'
          description: 'A list of space keys of Confluence spaces. If you include a key, the blogs, documents, and attachments in the space are not indexed. If a space is in both the <code>ExcludeSpaces</code> and the <code>IncludeSpaces</code> list, the space is excluded.'
        SpaceFieldMappings:
          $ref: '#/components/schemas/ConfluenceSpaceFieldMappingsList'
          description: '<p>Defines how space metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the <code>UpdateIndex</code> operation.</p> <p>If you specify the <code>SpaceFieldMappings</code> parameter, you must specify at least one field mapping.</p>'
      description: Specifies the configuration for indexing Confluence spaces.
    ConfluencePageConfiguration:
      type: object
      properties:
        PageFieldMappings:
          $ref: '#/components/schemas/ConfluencePageFieldMappingsList'
          description: '<p>Defines how page metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the <code>UpdateIndex</code> operation.</p> <p>If you specify the <code>PageFieldMappings</code> parameter, you must specify at least one field mapping.</p>'
      description: Specifies the page settings for the Confluence data source.
    DataSourceVpcConfiguration:
      type: object
      required:
        - SubnetIds
        - SecurityGroupIds
      properties:
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdList'
          description: 'A list of identifiers for subnets within your Amazon VPC. The subnets should be able to connect to each other in the VPC, and they should have outgoing access to the Internet through a NAT device.'
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIdList'
          description: A list of identifiers of security groups within your Amazon VPC. The security groups should enable Amazon Kendra to connect to the data source.
      description: Provides information for connecting to an Amazon VPC.
    DataSourceInclusionsExclusionsStrings:
      type: array
      items:
        $ref: '#/components/schemas/DataSourceInclusionsExclusionsStringsMember'
      minItems: 0
      maxItems: 100
    ConfluenceConfiguration:
      type: object
      required:
        - ServerUrl
        - SecretArn
        - Version
      properties:
        ServerUrl:
          $ref: '#/components/schemas/Url'
          description: 'The URL of your Confluence instance. Use the full URL of the server. For example, <code>https://server.example.com:port/</code>. You can also use an IP address, for example, <code>https://192.168.1.113/</code>.'
        SecretArn:
          $ref: '#/components/schemas/SecretArn'
          description: '<p>The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the key/value pairs required to connect to your Confluence server. The secret must contain a JSON structure with the following keys:</p> <ul> <li> <p>username - The user name or email address of a user with administrative privileges for the Confluence server.</p> </li> <li> <p>password - The password associated with the user logging in to the Confluence server.</p> </li> </ul>'
        Version:
          $ref: '#/components/schemas/ConfluenceVersion'
          description: Specifies the version of the Confluence installation that you are connecting to.
        SpaceConfiguration:
          $ref: '#/components/schemas/ConfluenceSpaceConfiguration'
          description: Specifies configuration information for indexing Confluence spaces.
        PageConfiguration:
          $ref: '#/components/schemas/ConfluencePageConfiguration'
          description: Specifies configuration information for indexing Confluence pages.
        BlogConfiguration:
          $ref: '#/components/schemas/ConfluenceBlogConfiguration'
          description: ' Specifies configuration information for indexing Confluence blogs.'
        AttachmentConfiguration:
          $ref: '#/components/schemas/ConfluenceAttachmentConfiguration'
          description: Specifies configuration information for indexing attachments to Confluence blogs and pages.
        VpcConfiguration:
          $ref: '#/components/schemas/DataSourceVpcConfiguration'
          description: Specifies the information for connecting to an Amazon VPC.
        InclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: 'A list of regular expression patterns that apply to a URL on the Confluence server. An inclusion pattern can apply to a blog post, a page, a space, or an attachment. Items that match the patterns are included in the index. Items that don''t match the pattern are excluded from the index. If an item matches both an inclusion pattern and an exclusion pattern, the item isn''t included in the index.'
        ExclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: 'A list of regular expression patterns that apply to a URL on the Confluence server. An exclusion pattern can apply to a blog post, a page, a space, or an attachment. Items that match the pattern are excluded from the index. Items that don''t match the pattern are included in the index. If a item matches both an exclusion pattern and an inclusion pattern, the item isn''t included in the index.'
      description: Provides configuration information for data sources that connect to Confluence.
    ConfluencePageFieldMappingsList:
      type: array
      items:
        $ref: '#/components/schemas/ConfluencePageToIndexFieldMapping'
      minItems: 1
      maxItems: 12
    ConfluencePageToIndexFieldMapping:
      type: object
      properties:
        DataSourceFieldName:
          $ref: '#/components/schemas/ConfluencePageFieldName'
          description: 'The name of the field in the data source. '
        DateFieldFormat:
          $ref: '#/components/schemas/DataSourceDateFieldFormat'
          description: 'The format for date fields in the data source. If the field specified in <code>DataSourceFieldName</code> is a date field you must specify the date format. If the field is not a date field, an exception is thrown.'
        IndexFieldName:
          $ref: '#/components/schemas/IndexFieldName'
          description: The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.
      description: <p>Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.</p> <p>You must first create the index field using the <code>UpdateIndex</code> operation. </p>
    ConfluencePageFieldName:
      type: string
      enum:
        - AUTHOR
        - CONTENT_STATUS
        - CREATED_DATE
        - DISPLAY_URL
        - ITEM_TYPE
        - LABELS
        - MODIFIED_DATE
        - PARENT_ID
        - SPACE_KEY
        - SPACE_NAME
        - URL
        - VERSION
    ConfluenceSpaceList:
      type: array
      items:
        $ref: '#/components/schemas/ConfluenceSpaceIdentifier'
      minItems: 1
    ConfluenceSpaceFieldMappingsList:
      type: array
      items:
        $ref: '#/components/schemas/ConfluenceSpaceToIndexFieldMapping'
      minItems: 1
      maxItems: 4
    ConfluenceSpaceToIndexFieldMapping:
      type: object
      properties:
        DataSourceFieldName:
          $ref: '#/components/schemas/ConfluenceSpaceFieldName'
          description: 'The name of the field in the data source. '
        DateFieldFormat:
          $ref: '#/components/schemas/DataSourceDateFieldFormat'
          description: 'The format for date fields in the data source. If the field specified in <code>DataSourceFieldName</code> is a date field you must specify the date format. If the field is not a date field, an exception is thrown.'
        IndexFieldName:
          $ref: '#/components/schemas/IndexFieldName'
          description: The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.
      description: <p>Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.</p> <p>You must first create the index field using the <code>UpdateIndex</code> operation. </p>
    ConfluenceSpaceFieldName:
      type: string
      enum:
        - DISPLAY_URL
        - ITEM_TYPE
        - SPACE_KEY
        - URL
    ConfluenceSpaceIdentifier:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 255
    DatabaseHost:
      type: string
      minLength: 1
      maxLength: 253
    DatabasePort:
      type: integer
      minimum: 1
      maximum: 65535
    DatabaseName:
      type: string
      pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
      minLength: 1
      maxLength: 100
    TableName:
      type: string
      pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
      minLength: 1
      maxLength: 100
    ConnectionConfiguration:
      type: object
      required:
        - DatabaseHost
        - DatabasePort
        - DatabaseName
        - TableName
        - SecretArn
      properties:
        DatabaseHost:
          $ref: '#/components/schemas/DatabaseHost'
          description: The name of the host for the database. Can be either a string (host.subdomain.domain.tld) or an IPv4 or IPv6 address.
        DatabasePort:
          $ref: '#/components/schemas/DatabasePort'
          description: The port that the database uses for connections.
        DatabaseName:
          $ref: '#/components/schemas/DatabaseName'
          description: The name of the database containing the document data.
        TableName:
          $ref: '#/components/schemas/TableName'
          description: The name of the table that contains the document data.
        SecretArn:
          $ref: '#/components/schemas/SecretArn'
          description: 'The Amazon Resource Name (ARN) of credentials stored in Secrets Manager. The credentials should be a user/password pair. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-database.html">Using a Database Data Source</a>. For more information about Secrets Manager, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html"> What Is Secrets Manager</a> in the <i> Secrets Manager </i> user guide.'
      description: Provides the information necessary to connect to a database.
    ContentType:
      type: string
      enum:
        - PDF
        - HTML
        - MS_WORD
        - PLAIN_TEXT
        - PPT
    CrawlDepth:
      type: integer
      minimum: 0
      maximum: 10
    DataSourceName:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
      minLength: 1
      maxLength: 1000
    DataSourceType:
      type: string
      enum:
        - S3
        - SHAREPOINT
        - DATABASE
        - SALESFORCE
        - ONEDRIVE
        - SERVICENOW
        - CUSTOM
        - CONFLUENCE
        - GOOGLEDRIVE
        - WEBCRAWLER
        - WORKDOCS
    DataSourceConfiguration:
      type: object
      properties:
        S3Configuration:
          $ref: '#/components/schemas/S3DataSourceConfiguration'
          description: Provides information to create a data source connector for a document repository in an Amazon S3 bucket.
        SharePointConfiguration:
          $ref: '#/components/schemas/SharePointConfiguration'
          description: Provides information necessary to create a data source connector for a Microsoft SharePoint site.
        DatabaseConfiguration:
          $ref: '#/components/schemas/DatabaseConfiguration'
          description: Provides information necessary to create a data source connector for a database.
        SalesforceConfiguration:
          $ref: '#/components/schemas/SalesforceConfiguration'
          description: Provides configuration information for data sources that connect to a Salesforce site.
        OneDriveConfiguration:
          $ref: '#/components/schemas/OneDriveConfiguration'
          description: Provides configuration for data sources that connect to Microsoft OneDrive.
        ServiceNowConfiguration:
          $ref: '#/components/schemas/ServiceNowConfiguration'
          description: Provides configuration for data sources that connect to ServiceNow instances.
        ConfluenceConfiguration:
          $ref: '#/components/schemas/ConfluenceConfiguration'
          description: Provides configuration information for connecting to a Confluence data source.
        GoogleDriveConfiguration:
          $ref: '#/components/schemas/GoogleDriveConfiguration'
          description: 'Provides configuration for data sources that connect to Google Drive. '
        WebCrawlerConfiguration:
          $ref: '#/components/schemas/WebCrawlerConfiguration'
        WorkDocsConfiguration:
          $ref: '#/components/schemas/WorkDocsConfiguration'
          description: Provides the configuration information to connect to WorkDocs as your data source.
      description: Configuration information for a Amazon Kendra data source.
    Description:
      type: string
      pattern: '^\P{C}*$'
      minLength: 0
      maxLength: 1000
    ScanSchedule:
      type: string
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 200
    DataSourceId:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
      minLength: 1
      maxLength: 100
    FaqName:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
      minLength: 1
      maxLength: 100
    S3Path:
      type: object
      required:
        - Bucket
        - Key
      properties:
        Bucket:
          $ref: '#/components/schemas/S3BucketName'
          description: The name of the S3 bucket that contains the file.
        Key:
          $ref: '#/components/schemas/S3ObjectKey'
          description: The name of the file.
      description: Information required to find a specific file in an Amazon S3 bucket.
    FaqFileFormat:
      type: string
      enum:
        - CSV
        - CSV_WITH_HEADER
        - JSON
    FaqId:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
      minLength: 1
      maxLength: 100
    IndexName:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
      minLength: 1
      maxLength: 1000
    IndexEdition:
      type: string
      enum:
        - DEVELOPER_EDITION
        - ENTERPRISE_EDITION
    ServerSideEncryptionConfiguration:
      type: object
      properties:
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The identifier of the KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
      description: Provides the identifier of the KMScustomer master key (CMK) used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs.
    UserTokenConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/UserTokenConfiguration'
      maxItems: 1
    UserContextPolicy:
      type: string
      enum:
        - ATTRIBUTE_FILTER
        - USER_TOKEN
    QuerySuggestionsBlockListName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 100
    QuerySuggestionsBlockListId:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9-]*'
      minLength: 36
      maxLength: 36
    ThesaurusName:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
      minLength: 1
      maxLength: 100
    ThesaurusId:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
      minLength: 1
      maxLength: 100
    S3DataSourceConfiguration:
      type: object
      required:
        - BucketName
      properties:
        BucketName:
          $ref: '#/components/schemas/S3BucketName'
          description: The name of the bucket that contains the documents.
        InclusionPrefixes:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: A list of S3 prefixes for the documents that should be included in the index.
        InclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: '<p>A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed.</p> <p>Some <a href="https://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters">examples</a> are:</p> <ul> <li> <p> <i>*.txt</i> will include all text files in a directory (files with the extension .txt).</p> </li> <li> <p> <i>**/*.txt</i> will include all text files in a directory and its subdirectories.</p> </li> <li> <p> <i>*tax*</i> will include all files in a directory that contain ''tax'' in the file name, such as ''tax'', ''taxes'', ''income_tax''.</p> </li> </ul>'
        ExclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: '<p>A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed.</p> <p>Some <a href="https://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters">examples</a> are:</p> <ul> <li> <p> <i>*.png , *.jpg</i> will exclude all PNG and JPEG image files in a directory (files with the extensions .png and .jpg).</p> </li> <li> <p> <i>*internal*</i> will exclude all files in a directory that contain ''internal'' in the file name, such as ''internal'', ''internal_only'', ''company_internal''.</p> </li> <li> <p> <i>**/*internal*</i> will exclude all internal-related files in a directory and its subdirectories.</p> </li> </ul>'
        DocumentsMetadataConfiguration:
          $ref: '#/components/schemas/DocumentsMetadataConfiguration'
        AccessControlListConfiguration:
          $ref: '#/components/schemas/AccessControlListConfiguration'
          description: 'Provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html">Access control for S3 data sources</a>.'
      description: Provides configuration information for a data source to index documents in an Amazon S3 bucket.
    SharePointConfiguration:
      type: object
      required:
        - SharePointVersion
        - Urls
        - SecretArn
      properties:
        SharePointVersion:
          $ref: '#/components/schemas/SharePointVersion'
          description: The version of Microsoft SharePoint that you are using as a data source.
        Urls:
          $ref: '#/components/schemas/SharePointUrlList'
          description: The URLs of the Microsoft SharePoint site that contains the documents that should be indexed.
        SecretArn:
          $ref: '#/components/schemas/SecretArn'
          description: 'The Amazon Resource Name (ARN) of credentials stored in Secrets Manager. The credentials should be a user/password pair. If you use SharePoint Server, you also need to provide the sever domain name as part of the credentials. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-sharepoint.html">Using a Microsoft SharePoint Data Source</a>. For more information about Secrets Manager, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html"> What Is Secrets Manager</a> in the <i>Secrets Manager </i> user guide.'
        CrawlAttachments:
          $ref: '#/components/schemas/Boolean'
          description: ' <code>TRUE</code> to include attachments to documents stored in your Microsoft SharePoint site in the index; otherwise, <code>FALSE</code>.'
        UseChangeLog:
          $ref: '#/components/schemas/Boolean'
          description: 'Set to <code>TRUE</code> to use the Microsoft SharePoint change log to determine the documents that need to be updated in the index. Depending on the size of the SharePoint change log, it may take longer for Amazon Kendra to use the change log than it takes it to determine the changed documents using the Amazon Kendra document crawler.'
        InclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: '<p>A list of regular expression patterns. Documents that match the patterns are included in the index. Documents that don''t match the patterns are excluded from the index. If a document matches both an inclusion pattern and an exclusion pattern, the document is not included in the index.</p> <p>The regex is applied to the display URL of the SharePoint document.</p>'
        ExclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: '<p>A list of regular expression patterns. Documents that match the patterns are excluded from the index. Documents that don''t match the patterns are included in the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.</p> <p>The regex is applied to the display URL of the SharePoint document.</p>'
        VpcConfiguration:
          $ref: '#/components/schemas/DataSourceVpcConfiguration'
        FieldMappings:
          $ref: '#/components/schemas/DataSourceToIndexFieldMappingList'
          description: 'A list of <code>DataSourceToIndexFieldMapping</code> objects that map Microsoft SharePoint attributes to custom fields in the Amazon Kendra index. You must first create the index fields using the <code>UpdateIndex</code> operation before you map SharePoint attributes. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping Data Source Fields</a>.'
        DocumentTitleFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The Microsoft SharePoint attribute field that contains the title of the document.
        DisableLocalGroups:
          $ref: '#/components/schemas/Boolean'
          description: 'A Boolean value that specifies whether local groups are disabled (<code>True</code>) or enabled (<code>False</code>). '
        SslCertificateS3Path:
          $ref: '#/components/schemas/S3Path'
      description: Provides configuration information for connecting to a Microsoft SharePoint data source.
    DatabaseConfiguration:
      type: object
      required:
        - DatabaseEngineType
        - ConnectionConfiguration
        - ColumnConfiguration
      properties:
        DatabaseEngineType:
          $ref: '#/components/schemas/DatabaseEngineType'
          description: The type of database engine that runs the database.
        ConnectionConfiguration:
          $ref: '#/components/schemas/ConnectionConfiguration'
          description: The information necessary to connect to a database.
        VpcConfiguration:
          $ref: '#/components/schemas/DataSourceVpcConfiguration'
        ColumnConfiguration:
          $ref: '#/components/schemas/ColumnConfiguration'
          description: Information about where the index should get the document information from the database.
        AclConfiguration:
          $ref: '#/components/schemas/AclConfiguration'
          description: Information about the database column that provides information for user context filtering.
        SqlConfiguration:
          $ref: '#/components/schemas/SqlConfiguration'
          description: Provides information about how Amazon Kendra uses quote marks around SQL identifiers when querying a database data source.
      description: 'Provides the information necessary to connect a database to an index. '
    SalesforceConfiguration:
      type: object
      required:
        - ServerUrl
        - SecretArn
      properties:
        ServerUrl:
          $ref: '#/components/schemas/Url'
          description: The instance URL for the Salesforce site that you want to index.
        SecretArn:
          $ref: '#/components/schemas/SecretArn'
          description: '<p>The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the key/value pairs required to connect to your Salesforce instance. The secret must contain a JSON structure with the following keys:</p> <ul> <li> <p>authenticationUrl - The OAUTH endpoint that Amazon Kendra connects to get an OAUTH token. </p> </li> <li> <p>consumerKey - The application public key generated when you created your Salesforce application.</p> </li> <li> <p>consumerSecret - The application private key generated when you created your Salesforce application.</p> </li> <li> <p>password - The password associated with the user logging in to the Salesforce instance.</p> </li> <li> <p>securityToken - The token associated with the user account logging in to the Salesforce instance.</p> </li> <li> <p>username - The user name of the user logging in to the Salesforce instance.</p> </li> </ul>'
        StandardObjectConfigurations:
          $ref: '#/components/schemas/SalesforceStandardObjectConfigurationList'
          description: Specifies the Salesforce standard objects that Amazon Kendra indexes.
        KnowledgeArticleConfiguration:
          $ref: '#/components/schemas/SalesforceKnowledgeArticleConfiguration'
          description: 'Specifies configuration information for the knowledge article types that Amazon Kendra indexes. Amazon Kendra indexes standard knowledge articles and the standard fields of knowledge articles, or the custom fields of custom knowledge articles, but not both.'
        ChatterFeedConfiguration:
          $ref: '#/components/schemas/SalesforceChatterFeedConfiguration'
          description: Specifies configuration information for Salesforce chatter feeds.
        CrawlAttachments:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether Amazon Kendra should index attachments to Salesforce objects.
        StandardObjectAttachmentConfiguration:
          $ref: '#/components/schemas/SalesforceStandardObjectAttachmentConfiguration'
          description: 'Provides configuration information for processing attachments to Salesforce standard objects. '
        IncludeAttachmentFilePatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: '<p>A list of regular expression patterns. Documents that match the patterns are included in the index. Documents that don''t match the patterns are excluded from the index. If a document matches both an inclusion pattern and an exclusion pattern, the document is not included in the index.</p> <p>The regex is applied to the name of the attached file.</p>'
        ExcludeAttachmentFilePatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: '<p>A list of regular expression patterns. Documents that match the patterns are excluded from the index. Documents that don''t match the patterns are included in the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.</p> <p>The regex is applied to the name of the attached file.</p>'
      description: Provides configuration information for connecting to a Salesforce data source.
    OneDriveConfiguration:
      type: object
      required:
        - TenantDomain
        - SecretArn
        - OneDriveUsers
      properties:
        TenantDomain:
          $ref: '#/components/schemas/TenantDomain'
          description: 'The Azure Active Directory domain of the organization. '
        SecretArn:
          $ref: '#/components/schemas/SecretArn'
          description: 'The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the user name and password to connect to OneDrive. The user namd should be the application ID for the OneDrive application, and the password is the application key for the OneDrive application.'
        OneDriveUsers:
          $ref: '#/components/schemas/OneDriveUsers'
          description: A list of user accounts whose documents should be indexed.
        InclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: '<p>A list of regular expression patterns. Documents that match the pattern are included in the index. Documents that don''t match the pattern are excluded from the index. If a document matches both an inclusion pattern and an exclusion pattern, the document is not included in the index. </p> <p>The exclusion pattern is applied to the file name.</p>'
        ExclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: '<p>List of regular expressions applied to documents. Items that match the exclusion pattern are not indexed. If you provide both an inclusion pattern and an exclusion pattern, any item that matches the exclusion pattern isn''t indexed. </p> <p>The exclusion pattern is applied to the file name.</p>'
        FieldMappings:
          $ref: '#/components/schemas/DataSourceToIndexFieldMappingList'
          description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map Microsoft OneDrive fields to custom fields in the Amazon Kendra index. You must first create the index fields before you map OneDrive fields.
        DisableLocalGroups:
          $ref: '#/components/schemas/Boolean'
          description: 'A Boolean value that specifies whether local groups are disabled (<code>True</code>) or enabled (<code>False</code>). '
      description: Provides configuration information for data sources that connect to OneDrive.
    ServiceNowConfiguration:
      type: object
      required:
        - HostUrl
        - SecretArn
        - ServiceNowBuildVersion
      properties:
        HostUrl:
          $ref: '#/components/schemas/ServiceNowHostUrl'
          description: 'The ServiceNow instance that the data source connects to. The host endpoint should look like the following: <code>{instance}.service-now.com.</code> '
        SecretArn:
          $ref: '#/components/schemas/SecretArn'
          description: The Amazon Resource Name (ARN) of the Secrets Manager secret that contains the user name and password required to connect to the ServiceNow instance.
        ServiceNowBuildVersion:
          $ref: '#/components/schemas/ServiceNowBuildVersionType'
          description: 'The identifier of the release that the ServiceNow host is running. If the host is not running the <code>LONDON</code> release, use <code>OTHERS</code>.'
        KnowledgeArticleConfiguration:
          $ref: '#/components/schemas/ServiceNowKnowledgeArticleConfiguration'
          description: Provides configuration information for crawling knowledge articles in the ServiceNow site.
        ServiceCatalogConfiguration:
          $ref: '#/components/schemas/ServiceNowServiceCatalogConfiguration'
          description: Provides configuration information for crawling service catalogs in the ServiceNow site.
        AuthenticationType:
          $ref: '#/components/schemas/ServiceNowAuthenticationType'
          description: '<p>Determines the type of authentication used to connect to the ServiceNow instance. If you choose <code>HTTP_BASIC</code>, Amazon Kendra is authenticated using the user name and password provided in the AWS Secrets Manager secret in the <code>SecretArn</code> field. When you choose <code>OAUTH2</code>, Amazon Kendra is authenticated using the OAuth token and secret provided in the Secrets Manager secret, and the user name and password are used to determine which information Amazon Kendra has access to.</p> <p>When you use <code>OAUTH2</code> authentication, you must generate a token and a client secret using the ServiceNow console. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-servicenow.html">Using a ServiceNow data source</a>.</p>'
      description: Provides configuration information required to connect to a ServiceNow data source.
    GoogleDriveConfiguration:
      type: object
      required:
        - SecretArn
      properties:
        SecretArn:
          $ref: '#/components/schemas/SecretArn'
          description: 'The Amazon Resource Name (ARN) of a Secrets Managersecret that contains the credentials required to connect to Google Drive. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-google-drive.html">Using a Google Workspace Drive data source</a>.'
        InclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: 'A list of regular expression patterns that apply to path on Google Drive. Items that match the pattern are included in the index from both shared drives and users'' My Drives. Items that don''t match the pattern are excluded from the index. If an item matches both an inclusion pattern and an exclusion pattern, it is excluded from the index.'
        ExclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: 'A list of regular expression patterns that apply to the path on Google Drive. Items that match the pattern are excluded from the index from both shared drives and users'' My Drives. Items that don''t match the pattern are included in the index. If an item matches both an exclusion pattern and an inclusion pattern, it is excluded from the index.'
        FieldMappings:
          $ref: '#/components/schemas/DataSourceToIndexFieldMappingList'
          description: '<p>Defines mapping between a field in the Google Drive and a Amazon Kendra index field.</p> <p>If you are using the console, you can define index fields when creating the mapping. If you are using the API, you must first create the field using the <code>UpdateIndex</code> operation.</p>'
        ExcludeMimeTypes:
          $ref: '#/components/schemas/ExcludeMimeTypesList'
          description: '<p>A list of MIME types to exclude from the index. All documents matching the specified MIME type are excluded. </p> <p>For a list of MIME types, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-google-drive.html">Using a Google Workspace Drive data source</a>.</p>'
        ExcludeUserAccounts:
          $ref: '#/components/schemas/ExcludeUserAccountsList'
          description: A list of email addresses of the users. Documents owned by these users are excluded from the index. Documents shared with excluded users are indexed unless they are excluded in another way.
        ExcludeSharedDrives:
          $ref: '#/components/schemas/ExcludeSharedDrivesList'
          description: A list of identifiers or shared drives to exclude from the index. All files and folders stored on the shared drive are excluded.
      description: Provides configuration information for data sources that connect to Google Drive.
    WebCrawlerConfiguration:
      type: object
      required:
        - Urls
      properties:
        Urls:
          $ref: '#/components/schemas/Urls'
          description: '<p>Specifies the seed or starting point URLs of the websites or the sitemap URLs of the websites you want to crawl.</p> <p>You can include website subdomains. You can list up to 100 seed URLs and up to three sitemap URLs.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use the Amazon Kendra web crawler to index your own webpages, or webpages that you have authorization to index.</i> </p>'
        CrawlDepth:
          $ref: '#/components/schemas/CrawlDepth'
          description: '<p>Specifies the number of levels in a website that you want to crawl.</p> <p>The first level begins from the website seed or starting point URL. For example, if a website has 3 levels – index level (i.e. seed in this example), sections level, and subsections level – and you are only interested in crawling information up to the sections level (i.e. levels 0-1), you can set your depth to 1.</p> <p>The default crawl depth is set to 2.</p>'
        MaxLinksPerPage:
          $ref: '#/components/schemas/MaxLinksPerPage'
          description: '<p>The maximum number of URLs on a webpage to include when crawling a website. This number is per webpage.</p> <p>As a website’s webpages are crawled, any URLs the webpages link to are also crawled. URLs on a webpage are crawled in order of appearance.</p> <p>The default maximum links per page is 100.</p>'
        MaxContentSizePerPageInMegaBytes:
          $ref: '#/components/schemas/MaxContentSizePerPageInMegaBytes'
          description: <p>The maximum size (in MB) of a webpage or attachment to crawl.</p> <p>Files larger than this size (in MB) are skipped/not crawled.</p> <p>The default maximum size of a webpage or attachment is set to 50 MB.</p>
        MaxUrlsPerMinuteCrawlRate:
          $ref: '#/components/schemas/MaxUrlsPerMinuteCrawlRate'
          description: <p>The maximum number of URLs crawled per website host per minute.</p> <p>A minimum of one URL is required.</p> <p>The default maximum number of URLs crawled per website host per minute is 300.</p>
        UrlInclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: '<p>The regular expression pattern to include certain URLs to crawl.</p> <p>If there is a regular expression pattern to exclude certain URLs that conflicts with the include pattern, the exclude pattern takes precedence.</p>'
        UrlExclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: '<p>The regular expression pattern to exclude certain URLs to crawl.</p> <p>If there is a regular expression pattern to include certain URLs that conflicts with the exclude pattern, the exclude pattern takes precedence.</p>'
        ProxyConfiguration:
          $ref: '#/components/schemas/ProxyConfiguration'
          description: '<p>Provides configuration information required to connect to your internal websites via a web proxy.</p> <p>You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS.</p> <p>Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication. To store web proxy credentials, you use a secret in <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html">AWS Secrets Manager</a>.</p>'
        AuthenticationConfiguration:
          $ref: '#/components/schemas/AuthenticationConfiguration'
          description: '<p>Provides configuration information required to connect to websites using authentication.</p> <p>You can connect to websites using basic authentication of user name and password.</p> <p>You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS. You use a secret in <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html">AWS Secrets Manager</a> to store your authentication credentials.</p>'
      description: Provides the configuration information required for Amazon Kendra web crawler.
    WorkDocsConfiguration:
      type: object
      required:
        - OrganizationId
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: '<p>The identifier of the directory corresponding to your Amazon WorkDocs site repository.</p> <p>You can find the organization ID in the <a href="https://console.aws.amazon.com/directoryservicev2/">AWS Directory Service</a> by going to <b>Active Directory</b>, then <b>Directories</b>. Your Amazon WorkDocs site directory has an ID, which is the organization ID. You can also set up a new Amazon WorkDocs directory in the AWS Directory Service console and enable a Amazon WorkDocs site for the directory in the Amazon WorkDocs console.</p>'
        CrawlComments:
          $ref: '#/components/schemas/Boolean'
          description: <p> <code>TRUE</code> to include comments on documents in your index. Including comments in your index means each comment is a document that can be searched on.</p> <p>The default is set to <code>FALSE</code>.</p>
        UseChangeLog:
          $ref: '#/components/schemas/Boolean'
          description: '<p> <code>TRUE</code> to use the change logs to update documents in your index instead of scanning all documents.</p> <p>If you are syncing your Amazon WorkDocs data source with your index for the first time, all documents are scanned. After your first sync, you can use the change logs to update your documents in your index for future syncs.</p> <p>The default is set to <code>FALSE</code>.</p>'
        InclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: 'A list of regular expression patterns to include certain files in your Amazon WorkDocs site repository. Files that match the patterns are included in the index. Files that don''t match the patterns are excluded from the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence and the file isn’t included in the index.'
        ExclusionPatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: 'A list of regular expression patterns to exclude certain files in your Amazon WorkDocs site repository. Files that match the patterns are excluded from the index. Files that don’t match the patterns are included in the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence and the file isn’t included in the index.'
        FieldMappings:
          $ref: '#/components/schemas/DataSourceToIndexFieldMappingList'
          description: 'A list of <code>DataSourceToIndexFieldMapping</code> objects that map Amazon WorkDocs field names to custom index field names in Amazon Kendra. You must first create the custom index fields using the <code>UpdateIndex</code> operation before you map to Amazon WorkDocs fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping Data Source Fields</a>. The Amazon WorkDocs data source field names need to exist in your Amazon WorkDocs custom metadata.'
      description: '<p>Provides the configuration information to connect to Amazon WorkDocs as your data source.</p> <p>Amazon WorkDocs connector is available in Oregon, North Virginia, Sydney, Singapore and Ireland regions.</p>'
    DataSourceFieldName:
      type: string
      pattern: '^[a-zA-Z][a-zA-Z0-9_.]*$'
      minLength: 1
      maxLength: 100
    PrincipalName:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 200
    DataSourceGroup:
      type: object
      required:
        - GroupId
        - DataSourceId
      properties:
        GroupId:
          $ref: '#/components/schemas/PrincipalName'
          description: The identifier of the group you want to add to your list of groups. This is for filtering search results based on the groups' access to documents.
        DataSourceId:
          $ref: '#/components/schemas/DataSourceId'
          description: The identifier of the data source group you want to add to your list of data source groups. This is for filtering search results based on the groups' access to documents in that data source.
      description: ' Data source information for user context filtering. '
    DataSourceGroups:
      type: array
      items:
        $ref: '#/components/schemas/DataSourceGroup'
      minItems: 1
      maxItems: 2048
    DataSourceInclusionsExclusionsStringsMember:
      type: string
      minLength: 1
      maxLength: 150
    DataSourceStatus:
      type: string
      enum:
        - CREATING
        - DELETING
        - FAILED
        - UPDATING
        - ACTIVE
    DataSourceSummary:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DataSourceName'
          description: The name of the data source.
        Id:
          $ref: '#/components/schemas/DataSourceId'
          description: The unique identifier for the data source.
        Type:
          $ref: '#/components/schemas/DataSourceType'
          description: The type of the data source.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The UNIX datetime that the data source was created.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The UNIX datetime that the data source was lasted updated. '
        Status:
          $ref: '#/components/schemas/DataSourceStatus'
          description: The status of the data source. When the status is <code>ACTIVE</code> the data source is ready to use.
      description: Summary information for a Amazon Kendra data source. Returned in a call to the <code>DescribeDataSource</code> operation.
    DataSourceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DataSourceSummary'
    DataSourceSyncJobStatus:
      type: string
      enum:
        - FAILED
        - SUCCEEDED
        - SYNCING
        - INCOMPLETE
        - STOPPING
        - ABORTED
        - SYNCING_INDEXING
    DataSourceSyncJobMetrics:
      type: object
      properties:
        DocumentsAdded:
          $ref: '#/components/schemas/MetricValue'
          description: The number of documents added from the data source up to now in the data source sync.
        DocumentsModified:
          $ref: '#/components/schemas/MetricValue'
          description: The number of documents modified in the data source up to now in the data source sync run.
        DocumentsDeleted:
          $ref: '#/components/schemas/MetricValue'
          description: The number of documents deleted from the data source up to now in the data source sync run.
        DocumentsFailed:
          $ref: '#/components/schemas/MetricValue'
          description: The number of documents that failed to sync from the data source up to now in the data source sync run.
        DocumentsScanned:
          $ref: '#/components/schemas/MetricValue'
          description: The current number of documents crawled by the current sync job in the data source.
      description: Maps a batch delete document request to a specific data source sync job. This is optional and should only be supplied when documents are deleted by a data source connector.
    DataSourceSyncJob:
      type: object
      properties:
        ExecutionId:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the synchronization job.
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The UNIX datetime that the synchronization job was started.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The UNIX datetime that the synchronization job was completed.
        Status:
          $ref: '#/components/schemas/DataSourceSyncJobStatus'
          description: 'The execution status of the synchronization job. When the <code>Status</code> field is set to <code>SUCCEEDED</code>, the synchronization job is done. If the status code is set to <code>FAILED</code>, the <code>ErrorCode</code> and <code>ErrorMessage</code> fields give you the reason for the failure.'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'If the <code>Status</code> field is set to <code>ERROR</code>, the <code>ErrorMessage</code> field contains a description of the error that caused the synchronization to fail.'
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: 'If the <code>Status</code> field is set to <code>FAILED</code>, the <code>ErrorCode</code> field contains a the reason that the synchronization failed.'
        DataSourceErrorCode:
          $ref: '#/components/schemas/String'
          description: 'If the reason that the synchronization failed is due to an error with the underlying data source, this field contains a code that identifies the error.'
        Metrics:
          $ref: '#/components/schemas/DataSourceSyncJobMetrics'
          description: Maps a batch delete document request to a specific data source sync job. This is optional and should only be supplied when documents are deleted by a data source connector.
      description: Provides information about a synchronization job.
    DataSourceSyncJobHistoryList:
      type: array
      items:
        $ref: '#/components/schemas/DataSourceSyncJob'
    DataSourceSyncJobId:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
      minLength: 1
      maxLength: 100
    MetricValue:
      type: string
      pattern: '(([1-9][0-9]*)|0)'
    DataSourceToIndexFieldMapping:
      type: object
      required:
        - DataSourceFieldName
        - IndexFieldName
      properties:
        DataSourceFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the column or attribute in the data source.
        DateFieldFormat:
          $ref: '#/components/schemas/DataSourceDateFieldFormat'
          description: The type of data stored in the column or attribute.
        IndexFieldName:
          $ref: '#/components/schemas/IndexFieldName'
          description: The name of the field in the index.
      description: Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the <code>UpdateIndex</code> operation.
    SubnetIdList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
      minItems: 1
      maxItems: 6
    SecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/VpcSecurityGroupId'
      minItems: 1
      maxItems: 10
    DatabaseEngineType:
      type: string
      enum:
        - RDS_AURORA_MYSQL
        - RDS_AURORA_POSTGRESQL
        - RDS_MYSQL
        - RDS_POSTGRESQL
    SqlConfiguration:
      type: object
      properties:
        QueryIdentifiersEnclosingOption:
          $ref: '#/components/schemas/QueryIdentifiersEnclosingOption'
          description: '<p>Determines whether Amazon Kendra encloses SQL identifiers for tables and column names in double quotes (") when making a database query.</p> <p>By default, Amazon Kendra passes SQL identifiers the way that they are entered into the data source configuration. It does not change the case of identifiers or enclose them in quotes.</p> <p>PostgreSQL internally converts uppercase characters to lower case characters in identifiers unless they are quoted. Choosing this option encloses identifiers in quotes so that PostgreSQL does not convert the character''s case.</p> <p>For MySQL databases, you must enable the <code>ansi_quotes</code> option when you set this field to <code>DOUBLE_QUOTES</code>.</p>'
      description: Provides information that configures Amazon Kendra to use a SQL database.
    GroupId:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 1024
    PrincipalOrderingId:
      type: integer
      minimum: 0
      maximum: 32535158400000
    FaqStatus:
      type: string
      enum:
        - CREATING
        - UPDATING
        - ACTIVE
        - DELETING
        - FAILED
    IndexStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - FAILED
        - UPDATING
        - SYSTEM_UPDATING
    DocumentMetadataConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentMetadataConfiguration'
      minItems: 0
      maxItems: 500
    IndexStatistics:
      type: object
      required:
        - FaqStatistics
        - TextDocumentStatistics
      properties:
        FaqStatistics:
          $ref: '#/components/schemas/FaqStatistics'
          description: The number of question and answer topics in the index.
        TextDocumentStatistics:
          $ref: '#/components/schemas/TextDocumentStatistics'
          description: The number of text documents indexed.
      description: Provides information about the number of documents and the number of questions and answers in an index.
    GroupOrderingIdSummaries:
      type: array
      items:
        $ref: '#/components/schemas/GroupOrderingIdSummary'
      maxItems: 10
    QuerySuggestionsBlockListStatus:
      type: string
      enum:
        - ACTIVE
        - CREATING
        - DELETING
        - UPDATING
        - ACTIVE_BUT_UPDATE_FAILED
        - FAILED
    Integer:
      type: integer
    Long:
      type: integer
    Mode:
      type: string
      enum:
        - ENABLED
        - LEARN_ONLY
    QuerySuggestionsStatus:
      type: string
      enum:
        - ACTIVE
        - UPDATING
    ObjectBoolean:
      type: boolean
    MinimumNumberOfQueryingUsers:
      type: integer
      minimum: 1
      maximum: 10000
    MinimumQueryCount:
      type: integer
      minimum: 1
      maximum: 10000
    ThesaurusStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - UPDATING
        - ACTIVE_BUT_UPDATE_FAILED
        - FAILED
    Title:
      type: string
    DocumentAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentAttribute'
    PrincipalList:
      type: array
      items:
        $ref: '#/components/schemas/Principal'
    HierarchicalPrincipalList:
      type: array
      description: 'A list of <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html">principal</a> lists that define the hierarchy for which documents users should have access to. Each hierarchical list specifies which user or group has allow or deny access for each document.'
      items:
        $ref: '#/components/schemas/HierarchicalPrincipal'
      minItems: 1
      maxItems: 30
    Document:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: '#/components/schemas/DocumentId'
          description: A unique identifier of the document in the index.
        Title:
          $ref: '#/components/schemas/Title'
          description: The title of the document.
        Blob:
          $ref: '#/components/schemas/Blob'
          description: '<p>The contents of the document. </p> <p>Documents passed to the <code>Blob</code> parameter must be base64 encoded. Your code might not need to encode the document file bytes if you''re using an Amazon Web Services SDK to call Amazon Kendra operations. If you are calling the Amazon Kendra endpoint directly using REST, you must base64 encode the contents before sending.</p>'
        S3Path:
          $ref: '#/components/schemas/S3Path'
        Attributes:
          $ref: '#/components/schemas/DocumentAttributeList'
          description: 'Custom attributes to apply to the document. Use the custom attributes to provide additional information for searching, to provide facets for refining searches, and to provide additional information in the query response.'
        AccessControlList:
          $ref: '#/components/schemas/PrincipalList'
          description: 'Information on user and group access rights, which is used for user context filtering.'
        HierarchicalAccessControlList:
          $ref: '#/components/schemas/HierarchicalPrincipalList'
          description: 'The list of <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html">principal</a> lists that define the hierarchy for which documents users should have access to.'
        ContentType:
          $ref: '#/components/schemas/ContentType'
          description: The file type of the document in the <code>Blob</code> field.
      description: A document in an index.
    DocumentAttributeKey:
      type: string
      pattern: '[a-zA-Z0-9_][a-zA-Z0-9_-]*'
      minLength: 1
      maxLength: 200
    DocumentAttributeValue:
      type: object
      properties:
        StringValue:
          $ref: '#/components/schemas/DocumentAttributeStringValue'
          description: 'A string, such as "department".'
        StringListValue:
          $ref: '#/components/schemas/DocumentAttributeStringListValue'
          description: 'A list of strings. '
        LongValue:
          $ref: '#/components/schemas/Long'
          description: A long integer value.
        DateValue:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>A date expressed as an ISO 8601 string.</p> <p>It is important for the time zone to be included in the ISO 8601 date-time format. For example, 20120325T123010+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.</p>'
      description: The value of a custom document attribute. You can only provide one value for a custom attribute.
    DocumentAttributeKeyList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentAttributeKey'
      minItems: 1
      maxItems: 100
    DocumentAttributeStringListValue:
      type: array
      items:
        $ref: '#/components/schemas/String'
    DocumentAttributeStringValue:
      type: string
      minLength: 1
      maxLength: 2048
    DocumentAttributeValueCountPair:
      type: object
      properties:
        DocumentAttributeValue:
          $ref: '#/components/schemas/DocumentAttributeValue'
          description: 'The value of the attribute. For example, "HR."'
        Count:
          $ref: '#/components/schemas/Integer'
          description: The number of documents in the response that have the attribute value for the key.
      description: Provides the count of documents that match a particular attribute when doing a faceted search.
    DocumentAttributeValueCountPairList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentAttributeValueCountPair'
    DocumentAttributeValueType:
      type: string
      enum:
        - STRING_VALUE
        - STRING_LIST_VALUE
        - LONG_VALUE
        - DATE_VALUE
    DocumentInfo:
      type: object
      required:
        - DocumentId
      properties:
        DocumentId:
          $ref: '#/components/schemas/DocumentId'
          description: The unique identifier of the document.
        Attributes:
          $ref: '#/components/schemas/DocumentAttributeList'
          description: '<p>Attributes that identify a specific version of a document to check.</p> <p>The only valid attributes are:</p> <ul> <li> <p>version</p> </li> <li> <p>datasourceId</p> </li> <li> <p>jobExecutionId</p> </li> </ul> <p>The attributes follow these rules:</p> <ul> <li> <p> <code>dataSourceId</code> and <code>jobExecutionId</code> must be used together.</p> </li> <li> <p> <code>version</code> is ignored if <code>dataSourceId</code> and <code>jobExecutionId</code> are not provided.</p> </li> <li> <p>If <code>dataSourceId</code> and <code>jobExecutionId</code> are provided, but <code>version</code> is not, the version defaults to "0".</p> </li> </ul>'
      description: Identifies a document for which to retrieve status information
    DocumentMetadataBoolean:
      type: boolean
    DocumentMetadataConfigurationName:
      type: string
      minLength: 1
      maxLength: 30
    Relevance:
      type: object
      properties:
        Freshness:
          $ref: '#/components/schemas/DocumentMetadataBoolean'
          description: 'Indicates that this field determines how "fresh" a document is. For example, if document 1 was created on November 5, and document 2 was created on October 31, document 1 is "fresher" than document 2. You can only set the <code>Freshness</code> field on one <code>DATE</code> type field. Only applies to <code>DATE</code> fields.'
        Importance:
          $ref: '#/components/schemas/Importance'
          description: The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers.
        Duration:
          $ref: '#/components/schemas/Duration'
          description: '<p>Specifies the time period that the boost applies to. For example, to make the boost apply to documents with the field value within the last month, you would use "2628000s". Once the field value is beyond the specified range, the effect of the boost drops off. The higher the importance, the faster the effect drops off. If you don''t specify a value, the default is 3 months. The value of the field is a numeric string followed by the character "s", for example "86400s" for one day, or "604800s" for one week. </p> <p>Only applies to <code>DATE</code> fields.</p>'
        RankOrder:
          $ref: '#/components/schemas/Order'
          description: '<p>Determines how values should be interpreted.</p> <p>When the <code>RankOrder</code> field is <code>ASCENDING</code>, higher numbers are better. For example, a document with a rating score of 10 is higher ranking than a document with a rating score of 1.</p> <p>When the <code>RankOrder</code> field is <code>DESCENDING</code>, lower numbers are better. For example, in a task tracking application, a priority 1 task is more important than a priority 5 task.</p> <p>Only applies to <code>LONG</code> and <code>DOUBLE</code> fields.</p>'
        ValueImportanceMap:
          $ref: '#/components/schemas/ValueImportanceMap'
          description: '<p>A list of values that should be given a different boost when they appear in the result list. For example, if you are boosting a field called "department," query terms that match the department field are boosted in the result. However, you can add entries from the department field to boost documents with those values higher. </p> <p>For example, you can add entries to the map with names of departments. If you add "HR",5 and "Legal",3 those departments are given special attention when they appear in the metadata of a document. When those terms appear they are given the specified importance instead of the regular importance for the boost.</p>'
      description: 'Provides information for manually tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.'
    Search:
      type: object
      properties:
        Facetable:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is <code>false</code> .'
        Searchable:
          $ref: '#/components/schemas/Boolean'
          description: 'Determines whether the field is used in the search. If the <code>Searchable</code> field is <code>true</code>, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is <code>true</code> for string fields and <code>false</code> for number and date fields.'
        Displayable:
          $ref: '#/components/schemas/Boolean'
          description: Determines whether the field is returned in the query response. The default is <code>true</code>.
        Sortable:
          $ref: '#/components/schemas/Boolean'
          description: 'Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have <code>Sortable</code> set to <code>true</code>, Amazon Kendra returns an exception. The default is <code>false</code>.'
      description: Provides information about how a custom index field is used during a search.
    DocumentMetadataConfiguration:
      type: object
      required:
        - Name
        - Type
      properties:
        Name:
          $ref: '#/components/schemas/DocumentMetadataConfigurationName'
          description: The name of the index field.
        Type:
          $ref: '#/components/schemas/DocumentAttributeValueType'
          description: 'The data type of the index field. '
        Relevance:
          $ref: '#/components/schemas/Relevance'
          description: Provides manual tuning parameters to determine how the field affects the search results.
        Search:
          $ref: '#/components/schemas/Search'
          description: Provides information about how the field is used during a search.
      description: Specifies the properties of a custom index field.
    DocumentRelevanceConfiguration:
      type: object
      required:
        - Name
        - Relevance
      properties:
        Name:
          $ref: '#/components/schemas/DocumentMetadataConfigurationName'
          description: The name of the tuning configuration to override document relevance at the index level.
        Relevance:
          $ref: '#/components/schemas/Relevance'
      description: Overrides the document relevance properties of a custom index field.
    DocumentRelevanceOverrideConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentRelevanceConfiguration'
      minItems: 0
      maxItems: 500
    DocumentStatus:
      type: string
      enum:
        - NOT_FOUND
        - PROCESSING
        - INDEXED
        - UPDATED
        - FAILED
        - UPDATE_FAILED
    Status:
      type: object
      properties:
        DocumentId:
          $ref: '#/components/schemas/DocumentId'
          description: The unique identifier of the document.
        DocumentStatus:
          $ref: '#/components/schemas/DocumentStatus'
          description: '<p>The current status of a document.</p> <p>If the document was submitted for deletion, the status is <code>NOT_FOUND</code> after the document is deleted.</p>'
        FailureCode:
          $ref: '#/components/schemas/String'
          description: Indicates the source of the error.
        FailureReason:
          $ref: '#/components/schemas/String'
          description: Provides detailed information about why the document couldn't be indexed. Use this information to correct the error before you resubmit the document for indexing.
      description: Provides information about the status of documents submitted for indexing.
    DocumentsMetadataConfiguration:
      type: object
      properties:
        S3Prefix:
          $ref: '#/components/schemas/S3ObjectKey'
          description: A prefix used to filter metadata configuration files in the Amazon Web Services S3 bucket. The S3 bucket might contain multiple metadata files. Use <code>S3Prefix</code> to include only the desired metadata files.
      description: 'Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document.'
    Duration:
      type: string
      pattern: '[0-9]+[s]'
      minLength: 1
      maxLength: 10
    MimeType:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 256
    ExcludeMimeTypesList:
      type: array
      items:
        $ref: '#/components/schemas/MimeType'
      minItems: 0
      maxItems: 30
    SharedDriveId:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 256
    ExcludeSharedDrivesList:
      type: array
      items:
        $ref: '#/components/schemas/SharedDriveId'
      minItems: 0
      maxItems: 100
    UserAccount:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 256
    ExcludeUserAccountsList:
      type: array
      items:
        $ref: '#/components/schemas/UserAccount'
      minItems: 0
      maxItems: 100
    Facet:
      type: object
      properties:
        DocumentAttributeKey:
          $ref: '#/components/schemas/DocumentAttributeKey'
          description: The unique key for the document attribute.
      description: Information about a document attribute
    FacetList:
      type: array
      items:
        $ref: '#/components/schemas/Facet'
    FacetResult:
      type: object
      properties:
        DocumentAttributeKey:
          $ref: '#/components/schemas/DocumentAttributeKey'
          description: The key for the facet values. This is the same as the <code>DocumentAttributeKey</code> provided in the query.
        DocumentAttributeValueType:
          $ref: '#/components/schemas/DocumentAttributeValueType'
          description: The data type of the facet value. This is the same as the type defined for the index field when it was created.
        DocumentAttributeValueCountPairs:
          $ref: '#/components/schemas/DocumentAttributeValueCountPairList'
          description: 'An array of key/value pairs, where the key is the value of the attribute and the count is the number of documents that share the key value.'
      description: The facet values for the documents in the response.
    FacetResultList:
      type: array
      items:
        $ref: '#/components/schemas/FacetResult'
    FailureReason:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 2048
    IndexedQuestionAnswersCount:
      type: integer
      minimum: 0
    FaqStatistics:
      type: object
      required:
        - IndexedQuestionAnswersCount
      properties:
        IndexedQuestionAnswersCount:
          $ref: '#/components/schemas/IndexedQuestionAnswersCount'
          description: The total number of FAQ questions and answers contained in the index.
      description: Provides statistical information about the FAQ questions and answers contained in an index.
    FaqSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FaqId'
          description: The unique identifier of the FAQ.
        Name:
          $ref: '#/components/schemas/FaqName'
          description: The name that you assigned the FAQ when you created or updated the FAQ.
        Status:
          $ref: '#/components/schemas/FaqStatus'
          description: The current status of the FAQ. When the status is <code>ACTIVE</code> the FAQ is ready for use.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The UNIX datetime that the FAQ was added to the index.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The UNIX datetime that the FAQ was last updated.
        FileFormat:
          $ref: '#/components/schemas/FaqFileFormat'
          description: 'The file type used to create the FAQ. '
      description: Provides information about a frequently asked questions and answer contained in an index.
    FaqSummaryItems:
      type: array
      items:
        $ref: '#/components/schemas/FaqSummary'
    FeedbackToken:
      type: string
      pattern: '^\P{C}*.\P{C}*$'
      minLength: 1
      maxLength: 2048
    SuggestionQueryText:
      type: string
      pattern: '^\P{C}*$'
    QuerySuggestionsId:
      type: string
      minLength: 1
      maxLength: 36
    SuggestionList:
      type: array
      items:
        $ref: '#/components/schemas/Suggestion'
    GroupAttributeField:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 100
    MemberGroups:
      type: array
      items:
        $ref: '#/components/schemas/MemberGroup'
      minItems: 1
      maxItems: 1000
    MemberUsers:
      type: array
      items:
        $ref: '#/components/schemas/MemberUser'
      minItems: 1
      maxItems: 1000
    GroupMembers:
      type: object
      properties:
        MemberGroups:
          $ref: '#/components/schemas/MemberGroups'
          description: 'A list of sub groups that belong to a group. For example, the sub groups "Research", "Engineering", and "Sales and Marketing" all belong to the group "Company".'
        MemberUsers:
          $ref: '#/components/schemas/MemberUsers'
          description: 'A list of users that belong to a group. For example, a list of interns all belong to the "Interns" group.'
        S3PathforGroupMembers:
          $ref: '#/components/schemas/S3Path'
          description: 'If you have more than 1000 users and/or sub groups for a single group, you need to provide the path to the S3 file that lists your users and sub groups for a group. Your sub groups can contain more than 1000 users, but the list of sub groups that belong to a group (and/or users) must be no more than 1000.'
      description: A list of users or sub groups that belong to a group. Users and groups are useful for filtering search results to different users based on their group's access to documents.
    GroupOrderingIdSummary:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/PrincipalMappingStatus'
          description: 'The current processing status of actions for mapping users to their groups. The status can be either <code>PROCESSING</code>, <code>SUCCEEDED</code>, <code>DELETING</code>, <code>DELETED</code>, or <code>FAILED</code>.'
        LastUpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The last date-time an action was updated. An action can be a <code>PUT</code> or <code>DELETE</code> action for mapping users to their groups.
        ReceivedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The date-time an action was received by Amazon Kendra. An action can be a <code>PUT</code> or <code>DELETE</code> action for mapping users to their groups.
        OrderingId:
          $ref: '#/components/schemas/PrincipalOrderingId'
          description: The order in which actions should complete processing. An action can be a <code>PUT</code> or <code>DELETE</code> action for mapping users to their groups.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: The reason an action could not be processed. An action can be a <code>PUT</code> or <code>DELETE</code> action for mapping users to their groups.
      description: Information on the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
    PrincipalMappingStatus:
      type: string
      enum:
        - FAILED
        - SUCCEEDED
        - PROCESSING
        - DELETING
        - DELETED
    GroupSummary:
      type: object
      properties:
        GroupId:
          $ref: '#/components/schemas/GroupId'
          description: ' The identifier of the group you want group summary information on. '
        OrderingId:
          $ref: '#/components/schemas/PrincipalOrderingId'
          description: ' The timestamp identifier used for the latest <code>PUT</code> or <code>DELETE</code> action. '
      description: ' Group summary information. '
    Groups:
      type: array
      items:
        $ref: '#/components/schemas/PrincipalName'
      minItems: 1
      maxItems: 2048
    HierarchicalPrincipal:
      type: object
      required:
        - PrincipalList
      properties:
        PrincipalList:
          $ref: '#/components/schemas/PrincipalList'
          description: 'A list of <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html">principal</a> lists that define the hierarchy for which documents users should have access to. Each hierarchical list specifies which user or group has allow or deny access for each document.'
      description: ' Information to define the hierarchy for which documents users should have access to. '
    HighlightType:
      type: string
      enum:
        - STANDARD
        - THESAURUS_SYNONYM
    Highlight:
      type: object
      required:
        - BeginOffset
        - EndOffset
      properties:
        BeginOffset:
          $ref: '#/components/schemas/Integer'
          description: The zero-based location in the response string where the highlight starts.
        EndOffset:
          $ref: '#/components/schemas/Integer'
          description: The zero-based location in the response string where the highlight ends.
        TopAnswer:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether the response is the best response. True if this is the best response; otherwise, false.'
        Type:
          $ref: '#/components/schemas/HighlightType'
          description: 'The highlight type. '
      description: Provides information that you can use to highlight a search result so that your users can quickly identify terms in the response.
    HighlightList:
      type: array
      items:
        $ref: '#/components/schemas/Highlight'
    Importance:
      type: integer
      minimum: 1
      maximum: 10
    IndexConfigurationSummary:
      type: object
      required:
        - CreatedAt
        - UpdatedAt
        - Status
      properties:
        Name:
          $ref: '#/components/schemas/IndexName'
          description: The name of the index.
        Id:
          $ref: '#/components/schemas/IndexId'
          description: 'A unique identifier for the index. Use this to identify the index when you are using operations such as <code>Query</code>, <code>DescribeIndex</code>, <code>UpdateIndex</code>, and <code>DeleteIndex</code>.'
        Edition:
          $ref: '#/components/schemas/IndexEdition'
          description: 'Indicates whether the index is a enterprise edition index or a developer edition index. '
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix timestamp when the index was created.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix timestamp when the index was last updated by the <code>UpdateIndex</code> operation.
        Status:
          $ref: '#/components/schemas/IndexStatus'
          description: 'The current status of the index. When the status is <code>ACTIVE</code>, the index is ready to search.'
      description: A summary of information about an index.
    IndexConfigurationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/IndexConfigurationSummary'
    TextDocumentStatistics:
      type: object
      required:
        - IndexedTextDocumentsCount
        - IndexedTextBytes
      properties:
        IndexedTextDocumentsCount:
          $ref: '#/components/schemas/IndexedTextDocumentsCount'
          description: The number of text documents indexed.
        IndexedTextBytes:
          $ref: '#/components/schemas/IndexedTextBytes'
          description: 'The total size, in bytes, of the indexed documents.'
      description: Provides information about text documents indexed in an index.
    IndexedTextBytes:
      type: integer
      minimum: 0
    IndexedTextDocumentsCount:
      type: integer
      minimum: 0
    Issuer:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 65
    JsonTokenTypeConfiguration:
      type: object
      required:
        - UserNameAttributeField
        - GroupAttributeField
      properties:
        UserNameAttributeField:
          $ref: '#/components/schemas/String'
          description: The user name attribute field.
        GroupAttributeField:
          $ref: '#/components/schemas/String'
          description: The group attribute field.
      description: Configuration information for the JSON token type.
    KeyLocation:
      type: string
      enum:
        - URL
        - SECRET_MANAGER
    UserNameAttributeField:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 100
    JwtTokenTypeConfiguration:
      type: object
      required:
        - KeyLocation
      properties:
        KeyLocation:
          $ref: '#/components/schemas/KeyLocation'
          description: The location of the key.
        URL:
          $ref: '#/components/schemas/Url'
          description: The signing key URL.
        SecretManagerArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (arn) of the secret.
        UserNameAttributeField:
          $ref: '#/components/schemas/UserNameAttributeField'
          description: The user name attribute field.
        GroupAttributeField:
          $ref: '#/components/schemas/GroupAttributeField'
          description: The group attribute field.
        Issuer:
          $ref: '#/components/schemas/Issuer'
          description: The issuer of the token.
        ClaimRegex:
          $ref: '#/components/schemas/ClaimRegex'
          description: The regular expression that identifies the claim.
      description: Configuration information for the JWT token type.
    KmsKeyId:
      type: string
      minLength: 1
      maxLength: 2048
      format: password
    NextToken:
      type: string
      minLength: 1
      maxLength: 800
    MaxResultsIntegerForListDataSourceSyncJobsRequest:
      type: integer
      minimum: 1
      maximum: 10
    TimeRange:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The UNIX datetime of the beginning of the time range.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The UNIX datetime of the end of the time range.
      description: Provides a range of time.
    MaxResultsIntegerForListDataSourcesRequest:
      type: integer
      minimum: 1
      maximum: 100
    MaxResultsIntegerForListFaqsRequest:
      type: integer
      minimum: 1
      maximum: 100
    MaxResultsIntegerForListPrincipalsRequest:
      type: integer
      minimum: 1
      maximum: 10
    ListOfGroupSummaries:
      type: array
      items:
        $ref: '#/components/schemas/GroupSummary'
    MaxResultsIntegerForListIndicesRequest:
      type: integer
      minimum: 1
      maximum: 100
    MaxResultsIntegerForListQuerySuggestionsBlockLists:
      type: integer
      minimum: 1
      maximum: 100
    QuerySuggestionsBlockListSummaryItems:
      type: array
      items:
        $ref: '#/components/schemas/QuerySuggestionsBlockListSummary'
    MaxResultsIntegerForListThesauriRequest:
      type: integer
      minimum: 1
      maximum: 100
    ThesaurusSummaryItems:
      type: array
      items:
        $ref: '#/components/schemas/ThesaurusSummary'
    MaxContentSizePerPageInMegaBytes:
      type: number
      format: float
      minimum: 0.000001
      maximum: 50
    MaxLinksPerPage:
      type: integer
      minimum: 1
      maximum: 1000
    MaxUrlsPerMinuteCrawlRate:
      type: integer
      minimum: 1
      maximum: 300
    MemberGroup:
      type: object
      required:
        - GroupId
      properties:
        GroupId:
          $ref: '#/components/schemas/GroupId'
          description: The identifier of the sub group you want to map to a group.
        DataSourceId:
          $ref: '#/components/schemas/DataSourceId'
          description: The identifier of the data source for the sub group you want to map to a group.
      description: The sub groups that belong to a group.
    UserId:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 1024
    MemberUser:
      type: object
      required:
        - UserId
      properties:
        UserId:
          $ref: '#/components/schemas/UserId'
          description: The identifier of the user you want to map to a group.
      description: The users that belong to a group.
    TenantDomain:
      type: string
      pattern: '^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-z]{2,}$'
      minLength: 1
      maxLength: 256
    OneDriveUsers:
      type: object
      properties:
        OneDriveUserList:
          $ref: '#/components/schemas/OneDriveUserList'
          description: 'A list of users whose documents should be indexed. Specify the user names in email format, for example, <code>username@tenantdomain</code>. If you need to index the documents of more than 100 users, use the <code>OneDriveUserS3Path</code> field to specify the location of a file containing a list of users.'
        OneDriveUserS3Path:
          $ref: '#/components/schemas/S3Path'
          description: The S3 bucket location of a file containing a list of users whose documents should be indexed.
      description: User accounts whose documents should be indexed.
    OneDriveUser:
      type: string
      pattern: '^(?!\s).+@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$'
      minLength: 1
      maxLength: 256
    OneDriveUserList:
      type: array
      items:
        $ref: '#/components/schemas/OneDriveUser'
      minItems: 1
      maxItems: 100
    Order:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    OrganizationId:
      type: string
      pattern: 'd-[0-9a-fA-F]{10}'
      minLength: 12
      maxLength: 12
    PrincipalType:
      type: string
      enum:
        - USER
        - GROUP
    ReadAccessType:
      type: string
      enum:
        - ALLOW
        - DENY
    Principal:
      type: object
      required:
        - Name
        - Type
        - Access
      properties:
        Name:
          $ref: '#/components/schemas/PrincipalName'
          description: The name of the user or group.
        Type:
          $ref: '#/components/schemas/PrincipalType'
          description: The type of principal.
        Access:
          $ref: '#/components/schemas/ReadAccessType'
          description: Whether to allow or deny access to the principal.
        DataSourceId:
          $ref: '#/components/schemas/DataSourceId'
          description: The identifier of the data source the principal should access documents from.
      description: Provides user and group information for document access filtering.
    ProxyConfiguration:
      type: object
      required:
        - Host
        - Port
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: '<p>The name of the website host you want to connect to via a web proxy server.</p> <p>For example, the host name of https://a.example.com/page1.html is "a.example.com".</p>'
        Port:
          $ref: '#/components/schemas/Port'
          description: '<p>The port number of the website host you want to connect to via a web proxy server. </p> <p>For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.</p>'
        Credentials:
          $ref: '#/components/schemas/SecretArn'
          description: '<p>Your secret ARN, which you can create in <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html">AWS Secrets Manager</a> </p> <p>The credentials are optional. You use a secret if web proxy credentials are required to connect to a website host. Amazon Kendra currently support basic authentication to connect to a web proxy server. The secret stores your credentials.</p>'
      description: Provides the configuration information for a web proxy to connect to website hosts.
    QueryId:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9-]*'
      minLength: 1
      maxLength: 36
    QueryIdentifiersEnclosingOption:
      type: string
      enum:
        - DOUBLE_QUOTES
        - NONE
    QueryText:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 1000
    QueryResultType:
      type: string
      enum:
        - DOCUMENT
        - QUESTION_ANSWER
        - ANSWER
    SortingConfiguration:
      type: object
      required:
        - DocumentAttributeKey
        - SortOrder
      properties:
        DocumentAttributeKey:
          $ref: '#/components/schemas/DocumentAttributeKey'
          description: '<p>The name of the document attribute used to sort the response. You can use any field that has the <code>Sortable</code> flag set to true.</p> <p>You can also sort by any of the following built-in attributes:</p> <ul> <li> <p>_category</p> </li> <li> <p>_created_at</p> </li> <li> <p>_last_updated_at</p> </li> <li> <p>_version</p> </li> <li> <p>_view_count</p> </li> </ul>'
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: 'The order that the results should be returned in. In case of ties, the relevance assigned to the result by Amazon Kendra is used as the tie-breaker.'
      description: '<p>Specifies the document attribute to use to sort the response to a Amazon Kendra query. You can specify a single attribute for sorting. The attribute must have the <code>Sortable</code> flag set to <code>true</code>, otherwise Amazon Kendra returns an exception.</p> <p>You can sort attributes of the following types.</p> <ul> <li> <p>Date value</p> </li> <li> <p>Long value</p> </li> <li> <p>String value</p> </li> </ul> <p>You can''t sort attributes of the following type.</p> <ul> <li> <p>String list value</p> </li> </ul>'
    UserContext:
      type: object
      properties:
        Token:
          $ref: '#/components/schemas/Token'
          description: The user context token for filtering search results for a user. It must be a JWT or a JSON token.
        UserId:
          $ref: '#/components/schemas/PrincipalName'
          description: The identifier of the user you want to filter search results based on their access to documents.
        Groups:
          $ref: '#/components/schemas/Groups'
          description: The list of groups you want to filter search results based on the groups' access to documents.
        DataSourceGroups:
          $ref: '#/components/schemas/DataSourceGroups'
          description: The list of data source groups you want to filter search results based on groups' access to documents in that data source.
      description: '<p>Provides information about the user context for a Amazon Kendra index.</p> <p>This is used for filtering search results for different users based on their access to documents.</p> <p>You provide one of the following:</p> <ul> <li> <p>User token</p> </li> <li> <p>User ID, the groups the user belongs to, and the data sources the groups can access</p> </li> </ul> <p>If you provide both, an exception is thrown.</p>'
    VisitorId:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
      minLength: 1
      maxLength: 256
    QueryResultItemList:
      type: array
      items:
        $ref: '#/components/schemas/QueryResultItem'
    ScoreAttributes:
      type: object
      properties:
        ScoreConfidence:
          $ref: '#/components/schemas/ScoreConfidence'
          description: A relative ranking for how well the response matches the query.
      description: Provides a relative ranking that indicates how confident Amazon Kendra is that the response matches the query.
    QueryResultItem:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ResultId'
          description: The unique identifier for the query result.
        Type:
          $ref: '#/components/schemas/QueryResultType'
          description: 'The type of document. '
        AdditionalAttributes:
          $ref: '#/components/schemas/AdditionalResultAttributeList'
          description: One or more additional attributes associated with the query result.
        DocumentId:
          $ref: '#/components/schemas/DocumentId'
          description: The unique identifier for the document.
        DocumentTitle:
          $ref: '#/components/schemas/TextWithHighlights'
          description: The title of the document. Contains the text of the title and information for highlighting the relevant terms in the title.
        DocumentExcerpt:
          $ref: '#/components/schemas/TextWithHighlights'
          description: An extract of the text in the document. Contains information about highlighting the relevant terms in the excerpt.
        DocumentURI:
          $ref: '#/components/schemas/Url'
          description: The URI of the original location of the document.
        DocumentAttributes:
          $ref: '#/components/schemas/DocumentAttributeList'
          description: 'An array of document attributes for the document that the query result maps to. For example, the document author (Author) or the source URI (SourceUri) of the document.'
        ScoreAttributes:
          $ref: '#/components/schemas/ScoreAttributes'
          description: '<p>Indicates the confidence that Amazon Kendra has that a result matches the query that you provided. Each result is placed into a bin that indicates the confidence, <code>VERY_HIGH</code>, <code>HIGH</code>, <code>MEDIUM</code> and <code>LOW</code>. You can use the score to determine if a response meets the confidence needed for your application.</p> <p>The field is only set to <code>LOW</code> when the <code>Type</code> field is set to <code>DOCUMENT</code> and Amazon Kendra is not confident that the result matches the query.</p>'
        FeedbackToken:
          $ref: '#/components/schemas/FeedbackToken'
          description: 'A token that identifies a particular result from a particular query. Use this token to provide click-through feedback for the result. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/submitting-feedback.html"> Submitting feedback </a>.'
      description: '<p>A single query result.</p> <p>A query result contains information about a document returned by the query. This includes the original location of the document, a list of attributes assigned to the document, and relevant text from the document that satisfies the query.</p>'
    QuerySuggestionsBlockListSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/QuerySuggestionsBlockListId'
          description: The identifier of a block list.
        Name:
          $ref: '#/components/schemas/QuerySuggestionsBlockListName'
          description: The name of the block list.
        Status:
          $ref: '#/components/schemas/QuerySuggestionsBlockListStatus'
          description: The status of the block list.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The date-time summary information for a query suggestions block list was last created.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The date-time the block list was last updated.
        ItemCount:
          $ref: '#/components/schemas/Integer'
          description: The number of items in the block list file.
      description: '<p>Summary information on a query suggestions block list.</p> <p>This includes information on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>'
    ValueImportanceMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Importance'
    RelevanceType:
      type: string
      enum:
        - RELEVANT
        - NOT_RELEVANT
    RelevanceFeedback:
      type: object
      required:
        - ResultId
        - RelevanceValue
      properties:
        ResultId:
          $ref: '#/components/schemas/ResultId'
          description: The unique identifier of the search result that the user provided relevance feedback for.
        RelevanceValue:
          $ref: '#/components/schemas/RelevanceType'
          description: Whether to document was relevant or not relevant to the search.
      description: Provides feedback on how relevant a document is to a search. Your application uses the <code>SubmitFeedback</code> operation to provide relevance information.
    RelevanceFeedbackList:
      type: array
      items:
        $ref: '#/components/schemas/RelevanceFeedback'
    S3BucketName:
      type: string
      pattern: '[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]'
      minLength: 3
      maxLength: 63
    SalesforceChatterFeedIncludeFilterTypes:
      type: array
      items:
        $ref: '#/components/schemas/SalesforceChatterFeedIncludeFilterType'
      minItems: 1
      maxItems: 2
    SalesforceChatterFeedConfiguration:
      type: object
      required:
        - DocumentDataFieldName
      properties:
        DocumentDataFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the column in the Salesforce FeedItem table that contains the content to index. Typically this is the <code>Body</code> column.
        DocumentTitleFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the column in the Salesforce FeedItem table that contains the title of the document. This is typically the <code>Title</code> column.
        FieldMappings:
          $ref: '#/components/schemas/DataSourceToIndexFieldMappingList'
          description: Maps fields from a Salesforce chatter feed into Amazon Kendra index fields.
        IncludeFilterTypes:
          $ref: '#/components/schemas/SalesforceChatterFeedIncludeFilterTypes'
          description: Filters the documents in the feed based on status of the user. When you specify <code>ACTIVE_USERS</code> only documents from users who have an active account are indexed. When you specify <code>STANDARD_USER</code> only documents for Salesforce standard users are documented. You can specify both.
      description: Defines configuration for syncing a Salesforce chatter feed. The contents of the object comes from the Salesforce FeedItem table.
    SalesforceChatterFeedIncludeFilterType:
      type: string
      enum:
        - ACTIVE_USER
        - STANDARD_USER
    SalesforceStandardObjectConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/SalesforceStandardObjectConfiguration'
      minItems: 1
      maxItems: 17
    SalesforceKnowledgeArticleConfiguration:
      type: object
      required:
        - IncludedStates
      properties:
        IncludedStates:
          $ref: '#/components/schemas/SalesforceKnowledgeArticleStateList'
          description: Specifies the document states that should be included when Amazon Kendra indexes knowledge articles. You must specify at least one state.
        StandardKnowledgeArticleTypeConfiguration:
          $ref: '#/components/schemas/SalesforceStandardKnowledgeArticleTypeConfiguration'
          description: Provides configuration information for standard Salesforce knowledge articles.
        CustomKnowledgeArticleTypeConfigurations:
          $ref: '#/components/schemas/SalesforceCustomKnowledgeArticleTypeConfigurationList'
          description: Provides configuration information for custom Salesforce knowledge articles.
      description: 'Specifies configuration information for the knowledge article types that Amazon Kendra indexes. Amazon Kendra indexes standard knowledge articles and the standard fields of knowledge articles, or the custom fields of custom knowledge articles, but not both '
    SalesforceStandardObjectAttachmentConfiguration:
      type: object
      properties:
        DocumentTitleFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the field used for the document title.
        FieldMappings:
          $ref: '#/components/schemas/DataSourceToIndexFieldMappingList'
          description: One or more objects that map fields in attachments to Amazon Kendra index fields.
      description: 'Provides configuration information for processing attachments to Salesforce standard objects. '
    SalesforceCustomKnowledgeArticleTypeName:
      type: string
      pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
      minLength: 1
      maxLength: 100
    SalesforceCustomKnowledgeArticleTypeConfiguration:
      type: object
      required:
        - Name
        - DocumentDataFieldName
      properties:
        Name:
          $ref: '#/components/schemas/SalesforceCustomKnowledgeArticleTypeName'
          description: The name of the configuration.
        DocumentDataFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the field in the custom knowledge article that contains the document data to index.
        DocumentTitleFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the field in the custom knowledge article that contains the document title.
        FieldMappings:
          $ref: '#/components/schemas/DataSourceToIndexFieldMappingList'
          description: One or more objects that map fields in the custom knowledge article to fields in the Amazon Kendra index.
      description: Provides configuration information for indexing Salesforce custom articles.
    SalesforceCustomKnowledgeArticleTypeConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/SalesforceCustomKnowledgeArticleTypeConfiguration'
      minItems: 1
      maxItems: 10
    SalesforceKnowledgeArticleStateList:
      type: array
      items:
        $ref: '#/components/schemas/SalesforceKnowledgeArticleState'
      minItems: 1
      maxItems: 3
    SalesforceStandardKnowledgeArticleTypeConfiguration:
      type: object
      required:
        - DocumentDataFieldName
      properties:
        DocumentDataFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the field that contains the document data to index.
        DocumentTitleFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the field that contains the document title.
        FieldMappings:
          $ref: '#/components/schemas/DataSourceToIndexFieldMappingList'
          description: One or more objects that map fields in the knowledge article to Amazon Kendra index fields. The index field must exist before you can map a Salesforce field to it.
      description: Provides configuration information for standard Salesforce knowledge articles.
    SalesforceKnowledgeArticleState:
      type: string
      enum:
        - DRAFT
        - PUBLISHED
        - ARCHIVED
    SalesforceStandardObjectName:
      type: string
      enum:
        - ACCOUNT
        - CAMPAIGN
        - CASE
        - CONTACT
        - CONTRACT
        - DOCUMENT
        - GROUP
        - IDEA
        - LEAD
        - OPPORTUNITY
        - PARTNER
        - PRICEBOOK
        - PRODUCT
        - PROFILE
        - SOLUTION
        - TASK
        - USER
    SalesforceStandardObjectConfiguration:
      type: object
      required:
        - Name
        - DocumentDataFieldName
      properties:
        Name:
          $ref: '#/components/schemas/SalesforceStandardObjectName'
          description: The name of the standard object.
        DocumentDataFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the field in the standard object table that contains the document contents.
        DocumentTitleFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the field in the standard object table that contains the document title.
        FieldMappings:
          $ref: '#/components/schemas/DataSourceToIndexFieldMappingList'
          description: One or more objects that map fields in the standard object to Amazon Kendra index fields. The index field must exist before you can map a Salesforce field to it.
      description: Specifies configuration information for indexing a single standard object.
    ScoreConfidence:
      type: string
      enum:
        - VERY_HIGH
        - HIGH
        - MEDIUM
        - LOW
      description: Enumeration for query score confidence.
    VpcSecurityGroupId:
      type: string
      pattern: '[-0-9a-zA-Z]+'
      minLength: 1
      maxLength: 200
    SeedUrl:
      type: string
      pattern: '^(https?):\/\/([^\s]*)'
      minLength: 1
      maxLength: 2048
    SeedUrlList:
      type: array
      items:
        $ref: '#/components/schemas/SeedUrl'
      minItems: 0
      maxItems: 100
    WebCrawlerMode:
      type: string
      enum:
        - HOST_ONLY
        - SUBDOMAINS
        - EVERYTHING
    SeedUrlConfiguration:
      type: object
      required:
        - SeedUrls
      properties:
        SeedUrls:
          $ref: '#/components/schemas/SeedUrlList'
          description: <p>The list of seed or starting point URLs of the websites you want to crawl.</p> <p>The list can include a maximum of 100 seed URLs.</p>
        WebCrawlerMode:
          $ref: '#/components/schemas/WebCrawlerMode'
          description: '<p>You can choose one of the following modes:</p> <ul> <li> <p> <code>HOST_ONLY</code> – crawl only the website host names. For example, if the seed URL is "abc.example.com", then only URLs with host name "abc.example.com" are crawled.</p> </li> <li> <p> <code>SUBDOMAINS</code> – crawl the website host names with subdomains. For example, if the seed URL is "abc.example.com", then "a.abc.example.com" and "b.abc.example.com" are also crawled.</p> </li> <li> <p> <code>EVERYTHING</code> – crawl the website host names with subdomains and other domains that the webpages link to.</p> </li> </ul> <p>The default mode is set to <code>HOST_ONLY</code>.</p>'
      description: '<p>Provides the configuration information of the seed or starting point URLs to crawl.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use the Amazon Kendra web crawler to index your own webpages, or webpages that you have authorization to index.</i> </p>'
    ServiceNowAuthenticationType:
      type: string
      enum:
        - HTTP_BASIC
        - OAUTH2
    ServiceNowBuildVersionType:
      type: string
      enum:
        - LONDON
        - OTHERS
    ServiceNowHostUrl:
      type: string
      pattern: '^(?!(^(https?|ftp|file):\/\/))[a-z0-9-]+(\.service-now\.com)$'
      minLength: 1
      maxLength: 2048
    ServiceNowKnowledgeArticleConfiguration:
      type: object
      required:
        - DocumentDataFieldName
      properties:
        CrawlAttachments:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether Amazon Kendra should index attachments to knowledge articles.
        IncludeAttachmentFilePatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: List of regular expressions applied to knowledge articles. Items that don't match the inclusion pattern are not indexed. The regex is applied to the field specified in the <code>PatternTargetField</code>.
        ExcludeAttachmentFilePatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: 'List of regular expressions applied to knowledge articles. Items that don''t match the inclusion pattern are not indexed. The regex is applied to the field specified in the <code>PatternTargetField</code> '
        DocumentDataFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the ServiceNow field that is mapped to the index document contents field in the Amazon Kendra index.
        DocumentTitleFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the ServiceNow field that is mapped to the index document title field.
        FieldMappings:
          $ref: '#/components/schemas/DataSourceToIndexFieldMappingList'
          description: Mapping between ServiceNow fields and Amazon Kendra index fields. You must create the index field before you map the field.
        FilterQuery:
          $ref: '#/components/schemas/ServiceNowKnowledgeArticleFilterQuery'
          description: '<p>A query that selects the knowledge articles to index. The query can return articles from multiple knowledge bases, and the knowledge bases can be public or private.</p> <p>The query string must be one generated by the ServiceNow console. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/servicenow-query.html">Specifying documents to index with a query</a>. </p>'
      description: Provides configuration information for crawling knowledge articles in the ServiceNow site.
    ServiceNowServiceCatalogConfiguration:
      type: object
      required:
        - DocumentDataFieldName
      properties:
        CrawlAttachments:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether Amazon Kendra should crawl attachments to the service catalog items. '
        IncludeAttachmentFilePatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: '<p>A list of regular expression patterns. Documents that match the patterns are included in the index. Documents that don''t match the patterns are excluded from the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.</p> <p>The regex is applied to the file name of the attachment.</p>'
        ExcludeAttachmentFilePatterns:
          $ref: '#/components/schemas/DataSourceInclusionsExclusionsStrings'
          description: '<p>A list of regular expression patterns. Documents that match the patterns are excluded from the index. Documents that don''t match the patterns are included in the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.</p> <p>The regex is applied to the file name of the attachment.</p>'
        DocumentDataFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the ServiceNow field that is mapped to the index document contents field in the Amazon Kendra index.
        DocumentTitleFieldName:
          $ref: '#/components/schemas/DataSourceFieldName'
          description: The name of the ServiceNow field that is mapped to the index document title field.
        FieldMappings:
          $ref: '#/components/schemas/DataSourceToIndexFieldMappingList'
          description: Mapping between ServiceNow fields and Amazon Kendra index fields. You must create the index field before you map the field.
      description: Provides configuration information for crawling service catalog items in the ServiceNow site
    ServiceNowKnowledgeArticleFilterQuery:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 2048
    SharePointVersion:
      type: string
      enum:
        - SHAREPOINT_2013
        - SHAREPOINT_2016
        - SHAREPOINT_ONLINE
    SharePointUrlList:
      type: array
      items:
        $ref: '#/components/schemas/Url'
      minItems: 1
      maxItems: 100
    SiteMap:
      type: string
      pattern: '^(https?):\/\/([^\s]*)'
      minLength: 1
      maxLength: 2048
    SiteMapsList:
      type: array
      items:
        $ref: '#/components/schemas/SiteMap'
      minItems: 0
      maxItems: 3
    SiteMapsConfiguration:
      type: object
      required:
        - SiteMaps
      properties:
        SiteMaps:
          $ref: '#/components/schemas/SiteMapsList'
          description: <p>The list of sitemap URLs of the websites you want to crawl.</p> <p>The list can include a maximum of three sitemap URLs.</p>
      description: '<p>Provides the configuration information of the sitemap URLs to crawl.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use the Amazon Kendra web crawler to index your own webpages, or webpages that you have authorization to index.</i> </p>'
    SortOrder:
      type: string
      enum:
        - DESC
        - ASC
    SubnetId:
      type: string
      pattern: '[\-0-9a-zA-Z]+'
      minLength: 1
      maxLength: 200
    SuggestionValue:
      type: object
      properties:
        Text:
          $ref: '#/components/schemas/SuggestionTextWithHighlights'
          description: The <code>SuggestionTextWithHighlights</code> structure that contains the query suggestion text and highlights.
      description: The <code>SuggestionTextWithHighlights</code> structure information.
    Suggestion:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ResultId'
          description: The unique UUID (universally unique identifier) of a single query suggestion.
        Value:
          $ref: '#/components/schemas/SuggestionValue'
          description: <p>The value for the unique UUID (universally unique identifier) of a single query suggestion.</p> <p>The value is the text string of a suggestion.</p>
      description: A single query suggestion.
    SuggestionHighlight:
      type: object
      properties:
        BeginOffset:
          $ref: '#/components/schemas/Integer'
          description: The zero-based location in the response string where the highlight starts.
        EndOffset:
          $ref: '#/components/schemas/Integer'
          description: The zero-based location in the response string where the highlight ends.
      description: The text highlights for a single query suggestion.
    SuggestionHighlightList:
      type: array
      items:
        $ref: '#/components/schemas/SuggestionHighlight'
    SuggestionTextWithHighlights:
      type: object
      properties:
        Text:
          $ref: '#/components/schemas/String'
          description: The query suggestion text to display to the user.
        Highlights:
          $ref: '#/components/schemas/SuggestionHighlightList'
          description: The beginning and end of the query suggestion text that should be highlighted.
      description: Provides text and information about where to highlight the query suggestion text.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: 'The key for the tag. Keys are not case sensitive and must be unique for the index, FAQ, or data source.'
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The value associated with the tag. The value may be an empty string but it can't be null.
      description: 'A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.'
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 200
    ThesaurusSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ThesaurusId'
          description: The identifier of the thesaurus.
        Name:
          $ref: '#/components/schemas/ThesaurusName'
          description: The name of the thesaurus.
        Status:
          $ref: '#/components/schemas/ThesaurusStatus'
          description: The status of the thesaurus.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix datetime that the thesaurus was created.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix datetime that the thesaurus was last updated.
      description: An array of summary information for one or more thesauruses.
    Token:
      type: string
      pattern: '^\P{C}*$'
      minLength: 1
      maxLength: 100000
    Urls:
      type: object
      properties:
        SeedUrlConfiguration:
          $ref: '#/components/schemas/SeedUrlConfiguration'
          description: '<p>Provides the configuration of the seed or starting point URLs of the websites you want to crawl.</p> <p>You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to.</p> <p>You can list up to 100 seed URLs.</p>'
        SiteMapsConfiguration:
          $ref: '#/components/schemas/SiteMapsConfiguration'
          description: <p>Provides the configuration of the sitemap URLs of the websites you want to crawl.</p> <p>Only URLs belonging to the same website host names are crawled. You can list up to three sitemap URLs.</p>
      description: '<p>Provides the configuration information of the URLs to crawl.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use the Amazon Kendra web crawler to index your own webpages, or webpages that you have authorization to index.</i> </p>'
    UserTokenConfiguration:
      type: object
      properties:
        JwtTokenTypeConfiguration:
          $ref: '#/components/schemas/JwtTokenTypeConfiguration'
          description: Information about the JWT token type configuration.
        JsonTokenTypeConfiguration:
          $ref: '#/components/schemas/JsonTokenTypeConfiguration'
          description: Information about the JSON token type configuration.
      description: Provides configuration information for a token configuration.
    ValueImportanceMapKey:
      type: string
      minLength: 1
      maxLength: 50
security:
  - hmac: []
