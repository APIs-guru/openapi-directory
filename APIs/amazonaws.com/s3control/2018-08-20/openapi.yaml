openapi: 3.0.0
info:
  version: '2018-08-20'
  x-release: s3v4
  title: AWS S3 Control
  description: ' Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. '
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: s3control
  x-aws-signingName: s3
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/s3control-2018-08-20.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/s3-control/'
servers:
  - url: 'http://s3-control.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS S3 Control multi-region endpoint
  - url: 'https://s3-control.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS S3 Control multi-region endpoint
  - url: 'http://s3-control.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS S3 Control endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://s3-control.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS S3 Control endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/v20180820/accesspoint/{name}#x-amz-account-id':
    put:
      operationId: CreateAccessPoint
      description: '<p>Creates an access point and associates it with the specified bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">Managing Data Access with Amazon S3 Access Points</a> in the <i>Amazon S3 User Guide</i>.</p> <p/> <note> <p>S3 on Outposts only supports VPC-style access points. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html"> Accessing Amazon S3 on Outposts using virtual private cloud (VPC) only access points</a> in the <i>Amazon S3 User Guide</i>.</p> </note> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html#API_control_CreateAccessPoint_Examples">Examples</a> section.</p> <p/> <p>The following actions are related to <code>CreateAccessPoint</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html">GetAccessPoint</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html">DeleteAccessPoint</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html">ListAccessPoints</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateAccessPointResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the owner of the bucket for which you want to create an access point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The name you want to assign to this access point.
          schema:
            type: string
            minLength: 3
            maxLength: 63
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Bucket
              properties:
                Bucket:
                  description: '<p>The name of the bucket that you want to associate this access point with.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
                  type: string
                  minLength: 3
                  maxLength: 255
                VpcConfiguration:
                  description: The virtual private cloud (VPC) configuration for an access point.
                  type: object
                  properties:
                    VpcId:
                      $ref: '#/components/schemas/VpcId'
                      description: 'If this field is specified, this access point will only allow connections from the specified VPC ID.'
                PublicAccessBlockConfiguration:
                  description: '<p>The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 account. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>.</p> <p>This is not supported for Amazon S3 on Outposts.</p>'
                  type: object
                  properties:
                    BlockPublicAcls:
                      $ref: '#/components/schemas/Setting'
                      description: '<p>Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.</p> </li> <li> <p>PUT Object calls fail if the request includes a public ACL.</p> </li> <li> <p>PUT Bucket calls fail if the request includes a public ACL.</p> </li> </ul> <p>Enabling this setting doesn''t affect existing policies or ACLs.</p> <p>This is not supported for Amazon S3 on Outposts.</p>'
                    IgnorePublicAcls:
                      $ref: '#/components/schemas/Setting'
                      description: <p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p> <p>This is not supported for Amazon S3 on Outposts.</p>
                    BlockPublicPolicy:
                      $ref: '#/components/schemas/Setting'
                      description: <p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Enabling this setting doesn't affect existing bucket policies.</p> <p>This is not supported for Amazon S3 on Outposts.</p>
                    RestrictPublicBuckets:
                      $ref: '#/components/schemas/Setting'
                      description: '<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> restricts access to buckets with public policies to only Amazon Web Service principals and authorized users within this account.</p> <p>Enabling this setting doesn''t affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.</p> <p>This is not supported for Amazon S3 on Outposts.</p>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteAccessPoint
      description: '<p>Deletes the specified access point.</p> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html#API_control_DeleteAccessPoint_Examples">Examples</a> section.</p> <p>The following actions are related to <code>DeleteAccessPoint</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html">GetAccessPoint</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html">ListAccessPoints</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified access point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>The name of the access point you want to delete.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/accesspoint/&lt;my-accesspoint-name&gt;</code>. For example, to access the access point <code>reports-ap</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 63
    get:
      operationId: GetAccessPoint
      description: '<p>Returns configuration information about the specified access point.</p> <p/> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html#API_control_GetAccessPoint_Examples">Examples</a> section.</p> <p>The following actions are related to <code>GetAccessPoint</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html">DeleteAccessPoint</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html">ListAccessPoints</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccessPointResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified access point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>The name of the access point whose configuration information you want to retrieve.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/accesspoint/&lt;my-accesspoint-name&gt;</code>. For example, to access the access point <code>reports-ap</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 63
  '/v20180820/accesspointforobjectlambda/{name}#x-amz-account-id':
    put:
      operationId: CreateAccessPointForObjectLambda
      description: '<p>Creates an Object Lambda Access Point. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/transforming-objects.html">Transforming objects with Object Lambda Access Points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>The following actions are related to <code>CreateAccessPointForObjectLambda</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html">DeleteAccessPointForObjectLambda</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html">GetAccessPointForObjectLambda</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html">ListAccessPointsForObjectLambda</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateAccessPointForObjectLambdaResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for owner of the specified Object Lambda Access Point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The name you want to assign to this Object Lambda Access Point.
          schema:
            type: string
            pattern: '^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$'
            minLength: 3
            maxLength: 45
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Configuration
              properties:
                Configuration:
                  description: A configuration used when creating an Object Lambda Access Point.
                  type: object
                  properties:
                    SupportingAccessPoint:
                      $ref: '#/components/schemas/ObjectLambdaSupportingAccessPointArn'
                      description: Standard access point associated with the Object Lambda Access Point.
                    CloudWatchMetricsEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: A container for whether the CloudWatch metrics configuration is enabled.
                    AllowedFeatures:
                      $ref: '#/components/schemas/ObjectLambdaAllowedFeaturesList'
                      description: A container for allowed features. Valid inputs are <code>GetObject-Range</code> and <code>GetObject-PartNumber</code>.
                    TransformationConfigurations:
                      $ref: '#/components/schemas/ObjectLambdaTransformationConfigurationsList'
                      description: A container for transformation configurations for an Object Lambda Access Point.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteAccessPointForObjectLambda
      description: '<p>Deletes the specified Object Lambda Access Point.</p> <p>The following actions are related to <code>DeleteAccessPointForObjectLambda</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html">CreateAccessPointForObjectLambda</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html">GetAccessPointForObjectLambda</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html">ListAccessPointsForObjectLambda</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified Object Lambda Access Point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The name of the access point you want to delete.
          schema:
            type: string
            pattern: '^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$'
            minLength: 3
            maxLength: 45
    get:
      operationId: GetAccessPointForObjectLambda
      description: '<p>Returns configuration information about the specified Object Lambda Access Point</p> <p>The following actions are related to <code>GetAccessPointForObjectLambda</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html">CreateAccessPointForObjectLambda</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html">DeleteAccessPointForObjectLambda</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html">ListAccessPointsForObjectLambda</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccessPointForObjectLambdaResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified Object Lambda Access Point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The name of the Object Lambda Access Point.
          schema:
            type: string
            pattern: '^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$'
            minLength: 3
            maxLength: 45
  '/v20180820/bucket/{name}':
    put:
      operationId: CreateBucket
      description: '<note> <p>This action creates an Amazon S3 on Outposts bucket. To create an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">Create Bucket</a> in the <i>Amazon S3 API Reference</i>. </p> </note> <p>Creates a new Outposts bucket. By creating the bucket, you become the bucket owner. To create an Outposts bucket, you must have S3 on Outposts. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p> <p>Not every string is an acceptable bucket name. For information on bucket naming restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/BucketRestrictions.html#bucketnamingrules">Working with Amazon S3 Buckets</a>.</p> <p>S3 on Outposts buckets support:</p> <ul> <li> <p>Tags</p> </li> <li> <p>LifecycleConfigurations for deleting expired objects</p> </li> </ul> <p>For a complete list of restrictions and Amazon S3 feature limitations on S3 on Outposts, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OnOutpostsRestrictionsLimitations.html"> Amazon S3 on Outposts Restrictions and Limitations</a>.</p> <p>For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and <code>x-amz-outpost-id</code> in your API request, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html#API_control_CreateBucket_Examples">Examples</a> section.</p> <p>The following actions are related to <code>CreateBucket</code> for Amazon S3 on Outposts:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html">GetBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html">DeleteBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html">PutAccessPointPolicy</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateBucketResult'
        '480':
          description: BucketAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BucketAlreadyExists'
        '481':
          description: BucketAlreadyOwnedByYou
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BucketAlreadyOwnedByYou'
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: <p>The canned ACL to apply to the bucket.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
        - name: name
          in: path
          required: true
          description: The name of the bucket.
          schema:
            type: string
            minLength: 3
            maxLength: 255
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: '<p>Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>'
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: <p>Allows grantee to list the objects in the bucket.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: <p>Allows grantee to read the bucket ACL.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>
          schema:
            type: string
        - name: x-amz-grant-write
          in: header
          required: false
          description: '<p>Allows grantee to create, overwrite, and delete any object in the bucket.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>'
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: <p>Allows grantee to write the ACL for the applicable bucket.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>
          schema:
            type: string
        - name: x-amz-bucket-object-lock-enabled
          in: header
          required: false
          description: <p>Specifies whether you want S3 Object Lock to be enabled for the new bucket.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>
          schema:
            type: boolean
        - name: x-amz-outpost-id
          in: header
          required: false
          description: <p>The ID of the Outposts where the bucket is being created.</p> <note> <p>This is required by Amazon S3 on Outposts buckets.</p> </note>
          schema:
            type: string
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                CreateBucketConfiguration:
                  description: <p>The container for the bucket configuration.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>
                  type: object
                  properties:
                    LocationConstraint:
                      $ref: '#/components/schemas/BucketLocationConstraint'
                      description: '<p>Specifies the Region where the bucket will be created. If you are creating a bucket on the US East (N. Virginia) Region (us-east-1), you do not need to specify the location. </p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v20180820/jobs#x-amz-account-id:
    post:
      operationId: CreateJob
      description: '<p>You can use S3 Batch Operations to perform large-scale batch actions on Amazon S3 objects. Batch Operations can run a single action on lists of Amazon S3 objects that you specify. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p> <p>This action creates a S3 Batch Operations job.</p> <p/> <p>Related actions include:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html">UpdateJobPriority</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_JobOperation.html">JobOperation</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateJobResult'
        '480':
          description: TooManyRequestsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: IdempotencyException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '483':
          description: InternalServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID that creates the job.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Operation
                - Report
                - ClientRequestToken
                - Manifest
                - Priority
                - RoleArn
              properties:
                ConfirmationRequired:
                  description: Indicates whether confirmation is required before Amazon S3 runs the job. Confirmation is only required for jobs created through the Amazon S3 console.
                  type: boolean
                Operation:
                  description: 'The operation that you want this job to perform on every object listed in the manifest. For more information about the available operations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-operations.html">Operations</a> in the <i>Amazon S3 User Guide</i>.'
                  type: object
                  properties:
                    LambdaInvoke:
                      $ref: '#/components/schemas/LambdaInvokeOperation'
                      description: Directs the specified job to invoke an Lambda function on every object in the manifest.
                    S3PutObjectCopy:
                      $ref: '#/components/schemas/S3CopyObjectOperation'
                      description: Directs the specified job to run a PUT Copy object call on every object in the manifest.
                    S3PutObjectAcl:
                      $ref: '#/components/schemas/S3SetObjectAclOperation'
                      description: Directs the specified job to run a PUT Object acl call on every object in the manifest.
                    S3PutObjectTagging:
                      $ref: '#/components/schemas/S3SetObjectTaggingOperation'
                      description: Directs the specified job to run a PUT Object tagging call on every object in the manifest.
                    S3DeleteObjectTagging:
                      $ref: '#/components/schemas/S3DeleteObjectTaggingOperation'
                      description: Directs the specified job to execute a DELETE Object tagging call on every object in the manifest.
                    S3InitiateRestoreObject:
                      $ref: '#/components/schemas/S3InitiateRestoreObjectOperation'
                      description: Directs the specified job to initiate restore requests for every archived object in the manifest.
                    S3PutObjectLegalHold:
                      $ref: '#/components/schemas/S3SetObjectLegalHoldOperation'
                    S3PutObjectRetention:
                      $ref: '#/components/schemas/S3SetObjectRetentionOperation'
                Report:
                  description: Contains the configuration parameters for a job-completion report.
                  type: object
                  properties:
                    Bucket:
                      $ref: '#/components/schemas/S3BucketArnString'
                      description: The Amazon Resource Name (ARN) for the bucket where specified job-completion report will be stored.
                    Format:
                      $ref: '#/components/schemas/JobReportFormat'
                      description: The format of the specified job-completion report.
                    Enabled:
                      $ref: '#/components/schemas/Boolean'
                      description: Indicates whether the specified job will generate a job-completion report.
                    Prefix:
                      $ref: '#/components/schemas/ReportPrefixString'
                      description: An optional prefix to describe where in the specified bucket the job-completion report will be stored. Amazon S3 stores the job-completion report at <code>&lt;prefix&gt;/job-&lt;job-id&gt;/report.json</code>.
                    ReportScope:
                      $ref: '#/components/schemas/JobReportScope'
                      description: Indicates whether the job-completion report will include details of all tasks or only failed tasks.
                ClientRequestToken:
                  description: An idempotency token to ensure that you don't accidentally submit the same request twice. You can use any string up to the maximum length.
                  type: string
                  minLength: 1
                  maxLength: 64
                Manifest:
                  description: Contains the configuration information for a job's manifest.
                  type: object
                  properties:
                    Spec:
                      $ref: '#/components/schemas/JobManifestSpec'
                      description: 'Describes the format of the specified job''s manifest. If the manifest is in CSV format, also describes the columns contained within the manifest.'
                    Location:
                      $ref: '#/components/schemas/JobManifestLocation'
                      description: Contains the information required to locate the specified job's manifest.
                Description:
                  description: A description for this job. You can use any string within the permitted length. Descriptions don't need to be unique and can be used for multiple jobs.
                  type: string
                  minLength: 1
                  maxLength: 256
                Priority:
                  description: The numerical priority for this job. Higher numbers indicate higher priority.
                  type: integer
                  minimum: 0
                  maximum: 2147483647
                RoleArn:
                  description: The Amazon Resource Name (ARN) for the Identity and Access Management (IAM) role that Batch Operations will use to run this job's action on every object in the manifest.
                  type: string
                  pattern: 'arn:[^:]+:iam::\d{12}:role/.*'
                  minLength: 1
                  maxLength: 2048
                Tags:
                  description: 'A set of tags to associate with the S3 Batch Operations job. This is an optional parameter. '
                  type: array
                  items:
                    $ref: '#/components/schemas/S3Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListJobs
      description: '<p>Lists current S3 Batch Operations jobs and jobs that have ended within the last 30 days for the account making the request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p> <p>Related actions include:</p> <p/> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html">UpdateJobPriority</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListJobsResult'
        '480':
          description: InvalidRequestException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidNextTokenException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID associated with the S3 Batch Operations job.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: jobStatuses
          in: query
          required: false
          description: The <code>List Jobs</code> request returns jobs that match the statuses listed in this element.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/JobStatus'
        - name: nextToken
          in: query
          required: false
          description: A pagination token to request the next page of results. Use the token that Amazon S3 returned in the <code>NextToken</code> element of the <code>ListJobsResult</code> from the previous <code>List Jobs</code> request.
          schema:
            type: string
            pattern: '^[A-Za-z0-9\+\:\/\=\?\#-_]+$'
            minLength: 1
            maxLength: 1024
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of jobs that Amazon S3 will include in the <code>List Jobs</code> response. If there are more jobs than this number, the response will include a pagination token in the <code>NextToken</code> field to enable you to retrieve the next page of results.'
          schema:
            type: integer
            minimum: 0
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/v20180820/accesspoint/{name}/policy#x-amz-account-id':
    delete:
      operationId: DeleteAccessPointPolicy
      description: '<p>Deletes the access point policy for the specified access point.</p> <p/> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html#API_control_DeleteAccessPointPolicy_Examples">Examples</a> section.</p> <p>The following actions are related to <code>DeleteAccessPointPolicy</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html">PutAccessPointPolicy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html">GetAccessPointPolicy</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified access point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>The name of the access point whose policy you want to delete.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/accesspoint/&lt;my-accesspoint-name&gt;</code>. For example, to access the access point <code>reports-ap</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 63
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAccessPointPolicy
      description: '<p>Returns the access point policy associated with the specified access point.</p> <p>The following actions are related to <code>GetAccessPointPolicy</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html">PutAccessPointPolicy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html">DeleteAccessPointPolicy</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccessPointPolicyResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified access point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>The name of the access point whose policy you want to retrieve.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/accesspoint/&lt;my-accesspoint-name&gt;</code>. For example, to access the access point <code>reports-ap</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 63
    put:
      operationId: PutAccessPointPolicy
      description: '<p>Associates an access policy with the specified access point. Each access point can have only one policy, so a request made to this API replaces any existing policy associated with the specified access point.</p> <p/> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html#API_control_PutAccessPointPolicy_Examples">Examples</a> section.</p> <p>The following actions are related to <code>PutAccessPointPolicy</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html">GetAccessPointPolicy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html">DeleteAccessPointPolicy</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for owner of the bucket associated with the specified access point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>The name of the access point that you want to associate with the specified policy.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/accesspoint/&lt;my-accesspoint-name&gt;</code>. For example, to access the access point <code>reports-ap</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 63
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Policy
              properties:
                Policy:
                  description: 'The policy that you want to apply to the specified access point. For more information about access point policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">Managing data access with Amazon S3 access points</a> in the <i>Amazon S3 User Guide</i>.'
                  type: string
  '/v20180820/accesspointforobjectlambda/{name}/policy#x-amz-account-id':
    delete:
      operationId: DeleteAccessPointPolicyForObjectLambda
      description: '<p>Removes the resource policy for an Object Lambda Access Point.</p> <p>The following actions are related to <code>DeleteAccessPointPolicyForObjectLambda</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html">GetAccessPointPolicyForObjectLambda</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html">PutAccessPointPolicyForObjectLambda</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified Object Lambda Access Point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The name of the Object Lambda Access Point you want to delete the policy for.
          schema:
            type: string
            pattern: '^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$'
            minLength: 3
            maxLength: 45
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAccessPointPolicyForObjectLambda
      description: '<p>Returns the resource policy for an Object Lambda Access Point.</p> <p>The following actions are related to <code>GetAccessPointPolicyForObjectLambda</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html">DeleteAccessPointPolicyForObjectLambda</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html">PutAccessPointPolicyForObjectLambda</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccessPointPolicyForObjectLambdaResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified Object Lambda Access Point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The name of the Object Lambda Access Point.
          schema:
            type: string
            pattern: '^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$'
            minLength: 3
            maxLength: 45
    put:
      operationId: PutAccessPointPolicyForObjectLambda
      description: '<p>Creates or replaces resource policy for an Object Lambda Access Point. For an example policy, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/olap-create.html#olap-create-cli">Creating Object Lambda Access Points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>The following actions are related to <code>PutAccessPointPolicyForObjectLambda</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html">DeleteAccessPointPolicyForObjectLambda</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html">GetAccessPointPolicyForObjectLambda</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified Object Lambda Access Point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The name of the Object Lambda Access Point.
          schema:
            type: string
            pattern: '^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$'
            minLength: 3
            maxLength: 45
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Policy
              properties:
                Policy:
                  description: Object Lambda Access Point resource policy document.
                  type: string
  '/v20180820/bucket/{name}#x-amz-account-id':
    delete:
      operationId: DeleteBucket
      description: '<note> <p>This action deletes an Amazon S3 on Outposts bucket. To delete an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html">DeleteBucket</a> in the <i>Amazon S3 API Reference</i>. </p> </note> <p>Deletes the Amazon S3 on Outposts bucket. All objects (including all object versions and delete markers) in the bucket must be deleted before the bucket itself can be deleted. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html#API_control_DeleteBucket_Examples">Examples</a> section.</p> <p class="title"> <b>Related Resources</b> </p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html">CreateBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html">GetBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID that owns the Outposts bucket.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>Specifies the bucket being deleted.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetBucket
      description: '<p>Gets an Amazon S3 on Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html"> Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you are using an identity other than the root user of the account that owns the Outposts bucket, the calling identity must have the <code>s3-outposts:GetBucket</code> permissions on the specified Outposts bucket and belong to the Outposts bucket owner''s account in order to use this action. Only users from Outposts bucket owner account with the right permissions can perform actions on an Outposts bucket. </p> <p> If you don''t have <code>s3-outposts:GetBucket</code> permissions or you''re not using an identity that belongs to the bucket owner''s account, Amazon S3 returns a <code>403 Access Denied</code> error.</p> <p>The following actions are related to <code>GetBucket</code> for Amazon S3 on Outposts:</p> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html#API_control_GetBucket_Examples">Examples</a> section.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html">CreateBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html">DeleteBucket</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the Outposts bucket.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>Specifies the bucket.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 255
  '/v20180820/bucket/{name}/lifecycleconfiguration#x-amz-account-id':
    delete:
      operationId: DeleteBucketLifecycleConfiguration
      description: '<note> <p>This action deletes an Amazon S3 on Outposts bucket''s lifecycle configuration. To delete an S3 bucket''s lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html">DeleteBucketLifecycle</a> in the <i>Amazon S3 API Reference</i>. </p> </note> <p>Deletes the lifecycle configuration from the specified Outposts bucket. Amazon S3 on Outposts removes all the lifecycle configuration rules in the lifecycle subresource associated with the bucket. Your objects never expire, and Amazon S3 on Outposts no longer automatically deletes any objects on the basis of rules contained in the deleted lifecycle configuration. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p> <p>To use this action, you must have permission to perform the <code>s3-outposts:DeleteLifecycleConfiguration</code> action. By default, the bucket owner has this permission and the Outposts bucket owner can grant this permission to others.</p> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html#API_control_DeleteBucketLifecycleConfiguration_Examples">Examples</a> section.</p> <p>For more information about object expiration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#intro-lifecycle-rules-actions">Elements to Describe Lifecycle Actions</a>.</p> <p>Related actions include:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the lifecycle configuration to delete.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>Specifies the bucket.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetBucketLifecycleConfiguration
      description: '<note> <p>This action gets an Amazon S3 on Outposts bucket''s lifecycle configuration. To get an S3 bucket''s lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a> in the <i>Amazon S3 API Reference</i>. </p> </note> <p>Returns the lifecycle configuration information set on the Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> and for information about lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html"> Object Lifecycle Management</a> in <i>Amazon S3 User Guide</i>.</p> <p>To use this action, you must have permission to perform the <code>s3-outposts:GetLifecycleConfiguration</code> action. The Outposts bucket owner has this permission, by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html#API_control_GetBucketLifecycleConfiguration_Examples">Examples</a> section.</p> <p> <code>GetBucketLifecycleConfiguration</code> has the following special error:</p> <ul> <li> <p>Error code: <code>NoSuchLifecycleConfiguration</code> </p> <ul> <li> <p>Description: The lifecycle configuration does not exist.</p> </li> <li> <p>HTTP Status Code: 404 Not Found</p> </li> <li> <p>SOAP Fault Code Prefix: Client</p> </li> </ul> </li> </ul> <p>The following actions are related to <code>GetBucketLifecycleConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html">DeleteBucketLifecycleConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketLifecycleConfigurationResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the Outposts bucket.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>The Amazon Resource Name (ARN) of the bucket.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 255
    put:
      operationId: PutBucketLifecycleConfiguration
      description: '<note> <p>This action puts a lifecycle configuration to an Amazon S3 on Outposts bucket. To put a lifecycle configuration to an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a> in the <i>Amazon S3 API Reference</i>. </p> </note> <p>Creates a new lifecycle configuration for the S3 on Outposts bucket or replaces an existing lifecycle configuration. Outposts buckets only support lifecycle configurations that delete/expire objects after a certain period of time and abort incomplete multipart uploads.</p> <p/> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html#API_control_PutBucketLifecycleConfiguration_Examples">Examples</a> section.</p> <p>The following actions are related to <code>PutBucketLifecycleConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html">DeleteBucketLifecycleConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the Outposts bucket.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The name of the bucket for which to set the configuration.
          schema:
            type: string
            minLength: 3
            maxLength: 255
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                LifecycleConfiguration:
                  description: The container for the Outposts bucket lifecycle configuration.
                  type: object
                  properties:
                    Rules:
                      $ref: '#/components/schemas/LifecycleRules'
                      description: 'A lifecycle rule for individual objects in an Outposts bucket. '
  '/v20180820/bucket/{name}/policy#x-amz-account-id':
    delete:
      operationId: DeleteBucketPolicy
      description: '<note> <p>This action deletes an Amazon S3 on Outposts bucket policy. To delete an S3 bucket policy, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html">DeleteBucketPolicy</a> in the <i>Amazon S3 API Reference</i>. </p> </note> <p>This implementation of the DELETE action uses the policy subresource to delete the policy of a specified Amazon S3 on Outposts bucket. If you are using an identity other than the root user of the account that owns the bucket, the calling identity must have the <code>s3-outposts:DeleteBucketPolicy</code> permissions on the specified Outposts bucket and belong to the bucket owner''s account to use this action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p> <p>If you don''t have <code>DeleteBucketPolicy</code> permissions, Amazon S3 returns a <code>403 Access Denied</code> error. If you have the correct permissions, but you''re not using an identity that belongs to the bucket owner''s account, Amazon S3 returns a <code>405 Method Not Allowed</code> error. </p> <important> <p>As a security precaution, the root user of the account that owns a bucket can always use this action, even if the policy explicitly denies the root user the ability to perform this action.</p> </important> <p>For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User Policies</a>. </p> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html#API_control_DeleteBucketPolicy_Examples">Examples</a> section.</p> <p>The following actions are related to <code>DeleteBucketPolicy</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html">GetBucketPolicy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html">PutBucketPolicy</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the Outposts bucket.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>Specifies the bucket.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetBucketPolicy
      description: '<note> <p>This action gets a bucket policy for an Amazon S3 on Outposts bucket. To get a policy for an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicy.html">GetBucketPolicy</a> in the <i>Amazon S3 API Reference</i>. </p> </note> <p>Returns the policy of a specified Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you are using an identity other than the root user of the account that owns the bucket, the calling identity must have the <code>GetBucketPolicy</code> permissions on the specified bucket and belong to the bucket owner''s account in order to use this action.</p> <p>Only users from Outposts bucket owner account with the right permissions can perform actions on an Outposts bucket. If you don''t have <code>s3-outposts:GetBucketPolicy</code> permissions or you''re not using an identity that belongs to the bucket owner''s account, Amazon S3 returns a <code>403 Access Denied</code> error.</p> <important> <p>As a security precaution, the root user of the account that owns a bucket can always use this action, even if the policy explicitly denies the root user the ability to perform this action.</p> </important> <p>For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User Policies</a>.</p> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html#API_control_GetBucketPolicy_Examples">Examples</a> section.</p> <p>The following actions are related to <code>GetBucketPolicy</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html">PutBucketPolicy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html">DeleteBucketPolicy</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketPolicyResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the Outposts bucket.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>Specifies the bucket.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 255
    put:
      operationId: PutBucketPolicy
      description: '<note> <p>This action puts a bucket policy to an Amazon S3 on Outposts bucket. To put a policy on an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html">PutBucketPolicy</a> in the <i>Amazon S3 API Reference</i>. </p> </note> <p>Applies an Amazon S3 bucket policy to an Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you are using an identity other than the root user of the account that owns the Outposts bucket, the calling identity must have the <code>PutBucketPolicy</code> permissions on the specified Outposts bucket and belong to the bucket owner''s account in order to use this action.</p> <p>If you don''t have <code>PutBucketPolicy</code> permissions, Amazon S3 returns a <code>403 Access Denied</code> error. If you have the correct permissions, but you''re not using an identity that belongs to the bucket owner''s account, Amazon S3 returns a <code>405 Method Not Allowed</code> error.</p> <important> <p> As a security precaution, the root user of the account that owns a bucket can always use this action, even if the policy explicitly denies the root user the ability to perform this action. </p> </important> <p>For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User Policies</a>.</p> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html#API_control_PutBucketPolicy_Examples">Examples</a> section.</p> <p>The following actions are related to <code>PutBucketPolicy</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html">GetBucketPolicy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html">DeleteBucketPolicy</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the Outposts bucket.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>Specifies the bucket.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 255
        - name: x-amz-confirm-remove-self-bucket-access
          in: header
          required: false
          description: <p>Set this parameter to true to confirm that you want to remove your permissions to change this bucket policy in the future.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Policy
              properties:
                Policy:
                  description: The bucket policy as a JSON document.
                  type: string
  '/v20180820/bucket/{name}/tagging#x-amz-account-id':
    delete:
      operationId: DeleteBucketTagging
      description: '<note> <p>This action deletes an Amazon S3 on Outposts bucket''s tags. To delete an S3 bucket tags, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html">DeleteBucketTagging</a> in the <i>Amazon S3 API Reference</i>. </p> </note> <p>Deletes the tags from the Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p> <p>To use this action, you must have permission to perform the <code>PutBucketTagging</code> action. By default, the bucket owner has this permission and can grant this permission to others. </p> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html#API_control_DeleteBucketTagging_Examples">Examples</a> section.</p> <p>The following actions are related to <code>DeleteBucketTagging</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html">GetBucketTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html">PutBucketTagging</a> </p> </li> </ul>'
      responses:
        '204':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the Outposts bucket tag set to be removed.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>The bucket ARN that has the tag set to be removed.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetBucketTagging
      description: '<note> <p>This action gets an Amazon S3 on Outposts bucket''s tags. To get an S3 bucket tags, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html">GetBucketTagging</a> in the <i>Amazon S3 API Reference</i>. </p> </note> <p>Returns the tag set associated with the Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p> <p>To use this action, you must have permission to perform the <code>GetBucketTagging</code> action. By default, the bucket owner has this permission and can grant this permission to others.</p> <p> <code>GetBucketTagging</code> has the following special error:</p> <ul> <li> <p>Error code: <code>NoSuchTagSetError</code> </p> <ul> <li> <p>Description: There is no tag set associated with the bucket.</p> </li> </ul> </li> </ul> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html#API_control_GetBucketTagging_Examples">Examples</a> section.</p> <p>The following actions are related to <code>GetBucketTagging</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html">PutBucketTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html">DeleteBucketTagging</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketTaggingResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the Outposts bucket.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>Specifies the bucket.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 255
    put:
      operationId: PutBucketTagging
      description: '<note> <p>This action puts tags on an Amazon S3 on Outposts bucket. To put tags on an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html">PutBucketTagging</a> in the <i>Amazon S3 API Reference</i>. </p> </note> <p>Sets the tags for an S3 on Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p> <p>Use tags to organize your Amazon Web Services bill to reflect your own cost structure. To do this, sign up to get your account bill with tag key values included. Then, to see the cost of combined resources, organize your billing information according to resources with the same tag key values. For example, you can tag several resources with a specific application name, and then organize your billing information to see the total cost of that application across several services. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Cost allocation and tagging</a>.</p> <note> <p>Within a bucket, if you add a tag that has the same key as an existing tag, the new value overwrites the old value. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/CostAllocTagging.html"> Using cost allocation in Amazon S3 bucket tags</a>.</p> </note> <p>To use this action, you must have permissions to perform the <code>s3-outposts:PutBucketTagging</code> action. The Outposts bucket owner has this permission by default and can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources"> Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing access permissions to your Amazon S3 resources</a>.</p> <p> <code>PutBucketTagging</code> has the following special errors:</p> <ul> <li> <p>Error code: <code>InvalidTagError</code> </p> <ul> <li> <p>Description: The tag provided was not a valid tag. This error can occur if the tag did not pass input validation. For information about tag restrictions, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html"> User-Defined Tag Restrictions</a> and <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/aws-tag-restrictions.html"> Amazon Web Services-Generated Cost Allocation Tag Restrictions</a>.</p> </li> </ul> </li> <li> <p>Error code: <code>MalformedXMLError</code> </p> <ul> <li> <p>Description: The XML provided does not match the schema.</p> </li> </ul> </li> <li> <p>Error code: <code>OperationAbortedError </code> </p> <ul> <li> <p>Description: A conflicting conditional action is currently in progress against this resource. Try again.</p> </li> </ul> </li> <li> <p>Error code: <code>InternalError</code> </p> <ul> <li> <p>Description: The service was unable to apply the provided tag to the bucket.</p> </li> </ul> </li> </ul> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html#API_control_PutBucketTagging_Examples">Examples</a> section.</p> <p>The following actions are related to <code>PutBucketTagging</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html">GetBucketTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html">DeleteBucketTagging</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the Outposts bucket.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: '<p>The Amazon Resource Name (ARN) of the bucket.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 255
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Tagging
              properties:
                Tagging:
                  description: <p/>
                  type: object
                  properties:
                    TagSet:
                      $ref: '#/components/schemas/S3TagSet'
                      description: A collection for a set of tags.
  '/v20180820/jobs/{id}/tagging#x-amz-account-id':
    delete:
      operationId: DeleteJobTagging
      description: '<p>Removes the entire tag set from the specified S3 Batch Operations job. To use this operation, you must have permission to perform the <code>s3:DeleteJobTagging</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Controlling access and labeling jobs using tags</a> in the <i>Amazon S3 User Guide</i>.</p> <p/> <p>Related actions include:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html">GetJobTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html">PutJobTagging</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteJobTaggingResult'
        '480':
          description: InternalServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: TooManyRequestsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID associated with the S3 Batch Operations job.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: id
          in: path
          required: true
          description: The ID for the S3 Batch Operations job whose tags you want to delete.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-\_]+'
            minLength: 5
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetJobTagging
      description: '<p>Returns the tags on an S3 Batch Operations job. To use this operation, you must have permission to perform the <code>s3:GetJobTagging</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Controlling access and labeling jobs using tags</a> in the <i>Amazon S3 User Guide</i>.</p> <p/> <p>Related actions include:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html">PutJobTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html">DeleteJobTagging</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetJobTaggingResult'
        '480':
          description: InternalServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: TooManyRequestsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID associated with the S3 Batch Operations job.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: id
          in: path
          required: true
          description: The ID for the S3 Batch Operations job whose tags you want to retrieve.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-\_]+'
            minLength: 5
            maxLength: 36
    put:
      operationId: PutJobTagging
      description: '<p>Sets the supplied tag-set on an S3 Batch Operations job.</p> <p>A tag is a key-value pair. You can associate S3 Batch Operations tags with any job by sending a PUT request against the tagging subresource that is associated with the job. To modify the existing tag set, you can either replace the existing tag set entirely, or make changes within the existing tag set by retrieving the existing tag set using <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html">GetJobTagging</a>, modify that tag set, and use this action to replace the tag set with the one you modified. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Controlling access and labeling jobs using tags</a> in the <i>Amazon S3 User Guide</i>. </p> <p/> <note> <ul> <li> <p>If you send this request with an empty tag set, Amazon S3 deletes the existing tag set on the Batch Operations job. If you use this method, you are charged for a Tier 1 Request (PUT). For more information, see <a href="http://aws.amazon.com/s3/pricing/">Amazon S3 pricing</a>.</p> </li> <li> <p>For deleting existing tags for your Batch Operations job, a <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html">DeleteJobTagging</a> request is preferred because it achieves the same result without incurring charges.</p> </li> <li> <p>A few things to consider about using tags:</p> <ul> <li> <p>Amazon S3 limits the maximum number of tags to 50 tags per job.</p> </li> <li> <p>You can associate up to 50 tags with a job as long as they have unique tag keys.</p> </li> <li> <p>A tag key can be up to 128 Unicode characters in length, and tag values can be up to 256 Unicode characters in length.</p> </li> <li> <p>The key and values are case sensitive.</p> </li> <li> <p>For tagging-related restrictions related to characters and encodings, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined Tag Restrictions</a> in the <i>Billing and Cost Management User Guide</i>.</p> </li> </ul> </li> </ul> </note> <p/> <p>To use this action, you must have permission to perform the <code>s3:PutJobTagging</code> action.</p> <p>Related actions include:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreatJob</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html">GetJobTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html">DeleteJobTagging</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PutJobTaggingResult'
        '480':
          description: InternalServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: TooManyRequestsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID associated with the S3 Batch Operations job.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: id
          in: path
          required: true
          description: The ID for the S3 Batch Operations job whose tags you want to replace.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-\_]+'
            minLength: 5
            maxLength: 36
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The set of tags to associate with the S3 Batch Operations job.
                  type: array
                  items:
                    $ref: '#/components/schemas/S3Tag'
  /v20180820/configuration/publicAccessBlock#x-amz-account-id:
    delete:
      operationId: DeletePublicAccessBlock
      description: '<p>Removes the <code>PublicAccessBlock</code> configuration for an account. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html"> Using Amazon S3 block public access</a>.</p> <p>Related actions include:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html">GetPublicAccessBlock</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html">PutPublicAccessBlock</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account whose <code>PublicAccessBlock</code> configuration you want to remove.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetPublicAccessBlock
      description: '<p>Retrieves the <code>PublicAccessBlock</code> configuration for an account. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html"> Using Amazon S3 block public access</a>.</p> <p>Related actions include:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeletePublicAccessBlock.html">DeletePublicAccessBlock</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html">PutPublicAccessBlock</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPublicAccessBlockOutput'
        '480':
          description: NoSuchPublicAccessBlockConfiguration
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchPublicAccessBlockConfiguration'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account whose <code>PublicAccessBlock</code> configuration you want to retrieve.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
    put:
      operationId: PutPublicAccessBlock
      description: '<p>Creates or modifies the <code>PublicAccessBlock</code> configuration for an account. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html"> Using Amazon S3 block public access</a>.</p> <p>Related actions include:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html">GetPublicAccessBlock</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeletePublicAccessBlock.html">DeletePublicAccessBlock</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account whose <code>PublicAccessBlock</code> configuration you want to set.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - PublicAccessBlockConfiguration
              properties:
                PublicAccessBlockConfiguration:
                  description: '<p>The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 account. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>.</p> <p>This is not supported for Amazon S3 on Outposts.</p>'
                  type: object
                  properties:
                    BlockPublicAcls:
                      $ref: '#/components/schemas/Setting'
                      description: '<p>Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.</p> </li> <li> <p>PUT Object calls fail if the request includes a public ACL.</p> </li> <li> <p>PUT Bucket calls fail if the request includes a public ACL.</p> </li> </ul> <p>Enabling this setting doesn''t affect existing policies or ACLs.</p> <p>This is not supported for Amazon S3 on Outposts.</p>'
                    IgnorePublicAcls:
                      $ref: '#/components/schemas/Setting'
                      description: <p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p> <p>This is not supported for Amazon S3 on Outposts.</p>
                    BlockPublicPolicy:
                      $ref: '#/components/schemas/Setting'
                      description: <p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Enabling this setting doesn't affect existing bucket policies.</p> <p>This is not supported for Amazon S3 on Outposts.</p>
                    RestrictPublicBuckets:
                      $ref: '#/components/schemas/Setting'
                      description: '<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> restricts access to buckets with public policies to only Amazon Web Service principals and authorized users within this account.</p> <p>Enabling this setting doesn''t affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.</p> <p>This is not supported for Amazon S3 on Outposts.</p>'
  '/v20180820/storagelens/{storagelensid}#x-amz-account-id':
    delete:
      operationId: DeleteStorageLensConfiguration
      description: '<p>Deletes the Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage activity and usage with Amazon S3 Storage Lens </a> in the <i>Amazon S3 User Guide</i>.</p> <note> <p>To use this action, you must have permission to perform the <code>s3:DeleteStorageLensConfiguration</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
      parameters:
        - name: storagelensid
          in: path
          required: true
          description: The ID of the S3 Storage Lens configuration.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-\_\.]+'
            minLength: 1
            maxLength: 64
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the requester.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetStorageLensConfiguration
      description: '<p>Gets the Amazon S3 Storage Lens configuration. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage activity and usage with Amazon S3 Storage Lens </a> in the <i>Amazon S3 User Guide</i>.</p> <note> <p>To use this action, you must have permission to perform the <code>s3:GetStorageLensConfiguration</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetStorageLensConfigurationResult'
      parameters:
        - name: storagelensid
          in: path
          required: true
          description: The ID of the Amazon S3 Storage Lens configuration.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-\_\.]+'
            minLength: 1
            maxLength: 64
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the requester.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
    put:
      operationId: PutStorageLensConfiguration
      description: '<p>Puts an Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Working with Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p> <note> <p>To use this action, you must have permission to perform the <code>s3:PutStorageLensConfiguration</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
      parameters:
        - name: storagelensid
          in: path
          required: true
          description: The ID of the S3 Storage Lens configuration.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-\_\.]+'
            minLength: 1
            maxLength: 64
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the requester.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - StorageLensConfiguration
              properties:
                StorageLensConfiguration:
                  description: A container for the Amazon S3 Storage Lens configuration.
                  type: object
                  properties:
                    Id:
                      $ref: '#/components/schemas/ConfigId'
                      description: A container for the Amazon S3 Storage Lens configuration ID.
                    AccountLevel:
                      $ref: '#/components/schemas/AccountLevel'
                      description: A container for all the account-level configurations of your S3 Storage Lens configuration.
                    Include:
                      $ref: '#/components/schemas/Include'
                      description: 'A container for what is included in this configuration. This container can only be valid if there is no <code>Exclude</code> container submitted, and it''s not empty. '
                    Exclude:
                      $ref: '#/components/schemas/Exclude'
                      description: 'A container for what is excluded in this configuration. This container can only be valid if there is no <code>Include</code> container submitted, and it''s not empty. '
                    DataExport:
                      $ref: '#/components/schemas/StorageLensDataExport'
                      description: 'A container to specify the properties of your S3 Storage Lens metrics export including, the destination, schema and format.'
                    IsEnabled:
                      $ref: '#/components/schemas/IsEnabled'
                      description: A container for whether the S3 Storage Lens configuration is enabled.
                    AwsOrg:
                      $ref: '#/components/schemas/StorageLensAwsOrg'
                      description: A container for the Amazon Web Services organization for this S3 Storage Lens configuration.
                    StorageLensArn:
                      $ref: '#/components/schemas/StorageLensArn'
                      description: 'The Amazon Resource Name (ARN) of the S3 Storage Lens configuration. This property is read-only and follows the following format: <code> arn:aws:s3:<i>us-east-1</i>:<i>example-account-id</i>:storage-lens/<i>your-dashboard-name</i> </code> '
                Tags:
                  description: <p>The tag set of the S3 Storage Lens configuration.</p> <note> <p>You can set up to a maximum of 50 tags.</p> </note>
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/StorageLensTag'
                      - xml:
                          name: Tag
  '/v20180820/storagelens/{storagelensid}/tagging#x-amz-account-id':
    delete:
      operationId: DeleteStorageLensConfigurationTagging
      description: '<p>Deletes the Amazon S3 Storage Lens configuration tags. For more information about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage activity and usage with Amazon S3 Storage Lens </a> in the <i>Amazon S3 User Guide</i>.</p> <note> <p>To use this action, you must have permission to perform the <code>s3:DeleteStorageLensConfigurationTagging</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteStorageLensConfigurationTaggingResult'
      parameters:
        - name: storagelensid
          in: path
          required: true
          description: The ID of the S3 Storage Lens configuration.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-\_\.]+'
            minLength: 1
            maxLength: 64
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the requester.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetStorageLensConfigurationTagging
      description: '<p>Gets the tags of Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage activity and usage with Amazon S3 Storage Lens </a> in the <i>Amazon S3 User Guide</i>.</p> <note> <p>To use this action, you must have permission to perform the <code>s3:GetStorageLensConfigurationTagging</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetStorageLensConfigurationTaggingResult'
      parameters:
        - name: storagelensid
          in: path
          required: true
          description: The ID of the Amazon S3 Storage Lens configuration.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-\_\.]+'
            minLength: 1
            maxLength: 64
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the requester.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
    put:
      operationId: PutStorageLensConfigurationTagging
      description: '<p>Put or replace tags on an existing Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage activity and usage with Amazon S3 Storage Lens </a> in the <i>Amazon S3 User Guide</i>.</p> <note> <p>To use this action, you must have permission to perform the <code>s3:PutStorageLensConfigurationTagging</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PutStorageLensConfigurationTaggingResult'
      parameters:
        - name: storagelensid
          in: path
          required: true
          description: The ID of the S3 Storage Lens configuration.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-\_\.]+'
            minLength: 1
            maxLength: 64
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the requester.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: <p>The tag set of the S3 Storage Lens configuration.</p> <note> <p>You can set up to a maximum of 50 tags.</p> </note>
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/StorageLensTag'
                      - xml:
                          name: Tag
  '/v20180820/jobs/{id}#x-amz-account-id':
    get:
      operationId: DescribeJob
      description: '<p>Retrieves the configuration parameters and status for a Batch Operations job. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p> <p/> <p>Related actions include:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html">UpdateJobPriority</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeJobResult'
        '480':
          description: BadRequestException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: InternalServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID associated with the S3 Batch Operations job.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: id
          in: path
          required: true
          description: The ID for the job whose information you want to retrieve.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-\_]+'
            minLength: 5
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v20180820/accesspointforobjectlambda/{name}/configuration#x-amz-account-id':
    get:
      operationId: GetAccessPointConfigurationForObjectLambda
      description: '<p>Returns configuration for an Object Lambda Access Point.</p> <p>The following actions are related to <code>GetAccessPointConfigurationForObjectLambda</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointConfigurationForObjectLambda.html">PutAccessPointConfigurationForObjectLambda</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccessPointConfigurationForObjectLambdaResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified Object Lambda Access Point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The name of the Object Lambda Access Point you want to return the configuration for.
          schema:
            type: string
            pattern: '^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$'
            minLength: 3
            maxLength: 45
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutAccessPointConfigurationForObjectLambda
      description: '<p>Replaces configuration for an Object Lambda Access Point.</p> <p>The following actions are related to <code>PutAccessPointConfigurationForObjectLambda</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointConfigurationForObjectLambda.html">GetAccessPointConfigurationForObjectLambda</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified Object Lambda Access Point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The name of the Object Lambda Access Point.
          schema:
            type: string
            pattern: '^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$'
            minLength: 3
            maxLength: 45
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Configuration
              properties:
                Configuration:
                  description: A configuration used when creating an Object Lambda Access Point.
                  type: object
                  properties:
                    SupportingAccessPoint:
                      $ref: '#/components/schemas/ObjectLambdaSupportingAccessPointArn'
                      description: Standard access point associated with the Object Lambda Access Point.
                    CloudWatchMetricsEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: A container for whether the CloudWatch metrics configuration is enabled.
                    AllowedFeatures:
                      $ref: '#/components/schemas/ObjectLambdaAllowedFeaturesList'
                      description: A container for allowed features. Valid inputs are <code>GetObject-Range</code> and <code>GetObject-PartNumber</code>.
                    TransformationConfigurations:
                      $ref: '#/components/schemas/ObjectLambdaTransformationConfigurationsList'
                      description: A container for transformation configurations for an Object Lambda Access Point.
  '/v20180820/accesspoint/{name}/policyStatus#x-amz-account-id':
    get:
      operationId: GetAccessPointPolicyStatus
      description: 'Indicates whether the specified access point currently has a policy that allows public access. For more information about public access through access points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">Managing Data Access with Amazon S3 access points</a> in the <i>Amazon S3 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccessPointPolicyStatusResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified access point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The name of the access point whose policy status you want to retrieve.
          schema:
            type: string
            minLength: 3
            maxLength: 63
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v20180820/accesspointforobjectlambda/{name}/policyStatus#x-amz-account-id':
    get:
      operationId: GetAccessPointPolicyStatusForObjectLambda
      description: Returns the status of the resource policy associated with an Object Lambda Access Point.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccessPointPolicyStatusForObjectLambdaResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified Object Lambda Access Point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The name of the Object Lambda Access Point.
          schema:
            type: string
            pattern: '^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$'
            minLength: 3
            maxLength: 45
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v20180820/accesspoint#x-amz-account-id:
    get:
      operationId: ListAccessPoints
      description: '<p>Returns a list of the access points currently associated with the specified bucket. You can retrieve up to 1000 access points per call. If the specified bucket has more than 1,000 access points (or the number specified in <code>maxResults</code>, whichever is less), the response will include a continuation token that you can use to list the additional access points.</p> <p/> <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html#API_control_GetAccessPoint_Examples">Examples</a> section.</p> <p>The following actions are related to <code>ListAccessPoints</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html">DeleteAccessPoint</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html">GetAccessPoint</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAccessPointsResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for owner of the bucket whose access points you want to list.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: bucket
          in: query
          required: false
          description: '<p>The name of the bucket whose associated access points you want to list.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
          schema:
            type: string
            minLength: 3
            maxLength: 255
        - name: nextToken
          in: query
          required: false
          description: 'A continuation token. If a previous call to <code>ListAccessPoints</code> returned a continuation token in the <code>NextToken</code> field, then providing that value here causes Amazon S3 to retrieve the next page of results.'
          schema:
            type: string
            minLength: 1
            maxLength: 1024
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of access points that you want to include in the list. If the specified bucket has more than this number of access points, then the response will include a continuation token in the <code>NextToken</code> field that you can use to retrieve the next page of access points.'
          schema:
            type: integer
            minimum: 0
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v20180820/accesspointforobjectlambda#x-amz-account-id:
    get:
      operationId: ListAccessPointsForObjectLambda
      description: '<p>Returns a list of the access points associated with the Object Lambda Access Point. You can retrieve up to 1000 access points per call. If there are more than 1,000 access points (or the number specified in <code>maxResults</code>, whichever is less), the response will include a continuation token that you can use to list the additional access points.</p> <p>The following actions are related to <code>ListAccessPointsForObjectLambda</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html">CreateAccessPointForObjectLambda</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html">DeleteAccessPointForObjectLambda</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html">GetAccessPointForObjectLambda</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAccessPointsForObjectLambdaResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID for the account that owns the specified Object Lambda Access Point.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: nextToken
          in: query
          required: false
          description: 'If the list has more access points than can be returned in one call to this API, this field contains a continuation token that you can provide in subsequent calls to this API to retrieve additional access points.'
          schema:
            type: string
            minLength: 1
            maxLength: 1024
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of access points that you want to include in the list. If there are more than this number of access points, then the response will include a continuation token in the <code>NextToken</code> field that you can use to retrieve the next page of access points.'
          schema:
            type: integer
            minimum: 0
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v20180820/bucket#x-amz-account-id:
    get:
      operationId: ListRegionalBuckets
      description: '<p>Returns a list of all Outposts buckets in an Outpost that are owned by the authenticated sender of the request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p> <p>For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and <code>x-amz-outpost-id</code> in your request, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListRegionalBuckets.html#API_control_ListRegionalBuckets_Examples">Examples</a> section.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListRegionalBucketsResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the Outposts bucket.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: nextToken
          in: query
          required: false
          description: <p/>
          schema:
            type: string
            minLength: 1
            maxLength: 1024
        - name: maxResults
          in: query
          required: false
          description: <p/>
          schema:
            type: integer
            minimum: 0
            maximum: 1000
        - name: x-amz-outpost-id
          in: header
          required: false
          description: <p>The ID of the Outposts.</p> <note> <p>This is required by Amazon S3 on Outposts buckets.</p> </note>
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v20180820/storagelens#x-amz-account-id:
    get:
      operationId: ListStorageLensConfigurations
      description: '<p>Gets a list of Amazon S3 Storage Lens configurations. For more information about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage activity and usage with Amazon S3 Storage Lens </a> in the <i>Amazon S3 User Guide</i>.</p> <note> <p>To use this action, you must have permission to perform the <code>s3:ListStorageLensConfigurations</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListStorageLensConfigurationsResult'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID of the requester.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: nextToken
          in: query
          required: false
          description: A pagination token to request the next page of results.
          schema:
            type: string
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v20180820/jobs/{id}/priority#x-amz-account-id&priority':
    post:
      operationId: UpdateJobPriority
      description: '<p>Updates an existing S3 Batch Operations job''s priority. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p> <p/> <p>Related actions include:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateJobPriorityResult'
        '480':
          description: BadRequestException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: InternalServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID associated with the S3 Batch Operations job.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: id
          in: path
          required: true
          description: The ID for the job whose priority you want to update.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-\_]+'
            minLength: 5
            maxLength: 36
        - name: priority
          in: query
          required: true
          description: The priority you want to assign to this job.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v20180820/jobs/{id}/status#x-amz-account-id&requestedJobStatus':
    post:
      operationId: UpdateJobStatus
      description: '<p>Updates the status for the specified job. Use this action to confirm that you want to run a job or to cancel an existing job. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p> <p/> <p>Related actions include:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateJobStatusResult'
        '480':
          description: BadRequestException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: JobStatusException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/JobStatusException'
        '484':
          description: InternalServiceException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: x-amz-account-id
          in: header
          required: true
          description: The account ID associated with the S3 Batch Operations job.
          schema:
            type: string
            pattern: '^\d{12}$'
            maxLength: 64
        - name: id
          in: path
          required: true
          description: The ID of the job whose status you want to update.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-\_]+'
            minLength: 5
            maxLength: 36
        - name: requestedJobStatus
          in: query
          required: true
          description: The status that you want to move the specified job to.
          schema:
            type: string
            enum:
              - Cancelled
              - Ready
        - name: statusUpdateReason
          in: query
          required: false
          description: A description of the reason why you want to change the specified job's status. This field can be any string up to the maximum length.
          schema:
            type: string
            minLength: 1
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateAccessPointResult:
      type: object
      properties:
        AccessPointArn:
          $ref: '#/components/schemas/S3AccessPointArn'
          description: <p>The ARN of the access point.</p> <note> <p>This is only supported by Amazon S3 on Outposts.</p> </note>
        Alias:
          $ref: '#/components/schemas/Alias'
          description: The name or alias of the access point.
    VpcId:
      type: string
      minLength: 1
      maxLength: 1024
    Setting:
      type: boolean
    CreateAccessPointForObjectLambdaResult:
      type: object
      properties:
        ObjectLambdaAccessPointArn:
          $ref: '#/components/schemas/ObjectLambdaAccessPointArn'
          description: Specifies the ARN for the Object Lambda Access Point.
    ObjectLambdaSupportingAccessPointArn:
      type: string
      pattern: 'arn:[^:]+:s3:[^:]*:\d{12}:accesspoint/.*'
      minLength: 1
      maxLength: 2048
    Boolean:
      type: boolean
    ObjectLambdaAllowedFeaturesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ObjectLambdaAllowedFeature'
          - xml:
              name: AllowedFeature
    ObjectLambdaTransformationConfigurationsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ObjectLambdaTransformationConfiguration'
          - xml:
              name: TransformationConfiguration
    CreateBucketResult:
      type: object
      properties:
        BucketArn:
          $ref: '#/components/schemas/S3RegionalBucketArn'
          description: '<p>The Amazon Resource Name (ARN) of the bucket.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
    BucketLocationConstraint:
      type: string
      enum:
        - EU
        - eu-west-1
        - us-west-1
        - us-west-2
        - ap-south-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-northeast-1
        - sa-east-1
        - cn-north-1
        - eu-central-1
    BucketAlreadyExists: {}
    BucketAlreadyOwnedByYou: {}
    CreateJobResult:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The ID for this job. Amazon S3 generates this ID automatically and returns it after a successful <code>Create Job</code> request.
    LambdaInvokeOperation:
      type: object
      properties:
        FunctionArn:
          $ref: '#/components/schemas/FunctionArnString'
          description: The Amazon Resource Name (ARN) for the Lambda function that the specified job will invoke on every object in the manifest.
      description: Contains the configuration parameters for a <code>Lambda Invoke</code> operation.
    S3CopyObjectOperation:
      type: object
      properties:
        TargetResource:
          $ref: '#/components/schemas/S3BucketArnString'
          description: 'Specifies the destination bucket ARN for the batch copy operation. For example, to copy objects to a bucket named "destinationBucket", set the TargetResource to "arn:aws:s3:::destinationBucket".'
        CannedAccessControlList:
          $ref: '#/components/schemas/S3CannedAccessControlList'
          description: <p/>
        AccessControlGrants:
          $ref: '#/components/schemas/S3GrantList'
          description: <p/>
        MetadataDirective:
          $ref: '#/components/schemas/S3MetadataDirective'
          description: <p/>
        ModifiedSinceConstraint:
          $ref: '#/components/schemas/TimeStamp'
          description: <p/>
        NewObjectMetadata:
          $ref: '#/components/schemas/S3ObjectMetadata'
          description: <p/>
        NewObjectTagging:
          $ref: '#/components/schemas/S3TagSet'
          description: <p/>
        RedirectLocation:
          $ref: '#/components/schemas/NonEmptyMaxLength2048String'
          description: 'Specifies an optional metadata property for website redirects, <code>x-amz-website-redirect-location</code>. Allows webpage redirects if the object is accessed through a website endpoint.'
        RequesterPays:
          $ref: '#/components/schemas/Boolean'
          description: <p/>
        StorageClass:
          $ref: '#/components/schemas/S3StorageClass'
          description: <p/>
        UnModifiedSinceConstraint:
          $ref: '#/components/schemas/TimeStamp'
          description: <p/>
        SSEAwsKmsKeyId:
          $ref: '#/components/schemas/KmsKeyArnString'
          description: <p/>
        TargetKeyPrefix:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: 'Specifies the folder prefix into which you would like the objects to be copied. For example, to copy objects into a folder named "Folder1" in the destination bucket, set the TargetKeyPrefix to "Folder1/".'
        ObjectLockLegalHoldStatus:
          $ref: '#/components/schemas/S3ObjectLockLegalHoldStatus'
          description: The legal hold status to be applied to all objects in the Batch Operations job.
        ObjectLockMode:
          $ref: '#/components/schemas/S3ObjectLockMode'
          description: The retention mode to be applied to all objects in the Batch Operations job.
        ObjectLockRetainUntilDate:
          $ref: '#/components/schemas/TimeStamp'
          description: The date when the applied object retention configuration expires on all objects in the Batch Operations job.
        BucketKeyEnabled:
          $ref: '#/components/schemas/Boolean'
          description: <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using Amazon Web Services KMS (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p> <p>Specifying this header with an <i>object</i> action doesn’t affect <i>bucket-level</i> settings for S3 Bucket Key.</p>
      description: 'Contains the configuration parameters for a PUT Copy object operation. S3 Batch Operations passes every object to the underlying PUT Copy object API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectCOPY.html">PUT Object - Copy</a>.'
    S3SetObjectAclOperation:
      type: object
      properties:
        AccessControlPolicy:
          $ref: '#/components/schemas/S3AccessControlPolicy'
          description: <p/>
      description: 'Contains the configuration parameters for a Set Object ACL operation. S3 Batch Operations passes every object to the underlying PUT Object acl API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUTacl.html">PUT Object acl</a>.'
    S3SetObjectTaggingOperation:
      type: object
      properties:
        TagSet:
          $ref: '#/components/schemas/S3TagSet'
          description: <p/>
      description: 'Contains the configuration parameters for a Set Object Tagging operation. S3 Batch Operations passes every object to the underlying PUT Object tagging API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUTtagging.html">PUT Object tagging</a>.'
    S3DeleteObjectTaggingOperation:
      type: object
      properties: {}
      description: 'Contains no configuration parameters because the DELETE Object tagging API only accepts the bucket name and key name as parameters, which are defined in the job''s manifest.'
    S3InitiateRestoreObjectOperation:
      type: object
      properties:
        ExpirationInDays:
          $ref: '#/components/schemas/S3ExpirationInDays'
          description: '<p>This argument specifies how long the S3 Glacier or S3 Glacier Deep Archive object remains available in Amazon S3. S3 Initiate Restore Object jobs that target S3 Glacier and S3 Glacier Deep Archive objects require <code>ExpirationInDays</code> set to 1 or greater.</p> <p>Conversely, do <i>not</i> set <code>ExpirationInDays</code> when creating S3 Initiate Restore Object jobs that target S3 Intelligent-Tiering Archive Access and Deep Archive Access tier objects. Objects in S3 Intelligent-Tiering archive access tiers are not subject to restore expiry, so specifying <code>ExpirationInDays</code> results in restore request failure.</p> <p>S3 Batch Operations jobs can operate either on S3 Glacier and S3 Glacier Deep Archive storage class objects or on S3 Intelligent-Tiering Archive Access and Deep Archive Access storage tier objects, but not both types in the same job. If you need to restore objects of both types you <i>must</i> create separate Batch Operations jobs. </p>'
        GlacierJobTier:
          $ref: '#/components/schemas/S3GlacierJobTier'
          description: 'S3 Batch Operations supports <code>STANDARD</code> and <code>BULK</code> retrieval tiers, but not the <code>EXPEDITED</code> retrieval tier.'
      description: 'Contains the configuration parameters for an S3 Initiate Restore Object job. S3 Batch Operations passes every object to the underlying POST Object restore API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html#RESTObjectPOSTrestore-restore-request">RestoreObject</a>.'
    S3SetObjectLegalHoldOperation:
      type: object
      required:
        - LegalHold
      properties:
        LegalHold:
          $ref: '#/components/schemas/S3ObjectLockLegalHold'
          description: Contains the Object Lock legal hold status to be applied to all objects in the Batch Operations job.
      description: 'Contains the configuration for an S3 Object Lock legal hold operation that an S3 Batch Operations job passes every object to the underlying <code>PutObjectLegalHold</code> API. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-legal-hold.html">Using S3 Object Lock legal hold with S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.'
    S3SetObjectRetentionOperation:
      type: object
      required:
        - Retention
      properties:
        BypassGovernanceRetention:
          $ref: '#/components/schemas/Boolean'
          description: Indicates if the action should be applied to objects in the Batch Operations job even if they have Object Lock <code> GOVERNANCE</code> type in place.
        Retention:
          $ref: '#/components/schemas/S3Retention'
          description: 'Contains the Object Lock retention mode to be applied to all objects in the Batch Operations job. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-retention-date.html">Using S3 Object Lock retention with S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.'
      description: 'Contains the configuration parameters for the Object Lock retention action for an S3 Batch Operations job. Batch Operations passes every object to the underlying <code>PutObjectRetention</code> API. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-retention-date.html">Using S3 Object Lock retention with S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.'
    S3BucketArnString:
      type: string
      pattern: 'arn:[^:]+:s3:.*'
      minLength: 1
      maxLength: 128
    JobReportFormat:
      type: string
      enum:
        - Report_CSV_20180820
    ReportPrefixString:
      type: string
      minLength: 1
      maxLength: 512
    JobReportScope:
      type: string
      enum:
        - AllTasks
        - FailedTasksOnly
    JobManifestSpec:
      type: object
      required:
        - Format
      properties:
        Format:
          $ref: '#/components/schemas/JobManifestFormat'
          description: Indicates which of the available formats the specified manifest uses.
        Fields:
          $ref: '#/components/schemas/JobManifestFieldList'
          description: 'If the specified manifest object is in the <code>S3BatchOperations_CSV_20180820</code> format, this element describes which columns contain the required data.'
      description: 'Describes the format of a manifest. If the manifest is in CSV format, also describes the columns contained within the manifest.'
    JobManifestLocation:
      type: object
      required:
        - ObjectArn
        - ETag
      properties:
        ObjectArn:
          $ref: '#/components/schemas/S3KeyArnString'
          description: '<p>The Amazon Resource Name (ARN) for a manifest object.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
        ObjectVersionId:
          $ref: '#/components/schemas/S3ObjectVersionId'
          description: The optional version ID to identify a specific version of the manifest object.
        ETag:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: The ETag for the specified manifest object.
      description: Contains the information required to locate a manifest object.
    S3Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKeyString'
          description: <p/>
        Value:
          $ref: '#/components/schemas/TagValueString'
          description: <p/>
      description: <p/>
    TooManyRequestsException: {}
    BadRequestException: {}
    IdempotencyException: {}
    InternalServiceException: {}
    DeleteJobTaggingResult:
      type: object
      properties: {}
    NotFoundException: {}
    DeleteStorageLensConfigurationTaggingResult:
      type: object
      properties: {}
    DescribeJobResult:
      type: object
      properties:
        Job:
          $ref: '#/components/schemas/JobDescriptor'
          description: Contains the configuration parameters and status for the job specified in the <code>Describe Job</code> request.
    GetAccessPointResult:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/AccessPointName'
          description: The name of the specified access point.
        Bucket:
          $ref: '#/components/schemas/BucketName'
          description: The name of the bucket associated with the specified access point.
        NetworkOrigin:
          $ref: '#/components/schemas/NetworkOrigin'
          description: '<p>Indicates whether this access point allows access from the public internet. If <code>VpcConfiguration</code> is specified for this access point, then <code>NetworkOrigin</code> is <code>VPC</code>, and the access point doesn''t allow access from the public internet. Otherwise, <code>NetworkOrigin</code> is <code>Internet</code>, and the access point allows access from the public internet, subject to the access point and bucket access policies.</p> <p>This will always be true for an Amazon S3 on Outposts access point</p>'
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
          description: <p>Contains the virtual private cloud (VPC) configuration for the specified access point.</p> <note> <p>This element is empty if this access point is an Amazon S3 on Outposts access point that is used by other Amazon Web Services.</p> </note>
        PublicAccessBlockConfiguration:
          $ref: '#/components/schemas/PublicAccessBlockConfiguration'
        CreationDate:
          $ref: '#/components/schemas/CreationDate'
          description: The date and time when the specified access point was created.
        Alias:
          $ref: '#/components/schemas/Alias'
          description: The name or alias of the access point.
        AccessPointArn:
          $ref: '#/components/schemas/S3AccessPointArn'
          description: The ARN of the access point.
        Endpoints:
          $ref: '#/components/schemas/Endpoints'
          description: The VPC endpoint for the access point.
    GetAccessPointConfigurationForObjectLambdaResult:
      type: object
      properties:
        Configuration:
          $ref: '#/components/schemas/ObjectLambdaConfiguration'
          description: Object Lambda Access Point configuration document.
    GetAccessPointForObjectLambdaResult:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ObjectLambdaAccessPointName'
          description: The name of the Object Lambda Access Point.
        PublicAccessBlockConfiguration:
          $ref: '#/components/schemas/PublicAccessBlockConfiguration'
          description: 'Configuration to block all public access. This setting is turned on and can not be edited. '
        CreationDate:
          $ref: '#/components/schemas/CreationDate'
          description: The date and time when the specified Object Lambda Access Point was created.
    GetAccessPointPolicyResult:
      type: object
      properties:
        Policy:
          $ref: '#/components/schemas/Policy'
          description: The access point policy associated with the specified access point.
    GetAccessPointPolicyForObjectLambdaResult:
      type: object
      properties:
        Policy:
          $ref: '#/components/schemas/ObjectLambdaPolicy'
          description: Object Lambda Access Point resource policy document.
    GetAccessPointPolicyStatusResult:
      type: object
      properties:
        PolicyStatus:
          $ref: '#/components/schemas/PolicyStatus'
          description: Indicates the current policy status of the specified access point.
    GetAccessPointPolicyStatusForObjectLambdaResult:
      type: object
      properties:
        PolicyStatus:
          $ref: '#/components/schemas/PolicyStatus'
    GetBucketResult:
      type: object
      properties:
        Bucket:
          $ref: '#/components/schemas/BucketName'
          description: The Outposts bucket requested.
        PublicAccessBlockEnabled:
          $ref: '#/components/schemas/PublicAccessBlockEnabled'
          description: <p/>
        CreationDate:
          $ref: '#/components/schemas/CreationDate'
          description: The creation date of the Outposts bucket.
    GetBucketLifecycleConfigurationResult:
      type: object
      properties:
        Rules:
          $ref: '#/components/schemas/LifecycleRules'
          description: Container for the lifecycle rule of the Outposts bucket.
    GetBucketPolicyResult:
      type: object
      properties:
        Policy:
          $ref: '#/components/schemas/Policy'
          description: The policy of the Outposts bucket.
    GetBucketTaggingResult:
      type: object
      required:
        - TagSet
      properties:
        TagSet:
          $ref: '#/components/schemas/S3TagSet'
          description: The tags set of the Outposts bucket.
    GetJobTaggingResult:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/S3TagSet'
          description: The set of tags associated with the S3 Batch Operations job.
    GetPublicAccessBlockOutput:
      type: object
      properties:
        PublicAccessBlockConfiguration:
          $ref: '#/components/schemas/PublicAccessBlockConfiguration'
          description: The <code>PublicAccessBlock</code> configuration currently in effect for this account.
    NoSuchPublicAccessBlockConfiguration: {}
    GetStorageLensConfigurationResult:
      type: object
      properties:
        StorageLensConfiguration:
          $ref: '#/components/schemas/StorageLensConfiguration'
          description: The S3 Storage Lens configuration requested.
    GetStorageLensConfigurationTaggingResult:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/StorageLensTags'
          description: The tags of S3 Storage Lens configuration requested.
    ListAccessPointsResult:
      type: object
      properties:
        AccessPointList:
          $ref: '#/components/schemas/AccessPointList'
          description: Contains identification and configuration information for one or more access points associated with the specified bucket.
        NextToken:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: 'If the specified bucket has more access points than can be returned in one call to this API, this field contains a continuation token that you can provide in subsequent calls to this API to retrieve additional access points.'
    ListAccessPointsForObjectLambdaResult:
      type: object
      properties:
        ObjectLambdaAccessPointList:
          $ref: '#/components/schemas/ObjectLambdaAccessPointList'
          description: Returns list of Object Lambda Access Points.
        NextToken:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: 'If the list has more access points than can be returned in one call to this API, this field contains a continuation token that you can provide in subsequent calls to this API to retrieve additional access points.'
    ListJobsResult:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/StringForNextToken'
          description: 'If the <code>List Jobs</code> request produced more than the maximum number of results, you can pass this value into a subsequent <code>List Jobs</code> request in order to retrieve the next page of results.'
        Jobs:
          $ref: '#/components/schemas/JobListDescriptorList'
          description: The list of current jobs and jobs that have ended within the last 30 days.
    JobStatus:
      type: string
      enum:
        - Active
        - Cancelled
        - Cancelling
        - Complete
        - Completing
        - Failed
        - Failing
        - New
        - Paused
        - Pausing
        - Preparing
        - Ready
        - Suspended
    InvalidRequestException: {}
    InvalidNextTokenException: {}
    ListRegionalBucketsResult:
      type: object
      properties:
        RegionalBucketList:
          $ref: '#/components/schemas/RegionalBucketList'
          description: <p/>
        NextToken:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: ' <code>NextToken</code> is sent when <code>isTruncated</code> is true, which means there are more buckets that can be listed. The next list requests to Amazon S3 can be continued with this <code>NextToken</code>. <code>NextToken</code> is obfuscated and is not a real key.'
    ListStorageLensConfigurationsResult:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/ContinuationToken'
          description: 'If the request produced more than the maximum number of S3 Storage Lens configuration results, you can pass this value into a subsequent request to retrieve the next page of results.'
        StorageLensConfigurationList:
          $ref: '#/components/schemas/StorageLensConfigurationList'
          description: A list of S3 Storage Lens configurations.
    LifecycleRules:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LifecycleRule'
          - xml:
              name: Rule
    S3TagSet:
      type: array
      items:
        $ref: '#/components/schemas/S3Tag'
    PutJobTaggingResult:
      type: object
      properties: {}
    TooManyTagsException: {}
    ConfigId:
      type: string
      pattern: '[a-zA-Z0-9\-\_\.]+'
      minLength: 1
      maxLength: 64
    AccountLevel:
      type: object
      required:
        - BucketLevel
      properties:
        ActivityMetrics:
          $ref: '#/components/schemas/ActivityMetrics'
          description: A container for the S3 Storage Lens activity metrics.
        BucketLevel:
          $ref: '#/components/schemas/BucketLevel'
          description: A container for the S3 Storage Lens bucket-level configuration.
      description: A container for the account level Amazon S3 Storage Lens configuration.
    Include:
      type: object
      properties:
        Buckets:
          $ref: '#/components/schemas/Buckets'
          description: A container for the S3 Storage Lens bucket includes.
        Regions:
          $ref: '#/components/schemas/Regions'
          description: A container for the S3 Storage Lens Region includes.
      description: A container for what Amazon S3 Storage Lens configuration includes.
    Exclude:
      type: object
      properties:
        Buckets:
          $ref: '#/components/schemas/Buckets'
          description: A container for the S3 Storage Lens bucket excludes.
        Regions:
          $ref: '#/components/schemas/Regions'
          description: A container for the S3 Storage Lens Region excludes.
      description: A container for what Amazon S3 Storage Lens will exclude.
    StorageLensDataExport:
      type: object
      required:
        - S3BucketDestination
      properties:
        S3BucketDestination:
          $ref: '#/components/schemas/S3BucketDestination'
          description: <p>A container for the bucket where the S3 Storage Lens metrics export will be located.</p> <note> <p>This bucket must be located in the same Region as the storage lens configuration. </p> </note>
      description: 'A container to specify the properties of your S3 Storage Lens metrics export, including the destination, schema, and format.'
    IsEnabled:
      type: boolean
    StorageLensAwsOrg:
      type: object
      required:
        - Arn
      properties:
        Arn:
          $ref: '#/components/schemas/AwsOrgArn'
          description: 'A container for the Amazon Resource Name (ARN) of the Amazon Web Services organization. This property is read-only and follows the following format: <code> arn:aws:organizations:<i>us-east-1</i>:<i>example-account-id</i>:organization/<i>o-ex2l495dck</i> </code> '
      description: The Amazon Web Services organization for your S3 Storage Lens.
    StorageLensArn:
      type: string
      pattern: 'arn:[a-z\-]+:s3:[a-z0-9\-]+:\d{12}:storage\-lens\/.*'
      minLength: 1
      maxLength: 1024
    StorageLensTag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKeyString'
          description: <p/>
        Value:
          $ref: '#/components/schemas/TagValueString'
          description: <p/>
      description: <p/>
    PutStorageLensConfigurationTaggingResult:
      type: object
      properties: {}
    UpdateJobPriorityResult:
      type: object
      required:
        - JobId
        - Priority
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The ID for the job whose priority Amazon S3 updated.
        Priority:
          $ref: '#/components/schemas/JobPriority'
          description: The new priority assigned to the specified job.
    UpdateJobStatusResult:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The ID for the job whose status was updated.
        Status:
          $ref: '#/components/schemas/JobStatus'
          description: The current status for the specified job.
        StatusUpdateReason:
          $ref: '#/components/schemas/JobStatusUpdateReason'
          description: The reason that the specified job's status was updated.
    JobStatusException: {}
    DaysAfterInitiation:
      type: integer
    AbortIncompleteMultipartUpload:
      type: object
      properties:
        DaysAfterInitiation:
          $ref: '#/components/schemas/DaysAfterInitiation'
          description: Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload to the Outposts bucket.
      description: The container for abort incomplete multipart upload
    AccessPointName:
      type: string
      minLength: 3
      maxLength: 63
    NetworkOrigin:
      type: string
      enum:
        - Internet
        - VPC
    VpcConfiguration:
      type: object
      required:
        - VpcId
      properties:
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: 'If this field is specified, this access point will only allow connections from the specified VPC ID.'
      description: The virtual private cloud (VPC) configuration for an access point.
    BucketName:
      type: string
      minLength: 3
      maxLength: 255
    S3AccessPointArn:
      type: string
      minLength: 4
      maxLength: 128
    Alias:
      type: string
      pattern: '^[0-9a-z\\-]{63}'
      maxLength: 63
    AccessPoint:
      type: object
      required:
        - Name
        - NetworkOrigin
        - Bucket
      properties:
        Name:
          $ref: '#/components/schemas/AccessPointName'
          description: The name of this access point.
        NetworkOrigin:
          $ref: '#/components/schemas/NetworkOrigin'
          description: 'Indicates whether this access point allows access from the public internet. If <code>VpcConfiguration</code> is specified for this access point, then <code>NetworkOrigin</code> is <code>VPC</code>, and the access point doesn''t allow access from the public internet. Otherwise, <code>NetworkOrigin</code> is <code>Internet</code>, and the access point allows access from the public internet, subject to the access point and bucket access policies.'
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
          description: '<p>The virtual private cloud (VPC) configuration for this access point, if one exists.</p> <note> <p>This element is empty if this access point is an Amazon S3 on Outposts access point that is used by other Amazon Web Services.</p> </note>'
        Bucket:
          $ref: '#/components/schemas/BucketName'
          description: The name of the bucket associated with this access point.
        AccessPointArn:
          $ref: '#/components/schemas/S3AccessPointArn'
          description: The ARN for the access point.
        Alias:
          $ref: '#/components/schemas/Alias'
          description: The name or alias of the access point.
      description: An access point used to access a bucket.
    AccessPointList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AccessPoint'
          - xml:
              name: AccessPoint
    AccountId:
      type: string
      pattern: '^\d{12}$'
      maxLength: 64
    ActivityMetrics:
      type: object
      properties:
        IsEnabled:
          $ref: '#/components/schemas/IsEnabled'
          description: A container for whether the activity metrics are enabled.
      description: A container for the activity metrics.
    BucketLevel:
      type: object
      properties:
        ActivityMetrics:
          $ref: '#/components/schemas/ActivityMetrics'
          description: A container for the bucket-level activity metrics for Amazon S3 Storage Lens
        PrefixLevel:
          $ref: '#/components/schemas/PrefixLevel'
          description: A container for the bucket-level prefix-level metrics for S3 Storage Lens
      description: A container for the bucket-level configuration.
    FunctionArnString:
      type: string
      pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
      minLength: 1
      maxLength: 1024
    AwsLambdaTransformationPayload:
      type: string
    AwsLambdaTransformation:
      type: object
      required:
        - FunctionArn
      properties:
        FunctionArn:
          $ref: '#/components/schemas/FunctionArnString'
          description: The Amazon Resource Name (ARN) of the Lambda function.
        FunctionPayload:
          $ref: '#/components/schemas/AwsLambdaTransformationPayload'
          description: Additional JSON that provides supplemental data to the Lambda function used to transform objects.
      description: Lambda function used to transform objects through an Object Lambda Access Point.
    AwsOrgArn:
      type: string
      pattern: 'arn:[a-z\-]+:organizations::\d{12}:organization\/o-[a-z0-9]{10,32}'
      minLength: 1
      maxLength: 1024
    BucketCannedACL:
      type: string
      enum:
        - private
        - public-read
        - public-read-write
        - authenticated-read
    PrefixLevel:
      type: object
      required:
        - StorageMetrics
      properties:
        StorageMetrics:
          $ref: '#/components/schemas/PrefixLevelStorageMetrics'
          description: A container for the prefix-level storage metrics for S3 Storage Lens.
      description: A container for the prefix-level configuration.
    Buckets:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/S3BucketArnString'
          - xml:
              name: Arn
    ConfirmRemoveSelfBucketAccess:
      type: boolean
    ConfirmationRequired:
      type: boolean
    ContinuationToken:
      type: string
    ObjectLambdaAccessPointName:
      type: string
      pattern: '^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$'
      minLength: 3
      maxLength: 45
    ObjectLambdaConfiguration:
      type: object
      required:
        - SupportingAccessPoint
        - TransformationConfigurations
      properties:
        SupportingAccessPoint:
          $ref: '#/components/schemas/ObjectLambdaSupportingAccessPointArn'
          description: Standard access point associated with the Object Lambda Access Point.
        CloudWatchMetricsEnabled:
          $ref: '#/components/schemas/Boolean'
          description: A container for whether the CloudWatch metrics configuration is enabled.
        AllowedFeatures:
          $ref: '#/components/schemas/ObjectLambdaAllowedFeaturesList'
          description: A container for allowed features. Valid inputs are <code>GetObject-Range</code> and <code>GetObject-PartNumber</code>.
        TransformationConfigurations:
          $ref: '#/components/schemas/ObjectLambdaTransformationConfigurationsList'
          description: A container for transformation configurations for an Object Lambda Access Point.
      description: A configuration used when creating an Object Lambda Access Point.
    CreateAccessPointForObjectLambdaRequest:
      type: object
      required:
        - Configuration
      title: CreateAccessPointForObjectLambdaRequest
      properties:
        Configuration:
          $ref: '#/components/schemas/ObjectLambdaConfiguration'
          description: Object Lambda Access Point configuration as a JSON document.
    ObjectLambdaAccessPointArn:
      type: string
      pattern: 'arn:[^:]+:s3-object-lambda:[^:]*:\d{12}:accesspoint/.*'
      minLength: 1
      maxLength: 2048
    PublicAccessBlockConfiguration:
      type: object
      properties:
        BlockPublicAcls:
          $ref: '#/components/schemas/Setting'
          description: '<p>Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.</p> </li> <li> <p>PUT Object calls fail if the request includes a public ACL.</p> </li> <li> <p>PUT Bucket calls fail if the request includes a public ACL.</p> </li> </ul> <p>Enabling this setting doesn''t affect existing policies or ACLs.</p> <p>This is not supported for Amazon S3 on Outposts.</p>'
        IgnorePublicAcls:
          $ref: '#/components/schemas/Setting'
          description: <p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p> <p>This is not supported for Amazon S3 on Outposts.</p>
        BlockPublicPolicy:
          $ref: '#/components/schemas/Setting'
          description: <p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Enabling this setting doesn't affect existing bucket policies.</p> <p>This is not supported for Amazon S3 on Outposts.</p>
        RestrictPublicBuckets:
          $ref: '#/components/schemas/Setting'
          description: '<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> restricts access to buckets with public policies to only Amazon Web Service principals and authorized users within this account.</p> <p>Enabling this setting doesn''t affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.</p> <p>This is not supported for Amazon S3 on Outposts.</p>'
      description: '<p>The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 account. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>.</p> <p>This is not supported for Amazon S3 on Outposts.</p>'
    CreateAccessPointRequest:
      type: object
      required:
        - Bucket
      title: CreateAccessPointRequest
      properties:
        Bucket:
          $ref: '#/components/schemas/BucketName'
          description: '<p>The name of the bucket that you want to associate this access point with.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>'
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
          description: '<p>If you include this field, Amazon S3 restricts access to this access point to requests from the specified virtual private cloud (VPC).</p> <note> <p>This is required for creating an access point for Amazon S3 on Outposts buckets.</p> </note>'
        PublicAccessBlockConfiguration:
          $ref: '#/components/schemas/PublicAccessBlockConfiguration'
          description: ' The <code>PublicAccessBlock</code> configuration that you want to apply to the access point. '
    CreateBucketConfiguration:
      type: object
      properties:
        LocationConstraint:
          $ref: '#/components/schemas/BucketLocationConstraint'
          description: '<p>Specifies the Region where the bucket will be created. If you are creating a bucket on the US East (N. Virginia) Region (us-east-1), you do not need to specify the location. </p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>'
      description: <p>The container for the bucket configuration.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>
    GrantFullControl:
      type: string
    GrantRead:
      type: string
    GrantReadACP:
      type: string
    GrantWrite:
      type: string
    GrantWriteACP:
      type: string
    ObjectLockEnabledForBucket:
      type: boolean
    NonEmptyMaxLength64String:
      type: string
      minLength: 1
      maxLength: 64
    CreateBucketRequest:
      type: object
      title: CreateBucketRequest
      properties:
        CreateBucketConfiguration:
          $ref: '#/components/schemas/CreateBucketConfiguration'
          description: <p>The configuration information for the bucket.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>
      xml:
        namespace: 'http://awss3control.amazonaws.com/doc/2018-08-20/'
    Location:
      type: string
    S3RegionalBucketArn:
      type: string
      minLength: 4
      maxLength: 128
    JobOperation:
      type: object
      properties:
        LambdaInvoke:
          $ref: '#/components/schemas/LambdaInvokeOperation'
          description: Directs the specified job to invoke an Lambda function on every object in the manifest.
        S3PutObjectCopy:
          $ref: '#/components/schemas/S3CopyObjectOperation'
          description: Directs the specified job to run a PUT Copy object call on every object in the manifest.
        S3PutObjectAcl:
          $ref: '#/components/schemas/S3SetObjectAclOperation'
          description: Directs the specified job to run a PUT Object acl call on every object in the manifest.
        S3PutObjectTagging:
          $ref: '#/components/schemas/S3SetObjectTaggingOperation'
          description: Directs the specified job to run a PUT Object tagging call on every object in the manifest.
        S3DeleteObjectTagging:
          $ref: '#/components/schemas/S3DeleteObjectTaggingOperation'
          description: Directs the specified job to execute a DELETE Object tagging call on every object in the manifest.
        S3InitiateRestoreObject:
          $ref: '#/components/schemas/S3InitiateRestoreObjectOperation'
          description: Directs the specified job to initiate restore requests for every archived object in the manifest.
        S3PutObjectLegalHold:
          $ref: '#/components/schemas/S3SetObjectLegalHoldOperation'
        S3PutObjectRetention:
          $ref: '#/components/schemas/S3SetObjectRetentionOperation'
      description: 'The operation that you want this job to perform on every object listed in the manifest. For more information about the available operations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-operations.html">Operations</a> in the <i>Amazon S3 User Guide</i>.'
    JobReport:
      type: object
      required:
        - Enabled
      properties:
        Bucket:
          $ref: '#/components/schemas/S3BucketArnString'
          description: The Amazon Resource Name (ARN) for the bucket where specified job-completion report will be stored.
        Format:
          $ref: '#/components/schemas/JobReportFormat'
          description: The format of the specified job-completion report.
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether the specified job will generate a job-completion report.
        Prefix:
          $ref: '#/components/schemas/ReportPrefixString'
          description: An optional prefix to describe where in the specified bucket the job-completion report will be stored. Amazon S3 stores the job-completion report at <code>&lt;prefix&gt;/job-&lt;job-id&gt;/report.json</code>.
        ReportScope:
          $ref: '#/components/schemas/JobReportScope'
          description: Indicates whether the job-completion report will include details of all tasks or only failed tasks.
      description: Contains the configuration parameters for a job-completion report.
    JobManifest:
      type: object
      required:
        - Spec
        - Location
      properties:
        Spec:
          $ref: '#/components/schemas/JobManifestSpec'
          description: 'Describes the format of the specified job''s manifest. If the manifest is in CSV format, also describes the columns contained within the manifest.'
        Location:
          $ref: '#/components/schemas/JobManifestLocation'
          description: Contains the information required to locate the specified job's manifest.
      description: Contains the configuration information for a job's manifest.
    NonEmptyMaxLength256String:
      type: string
      minLength: 1
      maxLength: 256
    JobPriority:
      type: integer
      minimum: 0
      maximum: 2147483647
    IAMRoleArn:
      type: string
      pattern: 'arn:[^:]+:iam::\d{12}:role/.*'
      minLength: 1
      maxLength: 2048
    CreateJobRequest:
      type: object
      required:
        - Operation
        - Report
        - ClientRequestToken
        - Manifest
        - Priority
        - RoleArn
      title: CreateJobRequest
      properties:
        ConfirmationRequired:
          $ref: '#/components/schemas/ConfirmationRequired'
          description: Indicates whether confirmation is required before Amazon S3 runs the job. Confirmation is only required for jobs created through the Amazon S3 console.
        Operation:
          $ref: '#/components/schemas/JobOperation'
          description: 'The action that you want this job to perform on every object listed in the manifest. For more information about the available actions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-actions.html">Operations</a> in the <i>Amazon S3 User Guide</i>.'
        Report:
          $ref: '#/components/schemas/JobReport'
          description: Configuration parameters for the optional job-completion report.
        ClientRequestToken:
          $ref: '#/components/schemas/NonEmptyMaxLength64String'
          description: An idempotency token to ensure that you don't accidentally submit the same request twice. You can use any string up to the maximum length.
        Manifest:
          $ref: '#/components/schemas/JobManifest'
          description: Configuration parameters for the manifest.
        Description:
          $ref: '#/components/schemas/NonEmptyMaxLength256String'
          description: A description for this job. You can use any string within the permitted length. Descriptions don't need to be unique and can be used for multiple jobs.
        Priority:
          $ref: '#/components/schemas/JobPriority'
          description: The numerical priority for this job. Higher numbers indicate higher priority.
        RoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: The Amazon Resource Name (ARN) for the Identity and Access Management (IAM) role that Batch Operations will use to run this job's action on every object in the manifest.
        Tags:
          $ref: '#/components/schemas/S3TagSet'
          description: 'A set of tags to associate with the S3 Batch Operations job. This is an optional parameter. '
    JobId:
      type: string
      pattern: '[a-zA-Z0-9\-\_]+'
      minLength: 5
      maxLength: 36
    CreationDate:
      type: string
      format: date-time
    Date:
      type: string
      format: date-time
    Days:
      type: integer
    DeleteAccessPointForObjectLambdaRequest:
      type: object
      title: DeleteAccessPointForObjectLambdaRequest
      properties: {}
    DeleteAccessPointPolicyForObjectLambdaRequest:
      type: object
      title: DeleteAccessPointPolicyForObjectLambdaRequest
      properties: {}
    DeleteAccessPointPolicyRequest:
      type: object
      title: DeleteAccessPointPolicyRequest
      properties: {}
    DeleteAccessPointRequest:
      type: object
      title: DeleteAccessPointRequest
      properties: {}
    DeleteBucketLifecycleConfigurationRequest:
      type: object
      title: DeleteBucketLifecycleConfigurationRequest
      properties: {}
    DeleteBucketPolicyRequest:
      type: object
      title: DeleteBucketPolicyRequest
      properties: {}
    DeleteBucketRequest:
      type: object
      title: DeleteBucketRequest
      properties: {}
    DeleteBucketTaggingRequest:
      type: object
      title: DeleteBucketTaggingRequest
      properties: {}
    DeleteJobTaggingRequest:
      type: object
      title: DeleteJobTaggingRequest
      properties: {}
    DeletePublicAccessBlockRequest:
      type: object
      title: DeletePublicAccessBlockRequest
      properties: {}
    DeleteStorageLensConfigurationRequest:
      type: object
      title: DeleteStorageLensConfigurationRequest
      properties: {}
    DeleteStorageLensConfigurationTaggingRequest:
      type: object
      title: DeleteStorageLensConfigurationTaggingRequest
      properties: {}
    DescribeJobRequest:
      type: object
      title: DescribeJobRequest
      properties: {}
    JobDescriptor:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The ID for the specified job.
        ConfirmationRequired:
          $ref: '#/components/schemas/ConfirmationRequired'
          description: Indicates whether confirmation is required before Amazon S3 begins running the specified job. Confirmation is required only for jobs created through the Amazon S3 console.
        Description:
          $ref: '#/components/schemas/NonEmptyMaxLength256String'
          description: 'The description for this job, if one was provided in this job''s <code>Create Job</code> request.'
        JobArn:
          $ref: '#/components/schemas/JobArn'
          description: The Amazon Resource Name (ARN) for this job.
        Status:
          $ref: '#/components/schemas/JobStatus'
          description: The current status of the specified job.
        Manifest:
          $ref: '#/components/schemas/JobManifest'
          description: The configuration information for the specified job's manifest object.
        Operation:
          $ref: '#/components/schemas/JobOperation'
          description: The operation that the specified job is configured to run on the objects listed in the manifest.
        Priority:
          $ref: '#/components/schemas/JobPriority'
          description: The priority of the specified job.
        ProgressSummary:
          $ref: '#/components/schemas/JobProgressSummary'
          description: 'Describes the total number of tasks that the specified job has run, the number of tasks that succeeded, and the number of tasks that failed.'
        StatusUpdateReason:
          $ref: '#/components/schemas/JobStatusUpdateReason'
          description: The reason for updating the job.
        FailureReasons:
          $ref: '#/components/schemas/JobFailureList'
          description: 'If the specified job failed, this field contains information describing the failure.'
        Report:
          $ref: '#/components/schemas/JobReport'
          description: Contains the configuration information for the job-completion report if you requested one in the <code>Create Job</code> request.
        CreationTime:
          $ref: '#/components/schemas/JobCreationTime'
          description: A timestamp indicating when this job was created.
        TerminationDate:
          $ref: '#/components/schemas/JobTerminationDate'
          description: 'A timestamp indicating when this job terminated. A job''s termination date is the date and time when it succeeded, failed, or was canceled.'
        RoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: The Amazon Resource Name (ARN) for the Identity and Access Management (IAM) role assigned to run the tasks for this job.
        SuspendedDate:
          $ref: '#/components/schemas/SuspendedDate'
          description: 'The timestamp when this job was suspended, if it has been suspended.'
        SuspendedCause:
          $ref: '#/components/schemas/SuspendedCause'
          description: 'The reason why the specified job was suspended. A job is only suspended if you create it through the Amazon S3 console. When you create the job, it enters the <code>Suspended</code> state to await confirmation before running. After you confirm the job, it automatically exits the <code>Suspended</code> state.'
      description: A container element for the job configuration and status information returned by a <code>Describe Job</code> request.
    NonEmptyMaxLength1024String:
      type: string
      minLength: 1
      maxLength: 1024
    Endpoints:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/NonEmptyMaxLength1024String'
    Regions:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/S3AWSRegion'
          - xml:
              name: Region
    ExpirationStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    ExpiredObjectDeleteMarker:
      type: boolean
    Format:
      type: string
      enum:
        - CSV
        - Parquet
    GetAccessPointConfigurationForObjectLambdaRequest:
      type: object
      title: GetAccessPointConfigurationForObjectLambdaRequest
      properties: {}
    GetAccessPointForObjectLambdaRequest:
      type: object
      title: GetAccessPointForObjectLambdaRequest
      properties: {}
    GetAccessPointPolicyForObjectLambdaRequest:
      type: object
      title: GetAccessPointPolicyForObjectLambdaRequest
      properties: {}
    ObjectLambdaPolicy:
      type: string
    GetAccessPointPolicyRequest:
      type: object
      title: GetAccessPointPolicyRequest
      properties: {}
    Policy:
      type: string
    GetAccessPointPolicyStatusForObjectLambdaRequest:
      type: object
      title: GetAccessPointPolicyStatusForObjectLambdaRequest
      properties: {}
    PolicyStatus:
      type: object
      properties:
        IsPublic:
          $ref: '#/components/schemas/IsPublic'
          description: <p/>
      description: 'Indicates whether this access point policy is public. For more information about how Amazon S3 evaluates policies to determine whether they are public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>. '
    GetAccessPointPolicyStatusRequest:
      type: object
      title: GetAccessPointPolicyStatusRequest
      properties: {}
    GetAccessPointRequest:
      type: object
      title: GetAccessPointRequest
      properties: {}
    GetBucketLifecycleConfigurationRequest:
      type: object
      title: GetBucketLifecycleConfigurationRequest
      properties: {}
    GetBucketPolicyRequest:
      type: object
      title: GetBucketPolicyRequest
      properties: {}
    GetBucketRequest:
      type: object
      title: GetBucketRequest
      properties: {}
    PublicAccessBlockEnabled:
      type: boolean
    GetBucketTaggingRequest:
      type: object
      title: GetBucketTaggingRequest
      properties: {}
    GetJobTaggingRequest:
      type: object
      title: GetJobTaggingRequest
      properties: {}
    GetPublicAccessBlockRequest:
      type: object
      title: GetPublicAccessBlockRequest
      properties: {}
    GetStorageLensConfigurationRequest:
      type: object
      title: GetStorageLensConfigurationRequest
      properties: {}
    StorageLensConfiguration:
      type: object
      required:
        - Id
        - AccountLevel
        - IsEnabled
      properties:
        Id:
          $ref: '#/components/schemas/ConfigId'
          description: A container for the Amazon S3 Storage Lens configuration ID.
        AccountLevel:
          $ref: '#/components/schemas/AccountLevel'
          description: A container for all the account-level configurations of your S3 Storage Lens configuration.
        Include:
          $ref: '#/components/schemas/Include'
          description: 'A container for what is included in this configuration. This container can only be valid if there is no <code>Exclude</code> container submitted, and it''s not empty. '
        Exclude:
          $ref: '#/components/schemas/Exclude'
          description: 'A container for what is excluded in this configuration. This container can only be valid if there is no <code>Include</code> container submitted, and it''s not empty. '
        DataExport:
          $ref: '#/components/schemas/StorageLensDataExport'
          description: 'A container to specify the properties of your S3 Storage Lens metrics export including, the destination, schema and format.'
        IsEnabled:
          $ref: '#/components/schemas/IsEnabled'
          description: A container for whether the S3 Storage Lens configuration is enabled.
        AwsOrg:
          $ref: '#/components/schemas/StorageLensAwsOrg'
          description: A container for the Amazon Web Services organization for this S3 Storage Lens configuration.
        StorageLensArn:
          $ref: '#/components/schemas/StorageLensArn'
          description: 'The Amazon Resource Name (ARN) of the S3 Storage Lens configuration. This property is read-only and follows the following format: <code> arn:aws:s3:<i>us-east-1</i>:<i>example-account-id</i>:storage-lens/<i>your-dashboard-name</i> </code> '
      description: A container for the Amazon S3 Storage Lens configuration.
    GetStorageLensConfigurationTaggingRequest:
      type: object
      title: GetStorageLensConfigurationTaggingRequest
      properties: {}
    StorageLensTags:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/StorageLensTag'
          - xml:
              name: Tag
    ID:
      type: string
    IsPublic:
      type: boolean
    JobArn:
      type: string
      pattern: 'arn:[^:]+:s3:[a-zA-Z0-9\-]+:\d{12}:job\/.*'
      minLength: 1
      maxLength: 1024
    JobCreationTime:
      type: string
      format: date-time
    JobProgressSummary:
      type: object
      properties:
        TotalNumberOfTasks:
          $ref: '#/components/schemas/JobTotalNumberOfTasks'
          description: <p/>
        NumberOfTasksSucceeded:
          $ref: '#/components/schemas/JobNumberOfTasksSucceeded'
          description: <p/>
        NumberOfTasksFailed:
          $ref: '#/components/schemas/JobNumberOfTasksFailed'
          description: <p/>
      description: 'Describes the total number of tasks that the specified job has started, the number of tasks that succeeded, and the number of tasks that failed.'
    JobStatusUpdateReason:
      type: string
      minLength: 1
      maxLength: 256
    JobFailureList:
      type: array
      items:
        $ref: '#/components/schemas/JobFailure'
    JobTerminationDate:
      type: string
      format: date-time
    SuspendedDate:
      type: string
      format: date-time
    SuspendedCause:
      type: string
      minLength: 1
      maxLength: 1024
    JobFailureCode:
      type: string
      minLength: 1
      maxLength: 64
    JobFailureReason:
      type: string
      minLength: 1
      maxLength: 256
    JobFailure:
      type: object
      properties:
        FailureCode:
          $ref: '#/components/schemas/JobFailureCode'
          description: 'The failure code, if any, for the specified job.'
        FailureReason:
          $ref: '#/components/schemas/JobFailureReason'
          description: 'The failure reason, if any, for the specified job.'
      description: 'If this job failed, this element indicates why the job failed.'
    OperationName:
      type: string
      enum:
        - LambdaInvoke
        - S3PutObjectCopy
        - S3PutObjectAcl
        - S3PutObjectTagging
        - S3DeleteObjectTagging
        - S3InitiateRestoreObject
        - S3PutObjectLegalHold
        - S3PutObjectRetention
    JobListDescriptor:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The ID for the specified job.
        Description:
          $ref: '#/components/schemas/NonEmptyMaxLength256String'
          description: The user-specified description that was included in the specified job's <code>Create Job</code> request.
        Operation:
          $ref: '#/components/schemas/OperationName'
          description: The operation that the specified job is configured to run on every object listed in the manifest.
        Priority:
          $ref: '#/components/schemas/JobPriority'
          description: The current priority for the specified job.
        Status:
          $ref: '#/components/schemas/JobStatus'
          description: The specified job's current status.
        CreationTime:
          $ref: '#/components/schemas/JobCreationTime'
          description: A timestamp indicating when the specified job was created.
        TerminationDate:
          $ref: '#/components/schemas/JobTerminationDate'
          description: 'A timestamp indicating when the specified job terminated. A job''s termination date is the date and time when it succeeded, failed, or was canceled.'
        ProgressSummary:
          $ref: '#/components/schemas/JobProgressSummary'
          description: 'Describes the total number of tasks that the specified job has run, the number of tasks that succeeded, and the number of tasks that failed.'
      description: Contains the configuration and status information for a single job retrieved as part of a job list.
    JobListDescriptorList:
      type: array
      items:
        $ref: '#/components/schemas/JobListDescriptor'
    JobManifestFieldName:
      type: string
      enum:
        - Ignore
        - Bucket
        - Key
        - VersionId
    JobManifestFieldList:
      type: array
      items:
        $ref: '#/components/schemas/JobManifestFieldName'
    JobManifestFormat:
      type: string
      enum:
        - S3BatchOperations_CSV_20180820
        - S3InventoryReport_CSV_20161130
    S3KeyArnString:
      type: string
      pattern: 'arn:[^:]+:s3:.*'
      minLength: 1
      maxLength: 2000
    S3ObjectVersionId:
      type: string
      minLength: 1
      maxLength: 2000
    JobNumberOfTasksFailed:
      type: integer
      minimum: 0
    JobNumberOfTasksSucceeded:
      type: integer
      minimum: 0
    JobTotalNumberOfTasks:
      type: integer
      minimum: 0
    JobStatusList:
      type: array
      items:
        $ref: '#/components/schemas/JobStatus'
    KmsKeyArnString:
      type: string
      minLength: 1
      maxLength: 2000
    LifecycleConfiguration:
      type: object
      properties:
        Rules:
          $ref: '#/components/schemas/LifecycleRules'
          description: 'A lifecycle rule for individual objects in an Outposts bucket. '
      description: The container for the Outposts bucket lifecycle configuration.
    LifecycleExpiration:
      type: object
      properties:
        Date:
          $ref: '#/components/schemas/Date'
          description: Indicates at what date the object is to be deleted. Should be in GMT ISO 8601 format.
        Days:
          $ref: '#/components/schemas/Days'
          description: 'Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.'
        ExpiredObjectDeleteMarker:
          $ref: '#/components/schemas/ExpiredObjectDeleteMarker'
          description: 'Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired. If set to false, the policy takes no action. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.'
      description: The container of the Outposts bucket lifecycle expiration.
    LifecycleRuleFilter:
      type: object
      properties:
        Prefix:
          $ref: '#/components/schemas/Prefix'
          description: '<p>Prefix identifying one or more objects to which the rule applies.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
        Tag:
          $ref: '#/components/schemas/S3Tag'
        And:
          $ref: '#/components/schemas/LifecycleRuleAndOperator'
          description: The container for the <code>AND</code> condition for the lifecycle rule.
      description: The container for the filter of the lifecycle rule.
    TransitionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Transition'
          - xml:
              name: Transition
    NoncurrentVersionTransitionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NoncurrentVersionTransition'
          - xml:
              name: NoncurrentVersionTransition
    NoncurrentVersionExpiration:
      type: object
      properties:
        NoncurrentDays:
          $ref: '#/components/schemas/Days'
          description: 'Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations">How Amazon S3 Calculates When an Object Became Noncurrent</a> in the <i>Amazon S3 User Guide</i>.'
      description: The container of the noncurrent version expiration.
    LifecycleRule:
      type: object
      required:
        - Status
      properties:
        Expiration:
          $ref: '#/components/schemas/LifecycleExpiration'
          description: 'Specifies the expiration for the lifecycle of the object in the form of date, days and, whether the object has a delete marker.'
        ID:
          $ref: '#/components/schemas/ID'
          description: Unique identifier for the rule. The value cannot be longer than 255 characters.
        Filter:
          $ref: '#/components/schemas/LifecycleRuleFilter'
          description: The container for the filter of lifecycle rule.
        Status:
          $ref: '#/components/schemas/ExpirationStatus'
          description: 'If ''Enabled'', the rule is currently being applied. If ''Disabled'', the rule is not currently being applied.'
        Transitions:
          $ref: '#/components/schemas/TransitionList'
          description: <p>Specifies when an Amazon S3 object transitions to a specified storage class.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>
        NoncurrentVersionTransitions:
          $ref: '#/components/schemas/NoncurrentVersionTransitionList'
          description: '<p> Specifies the transition rule for the lifecycle rule that describes when noncurrent objects transition to a specific storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to a specific storage class at a set period in the object''s lifetime. </p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>'
        NoncurrentVersionExpiration:
          $ref: '#/components/schemas/NoncurrentVersionExpiration'
          description: <p>The noncurrent version expiration of the lifecycle rule.</p> <note> <p>This is not supported by Amazon S3 on Outposts buckets.</p> </note>
        AbortIncompleteMultipartUpload:
          $ref: '#/components/schemas/AbortIncompleteMultipartUpload'
          description: 'Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 waits before permanently removing all parts of the upload. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config"> Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a> in the <i>Amazon S3 User Guide</i>.'
      description: The container for the Outposts bucket lifecycle rule.
    Prefix:
      type: string
    LifecycleRuleAndOperator:
      type: object
      properties:
        Prefix:
          $ref: '#/components/schemas/Prefix'
          description: Prefix identifying one or more objects to which the rule applies.
        Tags:
          $ref: '#/components/schemas/S3TagSet'
          description: All of these tags must exist in the object's tag set in order for the rule to apply.
      description: The container for the Outposts bucket lifecycle rule and operator.
    MaxResults:
      type: integer
      minimum: 0
      maximum: 1000
    ListAccessPointsForObjectLambdaRequest:
      type: object
      title: ListAccessPointsForObjectLambdaRequest
      properties: {}
    ObjectLambdaAccessPointList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ObjectLambdaAccessPoint'
          - xml:
              name: ObjectLambdaAccessPoint
    ListAccessPointsRequest:
      type: object
      title: ListAccessPointsRequest
      properties: {}
    StringForNextToken:
      type: string
      pattern: '^[A-Za-z0-9\+\:\/\=\?\#-_]+$'
      minLength: 1
      maxLength: 1024
    ListJobsRequest:
      type: object
      title: ListJobsRequest
      properties: {}
    ListRegionalBucketsRequest:
      type: object
      title: ListRegionalBucketsRequest
      properties: {}
    RegionalBucketList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RegionalBucket'
          - xml:
              name: RegionalBucket
    S3AWSRegion:
      type: string
      pattern: '[a-z0-9\-]+'
      minLength: 5
      maxLength: 30
    ListStorageLensConfigurationEntry:
      type: object
      required:
        - Id
        - StorageLensArn
        - HomeRegion
      properties:
        Id:
          $ref: '#/components/schemas/ConfigId'
          description: A container for the S3 Storage Lens configuration ID.
        StorageLensArn:
          $ref: '#/components/schemas/StorageLensArn'
          description: The ARN of the S3 Storage Lens configuration. This property is read-only.
        HomeRegion:
          $ref: '#/components/schemas/S3AWSRegion'
          description: A container for the S3 Storage Lens home Region. Your metrics data is stored and retained in your designated S3 Storage Lens home Region.
        IsEnabled:
          $ref: '#/components/schemas/IsEnabled'
          description: A container for whether the S3 Storage Lens configuration is enabled. This property is required.
      description: 'Part of <code>ListStorageLensConfigurationResult</code>. Each entry includes the description of the S3 Storage Lens configuration, its home Region, whether it is enabled, its Amazon Resource Name (ARN), and config ID.'
    ListStorageLensConfigurationsRequest:
      type: object
      title: ListStorageLensConfigurationsRequest
      properties: {}
    StorageLensConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ListStorageLensConfigurationEntry'
          - xml:
              name: StorageLensConfiguration
      xml:
        wrapped: false
    MaxLength1024String:
      type: string
      maxLength: 1024
    MinStorageBytesPercentage:
      type: number
      format: double
      minimum: 0.1
      maximum: 100
    NonEmptyMaxLength2048String:
      type: string
      minLength: 1
      maxLength: 2048
    TransitionStorageClass:
      type: string
      enum:
        - GLACIER
        - STANDARD_IA
        - ONEZONE_IA
        - INTELLIGENT_TIERING
        - DEEP_ARCHIVE
    NoncurrentVersionTransition:
      type: object
      properties:
        NoncurrentDays:
          $ref: '#/components/schemas/Days'
          description: 'Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations"> How Amazon S3 Calculates How Long an Object Has Been Noncurrent</a> in the <i>Amazon S3 User Guide</i>.'
        StorageClass:
          $ref: '#/components/schemas/TransitionStorageClass'
          description: The class of storage used to store the object.
      description: The container for the noncurrent version transition.
    ObjectLambdaAccessPoint:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/ObjectLambdaAccessPointName'
          description: The name of the Object Lambda Access Point.
        ObjectLambdaAccessPointArn:
          $ref: '#/components/schemas/ObjectLambdaAccessPointArn'
          description: Specifies the ARN for the Object Lambda Access Point.
      description: An access point with an attached Lambda function used to access transformed data from an Amazon S3 bucket.
    ObjectLambdaAllowedFeature:
      type: string
      enum:
        - GetObject-Range
        - GetObject-PartNumber
    ObjectLambdaContentTransformation:
      type: object
      properties:
        AwsLambda:
          $ref: '#/components/schemas/AwsLambdaTransformation'
          description: A container for an Lambda function.
      description: A container for AwsLambdaTransformation.
    ObjectLambdaTransformationConfigurationActionsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ObjectLambdaTransformationConfigurationAction'
          - xml:
              name: Action
    ObjectLambdaTransformationConfiguration:
      type: object
      required:
        - Actions
        - ContentTransformation
      properties:
        Actions:
          $ref: '#/components/schemas/ObjectLambdaTransformationConfigurationActionsList'
          description: A container for the action of an Object Lambda Access Point configuration. Valid input is <code>GetObject</code>.
        ContentTransformation:
          $ref: '#/components/schemas/ObjectLambdaContentTransformation'
          description: A container for the content transformation of an Object Lambda Access Point configuration.
      description: A configuration used when creating an Object Lambda Access Point transformation.
    ObjectLambdaTransformationConfigurationAction:
      type: string
      enum:
        - GetObject
    OutputSchemaVersion:
      type: string
      enum:
        - V_1
    PrefixLevelStorageMetrics:
      type: object
      properties:
        IsEnabled:
          $ref: '#/components/schemas/IsEnabled'
          description: A container for whether prefix-level storage metrics are enabled.
        SelectionCriteria:
          $ref: '#/components/schemas/SelectionCriteria'
      description: A container for the prefix-level storage metrics for S3 Storage Lens.
    SelectionCriteria:
      type: object
      properties:
        Delimiter:
          $ref: '#/components/schemas/StorageLensPrefixLevelDelimiter'
          description: A container for the delimiter of the selection criteria being used.
        MaxDepth:
          $ref: '#/components/schemas/StorageLensPrefixLevelMaxDepth'
          description: The max depth of the selection criteria
        MinStorageBytesPercentage:
          $ref: '#/components/schemas/MinStorageBytesPercentage'
          description: <p>The minimum number of storage bytes percentage whose metrics will be selected.</p> <note> <p>You must choose a value greater than or equal to <code>1.0</code>.</p> </note>
      description: <p/>
    PutAccessPointConfigurationForObjectLambdaRequest:
      type: object
      required:
        - Configuration
      title: PutAccessPointConfigurationForObjectLambdaRequest
      properties:
        Configuration:
          $ref: '#/components/schemas/ObjectLambdaConfiguration'
          description: Object Lambda Access Point configuration document.
    PutAccessPointPolicyForObjectLambdaRequest:
      type: object
      required:
        - Policy
      title: PutAccessPointPolicyForObjectLambdaRequest
      properties:
        Policy:
          $ref: '#/components/schemas/ObjectLambdaPolicy'
          description: Object Lambda Access Point resource policy document.
    PutAccessPointPolicyRequest:
      type: object
      required:
        - Policy
      title: PutAccessPointPolicyRequest
      properties:
        Policy:
          $ref: '#/components/schemas/Policy'
          description: 'The policy that you want to apply to the specified access point. For more information about access point policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">Managing data access with Amazon S3 access points</a> in the <i>Amazon S3 User Guide</i>.'
    PutBucketLifecycleConfigurationRequest:
      type: object
      title: PutBucketLifecycleConfigurationRequest
      properties:
        LifecycleConfiguration:
          $ref: '#/components/schemas/LifecycleConfiguration'
          description: 'Container for lifecycle rules. You can add as many as 1,000 rules.'
      xml:
        namespace: 'http://awss3control.amazonaws.com/doc/2018-08-20/'
    PutBucketPolicyRequest:
      type: object
      required:
        - Policy
      title: PutBucketPolicyRequest
      properties:
        Policy:
          $ref: '#/components/schemas/Policy'
          description: The bucket policy as a JSON document.
    Tagging:
      type: object
      required:
        - TagSet
      properties:
        TagSet:
          $ref: '#/components/schemas/S3TagSet'
          description: A collection for a set of tags.
      description: <p/>
    PutBucketTaggingRequest:
      type: object
      required:
        - Tagging
      title: PutBucketTaggingRequest
      properties:
        Tagging:
          $ref: '#/components/schemas/Tagging'
          description: <p/>
      xml:
        namespace: 'http://awss3control.amazonaws.com/doc/2018-08-20/'
    PutJobTaggingRequest:
      type: object
      required:
        - Tags
      title: PutJobTaggingRequest
      properties:
        Tags:
          $ref: '#/components/schemas/S3TagSet'
          description: The set of tags to associate with the S3 Batch Operations job.
    PutPublicAccessBlockRequest:
      type: object
      required:
        - PublicAccessBlockConfiguration
      title: PutPublicAccessBlockRequest
      properties:
        PublicAccessBlockConfiguration:
          $ref: '#/components/schemas/PublicAccessBlockConfiguration'
          description: The <code>PublicAccessBlock</code> configuration that you want to apply to the specified account.
      xml:
        namespace: 'http://awss3control.amazonaws.com/doc/2018-08-20/'
    PutStorageLensConfigurationRequest:
      type: object
      required:
        - StorageLensConfiguration
      title: PutStorageLensConfigurationRequest
      properties:
        StorageLensConfiguration:
          $ref: '#/components/schemas/StorageLensConfiguration'
          description: The S3 Storage Lens configuration.
        Tags:
          $ref: '#/components/schemas/StorageLensTags'
          description: <p>The tag set of the S3 Storage Lens configuration.</p> <note> <p>You can set up to a maximum of 50 tags.</p> </note>
    PutStorageLensConfigurationTaggingRequest:
      type: object
      required:
        - Tags
      title: PutStorageLensConfigurationTaggingRequest
      properties:
        Tags:
          $ref: '#/components/schemas/StorageLensTags'
          description: <p>The tag set of the S3 Storage Lens configuration.</p> <note> <p>You can set up to a maximum of 50 tags.</p> </note>
    RegionalBucket:
      type: object
      required:
        - Bucket
        - PublicAccessBlockEnabled
        - CreationDate
      properties:
        Bucket:
          $ref: '#/components/schemas/BucketName'
          description: <p/>
        BucketArn:
          $ref: '#/components/schemas/S3RegionalBucketArn'
          description: The Amazon Resource Name (ARN) for the regional bucket.
        PublicAccessBlockEnabled:
          $ref: '#/components/schemas/PublicAccessBlockEnabled'
          description: <p/>
        CreationDate:
          $ref: '#/components/schemas/CreationDate'
          description: The creation date of the regional bucket
        OutpostId:
          $ref: '#/components/schemas/NonEmptyMaxLength64String'
          description: The Outposts ID of the regional bucket.
      description: The container for the regional bucket.
    RequestedJobStatus:
      type: string
      enum:
        - Cancelled
        - Ready
    S3ObjectOwner:
      type: object
      properties:
        ID:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: <p/>
        DisplayName:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: <p/>
      description: <p/>
    S3GrantList:
      type: array
      items:
        $ref: '#/components/schemas/S3Grant'
    S3AccessControlList:
      type: object
      required:
        - Owner
      properties:
        Owner:
          $ref: '#/components/schemas/S3ObjectOwner'
          description: <p/>
        Grants:
          $ref: '#/components/schemas/S3GrantList'
          description: <p/>
      description: <p/>
    S3CannedAccessControlList:
      type: string
      enum:
        - private
        - public-read
        - public-read-write
        - aws-exec-read
        - authenticated-read
        - bucket-owner-read
        - bucket-owner-full-control
    S3AccessControlPolicy:
      type: object
      properties:
        AccessControlList:
          $ref: '#/components/schemas/S3AccessControlList'
          description: <p/>
        CannedAccessControlList:
          $ref: '#/components/schemas/S3CannedAccessControlList'
          description: <p/>
      description: <p/>
    StorageLensDataExportEncryption:
      type: object
      properties:
        SSES3:
          allOf:
            - $ref: '#/components/schemas/SSES3'
            - xml:
                name: SSE-S3
              description: <p/>
        SSEKMS:
          allOf:
            - $ref: '#/components/schemas/SSEKMS'
            - xml:
                name: SSE-KMS
              description: <p/>
      description: A container for the encryption of the S3 Storage Lens metrics exports.
    S3BucketDestination:
      type: object
      required:
        - Format
        - OutputSchemaVersion
        - AccountId
        - Arn
      properties:
        Format:
          $ref: '#/components/schemas/Format'
          description: <p/>
        OutputSchemaVersion:
          $ref: '#/components/schemas/OutputSchemaVersion'
          description: The schema version of the export file.
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The account ID of the owner of the S3 Storage Lens metrics export bucket.
        Arn:
          $ref: '#/components/schemas/S3BucketArnString'
          description: 'The Amazon Resource Name (ARN) of the bucket. This property is read-only and follows the following format: <code> arn:aws:s3:<i>us-east-1</i>:<i>example-account-id</i>:bucket/<i>your-destination-bucket-name</i> </code> '
        Prefix:
          $ref: '#/components/schemas/Prefix'
          description: The prefix of the destination bucket where the metrics export will be delivered.
        Encryption:
          $ref: '#/components/schemas/StorageLensDataExportEncryption'
          description: The container for the type encryption of the metrics exports in this bucket.
      description: A container for the bucket where the Amazon S3 Storage Lens metrics export files are located.
    S3ContentLength:
      type: integer
      minimum: 0
    S3MetadataDirective:
      type: string
      enum:
        - COPY
        - REPLACE
    TimeStamp:
      type: string
      format: date-time
    S3ObjectMetadata:
      type: object
      properties:
        CacheControl:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: <p/>
        ContentDisposition:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: <p/>
        ContentEncoding:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: <p/>
        ContentLanguage:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: <p/>
        UserMetadata:
          $ref: '#/components/schemas/S3UserMetadata'
          description: <p/>
        ContentLength:
          $ref: '#/components/schemas/S3ContentLength'
          description: <p/>
        ContentMD5:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: <p/>
        ContentType:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: <p/>
        HttpExpiresDate:
          $ref: '#/components/schemas/TimeStamp'
          description: <p/>
        RequesterCharged:
          $ref: '#/components/schemas/Boolean'
          description: <p/>
        SSEAlgorithm:
          $ref: '#/components/schemas/S3SSEAlgorithm'
          description: <p/>
      description: <p/>
    S3StorageClass:
      type: string
      enum:
        - STANDARD
        - STANDARD_IA
        - ONEZONE_IA
        - GLACIER
        - INTELLIGENT_TIERING
        - DEEP_ARCHIVE
    S3ObjectLockLegalHoldStatus:
      type: string
      enum:
        - 'OFF'
        - 'ON'
    S3ObjectLockMode:
      type: string
      enum:
        - COMPLIANCE
        - GOVERNANCE
    S3ExpirationInDays:
      type: integer
      minimum: 0
    S3GlacierJobTier:
      type: string
      enum:
        - BULK
        - STANDARD
    S3Grantee:
      type: object
      properties:
        TypeIdentifier:
          $ref: '#/components/schemas/S3GranteeTypeIdentifier'
          description: <p/>
        Identifier:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: <p/>
        DisplayName:
          $ref: '#/components/schemas/NonEmptyMaxLength1024String'
          description: <p/>
      description: <p/>
    S3Permission:
      type: string
      enum:
        - FULL_CONTROL
        - READ
        - WRITE
        - READ_ACP
        - WRITE_ACP
    S3Grant:
      type: object
      properties:
        Grantee:
          $ref: '#/components/schemas/S3Grantee'
          description: <p/>
        Permission:
          $ref: '#/components/schemas/S3Permission'
          description: <p/>
      description: <p/>
    S3GranteeTypeIdentifier:
      type: string
      enum:
        - id
        - emailAddress
        - uri
    S3ObjectLockLegalHold:
      type: object
      required:
        - Status
      properties:
        Status:
          $ref: '#/components/schemas/S3ObjectLockLegalHoldStatus'
          description: The Object Lock legal hold status to be applied to all objects in the Batch Operations job.
      description: Whether S3 Object Lock legal hold will be applied to objects in an S3 Batch Operations job.
    S3ObjectLockRetentionMode:
      type: string
      enum:
        - COMPLIANCE
        - GOVERNANCE
    S3UserMetadata:
      type: object
      maxProperties: 8192
      additionalProperties:
        $ref: '#/components/schemas/MaxLength1024String'
    S3SSEAlgorithm:
      type: string
      enum:
        - AES256
        - KMS
    S3Retention:
      type: object
      properties:
        RetainUntilDate:
          $ref: '#/components/schemas/TimeStamp'
          description: The date when the applied Object Lock retention will expire on all objects set by the Batch Operations job.
        Mode:
          $ref: '#/components/schemas/S3ObjectLockRetentionMode'
          description: The Object Lock retention mode to be applied to all objects in the Batch Operations job.
      description: 'Contains the S3 Object Lock retention mode to be applied to all objects in the S3 Batch Operations job. If you don''t provide <code>Mode</code> and <code>RetainUntilDate</code> data types in your operation, you will remove the retention from your objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-retention-date.html">Using S3 Object Lock retention with S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.'
    TagKeyString:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 1024
    TagValueString:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      maxLength: 1024
    SSEKMSKeyId:
      type: string
    SSEKMS:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: '#/components/schemas/SSEKMSKeyId'
          description: 'A container for the ARN of the SSE-KMS encryption. This property is read-only and follows the following format: <code> arn:aws:kms:<i>us-east-1</i>:<i>example-account-id</i>:key/<i>example-9a73-4afc-8d29-8f5900cef44e</i> </code> '
      description: <p/>
    SSES3:
      type: object
      properties: {}
      description: <p/>
    StorageLensPrefixLevelDelimiter:
      type: string
      maxLength: 1
    StorageLensPrefixLevelMaxDepth:
      type: integer
      minimum: 1
      maximum: 10
    Transition:
      type: object
      properties:
        Date:
          $ref: '#/components/schemas/Date'
          description: Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC.
        Days:
          $ref: '#/components/schemas/Days'
          description: Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
        StorageClass:
          $ref: '#/components/schemas/TransitionStorageClass'
          description: The storage class to which you want the object to transition.
      description: 'Specifies when an object transitions to a specified storage class. For more information about Amazon S3 Lifecycle configuration rules, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html"> Transitioning objects using Amazon S3 Lifecycle</a> in the <i>Amazon S3 User Guide</i>.'
    UpdateJobPriorityRequest:
      type: object
      title: UpdateJobPriorityRequest
      properties: {}
    UpdateJobStatusRequest:
      type: object
      title: UpdateJobStatusRequest
      properties: {}
security:
  - hmac: []
