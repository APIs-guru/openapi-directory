openapi: 3.0.0
info:
  version: '2019-12-02'
  x-release: v4
  title: AWS IoT SiteWise
  description: 'Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href="https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: iotsitewise
  x-aws-signingName: iotsitewise
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotsitewise-2019-12-02.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iotsitewise/'
servers:
  - url: 'http://iotsitewise.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT SiteWise multi-region endpoint
  - url: 'https://iotsitewise.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT SiteWise multi-region endpoint
  - url: 'http://iotsitewise.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT SiteWise endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://iotsitewise.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT SiteWise endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/assets/{assetId}/associate':
    post:
      operationId: AssociateAssets
      description: 'Associates a child asset with the given parent asset through a hierarchy defined in the parent asset''s model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/add-associated-assets.html">Associating assets</a> in the <i>IoT SiteWise User Guide</i>.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters:
        - name: assetId
          in: path
          required: true
          description: The ID of the parent asset.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - hierarchyId
                - childAssetId
              properties:
                hierarchyId:
                  description: 'The ID of a hierarchy in the parent asset''s model. Hierarchies allow different groupings of assets to be formed that all come from the same asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  minLength: 36
                  maxLength: 36
                childAssetId:
                  description: The ID of the child asset to be associated.
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  minLength: 36
                  maxLength: 36
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/projects/{projectId}/assets/associate':
    post:
      operationId: BatchAssociateProjectAssets
      description: Associates a group (batch) of assets with an IoT SiteWise Monitor project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAssociateProjectAssetsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project to which to associate the assets.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - assetIds
              properties:
                assetIds:
                  description: The IDs of the assets to be associated to the project.
                  type: array
                  items:
                    $ref: '#/components/schemas/ID'
                  minItems: 1
                  maxItems: 100
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/projects/{projectId}/assets/disassociate':
    post:
      operationId: BatchDisassociateProjectAssets
      description: Disassociates a group (batch) of assets from an IoT SiteWise Monitor project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDisassociateProjectAssetsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project from which to disassociate the assets.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - assetIds
              properties:
                assetIds:
                  description: The IDs of the assets to be disassociated from the project.
                  type: array
                  items:
                    $ref: '#/components/schemas/ID'
                  minItems: 1
                  maxItems: 100
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /properties:
    post:
      operationId: BatchPutAssetPropertyValue
      description: '<p>Sends a list of asset property values to IoT SiteWise. Each value is a timestamp-quality-value (TQV) data point. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/ingest-api.html">Ingesting data using the API</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>To identify an asset property, you must specify one of the following:</p> <ul> <li> <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p> </li> <li> <p>A <code>propertyAlias</code>, which is a data stream alias (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property''s alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p> </li> </ul> <important> <p>With respect to Unix epoch time, IoT SiteWise accepts only TQVs that have a timestamp of no more than 7 days in the past and no more than 10 minutes in the future. IoT SiteWise rejects timestamps outside of the inclusive range of [-7 days, +10 minutes] and returns a <code>TimestampOutOfRangeException</code> error.</p> <p>For each asset property, IoT SiteWise overwrites TQVs with duplicate timestamps unless the newer TQV has a different quality. For example, if you store a TQV <code>{T1, GOOD, V1}</code>, then storing <code>{T1, GOOD, V2}</code> replaces the existing TQV.</p> </important> <p>IoT SiteWise authorizes access to each <code>BatchPutAssetPropertyValue</code> entry individually. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-batchputassetpropertyvalue-action">BatchPutAssetPropertyValue authorization</a> in the <i>IoT SiteWise User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPutAssetPropertyValueResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - entries
              properties:
                entries:
                  description: The list of asset property value entries for the batch put request. You can specify up to 10 entries per request.
                  type: array
                  items:
                    $ref: '#/components/schemas/PutAssetPropertyValueEntry'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /access-policies:
    post:
      operationId: CreateAccessPolicy
      description: 'Creates an access policy that grants the specified identity (Amazon Web Services SSO user, Amazon Web Services SSO group, or IAM user) access to the specified IoT SiteWise Monitor portal or project resource.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccessPolicyResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accessPolicyIdentity
                - accessPolicyResource
                - accessPolicyPermission
              properties:
                accessPolicyIdentity:
                  description: '<p>Contains an identity that can access an IoT SiteWise Monitor resource.</p> <note> <p>Currently, you can''t use Amazon Web Services APIs to retrieve Amazon Web Services SSO identity IDs. You can find the Amazon Web Services SSO identity IDs in the URL of user and group pages in the <a href="https://console.aws.amazon.com/singlesignon">Amazon Web Services SSO console</a>.</p> </note>'
                  type: object
                  properties:
                    user:
                      $ref: '#/components/schemas/UserIdentity'
                      description: An Amazon Web Services SSO user identity.
                    group:
                      $ref: '#/components/schemas/GroupIdentity'
                      description: An Amazon Web Services SSO group identity.
                    iamUser:
                      $ref: '#/components/schemas/IAMUserIdentity'
                      description: An IAM user identity.
                    iamRole:
                      $ref: '#/components/schemas/IAMRoleIdentity'
                      description: An IAM role identity.
                accessPolicyResource:
                  description: Contains an IoT SiteWise Monitor resource ID for a portal or project.
                  type: object
                  properties:
                    portal:
                      $ref: '#/components/schemas/PortalResource'
                      description: A portal resource.
                    project:
                      $ref: '#/components/schemas/ProjectResource'
                      description: A project resource.
                accessPolicyPermission:
                  description: The permission level for this access policy. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.
                  type: string
                  enum:
                    - ADMINISTRATOR
                    - VIEWER
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
                tags:
                  description: 'A list of key-value pairs that contain metadata for the access policy. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListAccessPolicies
      description: 'Retrieves a paginated list of access policies for an identity (an Amazon Web Services SSO user, an Amazon Web Services SSO group, or an IAM user) or an IoT SiteWise Monitor resource (a portal or project).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessPoliciesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: identityType
          in: query
          required: false
          description: 'The type of identity (Amazon Web Services SSO user, Amazon Web Services SSO group, or IAM user). This parameter is required if you specify <code>identityId</code>.'
          schema:
            type: string
            enum:
              - USER
              - GROUP
              - IAM
        - name: identityId
          in: query
          required: false
          description: The ID of the identity. This parameter is required if you specify <code>USER</code> or <code>GROUP</code> for <code>identityType</code>.
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 256
        - name: resourceType
          in: query
          required: false
          description: The type of resource (portal or project). This parameter is required if you specify <code>resourceId</code>.
          schema:
            type: string
            enum:
              - PORTAL
              - PROJECT
        - name: resourceId
          in: query
          required: false
          description: The ID of the resource. This parameter is required if you specify <code>resourceType</code>.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: iamArn
          in: query
          required: false
          description: 'The ARN of the IAM user. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM ARNs</a> in the <i>IAM User Guide</i>. This parameter is required if you specify <code>IAM</code> for <code>identityType</code>.'
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 1600
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 250
  /assets:
    post:
      operationId: CreateAsset
      description: 'Creates an asset from an existing asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-assets.html">Creating assets</a> in the <i>IoT SiteWise User Guide</i>.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssetResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - assetName
                - assetModelId
              properties:
                assetName:
                  description: 'A unique, friendly name for the asset.'
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 256
                assetModelId:
                  description: The ID of the asset model from which to create the asset.
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  minLength: 36
                  maxLength: 36
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
                tags:
                  description: 'A list of key-value pairs that contain metadata for the asset. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListAssets
      description: '<p>Retrieves a paginated list of asset summaries.</p> <p>You can use this operation to do the following:</p> <ul> <li> <p>List assets based on a specific asset model.</p> </li> <li> <p>List top-level assets.</p> </li> </ul> <p>You can''t use this operation to list all assets. To retrieve summaries for all of your assets, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_ListAssetModels.html">ListAssetModels</a> to get all of your asset model IDs. Then, use ListAssets to get all assets for each asset model.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: assetModelId
          in: query
          required: false
          description: The ID of the asset model by which to filter the list of assets. This parameter is required if you choose <code>ALL</code> for <code>filter</code>.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: filter
          in: query
          required: false
          description: '<p>The filter for the requested list of assets. Choose one of the following options:</p> <ul> <li> <p> <code>ALL</code> – The list includes all assets for a given asset model ID. The <code>assetModelId</code> parameter is required if you filter by <code>ALL</code>.</p> </li> <li> <p> <code>TOP_LEVEL</code> – The list includes only top-level assets in the asset hierarchy tree.</p> </li> </ul> <p>Default: <code>ALL</code> </p>'
          schema:
            type: string
            enum:
              - ALL
              - TOP_LEVEL
  /asset-models:
    post:
      operationId: CreateAssetModel
      description: 'Creates an asset model from specified property and hierarchy definitions. You create assets from asset models. With asset models, you can easily create assets of the same type that have standardized definitions. Each asset created from a model inherits the asset model''s property and hierarchy definitions. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/define-models.html">Defining asset models</a> in the <i>IoT SiteWise User Guide</i>.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssetModelResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - assetModelName
              properties:
                assetModelName:
                  description: 'A unique, friendly name for the asset model.'
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 256
                assetModelDescription:
                  description: A description for the asset model.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 2048
                assetModelProperties:
                  description: '<p>The property definitions of the asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html">Asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>You can specify up to 200 properties per asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/AssetModelPropertyDefinition'
                assetModelHierarchies:
                  description: '<p>The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>You can specify up to 10 hierarchies per asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/AssetModelHierarchyDefinition'
                assetModelCompositeModels:
                  description: The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties. Each composite model has a type that defines the properties that the composite model supports. Use composite asset models to define alarms on this asset model.
                  type: array
                  items:
                    $ref: '#/components/schemas/AssetModelCompositeModelDefinition'
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
                tags:
                  description: 'A list of key-value pairs that contain metadata for the asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListAssetModels
      description: Retrieves a paginated list of summaries of all asset models.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetModelsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 250
  /dashboards:
    post:
      operationId: CreateDashboard
      description: Creates a dashboard in an IoT SiteWise Monitor project.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDashboardResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - projectId
                - dashboardName
                - dashboardDefinition
              properties:
                projectId:
                  description: The ID of the project in which to create the dashboard.
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  minLength: 36
                  maxLength: 36
                dashboardName:
                  description: A friendly name for the dashboard.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 256
                dashboardDescription:
                  description: A description for the dashboard.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 2048
                dashboardDefinition:
                  description: 'The dashboard definition specified in a JSON literal. For detailed information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html">Creating dashboards (CLI)</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: string
                  pattern: .+
                  minLength: 0
                  maxLength: 204800
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
                tags:
                  description: 'A list of key-value pairs that contain metadata for the dashboard. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /20200301/gateways:
    post:
      operationId: CreateGateway
      description: 'Creates a gateway, which is a virtual or edge device that delivers industrial data streams from local servers to IoT SiteWise. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gateway-connector.html">Ingesting data using a gateway</a> in the <i>IoT SiteWise User Guide</i>.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGatewayResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - gatewayName
                - gatewayPlatform
              properties:
                gatewayName:
                  description: 'A unique, friendly name for the gateway.'
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 256
                gatewayPlatform:
                  description: Contains a gateway's platform information.
                  type: object
                  properties:
                    greengrass:
                      $ref: '#/components/schemas/Greengrass'
                      description: A gateway that runs on IoT Greengrass.
                    greengrassV2:
                      $ref: '#/components/schemas/GreengrassV2'
                      description: A gateway that runs on IoT Greengrass V2.
                tags:
                  description: 'A list of key-value pairs that contain metadata for the gateway. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListGateways
      description: Retrieves a paginated list of gateways.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGatewaysResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 250
  /portals:
    post:
      operationId: CreatePortal
      description: '<p>Creates a portal, which can contain projects and dashboards. IoT SiteWise Monitor uses Amazon Web Services SSO or IAM to authenticate portal users and manage user permissions.</p> <note> <p>Before you can sign in to a new portal, you must add at least one identity to that portal. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/administer-portals.html#portal-change-admins">Adding or removing portal administrators</a> in the <i>IoT SiteWise User Guide</i>.</p> </note>'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePortalResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - portalName
                - portalContactEmail
                - roleArn
              properties:
                portalName:
                  description: A friendly name for the portal.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 256
                portalDescription:
                  description: A description for the portal.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 2048
                portalContactEmail:
                  description: The Amazon Web Services administrator's contact email address.
                  type: string
                  pattern: '[^@]+@[^@]+'
                  minLength: 1
                  maxLength: 255
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
                portalLogoImageFile:
                  description: Contains an image file.
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ImageFileData'
                      description: 'The image file contents, represented as a base64-encoded string. The file size must be less than 1 MB.'
                    type:
                      $ref: '#/components/schemas/ImageFileType'
                      description: The file type of the image.
                roleArn:
                  description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of a service role that allows the portal''s users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: string
                  pattern: .*
                  minLength: 1
                  maxLength: 1600
                tags:
                  description: 'A list of key-value pairs that contain metadata for the portal. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                portalAuthMode:
                  description: '<p>The service to use to authenticate users to the portal. Choose from the following options:</p> <ul> <li> <p> <code>SSO</code> – The portal uses Amazon Web Services Single Sign On to authenticate users and manage user permissions. Before you can create a portal that uses Amazon Web Services SSO, you must enable Amazon Web Services SSO. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-get-started.html#mon-gs-sso">Enabling Amazon Web Services SSO</a> in the <i>IoT SiteWise User Guide</i>. This option is only available in Amazon Web Services Regions other than the China Regions.</p> </li> <li> <p> <code>IAM</code> – The portal uses Identity and Access Management to authenticate users and manage user permissions. This option is only available in the China Regions.</p> </li> </ul> <p>You can''t change this value after you create a portal.</p> <p>Default: <code>SSO</code> </p>'
                  type: string
                  enum:
                    - IAM
                    - SSO
                notificationSenderEmail:
                  description: '<p>The email address that sends alarm notifications.</p> <important> <p>If you use the <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html">IoT Events managed Lambda function</a> to manage your emails, you must <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses.html">verify the sender email address in Amazon SES</a>.</p> </important>'
                  type: string
                  pattern: '[^@]+@[^@]+'
                  minLength: 1
                  maxLength: 255
                alarms:
                  description: 'Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html">Monitoring with alarms</a> in the <i>IoT SiteWise Application Guide</i>.'
                  type: object
                  properties:
                    alarmRoleArn:
                      $ref: '#/components/schemas/ARN'
                      description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the IAM role that allows the alarm to perform actions and access Amazon Web Services resources and services, such as IoT Events.'
                    notificationLambdaArn:
                      $ref: '#/components/schemas/ARN'
                      description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the Lambda function that manages alarm notifications. For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html">Managing alarm notifications</a> in the <i>IoT Events Developer Guide</i>.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListPortals
      description: Retrieves a paginated list of IoT SiteWise Monitor portals.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPortalsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 250
  /projects:
    post:
      operationId: CreateProject
      description: Creates a project in the specified portal.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - portalId
                - projectName
              properties:
                portalId:
                  description: The ID of the portal in which to create the project.
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  minLength: 36
                  maxLength: 36
                projectName:
                  description: A friendly name for the project.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 256
                projectDescription:
                  description: A description for the project.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 2048
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
                tags:
                  description: 'A list of key-value pairs that contain metadata for the project. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/access-policies/{accessPolicyId}':
    delete:
      operationId: DeleteAccessPolicy
      description: Deletes an access policy that grants the specified identity access to the specified IoT SiteWise Monitor resource. You can use this operation to revoke access to an IoT SiteWise Monitor resource.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccessPolicyResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: accessPolicyId
          in: path
          required: true
          description: The ID of the access policy to be deleted.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: clientToken
          in: query
          required: false
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
          schema:
            type: string
            pattern: '\S{36,64}'
            minLength: 36
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeAccessPolicy
      description: 'Describes an access policy, which specifies an identity''s access to an IoT SiteWise Monitor portal or project.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccessPolicyResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: accessPolicyId
          in: path
          required: true
          description: The ID of the access policy.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdateAccessPolicy
      description: Updates an existing access policy that specifies an identity's access to an IoT SiteWise Monitor portal or project resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccessPolicyResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: accessPolicyId
          in: path
          required: true
          description: The ID of the access policy.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accessPolicyIdentity
                - accessPolicyResource
                - accessPolicyPermission
              properties:
                accessPolicyIdentity:
                  description: '<p>Contains an identity that can access an IoT SiteWise Monitor resource.</p> <note> <p>Currently, you can''t use Amazon Web Services APIs to retrieve Amazon Web Services SSO identity IDs. You can find the Amazon Web Services SSO identity IDs in the URL of user and group pages in the <a href="https://console.aws.amazon.com/singlesignon">Amazon Web Services SSO console</a>.</p> </note>'
                  type: object
                  properties:
                    user:
                      $ref: '#/components/schemas/UserIdentity'
                      description: An Amazon Web Services SSO user identity.
                    group:
                      $ref: '#/components/schemas/GroupIdentity'
                      description: An Amazon Web Services SSO group identity.
                    iamUser:
                      $ref: '#/components/schemas/IAMUserIdentity'
                      description: An IAM user identity.
                    iamRole:
                      $ref: '#/components/schemas/IAMRoleIdentity'
                      description: An IAM role identity.
                accessPolicyResource:
                  description: Contains an IoT SiteWise Monitor resource ID for a portal or project.
                  type: object
                  properties:
                    portal:
                      $ref: '#/components/schemas/PortalResource'
                      description: A portal resource.
                    project:
                      $ref: '#/components/schemas/ProjectResource'
                      description: A project resource.
                accessPolicyPermission:
                  description: The permission level for this access policy. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.
                  type: string
                  enum:
                    - ADMINISTRATOR
                    - VIEWER
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
  '/assets/{assetId}':
    delete:
      operationId: DeleteAsset
      description: '<p>Deletes an asset. This action can''t be undone. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html">Deleting assets and models</a> in the <i>IoT SiteWise User Guide</i>. </p> <note> <p>You can''t delete an asset that''s associated to another asset. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DisassociateAssets.html">DisassociateAssets</a>.</p> </note>'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssetResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters:
        - name: assetId
          in: path
          required: true
          description: The ID of the asset to delete.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: clientToken
          in: query
          required: false
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
          schema:
            type: string
            pattern: '\S{36,64}'
            minLength: 36
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeAsset
      description: Retrieves information about an asset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAssetResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: assetId
          in: path
          required: true
          description: The ID of the asset.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdateAsset
      description: 'Updates an asset''s name. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html">Updating assets and models</a> in the <i>IoT SiteWise User Guide</i>.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAssetResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters:
        - name: assetId
          in: path
          required: true
          description: The ID of the asset to update.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - assetName
              properties:
                assetName:
                  description: 'A unique, friendly name for the asset.'
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 256
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
  '/asset-models/{assetModelId}':
    delete:
      operationId: DeleteAssetModel
      description: 'Deletes an asset model. This action can''t be undone. You must delete all assets created from an asset model before you can delete the model. Also, you can''t delete an asset model if a parent asset model exists that contains a property formula expression that depends on the asset model that you want to delete. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html">Deleting assets and models</a> in the <i>IoT SiteWise User Guide</i>.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssetModelResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters:
        - name: assetModelId
          in: path
          required: true
          description: The ID of the asset model to delete.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: clientToken
          in: query
          required: false
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
          schema:
            type: string
            pattern: '\S{36,64}'
            minLength: 36
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeAssetModel
      description: Retrieves information about an asset model.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAssetModelResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: assetModelId
          in: path
          required: true
          description: The ID of the asset model.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdateAssetModel
      description: '<p>Updates an asset model and all of the assets that were created from the model. Each asset created from the model inherits the updated asset model''s property and hierarchy definitions. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html">Updating assets and models</a> in the <i>IoT SiteWise User Guide</i>.</p> <important> <p>This operation overwrites the existing model with the provided model. To avoid deleting your asset model''s properties or hierarchies, you must include their IDs and definitions in the updated asset model payload. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetModel.html">DescribeAssetModel</a>.</p> <p>If you remove a property from an asset model, IoT SiteWise deletes all previous data for that property. If you remove a hierarchy definition from an asset model, IoT SiteWise disassociates every asset associated with that hierarchy. You can''t change the type or data type of an existing property.</p> </important>'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAssetModelResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters:
        - name: assetModelId
          in: path
          required: true
          description: The ID of the asset model to update.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - assetModelName
              properties:
                assetModelName:
                  description: 'A unique, friendly name for the asset model.'
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 256
                assetModelDescription:
                  description: A description for the asset model.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 2048
                assetModelProperties:
                  description: '<p>The updated property definitions of the asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html">Asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>You can specify up to 200 properties per asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/AssetModelProperty'
                assetModelHierarchies:
                  description: '<p>The updated hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>You can specify up to 10 hierarchies per asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/AssetModelHierarchy'
                assetModelCompositeModels:
                  description: The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties. Each composite model has a type that defines the properties that the composite model supports. Use composite asset models to define alarms on this asset model.
                  type: array
                  items:
                    $ref: '#/components/schemas/AssetModelCompositeModel'
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
  '/dashboards/{dashboardId}':
    delete:
      operationId: DeleteDashboard
      description: Deletes a dashboard from IoT SiteWise Monitor.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDashboardResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: dashboardId
          in: path
          required: true
          description: The ID of the dashboard to delete.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: clientToken
          in: query
          required: false
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
          schema:
            type: string
            pattern: '\S{36,64}'
            minLength: 36
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeDashboard
      description: Retrieves information about a dashboard.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDashboardResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: dashboardId
          in: path
          required: true
          description: The ID of the dashboard.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdateDashboard
      description: Updates an IoT SiteWise Monitor dashboard.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDashboardResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: dashboardId
          in: path
          required: true
          description: The ID of the dashboard to update.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dashboardName
                - dashboardDefinition
              properties:
                dashboardName:
                  description: A new friendly name for the dashboard.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 256
                dashboardDescription:
                  description: A new description for the dashboard.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 2048
                dashboardDefinition:
                  description: 'The new dashboard definition, as specified in a JSON literal. For detailed information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html">Creating dashboards (CLI)</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: string
                  pattern: .+
                  minLength: 0
                  maxLength: 204800
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
  '/20200301/gateways/{gatewayId}':
    delete:
      operationId: DeleteGateway
      description: 'Deletes a gateway from IoT SiteWise. When you delete a gateway, some of the gateway''s files remain in your gateway''s file system.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: gatewayId
          in: path
          required: true
          description: The ID of the gateway to delete.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeGateway
      description: Retrieves information about a gateway.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGatewayResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: gatewayId
          in: path
          required: true
          description: The ID of the gateway device.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdateGateway
      description: Updates a gateway's name.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: gatewayId
          in: path
          required: true
          description: The ID of the gateway to update.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - gatewayName
              properties:
                gatewayName:
                  description: 'A unique, friendly name for the gateway.'
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 256
  '/portals/{portalId}':
    delete:
      operationId: DeletePortal
      description: Deletes a portal from IoT SiteWise Monitor.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePortalResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters:
        - name: portalId
          in: path
          required: true
          description: The ID of the portal to delete.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: clientToken
          in: query
          required: false
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
          schema:
            type: string
            pattern: '\S{36,64}'
            minLength: 36
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribePortal
      description: Retrieves information about a portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePortalResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: portalId
          in: path
          required: true
          description: The ID of the portal.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdatePortal
      description: Updates an IoT SiteWise Monitor portal.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePortalResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters:
        - name: portalId
          in: path
          required: true
          description: The ID of the portal to update.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - portalName
                - portalContactEmail
                - roleArn
              properties:
                portalName:
                  description: A new friendly name for the portal.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 256
                portalDescription:
                  description: A new description for the portal.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 2048
                portalContactEmail:
                  description: The Amazon Web Services administrator's contact email address.
                  type: string
                  pattern: '[^@]+@[^@]+'
                  minLength: 1
                  maxLength: 255
                portalLogoImage:
                  description: '<p>Contains an image that is one of the following:</p> <ul> <li> <p>An image file. Choose this option to upload a new image.</p> </li> <li> <p>The ID of an existing image. Choose this option to keep an existing image.</p> </li> </ul>'
                  type: object
                  properties:
                    id:
                      $ref: '#/components/schemas/ID'
                      description: The ID of an existing image. Specify this parameter to keep an existing image.
                    file:
                      $ref: '#/components/schemas/ImageFile'
                roleArn:
                  description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of a service role that allows the portal''s users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: string
                  pattern: .*
                  minLength: 1
                  maxLength: 1600
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
                notificationSenderEmail:
                  description: The email address that sends alarm notifications.
                  type: string
                  pattern: '[^@]+@[^@]+'
                  minLength: 1
                  maxLength: 255
                alarms:
                  description: 'Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html">Monitoring with alarms</a> in the <i>IoT SiteWise Application Guide</i>.'
                  type: object
                  properties:
                    alarmRoleArn:
                      $ref: '#/components/schemas/ARN'
                      description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the IAM role that allows the alarm to perform actions and access Amazon Web Services resources and services, such as IoT Events.'
                    notificationLambdaArn:
                      $ref: '#/components/schemas/ARN'
                      description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the Lambda function that manages alarm notifications. For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html">Managing alarm notifications</a> in the <i>IoT Events Developer Guide</i>.'
  '/projects/{projectId}':
    delete:
      operationId: DeleteProject
      description: Deletes a project from IoT SiteWise Monitor.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProjectResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: clientToken
          in: query
          required: false
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
          schema:
            type: string
            pattern: '\S{36,64}'
            minLength: 36
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeProject
      description: Retrieves information about a project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProjectResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdateProject
      description: Updates an IoT SiteWise Monitor project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project to update.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - projectName
              properties:
                projectName:
                  description: A new friendly name for the project.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 256
                projectDescription:
                  description: A new description for the project.
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                  maxLength: 2048
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
  '/assets/{assetId}/properties/{propertyId}':
    get:
      operationId: DescribeAssetProperty
      description: '<p>Retrieves information about an asset property.</p> <note> <p>When you call this operation for an attribute property, this response includes the default attribute value that you define in the asset model. If you update the default value in the model, this operation''s response includes the new default value.</p> </note> <p>This operation doesn''t return the value of the asset property. To get the value of an asset property, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_GetAssetPropertyValue.html">GetAssetPropertyValue</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAssetPropertyResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: assetId
          in: path
          required: true
          description: The ID of the asset.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: propertyId
          in: path
          required: true
          description: The ID of the asset property.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateAssetProperty
      description: '<p>Updates an asset property''s alias and notification state.</p> <important> <p>This operation overwrites the property''s existing alias and notification state. To keep your existing property''s alias or notification state, you must include the existing values in the UpdateAssetProperty request. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetProperty.html">DescribeAssetProperty</a>.</p> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters:
        - name: assetId
          in: path
          required: true
          description: The ID of the asset to be updated.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: propertyId
          in: path
          required: true
          description: The ID of the asset property to be updated.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                propertyAlias:
                  description: '<p>The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>If you omit this parameter, the alias is removed from the property.</p>'
                  type: string
                  pattern: '[^\u0000-\u001F\u007F]+'
                  minLength: 1
                propertyNotificationState:
                  description: '<p>The MQTT notification state (enabled or disabled) for this asset property. When the notification state is enabled, IoT SiteWise publishes property value updates to a unique MQTT topic. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/interact-with-other-services.html">Interacting with other services</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>If you omit this parameter, the notification state is set to <code>DISABLED</code>.</p>'
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
  /configuration/account/encryption:
    get:
      operationId: DescribeDefaultEncryptionConfiguration
      description: 'Retrieves information about the default encryption configuration for the Amazon Web Services account in the default or specified Region. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html">Key management</a> in the <i>IoT SiteWise User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDefaultEncryptionConfigurationResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: PutDefaultEncryptionConfiguration
      description: 'Sets the default encryption configuration for the Amazon Web Services account. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html">Key management</a> in the <i>IoT SiteWise User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDefaultEncryptionConfigurationResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - encryptionType
              properties:
                encryptionType:
                  description: The type of encryption used for the encryption configuration.
                  type: string
                  enum:
                    - SITEWISE_DEFAULT_ENCRYPTION
                    - KMS_BASED_ENCRYPTION
                kmsKeyId:
                  description: The Key ID of the customer managed customer master key (CMK) used for KMS encryption. This is required if you use <code>KMS_BASED_ENCRYPTION</code>.
                  type: string
                  minLength: 1
                  maxLength: 2048
  '/20200301/gateways/{gatewayId}/capability/{capabilityNamespace}':
    get:
      operationId: DescribeGatewayCapabilityConfiguration
      description: 'Retrieves information about a gateway capability configuration. Each gateway capability defines data sources for a gateway. A capability configuration can contain multiple data source configurations. If you define OPC-UA sources for a gateway in the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To list all capability configurations for a gateway, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html">DescribeGateway</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGatewayCapabilityConfigurationResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: gatewayId
          in: path
          required: true
          description: The ID of the gateway that defines the capability configuration.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: capabilityNamespace
          in: path
          required: true
          description: 'The namespace of the capability configuration. For example, if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace <code>iotsitewise:opcuacollector:version</code>, where <code>version</code> is a number such as <code>1</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z]+:[a-zA-Z]+:[0-9]+$'
            minLength: 1
            maxLength: 512
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /logging:
    get:
      operationId: DescribeLoggingOptions
      description: Retrieves the current IoT SiteWise logging options.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLoggingOptionsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutLoggingOptions
      description: Sets logging options for IoT SiteWise.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoggingOptionsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - loggingOptions
              properties:
                loggingOptions:
                  description: Contains logging options.
                  type: object
                  properties:
                    level:
                      $ref: '#/components/schemas/LoggingLevel'
                      description: The IoT SiteWise logging verbosity level.
  /configuration/account/storage:
    get:
      operationId: DescribeStorageConfiguration
      description: Retrieves information about the storage configuration for IoT SiteWise.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeStorageConfigurationResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: PutStorageConfiguration
      description: Configures storage settings for IoT SiteWise.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutStorageConfigurationResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - storageType
              properties:
                storageType:
                  description: '<p>The type of storage that you specified for your data. The storage type can be one of the following values:</p> <ul> <li> <p> <code>SITEWISE_DEFAULT_STORAGE</code> – IoT SiteWise replicates your data into a service managed database.</p> </li> <li> <p> <code>MULTI_LAYER_STORAGE</code> – IoT SiteWise replicates your data into a service managed database and saves a copy of your raw data and metadata in an Amazon S3 object that you specified.</p> </li> </ul>'
                  type: string
                  enum:
                    - SITEWISE_DEFAULT_STORAGE
                    - MULTI_LAYER_STORAGE
                multiLayerStorage:
                  description: Contains information about the storage destination.
                  type: object
                  properties:
                    customerManagedS3Storage:
                      $ref: '#/components/schemas/CustomerManagedS3Storage'
                      description: Contains information about a customer managed Amazon S3 bucket.
  '/assets/{assetId}/disassociate':
    post:
      operationId: DisassociateAssets
      description: Disassociates a child asset from the given parent asset through a hierarchy defined in the parent asset's model.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
      parameters:
        - name: assetId
          in: path
          required: true
          description: The ID of the parent asset from which to disassociate the child asset.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - hierarchyId
                - childAssetId
              properties:
                hierarchyId:
                  description: 'The ID of a hierarchy in the parent asset''s model. Hierarchies allow different groupings of assets to be formed that all come from the same asset model. You can use the hierarchy ID to identify the correct asset to disassociate. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  minLength: 36
                  maxLength: 36
                childAssetId:
                  description: The ID of the child asset to disassociate.
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  minLength: 36
                  maxLength: 36
                clientToken:
                  description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
                  type: string
                  pattern: '\S{36,64}'
                  minLength: 36
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /properties/aggregates#aggregateTypes&resolution&startDate&endDate:
    get:
      operationId: GetAssetPropertyAggregates
      description: '<p>Gets aggregated values for an asset property. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#aggregates">Querying aggregates</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>To identify an asset property, you must specify one of the following:</p> <ul> <li> <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p> </li> <li> <p>A <code>propertyAlias</code>, which is a data stream alias (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property''s alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetPropertyAggregatesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: assetId
          in: query
          required: false
          description: The ID of the asset.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: propertyId
          in: query
          required: false
          description: The ID of the asset property.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: propertyAlias
          in: query
          required: false
          description: 'The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.'
          schema:
            type: string
            pattern: '[^\u0000-\u001F\u007F]+'
            minLength: 1
            maxLength: 2048
        - name: aggregateTypes
          in: query
          required: true
          description: The data aggregating function.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AggregateType'
            minItems: 1
        - name: resolution
          in: query
          required: true
          description: The time interval over which to aggregate data.
          schema:
            type: string
            pattern: 1m|1h|1d
            minLength: 2
            maxLength: 2
        - name: qualities
          in: query
          required: false
          description: The quality by which to filter asset data.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Quality'
            minItems: 1
            maxItems: 1
        - name: startDate
          in: query
          required: true
          description: 'The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.'
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: true
          description: 'The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.'
          schema:
            type: string
            format: date-time
        - name: timeOrdering
          in: query
          required: false
          description: '<p>The chronological sorting order of the requested information.</p> <p>Default: <code>ASCENDING</code> </p>'
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for each paginated request.</p> <p>Default: 100</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /properties/latest:
    get:
      operationId: GetAssetPropertyValue
      description: '<p>Gets an asset property''s current value. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#current-values">Querying current values</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>To identify an asset property, you must specify one of the following:</p> <ul> <li> <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p> </li> <li> <p>A <code>propertyAlias</code>, which is a data stream alias (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property''s alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetPropertyValueResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: assetId
          in: query
          required: false
          description: The ID of the asset.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: propertyId
          in: query
          required: false
          description: The ID of the asset property.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: propertyAlias
          in: query
          required: false
          description: 'The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.'
          schema:
            type: string
            pattern: '[^\u0000-\u001F\u007F]+'
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /properties/history:
    get:
      operationId: GetAssetPropertyValueHistory
      description: '<p>Gets the history of an asset property''s values. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values">Querying historical values</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>To identify an asset property, you must specify one of the following:</p> <ul> <li> <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p> </li> <li> <p>A <code>propertyAlias</code>, which is a data stream alias (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property''s alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetPropertyValueHistoryResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: assetId
          in: query
          required: false
          description: The ID of the asset.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: propertyId
          in: query
          required: false
          description: The ID of the asset property.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: propertyAlias
          in: query
          required: false
          description: 'The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.'
          schema:
            type: string
            pattern: '[^\u0000-\u001F\u007F]+'
            minLength: 1
            maxLength: 2048
        - name: startDate
          in: query
          required: false
          description: 'The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.'
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: false
          description: 'The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.'
          schema:
            type: string
            format: date-time
        - name: qualities
          in: query
          required: false
          description: The quality by which to filter asset data.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Quality'
            minItems: 1
            maxItems: 1
        - name: timeOrdering
          in: query
          required: false
          description: '<p>The chronological sorting order of the requested information.</p> <p>Default: <code>ASCENDING</code> </p>'
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for each paginated request.</p> <p>Default: 100</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /properties/interpolated#startTimeInSeconds&endTimeInSeconds&quality&intervalInSeconds&type:
    get:
      operationId: GetInterpolatedAssetPropertyValues
      description: '<p>Get interpolated values for an asset property for a specified time interval, during a period of time. For example, you can use the this operation to return the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days.</p> <p>To identify an asset property, you must specify one of the following:</p> <ul> <li> <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p> </li> <li> <p>A <code>propertyAlias</code>, which is a data stream alias (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property''s alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInterpolatedAssetPropertyValuesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: assetId
          in: query
          required: false
          description: The ID of the asset.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: propertyId
          in: query
          required: false
          description: The ID of the asset property.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: propertyAlias
          in: query
          required: false
          description: 'The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.'
          schema:
            type: string
            pattern: '[^\u0000-\u001F\u007F]+'
            minLength: 1
            maxLength: 2048
        - name: startTimeInSeconds
          in: query
          required: true
          description: 'The exclusive start of the range from which to interpolate data, expressed in seconds in Unix epoch time.'
          schema:
            type: integer
            minimum: 1
            maximum: 31556889864403200
        - name: startTimeOffsetInNanos
          in: query
          required: false
          description: The nanosecond offset converted from <code>startTimeInSeconds</code>.
          schema:
            type: integer
            minimum: 0
            maximum: 999999999
        - name: endTimeInSeconds
          in: query
          required: true
          description: 'The inclusive end of the range from which to interpolate data, expressed in seconds in Unix epoch time.'
          schema:
            type: integer
            minimum: 1
            maximum: 31556889864403200
        - name: endTimeOffsetInNanos
          in: query
          required: false
          description: The nanosecond offset converted from <code>endTimeInSeconds</code>.
          schema:
            type: integer
            minimum: 0
            maximum: 999999999
        - name: quality
          in: query
          required: true
          description: The quality of the asset property value. You can use this parameter as a filter to choose only the asset property values that have a specific quality.
          schema:
            type: string
            enum:
              - GOOD
              - BAD
              - UNCERTAIN
        - name: intervalInSeconds
          in: query
          required: true
          description: The time interval in seconds over which to interpolate data. Each interval starts when the previous one ends.
          schema:
            type: integer
            minimum: 1
            maximum: 320000000
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return for each paginated request. If not specified, the default value is 10.'
          schema:
            type: integer
            minimum: 1
        - name: type
          in: query
          required: true
          description: '<p>The interpolation type.</p> <p>Valid values: <code>LINEAR_INTERPOLATION | LOCF_INTERPOLATION</code> </p> <p>For the <code>LOCF_INTERPOLATION</code> interpolation, if no data point is found for an interval, IoT SiteWise returns the same interpolated value calculated for the previous interval and carries forward this interpolated value until a new data point is found.</p> <p>For example, you can get the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days. If the <code>LOCF_INTERPOLATION</code> interpolation starts on July 1, 2021, at 9 AM, IoT SiteWise uses the data points from July 1, 2021, at 9 AM to July 2, 2021, at 9 AM to compute the first interpolated value. If no data points is found after 9 A.M. on July 2, 2021, IoT SiteWise uses the same interpolated value for the rest of the days.</p>'
          schema:
            type: string
            minLength: 1
            maxLength: 256
        - name: intervalWindowInSeconds
          in: query
          required: false
          description: '<p>The query interval for the window in seconds. IoT SiteWise computes each interpolated value by using data points from the timestamp of each interval minus the window to the timestamp of each interval plus the window. If not specified, the window is between the start time minus the interval and the end time plus the interval. </p> <note> <ul> <li> <p>If you specify a value for the <code>intervalWindowInSeconds</code> parameter, the <code>type</code> parameter must be <code>LINEAR_INTERPOLATION</code>.</p> </li> <li> <p>If no data point is found during the specified query window, IoT SiteWise won''t return an interpolated value for the interval. This indicates that there''s a gap in the ingested data points.</p> </li> </ul> </note> <p>For example, you can get the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days. If the interpolation starts on July 1, 2021, at 9 AM with a window of 2 hours, IoT SiteWise uses the data points from 7 AM (9 AM - 2 hours) to 11 AM (9 AM + 2 hours) on July 2, 2021 to compute the first interpolated value, uses the data points from 7 AM (9 AM - 2 hours) to 11 AM (9 AM + 2 hours) on July 3, 2021 to compute the second interpolated value, and so on. </p>'
          schema:
            type: integer
            minimum: 1
            maximum: 320000000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assets/{assetId}/assetRelationships#traversalType':
    get:
      operationId: ListAssetRelationships
      description: Retrieves a paginated list of asset relationships for an asset. You can use this operation to identify an asset's root asset and all associated assets between that asset and its root.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetRelationshipsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: assetId
          in: path
          required: true
          description: The ID of the asset.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: traversalType
          in: query
          required: true
          description: '<p>The type of traversal to use to identify asset relationships. Choose the following option:</p> <ul> <li> <p> <code>PATH_TO_ROOT</code> – Identify the asset''s parent assets up to the root asset. The asset that you specify in <code>assetId</code> is the first result in the list of <code>assetRelationshipSummaries</code>, and the root asset is the last result.</p> </li> </ul>'
          schema:
            type: string
            enum:
              - PATH_TO_ROOT
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return for each paginated request.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assets/{assetId}/hierarchies':
    get:
      operationId: ListAssociatedAssets
      description: '<p>Retrieves a paginated list of associated assets.</p> <p>You can use this operation to do the following:</p> <ul> <li> <p>List child assets associated to a parent asset by a hierarchy that you specify.</p> </li> <li> <p>List an asset''s parent asset.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociatedAssetsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: assetId
          in: path
          required: true
          description: The ID of the asset to query.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: hierarchyId
          in: query
          required: false
          description: '<p>The ID of the hierarchy by which child assets are associated to the asset. To find a hierarchy ID, use the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAsset.html">DescribeAsset</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetModel.html">DescribeAssetModel</a> operations. This parameter is required if you choose <code>CHILD</code> for <code>traversalDirection</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>'
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: traversalDirection
          in: query
          required: false
          description: '<p>The direction to list associated assets. Choose one of the following options:</p> <ul> <li> <p> <code>CHILD</code> – The list includes all child assets associated to the asset. The <code>hierarchyId</code> parameter is required if you choose <code>CHILD</code>.</p> </li> <li> <p> <code>PARENT</code> – The list includes the asset''s parent asset.</p> </li> </ul> <p>Default: <code>CHILD</code> </p>'
          schema:
            type: string
            enum:
              - PARENT
              - CHILD
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /dashboards#projectId:
    get:
      operationId: ListDashboards
      description: Retrieves a paginated list of dashboards for an IoT SiteWise Monitor project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDashboardsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: projectId
          in: query
          required: true
          description: The ID of the project.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/projects/{projectId}/assets':
    get:
      operationId: ListProjectAssets
      description: Retrieves a paginated list of assets associated with an IoT SiteWise Monitor project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectAssetsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /projects#portalId:
    get:
      operationId: ListProjects
      description: Retrieves a paginated list of projects for an IoT SiteWise Monitor portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: portalId
          in: query
          required: true
          description: The ID of the portal.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: The token to be used for the next set of paginated results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/=]+'
            minLength: 1
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tags#resourceArn:
    get:
      operationId: ListTagsForResource
      description: Retrieves the list of tags for an IoT SiteWise resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the resource.'
          schema:
            type: string
            minLength: 1
            maxLength: 1011
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: 'Adds tags to an IoT SiteWise resource. If a tag already exists for the resource, this operation updates the tag''s value.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '487':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the resource to tag.'
          schema:
            type: string
            minLength: 1
            maxLength: 1011
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: 'A list of key-value pairs that contain metadata for the resource. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  /tags#resourceArn&tagKeys:
    delete:
      operationId: UntagResource
      description: Removes a tag from an IoT SiteWise resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the resource to untag.'
          schema:
            type: string
            minLength: 1
            maxLength: 1011
        - name: tagKeys
          in: query
          required: true
          description: A list of keys for tags to remove from the resource.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 0
            maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/20200301/gateways/{gatewayId}/capability':
    post:
      operationId: UpdateGatewayCapabilityConfiguration
      description: 'Updates a gateway capability configuration or defines a new capability configuration. Each gateway capability defines data sources for a gateway. A capability configuration can contain multiple data source configurations. If you define OPC-UA sources for a gateway in the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To list all capability configurations for a gateway, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html">DescribeGateway</a>.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGatewayCapabilityConfigurationResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictingOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: gatewayId
          in: path
          required: true
          description: The ID of the gateway to be updated.
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - capabilityNamespace
                - capabilityConfiguration
              properties:
                capabilityNamespace:
                  description: 'The namespace of the gateway capability configuration to be updated. For example, if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace <code>iotsitewise:opcuacollector:version</code>, where <code>version</code> is a number such as <code>1</code>.'
                  type: string
                  pattern: '^[a-zA-Z]+:[a-zA-Z]+:[0-9]+$'
                  minLength: 1
                  maxLength: 512
                capabilityConfiguration:
                  description: 'The JSON document that defines the configuration for the gateway capability. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/configure-sources.html#configure-source-cli">Configuring data sources (CLI)</a> in the <i>IoT SiteWise User Guide</i>.'
                  type: string
                  minLength: 1
                  maxLength: 104857600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    InvalidRequestException: {}
    ResourceNotFoundException: {}
    InternalFailureException: {}
    LimitExceededException: {}
    ThrottlingException: {}
    ConflictingOperationException: {}
    BatchAssociateProjectAssetsResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/BatchAssociateProjectAssetsErrors'
          description: 'A list of associated error information, if any.'
    ID:
      type: string
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      minLength: 36
      maxLength: 36
    BatchDisassociateProjectAssetsResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/BatchDisassociateProjectAssetsErrors'
          description: 'A list of associated error information, if any.'
    BatchPutAssetPropertyValueResponse:
      type: object
      required:
        - errorEntries
      properties:
        errorEntries:
          $ref: '#/components/schemas/BatchPutAssetPropertyErrorEntries'
          description: A list of the errors (if any) associated with the batch put request. Each error entry contains the <code>entryId</code> of the entry that failed.
    PutAssetPropertyValueEntry:
      type: object
      required:
        - entryId
        - propertyValues
      properties:
        entryId:
          $ref: '#/components/schemas/EntryId'
          description: The user specified ID for the entry. You can use this ID to identify which entries failed.
        assetId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset to update.
        propertyId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset property for this entry.
        propertyAlias:
          $ref: '#/components/schemas/AssetPropertyAlias'
          description: 'The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.'
        propertyValues:
          $ref: '#/components/schemas/AssetPropertyValues'
          description: 'The list of property values to upload. You can specify up to 10 <code>propertyValues</code> array elements. '
      description: 'Contains a list of value updates for an asset property in the list of asset entries consumed by the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchPutAssetPropertyValue.html">BatchPutAssetPropertyValue</a> API operation.'
    ServiceUnavailableException: {}
    CreateAccessPolicyResponse:
      type: object
      required:
        - accessPolicyId
        - accessPolicyArn
      properties:
        accessPolicyId:
          $ref: '#/components/schemas/ID'
          description: The ID of the access policy.
        accessPolicyArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the access policy, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/${AccessPolicyId}</code> </p>'
    UserIdentity:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/IdentityId'
          description: The Amazon Web Services SSO ID of the user.
      description: Contains information for a user identity in an access policy.
    GroupIdentity:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/IdentityId'
          description: The Amazon Web Services SSO ID of the group.
      description: Contains information for a group identity in an access policy.
    IAMUserIdentity:
      type: object
      required:
        - arn
      properties:
        arn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The ARN of the IAM user. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM ARNs</a> in the <i>IAM User Guide</i>.</p> <note> <p>If you delete the IAM user, access policies that contain this identity include an empty <code>arn</code>. You can delete the access policy for the IAM user that no longer exists.</p> </note>'
      description: Contains information about an Identity and Access Management user.
    IAMRoleIdentity:
      type: object
      required:
        - arn
      properties:
        arn:
          $ref: '#/components/schemas/ARN'
          description: 'The ARN of the IAM role. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM ARNs</a> in the <i>IAM User Guide</i>.'
      description: 'Contains information about an Identity and Access Management role. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM roles</a> in the <i>IAM User Guide</i>.'
    PortalResource:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the portal.
      description: Identifies an IoT SiteWise Monitor portal.
    ProjectResource:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the project.
      description: Identifies a specific IoT SiteWise Monitor project.
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    CreateAssetResponse:
      type: object
      required:
        - assetId
        - assetArn
        - assetStatus
      properties:
        assetId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset. This ID uniquely identifies the asset within IoT SiteWise and can be used with other IoT SiteWise APIs.
        assetArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}</code> </p>'
        assetStatus:
          $ref: '#/components/schemas/AssetStatus'
          description: 'The status of the asset, which contains a state (<code>CREATING</code> after successfully calling this operation) and any error message.'
    ResourceAlreadyExistsException: {}
    CreateAssetModelResponse:
      type: object
      required:
        - assetModelId
        - assetModelArn
        - assetModelStatus
      properties:
        assetModelId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset model. You can use this ID when you call other IoT SiteWise APIs.
        assetModelArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset model, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code> </p>'
        assetModelStatus:
          $ref: '#/components/schemas/AssetModelStatus'
          description: 'The status of the asset model, which contains a state (<code>CREATING</code> after successfully calling this operation) and any error message.'
    AssetModelPropertyDefinition:
      type: object
      required:
        - name
        - dataType
        - type
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the property definition.
        dataType:
          $ref: '#/components/schemas/PropertyDataType'
          description: '<p>The data type of the property definition.</p> <p>If you specify <code>STRUCT</code>, you must also specify <code>dataTypeSpec</code> to identify the type of the structure for this property.</p>'
        dataTypeSpec:
          $ref: '#/components/schemas/Name'
          description: <p>The data type of the structure for this property. This parameter is required on properties that have the <code>STRUCT</code> data type.</p> <p>The options for this parameter depend on the type of the composite model in which you define this property. Use <code>AWS/ALARM_STATE</code> for alarm state in alarm composite models.</p>
        unit:
          $ref: '#/components/schemas/PropertyUnit'
          description: 'The unit of the property definition, such as <code>Newtons</code> or <code>RPM</code>.'
        type:
          $ref: '#/components/schemas/PropertyType'
          description: The property definition type (see <code>PropertyType</code>). You can only specify one type in a property definition.
      description: Contains an asset model property definition. This property definition is applied to all assets created from the asset model.
    AssetModelHierarchyDefinition:
      type: object
      required:
        - name
        - childAssetModelId
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: 'The name of the asset model hierarchy definition (as specified in the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation).'
        childAssetModelId:
          $ref: '#/components/schemas/ID'
          description: The ID of an asset model for this hierarchy.
      description: Contains an asset model hierarchy used in asset model creation. An asset model hierarchy determines the kind (or type) of asset that can belong to a hierarchy.
    AssetModelCompositeModelDefinition:
      type: object
      required:
        - name
        - type
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the composite model.
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the composite model.
        type:
          $ref: '#/components/schemas/Name'
          description: 'The type of the composite model. For alarm composite models, this type is <code>AWS/ALARM</code>.'
        properties:
          description: The asset property definitions for this composite model.
      description: Contains a composite model definition in an asset model. This composite model definition is applied to all assets created from the asset model.
    CreateDashboardResponse:
      type: object
      required:
        - dashboardId
        - dashboardArn
      properties:
        dashboardId:
          $ref: '#/components/schemas/ID'
          description: The ID of the dashboard.
        dashboardArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the dashboard, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/${DashboardId}</code> </p>'
    CreateGatewayResponse:
      type: object
      required:
        - gatewayId
        - gatewayArn
      properties:
        gatewayId:
          $ref: '#/components/schemas/ID'
          description: The ID of the gateway device. You can use this ID when you call other IoT SiteWise APIs.
        gatewayArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the gateway, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}</code> </p>'
    Greengrass:
      type: object
      required:
        - groupArn
      properties:
        groupArn:
          $ref: '#/components/schemas/ARN'
          description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the Greengrass group. For more information about how to find a group''s ARN, see <a href="https://docs.aws.amazon.com/greengrass/latest/apireference/listgroups-get.html">ListGroups</a> and <a href="https://docs.aws.amazon.com/greengrass/latest/apireference/getgroup-get.html">GetGroup</a> in the <i>IoT Greengrass API Reference</i>.'
      description: 'Contains details for a gateway that runs on IoT Greengrass. To create a gateway that runs on IoT Greengrass, you must add the IoT SiteWise connector to a Greengrass group and deploy it. Your Greengrass group must also have permissions to upload data to IoT SiteWise. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gateway-connector.html">Ingesting data using a gateway</a> in the <i>IoT SiteWise User Guide</i>.'
    GreengrassV2:
      type: object
      required:
        - coreDeviceThingName
      properties:
        coreDeviceThingName:
          $ref: '#/components/schemas/CoreDeviceThingName'
          description: The name of the IoT thing for your IoT Greengrass V2 core device.
      description: 'Contains details for a gateway that runs on IoT Greengrass V2. To create a gateway that runs on IoT Greengrass V2, you must deploy the IoT SiteWise Edge component to your gateway device. Your <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/device-service-role.html">Greengrass device role</a> must use the <code>AWSIoTSiteWiseEdgeAccess</code> policy. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/sw-gateways.html">Using IoT SiteWise at the edge</a> in the <i>IoT SiteWise User Guide</i>.'
    CreatePortalResponse:
      type: object
      required:
        - portalId
        - portalArn
        - portalStartUrl
        - portalStatus
        - ssoApplicationId
      properties:
        portalId:
          $ref: '#/components/schemas/ID'
          description: The ID of the created portal.
        portalArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the portal, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}</code> </p>'
        portalStartUrl:
          $ref: '#/components/schemas/Url'
          description: 'The URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that use Amazon Web Services SSO for authentication. For portals that use IAM for authentication, you must use the IoT SiteWise console to get a URL that you can use to access the portal.'
        portalStatus:
          $ref: '#/components/schemas/PortalStatus'
          description: 'The status of the portal, which contains a state (<code>CREATING</code> after successfully calling this operation) and any error message.'
        ssoApplicationId:
          $ref: '#/components/schemas/SSOApplicationId'
          description: 'The associated Amazon Web Services SSO application ID, if the portal uses Amazon Web Services SSO.'
    ImageFileData:
      type: string
      minLength: 1
      maxLength: 1500000
    ImageFileType:
      type: string
      enum:
        - PNG
    ARN:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1600
    CreateProjectResponse:
      type: object
      required:
        - projectId
        - projectArn
      properties:
        projectId:
          $ref: '#/components/schemas/ID'
          description: The ID of the project.
        projectArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the project, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}</code> </p>'
    DeleteAccessPolicyResponse:
      type: object
      properties: {}
    DeleteAssetResponse:
      type: object
      required:
        - assetStatus
      properties:
        assetStatus:
          $ref: '#/components/schemas/AssetStatus'
          description: 'The status of the asset, which contains a state (<code>DELETING</code> after successfully calling this operation) and any error message.'
    DeleteAssetModelResponse:
      type: object
      required:
        - assetModelStatus
      properties:
        assetModelStatus:
          $ref: '#/components/schemas/AssetModelStatus'
          description: 'The status of the asset model, which contains a state (<code>DELETING</code> after successfully calling this operation) and any error message.'
    DeleteDashboardResponse:
      type: object
      properties: {}
    DeletePortalResponse:
      type: object
      required:
        - portalStatus
      properties:
        portalStatus:
          $ref: '#/components/schemas/PortalStatus'
          description: 'The status of the portal, which contains a state (<code>DELETING</code> after successfully calling this operation) and any error message.'
    DeleteProjectResponse:
      type: object
      properties: {}
    DescribeAccessPolicyResponse:
      type: object
      required:
        - accessPolicyId
        - accessPolicyArn
        - accessPolicyIdentity
        - accessPolicyResource
        - accessPolicyPermission
        - accessPolicyCreationDate
        - accessPolicyLastUpdateDate
      properties:
        accessPolicyId:
          $ref: '#/components/schemas/ID'
          description: The ID of the access policy.
        accessPolicyArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the access policy, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/${AccessPolicyId}</code> </p>'
        accessPolicyIdentity:
          $ref: '#/components/schemas/Identity'
          description: 'The identity (Amazon Web Services SSO user, Amazon Web Services SSO group, or IAM user) to which this access policy applies.'
        accessPolicyResource:
          $ref: '#/components/schemas/Resource'
          description: The IoT SiteWise Monitor resource (portal or project) to which this access policy provides access.
        accessPolicyPermission:
          $ref: '#/components/schemas/Permission'
          description: The access policy permission. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.
        accessPolicyCreationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the access policy was created, in Unix epoch time.'
        accessPolicyLastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the access policy was last updated, in Unix epoch time.'
    DescribeAssetResponse:
      type: object
      required:
        - assetId
        - assetArn
        - assetName
        - assetModelId
        - assetProperties
        - assetHierarchies
        - assetCreationDate
        - assetLastUpdateDate
        - assetStatus
      properties:
        assetId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset.
        assetArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}</code> </p>'
        assetName:
          $ref: '#/components/schemas/Name'
          description: The name of the asset.
        assetModelId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset model that was used to create the asset.
        assetProperties:
          $ref: '#/components/schemas/AssetProperties'
          description: <p>The list of asset properties for the asset.</p> <p>This object doesn't include properties that you define in composite models. You can find composite model properties in the <code>assetCompositeModels</code> object.</p>
        assetHierarchies:
          $ref: '#/components/schemas/AssetHierarchies'
          description: A list of asset hierarchies that each contain a <code>hierarchyId</code>. A hierarchy specifies allowed parent/child asset relationships.
        assetCompositeModels:
          $ref: '#/components/schemas/AssetCompositeModels'
          description: The composite models for the asset.
        assetCreationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the asset was created, in Unix epoch time.'
        assetLastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the asset was last updated, in Unix epoch time.'
        assetStatus:
          $ref: '#/components/schemas/AssetStatus'
          description: 'The current status of the asset, which contains a state and any error message.'
    DescribeAssetModelResponse:
      type: object
      required:
        - assetModelId
        - assetModelArn
        - assetModelName
        - assetModelDescription
        - assetModelProperties
        - assetModelHierarchies
        - assetModelCreationDate
        - assetModelLastUpdateDate
        - assetModelStatus
      properties:
        assetModelId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset model.
        assetModelArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset model, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code> </p>'
        assetModelName:
          $ref: '#/components/schemas/Name'
          description: The name of the asset model.
        assetModelDescription:
          $ref: '#/components/schemas/Description'
          description: The asset model's description.
        assetModelProperties:
          $ref: '#/components/schemas/AssetModelProperties'
          description: <p>The list of asset properties for the asset model.</p> <p>This object doesn't include properties that you define in composite models. You can find composite model properties in the <code>assetModelCompositeModels</code> object.</p>
        assetModelHierarchies:
          $ref: '#/components/schemas/AssetModelHierarchies'
          description: A list of asset model hierarchies that each contain a <code>childAssetModelId</code> and a <code>hierarchyId</code> (named <code>id</code>). A hierarchy specifies allowed parent/child asset relationships for an asset model.
        assetModelCompositeModels:
          $ref: '#/components/schemas/AssetModelCompositeModels'
          description: The list of composite asset models for the asset model.
        assetModelCreationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the asset model was created, in Unix epoch time.'
        assetModelLastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the asset model was last updated, in Unix epoch time.'
        assetModelStatus:
          $ref: '#/components/schemas/AssetModelStatus'
          description: 'The current status of the asset model, which contains a state and any error message.'
    DescribeAssetPropertyResponse:
      type: object
      required:
        - assetId
        - assetName
        - assetModelId
      properties:
        assetId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset.
        assetName:
          $ref: '#/components/schemas/Name'
          description: The name of the asset.
        assetModelId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset model.
        assetProperty:
          $ref: '#/components/schemas/Property'
          description: '<p>The asset property''s definition, alias, and notification state.</p> <p>This response includes this object for normal asset properties. If you describe an asset property in a composite model, this response includes the asset property information in <code>compositeModel</code>.</p>'
        compositeModel:
          $ref: '#/components/schemas/CompositeModelProperty'
          description: 'The composite asset model that declares this asset property, if this asset property exists in a composite model.'
    DescribeDashboardResponse:
      type: object
      required:
        - dashboardId
        - dashboardArn
        - dashboardName
        - projectId
        - dashboardDefinition
        - dashboardCreationDate
        - dashboardLastUpdateDate
      properties:
        dashboardId:
          $ref: '#/components/schemas/ID'
          description: The ID of the dashboard.
        dashboardArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the dashboard, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/${DashboardId}</code> </p>'
        dashboardName:
          $ref: '#/components/schemas/Name'
          description: The name of the dashboard.
        projectId:
          $ref: '#/components/schemas/ID'
          description: The ID of the project that the dashboard is in.
        dashboardDescription:
          $ref: '#/components/schemas/Description'
          description: The dashboard's description.
        dashboardDefinition:
          $ref: '#/components/schemas/DashboardDefinition'
          description: 'The dashboard''s definition JSON literal. For detailed information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html">Creating dashboards (CLI)</a> in the <i>IoT SiteWise User Guide</i>.'
        dashboardCreationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the dashboard was created, in Unix epoch time.'
        dashboardLastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the dashboard was last updated, in Unix epoch time.'
    DescribeDefaultEncryptionConfigurationResponse:
      type: object
      required:
        - encryptionType
        - configurationStatus
      properties:
        encryptionType:
          $ref: '#/components/schemas/EncryptionType'
          description: The type of encryption used for the encryption configuration.
        kmsKeyArn:
          $ref: '#/components/schemas/ARN'
          description: The key ARN of the customer managed customer master key (CMK) used for KMS encryption if you use <code>KMS_BASED_ENCRYPTION</code>.
        configurationStatus:
          $ref: '#/components/schemas/ConfigurationStatus'
          description: 'The status of the account configuration. This contains the <code>ConfigurationState</code>. If there''s an error, it also contains the <code>ErrorDetails</code>.'
    DescribeGatewayResponse:
      type: object
      required:
        - gatewayId
        - gatewayName
        - gatewayArn
        - gatewayCapabilitySummaries
        - creationDate
        - lastUpdateDate
      properties:
        gatewayId:
          $ref: '#/components/schemas/ID'
          description: The ID of the gateway device.
        gatewayName:
          $ref: '#/components/schemas/Name'
          description: The name of the gateway.
        gatewayArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the gateway, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}</code> </p>'
        gatewayPlatform:
          $ref: '#/components/schemas/GatewayPlatform'
          description: The gateway's platform.
        gatewayCapabilitySummaries:
          $ref: '#/components/schemas/GatewayCapabilitySummaries'
          description: 'A list of gateway capability summaries that each contain a namespace and status. Each gateway capability defines data sources for the gateway. To retrieve a capability configuration''s definition, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGatewayCapabilityConfiguration.html">DescribeGatewayCapabilityConfiguration</a>.'
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the gateway was created, in Unix epoch time.'
        lastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the gateway was last updated, in Unix epoch time.'
    DescribeGatewayCapabilityConfigurationResponse:
      type: object
      required:
        - gatewayId
        - capabilityNamespace
        - capabilityConfiguration
        - capabilitySyncStatus
      properties:
        gatewayId:
          $ref: '#/components/schemas/ID'
          description: The ID of the gateway that defines the capability configuration.
        capabilityNamespace:
          $ref: '#/components/schemas/CapabilityNamespace'
          description: The namespace of the gateway capability.
        capabilityConfiguration:
          $ref: '#/components/schemas/CapabilityConfiguration'
          description: 'The JSON document that defines the gateway capability''s configuration. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/configure-sources.html#configure-source-cli">Configuring data sources (CLI)</a> in the <i>IoT SiteWise User Guide</i>.'
        capabilitySyncStatus:
          $ref: '#/components/schemas/CapabilitySyncStatus'
          description: '<p>The synchronization status of the capability configuration. The sync status can be one of the following:</p> <ul> <li> <p> <code>IN_SYNC</code> – The gateway is running the capability configuration.</p> </li> <li> <p> <code>OUT_OF_SYNC</code> – The gateway hasn''t received the capability configuration.</p> </li> <li> <p> <code>SYNC_FAILED</code> – The gateway rejected the capability configuration.</p> </li> </ul>'
    DescribeLoggingOptionsResponse:
      type: object
      required:
        - loggingOptions
      properties:
        loggingOptions:
          $ref: '#/components/schemas/LoggingOptions'
          description: The current logging options.
    DescribePortalResponse:
      type: object
      required:
        - portalId
        - portalArn
        - portalName
        - portalClientId
        - portalStartUrl
        - portalContactEmail
        - portalStatus
        - portalCreationDate
        - portalLastUpdateDate
      properties:
        portalId:
          $ref: '#/components/schemas/ID'
          description: The ID of the portal.
        portalArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the portal, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}</code> </p>'
        portalName:
          $ref: '#/components/schemas/Name'
          description: The name of the portal.
        portalDescription:
          $ref: '#/components/schemas/Description'
          description: The portal's description.
        portalClientId:
          $ref: '#/components/schemas/PortalClientId'
          description: The Amazon Web Services SSO application generated client ID (used with Amazon Web Services SSO APIs). IoT SiteWise includes <code>portalClientId</code> for only portals that use Amazon Web Services SSO to authenticate users.
        portalStartUrl:
          $ref: '#/components/schemas/Url'
          description: 'The URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that use Amazon Web Services SSO for authentication. For portals that use IAM for authentication, you must use the IoT SiteWise console to get a URL that you can use to access the portal.'
        portalContactEmail:
          $ref: '#/components/schemas/Email'
          description: The Amazon Web Services administrator's contact email address.
        portalStatus:
          $ref: '#/components/schemas/PortalStatus'
          description: 'The current status of the portal, which contains a state and any error message.'
        portalCreationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the portal was created, in Unix epoch time.'
        portalLastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the portal was last updated, in Unix epoch time.'
        portalLogoImageLocation:
          $ref: '#/components/schemas/ImageLocation'
          description: 'The portal''s logo image, which is available at a URL.'
        roleArn:
          $ref: '#/components/schemas/ARN'
          description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the service role that allows the portal''s users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.'
        portalAuthMode:
          $ref: '#/components/schemas/AuthMode'
          description: The service to use to authenticate users to the portal.
        notificationSenderEmail:
          $ref: '#/components/schemas/Email'
          description: The email address that sends alarm notifications.
        alarms:
          $ref: '#/components/schemas/Alarms'
          description: Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal.
    DescribeProjectResponse:
      type: object
      required:
        - projectId
        - projectArn
        - projectName
        - portalId
        - projectCreationDate
        - projectLastUpdateDate
      properties:
        projectId:
          $ref: '#/components/schemas/ID'
          description: The ID of the project.
        projectArn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the project, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}</code> </p>'
        projectName:
          $ref: '#/components/schemas/Name'
          description: The name of the project.
        portalId:
          $ref: '#/components/schemas/ID'
          description: The ID of the portal that the project is in.
        projectDescription:
          $ref: '#/components/schemas/Description'
          description: The project's description.
        projectCreationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the project was created, in Unix epoch time.'
        projectLastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the project was last updated, in Unix epoch time.'
    DescribeStorageConfigurationResponse:
      type: object
      required:
        - storageType
        - configurationStatus
      properties:
        storageType:
          $ref: '#/components/schemas/StorageType'
          description: '<p>The type of storage that you specified for your data. The storage type can be one of the following values:</p> <ul> <li> <p> <code>SITEWISE_DEFAULT_STORAGE</code> – IoT SiteWise replicates your data into a service managed database.</p> </li> <li> <p> <code>MULTI_LAYER_STORAGE</code> – IoT SiteWise replicates your data into a service managed database and saves a copy of your raw data and metadata in an Amazon S3 object that you specified.</p> </li> </ul>'
        multiLayerStorage:
          $ref: '#/components/schemas/MultiLayerStorage'
          description: Contains information about the storage destination.
        configurationStatus:
          $ref: '#/components/schemas/ConfigurationStatus'
        lastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the storage configuration was last updated, in Unix epoch time.'
    GetAssetPropertyAggregatesResponse:
      type: object
      required:
        - aggregatedValues
      properties:
        aggregatedValues:
          $ref: '#/components/schemas/AggregatedValues'
          description: The requested aggregated values.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    AggregateType:
      type: string
      enum:
        - AVERAGE
        - COUNT
        - MAXIMUM
        - MINIMUM
        - SUM
        - STANDARD_DEVIATION
    Quality:
      type: string
      enum:
        - GOOD
        - BAD
        - UNCERTAIN
    GetAssetPropertyValueResponse:
      type: object
      properties:
        propertyValue:
          $ref: '#/components/schemas/AssetPropertyValue'
          description: The current asset property value.
    GetAssetPropertyValueHistoryResponse:
      type: object
      required:
        - assetPropertyValueHistory
      properties:
        assetPropertyValueHistory:
          $ref: '#/components/schemas/AssetPropertyValueHistory'
          description: The asset property's value history.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    GetInterpolatedAssetPropertyValuesResponse:
      type: object
      required:
        - interpolatedAssetPropertyValues
      properties:
        interpolatedAssetPropertyValues:
          $ref: '#/components/schemas/InterpolatedAssetPropertyValues'
          description: The requested interpolated values.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    ListAccessPoliciesResponse:
      type: object
      required:
        - accessPolicySummaries
      properties:
        accessPolicySummaries:
          $ref: '#/components/schemas/AccessPolicySummaries'
          description: A list that summarizes each access policy.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    ListAssetModelsResponse:
      type: object
      required:
        - assetModelSummaries
      properties:
        assetModelSummaries:
          $ref: '#/components/schemas/AssetModelSummaries'
          description: A list that summarizes each asset model.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    ListAssetRelationshipsResponse:
      type: object
      required:
        - assetRelationshipSummaries
      properties:
        assetRelationshipSummaries:
          $ref: '#/components/schemas/AssetRelationshipSummaries'
          description: A list that summarizes each asset relationship.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    ListAssetsResponse:
      type: object
      required:
        - assetSummaries
      properties:
        assetSummaries:
          $ref: '#/components/schemas/AssetSummaries'
          description: A list that summarizes each asset.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    ListAssociatedAssetsResponse:
      type: object
      required:
        - assetSummaries
      properties:
        assetSummaries:
          $ref: '#/components/schemas/AssociatedAssetsSummaries'
          description: A list that summarizes the associated assets.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    ListDashboardsResponse:
      type: object
      required:
        - dashboardSummaries
      properties:
        dashboardSummaries:
          $ref: '#/components/schemas/DashboardSummaries'
          description: A list that summarizes each dashboard in the project.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    ListGatewaysResponse:
      type: object
      required:
        - gatewaySummaries
      properties:
        gatewaySummaries:
          $ref: '#/components/schemas/GatewaySummaries'
          description: A list that summarizes each gateway.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    ListPortalsResponse:
      type: object
      properties:
        portalSummaries:
          $ref: '#/components/schemas/PortalSummaries'
          description: A list that summarizes each portal.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    ListProjectAssetsResponse:
      type: object
      required:
        - assetIds
      properties:
        assetIds:
          $ref: '#/components/schemas/AssetIDs'
          description: A list that contains the IDs of each asset associated with the project.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    ListProjectsResponse:
      type: object
      required:
        - projectSummaries
      properties:
        projectSummaries:
          $ref: '#/components/schemas/ProjectSummaries'
          description: A list that summarizes each project in the portal.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/TagMap'
          description: 'The list of key-value pairs that contain metadata for the resource. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
    UnauthorizedException: {}
    PutDefaultEncryptionConfigurationResponse:
      type: object
      required:
        - encryptionType
        - configurationStatus
      properties:
        encryptionType:
          $ref: '#/components/schemas/EncryptionType'
          description: The type of encryption used for the encryption configuration.
        kmsKeyArn:
          $ref: '#/components/schemas/ARN'
          description: The Key ARN of the KMS CMK used for KMS encryption if you use <code>KMS_BASED_ENCRYPTION</code>.
        configurationStatus:
          $ref: '#/components/schemas/ConfigurationStatus'
          description: 'The status of the account configuration. This contains the <code>ConfigurationState</code>. If there is an error, it also contains the <code>ErrorDetails</code>.'
    PutLoggingOptionsResponse:
      type: object
      properties: {}
    LoggingLevel:
      type: string
      enum:
        - ERROR
        - INFO
        - 'OFF'
    PutStorageConfigurationResponse:
      type: object
      required:
        - storageType
        - configurationStatus
      properties:
        storageType:
          $ref: '#/components/schemas/StorageType'
          description: '<p>The type of storage that you specified for your data. The storage type can be one of the following values:</p> <ul> <li> <p> <code>SITEWISE_DEFAULT_STORAGE</code> – IoT SiteWise replicates your data into a service managed database.</p> </li> <li> <p> <code>MULTI_LAYER_STORAGE</code> – IoT SiteWise replicates your data into a service managed database and saves a copy of your raw data and metadata in an Amazon S3 object that you specified.</p> </li> </ul>'
        multiLayerStorage:
          $ref: '#/components/schemas/MultiLayerStorage'
          description: Contains information about the storage destination.
        configurationStatus:
          $ref: '#/components/schemas/ConfigurationStatus'
    CustomerManagedS3Storage:
      type: object
      required:
        - s3ResourceArn
        - roleArn
      properties:
        s3ResourceArn:
          $ref: '#/components/schemas/ARN'
          description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the Amazon S3 object. For more information about how to find the ARN for an Amazon S3 object, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-arn-format.html">Amazon S3 resources</a> in the <i>Amazon Simple Storage Service User Guide</i>.'
        roleArn:
          $ref: '#/components/schemas/ARN'
          description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the Identity and Access Management role that allows IoT SiteWise to send data to Amazon S3.'
      description: Contains information about a customer managed Amazon S3 bucket.
    TagResourceResponse:
      type: object
      properties: {}
    TooManyTagsException: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateAccessPolicyResponse:
      type: object
      properties: {}
    UpdateAssetResponse:
      type: object
      required:
        - assetStatus
      properties:
        assetStatus:
          $ref: '#/components/schemas/AssetStatus'
          description: 'The status of the asset, which contains a state (<code>UPDATING</code> after successfully calling this operation) and any error message.'
    UpdateAssetModelResponse:
      type: object
      required:
        - assetModelStatus
      properties:
        assetModelStatus:
          $ref: '#/components/schemas/AssetModelStatus'
          description: 'The status of the asset model, which contains a state (<code>UPDATING</code> after successfully calling this operation) and any error message.'
    AssetModelProperty:
      type: object
      required:
        - name
        - dataType
        - type
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset model property.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the asset model property.
        dataType:
          $ref: '#/components/schemas/PropertyDataType'
          description: The data type of the asset model property.
        dataTypeSpec:
          $ref: '#/components/schemas/Name'
          description: The data type of the structure for this property. This parameter exists on properties that have the <code>STRUCT</code> data type.
        unit:
          $ref: '#/components/schemas/PropertyUnit'
          description: 'The unit of the asset model property, such as <code>Newtons</code> or <code>RPM</code>.'
        type:
          $ref: '#/components/schemas/PropertyType'
          description: The property type (see <code>PropertyType</code>).
      description: Contains information about an asset model property.
    AssetModelHierarchy:
      type: object
      required:
        - name
        - childAssetModelId
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset model hierarchy. This ID is a <code>hierarchyId</code>.
        name:
          $ref: '#/components/schemas/Name'
          description: 'The name of the asset model hierarchy that you specify by using the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation.'
        childAssetModelId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset model. All assets in this hierarchy must be instances of the <code>childAssetModelId</code> asset model.
      description: 'Describes an asset hierarchy that contains a hierarchy''s name, ID, and child asset model ID that specifies the type of asset that can be in this hierarchy.'
    AssetModelCompositeModel:
      type: object
      required:
        - name
        - type
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the composite model.
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the composite model.
        type:
          $ref: '#/components/schemas/Name'
          description: 'The type of the composite model. For alarm composite models, this type is <code>AWS/ALARM</code>.'
        properties:
          description: The asset property definitions for this composite model.
      description: Contains information about a composite model in an asset model. This object contains the asset property definitions that you define in the composite model.
    UpdateDashboardResponse:
      type: object
      properties: {}
    UpdateGatewayCapabilityConfigurationResponse:
      type: object
      required:
        - capabilityNamespace
        - capabilitySyncStatus
      properties:
        capabilityNamespace:
          $ref: '#/components/schemas/CapabilityNamespace'
          description: The namespace of the gateway capability.
        capabilitySyncStatus:
          $ref: '#/components/schemas/CapabilitySyncStatus'
          description: '<p>The synchronization status of the capability configuration. The sync status can be one of the following:</p> <ul> <li> <p> <code>IN_SYNC</code> – The gateway is running the capability configuration.</p> </li> <li> <p> <code>OUT_OF_SYNC</code> – The gateway hasn''t received the capability configuration.</p> </li> <li> <p> <code>SYNC_FAILED</code> – The gateway rejected the capability configuration.</p> </li> </ul> <p>After you update a capability configuration, its sync status is <code>OUT_OF_SYNC</code> until the gateway receives and applies or rejects the updated configuration.</p>'
    UpdatePortalResponse:
      type: object
      required:
        - portalStatus
      properties:
        portalStatus:
          $ref: '#/components/schemas/PortalStatus'
          description: 'The status of the portal, which contains a state (<code>UPDATING</code> after successfully calling this operation) and any error message.'
    ImageFile:
      type: object
      required:
        - data
        - type
      properties:
        data:
          $ref: '#/components/schemas/ImageFileData'
          description: 'The image file contents, represented as a base64-encoded string. The file size must be less than 1 MB.'
        type:
          $ref: '#/components/schemas/ImageFileType'
          description: The file type of the image.
      description: Contains an image file.
    UpdateProjectResponse:
      type: object
      properties: {}
    AccessPolicySummary:
      type: object
      required:
        - id
        - identity
        - resource
        - permission
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the access policy.
        identity:
          $ref: '#/components/schemas/Identity'
          description: 'The identity (an Amazon Web Services SSO user, an Amazon Web Services SSO group, or an IAM user).'
        resource:
          $ref: '#/components/schemas/Resource'
          description: The IoT SiteWise Monitor resource (a portal or project).
        permission:
          $ref: '#/components/schemas/Permission'
          description: The permissions for the access policy. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the access policy was created, in Unix epoch time.'
        lastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the access policy was last updated, in Unix epoch time.'
      description: Contains an access policy that defines an identity's access to an IoT SiteWise Monitor resource.
    AccessPolicySummaries:
      type: array
      items:
        $ref: '#/components/schemas/AccessPolicySummary'
    Identity:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserIdentity'
          description: An Amazon Web Services SSO user identity.
        group:
          $ref: '#/components/schemas/GroupIdentity'
          description: An Amazon Web Services SSO group identity.
        iamUser:
          $ref: '#/components/schemas/IAMUserIdentity'
          description: An IAM user identity.
        iamRole:
          $ref: '#/components/schemas/IAMRoleIdentity'
          description: An IAM role identity.
      description: '<p>Contains an identity that can access an IoT SiteWise Monitor resource.</p> <note> <p>Currently, you can''t use Amazon Web Services APIs to retrieve Amazon Web Services SSO identity IDs. You can find the Amazon Web Services SSO identity IDs in the URL of user and group pages in the <a href="https://console.aws.amazon.com/singlesignon">Amazon Web Services SSO console</a>.</p> </note>'
    Resource:
      type: object
      properties:
        portal:
          $ref: '#/components/schemas/PortalResource'
          description: A portal resource.
        project:
          $ref: '#/components/schemas/ProjectResource'
          description: A project resource.
      description: Contains an IoT SiteWise Monitor resource ID for a portal or project.
    Permission:
      type: string
      enum:
        - ADMINISTRATOR
        - VIEWER
    Timestamp:
      type: string
      format: date-time
    AggregateTypes:
      type: array
      items:
        $ref: '#/components/schemas/AggregateType'
      minItems: 1
    AggregatedDoubleValue:
      type: number
      format: double
    Aggregates:
      type: object
      properties:
        average:
          $ref: '#/components/schemas/AggregatedDoubleValue'
          description: The average (mean) value of the time series over a time interval window.
        count:
          $ref: '#/components/schemas/AggregatedDoubleValue'
          description: The count of data points in the time series over a time interval window.
        maximum:
          $ref: '#/components/schemas/AggregatedDoubleValue'
          description: The maximum value of the time series over a time interval window.
        minimum:
          $ref: '#/components/schemas/AggregatedDoubleValue'
          description: The minimum value of the time series over a time interval window.
        sum:
          $ref: '#/components/schemas/AggregatedDoubleValue'
          description: The sum of the time series over a time interval window.
        standardDeviation:
          $ref: '#/components/schemas/AggregatedDoubleValue'
          description: The standard deviation of the time series over a time interval window.
      description: Contains the (pre-calculated) aggregate values for an asset property.
    AggregatedValue:
      type: object
      required:
        - timestamp
        - value
      properties:
        timestamp:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the aggregating computations occurred, in Unix epoch time.'
        quality:
          $ref: '#/components/schemas/Quality'
          description: The quality of the aggregated data.
        value:
          $ref: '#/components/schemas/Aggregates'
          description: The value of the aggregates.
      description: 'Contains aggregated asset property values (for example, average, minimum, and maximum).'
    AggregatedValues:
      type: array
      items:
        $ref: '#/components/schemas/AggregatedValue'
    Alarms:
      type: object
      required:
        - alarmRoleArn
      properties:
        alarmRoleArn:
          $ref: '#/components/schemas/ARN'
          description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the IAM role that allows the alarm to perform actions and access Amazon Web Services resources and services, such as IoT Events.'
        notificationLambdaArn:
          $ref: '#/components/schemas/ARN'
          description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the Lambda function that manages alarm notifications. For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html">Managing alarm notifications</a> in the <i>IoT Events Developer Guide</i>.'
      description: 'Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html">Monitoring with alarms</a> in the <i>IoT SiteWise Application Guide</i>.'
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1011
    Name:
      type: string
      pattern: '[^\u0000-\u001F\u007F]+'
      minLength: 1
      maxLength: 256
    Description:
      type: string
      pattern: '[^\u0000-\u001F\u007F]+'
      minLength: 1
      maxLength: 2048
    AssetCompositeModel:
      type: object
      required:
        - name
        - type
        - properties
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the composite model.
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the composite model.
        type:
          $ref: '#/components/schemas/Name'
          description: 'The type of the composite model. For alarm composite models, this type is <code>AWS/ALARM</code>.'
        properties:
          description: The asset properties that this composite model defines.
      description: Contains information about a composite model in an asset. This object contains the asset's properties that you define in the composite model.
    AssetCompositeModels:
      type: array
      items:
        $ref: '#/components/schemas/AssetCompositeModel'
    AssetErrorCode:
      type: string
      enum:
        - INTERNAL_FAILURE
    AssetErrorMessage:
      type: string
    AssetErrorDetails:
      type: object
      required:
        - assetId
        - code
        - message
      properties:
        assetId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset.
        code:
          $ref: '#/components/schemas/AssetErrorCode'
          description: The error code.
        message:
          $ref: '#/components/schemas/AssetErrorMessage'
          description: The error message.
      description: Contains error details for the requested associate project asset action.
    AssetHierarchy:
      type: object
      required:
        - name
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the hierarchy. This ID is a <code>hierarchyId</code>.
        name:
          $ref: '#/components/schemas/Name'
          description: 'The hierarchy name provided in the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation.'
      description: Describes an asset hierarchy that contains a hierarchy's name and ID.
    AssetHierarchies:
      type: array
      items:
        $ref: '#/components/schemas/AssetHierarchy'
    AssetHierarchyInfo:
      type: object
      properties:
        parentAssetId:
          $ref: '#/components/schemas/ID'
          description: The ID of the parent asset in this asset relationship.
        childAssetId:
          $ref: '#/components/schemas/ID'
          description: The ID of the child asset in this asset relationship.
      description: Contains information about a parent asset and a child asset that are related through an asset hierarchy.
    AssetIDs:
      type: array
      items:
        $ref: '#/components/schemas/ID'
    AssetModelCompositeModelDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelCompositeModelDefinition'
    AssetModelCompositeModels:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelCompositeModel'
    AssetModelHierarchies:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelHierarchy'
    AssetModelHierarchyDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelHierarchyDefinition'
    AssetModelProperties:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelProperty'
    PropertyDataType:
      type: string
      enum:
        - STRING
        - INTEGER
        - DOUBLE
        - BOOLEAN
        - STRUCT
    PropertyUnit:
      type: string
      pattern: '[^\u0000-\u001F\u007F]+'
      minLength: 1
      maxLength: 256
    PropertyType:
      type: object
      properties:
        attribute:
          $ref: '#/components/schemas/Attribute'
          description: 'Specifies an asset attribute property. An attribute generally contains static information, such as the serial number of an <a href="https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications">IIoT</a> wind turbine.'
        measurement:
          $ref: '#/components/schemas/Measurement'
          description: 'Specifies an asset measurement property. A measurement represents a device''s raw sensor data stream, such as timestamped temperature values or timestamped power values.'
        transform:
          $ref: '#/components/schemas/Transform'
          description: 'Specifies an asset transform property. A transform contains a mathematical expression that maps a property''s data points from one form to another, such as a unit conversion from Celsius to Fahrenheit.'
        metric:
          $ref: '#/components/schemas/Metric'
          description: 'Specifies an asset metric property. A metric contains a mathematical expression that uses aggregate functions to process all input data points over a time interval and output a single data point, such as to calculate the average hourly temperature.'
      description: 'Contains a property type, which can be one of <code>attribute</code>, <code>measurement</code>, <code>metric</code>, or <code>transform</code>.'
    AssetModelPropertyDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelPropertyDefinition'
    AssetModelState:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - UPDATING
        - PROPAGATING
        - DELETING
        - FAILED
    ErrorDetails:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
          description: The error code.
        message:
          $ref: '#/components/schemas/ErrorMessage'
          description: The error message.
        details:
          $ref: '#/components/schemas/DetailedErrors'
          description: ' A list of detailed errors. '
      description: Contains the details of an IoT SiteWise error.
    AssetModelStatus:
      type: object
      required:
        - state
      properties:
        state:
          $ref: '#/components/schemas/AssetModelState'
          description: The current state of the asset model.
        error:
          $ref: '#/components/schemas/ErrorDetails'
          description: 'Contains associated error information, if any.'
      description: 'Contains current status information for an asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html">Asset and model states</a> in the <i>IoT SiteWise User Guide</i>.'
    AssetModelSummary:
      type: object
      required:
        - id
        - arn
        - name
        - description
        - creationDate
        - lastUpdateDate
        - status
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset model (used with IoT SiteWise APIs).
        arn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset model, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code> </p>'
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the asset model.
        description:
          $ref: '#/components/schemas/Description'
          description: The asset model description.
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the asset model was created, in Unix epoch time.'
        lastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the asset model was last updated, in Unix epoch time.'
        status:
          $ref: '#/components/schemas/AssetModelStatus'
          description: The current status of the asset model.
      description: Contains a summary of an asset model.
    AssetModelSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelSummary'
    AssetProperty:
      type: object
      required:
        - id
        - name
        - dataType
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset property.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the property.
        alias:
          $ref: '#/components/schemas/PropertyAlias'
          description: 'The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.'
        notification:
          $ref: '#/components/schemas/PropertyNotification'
          description: 'The asset property''s notification topic and state. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.'
        dataType:
          $ref: '#/components/schemas/PropertyDataType'
          description: The data type of the asset property.
        dataTypeSpec:
          $ref: '#/components/schemas/Name'
          description: The data type of the structure for this property. This parameter exists on properties that have the <code>STRUCT</code> data type.
        unit:
          $ref: '#/components/schemas/PropertyUnit'
          description: The unit (such as <code>Newtons</code> or <code>RPM</code>) of the asset property.
      description: Contains asset property information.
    AssetProperties:
      type: array
      items:
        $ref: '#/components/schemas/AssetProperty'
    PropertyAlias:
      type: string
      pattern: '[^\u0000-\u001F\u007F]+'
      minLength: 1
    PropertyNotification:
      type: object
      required:
        - topic
        - state
      properties:
        topic:
          $ref: '#/components/schemas/PropertyNotificationTopic'
          description: The MQTT topic to which IoT SiteWise publishes property value update notifications.
        state:
          $ref: '#/components/schemas/PropertyNotificationState'
          description: The current notification state.
      description: 'Contains asset property value notification information. When the notification state is enabled, IoT SiteWise publishes property value updates to a unique MQTT topic. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/interact-with-other-services.html">Interacting with other services</a> in the <i>IoT SiteWise User Guide</i>.'
    AssetPropertyAlias:
      type: string
      pattern: '[^\u0000-\u001F\u007F]+'
      minLength: 1
      maxLength: 2048
    Variant:
      type: object
      properties:
        stringValue:
          $ref: '#/components/schemas/PropertyValueStringValue'
          description: Asset property data of type string (sequence of characters).
        integerValue:
          $ref: '#/components/schemas/PropertyValueIntegerValue'
          description: Asset property data of type integer (whole number).
        doubleValue:
          $ref: '#/components/schemas/PropertyValueDoubleValue'
          description: Asset property data of type double (floating point number).
        booleanValue:
          $ref: '#/components/schemas/PropertyValueBooleanValue'
          description: Asset property data of type Boolean (true or false).
      description: Contains an asset property value (of a single type only).
    TimeInNanos:
      type: object
      required:
        - timeInSeconds
      properties:
        timeInSeconds:
          $ref: '#/components/schemas/TimeInSeconds'
          description: 'The timestamp date, in seconds, in the Unix epoch format. Fractional nanosecond data is provided by <code>offsetInNanos</code>.'
        offsetInNanos:
          $ref: '#/components/schemas/OffsetInNanos'
          description: The nanosecond offset from <code>timeInSeconds</code>.
      description: Contains a timestamp with optional nanosecond granularity.
    AssetPropertyValue:
      type: object
      required:
        - value
        - timestamp
      properties:
        value:
          $ref: '#/components/schemas/Variant'
          description: The value of the asset property (see <code>Variant</code>).
        timestamp:
          $ref: '#/components/schemas/TimeInNanos'
          description: The timestamp of the asset property value.
        quality:
          $ref: '#/components/schemas/Quality'
          description: The quality of the asset property value.
      description: Contains asset property value information.
    AssetPropertyValueHistory:
      type: array
      items:
        $ref: '#/components/schemas/AssetPropertyValue'
    AssetPropertyValues:
      type: array
      items:
        $ref: '#/components/schemas/AssetPropertyValue'
    AssetRelationshipSummary:
      type: object
      required:
        - relationshipType
      properties:
        hierarchyInfo:
          $ref: '#/components/schemas/AssetHierarchyInfo'
          description: <p>The assets that are related through an asset hierarchy.</p> <p>This object is present if the <code>relationshipType</code> is <code>HIERARCHY</code>.</p>
        relationshipType:
          $ref: '#/components/schemas/AssetRelationshipType'
          description: '<p>The relationship type of the assets in this relationship. This value is one of the following:</p> <ul> <li> <p> <code>HIERARCHY</code> – The assets are related through an asset hierarchy. If you specify this relationship type, this asset relationship includes the <code>hierarchyInfo</code> object.</p> </li> </ul>'
      description: Contains information about assets that are related to one another.
    AssetRelationshipSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssetRelationshipSummary'
    AssetRelationshipType:
      type: string
      enum:
        - HIERARCHY
    AssetState:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - UPDATING
        - DELETING
        - FAILED
    AssetStatus:
      type: object
      required:
        - state
      properties:
        state:
          $ref: '#/components/schemas/AssetState'
          description: The current status of the asset.
        error:
          $ref: '#/components/schemas/ErrorDetails'
          description: 'Contains associated error information, if any.'
      description: 'Contains information about the current status of an asset. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html">Asset and model states</a> in the <i>IoT SiteWise User Guide</i>.'
    AssetSummary:
      type: object
      required:
        - id
        - arn
        - name
        - assetModelId
        - creationDate
        - lastUpdateDate
        - status
        - hierarchies
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset.
        arn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}</code> </p>'
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the asset.
        assetModelId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset model used to create this asset.
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the asset was created, in Unix epoch time.'
        lastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the asset was last updated, in Unix epoch time.'
        status:
          $ref: '#/components/schemas/AssetStatus'
          description: The current status of the asset.
        hierarchies:
          $ref: '#/components/schemas/AssetHierarchies'
          description: A list of asset hierarchies that each contain a <code>hierarchyId</code>. A hierarchy specifies allowed parent/child asset relationships.
      description: Contains a summary of an asset.
    AssetSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssetSummary'
    ClientToken:
      type: string
      pattern: '\S{36,64}'
      minLength: 36
      maxLength: 64
    AssociateAssetsRequest:
      type: object
      required:
        - hierarchyId
        - childAssetId
      title: AssociateAssetsRequest
      properties:
        hierarchyId:
          $ref: '#/components/schemas/ID'
          description: 'The ID of a hierarchy in the parent asset''s model. Hierarchies allow different groupings of assets to be formed that all come from the same asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.'
        childAssetId:
          $ref: '#/components/schemas/ID'
          description: The ID of the child asset to be associated.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
    AssociatedAssetsSummary:
      type: object
      required:
        - id
        - arn
        - name
        - assetModelId
        - creationDate
        - lastUpdateDate
        - status
        - hierarchies
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset.
        arn:
          $ref: '#/components/schemas/ARN'
          description: '<p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset, which has the following format.</p> <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}</code> </p>'
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the asset.
        assetModelId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset model used to create the asset.
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the asset was created, in Unix epoch time.'
        lastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the asset was last updated, in Unix epoch time.'
        status:
          $ref: '#/components/schemas/AssetStatus'
          description: The current status of the asset.
        hierarchies:
          $ref: '#/components/schemas/AssetHierarchies'
          description: A list of asset hierarchies that each contain a <code>hierarchyId</code>. A hierarchy specifies allowed parent/child asset relationships.
      description: Contains a summary of an associated asset.
    AssociatedAssetsSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssociatedAssetsSummary'
    DefaultValue:
      type: string
      pattern: '[^\u0000-\u001F\u007F]+'
      minLength: 1
      maxLength: 1024
    Attribute:
      type: object
      properties:
        defaultValue:
          $ref: '#/components/schemas/DefaultValue'
          description: 'The default value of the asset model property attribute. All assets that you create from the asset model contain this attribute value. You can update an attribute''s value after you create an asset. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-attribute-values.html">Updating attribute values</a> in the <i>IoT SiteWise User Guide</i>.'
      description: 'Contains an asset attribute property. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#attributes">Attributes</a> in the <i>IoT SiteWise User Guide</i>.'
    AuthMode:
      type: string
      enum:
        - IAM
        - SSO
    BatchAssociateProjectAssetsErrors:
      type: array
      items:
        $ref: '#/components/schemas/AssetErrorDetails'
    IDs:
      type: array
      items:
        $ref: '#/components/schemas/ID'
      minItems: 1
      maxItems: 100
    BatchAssociateProjectAssetsRequest:
      type: object
      required:
        - assetIds
      title: BatchAssociateProjectAssetsRequest
      properties:
        assetIds:
          $ref: '#/components/schemas/IDs'
          description: The IDs of the assets to be associated to the project.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
    BatchDisassociateProjectAssetsErrors:
      type: array
      items:
        $ref: '#/components/schemas/AssetErrorDetails'
    BatchDisassociateProjectAssetsRequest:
      type: object
      required:
        - assetIds
      title: BatchDisassociateProjectAssetsRequest
      properties:
        assetIds:
          $ref: '#/components/schemas/IDs'
          description: The IDs of the assets to be disassociated from the project.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
    BatchPutAssetPropertyValueErrorCode:
      type: string
      enum:
        - ResourceNotFoundException
        - InvalidRequestException
        - InternalFailureException
        - ServiceUnavailableException
        - ThrottlingException
        - LimitExceededException
        - ConflictingOperationException
        - TimestampOutOfRangeException
        - AccessDeniedException
    ErrorMessage:
      type: string
    Timestamps:
      type: array
      items:
        $ref: '#/components/schemas/TimeInNanos'
    BatchPutAssetPropertyError:
      type: object
      required:
        - errorCode
        - errorMessage
        - timestamps
      properties:
        errorCode:
          $ref: '#/components/schemas/BatchPutAssetPropertyValueErrorCode'
          description: The error code.
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: The associated error message.
        timestamps:
          $ref: '#/components/schemas/Timestamps'
          description: 'A list of timestamps for each error, if any.'
      description: Contains error information from updating a batch of asset property values.
    BatchPutAssetPropertyErrorEntry:
      type: object
      required:
        - entryId
        - errors
      properties:
        entryId:
          $ref: '#/components/schemas/EntryId'
          description: The ID of the failed entry.
        errors:
          $ref: '#/components/schemas/BatchPutAssetPropertyErrors'
          description: The list of update property value errors.
      description: 'Contains error information for asset property value entries that are associated with the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchPutAssetPropertyValue.html">BatchPutAssetPropertyValue</a> API.'
    BatchPutAssetPropertyErrorEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchPutAssetPropertyErrorEntry'
    EntryId:
      type: string
      pattern: '^[a-zA-Z0-9_-]+$'
      minLength: 1
      maxLength: 64
    BatchPutAssetPropertyErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchPutAssetPropertyError'
    PutAssetPropertyValueEntries:
      type: array
      items:
        $ref: '#/components/schemas/PutAssetPropertyValueEntry'
    BatchPutAssetPropertyValueRequest:
      type: object
      required:
        - entries
      title: BatchPutAssetPropertyValueRequest
      properties:
        entries:
          $ref: '#/components/schemas/PutAssetPropertyValueEntries'
          description: The list of asset property value entries for the batch put request. You can specify up to 10 entries per request.
    CapabilityConfiguration:
      type: string
      minLength: 1
      maxLength: 104857600
    CapabilityNamespace:
      type: string
      pattern: '^[a-zA-Z]+:[a-zA-Z]+:[0-9]+$'
      minLength: 1
      maxLength: 512
    CapabilitySyncStatus:
      type: string
      enum:
        - IN_SYNC
        - OUT_OF_SYNC
        - SYNC_FAILED
        - UNKNOWN
    Property:
      type: object
      required:
        - id
        - name
        - dataType
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset property.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the property.
        alias:
          $ref: '#/components/schemas/PropertyAlias'
          description: 'The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.'
        notification:
          $ref: '#/components/schemas/PropertyNotification'
          description: 'The asset property''s notification topic and state. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.'
        dataType:
          $ref: '#/components/schemas/PropertyDataType'
          description: The property data type.
        unit:
          $ref: '#/components/schemas/PropertyUnit'
          description: The unit (such as <code>Newtons</code> or <code>RPM</code>) of the asset property.
        type:
          $ref: '#/components/schemas/PropertyType'
          description: The property type (see <code>PropertyType</code>). A property contains one type.
      description: Contains asset property information.
    CompositeModelProperty:
      type: object
      required:
        - name
        - type
        - assetProperty
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the property.
        type:
          $ref: '#/components/schemas/Name'
          description: The type of the composite model that defines this property.
        assetProperty:
          $ref: '#/components/schemas/Property'
      description: Contains information about a composite model property on an asset.
    ComputeLocation:
      type: string
      enum:
        - EDGE
        - CLOUD
    ErrorCode:
      type: string
      enum:
        - VALIDATION_ERROR
        - INTERNAL_FAILURE
    ConfigurationErrorDetails:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
          description: The error code.
        message:
          $ref: '#/components/schemas/ErrorMessage'
          description: The error message.
      description: Contains the details of an IoT SiteWise configuration error.
    ConfigurationState:
      type: string
      enum:
        - ACTIVE
        - UPDATE_IN_PROGRESS
        - UPDATE_FAILED
    ConfigurationStatus:
      type: object
      required:
        - state
      properties:
        state:
          $ref: '#/components/schemas/ConfigurationState'
          description: The current state of the configuration.
        error:
          $ref: '#/components/schemas/ConfigurationErrorDetails'
          description: 'Contains associated error information, if any.'
      description: Contains current status information for the configuration.
    CoreDeviceThingName:
      type: string
      minLength: 1
      maxLength: 128
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CreateAccessPolicyRequest:
      type: object
      required:
        - accessPolicyIdentity
        - accessPolicyResource
        - accessPolicyPermission
      title: CreateAccessPolicyRequest
      properties:
        accessPolicyIdentity:
          $ref: '#/components/schemas/Identity'
          description: 'The identity for this access policy. Choose an Amazon Web Services SSO user, an Amazon Web Services SSO group, or an IAM user.'
        accessPolicyResource:
          $ref: '#/components/schemas/Resource'
          description: The IoT SiteWise Monitor resource for this access policy. Choose either a portal or a project.
        accessPolicyPermission:
          $ref: '#/components/schemas/Permission'
          description: The permission level for this access policy. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: 'A list of key-value pairs that contain metadata for the access policy. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
    CreateAssetModelRequest:
      type: object
      required:
        - assetModelName
      title: CreateAssetModelRequest
      properties:
        assetModelName:
          $ref: '#/components/schemas/Name'
          description: 'A unique, friendly name for the asset model.'
        assetModelDescription:
          $ref: '#/components/schemas/Description'
          description: A description for the asset model.
        assetModelProperties:
          $ref: '#/components/schemas/AssetModelPropertyDefinitions'
          description: '<p>The property definitions of the asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html">Asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>You can specify up to 200 properties per asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>'
        assetModelHierarchies:
          $ref: '#/components/schemas/AssetModelHierarchyDefinitions'
          description: '<p>The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>You can specify up to 10 hierarchies per asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>'
        assetModelCompositeModels:
          $ref: '#/components/schemas/AssetModelCompositeModelDefinitions'
          description: The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties. Each composite model has a type that defines the properties that the composite model supports. Use composite asset models to define alarms on this asset model.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: 'A list of key-value pairs that contain metadata for the asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
    CreateAssetRequest:
      type: object
      required:
        - assetName
        - assetModelId
      title: CreateAssetRequest
      properties:
        assetName:
          $ref: '#/components/schemas/Name'
          description: 'A unique, friendly name for the asset.'
        assetModelId:
          $ref: '#/components/schemas/ID'
          description: The ID of the asset model from which to create the asset.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: 'A list of key-value pairs that contain metadata for the asset. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
    DashboardDefinition:
      type: string
      pattern: .+
      minLength: 0
      maxLength: 204800
    CreateDashboardRequest:
      type: object
      required:
        - projectId
        - dashboardName
        - dashboardDefinition
      title: CreateDashboardRequest
      properties:
        projectId:
          $ref: '#/components/schemas/ID'
          description: The ID of the project in which to create the dashboard.
        dashboardName:
          $ref: '#/components/schemas/Name'
          description: A friendly name for the dashboard.
        dashboardDescription:
          $ref: '#/components/schemas/Description'
          description: A description for the dashboard.
        dashboardDefinition:
          $ref: '#/components/schemas/DashboardDefinition'
          description: 'The dashboard definition specified in a JSON literal. For detailed information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html">Creating dashboards (CLI)</a> in the <i>IoT SiteWise User Guide</i>.'
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: 'A list of key-value pairs that contain metadata for the dashboard. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
    GatewayPlatform:
      type: object
      properties:
        greengrass:
          $ref: '#/components/schemas/Greengrass'
          description: A gateway that runs on IoT Greengrass.
        greengrassV2:
          $ref: '#/components/schemas/GreengrassV2'
          description: A gateway that runs on IoT Greengrass V2.
      description: Contains a gateway's platform information.
    CreateGatewayRequest:
      type: object
      required:
        - gatewayName
        - gatewayPlatform
      title: CreateGatewayRequest
      properties:
        gatewayName:
          $ref: '#/components/schemas/Name'
          description: 'A unique, friendly name for the gateway.'
        gatewayPlatform:
          $ref: '#/components/schemas/GatewayPlatform'
          description: The gateway's platform. You can only specify one platform in a gateway.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: 'A list of key-value pairs that contain metadata for the gateway. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
    Email:
      type: string
      pattern: '[^@]+@[^@]+'
      minLength: 1
      maxLength: 255
    CreatePortalRequest:
      type: object
      required:
        - portalName
        - portalContactEmail
        - roleArn
      title: CreatePortalRequest
      properties:
        portalName:
          $ref: '#/components/schemas/Name'
          description: A friendly name for the portal.
        portalDescription:
          $ref: '#/components/schemas/Description'
          description: A description for the portal.
        portalContactEmail:
          $ref: '#/components/schemas/Email'
          description: The Amazon Web Services administrator's contact email address.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
        portalLogoImageFile:
          $ref: '#/components/schemas/ImageFile'
          description: 'A logo image to display in the portal. Upload a square, high-resolution image. The image is displayed on a dark background.'
        roleArn:
          $ref: '#/components/schemas/ARN'
          description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of a service role that allows the portal''s users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.'
        tags:
          $ref: '#/components/schemas/TagMap'
          description: 'A list of key-value pairs that contain metadata for the portal. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
        portalAuthMode:
          $ref: '#/components/schemas/AuthMode'
          description: '<p>The service to use to authenticate users to the portal. Choose from the following options:</p> <ul> <li> <p> <code>SSO</code> – The portal uses Amazon Web Services Single Sign On to authenticate users and manage user permissions. Before you can create a portal that uses Amazon Web Services SSO, you must enable Amazon Web Services SSO. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-get-started.html#mon-gs-sso">Enabling Amazon Web Services SSO</a> in the <i>IoT SiteWise User Guide</i>. This option is only available in Amazon Web Services Regions other than the China Regions.</p> </li> <li> <p> <code>IAM</code> – The portal uses Identity and Access Management to authenticate users and manage user permissions. This option is only available in the China Regions.</p> </li> </ul> <p>You can''t change this value after you create a portal.</p> <p>Default: <code>SSO</code> </p>'
        notificationSenderEmail:
          $ref: '#/components/schemas/Email'
          description: '<p>The email address that sends alarm notifications.</p> <important> <p>If you use the <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html">IoT Events managed Lambda function</a> to manage your emails, you must <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses.html">verify the sender email address in Amazon SES</a>.</p> </important>'
        alarms:
          $ref: '#/components/schemas/Alarms'
          description: 'Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html">Monitoring with alarms</a> in the <i>IoT SiteWise Application Guide</i>.'
    Url:
      type: string
      pattern: '^(http|https)\://\S+'
      minLength: 1
      maxLength: 256
    PortalStatus:
      type: object
      required:
        - state
      properties:
        state:
          $ref: '#/components/schemas/PortalState'
          description: The current state of the portal.
        error:
          $ref: '#/components/schemas/MonitorErrorDetails'
          description: 'Contains associated error information, if any.'
      description: Contains information about the current status of a portal.
    SSOApplicationId:
      type: string
      pattern: '^[!-~]*'
      minLength: 1
      maxLength: 64
    CreateProjectRequest:
      type: object
      required:
        - portalId
        - projectName
      title: CreateProjectRequest
      properties:
        portalId:
          $ref: '#/components/schemas/ID'
          description: The ID of the portal in which to create the project.
        projectName:
          $ref: '#/components/schemas/Name'
          description: A friendly name for the project.
        projectDescription:
          $ref: '#/components/schemas/Description'
          description: A description for the project.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: 'A list of key-value pairs that contain metadata for the project. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
    DashboardSummary:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the dashboard.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the dashboard
        description:
          $ref: '#/components/schemas/Description'
          description: The dashboard's description.
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the dashboard was created, in Unix epoch time.'
        lastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the dashboard was last updated, in Unix epoch time.'
      description: Contains a dashboard summary.
    DashboardSummaries:
      type: array
      items:
        $ref: '#/components/schemas/DashboardSummary'
    DeleteAccessPolicyRequest:
      type: object
      title: DeleteAccessPolicyRequest
      properties: {}
    DeleteAssetModelRequest:
      type: object
      title: DeleteAssetModelRequest
      properties: {}
    DeleteAssetRequest:
      type: object
      title: DeleteAssetRequest
      properties: {}
    DeleteDashboardRequest:
      type: object
      title: DeleteDashboardRequest
      properties: {}
    DeleteGatewayRequest:
      type: object
      title: DeleteGatewayRequest
      properties: {}
    DeletePortalRequest:
      type: object
      title: DeletePortalRequest
      properties: {}
    DeleteProjectRequest:
      type: object
      title: DeleteProjectRequest
      properties: {}
    DescribeAccessPolicyRequest:
      type: object
      title: DescribeAccessPolicyRequest
      properties: {}
    DescribeAssetModelRequest:
      type: object
      title: DescribeAssetModelRequest
      properties: {}
    DescribeAssetPropertyRequest:
      type: object
      title: DescribeAssetPropertyRequest
      properties: {}
    DescribeAssetRequest:
      type: object
      title: DescribeAssetRequest
      properties: {}
    DescribeDashboardRequest:
      type: object
      title: DescribeDashboardRequest
      properties: {}
    DescribeDefaultEncryptionConfigurationRequest:
      type: object
      title: DescribeDefaultEncryptionConfigurationRequest
      properties: {}
    EncryptionType:
      type: string
      enum:
        - SITEWISE_DEFAULT_ENCRYPTION
        - KMS_BASED_ENCRYPTION
    DescribeGatewayCapabilityConfigurationRequest:
      type: object
      title: DescribeGatewayCapabilityConfigurationRequest
      properties: {}
    DescribeGatewayRequest:
      type: object
      title: DescribeGatewayRequest
      properties: {}
    GatewayCapabilitySummaries:
      type: array
      items:
        $ref: '#/components/schemas/GatewayCapabilitySummary'
    DescribeLoggingOptionsRequest:
      type: object
      title: DescribeLoggingOptionsRequest
      properties: {}
    LoggingOptions:
      type: object
      required:
        - level
      properties:
        level:
          $ref: '#/components/schemas/LoggingLevel'
          description: The IoT SiteWise logging verbosity level.
      description: Contains logging options.
    DescribePortalRequest:
      type: object
      title: DescribePortalRequest
      properties: {}
    PortalClientId:
      type: string
      pattern: '^[!-~]*'
      minLength: 1
      maxLength: 256
    ImageLocation:
      type: object
      required:
        - id
        - url
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the image.
        url:
          $ref: '#/components/schemas/Url'
          description: The URL where the image is available. The URL is valid for 15 minutes so that you can view and download the image
      description: Contains an image that is uploaded to IoT SiteWise and available at a URL.
    DescribeProjectRequest:
      type: object
      title: DescribeProjectRequest
      properties: {}
    DescribeStorageConfigurationRequest:
      type: object
      title: DescribeStorageConfigurationRequest
      properties: {}
    StorageType:
      type: string
      enum:
        - SITEWISE_DEFAULT_STORAGE
        - MULTI_LAYER_STORAGE
    MultiLayerStorage:
      type: object
      required:
        - customerManagedS3Storage
      properties:
        customerManagedS3Storage:
          $ref: '#/components/schemas/CustomerManagedS3Storage'
          description: Contains information about a customer managed Amazon S3 bucket.
      description: Contains information about the storage destination.
    DetailedErrorCode:
      type: string
      enum:
        - INCOMPATIBLE_COMPUTE_LOCATION
        - INCOMPATIBLE_FORWARDING_CONFIGURATION
    DetailedErrorMessage:
      type: string
    DetailedError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: '#/components/schemas/DetailedErrorCode'
          description: 'The error code. '
        message:
          $ref: '#/components/schemas/DetailedErrorMessage'
          description: 'The error message. '
      description: 'Contains detailed error information. '
    DetailedErrors:
      type: array
      items:
        $ref: '#/components/schemas/DetailedError'
    DisassociateAssetsRequest:
      type: object
      required:
        - hierarchyId
        - childAssetId
      title: DisassociateAssetsRequest
      properties:
        hierarchyId:
          $ref: '#/components/schemas/ID'
          description: 'The ID of a hierarchy in the parent asset''s model. Hierarchies allow different groupings of assets to be formed that all come from the same asset model. You can use the hierarchy ID to identify the correct asset to disassociate. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.'
        childAssetId:
          $ref: '#/components/schemas/ID'
          description: The ID of the child asset to disassociate.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
    Expression:
      type: string
      minLength: 1
      maxLength: 1024
    VariableName:
      type: string
      pattern: '^[a-z][a-z0-9_]*$'
      minLength: 1
      maxLength: 64
    VariableValue:
      type: object
      required:
        - propertyId
      properties:
        propertyId:
          $ref: '#/components/schemas/Macro'
          description: The ID of the property to use as the variable. You can use the property <code>name</code> if it's from the same asset model.
        hierarchyId:
          $ref: '#/components/schemas/Macro'
          description: '<p>The ID of the hierarchy to query for the property ID. You can use the hierarchy''s name instead of the hierarchy''s ID.</p> <p>You use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same <code>propertyId</code>. For example, you might have separately grouped assets that come from the same asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>'
      description: Identifies a property value used in an expression.
    ExpressionVariable:
      type: object
      required:
        - name
        - value
      properties:
        name:
          $ref: '#/components/schemas/VariableName'
          description: The friendly name of the variable to be used in the expression.
        value:
          $ref: '#/components/schemas/VariableValue'
          description: The variable that identifies an asset property from which to use values.
      description: Contains expression variable information.
    ExpressionVariables:
      type: array
      items:
        $ref: '#/components/schemas/ExpressionVariable'
    ForwardingConfigState:
      type: string
      enum:
        - DISABLED
        - ENABLED
    ForwardingConfig:
      type: object
      required:
        - state
      properties:
        state:
          $ref: '#/components/schemas/ForwardingConfigState'
          description: 'The forwarding state for the given property. '
      description: The forwarding configuration for a given property.
    GatewayCapabilitySummary:
      type: object
      required:
        - capabilityNamespace
        - capabilitySyncStatus
      properties:
        capabilityNamespace:
          $ref: '#/components/schemas/CapabilityNamespace'
          description: 'The namespace of the capability configuration. For example, if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace <code>iotsitewise:opcuacollector:version</code>, where <code>version</code> is a number such as <code>1</code>.'
        capabilitySyncStatus:
          $ref: '#/components/schemas/CapabilitySyncStatus'
          description: '<p>The synchronization status of the capability configuration. The sync status can be one of the following:</p> <ul> <li> <p> <code>IN_SYNC</code> – The gateway is running the capability configuration.</p> </li> <li> <p> <code>OUT_OF_SYNC</code> – The gateway hasn''t received the capability configuration.</p> </li> <li> <p> <code>SYNC_FAILED</code> – The gateway rejected the capability configuration.</p> </li> </ul>'
      description: Contains a summary of a gateway capability configuration.
    GatewaySummary:
      type: object
      required:
        - gatewayId
        - gatewayName
        - creationDate
        - lastUpdateDate
      properties:
        gatewayId:
          $ref: '#/components/schemas/ID'
          description: The ID of the gateway device.
        gatewayName:
          $ref: '#/components/schemas/Name'
          description: The name of the asset.
        gatewayPlatform:
          $ref: '#/components/schemas/GatewayPlatform'
        gatewayCapabilitySummaries:
          $ref: '#/components/schemas/GatewayCapabilitySummaries'
          description: 'A list of gateway capability summaries that each contain a namespace and status. Each gateway capability defines data sources for the gateway. To retrieve a capability configuration''s definition, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGatewayCapabilityConfiguration.html">DescribeGatewayCapabilityConfiguration</a>.'
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the gateway was created, in Unix epoch time.'
        lastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the gateway was last updated, in Unix epoch time.'
      description: Contains a summary of a gateway.
    GatewaySummaries:
      type: array
      items:
        $ref: '#/components/schemas/GatewaySummary'
    Resolution:
      type: string
      pattern: 1m|1h|1d
      minLength: 2
      maxLength: 2
    Qualities:
      type: array
      items:
        $ref: '#/components/schemas/Quality'
      minItems: 1
      maxItems: 1
    TimeOrdering:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    NextToken:
      type: string
      pattern: '[A-Za-z0-9+/=]+'
      minLength: 1
      maxLength: 4096
    MaxResults:
      type: integer
      minimum: 1
      maximum: 250
    GetAssetPropertyAggregatesRequest:
      type: object
      title: GetAssetPropertyAggregatesRequest
      properties: {}
    GetAssetPropertyValueHistoryRequest:
      type: object
      title: GetAssetPropertyValueHistoryRequest
      properties: {}
    GetAssetPropertyValueRequest:
      type: object
      title: GetAssetPropertyValueRequest
      properties: {}
    TimeInSeconds:
      type: integer
      minimum: 1
      maximum: 31556889864403200
    OffsetInNanos:
      type: integer
      minimum: 0
      maximum: 999999999
    IntervalInSeconds:
      type: integer
      minimum: 1
      maximum: 320000000
    MaxInterpolatedResults:
      type: integer
      minimum: 1
    InterpolationType:
      type: string
      minLength: 1
      maxLength: 256
    IntervalWindowInSeconds:
      type: integer
      minimum: 1
      maximum: 320000000
    GetInterpolatedAssetPropertyValuesRequest:
      type: object
      title: GetInterpolatedAssetPropertyValuesRequest
      properties: {}
    InterpolatedAssetPropertyValues:
      type: array
      items:
        $ref: '#/components/schemas/InterpolatedAssetPropertyValue'
    IdentityId:
      type: string
      pattern: \S+
      minLength: 1
      maxLength: 256
    IdentityType:
      type: string
      enum:
        - USER
        - GROUP
        - IAM
    Image:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of an existing image. Specify this parameter to keep an existing image.
        file:
          $ref: '#/components/schemas/ImageFile'
      description: '<p>Contains an image that is one of the following:</p> <ul> <li> <p>An image file. Choose this option to upload a new image.</p> </li> <li> <p>The ID of an existing image. Choose this option to keep an existing image.</p> </li> </ul>'
    InterpolatedAssetPropertyValue:
      type: object
      required:
        - timestamp
        - value
      properties:
        timestamp:
          $ref: '#/components/schemas/TimeInNanos'
        value:
          $ref: '#/components/schemas/Variant'
      description: Contains information about an interpolated asset property value.
    Interval:
      type: string
      minLength: 2
      maxLength: 23
    KmsKeyId:
      type: string
      minLength: 1
      maxLength: 2048
    ResourceType:
      type: string
      enum:
        - PORTAL
        - PROJECT
    ListAccessPoliciesRequest:
      type: object
      title: ListAccessPoliciesRequest
      properties: {}
    ListAssetModelsRequest:
      type: object
      title: ListAssetModelsRequest
      properties: {}
    TraversalType:
      type: string
      enum:
        - PATH_TO_ROOT
    ListAssetRelationshipsRequest:
      type: object
      title: ListAssetRelationshipsRequest
      properties: {}
    ListAssetsFilter:
      type: string
      enum:
        - ALL
        - TOP_LEVEL
    ListAssetsRequest:
      type: object
      title: ListAssetsRequest
      properties: {}
    TraversalDirection:
      type: string
      enum:
        - PARENT
        - CHILD
    ListAssociatedAssetsRequest:
      type: object
      title: ListAssociatedAssetsRequest
      properties: {}
    ListDashboardsRequest:
      type: object
      title: ListDashboardsRequest
      properties: {}
    ListGatewaysRequest:
      type: object
      title: ListGatewaysRequest
      properties: {}
    ListPortalsRequest:
      type: object
      title: ListPortalsRequest
      properties: {}
    PortalSummaries:
      type: array
      items:
        $ref: '#/components/schemas/PortalSummary'
    ListProjectAssetsRequest:
      type: object
      title: ListProjectAssetsRequest
      properties: {}
    ListProjectsRequest:
      type: object
      title: ListProjectsRequest
      properties: {}
    ProjectSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ProjectSummary'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    Macro:
      type: string
      pattern: '[^\u0000-\u001F\u007F]+'
      minLength: 1
      maxLength: 256
    MeasurementProcessingConfig:
      type: object
      required:
        - forwardingConfig
      properties:
        forwardingConfig:
          $ref: '#/components/schemas/ForwardingConfig'
          description: 'The forwarding configuration for the given measurement property. '
      description: 'The processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.'
    Measurement:
      type: object
      properties:
        processingConfig:
          $ref: '#/components/schemas/MeasurementProcessingConfig'
          description: 'The processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.'
      description: 'Contains an asset measurement property. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#measurements">Measurements</a> in the <i>IoT SiteWise User Guide</i>.'
    MetricWindow:
      type: object
      properties:
        tumbling:
          $ref: '#/components/schemas/TumblingWindow'
          description: The tumbling time interval window.
      description: 'Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).'
    MetricProcessingConfig:
      type: object
      required:
        - computeLocation
      properties:
        computeLocation:
          $ref: '#/components/schemas/ComputeLocation'
          description: 'The compute location for the given metric property. '
      description: 'The processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud.'
    Metric:
      type: object
      required:
        - expression
        - variables
        - window
      properties:
        expression:
          $ref: '#/components/schemas/Expression'
          description: '<p>The mathematical expression that defines the metric aggregation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>'
        variables:
          $ref: '#/components/schemas/ExpressionVariables'
          description: The list of variables used in the expression.
        window:
          $ref: '#/components/schemas/MetricWindow'
          description: The window (time interval) over which IoT SiteWise computes the metric's aggregation expression. IoT SiteWise computes one data point per <code>window</code>.
        processingConfig:
          $ref: '#/components/schemas/MetricProcessingConfig'
          description: 'The processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud.'
      description: '<p>Contains an asset metric property. With metrics, you can calculate aggregate functions, such as an average, maximum, or minimum, as specified through an expression. A metric maps several values to a single value (such as a sum).</p> <p>The maximum number of dependent/cascading variables used in any one metric calculation is 10. Therefore, a <i>root</i> metric can have up to 10 cascading metrics in its computational dependency tree. Additionally, a metric can only have a data type of <code>DOUBLE</code> and consume properties with data types of <code>INTEGER</code> or <code>DOUBLE</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#metrics">Metrics</a> in the <i>IoT SiteWise User Guide</i>.</p>'
    TumblingWindow:
      type: object
      required:
        - interval
      properties:
        interval:
          $ref: '#/components/schemas/Interval'
          description: '<p>The time interval for the tumbling window. The interval time must be between 1 minute and 1 week.</p> <p>IoT SiteWise computes the <code>1w</code> interval the end of Sunday at midnight each week (UTC), the <code>1d</code> interval at the end of each day at midnight (UTC), the <code>1h</code> interval at the end of each hour, and so on. </p> <p>When IoT SiteWise aggregates data points for metric computations, the start of each interval is exclusive and the end of each interval is inclusive. IoT SiteWise places the computed data point at the end of the interval.</p>'
        offset:
          $ref: '#/components/schemas/Offset'
          description: '<p>The offset for the tumbling window. The <code>offset</code> parameter accepts the following:</p> <ul> <li> <p>The offset time.</p> <p>For example, if you specify <code>18h</code> for <code>offset</code> and <code>1d</code> for <code>interval</code>, IoT SiteWise aggregates data in one of the following ways:</p> <ul> <li> <p>If you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.</p> </li> <li> <p>If you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.</p> </li> </ul> </li> <li> <p>The ISO 8601 format.</p> <p>For example, if you specify <code>PT18H</code> for <code>offset</code> and <code>1d</code> for <code>interval</code>, IoT SiteWise aggregates data in one of the following ways:</p> <ul> <li> <p>If you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.</p> </li> <li> <p>If you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.</p> </li> </ul> </li> <li> <p>The 24-hour clock.</p> <p>For example, if you specify <code>00:03:00</code> for <code>offset</code> and <code>5m</code> for <code>interval</code>, and you create the metric at 2 PM (UTC), you get the first aggregation result at 2:03 PM (UTC). You get the second aggregation result at 2:08 PM (UTC). </p> </li> <li> <p>The offset time zone.</p> <p>For example, if you specify <code>2021-07-23T18:00-08</code> for <code>offset</code> and <code>1d</code> for <code>interval</code>, IoT SiteWise aggregates data in one of the following ways:</p> <ul> <li> <p>If you create the metric before or at 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) on the day when you create the metric.</p> </li> <li> <p>If you create the metric after 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) the next day.</p> </li> </ul> </li> </ul>'
      description: '<p>Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time window. You use this window in metrics to aggregate data from properties and other assets.</p> <p>You can use <code>m</code>, <code>h</code>, <code>d</code>, and <code>w</code> when you specify an interval or offset. Note that <code>m</code> represents minutes, and <code>w</code> represents weeks. You can also use <code>s</code> to represent seconds in <code>offset</code>.</p> <p>The <code>interval</code> and <code>offset</code> parameters support the <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601 format</a>. For example, <code>PT5S</code> represents five seconds, <code>PT5M</code> represents five minutes, and <code>PT5H</code> represents five hours.</p>'
    MonitorErrorCode:
      type: string
      enum:
        - INTERNAL_FAILURE
        - VALIDATION_ERROR
        - LIMIT_EXCEEDED
    MonitorErrorMessage:
      type: string
    MonitorErrorDetails:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/MonitorErrorCode'
          description: The error code.
        message:
          $ref: '#/components/schemas/MonitorErrorMessage'
          description: The error message.
      description: Contains IoT SiteWise Monitor error details.
    Offset:
      type: string
      minLength: 2
      maxLength: 25
    PortalState:
      type: string
      enum:
        - CREATING
        - UPDATING
        - DELETING
        - ACTIVE
        - FAILED
    PortalSummary:
      type: object
      required:
        - id
        - name
        - startUrl
        - status
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the portal.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the portal.
        description:
          $ref: '#/components/schemas/Description'
          description: The portal's description.
        startUrl:
          $ref: '#/components/schemas/Url'
          description: 'The URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that use Amazon Web Services SSO for authentication. For portals that use IAM for authentication, you must use the IoT SiteWise console to get a URL that you can use to access the portal.'
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the portal was created, in Unix epoch time.'
        lastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the portal was last updated, in Unix epoch time.'
        roleArn:
          $ref: '#/components/schemas/ARN'
          description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the service role that allows the portal''s users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.'
        status:
          $ref: '#/components/schemas/PortalStatus'
      description: Contains a portal summary.
    ProjectSummary:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/ID'
          description: The ID of the project.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the project.
        description:
          $ref: '#/components/schemas/Description'
          description: The project's description.
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the project was created, in Unix epoch time.'
        lastUpdateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date the project was last updated, in Unix epoch time.'
      description: Contains project summary information.
    PropertyNotificationTopic:
      type: string
    PropertyNotificationState:
      type: string
      enum:
        - ENABLED
        - DISABLED
    Transform:
      type: object
      required:
        - expression
        - variables
      properties:
        expression:
          $ref: '#/components/schemas/Expression'
          description: '<p>The mathematical expression that defines the transformation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>'
        variables:
          $ref: '#/components/schemas/ExpressionVariables'
          description: The list of variables used in the expression.
        processingConfig:
          $ref: '#/components/schemas/TransformProcessingConfig'
          description: The processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud.
      description: '<p>Contains an asset transform property. A transform is a one-to-one mapping of a property''s data points from one form to another. For example, you can use a transform to convert a Celsius data stream to Fahrenheit by applying the transformation expression to each data point of the Celsius stream. A transform can only have a data type of <code>DOUBLE</code> and consume properties with data types of <code>INTEGER</code> or <code>DOUBLE</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#transforms">Transforms</a> in the <i>IoT SiteWise User Guide</i>.</p>'
    PropertyValueBooleanValue:
      type: boolean
    PropertyValueDoubleValue:
      type: number
      format: double
    PropertyValueIntegerValue:
      type: integer
    PropertyValueStringValue:
      type: string
      pattern: '[^\u0000-\u001F\u007F]+'
    PutDefaultEncryptionConfigurationRequest:
      type: object
      required:
        - encryptionType
      title: PutDefaultEncryptionConfigurationRequest
      properties:
        encryptionType:
          $ref: '#/components/schemas/EncryptionType'
          description: The type of encryption used for the encryption configuration.
        kmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The Key ID of the customer managed customer master key (CMK) used for KMS encryption. This is required if you use <code>KMS_BASED_ENCRYPTION</code>.
    PutLoggingOptionsRequest:
      type: object
      required:
        - loggingOptions
      title: PutLoggingOptionsRequest
      properties:
        loggingOptions:
          $ref: '#/components/schemas/LoggingOptions'
          description: The logging options to set.
    PutStorageConfigurationRequest:
      type: object
      required:
        - storageType
      title: PutStorageConfigurationRequest
      properties:
        storageType:
          $ref: '#/components/schemas/StorageType'
          description: '<p>The type of storage that you specified for your data. The storage type can be one of the following values:</p> <ul> <li> <p> <code>SITEWISE_DEFAULT_STORAGE</code> – IoT SiteWise replicates your data into a service managed database.</p> </li> <li> <p> <code>MULTI_LAYER_STORAGE</code> – IoT SiteWise replicates your data into a service managed database and saves a copy of your raw data and metadata in an Amazon S3 object that you specified.</p> </li> </ul>'
        multiLayerStorage:
          $ref: '#/components/schemas/MultiLayerStorage'
          description: 'Identifies a storage destination. If you specified <code>MULTI_LAYER_STORAGE</code> for the storage type, you must specify a <code>MultiLayerStorage</code> object.'
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          $ref: '#/components/schemas/TagMap'
          description: 'A list of key-value pairs that contain metadata for the resource. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.'
    TransformProcessingConfig:
      type: object
      required:
        - computeLocation
      properties:
        computeLocation:
          $ref: '#/components/schemas/ComputeLocation'
          description: 'The compute location for the given transform property. '
        forwardingConfig:
          $ref: '#/components/schemas/ForwardingConfig'
      description: The processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateAccessPolicyRequest:
      type: object
      required:
        - accessPolicyIdentity
        - accessPolicyResource
        - accessPolicyPermission
      title: UpdateAccessPolicyRequest
      properties:
        accessPolicyIdentity:
          $ref: '#/components/schemas/Identity'
          description: 'The identity for this access policy. Choose an Amazon Web Services SSO user, an Amazon Web Services SSO group, or an IAM user.'
        accessPolicyResource:
          $ref: '#/components/schemas/Resource'
          description: The IoT SiteWise Monitor resource for this access policy. Choose either a portal or a project.
        accessPolicyPermission:
          $ref: '#/components/schemas/Permission'
          description: The permission level for this access policy. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
    UpdateAssetModelRequest:
      type: object
      required:
        - assetModelName
      title: UpdateAssetModelRequest
      properties:
        assetModelName:
          $ref: '#/components/schemas/Name'
          description: 'A unique, friendly name for the asset model.'
        assetModelDescription:
          $ref: '#/components/schemas/Description'
          description: A description for the asset model.
        assetModelProperties:
          $ref: '#/components/schemas/AssetModelProperties'
          description: '<p>The updated property definitions of the asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html">Asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>You can specify up to 200 properties per asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>'
        assetModelHierarchies:
          $ref: '#/components/schemas/AssetModelHierarchies'
          description: '<p>The updated hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>You can specify up to 10 hierarchies per asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>'
        assetModelCompositeModels:
          $ref: '#/components/schemas/AssetModelCompositeModels'
          description: The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties. Each composite model has a type that defines the properties that the composite model supports. Use composite asset models to define alarms on this asset model.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
    UpdateAssetPropertyRequest:
      type: object
      title: UpdateAssetPropertyRequest
      properties:
        propertyAlias:
          $ref: '#/components/schemas/PropertyAlias'
          description: '<p>The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>If you omit this parameter, the alias is removed from the property.</p>'
        propertyNotificationState:
          $ref: '#/components/schemas/PropertyNotificationState'
          description: '<p>The MQTT notification state (enabled or disabled) for this asset property. When the notification state is enabled, IoT SiteWise publishes property value updates to a unique MQTT topic. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/interact-with-other-services.html">Interacting with other services</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>If you omit this parameter, the notification state is set to <code>DISABLED</code>.</p>'
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
    UpdateAssetRequest:
      type: object
      required:
        - assetName
      title: UpdateAssetRequest
      properties:
        assetName:
          $ref: '#/components/schemas/Name'
          description: 'A unique, friendly name for the asset.'
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
    UpdateDashboardRequest:
      type: object
      required:
        - dashboardName
        - dashboardDefinition
      title: UpdateDashboardRequest
      properties:
        dashboardName:
          $ref: '#/components/schemas/Name'
          description: A new friendly name for the dashboard.
        dashboardDescription:
          $ref: '#/components/schemas/Description'
          description: A new description for the dashboard.
        dashboardDefinition:
          $ref: '#/components/schemas/DashboardDefinition'
          description: 'The new dashboard definition, as specified in a JSON literal. For detailed information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html">Creating dashboards (CLI)</a> in the <i>IoT SiteWise User Guide</i>.'
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
    UpdateGatewayCapabilityConfigurationRequest:
      type: object
      required:
        - capabilityNamespace
        - capabilityConfiguration
      title: UpdateGatewayCapabilityConfigurationRequest
      properties:
        capabilityNamespace:
          $ref: '#/components/schemas/CapabilityNamespace'
          description: 'The namespace of the gateway capability configuration to be updated. For example, if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace <code>iotsitewise:opcuacollector:version</code>, where <code>version</code> is a number such as <code>1</code>.'
        capabilityConfiguration:
          $ref: '#/components/schemas/CapabilityConfiguration'
          description: 'The JSON document that defines the configuration for the gateway capability. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/configure-sources.html#configure-source-cli">Configuring data sources (CLI)</a> in the <i>IoT SiteWise User Guide</i>.'
    UpdateGatewayRequest:
      type: object
      required:
        - gatewayName
      title: UpdateGatewayRequest
      properties:
        gatewayName:
          $ref: '#/components/schemas/Name'
          description: 'A unique, friendly name for the gateway.'
    UpdatePortalRequest:
      type: object
      required:
        - portalName
        - portalContactEmail
        - roleArn
      title: UpdatePortalRequest
      properties:
        portalName:
          $ref: '#/components/schemas/Name'
          description: A new friendly name for the portal.
        portalDescription:
          $ref: '#/components/schemas/Description'
          description: A new description for the portal.
        portalContactEmail:
          $ref: '#/components/schemas/Email'
          description: The Amazon Web Services administrator's contact email address.
        portalLogoImage:
          $ref: '#/components/schemas/Image'
        roleArn:
          $ref: '#/components/schemas/ARN'
          description: 'The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of a service role that allows the portal''s users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.'
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
        notificationSenderEmail:
          $ref: '#/components/schemas/Email'
          description: The email address that sends alarm notifications.
        alarms:
          $ref: '#/components/schemas/Alarms'
          description: 'Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html">Monitoring with alarms</a> in the <i>IoT SiteWise Application Guide</i>.'
    UpdateProjectRequest:
      type: object
      required:
        - projectName
      title: UpdateProjectRequest
      properties:
        projectName:
          $ref: '#/components/schemas/Name'
          description: A new friendly name for the project.
        projectDescription:
          $ref: '#/components/schemas/Description'
          description: A new description for the project.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
security:
  - hmac: []
