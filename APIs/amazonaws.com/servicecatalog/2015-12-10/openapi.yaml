openapi: 3.0.0
info:
  version: '2015-12-10'
  x-release: v4
  title: AWS Service Catalog
  description: '<fullname>AWS Service Catalog</fullname> <p> <a href="https://aws.amazon.com/servicecatalog/">AWS Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for AWS. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html">AWS Service Catalog Concepts</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: servicecatalog
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/servicecatalog-2015-12-10.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/servicecatalog/'
servers:
  - url: 'http://servicecatalog.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Service Catalog multi-region endpoint
  - url: 'https://servicecatalog.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Service Catalog multi-region endpoint
  - url: 'http://servicecatalog.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Service Catalog endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://servicecatalog.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Service Catalog endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AWS242ServiceCatalogService.AcceptPortfolioShare:
    post:
      operationId: AcceptPortfolioShare
      description: Accepts an offer to share the specified portfolio.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptPortfolioShareOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptPortfolioShareInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.AcceptPortfolioShare
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociateBudgetWithResource:
    post:
      operationId: AssociateBudgetWithResource
      description: Associates the specified budget with the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateBudgetWithResourceOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateBudgetWithResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.AssociateBudgetWithResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociatePrincipalWithPortfolio:
    post:
      operationId: AssociatePrincipalWithPortfolio
      description: Associates the specified principal ARN with the specified portfolio.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatePrincipalWithPortfolioOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociatePrincipalWithPortfolioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.AssociatePrincipalWithPortfolio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociateProductWithPortfolio:
    post:
      operationId: AssociateProductWithPortfolio
      description: <p>Associates the specified product with the specified portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateProductWithPortfolioOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateProductWithPortfolioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.AssociateProductWithPortfolio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociateServiceActionWithProvisioningArtifact:
    post:
      operationId: AssociateServiceActionWithProvisioningArtifact
      description: Associates a self-service action with a provisioning artifact.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateServiceActionWithProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateServiceActionWithProvisioningArtifactInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.AssociateServiceActionWithProvisioningArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociateTagOptionWithResource:
    post:
      operationId: AssociateTagOptionWithResource
      description: Associate the specified TagOption with the specified portfolio or product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateTagOptionWithResourceOutput'
        '480':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '485':
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateTagOptionWithResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.AssociateTagOptionWithResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.BatchAssociateServiceActionWithProvisioningArtifact:
    post:
      operationId: BatchAssociateServiceActionWithProvisioningArtifact
      description: Associates multiple self-service actions with provisioning artifacts.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAssociateServiceActionWithProvisioningArtifactOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAssociateServiceActionWithProvisioningArtifactInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.BatchAssociateServiceActionWithProvisioningArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.BatchDisassociateServiceActionFromProvisioningArtifact:
    post:
      operationId: BatchDisassociateServiceActionFromProvisioningArtifact
      description: Disassociates a batch of self-service actions from the specified provisioning artifact.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDisassociateServiceActionFromProvisioningArtifactOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDisassociateServiceActionFromProvisioningArtifactInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.BatchDisassociateServiceActionFromProvisioningArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.CopyProduct:
    post:
      operationId: CopyProduct
      description: '<p>Copies the specified source product to the specified target product or a new product.</p> <p>You can copy a product to the same account or another account. You can copy a product to the same region or another region.</p> <p>This operation is performed asynchronously. To track the progress of the operation, use <a>DescribeCopyProductStatus</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyProductOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyProductInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CopyProduct
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateConstraint:
    post:
      operationId: CreateConstraint
      description: <p>Creates a constraint.</p> <p>A delegated admin is authorized to invoke this command.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConstraintOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConstraintInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreateConstraint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolio:
    post:
      operationId: CreatePortfolio
      description: <p>Creates a portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePortfolioOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePortfolioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreatePortfolio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolioShare:
    post:
      operationId: CreatePortfolioShare
      description: '<p>Shares the specified portfolio with the specified account or organization node. Shares to an organization node can only be created by the management account of an organization or by a delegated administrator. You can share portfolios to an organization, an organizational unit, or a specific account.</p> <p>Note that if a delegated admin is de-registered, they can no longer create portfolio shares.</p> <p> <code>AWSOrganizationsAccess</code> must be enabled in order to create a portfolio share to an organization node.</p> <p>You can''t share a shared resource, including portfolios that contain a shared product.</p> <p>If the portfolio share with the specified account or organization node already exists, this action will have no effect and will not return an error. To update an existing share, you must use the <code> UpdatePortfolioShare</code> API instead.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '483':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
        '484':
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePortfolioShareInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreatePortfolioShare
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateProduct:
    post:
      operationId: CreateProduct
      description: '<p>Creates a product.</p> <p>A delegated admin is authorized to invoke this command.</p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> IAM policy permission. This policy permission is required when using the <code>ImportFromPhysicalId</code> template source in the information data section.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreateProduct
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisionedProductPlan:
    post:
      operationId: CreateProvisionedProductPlan
      description: '<p>Creates a plan. A plan includes the list of resources to be created (when provisioning a new product) or modified (when updating a provisioned product) when the plan is executed.</p> <p>You can create one plan per provisioned product. To create a plan for an existing provisioned product, the product status must be AVAILBLE or TAINTED.</p> <p>To view the resource changes in the change set, use <a>DescribeProvisionedProductPlan</a>. To create or modify the provisioned product, use <a>ExecuteProvisionedProductPlan</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProvisionedProductPlanOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProvisionedProductPlanInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreateProvisionedProductPlan
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisioningArtifact:
    post:
      operationId: CreateProvisioningArtifact
      description: '<p>Creates a provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot create a provisioning artifact for a product that was shared with you.</p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> IAM policy permission. This policy permission is required when using the <code>ImportFromPhysicalId</code> template source in the information data section.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProvisioningArtifactInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreateProvisioningArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateServiceAction:
    post:
      operationId: CreateServiceAction
      description: Creates a self-service action.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceActionOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceActionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreateServiceAction
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateTagOption:
    post:
      operationId: CreateTagOption
      description: Creates a TagOption.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
        '481':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagOptionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreateTagOption
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteConstraint:
    post:
      operationId: DeleteConstraint
      description: <p>Deletes the specified constraint.</p> <p>A delegated admin is authorized to invoke this command.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConstraintOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConstraintInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeleteConstraint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolio:
    post:
      operationId: DeletePortfolio
      description: '<p>Deletes the specified portfolio.</p> <p>You cannot delete a portfolio if it was shared with you or if it has associated products, users, constraints, or shared accounts.</p> <p>A delegated admin is authorized to invoke this command.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePortfolioOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '483':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePortfolioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeletePortfolio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolioShare:
    post:
      operationId: DeletePortfolioShare
      description: '<p>Stops sharing the specified portfolio with the specified account or organization node. Shares to an organization node can only be deleted by the management account of an organization or by a delegated administrator.</p> <p>Note that if a delegated admin is de-registered, portfolio shares created from that account are removed.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '482':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
        '483':
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePortfolioShareInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeletePortfolioShare
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteProduct:
    post:
      operationId: DeleteProduct
      description: <p>Deletes the specified product.</p> <p>You cannot delete a product if it was shared with you or is associated with a portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProductOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '483':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProductInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeleteProduct
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisionedProductPlan:
    post:
      operationId: DeleteProvisionedProductPlan
      description: Deletes the specified plan.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProvisionedProductPlanOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProvisionedProductPlanInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeleteProvisionedProductPlan
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisioningArtifact:
    post:
      operationId: DeleteProvisioningArtifact
      description: '<p>Deletes the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot delete a provisioning artifact associated with a product that was shared with you. You cannot delete the last provisioning artifact for a product, because a product must have at least one provisioning artifact.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProvisioningArtifactInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeleteProvisioningArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteServiceAction:
    post:
      operationId: DeleteServiceAction
      description: Deletes a self-service action.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceActionOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServiceActionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeleteServiceAction
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteTagOption:
    post:
      operationId: DeleteTagOption
      description: <p>Deletes the specified TagOption.</p> <p>You cannot delete a TagOption if it is associated with a product or portfolio.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTagOptionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeleteTagOption
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeConstraint:
    post:
      operationId: DescribeConstraint
      description: Gets information about the specified constraint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConstraintOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConstraintInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeConstraint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeCopyProductStatus:
    post:
      operationId: DescribeCopyProductStatus
      description: Gets the status of the specified copy product operation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCopyProductStatusOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCopyProductStatusInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeCopyProductStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolio:
    post:
      operationId: DescribePortfolio
      description: <p>Gets information about the specified portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePortfolioOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePortfolioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribePortfolio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolioShareStatus:
    post:
      operationId: DescribePortfolioShareStatus
      description: Gets the status of the specified portfolio share operation. This API can only be called by the management account in the organization or by a delegated admin.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePortfolioShareStatusOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '482':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePortfolioShareStatusInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribePortfolioShareStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolioShares:
    post:
      operationId: DescribePortfolioShares
      description: '<p>Returns a summary of each of the portfolio shares that were created for the specified portfolio.</p> <p>You can use this API to determine which accounts or organizational nodes this portfolio have been shared, whether the recipient entity has imported the share, and whether TagOptions are included with the share.</p> <p>The <code>PortfolioId</code> and <code>Type</code> parameters are both required.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePortfolioSharesOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePortfolioSharesInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribePortfolioShares
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProduct:
    post:
      operationId: DescribeProduct
      description: Gets information about the specified product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProductOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProductInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProduct
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductAsAdmin:
    post:
      operationId: DescribeProductAsAdmin
      description: Gets information about the specified product. This operation is run with administrator access.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProductAsAdminOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProductAsAdminInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProductAsAdmin
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductView:
    post:
      operationId: DescribeProductView
      description: Gets information about the specified product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProductViewOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProductViewInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProductView
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProduct:
    post:
      operationId: DescribeProvisionedProduct
      description: Gets information about the specified provisioned product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProvisionedProductOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProvisionedProductInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProvisionedProduct
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProductPlan:
    post:
      operationId: DescribeProvisionedProductPlan
      description: Gets information about the resource changes for the specified plan.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProvisionedProductPlanOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProvisionedProductPlanInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProvisionedProductPlan
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningArtifact:
    post:
      operationId: DescribeProvisioningArtifact
      description: Gets information about the specified provisioning artifact (also known as a version) for the specified product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProvisioningArtifactInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProvisioningArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningParameters:
    post:
      operationId: DescribeProvisioningParameters
      description: '<p>Gets information about the configuration required to provision the specified product using the specified provisioning artifact.</p> <p>If the output contains a TagOption key with an empty list of values, there is a TagOption conflict for that key. The end user cannot take action to fix the conflict, and launch is not blocked. In subsequent calls to <a>ProvisionProduct</a>, do not include conflicted TagOption keys as tags, or this causes the error "Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>". Tag the provisioned product with the value <code>sc-tagoption-conflict-portfolioId-productId</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProvisioningParametersOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProvisioningParametersInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProvisioningParameters
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeRecord:
    post:
      operationId: DescribeRecord
      description: '<p>Gets information about the specified request operation.</p> <p>Use this operation after calling a request operation (for example, <a>ProvisionProduct</a>, <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>). </p> <note> <p>If a provisioned product was transferred to a new owner using <a>UpdateProvisionedProductProperties</a>, the new owner will be able to describe all past records for that product. The previous owner will no longer be able to describe the records, but will be able to use <a>ListRecordHistory</a> to see the product''s history from when he was the owner.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRecordOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRecordInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeRecord
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceAction:
    post:
      operationId: DescribeServiceAction
      description: Describes a self-service action.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeServiceActionOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeServiceActionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeServiceAction
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceActionExecutionParameters:
    post:
      operationId: DescribeServiceActionExecutionParameters
      description: Finds the default parameters for a specific self-service action on a specific provisioned product and returns a map of the results to the user.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeServiceActionExecutionParametersOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeServiceActionExecutionParametersInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeServiceActionExecutionParameters
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeTagOption:
    post:
      operationId: DescribeTagOption
      description: Gets information about the specified TagOption.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTagOptionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeTagOption
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DisableAWSOrganizationsAccess:
    post:
      operationId: DisableAWSOrganizationsAccess
      description: <p>Disable portfolio sharing through AWS Organizations feature. This feature will not delete your current shares but it will prevent you from creating new shares throughout your organization. Current shares will not be in sync with your organization structure if it changes after calling this API. This API can only be called by the management account in the organization.</p> <p>This API can't be invoked if there are active delegated administrators in the organization.</p> <p>Note that a delegated administrator is not authorized to invoke <code>DisableAWSOrganizationsAccess</code>.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableAWSOrganizationsAccessOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
        '482':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableAWSOrganizationsAccessInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DisableAWSOrganizationsAccess
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociateBudgetFromResource:
    post:
      operationId: DisassociateBudgetFromResource
      description: Disassociates the specified budget from the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateBudgetFromResourceOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateBudgetFromResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DisassociateBudgetFromResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociatePrincipalFromPortfolio:
    post:
      operationId: DisassociatePrincipalFromPortfolio
      description: Disassociates a previously associated principal ARN from a specified portfolio.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociatePrincipalFromPortfolioOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociatePrincipalFromPortfolioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DisassociatePrincipalFromPortfolio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociateProductFromPortfolio:
    post:
      operationId: DisassociateProductFromPortfolio
      description: <p>Disassociates the specified product from the specified portfolio. </p> <p>A delegated admin is authorized to invoke this command.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateProductFromPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateProductFromPortfolioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DisassociateProductFromPortfolio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociateServiceActionFromProvisioningArtifact:
    post:
      operationId: DisassociateServiceActionFromProvisioningArtifact
      description: Disassociates the specified self-service action association from the specified provisioning artifact.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateServiceActionFromProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateServiceActionFromProvisioningArtifactInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DisassociateServiceActionFromProvisioningArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociateTagOptionFromResource:
    post:
      operationId: DisassociateTagOptionFromResource
      description: Disassociates the specified TagOption from the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateTagOptionFromResourceOutput'
        '480':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateTagOptionFromResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DisassociateTagOptionFromResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.EnableAWSOrganizationsAccess:
    post:
      operationId: EnableAWSOrganizationsAccess
      description: '<p>Enable portfolio sharing feature through AWS Organizations. This API will allow Service Catalog to receive updates on your organization in order to sync your shares with the current structure. This API can only be called by the management account in the organization.</p> <p>By calling this API Service Catalog will make a call to organizations:EnableAWSServiceAccess on your behalf so that your shares can be in sync with any changes in your AWS Organizations structure.</p> <p>Note that a delegated administrator is not authorized to invoke <code>EnableAWSOrganizationsAccess</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableAWSOrganizationsAccessOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
        '482':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableAWSOrganizationsAccessInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.EnableAWSOrganizationsAccess
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductPlan:
    post:
      operationId: ExecuteProvisionedProductPlan
      description: Provisions or modifies a product based on the resource changes for the specified plan.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteProvisionedProductPlanOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteProvisionedProductPlanInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ExecuteProvisionedProductPlan
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction:
    post:
      operationId: ExecuteProvisionedProductServiceAction
      description: Executes a self-service action against a provisioned product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteProvisionedProductServiceActionOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteProvisionedProductServiceActionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.GetAWSOrganizationsAccessStatus:
    post:
      operationId: GetAWSOrganizationsAccessStatus
      description: Get the Access Status for AWS Organization portfolio share feature. This API can only be called by the management account in the organization or by a delegated admin.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAWSOrganizationsAccessStatusOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAWSOrganizationsAccessStatusInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.GetAWSOrganizationsAccessStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.GetProvisionedProductOutputs:
    post:
      operationId: GetProvisionedProductOutputs
      description: 'This API takes either a <code>ProvisonedProductId</code> or a <code>ProvisionedProductName</code>, along with a list of one or more output keys, and responds with the key/value pairs of those outputs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProvisionedProductOutputsOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProvisionedProductOutputsInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.GetProvisionedProductOutputs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ImportAsProvisionedProduct:
    post:
      operationId: ImportAsProvisionedProduct
      description: '<p>Requests the import of a resource as a Service Catalog provisioned product that is associated to a Service Catalog product and provisioning artifact. Once imported, all supported Service Catalog governance actions are supported on the provisioned product.</p> <p>Resource import only supports CloudFormation stack ARNs. CloudFormation StackSets and non-root nested stacks are not supported.</p> <p>The CloudFormation stack must have one of the following statuses to be imported: <code>CREATE_COMPLETE</code>, <code>UPDATE_COMPLETE</code>, <code>UPDATE_ROLLBACK_COMPLETE</code>, <code>IMPORT_COMPLETE</code>, <code>IMPORT_ROLLBACK_COMPLETE</code>.</p> <p>Import of the resource requires that the CloudFormation stack template matches the associated Service Catalog product provisioning artifact. </p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> and <code>cloudformation:DescribeStacks</code> IAM policy permissions. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportAsProvisionedProductOutput'
        '480':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '481':
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportAsProvisionedProductInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ImportAsProvisionedProduct
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListAcceptedPortfolioShares:
    post:
      operationId: ListAcceptedPortfolioShares
      description: Lists all portfolios for which sharing was accepted by this account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAcceptedPortfolioSharesOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAcceptedPortfolioSharesInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListAcceptedPortfolioShares
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListBudgetsForResource:
    post:
      operationId: ListBudgetsForResource
      description: Lists all the budgets associated to the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBudgetsForResourceOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListBudgetsForResourceInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListBudgetsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListConstraintsForPortfolio:
    post:
      operationId: ListConstraintsForPortfolio
      description: Lists the constraints for the specified portfolio and product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConstraintsForPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListConstraintsForPortfolioInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListConstraintsForPortfolio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListLaunchPaths:
    post:
      operationId: ListLaunchPaths
      description: 'Lists the paths to the specified product. A path is how the user has access to a specified product, and is necessary when provisioning a product. A path also determines the constraints put on the product.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLaunchPathsOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLaunchPathsInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListLaunchPaths
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListOrganizationPortfolioAccess:
    post:
      operationId: ListOrganizationPortfolioAccess
      description: '<p>Lists the organization nodes that have access to the specified portfolio. This API can only be called by the management account in the organization or by a delegated admin.</p> <p>If a delegated admin is de-registered, they can no longer perform this operation.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationPortfolioAccessOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '482':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOrganizationPortfolioAccessInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListOrganizationPortfolioAccess
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolioAccess:
    post:
      operationId: ListPortfolioAccess
      description: '<p>Lists the account IDs that have access to the specified portfolio.</p> <p>A delegated admin can list the accounts that have access to the shared portfolio. Note that if a delegated admin is de-registered, they can no longer perform this operation.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPortfolioAccessOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPortfolioAccessInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListPortfolioAccess
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolios:
    post:
      operationId: ListPortfolios
      description: Lists all portfolios in the catalog.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPortfoliosOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPortfoliosInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListPortfolios
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListPortfoliosForProduct:
    post:
      operationId: ListPortfoliosForProduct
      description: Lists all portfolios that the specified product is associated with.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPortfoliosForProductOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPortfoliosForProductInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListPortfoliosForProduct
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListPrincipalsForPortfolio:
    post:
      operationId: ListPrincipalsForPortfolio
      description: Lists all principal ARNs associated with the specified portfolio.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrincipalsForPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPrincipalsForPortfolioInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListPrincipalsForPortfolio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListProvisionedProductPlans:
    post:
      operationId: ListProvisionedProductPlans
      description: Lists the plans for the specified provisioned product or all plans to which the user has access.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisionedProductPlansOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProvisionedProductPlansInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListProvisionedProductPlans
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifacts:
    post:
      operationId: ListProvisioningArtifacts
      description: Lists all provisioning artifacts (also known as versions) for the specified product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisioningArtifactsOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProvisioningArtifactsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListProvisioningArtifacts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction:
    post:
      operationId: ListProvisioningArtifactsForServiceAction
      description: Lists all provisioning artifacts (also known as versions) for the specified self-service action.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisioningArtifactsForServiceActionOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProvisioningArtifactsForServiceActionInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListRecordHistory:
    post:
      operationId: ListRecordHistory
      description: Lists the specified requests or all performed requests.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecordHistoryOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRecordHistoryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListRecordHistory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListResourcesForTagOption:
    post:
      operationId: ListResourcesForTagOption
      description: Lists the resources associated with the specified TagOption.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcesForTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourcesForTagOptionInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListResourcesForTagOption
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActions:
    post:
      operationId: ListServiceActions
      description: Lists all self-service actions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceActionsOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServiceActionsInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListServiceActions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActionsForProvisioningArtifact:
    post:
      operationId: ListServiceActionsForProvisioningArtifact
      description: Returns a paginated list of self-service actions associated with the specified Product ID and Provisioning Artifact ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceActionsForProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServiceActionsForProvisioningArtifactInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListServiceActionsForProvisioningArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct:
    post:
      operationId: ListStackInstancesForProvisionedProduct
      description: 'Returns summary information about stack instances that are associated with the specified <code>CFN_STACKSET</code> type provisioned product. You can filter for stack instances that are associated with a specific AWS account name or region. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStackInstancesForProvisionedProductOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStackInstancesForProvisionedProductInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ListTagOptions:
    post:
      operationId: ListTagOptions
      description: Lists the specified TagOptions or all TagOptions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagOptionsOutput'
        '480':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagOptionsInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListTagOptions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ProvisionProduct:
    post:
      operationId: ProvisionProduct
      description: '<p>Provisions the specified product.</p> <p>A provisioned product is a resourced instance of a product. For example, provisioning a product based on a CloudFormation template launches a CloudFormation stack and its underlying resources. You can check the status of this request using <a>DescribeRecord</a>.</p> <p>If the request contains a tag key with an empty list of values, there is a tag conflict for that key. Do not include conflicted keys as tags, or this causes the error "Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>".</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionProductOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionProductInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ProvisionProduct
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.RejectPortfolioShare:
    post:
      operationId: RejectPortfolioShare
      description: Rejects an offer to share the specified portfolio.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectPortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectPortfolioShareInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.RejectPortfolioShare
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.ScanProvisionedProducts:
    post:
      operationId: ScanProvisionedProducts
      description: '<p>Lists the provisioned products that are available (not terminated).</p> <p>To use additional filtering, see <a>SearchProvisionedProducts</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanProvisionedProductsOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanProvisionedProductsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ScanProvisionedProducts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.SearchProducts:
    post:
      operationId: SearchProducts
      description: Gets information about the products to which the caller has access.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProductsOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchProductsInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.SearchProducts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.SearchProductsAsAdmin:
    post:
      operationId: SearchProductsAsAdmin
      description: Gets information about the products for the specified portfolio or all products.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProductsAsAdminOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchProductsAsAdminInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.SearchProductsAsAdmin
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.SearchProvisionedProducts:
    post:
      operationId: SearchProvisionedProducts
      description: Gets information about the provisioned products that meet the specified criteria.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProvisionedProductsOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchProvisionedProductsInput'
      parameters:
        - name: PageSize
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PageToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.SearchProvisionedProducts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.TerminateProvisionedProduct:
    post:
      operationId: TerminateProvisionedProduct
      description: <p>Terminates the specified provisioned product.</p> <p>This operation does not delete any records associated with the provisioned product.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateProvisionedProductOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateProvisionedProductInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.TerminateProvisionedProduct
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateConstraint:
    post:
      operationId: UpdateConstraint
      description: Updates the specified constraint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConstraintOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConstraintInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateConstraint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdatePortfolio:
    post:
      operationId: UpdatePortfolio
      description: <p>Updates the specified portfolio.</p> <p>You cannot update a product that was shared with you.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePortfolioOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePortfolioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdatePortfolio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdatePortfolioShare:
    post:
      operationId: UpdatePortfolioShare
      description: '<p>Updates the specified portfolio share. You can use this API to enable or disable TagOptions sharing for an existing portfolio share. </p> <p>The portfolio share cannot be updated if the <code> CreatePortfolioShare</code> operation is <code>IN_PROGRESS</code>, as the share is not available to recipient entities. In this case, you must wait for the portfolio share to be COMPLETED.</p> <p>You must provide the <code>accountId</code> or organization node in the input, but not both.</p> <p>If the portfolio is shared to both an external account and an organization node, and both shares need to be updated, you must invoke <code>UpdatePortfolioShare</code> separately for each share type. </p> <p>This API cannot be used for removing the portfolio share. You must use <code>DeletePortfolioShare</code> API for that action. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '482':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
        '483':
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePortfolioShareInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdatePortfolioShare
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateProduct:
    post:
      operationId: UpdateProduct
      description: Updates the specified product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '482':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateProduct
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProduct:
    post:
      operationId: UpdateProvisionedProduct
      description: '<p>Requests updates to the configuration of the specified provisioned product.</p> <p>If there are tags associated with the object, they cannot be updated or added. Depending on the specific updates requested, this operation can update with no interruption, with some interruption, or replace the provisioned product entirely.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProvisionedProductOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProvisionedProductInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateProvisionedProduct
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProductProperties:
    post:
      operationId: UpdateProvisionedProductProperties
      description: Requests updates to the properties of the specified provisioned product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProvisionedProductPropertiesOutput'
        '480':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProvisionedProductPropertiesInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateProvisionedProductProperties
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisioningArtifact:
    post:
      operationId: UpdateProvisioningArtifact
      description: <p>Updates the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot update a provisioning artifact for a product that was shared with you.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProvisioningArtifactInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateProvisioningArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateServiceAction:
    post:
      operationId: UpdateServiceAction
      description: Updates a self-service action.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceActionOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceActionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateServiceAction
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateTagOption:
    post:
      operationId: UpdateTagOption
      description: Updates the specified TagOption.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '483':
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagOptionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateTagOption
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptPortfolioShareOutput:
      type: object
      properties: {}
    AcceptPortfolioShareInput:
      type: object
      required:
        - PortfolioId
      title: AcceptPortfolioShareInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        PortfolioShareType:
          $ref: '#/components/schemas/PortfolioShareType'
          description: '<p>The type of shared portfolios to accept. The default is to accept imported portfolios.</p> <ul> <li> <p> <code>AWS_ORGANIZATIONS</code> - Accept portfolios shared by the management account of your organization.</p> </li> <li> <p> <code>IMPORTED</code> - Accept imported portfolios.</p> </li> <li> <p> <code>AWS_SERVICECATALOG</code> - Not supported. (Throws ResourceNotFoundException.)</p> </li> </ul> <p>For example, <code>aws servicecatalog accept-portfolio-share --portfolio-id "port-2qwzkwxt3y5fk" --portfolio-share-type AWS_ORGANIZATIONS</code> </p>'
    InvalidParametersException: {}
    ResourceNotFoundException: {}
    LimitExceededException: {}
    AssociateBudgetWithResourceOutput:
      type: object
      properties: {}
    AssociateBudgetWithResourceInput:
      type: object
      required:
        - BudgetName
        - ResourceId
      title: AssociateBudgetWithResourceInput
      properties:
        BudgetName:
          $ref: '#/components/schemas/BudgetName'
          description: The name of the budget you want to associate.
        ResourceId:
          $ref: '#/components/schemas/Id'
          description: ' The resource identifier. Either a portfolio-id or a product-id.'
    DuplicateResourceException: {}
    AssociatePrincipalWithPortfolioOutput:
      type: object
      properties: {}
    AssociatePrincipalWithPortfolioInput:
      type: object
      required:
        - PortfolioId
        - PrincipalARN
        - PrincipalType
      title: AssociatePrincipalWithPortfolioInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        PrincipalARN:
          $ref: '#/components/schemas/PrincipalARN'
          description: 'The ARN of the principal (IAM user, role, or group).'
        PrincipalType:
          $ref: '#/components/schemas/PrincipalType'
          description: The principal type. The supported value is <code>IAM</code>.
    AssociateProductWithPortfolioOutput:
      type: object
      properties: {}
    AssociateProductWithPortfolioInput:
      type: object
      required:
        - ProductId
        - PortfolioId
      title: AssociateProductWithPortfolioInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        SourcePortfolioId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the source portfolio.
    AssociateServiceActionWithProvisioningArtifactOutput:
      type: object
      properties: {}
    AssociateServiceActionWithProvisioningArtifactInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
        - ServiceActionId
      title: AssociateServiceActionWithProvisioningArtifactInput
      properties:
        ProductId:
          $ref: '#/components/schemas/Id'
          description: 'The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.'
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: 'The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.'
        ServiceActionId:
          $ref: '#/components/schemas/Id'
          description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    AssociateTagOptionWithResourceOutput:
      type: object
      properties: {}
    AssociateTagOptionWithResourceInput:
      type: object
      required:
        - ResourceId
        - TagOptionId
      title: AssociateTagOptionWithResourceInput
      properties:
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The resource identifier.
        TagOptionId:
          $ref: '#/components/schemas/TagOptionId'
          description: The TagOption identifier.
    TagOptionNotMigratedException: {}
    InvalidStateException: {}
    BatchAssociateServiceActionWithProvisioningArtifactOutput:
      type: object
      properties:
        FailedServiceActionAssociations:
          $ref: '#/components/schemas/FailedServiceActionAssociations'
          description: 'An object that contains a list of errors, along with information to help you identify the self-service action.'
    BatchAssociateServiceActionWithProvisioningArtifactInput:
      type: object
      required:
        - ServiceActionAssociations
      title: BatchAssociateServiceActionWithProvisioningArtifactInput
      properties:
        ServiceActionAssociations:
          $ref: '#/components/schemas/ServiceActionAssociations'
          description: 'One or more associations, each consisting of the Action ID, the Product ID, and the Provisioning Artifact ID.'
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    BatchDisassociateServiceActionFromProvisioningArtifactOutput:
      type: object
      properties:
        FailedServiceActionAssociations:
          $ref: '#/components/schemas/FailedServiceActionAssociations'
          description: 'An object that contains a list of errors, along with information to help you identify the self-service action.'
    BatchDisassociateServiceActionFromProvisioningArtifactInput:
      type: object
      required:
        - ServiceActionAssociations
      title: BatchDisassociateServiceActionFromProvisioningArtifactInput
      properties:
        ServiceActionAssociations:
          $ref: '#/components/schemas/ServiceActionAssociations'
          description: 'One or more associations, each consisting of the Action ID, the Product ID, and the Provisioning Artifact ID.'
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    CopyProductOutput:
      type: object
      properties:
        CopyProductToken:
          $ref: '#/components/schemas/Id'
          description: The token to use to track the progress of the operation.
    CopyProductInput:
      type: object
      required:
        - SourceProductArn
        - IdempotencyToken
      title: CopyProductInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        SourceProductArn:
          $ref: '#/components/schemas/ProductArn'
          description: The Amazon Resource Name (ARN) of the source product.
        TargetProductId:
          $ref: '#/components/schemas/Id'
          description: 'The identifier of the target product. By default, a new product is created.'
        TargetProductName:
          $ref: '#/components/schemas/ProductViewName'
          description: A name for the target product. The default is the name of the source product.
        SourceProvisioningArtifactIdentifiers:
          $ref: '#/components/schemas/SourceProvisioningArtifactProperties'
          description: 'The identifiers of the provisioning artifacts (also known as versions) of the product to copy. By default, all provisioning artifacts are copied.'
        CopyOptions:
          $ref: '#/components/schemas/CopyOptions'
          description: 'The copy options. If the value is <code>CopyTags</code>, the tags from the source product are copied to the target product.'
        IdempotencyToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: ' A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request. '
    CreateConstraintOutput:
      type: object
      properties:
        ConstraintDetail:
          $ref: '#/components/schemas/ConstraintDetail'
          description: Information about the constraint.
        ConstraintParameters:
          $ref: '#/components/schemas/ConstraintParameters'
          description: The constraint parameters.
        Status:
          $ref: '#/components/schemas/Status'
          description: The status of the current request.
    CreateConstraintInput:
      type: object
      required:
        - PortfolioId
        - ProductId
        - Parameters
        - Type
        - IdempotencyToken
      title: CreateConstraintInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        Parameters:
          $ref: '#/components/schemas/ConstraintParameters'
          description: '<p>The constraint parameters, in JSON format. The syntax depends on the constraint type as follows:</p> <dl> <dt>LAUNCH</dt> <dd> <p>You are required to specify either the <code>RoleArn</code> or the <code>LocalRoleName</code> but can''t use both.</p> <p>Specify the <code>RoleArn</code> property as follows:</p> <p> <code>{"RoleArn" : "arn:aws:iam::123456789012:role/LaunchRole"}</code> </p> <p>Specify the <code>LocalRoleName</code> property as follows:</p> <p> <code>{"LocalRoleName": "SCBasicLaunchRole"}</code> </p> <p>If you specify the <code>LocalRoleName</code> property, when an account uses the launch constraint, the IAM role with that name in the account will be used. This allows launch-role constraints to be account-agnostic so the administrator can create fewer resources per shared account.</p> <note> <p>The given role name must exist in the account used to create the launch constraint and the account of the user who launches a product with this launch constraint.</p> </note> <p>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</p> <p>You also cannot have more than one <code>LAUNCH</code> constraint on a product and portfolio.</p> </dd> <dt>NOTIFICATION</dt> <dd> <p>Specify the <code>NotificationArns</code> property as follows:</p> <p> <code>{"NotificationArns" : ["arn:aws:sns:us-east-1:123456789012:Topic"]}</code> </p> </dd> <dt>RESOURCE_UPDATE</dt> <dd> <p>Specify the <code>TagUpdatesOnProvisionedProduct</code> property as follows:</p> <p> <code>{"Version":"2.0","Properties":{"TagUpdateOnProvisionedProduct":"String"}}</code> </p> <p>The <code>TagUpdatesOnProvisionedProduct</code> property accepts a string value of <code>ALLOWED</code> or <code>NOT_ALLOWED</code>.</p> </dd> <dt>STACKSET</dt> <dd> <p>Specify the <code>Parameters</code> property as follows:</p> <p> <code>{"Version": "String", "Properties": {"AccountList": [ "String" ], "RegionList": [ "String" ], "AdminRole": "String", "ExecutionRole": "String"}}</code> </p> <p>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</p> <p>You also cannot have more than one <code>STACKSET</code> constraint on a product and portfolio.</p> <p>Products with a <code>STACKSET</code> constraint will launch an AWS CloudFormation stack set.</p> </dd> <dt>TEMPLATE</dt> <dd> <p>Specify the <code>Rules</code> property. For more information, see <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html">Template Constraint Rules</a>.</p> </dd> </dl>'
        Type:
          $ref: '#/components/schemas/ConstraintType'
          description: <p>The type of constraint.</p> <ul> <li> <p> <code>LAUNCH</code> </p> </li> <li> <p> <code>NOTIFICATION</code> </p> </li> <li> <p> <code>RESOURCE_UPDATE</code> </p> </li> <li> <p> <code>STACKSET</code> </p> </li> <li> <p> <code>TEMPLATE</code> </p> </li> </ul>
        Description:
          $ref: '#/components/schemas/ConstraintDescription'
          description: The description of the constraint.
        IdempotencyToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
    CreatePortfolioOutput:
      type: object
      properties:
        PortfolioDetail:
          $ref: '#/components/schemas/PortfolioDetail'
          description: Information about the portfolio.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: Information about the tags associated with the portfolio.
    CreatePortfolioInput:
      type: object
      required:
        - DisplayName
        - ProviderName
        - IdempotencyToken
      title: CreatePortfolioInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        DisplayName:
          $ref: '#/components/schemas/PortfolioDisplayName'
          description: The name to use for display purposes.
        Description:
          $ref: '#/components/schemas/PortfolioDescription'
          description: The description of the portfolio.
        ProviderName:
          $ref: '#/components/schemas/ProviderName'
          description: The name of the portfolio provider.
        Tags:
          $ref: '#/components/schemas/AddTags'
          description: One or more tags.
        IdempotencyToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
    CreatePortfolioShareOutput:
      type: object
      properties:
        PortfolioShareToken:
          $ref: '#/components/schemas/Id'
          description: The portfolio shares a unique identifier that only returns if the portfolio is shared to an organization node.
    CreatePortfolioShareInput:
      type: object
      required:
        - PortfolioId
      title: CreatePortfolioShareInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: 'The AWS account ID. For example, <code>123456789012</code>.'
        OrganizationNode:
          $ref: '#/components/schemas/OrganizationNode'
          description: 'The organization node to whom you are going to share. If <code>OrganizationNode</code> is passed in, <code>PortfolioShare</code> will be created for the node an ListOrganizationPortfolioAccessd its children (when applies), and a <code>PortfolioShareToken</code> will be returned in the output in order for the administrator to monitor the status of the <code>PortfolioShare</code> creation process.'
        ShareTagOptions:
          $ref: '#/components/schemas/Boolean'
          description: 'Enables or disables <code>TagOptions </code> sharing when creating the portfolio share. If this flag is not provided, TagOptions sharing is disabled.'
    OperationNotSupportedException: {}
    CreateProductOutput:
      type: object
      properties:
        ProductViewDetail:
          $ref: '#/components/schemas/ProductViewDetail'
          description: Information about the product view.
        ProvisioningArtifactDetail:
          $ref: '#/components/schemas/ProvisioningArtifactDetail'
          description: 'Information about the provisioning artifact. '
        Tags:
          $ref: '#/components/schemas/Tags'
          description: Information about the tags associated with the product.
    CreateProductInput:
      type: object
      required:
        - Name
        - Owner
        - ProductType
        - ProvisioningArtifactParameters
        - IdempotencyToken
      title: CreateProductInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Name:
          $ref: '#/components/schemas/ProductViewName'
          description: The name of the product.
        Owner:
          $ref: '#/components/schemas/ProductViewOwner'
          description: The owner of the product.
        Description:
          $ref: '#/components/schemas/ProductViewShortDescription'
          description: The description of the product.
        Distributor:
          $ref: '#/components/schemas/ProductViewOwner'
          description: The distributor of the product.
        SupportDescription:
          $ref: '#/components/schemas/SupportDescription'
          description: The support information about the product.
        SupportEmail:
          $ref: '#/components/schemas/SupportEmail'
          description: The contact email for product support.
        SupportUrl:
          $ref: '#/components/schemas/SupportUrl'
          description: '<p>The contact URL for product support.</p> <p> <code>^https?:\/\// </code>/ is the pattern used to validate SupportUrl.</p>'
        ProductType:
          $ref: '#/components/schemas/ProductType'
          description: The type of product.
        Tags:
          $ref: '#/components/schemas/AddTags'
          description: One or more tags.
        ProvisioningArtifactParameters:
          $ref: '#/components/schemas/ProvisioningArtifactProperties'
          description: 'The configuration of the provisioning artifact. '
        IdempotencyToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
    CreateProvisionedProductPlanOutput:
      type: object
      properties:
        PlanName:
          $ref: '#/components/schemas/ProvisionedProductPlanName'
          description: The name of the plan.
        PlanId:
          $ref: '#/components/schemas/Id'
          description: The plan identifier.
        ProvisionProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        ProvisionedProductName:
          $ref: '#/components/schemas/ProvisionedProductName'
          description: The user-friendly name of the provisioned product.
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
    CreateProvisionedProductPlanInput:
      type: object
      required:
        - PlanName
        - PlanType
        - ProductId
        - ProvisionedProductName
        - ProvisioningArtifactId
        - IdempotencyToken
      title: CreateProvisionedProductPlanInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PlanName:
          $ref: '#/components/schemas/ProvisionedProductPlanName'
          description: The name of the plan.
        PlanType:
          $ref: '#/components/schemas/ProvisionedProductPlanType'
          description: The plan type.
        NotificationArns:
          $ref: '#/components/schemas/NotificationArns'
          description: Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
        PathId:
          $ref: '#/components/schemas/Id'
          description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>.'
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        ProvisionedProductName:
          $ref: '#/components/schemas/ProvisionedProductName'
          description: A user-friendly name for the provisioned product. This value must be unique for the AWS account and cannot be updated after the product is provisioned.
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
        ProvisioningParameters:
          $ref: '#/components/schemas/UpdateProvisioningParameters'
          description: Parameters specified by the administrator that are required for provisioning the product.
        IdempotencyToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
        Tags:
          $ref: '#/components/schemas/Tags'
          description: '<p>One or more tags.</p> <p>If the plan is for an existing provisioned product, the product must have a <code>RESOURCE_UPDATE</code> constraint with <code>TagUpdatesOnProvisionedProduct</code> set to <code>ALLOWED</code> to allow tag updates.</p>'
    CreateProvisioningArtifactOutput:
      type: object
      properties:
        ProvisioningArtifactDetail:
          $ref: '#/components/schemas/ProvisioningArtifactDetail'
          description: Information about the provisioning artifact.
        Info:
          $ref: '#/components/schemas/ProvisioningArtifactInfo'
          description: '<p>Specify the template source with one of the following options, but not both. Keys accepted: [ <code>LoadTemplateFromURL</code>, <code>ImportFromPhysicalId</code> ].</p> <p>The URL of the CloudFormation template in Amazon S3, in JSON format. </p> <p> <code>LoadTemplateFromURL</code> </p> <p>Use the URL of the CloudFormation template in Amazon S3 in JSON format.</p> <p> <code>ImportFromPhysicalId</code> </p> <p>Use the physical id of the resource that contains the template; currently supports CloudFormation stack ARN.</p>'
        Status:
          $ref: '#/components/schemas/Status'
          description: The status of the current request.
    CreateProvisioningArtifactInput:
      type: object
      required:
        - ProductId
        - Parameters
        - IdempotencyToken
      title: CreateProvisioningArtifactInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        Parameters:
          $ref: '#/components/schemas/ProvisioningArtifactProperties'
          description: The configuration for the provisioning artifact.
        IdempotencyToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
    CreateServiceActionOutput:
      type: object
      properties:
        ServiceActionDetail:
          $ref: '#/components/schemas/ServiceActionDetail'
          description: An object containing information about the self-service action.
    CreateServiceActionInput:
      type: object
      required:
        - Name
        - DefinitionType
        - Definition
        - IdempotencyToken
      title: CreateServiceActionInput
      properties:
        Name:
          $ref: '#/components/schemas/ServiceActionName'
          description: The self-service action name.
        DefinitionType:
          $ref: '#/components/schemas/ServiceActionDefinitionType'
          description: 'The service action definition type. For example, <code>SSM_AUTOMATION</code>.'
        Definition:
          $ref: '#/components/schemas/ServiceActionDefinitionMap'
          description: '<p>The self-service action definition. Can be one of the following:</p> <dl> <dt>Name</dt> <dd> <p>The name of the AWS Systems Manager document (SSM document). For example, <code>AWS-RestartEC2Instance</code>.</p> <p>If you are using a shared SSM document, you must provide the ARN instead of the name.</p> </dd> <dt>Version</dt> <dd> <p>The AWS Systems Manager automation document version. For example, <code>"Version": "1"</code> </p> </dd> <dt>AssumeRole</dt> <dd> <p>The Amazon Resource Name (ARN) of the role that performs the self-service actions on your behalf. For example, <code>"AssumeRole": "arn:aws:iam::12345678910:role/ActionRole"</code>.</p> <p>To reuse the provisioned product launch role, set to <code>"AssumeRole": "LAUNCH_ROLE"</code>.</p> </dd> <dt>Parameters</dt> <dd> <p>The list of parameters in JSON format.</p> <p>For example: <code>[{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}]</code> or <code>[{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}]</code>.</p> </dd> </dl>'
        Description:
          $ref: '#/components/schemas/ServiceActionDescription'
          description: The self-service action description.
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        IdempotencyToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
    CreateTagOptionOutput:
      type: object
      properties:
        TagOptionDetail:
          $ref: '#/components/schemas/TagOptionDetail'
          description: Information about the TagOption.
    CreateTagOptionInput:
      type: object
      required:
        - Key
        - Value
      title: CreateTagOptionInput
      properties:
        Key:
          $ref: '#/components/schemas/TagOptionKey'
          description: The TagOption key.
        Value:
          $ref: '#/components/schemas/TagOptionValue'
          description: The TagOption value.
    DeleteConstraintOutput:
      type: object
      properties: {}
    DeleteConstraintInput:
      type: object
      required:
        - Id
      title: DeleteConstraintInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: The identifier of the constraint.
    DeletePortfolioOutput:
      type: object
      properties: {}
    DeletePortfolioInput:
      type: object
      required:
        - Id
      title: DeletePortfolioInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
    ResourceInUseException: {}
    DeletePortfolioShareOutput:
      type: object
      properties:
        PortfolioShareToken:
          $ref: '#/components/schemas/Id'
          description: The portfolio share unique identifier. This will only be returned if delete is made to an organization node.
    DeletePortfolioShareInput:
      type: object
      required:
        - PortfolioId
      title: DeletePortfolioShareInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The AWS account ID.
        OrganizationNode:
          $ref: '#/components/schemas/OrganizationNode'
          description: The organization node to whom you are going to stop sharing.
    DeleteProductOutput:
      type: object
      properties: {}
    DeleteProductInput:
      type: object
      required:
        - Id
      title: DeleteProductInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
    DeleteProvisionedProductPlanOutput:
      type: object
      properties: {}
    DeleteProvisionedProductPlanInput:
      type: object
      required:
        - PlanId
      title: DeleteProvisionedProductPlanInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PlanId:
          $ref: '#/components/schemas/Id'
          description: The plan identifier.
        IgnoreErrors:
          $ref: '#/components/schemas/IgnoreErrors'
          description: 'If set to true, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources.'
    DeleteProvisioningArtifactOutput:
      type: object
      properties: {}
    DeleteProvisioningArtifactInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
      title: DeleteProvisioningArtifactInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
    DeleteServiceActionOutput:
      type: object
      properties: {}
    DeleteServiceActionInput:
      type: object
      required:
        - Id
      title: DeleteServiceActionInput
      properties:
        Id:
          $ref: '#/components/schemas/Id'
          description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    DeleteTagOptionOutput:
      type: object
      properties: {}
    DeleteTagOptionInput:
      type: object
      required:
        - Id
      title: DeleteTagOptionInput
      properties:
        Id:
          $ref: '#/components/schemas/TagOptionId'
          description: The TagOption identifier.
    DescribeConstraintOutput:
      type: object
      properties:
        ConstraintDetail:
          $ref: '#/components/schemas/ConstraintDetail'
          description: Information about the constraint.
        ConstraintParameters:
          $ref: '#/components/schemas/ConstraintParameters'
          description: The constraint parameters.
        Status:
          $ref: '#/components/schemas/Status'
          description: The status of the current request.
    DescribeConstraintInput:
      type: object
      required:
        - Id
      title: DescribeConstraintInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: The identifier of the constraint.
    DescribeCopyProductStatusOutput:
      type: object
      properties:
        CopyProductStatus:
          $ref: '#/components/schemas/CopyProductStatus'
          description: The status of the copy product operation.
        TargetProductId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the copied product.
        StatusDetail:
          $ref: '#/components/schemas/StatusDetail'
          description: The status message.
    DescribeCopyProductStatusInput:
      type: object
      required:
        - CopyProductToken
      title: DescribeCopyProductStatusInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        CopyProductToken:
          $ref: '#/components/schemas/Id'
          description: The token for the copy product operation. This token is returned by <a>CopyProduct</a>.
    DescribePortfolioOutput:
      type: object
      properties:
        PortfolioDetail:
          $ref: '#/components/schemas/PortfolioDetail'
          description: Information about the portfolio.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: Information about the tags associated with the portfolio.
        TagOptions:
          $ref: '#/components/schemas/TagOptionDetails'
          description: Information about the TagOptions associated with the portfolio.
        Budgets:
          $ref: '#/components/schemas/Budgets'
          description: Information about the associated budgets.
    DescribePortfolioInput:
      type: object
      required:
        - Id
      title: DescribePortfolioInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
    DescribePortfolioShareStatusOutput:
      type: object
      properties:
        PortfolioShareToken:
          $ref: '#/components/schemas/Id'
          description: 'The token for the portfolio share operation. For example, <code>share-6v24abcdefghi</code>.'
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        OrganizationNodeValue:
          $ref: '#/components/schemas/OrganizationNodeValue'
          description: 'Organization node identifier. It can be either account id, organizational unit id or organization id.'
        Status:
          $ref: '#/components/schemas/ShareStatus'
          description: Status of the portfolio share operation.
        ShareDetails:
          $ref: '#/components/schemas/ShareDetails'
          description: Information about the portfolio share operation.
    DescribePortfolioShareStatusInput:
      type: object
      required:
        - PortfolioShareToken
      title: DescribePortfolioShareStatusInput
      properties:
        PortfolioShareToken:
          $ref: '#/components/schemas/Id'
          description: The token for the portfolio share operation. This token is returned either by CreatePortfolioShare or by DeletePortfolioShare.
    DescribePortfolioSharesOutput:
      type: object
      properties:
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
        PortfolioShareDetails:
          $ref: '#/components/schemas/PortfolioShareDetails'
          description: Summaries about each of the portfolio shares.
    DescribePortfolioSharesInput:
      type: object
      required:
        - PortfolioId
        - Type
      title: DescribePortfolioSharesInput
      properties:
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier of the portfolio for which shares will be retrieved.
        Type:
          $ref: '#/components/schemas/DescribePortfolioShareType'
          description: '<p>The type of portfolio share to summarize. This field acts as a filter on the type of portfolio share, which can be one of the following:</p> <p>1. <code>ACCOUNT</code> - Represents an external account to account share.</p> <p>2. <code>ORGANIZATION</code> - Represents a share to an organization. This share is available to every account in the organization.</p> <p>3. <code>ORGANIZATIONAL_UNIT</code> - Represents a share to an organizational unit.</p> <p>4. <code>ORGANIZATION_MEMBER_ACCOUNT</code> - Represents a share to an account in the organization.</p>'
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
        PageSize:
          $ref: '#/components/schemas/PageSizeMax100'
          description: The maximum number of items to return with this call.
    DescribeProductOutput:
      type: object
      properties:
        ProductViewSummary:
          $ref: '#/components/schemas/ProductViewSummary'
          description: Summary information about the product view.
        ProvisioningArtifacts:
          $ref: '#/components/schemas/ProvisioningArtifacts'
          description: Information about the provisioning artifacts for the specified product.
        Budgets:
          $ref: '#/components/schemas/Budgets'
          description: Information about the associated budgets.
        LaunchPaths:
          $ref: '#/components/schemas/LaunchPaths'
          description: Information about the associated launch paths.
    DescribeProductInput:
      type: object
      title: DescribeProductInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        Name:
          $ref: '#/components/schemas/ProductViewName'
          description: The product name.
    DescribeProductAsAdminOutput:
      type: object
      properties:
        ProductViewDetail:
          $ref: '#/components/schemas/ProductViewDetail'
          description: Information about the product view.
        ProvisioningArtifactSummaries:
          $ref: '#/components/schemas/ProvisioningArtifactSummaries'
          description: Information about the provisioning artifacts (also known as versions) for the specified product.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: Information about the tags associated with the product.
        TagOptions:
          $ref: '#/components/schemas/TagOptionDetails'
          description: Information about the TagOptions associated with the product.
        Budgets:
          $ref: '#/components/schemas/Budgets'
          description: Information about the associated budgets.
    DescribeProductAsAdminInput:
      type: object
      title: DescribeProductAsAdminInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        Name:
          $ref: '#/components/schemas/ProductViewName'
          description: The product name.
        SourcePortfolioId:
          $ref: '#/components/schemas/Id'
          description: '<p>The unique identifier of the shared portfolio that the specified product is associated with.</p> <p>You can provide this parameter to retrieve the shared TagOptions associated with the product. If this parameter is provided and if TagOptions sharing is enabled in the portfolio share, the API returns both local and shared TagOptions associated with the product. Otherwise only local TagOptions will be returned. </p>'
    DescribeProductViewOutput:
      type: object
      properties:
        ProductViewSummary:
          $ref: '#/components/schemas/ProductViewSummary'
          description: Summary information about the product.
        ProvisioningArtifacts:
          $ref: '#/components/schemas/ProvisioningArtifacts'
          description: Information about the provisioning artifacts for the product.
    DescribeProductViewInput:
      type: object
      required:
        - Id
      title: DescribeProductViewInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: The product view identifier.
    DescribeProvisionedProductOutput:
      type: object
      properties:
        ProvisionedProductDetail:
          $ref: '#/components/schemas/ProvisionedProductDetail'
          description: Information about the provisioned product.
        CloudWatchDashboards:
          $ref: '#/components/schemas/CloudWatchDashboards'
          description: Any CloudWatch dashboards that were created when provisioning the product.
    DescribeProvisionedProductInput:
      type: object
      title: DescribeProvisionedProductInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: '<p>The provisioned product identifier. You must provide the name or ID, but not both.</p> <p>If you do not provide a name or ID, or you provide both name and ID, an <code>InvalidParametersException</code> will occur.</p>'
        Name:
          $ref: '#/components/schemas/ProvisionedProductName'
          description: '<p>The name of the provisioned product. You must provide the name or ID, but not both.</p> <p>If you do not provide a name or ID, or you provide both name and ID, an <code>InvalidParametersException</code> will occur.</p>'
      description: 'DescribeProvisionedProductAPI input structure. AcceptLanguage - [Optional] The language code for localization. Id - [Optional] The provisioned product identifier. Name - [Optional] Another provisioned product identifier. Customers must provide either Id or Name.'
    DescribeProvisionedProductPlanOutput:
      type: object
      properties:
        ProvisionedProductPlanDetails:
          $ref: '#/components/schemas/ProvisionedProductPlanDetails'
          description: Information about the plan.
        ResourceChanges:
          $ref: '#/components/schemas/ResourceChanges'
          description: Information about the resource changes that will occur when the plan is executed.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    DescribeProvisionedProductPlanInput:
      type: object
      required:
        - PlanId
      title: DescribeProvisionedProductPlanInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PlanId:
          $ref: '#/components/schemas/Id'
          description: The plan identifier.
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    DescribeProvisioningArtifactOutput:
      type: object
      properties:
        ProvisioningArtifactDetail:
          $ref: '#/components/schemas/ProvisioningArtifactDetail'
          description: Information about the provisioning artifact.
        Info:
          $ref: '#/components/schemas/ProvisioningArtifactInfo'
          description: The URL of the CloudFormation template in Amazon S3.
        Status:
          $ref: '#/components/schemas/Status'
          description: The status of the current request.
    DescribeProvisioningArtifactInput:
      type: object
      title: DescribeProvisioningArtifactInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        ProvisioningArtifactName:
          $ref: '#/components/schemas/ProvisioningArtifactName'
          description: The provisioning artifact name.
        ProductName:
          $ref: '#/components/schemas/ProductViewName'
          description: The product name.
        Verbose:
          $ref: '#/components/schemas/Verbose'
          description: Indicates whether a verbose level of detail is enabled.
    DescribeProvisioningParametersOutput:
      type: object
      properties:
        ProvisioningArtifactParameters:
          $ref: '#/components/schemas/ProvisioningArtifactParameters'
          description: Information about the parameters used to provision the product.
        ConstraintSummaries:
          $ref: '#/components/schemas/ConstraintSummaries'
          description: Information about the constraints used to provision the product.
        UsageInstructions:
          $ref: '#/components/schemas/UsageInstructions'
          description: 'Any additional metadata specifically related to the provisioning of the product. For example, see the <code>Version</code> field of the CloudFormation template.'
        TagOptions:
          $ref: '#/components/schemas/TagOptionSummaries'
          description: Information about the TagOptions associated with the resource.
        ProvisioningArtifactPreferences:
          $ref: '#/components/schemas/ProvisioningArtifactPreferences'
          description: 'An object that contains information about preferences, such as regions and accounts, for the provisioning artifact.'
        ProvisioningArtifactOutputs:
          $ref: '#/components/schemas/ProvisioningArtifactOutputs'
          description: The output of the provisioning artifact.
    DescribeProvisioningParametersInput:
      type: object
      title: DescribeProvisioningParametersInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProductId:
          $ref: '#/components/schemas/Id'
          description: 'The product identifier. You must provide the product name or ID, but not both.'
        ProductName:
          $ref: '#/components/schemas/ProductViewName'
          description: 'The name of the product. You must provide the name or ID, but not both.'
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: 'The identifier of the provisioning artifact. You must provide the name or ID, but not both.'
        ProvisioningArtifactName:
          $ref: '#/components/schemas/ProvisioningArtifactName'
          description: 'The name of the provisioning artifact. You must provide the name or ID, but not both.'
        PathId:
          $ref: '#/components/schemas/Id'
          description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>. You must provide the name or ID, but not both.'
        PathName:
          $ref: '#/components/schemas/PortfolioDisplayName'
          description: 'The name of the path. You must provide the name or ID, but not both.'
    DescribeRecordOutput:
      type: object
      properties:
        RecordDetail:
          $ref: '#/components/schemas/RecordDetail'
          description: Information about the product.
        RecordOutputs:
          $ref: '#/components/schemas/RecordOutputs'
          description: 'Information about the product created as the result of a request. For example, the output for a CloudFormation-backed product that creates an S3 bucket would include the S3 bucket URL.'
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    DescribeRecordInput:
      type: object
      required:
        - Id
      title: DescribeRecordInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: The record identifier of the provisioned product. This identifier is returned by the request operation.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
    DescribeServiceActionOutput:
      type: object
      properties:
        ServiceActionDetail:
          $ref: '#/components/schemas/ServiceActionDetail'
          description: Detailed information about the self-service action.
    DescribeServiceActionInput:
      type: object
      required:
        - Id
      title: DescribeServiceActionInput
      properties:
        Id:
          $ref: '#/components/schemas/Id'
          description: The self-service action identifier.
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    DescribeServiceActionExecutionParametersOutput:
      type: object
      properties:
        ServiceActionParameters:
          $ref: '#/components/schemas/ExecutionParameters'
          description: The parameters of the self-service action.
    DescribeServiceActionExecutionParametersInput:
      type: object
      required:
        - ProvisionedProductId
        - ServiceActionId
      title: DescribeServiceActionExecutionParametersInput
      properties:
        ProvisionedProductId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioned product.
        ServiceActionId:
          $ref: '#/components/schemas/Id'
          description: The self-service action identifier.
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    DescribeTagOptionOutput:
      type: object
      properties:
        TagOptionDetail:
          $ref: '#/components/schemas/TagOptionDetail'
          description: Information about the TagOption.
    DescribeTagOptionInput:
      type: object
      required:
        - Id
      title: DescribeTagOptionInput
      properties:
        Id:
          $ref: '#/components/schemas/TagOptionId'
          description: The TagOption identifier.
    DisableAWSOrganizationsAccessOutput:
      type: object
      properties: {}
    DisableAWSOrganizationsAccessInput:
      type: object
      title: DisableAWSOrganizationsAccessInput
      properties: {}
    DisassociateBudgetFromResourceOutput:
      type: object
      properties: {}
    DisassociateBudgetFromResourceInput:
      type: object
      required:
        - BudgetName
        - ResourceId
      title: DisassociateBudgetFromResourceInput
      properties:
        BudgetName:
          $ref: '#/components/schemas/BudgetName'
          description: The name of the budget you want to disassociate.
        ResourceId:
          $ref: '#/components/schemas/Id'
          description: The resource identifier you want to disassociate from. Either a portfolio-id or a product-id.
    DisassociatePrincipalFromPortfolioOutput:
      type: object
      properties: {}
    DisassociatePrincipalFromPortfolioInput:
      type: object
      required:
        - PortfolioId
        - PrincipalARN
      title: DisassociatePrincipalFromPortfolioInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        PrincipalARN:
          $ref: '#/components/schemas/PrincipalARN'
          description: 'The ARN of the principal (IAM user, role, or group).'
    DisassociateProductFromPortfolioOutput:
      type: object
      properties: {}
    DisassociateProductFromPortfolioInput:
      type: object
      required:
        - ProductId
        - PortfolioId
      title: DisassociateProductFromPortfolioInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
    DisassociateServiceActionFromProvisioningArtifactOutput:
      type: object
      properties: {}
    DisassociateServiceActionFromProvisioningArtifactInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
        - ServiceActionId
      title: DisassociateServiceActionFromProvisioningArtifactInput
      properties:
        ProductId:
          $ref: '#/components/schemas/Id'
          description: 'The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.'
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: 'The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.'
        ServiceActionId:
          $ref: '#/components/schemas/Id'
          description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    DisassociateTagOptionFromResourceOutput:
      type: object
      properties: {}
    DisassociateTagOptionFromResourceInput:
      type: object
      required:
        - ResourceId
        - TagOptionId
      title: DisassociateTagOptionFromResourceInput
      properties:
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The resource identifier.
        TagOptionId:
          $ref: '#/components/schemas/TagOptionId'
          description: The TagOption identifier.
    EnableAWSOrganizationsAccessOutput:
      type: object
      properties: {}
    EnableAWSOrganizationsAccessInput:
      type: object
      title: EnableAWSOrganizationsAccessInput
      properties: {}
    ExecuteProvisionedProductPlanOutput:
      type: object
      properties:
        RecordDetail:
          $ref: '#/components/schemas/RecordDetail'
          description: Information about the result of provisioning the product.
    ExecuteProvisionedProductPlanInput:
      type: object
      required:
        - PlanId
        - IdempotencyToken
      title: ExecuteProvisionedProductPlanInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PlanId:
          $ref: '#/components/schemas/Id'
          description: The plan identifier.
        IdempotencyToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
    ExecuteProvisionedProductServiceActionOutput:
      type: object
      properties:
        RecordDetail:
          $ref: '#/components/schemas/RecordDetail'
          description: An object containing detailed information about the result of provisioning the product.
    ExecuteProvisionedProductServiceActionInput:
      type: object
      required:
        - ProvisionedProductId
        - ServiceActionId
        - ExecuteToken
      title: ExecuteProvisionedProductServiceActionInput
      properties:
        ProvisionedProductId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioned product.
        ServiceActionId:
          $ref: '#/components/schemas/Id'
          description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
        ExecuteToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: An idempotency token that uniquely identifies the execute request.
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Parameters:
          $ref: '#/components/schemas/ExecutionParameterMap'
          description: 'A map of all self-service action parameters and their values. If a provided parameter is of a special type, such as <code>TARGET</code>, the provided value will override the default value generated by AWS Service Catalog. If the parameters field is not provided, no additional parameters are passed and default values will be used for any special parameters such as <code>TARGET</code>.'
    GetAWSOrganizationsAccessStatusOutput:
      type: object
      properties:
        AccessStatus:
          $ref: '#/components/schemas/AccessStatus'
          description: The status of the portfolio share feature.
    GetAWSOrganizationsAccessStatusInput:
      type: object
      title: GetAWSOrganizationsAccessStatusInput
      properties: {}
    GetProvisionedProductOutputsOutput:
      type: object
      properties:
        Outputs:
          $ref: '#/components/schemas/RecordOutputs'
          description: 'Information about the product created as the result of a request. For example, the output for a CloudFormation-backed product that creates an S3 bucket would include the S3 bucket URL. '
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    GetProvisionedProductOutputsInput:
      type: object
      title: GetProvisionedProductOutputsInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProvisionedProductId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioned product that you want the outputs from.
        ProvisionedProductName:
          $ref: '#/components/schemas/ProvisionedProductName'
          description: The name of the provisioned product that you want the outputs from.
        OutputKeys:
          $ref: '#/components/schemas/OutputKeys'
          description: 'The list of keys that the API should return with their values. If none are provided, the API will return all outputs of the provisioned product.'
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    ImportAsProvisionedProductOutput:
      type: object
      properties:
        RecordDetail:
          $ref: '#/components/schemas/RecordDetail'
    ImportAsProvisionedProductInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
        - ProvisionedProductName
        - PhysicalId
        - IdempotencyToken
      title: ImportAsProvisionedProductInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
        ProvisionedProductName:
          $ref: '#/components/schemas/ProvisionedProductName'
          description: 'The user-friendly name of the provisioned product. The value must be unique for the AWS account. The name cannot be updated after the product is provisioned. '
        PhysicalId:
          $ref: '#/components/schemas/PhysicalId'
          description: The unique identifier of the resource to be imported. It only currently supports CloudFormation stack IDs.
        IdempotencyToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
    ListAcceptedPortfolioSharesOutput:
      type: object
      properties:
        PortfolioDetails:
          $ref: '#/components/schemas/PortfolioDetails'
          description: Information about the portfolios.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListAcceptedPortfolioSharesInput:
      type: object
      title: ListAcceptedPortfolioSharesInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
        PageSize:
          $ref: '#/components/schemas/PageSizeMax100'
          description: The maximum number of items to return with this call.
        PortfolioShareType:
          $ref: '#/components/schemas/PortfolioShareType'
          description: <p>The type of shared portfolios to list. The default is to list imported portfolios.</p> <ul> <li> <p> <code>AWS_ORGANIZATIONS</code> - List portfolios shared by the management account of your organization</p> </li> <li> <p> <code>AWS_SERVICECATALOG</code> - List default portfolios</p> </li> <li> <p> <code>IMPORTED</code> - List imported portfolios</p> </li> </ul>
    ListBudgetsForResourceOutput:
      type: object
      properties:
        Budgets:
          $ref: '#/components/schemas/Budgets'
          description: Information about the associated budgets.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListBudgetsForResourceInput:
      type: object
      required:
        - ResourceId
      title: ListBudgetsForResourceInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ResourceId:
          $ref: '#/components/schemas/Id'
          description: The resource identifier.
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    ListConstraintsForPortfolioOutput:
      type: object
      properties:
        ConstraintDetails:
          $ref: '#/components/schemas/ConstraintDetails'
          description: Information about the constraints.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListConstraintsForPortfolioInput:
      type: object
      required:
        - PortfolioId
      title: ListConstraintsForPortfolioInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    ListLaunchPathsOutput:
      type: object
      properties:
        LaunchPathSummaries:
          $ref: '#/components/schemas/LaunchPathSummaries'
          description: Information about the launch path.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListLaunchPathsInput:
      type: object
      required:
        - ProductId
      title: ListLaunchPathsInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    ListOrganizationPortfolioAccessOutput:
      type: object
      properties:
        OrganizationNodes:
          $ref: '#/components/schemas/OrganizationNodes'
          description: Displays information about the organization nodes.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListOrganizationPortfolioAccessInput:
      type: object
      required:
        - PortfolioId
        - OrganizationNodeType
      title: ListOrganizationPortfolioAccessInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: 'The portfolio identifier. For example, <code>port-2abcdext3y5fk</code>.'
        OrganizationNodeType:
          $ref: '#/components/schemas/OrganizationNodeType'
          description: <p>The organization node type that will be returned in the output.</p> <ul> <li> <p> <code>ORGANIZATION</code> - Organization that has access to the portfolio. </p> </li> <li> <p> <code>ORGANIZATIONAL_UNIT</code> - Organizational unit that has access to the portfolio within your organization.</p> </li> <li> <p> <code>ACCOUNT</code> - Account that has access to the portfolio within your organization.</p> </li> </ul>
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
    ListPortfolioAccessOutput:
      type: object
      properties:
        AccountIds:
          $ref: '#/components/schemas/AccountIds'
          description: Information about the AWS accounts with access to the portfolio.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListPortfolioAccessInput:
      type: object
      required:
        - PortfolioId
      title: ListPortfolioAccessInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        OrganizationParentId:
          $ref: '#/components/schemas/Id'
          description: The ID of an organization node the portfolio is shared with. All children of this node with an inherited portfolio share will be returned.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
        PageSize:
          $ref: '#/components/schemas/PageSizeMax100'
          description: The maximum number of items to return with this call.
    ListPortfoliosOutput:
      type: object
      properties:
        PortfolioDetails:
          $ref: '#/components/schemas/PortfolioDetails'
          description: Information about the portfolios.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListPortfoliosInput:
      type: object
      title: ListPortfoliosInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
        PageSize:
          $ref: '#/components/schemas/PageSizeMax100'
          description: The maximum number of items to return with this call.
    ListPortfoliosForProductOutput:
      type: object
      properties:
        PortfolioDetails:
          $ref: '#/components/schemas/PortfolioDetails'
          description: Information about the portfolios.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListPortfoliosForProductInput:
      type: object
      required:
        - ProductId
      title: ListPortfoliosForProductInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
        PageSize:
          $ref: '#/components/schemas/PageSizeMax100'
          description: The maximum number of items to return with this call.
    ListPrincipalsForPortfolioOutput:
      type: object
      properties:
        Principals:
          $ref: '#/components/schemas/Principals'
          description: The IAM principals (users or roles) associated with the portfolio.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListPrincipalsForPortfolioInput:
      type: object
      required:
        - PortfolioId
      title: ListPrincipalsForPortfolioInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    ListProvisionedProductPlansOutput:
      type: object
      properties:
        ProvisionedProductPlans:
          $ref: '#/components/schemas/ProvisionedProductPlans'
          description: Information about the plans.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListProvisionedProductPlansInput:
      type: object
      title: ListProvisionedProductPlansInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProvisionProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
        AccessLevelFilter:
          $ref: '#/components/schemas/AccessLevelFilter'
          description: The access level to use to obtain results. The default is <code>User</code>.
    ListProvisioningArtifactsOutput:
      type: object
      properties:
        ProvisioningArtifactDetails:
          $ref: '#/components/schemas/ProvisioningArtifactDetails'
          description: Information about the provisioning artifacts.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListProvisioningArtifactsInput:
      type: object
      required:
        - ProductId
      title: ListProvisioningArtifactsInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
    ListProvisioningArtifactsForServiceActionOutput:
      type: object
      properties:
        ProvisioningArtifactViews:
          $ref: '#/components/schemas/ProvisioningArtifactViews'
          description: An array of objects with information about product views and provisioning artifacts.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListProvisioningArtifactsForServiceActionInput:
      type: object
      required:
        - ServiceActionId
      title: ListProvisioningArtifactsForServiceActionInput
      properties:
        ServiceActionId:
          $ref: '#/components/schemas/Id'
          description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    ListRecordHistoryOutput:
      type: object
      properties:
        RecordDetails:
          $ref: '#/components/schemas/RecordDetails'
          description: 'The records, in reverse chronological order.'
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListRecordHistoryInput:
      type: object
      title: ListRecordHistoryInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        AccessLevelFilter:
          $ref: '#/components/schemas/AccessLevelFilter'
          description: The access level to use to obtain results. The default is <code>User</code>.
        SearchFilter:
          $ref: '#/components/schemas/ListRecordHistorySearchFilter'
          description: The search filter to scope the results.
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    ListResourcesForTagOptionOutput:
      type: object
      properties:
        ResourceDetails:
          $ref: '#/components/schemas/ResourceDetails'
          description: Information about the resources.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    ListResourcesForTagOptionInput:
      type: object
      required:
        - TagOptionId
      title: ListResourcesForTagOptionInput
      properties:
        TagOptionId:
          $ref: '#/components/schemas/TagOptionId'
          description: The TagOption identifier.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: <p>The resource type.</p> <ul> <li> <p> <code>Portfolio</code> </p> </li> <li> <p> <code>Product</code> </p> </li> </ul>
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    ListServiceActionsOutput:
      type: object
      properties:
        ServiceActionSummaries:
          $ref: '#/components/schemas/ServiceActionSummaries'
          description: An object containing information about the service actions associated with the provisioning artifact.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListServiceActionsInput:
      type: object
      title: ListServiceActionsInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    ListServiceActionsForProvisioningArtifactOutput:
      type: object
      properties:
        ServiceActionSummaries:
          $ref: '#/components/schemas/ServiceActionSummaries'
          description: An object containing information about the self-service actions associated with the provisioning artifact.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListServiceActionsForProvisioningArtifactInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
      title: ListServiceActionsForProvisioningArtifactInput
      properties:
        ProductId:
          $ref: '#/components/schemas/Id'
          description: 'The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.'
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: 'The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.'
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    ListStackInstancesForProvisionedProductOutput:
      type: object
      properties:
        StackInstances:
          $ref: '#/components/schemas/StackInstances'
          description: List of stack instances.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ListStackInstancesForProvisionedProductInput:
      type: object
      required:
        - ProvisionedProductId
      title: ListStackInstancesForProvisionedProductInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProvisionedProductId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioned product.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
    ListTagOptionsOutput:
      type: object
      properties:
        TagOptionDetails:
          $ref: '#/components/schemas/TagOptionDetails'
          description: Information about the TagOptions.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    ListTagOptionsInput:
      type: object
      title: ListTagOptionsInput
      properties:
        Filters:
          $ref: '#/components/schemas/ListTagOptionsFilters'
          description: 'The search filters. If no search filters are specified, the output includes all TagOptions.'
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    ProvisionProductOutput:
      type: object
      properties:
        RecordDetail:
          $ref: '#/components/schemas/RecordDetail'
          description: Information about the result of provisioning the product.
    ProvisionProductInput:
      type: object
      required:
        - ProvisionedProductName
        - ProvisionToken
      title: ProvisionProductInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProductId:
          $ref: '#/components/schemas/Id'
          description: 'The product identifier. You must provide the name or ID, but not both.'
        ProductName:
          $ref: '#/components/schemas/ProductViewName'
          description: 'The name of the product. You must provide the name or ID, but not both.'
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: 'The identifier of the provisioning artifact. You must provide the name or ID, but not both.'
        ProvisioningArtifactName:
          $ref: '#/components/schemas/ProvisioningArtifactName'
          description: 'The name of the provisioning artifact. You must provide the name or ID, but not both.'
        PathId:
          $ref: '#/components/schemas/Id'
          description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>. You must provide the name or ID, but not both.'
        PathName:
          $ref: '#/components/schemas/PortfolioDisplayName'
          description: 'The name of the path. You must provide the name or ID, but not both.'
        ProvisionedProductName:
          $ref: '#/components/schemas/ProvisionedProductName'
          description: A user-friendly name for the provisioned product. This value must be unique for the AWS account and cannot be updated after the product is provisioned.
        ProvisioningParameters:
          $ref: '#/components/schemas/ProvisioningParameters'
          description: Parameters specified by the administrator that are required for provisioning the product.
        ProvisioningPreferences:
          $ref: '#/components/schemas/ProvisioningPreferences'
          description: An object that contains information about the provisioning preferences for a stack set.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: One or more tags.
        NotificationArns:
          $ref: '#/components/schemas/NotificationArns'
          description: Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
        ProvisionToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: An idempotency token that uniquely identifies the provisioning request.
    RejectPortfolioShareOutput:
      type: object
      properties: {}
    RejectPortfolioShareInput:
      type: object
      required:
        - PortfolioId
      title: RejectPortfolioShareInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        PortfolioShareType:
          $ref: '#/components/schemas/PortfolioShareType'
          description: '<p>The type of shared portfolios to reject. The default is to reject imported portfolios.</p> <ul> <li> <p> <code>AWS_ORGANIZATIONS</code> - Reject portfolios shared by the management account of your organization.</p> </li> <li> <p> <code>IMPORTED</code> - Reject imported portfolios.</p> </li> <li> <p> <code>AWS_SERVICECATALOG</code> - Not supported. (Throws ResourceNotFoundException.)</p> </li> </ul> <p>For example, <code>aws servicecatalog reject-portfolio-share --portfolio-id "port-2qwzkwxt3y5fk" --portfolio-share-type AWS_ORGANIZATIONS</code> </p>'
    ScanProvisionedProductsOutput:
      type: object
      properties:
        ProvisionedProducts:
          $ref: '#/components/schemas/ProvisionedProductDetails'
          description: Information about the provisioned products.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    ScanProvisionedProductsInput:
      type: object
      title: ScanProvisionedProductsInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        AccessLevelFilter:
          $ref: '#/components/schemas/AccessLevelFilter'
          description: The access level to use to obtain results. The default is <code>User</code>.
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    SearchProductsOutput:
      type: object
      properties:
        ProductViewSummaries:
          $ref: '#/components/schemas/ProductViewSummaries'
          description: Information about the product views.
        ProductViewAggregations:
          $ref: '#/components/schemas/ProductViewAggregations'
          description: The product view aggregations.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    SearchProductsInput:
      type: object
      title: SearchProductsInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Filters:
          $ref: '#/components/schemas/ProductViewFilters'
          description: 'The search filters. If no search filters are specified, the output includes all products to which the caller has access.'
        PageSize:
          $ref: '#/components/schemas/PageSizeMax100'
          description: The maximum number of items to return with this call.
        SortBy:
          $ref: '#/components/schemas/ProductViewSortBy'
          description: 'The sort field. If no value is specified, the results are not sorted.'
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: 'The sort order. If no value is specified, the results are not sorted.'
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    SearchProductsAsAdminOutput:
      type: object
      properties:
        ProductViewDetails:
          $ref: '#/components/schemas/ProductViewDetails'
          description: Information about the product views.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    SearchProductsAsAdminInput:
      type: object
      title: SearchProductsAsAdminInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        Filters:
          $ref: '#/components/schemas/ProductViewFilters'
          description: 'The search filters. If no search filters are specified, the output includes all products to which the administrator has access.'
        SortBy:
          $ref: '#/components/schemas/ProductViewSortBy'
          description: 'The sort field. If no value is specified, the results are not sorted.'
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: 'The sort order. If no value is specified, the results are not sorted.'
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
        PageSize:
          $ref: '#/components/schemas/PageSize'
          description: The maximum number of items to return with this call.
        ProductSource:
          $ref: '#/components/schemas/ProductSource'
          description: Access level of the source of the product.
    SearchProvisionedProductsOutput:
      type: object
      properties:
        ProvisionedProducts:
          $ref: '#/components/schemas/ProvisionedProductAttributes'
          description: Information about the provisioned products.
        TotalResultsCount:
          $ref: '#/components/schemas/TotalResultsCount'
          description: The number of provisioned products found.
        NextPageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
    SearchProvisionedProductsInput:
      type: object
      title: SearchProvisionedProductsInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        AccessLevelFilter:
          $ref: '#/components/schemas/AccessLevelFilter'
          description: The access level to use to obtain results. The default is <code>User</code>.
        Filters:
          $ref: '#/components/schemas/ProvisionedProductFilters'
          description: '<p>The search filters.</p> <p>When the key is <code>SearchQuery</code>, the searchable fields are <code>arn</code>, <code>createdTime</code>, <code>id</code>, <code>lastRecordId</code>, <code>idempotencyToken</code>, <code>name</code>, <code>physicalId</code>, <code>productId</code>, <code>provisioningArtifact</code>, <code>type</code>, <code>status</code>, <code>tags</code>, <code>userArn</code>, <code>userArnSession</code>, <code>lastProvisioningRecordId</code>, <code>lastSuccessfulProvisioningRecordId</code>, <code>productName</code>, and <code>provisioningArtifactName</code>.</p> <p>Example: <code>"SearchQuery":["status:AVAILABLE"]</code> </p>'
        SortBy:
          $ref: '#/components/schemas/SortField'
          description: 'The sort field. If no value is specified, the results are not sorted. The valid values are <code>arn</code>, <code>id</code>, <code>name</code>, and <code>lastRecordId</code>.'
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: 'The sort order. If no value is specified, the results are not sorted.'
        PageSize:
          $ref: '#/components/schemas/SearchProvisionedProductsPageSize'
          description: The maximum number of items to return with this call.
        PageToken:
          $ref: '#/components/schemas/PageToken'
          description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
    TerminateProvisionedProductOutput:
      type: object
      properties:
        RecordDetail:
          $ref: '#/components/schemas/RecordDetail'
          description: Information about the result of this request.
    TerminateProvisionedProductInput:
      type: object
      required:
        - TerminateToken
      title: TerminateProvisionedProductInput
      properties:
        ProvisionedProductName:
          $ref: '#/components/schemas/ProvisionedProductNameOrArn'
          description: The name of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
        ProvisionedProductId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
        TerminateToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'An idempotency token that uniquely identifies the termination request. This token is only valid during the termination process. After the provisioned product is terminated, subsequent requests to terminate the same provisioned product always return <b>ResourceNotFound</b>.'
        IgnoreErrors:
          $ref: '#/components/schemas/IgnoreErrors'
          description: 'If set to true, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources.'
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        RetainPhysicalResources:
          $ref: '#/components/schemas/RetainPhysicalResources'
          description: 'When this boolean parameter is set to true, the <code>TerminateProvisionedProduct</code> API deletes the Service Catalog provisioned product. However, it does not remove the CloudFormation stack, stack set, or the underlying resources of the deleted provisioned product. The default value is false.'
    UpdateConstraintOutput:
      type: object
      properties:
        ConstraintDetail:
          $ref: '#/components/schemas/ConstraintDetail'
          description: Information about the constraint.
        ConstraintParameters:
          $ref: '#/components/schemas/ConstraintParameters'
          description: The constraint parameters.
        Status:
          $ref: '#/components/schemas/Status'
          description: The status of the current request.
    UpdateConstraintInput:
      type: object
      required:
        - Id
      title: UpdateConstraintInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: The identifier of the constraint.
        Description:
          $ref: '#/components/schemas/ConstraintDescription'
          description: The updated description of the constraint.
        Parameters:
          $ref: '#/components/schemas/ConstraintParameters'
          description: '<p>The constraint parameters, in JSON format. The syntax depends on the constraint type as follows:</p> <dl> <dt>LAUNCH</dt> <dd> <p>You are required to specify either the <code>RoleArn</code> or the <code>LocalRoleName</code> but can''t use both.</p> <p>Specify the <code>RoleArn</code> property as follows:</p> <p> <code>{"RoleArn" : "arn:aws:iam::123456789012:role/LaunchRole"}</code> </p> <p>Specify the <code>LocalRoleName</code> property as follows:</p> <p> <code>{"LocalRoleName": "SCBasicLaunchRole"}</code> </p> <p>If you specify the <code>LocalRoleName</code> property, when an account uses the launch constraint, the IAM role with that name in the account will be used. This allows launch-role constraints to be account-agnostic so the administrator can create fewer resources per shared account.</p> <note> <p>The given role name must exist in the account used to create the launch constraint and the account of the user who launches a product with this launch constraint.</p> </note> <p>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</p> <p>You also cannot have more than one <code>LAUNCH</code> constraint on a product and portfolio.</p> </dd> <dt>NOTIFICATION</dt> <dd> <p>Specify the <code>NotificationArns</code> property as follows:</p> <p> <code>{"NotificationArns" : ["arn:aws:sns:us-east-1:123456789012:Topic"]}</code> </p> </dd> <dt>RESOURCE_UPDATE</dt> <dd> <p>Specify the <code>TagUpdatesOnProvisionedProduct</code> property as follows:</p> <p> <code>{"Version":"2.0","Properties":{"TagUpdateOnProvisionedProduct":"String"}}</code> </p> <p>The <code>TagUpdatesOnProvisionedProduct</code> property accepts a string value of <code>ALLOWED</code> or <code>NOT_ALLOWED</code>.</p> </dd> <dt>STACKSET</dt> <dd> <p>Specify the <code>Parameters</code> property as follows:</p> <p> <code>{"Version": "String", "Properties": {"AccountList": [ "String" ], "RegionList": [ "String" ], "AdminRole": "String", "ExecutionRole": "String"}}</code> </p> <p>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</p> <p>You also cannot have more than one <code>STACKSET</code> constraint on a product and portfolio.</p> <p>Products with a <code>STACKSET</code> constraint will launch an AWS CloudFormation stack set.</p> </dd> <dt>TEMPLATE</dt> <dd> <p>Specify the <code>Rules</code> property. For more information, see <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html">Template Constraint Rules</a>.</p> </dd> </dl>'
    UpdatePortfolioOutput:
      type: object
      properties:
        PortfolioDetail:
          $ref: '#/components/schemas/PortfolioDetail'
          description: Information about the portfolio.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: Information about the tags associated with the portfolio.
    UpdatePortfolioInput:
      type: object
      required:
        - Id
      title: UpdatePortfolioInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        DisplayName:
          $ref: '#/components/schemas/PortfolioDisplayName'
          description: The name to use for display purposes.
        Description:
          $ref: '#/components/schemas/PortfolioDescription'
          description: The updated description of the portfolio.
        ProviderName:
          $ref: '#/components/schemas/ProviderName'
          description: The updated name of the portfolio provider.
        AddTags:
          $ref: '#/components/schemas/AddTags'
          description: The tags to add.
        RemoveTags:
          $ref: '#/components/schemas/TagKeys'
          description: The tags to remove.
    UpdatePortfolioShareOutput:
      type: object
      properties:
        PortfolioShareToken:
          $ref: '#/components/schemas/Id'
          description: The token that tracks the status of the <code>UpdatePortfolioShare</code> operation for external account to account or organizational type sharing.
        Status:
          $ref: '#/components/schemas/ShareStatus'
          description: 'The status of <code>UpdatePortfolioShare</code> operation. You can also obtain the operation status using <code>DescribePortfolioShareStatus</code> API. '
    UpdatePortfolioShareInput:
      type: object
      required:
        - PortfolioId
      title: UpdatePortfolioShareInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier of the portfolio for which the share will be updated.
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The AWS Account Id of the recipient account. This field is required when updating an external account to account type share.
        OrganizationNode:
          $ref: '#/components/schemas/OrganizationNode'
        ShareTagOptions:
          $ref: '#/components/schemas/NullableBoolean'
          description: 'A flag to enable or disable TagOptions sharing for the portfolio share. If this field is not provided, the current state of TagOptions sharing on the portfolio share will not be modified.'
    UpdateProductOutput:
      type: object
      properties:
        ProductViewDetail:
          $ref: '#/components/schemas/ProductViewDetail'
          description: Information about the product view.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: Information about the tags associated with the product.
    UpdateProductInput:
      type: object
      required:
        - Id
      title: UpdateProductInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        Id:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        Name:
          $ref: '#/components/schemas/ProductViewName'
          description: The updated product name.
        Owner:
          $ref: '#/components/schemas/ProductViewOwner'
          description: The updated owner of the product.
        Description:
          $ref: '#/components/schemas/ProductViewShortDescription'
          description: The updated description of the product.
        Distributor:
          $ref: '#/components/schemas/ProductViewOwner'
          description: The updated distributor of the product.
        SupportDescription:
          $ref: '#/components/schemas/SupportDescription'
          description: The updated support description for the product.
        SupportEmail:
          $ref: '#/components/schemas/SupportEmail'
          description: The updated support email for the product.
        SupportUrl:
          $ref: '#/components/schemas/SupportUrl'
          description: The updated support URL for the product.
        AddTags:
          $ref: '#/components/schemas/AddTags'
          description: The tags to add to the product.
        RemoveTags:
          $ref: '#/components/schemas/TagKeys'
          description: The tags to remove from the product.
    UpdateProvisionedProductOutput:
      type: object
      properties:
        RecordDetail:
          $ref: '#/components/schemas/RecordDetail'
          description: Information about the result of the request.
    UpdateProvisionedProductInput:
      type: object
      required:
        - UpdateToken
      title: UpdateProvisionedProductInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProvisionedProductName:
          $ref: '#/components/schemas/ProvisionedProductNameOrArn'
          description: The name of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
        ProvisionedProductId:
          $ref: '#/components/schemas/Id'
          description: 'The identifier of the provisioned product. You must provide the name or ID, but not both.'
        ProductId:
          $ref: '#/components/schemas/Id'
          description: 'The identifier of the product. You must provide the name or ID, but not both.'
        ProductName:
          $ref: '#/components/schemas/ProductViewName'
          description: 'The name of the product. You must provide the name or ID, but not both.'
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
        ProvisioningArtifactName:
          $ref: '#/components/schemas/ProvisioningArtifactName'
          description: 'The name of the provisioning artifact. You must provide the name or ID, but not both.'
        PathId:
          $ref: '#/components/schemas/Id'
          description: 'The path identifier. This value is optional if the product has a default path, and required if the product has more than one path. You must provide the name or ID, but not both.'
        PathName:
          $ref: '#/components/schemas/PortfolioDisplayName'
          description: 'The name of the path. You must provide the name or ID, but not both.'
        ProvisioningParameters:
          $ref: '#/components/schemas/UpdateProvisioningParameters'
          description: The new parameters.
        ProvisioningPreferences:
          $ref: '#/components/schemas/UpdateProvisioningPreferences'
          description: An object that contains information about the provisioning preferences for a stack set.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: One or more tags. Requires the product to have <code>RESOURCE_UPDATE</code> constraint with <code>TagUpdatesOnProvisionedProduct</code> set to <code>ALLOWED</code> to allow tag updates.
        UpdateToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: The idempotency token that uniquely identifies the provisioning update request.
    UpdateProvisionedProductPropertiesOutput:
      type: object
      properties:
        ProvisionedProductId:
          $ref: '#/components/schemas/Id'
          description: The provisioned product identifier.
        ProvisionedProductProperties:
          $ref: '#/components/schemas/ProvisionedProductProperties'
          description: A map that contains the properties updated.
        RecordId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the record.
        Status:
          $ref: '#/components/schemas/RecordStatus'
          description: The status of the request.
    UpdateProvisionedProductPropertiesInput:
      type: object
      required:
        - ProvisionedProductId
        - ProvisionedProductProperties
        - IdempotencyToken
      title: UpdateProvisionedProductPropertiesInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProvisionedProductId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioned product.
        ProvisionedProductProperties:
          $ref: '#/components/schemas/ProvisionedProductProperties'
          description: '<p>A map that contains the provisioned product properties to be updated.</p> <p>The <code>LAUNCH_ROLE</code> key accepts role ARNs. This key allows an administrator to call <code>UpdateProvisionedProductProperties</code> to update the launch role that is associated with a provisioned product. This role is used when an end user calls a provisioning operation such as <code>UpdateProvisionedProduct</code>, <code>TerminateProvisionedProduct</code>, or <code>ExecuteProvisionedProductServiceAction</code>. Only a role ARN is valid. A user ARN is invalid. </p> <p>The <code>OWNER</code> key accepts user ARNs and role ARNs. The owner is the user that has permission to see, update, terminate, and execute service actions in the provisioned product.</p> <p>The administrator can change the owner of a provisioned product to another IAM user within the same account. Both end user owners and administrators can see ownership history of the provisioned product using the <code>ListRecordHistory</code> API. The new owner can describe all past records for the provisioned product using the <code>DescribeRecord</code> API. The previous owner can no longer use <code>DescribeRecord</code>, but can still see the product''s history from when he was an owner using <code>ListRecordHistory</code>.</p> <p>If a provisioned product ownership is assigned to an end user, they can see and perform any action through the API or Service Catalog console such as update, terminate, and execute service actions. If an end user provisions a product and the owner is updated to someone else, they will no longer be able to see or perform any actions through API or the Service Catalog console on that provisioned product.</p>'
        IdempotencyToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: The idempotency token that uniquely identifies the provisioning product update request.
    UpdateProvisioningArtifactOutput:
      type: object
      properties:
        ProvisioningArtifactDetail:
          $ref: '#/components/schemas/ProvisioningArtifactDetail'
          description: Information about the provisioning artifact.
        Info:
          $ref: '#/components/schemas/ProvisioningArtifactInfo'
          description: The URL of the CloudFormation template in Amazon S3.
        Status:
          $ref: '#/components/schemas/Status'
          description: The status of the current request.
    UpdateProvisioningArtifactInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
      title: UpdateProvisioningArtifactInput
      properties:
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
        Name:
          $ref: '#/components/schemas/ProvisioningArtifactName'
          description: The updated name of the provisioning artifact.
        Description:
          $ref: '#/components/schemas/ProvisioningArtifactDescription'
          description: The updated description of the provisioning artifact.
        Active:
          $ref: '#/components/schemas/ProvisioningArtifactActive'
          description: <p>Indicates whether the product version is active.</p> <p>Inactive provisioning artifacts are invisible to end users. End users cannot launch or update a provisioned product from an inactive provisioning artifact.</p>
        Guidance:
          $ref: '#/components/schemas/ProvisioningArtifactGuidance'
          description: <p>Information set by the administrator to provide guidance to end users about which provisioning artifacts to use.</p> <p>The <code>DEFAULT</code> value indicates that the product version is active.</p> <p>The administrator can set the guidance to <code>DEPRECATED</code> to inform users that the product version is deprecated. Users are able to make updates to a provisioned product of a deprecated version but cannot launch new provisioned products using a deprecated version.</p>
    UpdateServiceActionOutput:
      type: object
      properties:
        ServiceActionDetail:
          $ref: '#/components/schemas/ServiceActionDetail'
          description: Detailed information about the self-service action.
    UpdateServiceActionInput:
      type: object
      required:
        - Id
      title: UpdateServiceActionInput
      properties:
        Id:
          $ref: '#/components/schemas/Id'
          description: The self-service action identifier.
        Name:
          $ref: '#/components/schemas/ServiceActionName'
          description: The self-service action name.
        Definition:
          $ref: '#/components/schemas/ServiceActionDefinitionMap'
          description: A map that defines the self-service action.
        Description:
          $ref: '#/components/schemas/ServiceActionDescription'
          description: The self-service action description.
        AcceptLanguage:
          $ref: '#/components/schemas/AcceptLanguage'
          description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    UpdateTagOptionOutput:
      type: object
      properties:
        TagOptionDetail:
          $ref: '#/components/schemas/TagOptionDetail'
          description: Information about the TagOption.
    UpdateTagOptionInput:
      type: object
      required:
        - Id
      title: UpdateTagOptionInput
      properties:
        Id:
          $ref: '#/components/schemas/TagOptionId'
          description: The TagOption identifier.
        Value:
          $ref: '#/components/schemas/TagOptionValue'
          description: The updated value.
        Active:
          $ref: '#/components/schemas/TagOptionActive'
          description: The updated active state.
    AcceptLanguage:
      type: string
      maxLength: 100
    Id:
      type: string
      pattern: '^[a-zA-Z0-9_\-]*'
      minLength: 1
      maxLength: 100
    PortfolioShareType:
      type: string
      enum:
        - IMPORTED
        - AWS_SERVICECATALOG
        - AWS_ORGANIZATIONS
    AccessLevelFilterKey:
      type: string
      enum:
        - Account
        - Role
        - User
    AccessLevelFilterValue:
      type: string
    AccessLevelFilter:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/AccessLevelFilterKey'
          description: <p>The access level.</p> <ul> <li> <p> <code>Account</code> - Filter results based on the account.</p> </li> <li> <p> <code>Role</code> - Filter results based on the federated role of the specified user.</p> </li> <li> <p> <code>User</code> - Filter results based on the specified user.</p> </li> </ul>
        Value:
          $ref: '#/components/schemas/AccessLevelFilterValue'
          description: The user to which the access level applies. The only supported value is <code>Self</code>.
      description: The access level to use to filter results.
    AccessStatus:
      type: string
      enum:
        - ENABLED
        - UNDER_CHANGE
        - DISABLED
    AccountId:
      type: string
      pattern: '^[0-9]{12}$'
    AccountIds:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The tag key.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The value for this key.
      description: Information about a tag. A tag is a key-value pair. Tags are propagated to the resources created when provisioning a product.
    AddTags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 20
    String:
      type: string
    AllowedValues:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ApproximateCount:
      type: integer
    BudgetName:
      type: string
      minLength: 1
      maxLength: 100
    PrincipalARN:
      type: string
      minLength: 1
      maxLength: 1000
    PrincipalType:
      type: string
      enum:
        - IAM
    ResourceId:
      type: string
    TagOptionId:
      type: string
      minLength: 1
      maxLength: 100
    AttributeValue:
      type: string
    ServiceActionAssociations:
      type: array
      items:
        $ref: '#/components/schemas/ServiceActionAssociation'
      minItems: 1
      maxItems: 50
    FailedServiceActionAssociations:
      type: array
      items:
        $ref: '#/components/schemas/FailedServiceActionAssociation'
      maxItems: 50
    Boolean:
      type: boolean
    BudgetDetail:
      type: object
      properties:
        BudgetName:
          $ref: '#/components/schemas/BudgetName'
          description: Name of the associated budget.
      description: Information about a budget.
    Budgets:
      type: array
      items:
        $ref: '#/components/schemas/BudgetDetail'
    CausingEntity:
      type: string
    ChangeAction:
      type: string
      enum:
        - ADD
        - MODIFY
        - REMOVE
    CloudWatchDashboardName:
      type: string
    CloudWatchDashboard:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/CloudWatchDashboardName'
          description: The name of the CloudWatch dashboard.
      description: Information about a CloudWatch dashboard.
    CloudWatchDashboards:
      type: array
      items:
        $ref: '#/components/schemas/CloudWatchDashboard'
    ConstraintDescription:
      type: string
      maxLength: 2000
    ConstraintType:
      type: string
      minLength: 1
      maxLength: 1024
    ConstraintDetail:
      type: object
      properties:
        ConstraintId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the constraint.
        Type:
          $ref: '#/components/schemas/ConstraintType'
          description: <p>The type of constraint.</p> <ul> <li> <p> <code>LAUNCH</code> </p> </li> <li> <p> <code>NOTIFICATION</code> </p> </li> <li> <p>STACKSET</p> </li> <li> <p> <code>TEMPLATE</code> </p> </li> </ul>
        Description:
          $ref: '#/components/schemas/ConstraintDescription'
          description: The description of the constraint.
        Owner:
          $ref: '#/components/schemas/AccountId'
          description: The owner of the constraint.
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the product the constraint applies to. Note that a constraint applies to a specific instance of a product within a certain portfolio.
        PortfolioId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the portfolio the product resides in. The constraint applies only to the instance of the product that lives within this portfolio.
      description: Information about a constraint.
    ConstraintDetails:
      type: array
      items:
        $ref: '#/components/schemas/ConstraintDetail'
    ConstraintParameters:
      type: string
    ConstraintSummary:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ConstraintType'
          description: <p>The type of constraint.</p> <ul> <li> <p> <code>LAUNCH</code> </p> </li> <li> <p> <code>NOTIFICATION</code> </p> </li> <li> <p>STACKSET</p> </li> <li> <p> <code>TEMPLATE</code> </p> </li> </ul>
        Description:
          $ref: '#/components/schemas/ConstraintDescription'
          description: The description of the constraint.
      description: Summary information about a constraint.
    ConstraintSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ConstraintSummary'
    CopyOption:
      type: string
      enum:
        - CopyTags
    CopyOptions:
      type: array
      items:
        $ref: '#/components/schemas/CopyOption'
    ProductArn:
      type: string
      pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
      minLength: 1
      maxLength: 1224
    ProductViewName:
      type: string
      maxLength: 8191
    SourceProvisioningArtifactProperties:
      type: array
      items:
        $ref: '#/components/schemas/SourceProvisioningArtifactPropertiesMap'
    IdempotencyToken:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
      minLength: 1
      maxLength: 128
    CopyProductStatus:
      type: string
      enum:
        - SUCCEEDED
        - IN_PROGRESS
        - FAILED
    Status:
      type: string
      enum:
        - AVAILABLE
        - CREATING
        - FAILED
    PortfolioDisplayName:
      type: string
      minLength: 1
      maxLength: 100
    PortfolioDescription:
      type: string
      maxLength: 2000
    ProviderName:
      type: string
      minLength: 1
      maxLength: 50
    PortfolioDetail:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Id'
          description: The portfolio identifier.
        ARN:
          $ref: '#/components/schemas/ResourceARN'
          description: The ARN assigned to the portfolio.
        DisplayName:
          $ref: '#/components/schemas/PortfolioDisplayName'
          description: The name to use for display purposes.
        Description:
          $ref: '#/components/schemas/PortfolioDescription'
          description: The description of the portfolio.
        CreatedTime:
          $ref: '#/components/schemas/CreationTime'
          description: The UTC time stamp of the creation time.
        ProviderName:
          $ref: '#/components/schemas/ProviderName'
          description: The name of the portfolio provider.
      description: Information about a portfolio.
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
    OrganizationNode:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/OrganizationNodeType'
          description: The organization node type.
        Value:
          $ref: '#/components/schemas/OrganizationNodeValue'
          description: The identifier of the organization node.
      description: Information about the organization node.
    ProductViewOwner:
      type: string
      maxLength: 8191
    ProductViewShortDescription:
      type: string
      maxLength: 8191
    SupportDescription:
      type: string
      maxLength: 8191
    SupportEmail:
      type: string
      maxLength: 254
    SupportUrl:
      type: string
      maxLength: 2083
    ProductType:
      type: string
      enum:
        - CLOUD_FORMATION_TEMPLATE
        - MARKETPLACE
      maxLength: 8191
    ProvisioningArtifactProperties:
      type: object
      required:
        - Info
      properties:
        Name:
          $ref: '#/components/schemas/ProvisioningArtifactName'
          description: 'The name of the provisioning artifact (for example, v1 v2beta). No spaces are allowed.'
        Description:
          $ref: '#/components/schemas/ProvisioningArtifactDescription'
          description: 'The description of the provisioning artifact, including how it differs from the previous provisioning artifact.'
        Info:
          $ref: '#/components/schemas/ProvisioningArtifactInfo'
          description: '<p>Specify the template source with one of the following options, but not both. Keys accepted: [ <code>LoadTemplateFromURL</code>, <code>ImportFromPhysicalId</code> ]</p> <p>The URL of the CloudFormation template in Amazon S3. Specify the URL in JSON format as follows:</p> <p> <code>"LoadTemplateFromURL": "https://s3.amazonaws.com/cf-templates-ozkq9d3hgiq2-us-east-1/..."</code> </p> <p> <code>ImportFromPhysicalId</code>: The physical id of the resource that contains the template. Currently only supports CloudFormation stack arn. Specify the physical id in JSON format as follows: <code>ImportFromPhysicalId: “arn:aws:cloudformation:[us-east-1]:[accountId]:stack/[StackName]/[resourceId]</code> </p>'
        Type:
          $ref: '#/components/schemas/ProvisioningArtifactType'
          description: <p>The type of provisioning artifact.</p> <ul> <li> <p> <code>CLOUD_FORMATION_TEMPLATE</code> - AWS CloudFormation template</p> </li> <li> <p> <code>MARKETPLACE_AMI</code> - AWS Marketplace AMI</p> </li> <li> <p> <code>MARKETPLACE_CAR</code> - AWS Marketplace Clusters and AWS Resources</p> </li> </ul>
        DisableTemplateValidation:
          $ref: '#/components/schemas/DisableTemplateValidation'
          description: 'If set to true, AWS Service Catalog stops validating the specified provisioning artifact even if it is invalid.'
      description: Information about a provisioning artifact (also known as a version) for a product.
    ProductViewDetail:
      type: object
      properties:
        ProductViewSummary:
          $ref: '#/components/schemas/ProductViewSummary'
          description: Summary information about the product view.
        Status:
          $ref: '#/components/schemas/Status'
          description: <p>The status of the product.</p> <ul> <li> <p> <code>AVAILABLE</code> - The product is ready for use.</p> </li> <li> <p> <code>CREATING</code> - Product creation has started; the product is not ready for use.</p> </li> <li> <p> <code>FAILED</code> - An action failed.</p> </li> </ul>
        ProductARN:
          $ref: '#/components/schemas/ResourceARN'
          description: The ARN of the product.
        CreatedTime:
          $ref: '#/components/schemas/CreatedTime'
          description: The UTC time stamp of the creation time.
      description: Information about a product view.
    ProvisioningArtifactDetail:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
        Name:
          $ref: '#/components/schemas/ProvisioningArtifactName'
          description: The name of the provisioning artifact.
        Description:
          $ref: '#/components/schemas/ProvisioningArtifactName'
          description: The description of the provisioning artifact.
        Type:
          $ref: '#/components/schemas/ProvisioningArtifactType'
          description: <p>The type of provisioning artifact.</p> <ul> <li> <p> <code>CLOUD_FORMATION_TEMPLATE</code> - AWS CloudFormation template</p> </li> <li> <p> <code>MARKETPLACE_AMI</code> - AWS Marketplace AMI</p> </li> <li> <p> <code>MARKETPLACE_CAR</code> - AWS Marketplace Clusters and AWS Resources</p> </li> </ul>
        CreatedTime:
          $ref: '#/components/schemas/CreationTime'
          description: The UTC time stamp of the creation time.
        Active:
          $ref: '#/components/schemas/ProvisioningArtifactActive'
          description: Indicates whether the product version is active.
        Guidance:
          $ref: '#/components/schemas/ProvisioningArtifactGuidance'
          description: Information set by the administrator to provide guidance to end users about which provisioning artifacts to use.
      description: Information about a provisioning artifact (also known as a version) for a product.
    ProvisionedProductPlanName:
      type: string
    ProvisionedProductPlanType:
      type: string
      enum:
        - CLOUDFORMATION
    NotificationArns:
      type: array
      items:
        $ref: '#/components/schemas/NotificationArn'
      maxItems: 5
    ProvisionedProductName:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9._-]*'
      minLength: 1
      maxLength: 128
    UpdateProvisioningParameters:
      type: array
      items:
        $ref: '#/components/schemas/UpdateProvisioningParameter'
    ProvisioningArtifactInfo:
      type: object
      minProperties: 1
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/ProvisioningArtifactInfoValue'
    ServiceActionName:
      type: string
      pattern: '^[a-zA-Z0-9_\-.]*'
      minLength: 1
      maxLength: 256
    ServiceActionDefinitionType:
      type: string
      enum:
        - SSM_AUTOMATION
    ServiceActionDefinitionMap:
      type: object
      minProperties: 1
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/ServiceActionDefinitionValue'
    ServiceActionDescription:
      type: string
      maxLength: 1024
    ServiceActionDetail:
      type: object
      properties:
        ServiceActionSummary:
          $ref: '#/components/schemas/ServiceActionSummary'
          description: Summary information about the self-service action.
        Definition:
          $ref: '#/components/schemas/ServiceActionDefinitionMap'
          description: A map that defines the self-service action.
      description: An object containing detailed information about the self-service action.
    TagOptionKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 128
    TagOptionValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 256
    TagOptionDetail:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TagOptionKey'
          description: The TagOption key.
        Value:
          $ref: '#/components/schemas/TagOptionValue'
          description: The TagOption value.
        Active:
          $ref: '#/components/schemas/TagOptionActive'
          description: The TagOption active state.
        Id:
          $ref: '#/components/schemas/TagOptionId'
          description: The TagOption identifier.
        Owner:
          $ref: '#/components/schemas/Owner'
          description: The AWS account Id of the owner account that created the TagOption.
      description: Information about a TagOption.
    CreatedTime:
      type: string
      format: date-time
    CreationTime:
      type: string
      format: date-time
    DefaultValue:
      type: string
    IgnoreErrors:
      type: boolean
    StatusDetail:
      type: string
    TagOptionDetails:
      type: array
      items:
        $ref: '#/components/schemas/TagOptionDetail'
    OrganizationNodeValue:
      type: string
      pattern: '(^[0-9]{12}$)|(^arn:aws:organizations::\d{12}:organization\/o-[a-z0-9]{10,32})|(^o-[a-z0-9]{10,32}$)|(^arn:aws:organizations::\d{12}:ou\/o-[a-z0-9]{10,32}\/ou-[0-9a-z]{4,32}-[0-9a-z]{8,32}$)|(^ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$)'
    ShareStatus:
      type: string
      enum:
        - NOT_STARTED
        - IN_PROGRESS
        - COMPLETED
        - COMPLETED_WITH_ERRORS
        - ERROR
    ShareDetails:
      type: object
      properties:
        SuccessfulShares:
          $ref: '#/components/schemas/SuccessfulShares'
          description: List of accounts for whom the operation succeeded.
        ShareErrors:
          $ref: '#/components/schemas/ShareErrors'
          description: List of errors.
      description: Information about the portfolio share operation.
    DescribePortfolioShareType:
      type: string
      enum:
        - ACCOUNT
        - ORGANIZATION
        - ORGANIZATIONAL_UNIT
        - ORGANIZATION_MEMBER_ACCOUNT
    PageToken:
      type: string
      pattern: '[\u0009\u000a\u000d\u0020-\uD7FF\uE000-\uFFFD]*'
      maxLength: 2024
    PageSizeMax100:
      type: integer
      minimum: 0
      maximum: 100
    PortfolioShareDetails:
      type: array
      items:
        $ref: '#/components/schemas/PortfolioShareDetail'
    ProvisioningArtifactSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ProvisioningArtifactSummary'
    ProductViewSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Id'
          description: The product view identifier.
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        Name:
          $ref: '#/components/schemas/ProductViewName'
          description: The name of the product.
        Owner:
          $ref: '#/components/schemas/ProductViewOwner'
          description: The owner of the product. Contact the product administrator for the significance of this value.
        ShortDescription:
          $ref: '#/components/schemas/ProductViewShortDescription'
          description: Short description of the product.
        Type:
          $ref: '#/components/schemas/ProductType'
          description: 'The product type. Contact the product administrator for the significance of this value. If this value is <code>MARKETPLACE</code>, the product was created by AWS Marketplace.'
        Distributor:
          $ref: '#/components/schemas/ProductViewDistributor'
          description: The distributor of the product. Contact the product administrator for the significance of this value.
        HasDefaultPath:
          $ref: '#/components/schemas/HasDefaultPath'
          description: 'Indicates whether the product has a default path. If the product does not have a default path, call <a>ListLaunchPaths</a> to disambiguate between paths. Otherwise, <a>ListLaunchPaths</a> is not required, and the output of <a>ProductViewSummary</a> can be used directly with <a>DescribeProvisioningParameters</a>.'
        SupportEmail:
          $ref: '#/components/schemas/SupportEmail'
          description: The email contact information to obtain support for this Product.
        SupportDescription:
          $ref: '#/components/schemas/SupportDescription'
          description: The description of the support for this Product.
        SupportUrl:
          $ref: '#/components/schemas/SupportUrl'
          description: The URL information to obtain support for this Product.
      description: Summary information about a product view.
    ProvisioningArtifacts:
      type: array
      items:
        $ref: '#/components/schemas/ProvisioningArtifact'
    LaunchPaths:
      type: array
      items:
        $ref: '#/components/schemas/LaunchPath'
    ProvisionedProductDetail:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ProvisionedProductNameOrArn'
          description: The user-friendly name of the provisioned product.
        Arn:
          $ref: '#/components/schemas/ProvisionedProductNameOrArn'
          description: The ARN of the provisioned product.
        Type:
          $ref: '#/components/schemas/ProvisionedProductType'
          description: The type of provisioned product. The supported values are <code>CFN_STACK</code> and <code>CFN_STACKSET</code>.
        Id:
          $ref: '#/components/schemas/ProvisionedProductId'
          description: The identifier of the provisioned product.
        Status:
          $ref: '#/components/schemas/ProvisionedProductStatus'
          description: '<p>The current status of the provisioned product.</p> <ul> <li> <p> <code>AVAILABLE</code> - Stable state, ready to perform any operation. The most recent operation succeeded and completed.</p> </li> <li> <p> <code>UNDER_CHANGE</code> - Transitive state. Operations performed might not have valid results. Wait for an <code>AVAILABLE</code> status before performing operations.</p> </li> <li> <p> <code>TAINTED</code> - Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version.</p> </li> <li> <p> <code>ERROR</code> - An unexpected error occurred. The provisioned product exists but the stack is not running. For example, CloudFormation received a parameter value that was not valid and could not launch the stack.</p> </li> <li> <p> <code>PLAN_IN_PROGRESS</code> - Transitive state. The plan operations were performed to provision a new product, but resources have not yet been created. After reviewing the list of resources to be created, execute the plan. Wait for an <code>AVAILABLE</code> status before performing operations.</p> </li> </ul>'
        StatusMessage:
          $ref: '#/components/schemas/ProvisionedProductStatusMessage'
          description: The current status message of the provisioned product.
        CreatedTime:
          $ref: '#/components/schemas/CreatedTime'
          description: The UTC time stamp of the creation time.
        IdempotencyToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
        LastRecordId:
          $ref: '#/components/schemas/LastRequestId'
          description: The record identifier of the last request performed on this provisioned product.
        LastProvisioningRecordId:
          $ref: '#/components/schemas/Id'
          description: '<p>The record identifier of the last request performed on this provisioned product of the following types:</p> <ul> <li> <p> ProvisionedProduct </p> </li> <li> <p> UpdateProvisionedProduct </p> </li> <li> <p> ExecuteProvisionedProductPlan </p> </li> <li> <p> TerminateProvisionedProduct </p> </li> </ul>'
        LastSuccessfulProvisioningRecordId:
          $ref: '#/components/schemas/Id'
          description: '<p>The record identifier of the last successful request performed on this provisioned product of the following types:</p> <ul> <li> <p> ProvisionedProduct </p> </li> <li> <p> UpdateProvisionedProduct </p> </li> <li> <p> ExecuteProvisionedProductPlan </p> </li> <li> <p> TerminateProvisionedProduct </p> </li> </ul>'
        ProductId:
          $ref: '#/components/schemas/Id'
          description: 'The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.'
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: 'The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.'
        LaunchRoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the launch role associated with the provisioned product.
      description: Information about a provisioned product.
    PageSize:
      type: integer
      minimum: 0
      maximum: 20
    ProvisionedProductPlanDetails:
      type: object
      properties:
        CreatedTime:
          $ref: '#/components/schemas/CreatedTime'
          description: The UTC time stamp of the creation time.
        PathId:
          $ref: '#/components/schemas/Id'
          description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>.'
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        PlanName:
          $ref: '#/components/schemas/ProvisionedProductPlanName'
          description: The name of the plan.
        PlanId:
          $ref: '#/components/schemas/Id'
          description: The plan identifier.
        ProvisionProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        ProvisionProductName:
          $ref: '#/components/schemas/ProvisionedProductName'
          description: The user-friendly name of the provisioned product.
        PlanType:
          $ref: '#/components/schemas/ProvisionedProductPlanType'
          description: The plan type.
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
        Status:
          $ref: '#/components/schemas/ProvisionedProductPlanStatus'
          description: The status.
        UpdatedTime:
          $ref: '#/components/schemas/UpdatedTime'
          description: The time when the plan was last updated.
        NotificationArns:
          $ref: '#/components/schemas/NotificationArns'
          description: Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
        ProvisioningParameters:
          $ref: '#/components/schemas/UpdateProvisioningParameters'
          description: Parameters specified by the administrator that are required for provisioning the product.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: One or more tags.
        StatusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: The status message.
      description: Information about a plan.
    ResourceChanges:
      type: array
      items:
        $ref: '#/components/schemas/ResourceChange'
    ProvisioningArtifactName:
      type: string
      maxLength: 8192
    Verbose:
      type: boolean
    ProvisioningArtifactParameters:
      type: array
      items:
        $ref: '#/components/schemas/ProvisioningArtifactParameter'
    UsageInstructions:
      type: array
      items:
        $ref: '#/components/schemas/UsageInstruction'
    TagOptionSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TagOptionSummary'
    ProvisioningArtifactPreferences:
      type: object
      properties:
        StackSetAccounts:
          $ref: '#/components/schemas/StackSetAccounts'
          description: <p>One or more AWS accounts where stack instances are deployed from the stack set. These accounts can be scoped in <code>ProvisioningPreferences$StackSetAccounts</code> and <code>UpdateProvisioningPreferences$StackSetAccounts</code>.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
        StackSetRegions:
          $ref: '#/components/schemas/StackSetRegions'
          description: <p>One or more AWS Regions where stack instances are deployed from the stack set. These regions can be scoped in <code>ProvisioningPreferences$StackSetRegions</code> and <code>UpdateProvisioningPreferences$StackSetRegions</code>.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
      description: '<p>The user-defined preferences that will be applied during product provisioning, unless overridden by <code>ProvisioningPreferences</code> or <code>UpdateProvisioningPreferences</code>.</p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a> in the <i>AWS CloudFormation User Guide</i>.</p>'
    ProvisioningArtifactOutputs:
      type: array
      items:
        $ref: '#/components/schemas/ProvisioningArtifactOutput'
      maxItems: 60
    RecordDetail:
      type: object
      properties:
        RecordId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the record.
        ProvisionedProductName:
          $ref: '#/components/schemas/ProvisionedProductName'
          description: The user-friendly name of the provisioned product.
        Status:
          $ref: '#/components/schemas/RecordStatus'
          description: '<p>The status of the provisioned product.</p> <ul> <li> <p> <code>CREATED</code> - The request was created but the operation has not started.</p> </li> <li> <p> <code>IN_PROGRESS</code> - The requested operation is in progress.</p> </li> <li> <p> <code>IN_PROGRESS_IN_ERROR</code> - The provisioned product is under change but the requested operation failed and some remediation is occurring. For example, a rollback.</p> </li> <li> <p> <code>SUCCEEDED</code> - The requested operation has successfully completed.</p> </li> <li> <p> <code>FAILED</code> - The requested operation has unsuccessfully completed. Investigate using the error messages returned.</p> </li> </ul>'
        CreatedTime:
          $ref: '#/components/schemas/CreatedTime'
          description: The UTC time stamp of the creation time.
        UpdatedTime:
          $ref: '#/components/schemas/UpdatedTime'
          description: The time when the record was last updated.
        ProvisionedProductType:
          $ref: '#/components/schemas/ProvisionedProductType'
          description: The type of provisioned product. The supported values are <code>CFN_STACK</code> and <code>CFN_STACKSET</code>.
        RecordType:
          $ref: '#/components/schemas/RecordType'
          description: <p>The record type.</p> <ul> <li> <p> <code>PROVISION_PRODUCT</code> </p> </li> <li> <p> <code>UPDATE_PROVISIONED_PRODUCT</code> </p> </li> <li> <p> <code>TERMINATE_PROVISIONED_PRODUCT</code> </p> </li> </ul>
        ProvisionedProductId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioned product.
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
        PathId:
          $ref: '#/components/schemas/Id'
          description: The path identifier.
        RecordErrors:
          $ref: '#/components/schemas/RecordErrors'
          description: The errors that occurred.
        RecordTags:
          $ref: '#/components/schemas/RecordTags'
          description: One or more tags.
        LaunchRoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the launch role associated with the provisioned product.
      description: Information about a request operation.
    RecordOutputs:
      type: array
      items:
        $ref: '#/components/schemas/RecordOutput'
    ExecutionParameters:
      type: array
      items:
        $ref: '#/components/schemas/ExecutionParameter'
    Description:
      type: string
    DisableTemplateValidation:
      type: boolean
    Error:
      type: string
    ErrorCode:
      type: string
    ErrorDescription:
      type: string
    EvaluationType:
      type: string
      enum:
        - STATIC
        - DYNAMIC
    ExecutionParameterMap:
      type: object
      minProperties: 1
      maxProperties: 200
      additionalProperties:
        $ref: '#/components/schemas/ExecutionParameterValueList'
    ExecutionParameterKey:
      type: string
      minLength: 1
      maxLength: 50
    ExecutionParameterType:
      type: string
      minLength: 1
      maxLength: 1024
    ExecutionParameterValueList:
      type: array
      items:
        $ref: '#/components/schemas/ExecutionParameterValue'
      minItems: 0
      maxItems: 25
    ExecutionParameter:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ExecutionParameterKey'
          description: The name of the execution parameter.
        Type:
          $ref: '#/components/schemas/ExecutionParameterType'
          description: The execution parameter type.
        DefaultValues:
          $ref: '#/components/schemas/ExecutionParameterValueList'
          description: The default values for the execution parameter.
      description: Details of an execution parameter value that is passed to a self-service action when executed on a provisioned product.
    ExecutionParameterValue:
      type: string
      minLength: 0
      maxLength: 512
    ServiceActionAssociationErrorCode:
      type: string
      enum:
        - DUPLICATE_RESOURCE
        - INTERNAL_FAILURE
        - LIMIT_EXCEEDED
        - RESOURCE_NOT_FOUND
        - THROTTLING
    ServiceActionAssociationErrorMessage:
      type: string
      minLength: 1
      maxLength: 1024
    FailedServiceActionAssociation:
      type: object
      properties:
        ServiceActionId:
          $ref: '#/components/schemas/Id'
          description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
        ProductId:
          $ref: '#/components/schemas/Id'
          description: 'The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.'
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: 'The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.'
        ErrorCode:
          $ref: '#/components/schemas/ServiceActionAssociationErrorCode'
          description: The error code. Valid values are listed below.
        ErrorMessage:
          $ref: '#/components/schemas/ServiceActionAssociationErrorMessage'
          description: A text description of the error.
      description: 'An object containing information about the error, along with identifying information about the self-service action and its associations.'
    OutputKeys:
      type: array
      items:
        $ref: '#/components/schemas/OutputKey'
      maxItems: 60
    HasDefaultPath:
      type: boolean
    PhysicalId:
      type: string
    InstructionType:
      type: string
    InstructionValue:
      type: string
    LastRequestId:
      type: string
    PortfolioName:
      type: string
    LaunchPath:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Id'
          description: The identifier of the launch path.
        Name:
          $ref: '#/components/schemas/PortfolioName'
          description: The name of the launch path.
      description: A launch path object.
    LaunchPathSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Id'
          description: The identifier of the product path.
        ConstraintSummaries:
          $ref: '#/components/schemas/ConstraintSummaries'
          description: The constraints on the portfolio-product relationship.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: The tags associated with this product path.
        Name:
          $ref: '#/components/schemas/PortfolioName'
          description: The name of the portfolio to which the user was assigned.
      description: Summary information about a product path for a user.
    LaunchPathSummaries:
      type: array
      items:
        $ref: '#/components/schemas/LaunchPathSummary'
    PortfolioDetails:
      type: array
      items:
        $ref: '#/components/schemas/PortfolioDetail'
    OrganizationNodeType:
      type: string
      enum:
        - ORGANIZATION
        - ORGANIZATIONAL_UNIT
        - ACCOUNT
    OrganizationNodes:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationNode'
    Principals:
      type: array
      items:
        $ref: '#/components/schemas/Principal'
    ProvisionedProductPlans:
      type: array
      items:
        $ref: '#/components/schemas/ProvisionedProductPlanSummary'
    ProvisioningArtifactViews:
      type: array
      items:
        $ref: '#/components/schemas/ProvisioningArtifactView'
    ProvisioningArtifactDetails:
      type: array
      items:
        $ref: '#/components/schemas/ProvisioningArtifactDetail'
    ListRecordHistorySearchFilter:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/SearchFilterKey'
          description: <p>The filter key.</p> <ul> <li> <p> <code>product</code> - Filter results based on the specified product identifier.</p> </li> <li> <p> <code>provisionedproduct</code> - Filter results based on the provisioned product identifier.</p> </li> </ul>
        Value:
          $ref: '#/components/schemas/SearchFilterValue'
          description: The filter value.
      description: The search filter to use when listing history records.
    RecordDetails:
      type: array
      items:
        $ref: '#/components/schemas/RecordDetail'
    SearchFilterKey:
      type: string
    SearchFilterValue:
      type: string
    ResourceType:
      type: string
    ResourceDetails:
      type: array
      items:
        $ref: '#/components/schemas/ResourceDetail'
    ServiceActionSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ServiceActionSummary'
    StackInstances:
      type: array
      items:
        $ref: '#/components/schemas/StackInstance'
    TagOptionActive:
      type: boolean
    ListTagOptionsFilters:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TagOptionKey'
          description: The TagOption key.
        Value:
          $ref: '#/components/schemas/TagOptionValue'
          description: The TagOption value.
        Active:
          $ref: '#/components/schemas/TagOptionActive'
          description: The active state.
      description: Filters to use when listing TagOptions.
    LogicalResourceId:
      type: string
    Message:
      type: string
    Namespaces:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    NoEcho:
      type: boolean
    NotificationArn:
      type: string
      pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
      minLength: 1
      maxLength: 1224
    NullableBoolean:
      type: boolean
    OutputDescription:
      type: string
      maxLength: 1024
    OutputKey:
      type: string
    OutputValue:
      type: string
    Owner:
      type: string
    ParameterConstraints:
      type: object
      properties:
        AllowedValues:
          $ref: '#/components/schemas/AllowedValues'
          description: The values that the administrator has allowed for the parameter.
        AllowedPattern:
          $ref: '#/components/schemas/String'
          description: A regular expression that represents the patterns that allow for <code>String</code> types. The pattern must match the entire parameter value provided.
        ConstraintDescription:
          $ref: '#/components/schemas/String'
          description: '<p>A string that explains a constraint when the constraint is violated. For example, without a constraint description, a parameter that has an allowed pattern of <code>[A-Za-z0-9]+</code> displays the following error message when the user specifies an invalid value:</p> <p> <code>Malformed input-Parameter MyParameter must match pattern [A-Za-z0-9]+</code> </p> <p>By adding a constraint description, such as must only contain letters (uppercase and lowercase) and numbers, you can display the following customized error message:</p> <p> <code>Malformed input-Parameter MyParameter must only contain uppercase and lowercase letters and numbers.</code> </p>'
        MaxLength:
          $ref: '#/components/schemas/String'
          description: 'An integer value that determines the largest number of characters you want to allow for <code>String</code> types. '
        MinLength:
          $ref: '#/components/schemas/String'
          description: An integer value that determines the smallest number of characters you want to allow for <code>String</code> types.
        MaxValue:
          $ref: '#/components/schemas/String'
          description: A numeric value that determines the largest numeric value you want to allow for <code>Number</code> types.
        MinValue:
          $ref: '#/components/schemas/String'
          description: 'A numeric value that determines the smallest numeric value you want to allow for <code>Number</code> types. '
      description: The constraints that the administrator has put on the parameter.
    ParameterKey:
      type: string
      minLength: 1
      maxLength: 1000
    ParameterType:
      type: string
    ParameterValue:
      type: string
      maxLength: 4096
    PhysicalResourceId:
      type: string
    PlanResourceType:
      type: string
      minLength: 1
      maxLength: 256
    ResourceARN:
      type: string
      minLength: 1
      maxLength: 150
    PortfolioShareDetail:
      type: object
      properties:
        PrincipalId:
          $ref: '#/components/schemas/Id'
          description: '<p>The identifier of the recipient entity that received the portfolio share. The recipient entities can be one of the following: </p> <p>1. An external account.</p> <p>2. An organziation member account.</p> <p>3. An organzational unit (OU).</p> <p>4. The organization itself. (This shares with every account in the organization).</p>'
        Type:
          $ref: '#/components/schemas/DescribePortfolioShareType'
          description: The type of the portfolio share.
        Accepted:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether the shared portfolio is imported by the recipient account. If the recipient is in an organization node, the share is automatically imported, and the field is always set to true.'
        ShareTagOptions:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether TagOptions sharing is enabled or disabled for the portfolio share.
      description: Information about the portfolio share.
    Principal:
      type: object
      properties:
        PrincipalARN:
          $ref: '#/components/schemas/PrincipalARN'
          description: 'The ARN of the principal (IAM user, role, or group).'
        PrincipalType:
          $ref: '#/components/schemas/PrincipalType'
          description: The principal type. The supported value is <code>IAM</code>.
      description: Information about a principal.
    ProductSource:
      type: string
      enum:
        - ACCOUNT
    ProductViewAggregationType:
      type: string
    ProductViewAggregationValue:
      type: object
      properties:
        Value:
          $ref: '#/components/schemas/AttributeValue'
          description: The value of the product view aggregation.
        ApproximateCount:
          $ref: '#/components/schemas/ApproximateCount'
          description: An approximate count of the products that match the value.
      description: 'A single product view aggregation value/count pair, containing metadata about each product to which the calling user has access.'
    ProductViewAggregationValues:
      type: array
      items:
        $ref: '#/components/schemas/ProductViewAggregationValue'
    ProductViewAggregations:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ProductViewAggregationValues'
    ProductViewDetails:
      type: array
      items:
        $ref: '#/components/schemas/ProductViewDetail'
    ProductViewDistributor:
      type: string
    ProductViewFilterBy:
      type: string
      enum:
        - FullTextSearch
        - Owner
        - ProductType
        - SourceProductId
    ProductViewFilterValue:
      type: string
    ProductViewFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/ProductViewFilterValue'
    ProductViewFilters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ProductViewFilterValues'
    ProductViewSortBy:
      type: string
      enum:
        - Title
        - VersionCount
        - CreationDate
    ProductViewSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ProductViewSummary'
    PropertyKey:
      type: string
      enum:
        - OWNER
        - LAUNCH_ROLE
      minLength: 1
      maxLength: 128
    PropertyName:
      type: string
    PropertyValue:
      type: string
      minLength: 0
      maxLength: 1024
    ProvisioningParameters:
      type: array
      items:
        $ref: '#/components/schemas/ProvisioningParameter'
    ProvisioningPreferences:
      type: object
      properties:
        StackSetAccounts:
          $ref: '#/components/schemas/StackSetAccounts'
          description: '<p>One or more AWS accounts where the provisioned product will be available.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>The specified accounts should be within the list of accounts from the <code>STACKSET</code> constraint. To get the list of accounts in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p> <p>If no values are specified, the default value is all acounts from the <code>STACKSET</code> constraint.</p>'
        StackSetRegions:
          $ref: '#/components/schemas/StackSetRegions'
          description: '<p>One or more AWS Regions where the provisioned product will be available.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>The specified regions should be within the list of regions from the <code>STACKSET</code> constraint. To get the list of regions in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p> <p>If no values are specified, the default value is all regions from the <code>STACKSET</code> constraint.</p>'
        StackSetFailureToleranceCount:
          $ref: '#/components/schemas/StackSetFailureToleranceCount'
          description: '<p>The number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn''t attempt the operation in any subsequent regions.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or <code>StackSetFailureTolerancePercentage</code>, but not both.</p> <p>The default value is <code>0</code> if no value is specified.</p>'
        StackSetFailureTolerancePercentage:
          $ref: '#/components/schemas/StackSetFailureTolerancePercentage'
          description: '<p>The percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn''t attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or <code>StackSetFailureTolerancePercentage</code>, but not both.</p>'
        StackSetMaxConcurrencyCount:
          $ref: '#/components/schemas/StackSetMaxConcurrencyCount'
          description: '<p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>StackSetFailureToleranceCount</code>. <code>StackSetMaxConcurrentCount</code> is at most one more than the <code>StackSetFailureToleranceCount</code>.</p> <p>Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>'
        StackSetMaxConcurrencyPercentage:
          $ref: '#/components/schemas/StackSetMaxConcurrencyPercentage'
          description: '<p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as <code>1</code> instead.</p> <p>Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>'
      description: '<p>The user-defined preferences that will be applied when updating a provisioned product. Not all preferences are applicable to all provisioned product type</p> <p>One or more AWS accounts that will have access to the provisioned product.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>The AWS accounts specified should be within the list of accounts in the <code>STACKSET</code> constraint. To get the list of accounts in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p> <p>If no values are specified, the default value is all accounts from the <code>STACKSET</code> constraint.</p>'
    ProvisionedProductNameOrArn:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9._-]{0,127}|arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
      minLength: 1
      maxLength: 1224
    ProvisionedProductType:
      type: string
    ProvisionedProductStatus:
      type: string
      enum:
        - AVAILABLE
        - UNDER_CHANGE
        - TAINTED
        - ERROR
        - PLAN_IN_PROGRESS
    ProvisionedProductStatusMessage:
      type: string
    UserArn:
      type: string
    UserArnSession:
      type: string
    ProvisionedProductAttribute:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ProvisionedProductNameOrArn'
          description: The user-friendly name of the provisioned product.
        Arn:
          $ref: '#/components/schemas/ProvisionedProductNameOrArn'
          description: The ARN of the provisioned product.
        Type:
          $ref: '#/components/schemas/ProvisionedProductType'
          description: The type of provisioned product. The supported values are <code>CFN_STACK</code> and <code>CFN_STACKSET</code>.
        Id:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioned product.
        Status:
          $ref: '#/components/schemas/ProvisionedProductStatus'
          description: '<p>The current status of the provisioned product.</p> <ul> <li> <p> <code>AVAILABLE</code> - Stable state, ready to perform any operation. The most recent operation succeeded and completed.</p> </li> <li> <p> <code>UNDER_CHANGE</code> - Transitive state. Operations performed might not have valid results. Wait for an <code>AVAILABLE</code> status before performing operations.</p> </li> <li> <p> <code>TAINTED</code> - Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version.</p> </li> <li> <p> <code>ERROR</code> - An unexpected error occurred. The provisioned product exists but the stack is not running. For example, CloudFormation received a parameter value that was not valid and could not launch the stack.</p> </li> <li> <p> <code>PLAN_IN_PROGRESS</code> - Transitive state. The plan operations were performed to provision a new product, but resources have not yet been created. After reviewing the list of resources to be created, execute the plan. Wait for an <code>AVAILABLE</code> status before performing operations.</p> </li> </ul>'
        StatusMessage:
          $ref: '#/components/schemas/ProvisionedProductStatusMessage'
          description: The current status message of the provisioned product.
        CreatedTime:
          $ref: '#/components/schemas/CreatedTime'
          description: The UTC time stamp of the creation time.
        IdempotencyToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
        LastRecordId:
          $ref: '#/components/schemas/Id'
          description: The record identifier of the last request performed on this provisioned product.
        LastProvisioningRecordId:
          $ref: '#/components/schemas/Id'
          description: '<p>The record identifier of the last request performed on this provisioned product of the following types:</p> <ul> <li> <p> ProvisionedProduct </p> </li> <li> <p> UpdateProvisionedProduct </p> </li> <li> <p> ExecuteProvisionedProductPlan </p> </li> <li> <p> TerminateProvisionedProduct </p> </li> </ul>'
        LastSuccessfulProvisioningRecordId:
          $ref: '#/components/schemas/Id'
          description: '<p>The record identifier of the last successful request performed on this provisioned product of the following types:</p> <ul> <li> <p> ProvisionedProduct </p> </li> <li> <p> UpdateProvisionedProduct </p> </li> <li> <p> ExecuteProvisionedProductPlan </p> </li> <li> <p> TerminateProvisionedProduct </p> </li> </ul>'
        Tags:
          $ref: '#/components/schemas/Tags'
          description: One or more tags.
        PhysicalId:
          $ref: '#/components/schemas/PhysicalId'
          description: 'The assigned identifier for the resource, such as an EC2 instance ID or an S3 bucket name.'
        ProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        ProductName:
          $ref: '#/components/schemas/ProductViewName'
          description: The name of the product.
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
        ProvisioningArtifactName:
          $ref: '#/components/schemas/ProvisioningArtifactName'
          description: The name of the provisioning artifact.
        UserArn:
          $ref: '#/components/schemas/UserArn'
          description: The Amazon Resource Name (ARN) of the IAM user.
        UserArnSession:
          $ref: '#/components/schemas/UserArnSession'
          description: The ARN of the IAM user in the session. This ARN might contain a session ID.
      description: Information about a provisioned product.
    ProvisionedProductAttributes:
      type: array
      items:
        $ref: '#/components/schemas/ProvisionedProductAttribute'
    ProvisionedProductId:
      type: string
    RoleArn:
      type: string
      pattern: 'arn:[a-z0-9-\.]{1,63}:iam::[a-z0-9-\.]{0,63}:role\/.{0,1023}'
      minLength: 1
      maxLength: 1224
    ProvisionedProductDetails:
      type: array
      items:
        $ref: '#/components/schemas/ProvisionedProductDetail'
    ProvisionedProductViewFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/ProvisionedProductViewFilterValue'
    ProvisionedProductFilters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ProvisionedProductViewFilterValues'
    ProvisionedProductPlanStatus:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - CREATE_SUCCESS
        - CREATE_FAILED
        - EXECUTE_IN_PROGRESS
        - EXECUTE_SUCCESS
        - EXECUTE_FAILED
    UpdatedTime:
      type: string
      format: date-time
    StatusMessage:
      type: string
      pattern: '[\u0009\u000a\u000d\u0020-\uD7FF\uE000-\uFFFD]*'
    ProvisionedProductPlanSummary:
      type: object
      properties:
        PlanName:
          $ref: '#/components/schemas/ProvisionedProductPlanName'
          description: The name of the plan.
        PlanId:
          $ref: '#/components/schemas/Id'
          description: The plan identifier.
        ProvisionProductId:
          $ref: '#/components/schemas/Id'
          description: The product identifier.
        ProvisionProductName:
          $ref: '#/components/schemas/ProvisionedProductName'
          description: The user-friendly name of the provisioned product.
        PlanType:
          $ref: '#/components/schemas/ProvisionedProductPlanType'
          description: The plan type.
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
      description: Summary information about a plan.
    ProvisionedProductProperties:
      type: object
      minProperties: 1
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/PropertyValue'
    ProvisionedProductViewFilterBy:
      type: string
      enum:
        - SearchQuery
    ProvisionedProductViewFilterValue:
      type: string
    ProvisioningArtifactDescription:
      type: string
      maxLength: 8192
    ProvisioningArtifactCreatedTime:
      type: string
      format: date-time
    ProvisioningArtifactGuidance:
      type: string
      enum:
        - DEFAULT
        - DEPRECATED
    ProvisioningArtifact:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
        Name:
          $ref: '#/components/schemas/ProvisioningArtifactName'
          description: The name of the provisioning artifact.
        Description:
          $ref: '#/components/schemas/ProvisioningArtifactDescription'
          description: The description of the provisioning artifact.
        CreatedTime:
          $ref: '#/components/schemas/ProvisioningArtifactCreatedTime'
          description: The UTC time stamp of the creation time.
        Guidance:
          $ref: '#/components/schemas/ProvisioningArtifactGuidance'
          description: Information set by the administrator to provide guidance to end users about which provisioning artifacts to use.
      description: Information about a provisioning artifact. A provisioning artifact is also known as a product version.
    ProvisioningArtifactActive:
      type: boolean
    ProvisioningArtifactType:
      type: string
      enum:
        - CLOUD_FORMATION_TEMPLATE
        - MARKETPLACE_AMI
        - MARKETPLACE_CAR
    ProvisioningArtifactInfoValue:
      type: string
    ProvisioningArtifactInfoKey:
      type: string
    ProvisioningArtifactOutputKey:
      type: string
      pattern: '[a-zA-Z0-9]*'
      minLength: 1
      maxLength: 255
    ProvisioningArtifactOutput:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/ProvisioningArtifactOutputKey'
          description: The provisioning artifact output key.
        Description:
          $ref: '#/components/schemas/OutputDescription'
          description: Description of the provisioning artifact output key.
      description: Provisioning artifact output.
    ProvisioningArtifactParameter:
      type: object
      properties:
        ParameterKey:
          $ref: '#/components/schemas/ParameterKey'
          description: The parameter key.
        DefaultValue:
          $ref: '#/components/schemas/DefaultValue'
          description: The default value.
        ParameterType:
          $ref: '#/components/schemas/ParameterType'
          description: The parameter type.
        IsNoEcho:
          $ref: '#/components/schemas/NoEcho'
          description: 'If this value is true, the value for this parameter is obfuscated from view when the parameter is retrieved. This parameter is used to hide sensitive information.'
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the parameter.
        ParameterConstraints:
          $ref: '#/components/schemas/ParameterConstraints'
          description: Constraints that the administrator has put on a parameter.
      description: Information about a parameter used to provision a product.
    StackSetAccounts:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    StackSetRegions:
      type: array
      items:
        $ref: '#/components/schemas/Region'
    ProvisioningArtifactPropertyName:
      type: string
      enum:
        - Id
    ProvisioningArtifactPropertyValue:
      type: string
    ProvisioningArtifactSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Id'
          description: The identifier of the provisioning artifact.
        Name:
          $ref: '#/components/schemas/ProvisioningArtifactName'
          description: The name of the provisioning artifact.
        Description:
          $ref: '#/components/schemas/ProvisioningArtifactDescription'
          description: The description of the provisioning artifact.
        CreatedTime:
          $ref: '#/components/schemas/ProvisioningArtifactCreatedTime'
          description: The UTC time stamp of the creation time.
        ProvisioningArtifactMetadata:
          $ref: '#/components/schemas/ProvisioningArtifactInfo'
          description: The metadata for the provisioning artifact. This is used with AWS Marketplace products.
      description: Summary information about a provisioning artifact (also known as a version) for a product.
    ProvisioningArtifactView:
      type: object
      properties:
        ProductViewSummary:
          $ref: '#/components/schemas/ProductViewSummary'
          description: Summary information about a product view.
        ProvisioningArtifact:
          $ref: '#/components/schemas/ProvisioningArtifact'
          description: Information about a provisioning artifact. A provisioning artifact is also known as a product version.
      description: An object that contains summary information about a product view and a provisioning artifact.
    ProvisioningParameter:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/ParameterKey'
          description: The parameter key.
        Value:
          $ref: '#/components/schemas/ParameterValue'
          description: The parameter value.
      description: Information about a parameter used to provision a product.
    StackSetFailureToleranceCount:
      type: integer
      minimum: 0
    StackSetFailureTolerancePercentage:
      type: integer
      minimum: 0
      maximum: 100
    StackSetMaxConcurrencyCount:
      type: integer
      minimum: 1
    StackSetMaxConcurrencyPercentage:
      type: integer
      minimum: 1
      maximum: 100
    RecordStatus:
      type: string
      enum:
        - CREATED
        - IN_PROGRESS
        - IN_PROGRESS_IN_ERROR
        - SUCCEEDED
        - FAILED
    RecordType:
      type: string
    RecordErrors:
      type: array
      items:
        $ref: '#/components/schemas/RecordError'
    RecordTags:
      type: array
      items:
        $ref: '#/components/schemas/RecordTag'
      maxItems: 50
    RecordError:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
          description: The numeric value of the error.
        Description:
          $ref: '#/components/schemas/ErrorDescription'
          description: The description of the error.
      description: The error code and description resulting from an operation.
    RecordOutput:
      type: object
      properties:
        OutputKey:
          $ref: '#/components/schemas/OutputKey'
          description: The output key.
        OutputValue:
          $ref: '#/components/schemas/OutputValue'
          description: The output value.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the output.
      description: 'The output for the product created as the result of a request. For example, the output for a CloudFormation-backed product that creates an S3 bucket would include the S3 bucket URL.'
    RecordTagKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
      minLength: 1
      maxLength: 128
    RecordTagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
      minLength: 1
      maxLength: 256
    RecordTag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/RecordTagKey'
          description: The key for this tag.
        Value:
          $ref: '#/components/schemas/RecordTagValue'
          description: The value for this tag.
      description: 'Information about a tag, which is a key-value pair.'
    Region:
      type: string
    Replacement:
      type: string
      enum:
        - 'TRUE'
        - 'FALSE'
        - CONDITIONAL
    RequiresRecreation:
      type: string
      enum:
        - NEVER
        - CONDITIONALLY
        - ALWAYS
    ResourceAttribute:
      type: string
      enum:
        - PROPERTIES
        - METADATA
        - CREATIONPOLICY
        - UPDATEPOLICY
        - DELETIONPOLICY
        - TAGS
    Scope:
      type: array
      items:
        $ref: '#/components/schemas/ResourceAttribute'
    ResourceChangeDetails:
      type: array
      items:
        $ref: '#/components/schemas/ResourceChangeDetail'
    ResourceChange:
      type: object
      properties:
        Action:
          $ref: '#/components/schemas/ChangeAction'
          description: The change action.
        LogicalResourceId:
          $ref: '#/components/schemas/LogicalResourceId'
          description: 'The ID of the resource, as defined in the CloudFormation template.'
        PhysicalResourceId:
          $ref: '#/components/schemas/PhysicalResourceId'
          description: 'The ID of the resource, if it was already created.'
        ResourceType:
          $ref: '#/components/schemas/PlanResourceType'
          description: The type of resource.
        Replacement:
          $ref: '#/components/schemas/Replacement'
          description: 'If the change type is <code>Modify</code>, indicates whether the existing resource is deleted and replaced with a new one.'
        Scope:
          $ref: '#/components/schemas/Scope'
          description: The change scope.
        Details:
          $ref: '#/components/schemas/ResourceChangeDetails'
          description: Information about the resource changes.
      description: Information about a resource change that will occur when a plan is executed.
    ResourceTargetDefinition:
      type: object
      properties:
        Attribute:
          $ref: '#/components/schemas/ResourceAttribute'
          description: The attribute to be changed.
        Name:
          $ref: '#/components/schemas/PropertyName'
          description: 'If the attribute is <code>Properties</code>, the value is the name of the property. Otherwise, the value is null.'
        RequiresRecreation:
          $ref: '#/components/schemas/RequiresRecreation'
          description: 'If the attribute is <code>Properties</code>, indicates whether a change to this property causes the resource to be re-created.'
      description: Information about a change to a resource attribute.
    ResourceChangeDetail:
      type: object
      properties:
        Target:
          $ref: '#/components/schemas/ResourceTargetDefinition'
          description: Information about the resource attribute to be modified.
        Evaluation:
          $ref: '#/components/schemas/EvaluationType'
          description: 'For static evaluations, the value of the resource attribute will change and the new value is known. For dynamic evaluations, the value might change, and any new value will be determined when the plan is updated.'
        CausingEntity:
          $ref: '#/components/schemas/CausingEntity'
          description: The ID of the entity that caused the change.
      description: Information about a change to a resource attribute.
    ResourceDetailId:
      type: string
    ResourceDetailARN:
      type: string
    ResourceDetailName:
      type: string
    ResourceDetailDescription:
      type: string
    ResourceDetailCreatedTime:
      type: string
      format: date-time
    ResourceDetail:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ResourceDetailId'
          description: The identifier of the resource.
        ARN:
          $ref: '#/components/schemas/ResourceDetailARN'
          description: The ARN of the resource.
        Name:
          $ref: '#/components/schemas/ResourceDetailName'
          description: The name of the resource.
        Description:
          $ref: '#/components/schemas/ResourceDetailDescription'
          description: The description of the resource.
        CreatedTime:
          $ref: '#/components/schemas/ResourceDetailCreatedTime'
          description: The creation time of the resource.
      description: Information about a resource.
    RetainPhysicalResources:
      type: boolean
    SortOrder:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    SortField:
      type: string
    SearchProvisionedProductsPageSize:
      type: integer
      minimum: 0
      maximum: 100
    TotalResultsCount:
      type: integer
    ServiceActionAssociation:
      type: object
      required:
        - ServiceActionId
        - ProductId
        - ProvisioningArtifactId
      properties:
        ServiceActionId:
          $ref: '#/components/schemas/Id'
          description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
        ProductId:
          $ref: '#/components/schemas/Id'
          description: 'The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.'
        ProvisioningArtifactId:
          $ref: '#/components/schemas/Id'
          description: 'The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.'
      description: 'A self-service action association consisting of the Action ID, the Product ID, and the Provisioning Artifact ID.'
    ServiceActionDefinitionKey:
      type: string
      enum:
        - Name
        - Version
        - AssumeRole
        - Parameters
    ServiceActionDefinitionValue:
      type: string
      minLength: 1
      maxLength: 1024
    ServiceActionSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Id'
          description: The self-service action identifier.
        Name:
          $ref: '#/components/schemas/ServiceActionName'
          description: The self-service action name.
        Description:
          $ref: '#/components/schemas/ServiceActionDescription'
          description: The self-service action description.
        DefinitionType:
          $ref: '#/components/schemas/ServiceActionDefinitionType'
          description: 'The self-service action definition type. For example, <code>SSM_AUTOMATION</code>.'
      description: Detailed information about the self-service action.
    SuccessfulShares:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    ShareErrors:
      type: array
      items:
        $ref: '#/components/schemas/ShareError'
    ShareError:
      type: object
      properties:
        Accounts:
          $ref: '#/components/schemas/Namespaces'
          description: List of accounts impacted by the error.
        Message:
          $ref: '#/components/schemas/Message'
          description: Information about the error.
        Error:
          $ref: '#/components/schemas/Error'
          description: Error type that happened when processing the operation.
      description: Errors that occurred during the portfolio share operation.
    SourceProvisioningArtifactPropertiesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ProvisioningArtifactPropertyValue'
    StackInstanceStatus:
      type: string
      enum:
        - CURRENT
        - OUTDATED
        - INOPERABLE
    StackInstance:
      type: object
      properties:
        Account:
          $ref: '#/components/schemas/AccountId'
          description: The name of the AWS account that the stack instance is associated with.
        Region:
          $ref: '#/components/schemas/Region'
          description: The name of the AWS region that the stack instance is associated with.
        StackInstanceStatus:
          $ref: '#/components/schemas/StackInstanceStatus'
          description: '<p>The status of the stack instance, in terms of its synchronization with its associated stack set. </p> <ul> <li> <p> <code>INOPERABLE</code>: A <code>DeleteStackInstances</code> operation has failed and left the stack in an unstable state. Stacks in this state are excluded from further <code>UpdateStackSet</code> operations. You might need to perform a <code>DeleteStackInstances</code> operation, with <code>RetainStacks</code> set to true, to delete the stack instance, and then delete the stack manually. </p> </li> <li> <p> <code>OUTDATED</code>: The stack isn''t currently up to date with the stack set because either the associated stack failed during a <code>CreateStackSet</code> or <code>UpdateStackSet</code> operation, or the stack was part of a <code>CreateStackSet</code> or <code>UpdateStackSet</code> operation that failed or was stopped before the stack was created or updated.</p> </li> <li> <p> <code>CURRENT</code>: The stack is currently up to date with the stack set.</p> </li> </ul>'
      description: 'An AWS CloudFormation stack, in a specific account and region, that''s part of a stack set operation. A stack instance is a reference to an attempted or actual stack in a given account within a given region. A stack instance can exist without a stack—for example, if the stack couldn''t be created for some reason. A stack instance is associated with only one stack set. Each stack instance contains the ID of its associated stack set, as well as the ID of the actual stack and the stack status. '
    StackSetOperationType:
      type: string
      enum:
        - CREATE
        - UPDATE
        - DELETE
    TagKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 256
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagOptionSummary:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TagOptionKey'
          description: The TagOption key.
        Values:
          $ref: '#/components/schemas/TagOptionValues'
          description: The TagOption value.
      description: Summary information about a TagOption.
    TagOptionValues:
      type: array
      items:
        $ref: '#/components/schemas/TagOptionValue'
    UpdateProvisioningPreferences:
      type: object
      properties:
        StackSetAccounts:
          $ref: '#/components/schemas/StackSetAccounts'
          description: '<p>One or more AWS accounts that will have access to the provisioned product.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>The AWS accounts specified should be within the list of accounts in the <code>STACKSET</code> constraint. To get the list of accounts in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p> <p>If no values are specified, the default value is all accounts from the <code>STACKSET</code> constraint.</p>'
        StackSetRegions:
          $ref: '#/components/schemas/StackSetRegions'
          description: '<p>One or more AWS Regions where the provisioned product will be available.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>The specified regions should be within the list of regions from the <code>STACKSET</code> constraint. To get the list of regions in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p> <p>If no values are specified, the default value is all regions from the <code>STACKSET</code> constraint.</p>'
        StackSetFailureToleranceCount:
          $ref: '#/components/schemas/StackSetFailureToleranceCount'
          description: '<p>The number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn''t attempt the operation in any subsequent regions.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or <code>StackSetFailureTolerancePercentage</code>, but not both.</p> <p>The default value is <code>0</code> if no value is specified.</p>'
        StackSetFailureTolerancePercentage:
          $ref: '#/components/schemas/StackSetFailureTolerancePercentage'
          description: '<p>The percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn''t attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or <code>StackSetFailureTolerancePercentage</code>, but not both.</p>'
        StackSetMaxConcurrencyCount:
          $ref: '#/components/schemas/StackSetMaxConcurrencyCount'
          description: '<p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>StackSetFailureToleranceCount</code>. <code>StackSetMaxConcurrentCount</code> is at most one more than the <code>StackSetFailureToleranceCount</code>.</p> <p>Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>'
        StackSetMaxConcurrencyPercentage:
          $ref: '#/components/schemas/StackSetMaxConcurrencyPercentage'
          description: '<p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as <code>1</code> instead.</p> <p>Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>'
        StackSetOperationType:
          $ref: '#/components/schemas/StackSetOperationType'
          description: '<p>Determines what action AWS Service Catalog performs to a stack set or a stack instance represented by the provisioned product. The default value is <code>UPDATE</code> if nothing is specified.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <dl> <dt>CREATE</dt> <dd> <p>Creates a new stack instance in the stack set represented by the provisioned product. In this case, only new stack instances are created based on accounts and regions; if new ProductId or ProvisioningArtifactID are passed, they will be ignored.</p> </dd> <dt>UPDATE</dt> <dd> <p>Updates the stack set represented by the provisioned product and also its stack instances.</p> </dd> <dt>DELETE</dt> <dd> <p>Deletes a stack instance in the stack set represented by the provisioned product.</p> </dd> </dl>'
      description: The user-defined preferences that will be applied when updating a provisioned product. Not all preferences are applicable to all provisioned product types.
    UsePreviousValue:
      type: boolean
    UpdateProvisioningParameter:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/ParameterKey'
          description: The parameter key.
        Value:
          $ref: '#/components/schemas/ParameterValue'
          description: The parameter value.
        UsePreviousValue:
          $ref: '#/components/schemas/UsePreviousValue'
          description: 'If set to true, <code>Value</code> is ignored and the previous parameter value is kept.'
      description: The parameter key-value pair used to update a provisioned product.
    UsageInstruction:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/InstructionType'
          description: The usage instruction type for the value.
        Value:
          $ref: '#/components/schemas/InstructionValue'
          description: The usage instruction value for this type.
      description: Additional information provided by the administrator.
security:
  - hmac: []
