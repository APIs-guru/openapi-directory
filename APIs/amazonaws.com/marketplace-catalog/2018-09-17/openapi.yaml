openapi: 3.0.0
info:
  version: '2018-09-17'
  x-release: v4
  title: AWS Marketplace Catalog Service
  description: '<p>Catalog API actions allow you to manage your entities through list, describe, and update capabilities. An entity can be a product or an offer on AWS Marketplace. </p> <p>You can automate your entity update process by integrating the AWS Marketplace Catalog API with your AWS Marketplace product build or deployment pipelines. You can also create your own applications on top of the Catalog API to manage your products on AWS Marketplace.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: marketplace-catalog
  x-aws-signingName: aws-marketplace
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/marketplace-catalog-2018-09-17.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/marketplace/'
servers:
  - url: 'http://catalog.marketplace.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Marketplace Catalog multi-region endpoint
  - url: 'https://catalog.marketplace.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Marketplace Catalog multi-region endpoint
  - url: 'http://catalog.marketplace.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Marketplace Catalog endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://catalog.marketplace.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Marketplace Catalog endpoint for China (Beijing) and China (Ningxia)
paths:
  /CancelChangeSet#catalog&changeSetId:
    patch:
      operationId: CancelChangeSet
      description: 'Used to cancel an open change request. Must be sent before the status of the request changes to <code>APPLYING</code>, the final stage of completing your change request. You can describe a change during the 60-day request history retention period for API calls.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelChangeSetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: catalog
          in: query
          required: true
          description: 'Required. The catalog related to the request. Fixed value: <code>AWSMarketplace</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z]+$'
            minLength: 1
            maxLength: 64
        - name: changeSetId
          in: query
          required: true
          description: Required. The unique identifier of the <code>StartChangeSet</code> request that you want to cancel.
          schema:
            type: string
            pattern: '^[\w\-]+$'
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeChangeSet#catalog&changeSetId:
    get:
      operationId: DescribeChangeSet
      description: Provides information about a given change set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChangeSetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: catalog
          in: query
          required: true
          description: 'Required. The catalog related to the request. Fixed value: <code>AWSMarketplace</code> '
          schema:
            type: string
            pattern: '^[a-zA-Z]+$'
            minLength: 1
            maxLength: 64
        - name: changeSetId
          in: query
          required: true
          description: Required. The unique identifier for the <code>StartChangeSet</code> request that you want to describe the details for.
          schema:
            type: string
            pattern: '^[\w\-]+$'
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeEntity#catalog&entityId:
    get:
      operationId: DescribeEntity
      description: Returns the metadata and content of the entity.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEntityResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ResourceNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotSupportedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: catalog
          in: query
          required: true
          description: 'Required. The catalog related to the request. Fixed value: <code>AWSMarketplace</code> '
          schema:
            type: string
            pattern: '^[a-zA-Z]+$'
            minLength: 1
            maxLength: 64
        - name: entityId
          in: query
          required: true
          description: Required. The unique ID of the entity to describe.
          schema:
            type: string
            pattern: '^[\w\-]+$'
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ListChangeSets:
    post:
      operationId: ListChangeSets
      description: '<p>Returns the list of change sets owned by the account being used to make the call. You can filter this list by providing any combination of <code>entityId</code>, <code>ChangeSetName</code>, and status. If you provide more than one filter, the API operation applies a logical AND between the filters.</p> <p>You can describe a change during the 60-day request history retention period for API calls.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChangeSetsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Catalog
              properties:
                Catalog:
                  description: 'The catalog related to the request. Fixed value: <code>AWSMarketplace</code> '
                  type: string
                  pattern: '^[a-zA-Z]+$'
                  minLength: 1
                  maxLength: 64
                FilterList:
                  description: An array of filter objects.
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                  minItems: 1
                  maxItems: 8
                Sort:
                  description: 'An object that contains two attributes, <code>SortBy</code> and <code>SortOrder</code>.'
                  type: object
                  properties:
                    SortBy:
                      $ref: '#/components/schemas/SortBy'
                      description: '<p>For <code>ListEntities</code>, supported attributes include <code>LastModifiedDate</code> (default), <code>Visibility</code>, <code>EntityId</code>, and <code>Name</code>.</p> <p>For <code>ListChangeSets</code>, supported attributes include <code>StartTime</code> and <code>EndTime</code>.</p>'
                    SortOrder:
                      $ref: '#/components/schemas/SortOrder'
                      description: The sorting order. Can be <code>ASCENDING</code> or <code>DESCENDING</code>. The default value is <code>DESCENDING</code>.
                MaxResults:
                  description: 'The maximum number of results returned by a single call. This value must be provided in the next call to retrieve the next set of results. By default, this value is 20.'
                  type: integer
                  minimum: 1
                  maximum: 20
                NextToken:
                  description: The token value retrieved from a previous call to access the next page of results.
                  type: string
                  pattern: '^[\w+=.:@\-\/]$'
                  minLength: 1
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ListEntities:
    post:
      operationId: ListEntities
      description: Provides the list of entities of a given type.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntitiesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Catalog
                - EntityType
              properties:
                Catalog:
                  description: 'The catalog related to the request. Fixed value: <code>AWSMarketplace</code> '
                  type: string
                  pattern: '^[a-zA-Z]+$'
                  minLength: 1
                  maxLength: 64
                EntityType:
                  description: The type of entities to retrieve.
                  type: string
                  pattern: '^[a-zA-Z]+$'
                  minLength: 1
                  maxLength: 255
                FilterList:
                  description: 'An array of filter objects. Each filter object contains two attributes, <code>filterName</code> and <code>filterValues</code>.'
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                  minItems: 1
                  maxItems: 8
                Sort:
                  description: 'An object that contains two attributes, <code>SortBy</code> and <code>SortOrder</code>.'
                  type: object
                  properties:
                    SortBy:
                      $ref: '#/components/schemas/SortBy'
                      description: '<p>For <code>ListEntities</code>, supported attributes include <code>LastModifiedDate</code> (default), <code>Visibility</code>, <code>EntityId</code>, and <code>Name</code>.</p> <p>For <code>ListChangeSets</code>, supported attributes include <code>StartTime</code> and <code>EndTime</code>.</p>'
                    SortOrder:
                      $ref: '#/components/schemas/SortOrder'
                      description: The sorting order. Can be <code>ASCENDING</code> or <code>DESCENDING</code>. The default value is <code>DESCENDING</code>.
                NextToken:
                  description: 'The value of the next token, if it exists. Null if there are no more results.'
                  type: string
                  pattern: '^[\w+=.:@\-\/]$'
                  minLength: 1
                  maxLength: 2048
                MaxResults:
                  description: 'Specifies the upper limit of the elements on a single page. If a value isn''t provided, the default value is 20.'
                  type: integer
                  minimum: 1
                  maximum: 20
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /StartChangeSet:
    post:
      operationId: StartChangeSet
      description: '<p>This operation allows you to request changes for your entities. Within a single ChangeSet, you cannot start the same change type against the same entity multiple times. Additionally, when a ChangeSet is running, all the entities targeted by the different changes are locked until the ChangeSet has completed (either succeeded, cancelled, or failed). If you try to start a ChangeSet containing a change against an entity that is already locked, you will receive a <code>ResourceInUseException</code>.</p> <p>For example, you cannot start the ChangeSet described in the <a href="https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/API_StartChangeSet.html#API_StartChangeSet_Examples">example</a> later in this topic, because it contains two changes to execute the same change type (<code>AddRevisions</code>) against the same entity (<code>entity-id@1)</code>.</p> <p>For more information about working with change sets, see <a href="https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#working-with-change-sets"> Working with change sets</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartChangeSetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Catalog
                - ChangeSet
              properties:
                Catalog:
                  description: 'The catalog related to the request. Fixed value: <code>AWSMarketplace</code> '
                  type: string
                  pattern: '^[a-zA-Z]+$'
                  minLength: 1
                  maxLength: 64
                ChangeSet:
                  description: Array of <code>change</code> object.
                  type: array
                  items:
                    $ref: '#/components/schemas/Change'
                  minItems: 1
                  maxItems: 20
                ChangeSetName:
                  description: 'Optional case sensitive string of up to 100 ASCII characters. The change set name can be used to filter the list of change sets. '
                  type: string
                  pattern: '^[\w\s+=.:@-]+$'
                  minLength: 1
                  maxLength: 100
                ClientRequestToken:
                  description: A unique token to identify the request to ensure idempotency.
                  type: string
                  pattern: '^[\w\-]+$'
                  minLength: 1
                  maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CancelChangeSetResponse:
      type: object
      properties:
        ChangeSetId:
          $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the change set referenced in this request.
        ChangeSetArn:
          $ref: '#/components/schemas/ARN'
          description: The ARN associated with the change set referenced in this request.
    InternalServiceException: {}
    AccessDeniedException: {}
    ValidationException: {}
    ResourceNotFoundException: {}
    ResourceInUseException: {}
    ThrottlingException: {}
    DescribeChangeSetResponse:
      type: object
      properties:
        ChangeSetId:
          $ref: '#/components/schemas/ResourceId'
          description: Required. The unique identifier for the change set referenced in this request.
        ChangeSetArn:
          $ref: '#/components/schemas/ARN'
          description: The ARN associated with the unique identifier for the change set referenced in this request.
        ChangeSetName:
          $ref: '#/components/schemas/ChangeSetName'
          description: 'The optional name provided in the <code>StartChangeSet</code> request. If you do not provide a name, one is set by default.'
        StartTime:
          $ref: '#/components/schemas/DateTimeISO8601'
          description: 'The date and time, in ISO 8601 format (2018-02-27T13:45:22Z), the request started. '
        EndTime:
          $ref: '#/components/schemas/DateTimeISO8601'
          description: 'The date and time, in ISO 8601 format (2018-02-27T13:45:22Z), the request transitioned to a terminal state. The change cannot transition to a different state. Null if the request is not in a terminal state. '
        Status:
          $ref: '#/components/schemas/ChangeStatus'
          description: The status of the change request.
        FailureCode:
          $ref: '#/components/schemas/FailureCode'
          description: 'Returned if the change set is in <code>FAILED</code> status. Can be either <code>CLIENT_ERROR</code>, which means that there are issues with the request (see the <code>ErrorDetailList</code>), or <code>SERVER_FAULT</code>, which means that there is a problem in the system, and you should retry your request.'
        FailureDescription:
          $ref: '#/components/schemas/ExceptionMessageContent'
          description: 'Returned if there is a failure on the change set, but that failure is not related to any of the changes in the request.'
        ChangeSet:
          $ref: '#/components/schemas/ChangeSetDescription'
          description: An array of <code>ChangeSummary</code> objects.
    DescribeEntityResponse:
      type: object
      properties:
        EntityType:
          $ref: '#/components/schemas/EntityType'
          description: 'The named type of the entity, in the format of <code>EntityType@Version</code>.'
        EntityIdentifier:
          $ref: '#/components/schemas/Identifier'
          description: 'The identifier of the entity, in the format of <code>EntityId@RevisionId</code>.'
        EntityArn:
          $ref: '#/components/schemas/ARN'
          description: The ARN associated to the unique identifier for the change set referenced in this request.
        LastModifiedDate:
          $ref: '#/components/schemas/DateTimeISO8601'
          description: 'The last modified date of the entity, in ISO 8601 format (2018-02-27T13:45:22Z).'
        Details:
          $ref: '#/components/schemas/Json'
          description: This stringified JSON object includes the details of the entity.
    ResourceNotSupportedException: {}
    ListChangeSetsResponse:
      type: object
      properties:
        ChangeSetSummaryList:
          $ref: '#/components/schemas/ChangeSetSummaryList'
          description: ' Array of <code>ChangeSetSummaryListItem</code> objects.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The value of the next token, if it exists. Null if there are no more results.'
    Filter:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/FilterName'
          description: '<p>For <code>ListEntities</code>, the supported value for this is an <code>EntityId</code>.</p> <p>For <code>ListChangeSets</code>, the supported values are as follows:</p>'
        ValueList:
          $ref: '#/components/schemas/ValueList'
          description: '<p> <code>ListEntities</code> - This is a list of unique <code>EntityId</code>s.</p> <p> <code>ListChangeSets</code> - The supported filter names and associated <code>ValueList</code>s is as follows:</p> <ul> <li> <p> <code>ChangeSetName</code> - The supported <code>ValueList</code> is a list of non-unique <code>ChangeSetName</code>s. These are defined when you call the <code>StartChangeSet</code> action.</p> </li> <li> <p> <code>Status</code> - The supported <code>ValueList</code> is a list of statuses for all change set requests.</p> </li> <li> <p> <code>EntityId</code> - The supported <code>ValueList</code> is a list of unique <code>EntityId</code>s.</p> </li> <li> <p> <code>BeforeStartTime</code> - The supported <code>ValueList</code> is a list of all change sets that started before the filter value.</p> </li> <li> <p> <code>AfterStartTime</code> - The supported <code>ValueList</code> is a list of all change sets that started after the filter value.</p> </li> <li> <p> <code>BeforeEndTime</code> - The supported <code>ValueList</code> is a list of all change sets that ended before the filter value.</p> </li> <li> <p> <code>AfterEndTime</code> - The supported <code>ValueList</code> is a list of all change sets that ended after the filter value.</p> </li> </ul>'
      description: 'A filter object, used to optionally filter results from calls to the <code>ListEntities</code> and <code>ListChangeSets</code> actions.'
    SortBy:
      type: string
      pattern: '^[a-zA-Z]+$'
      minLength: 1
      maxLength: 255
    SortOrder:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    ListEntitiesResponse:
      type: object
      properties:
        EntitySummaryList:
          $ref: '#/components/schemas/EntitySummaryList'
          description: ' Array of <code>EntitySummary</code> object.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The value of the next token if it exists. Null if there is no more result.
    StartChangeSetResponse:
      type: object
      properties:
        ChangeSetId:
          $ref: '#/components/schemas/ResourceId'
          description: Unique identifier generated for the request.
        ChangeSetArn:
          $ref: '#/components/schemas/ARN'
          description: The ARN associated to the unique identifier generated for the request.
    Change:
      type: object
      required:
        - ChangeType
        - Entity
        - Details
      properties:
        ChangeType:
          $ref: '#/components/schemas/ChangeType'
          description: Change types are single string values that describe your intention for the change. Each change type is unique for each <code>EntityType</code> provided in the change's scope.
        Entity:
          $ref: '#/components/schemas/Entity'
          description: The entity to be changed.
        Details:
          $ref: '#/components/schemas/Json'
          description: This object contains details specific to the change type of the requested change.
        ChangeName:
          $ref: '#/components/schemas/ChangeName'
          description: Optional name for the change.
      description: 'An object that contains the <code>ChangeType</code>, <code>Details</code>, and <code>Entity</code>.'
    ServiceQuotaExceededException: {}
    ARN:
      type: string
      pattern: '^[a-zA-Z0-9:*/-]+$'
      minLength: 1
      maxLength: 2048
    Catalog:
      type: string
      pattern: '^[a-zA-Z]+$'
      minLength: 1
      maxLength: 64
    ResourceId:
      type: string
      pattern: '^[\w\-]+$'
      minLength: 1
      maxLength: 255
    CancelChangeSetRequest:
      type: object
      title: CancelChangeSetRequest
      properties: {}
    ChangeType:
      type: string
      pattern: '^[A-Z][\w]*$'
      minLength: 1
      maxLength: 255
    Entity:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: '#/components/schemas/EntityType'
          description: The type of entity.
        Identifier:
          $ref: '#/components/schemas/Identifier'
          description: The identifier for the entity.
      description: 'An entity contains data that describes your product, its supported features, and how it can be used or launched by your customer. '
    Json:
      type: string
      pattern: '^[\s]*\{[\s\S]*\}[\s]*$'
      minLength: 2
      maxLength: 16384
    ChangeName:
      type: string
      pattern: '^[a-zA-Z]$'
      minLength: 1
      maxLength: 72
    ChangeSummary:
      type: object
      properties:
        ChangeType:
          $ref: '#/components/schemas/ChangeType'
          description: The type of the change.
        Entity:
          $ref: '#/components/schemas/Entity'
          description: The entity to be changed.
        Details:
          $ref: '#/components/schemas/Json'
          description: This object contains details specific to the change type of the requested change.
        ErrorDetailList:
          $ref: '#/components/schemas/ErrorDetailList'
          description: An array of <code>ErrorDetail</code> objects associated with the change.
        ChangeName:
          $ref: '#/components/schemas/ChangeName'
          description: Optional name for the change.
      description: This object is a container for common summary information about the change. The summary doesn't contain the whole change structure.
    ChangeSetDescription:
      type: array
      items:
        $ref: '#/components/schemas/ChangeSummary'
    ChangeSetName:
      type: string
      pattern: '^[\w\s+=.:@-]+$'
      minLength: 1
      maxLength: 100
    ChangeSetSummaryListItem:
      type: object
      properties:
        ChangeSetId:
          $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for a change set.
        ChangeSetArn:
          $ref: '#/components/schemas/ARN'
          description: The ARN associated with the unique identifier for the change set referenced in this request.
        ChangeSetName:
          $ref: '#/components/schemas/ChangeSetName'
          description: The non-unique name for the change set.
        StartTime:
          $ref: '#/components/schemas/DateTimeISO8601'
          description: 'The time, in ISO 8601 format (2018-02-27T13:45:22Z), when the change set was started.'
        EndTime:
          $ref: '#/components/schemas/DateTimeISO8601'
          description: 'The time, in ISO 8601 format (2018-02-27T13:45:22Z), when the change set was finished.'
        Status:
          $ref: '#/components/schemas/ChangeStatus'
          description: The current status of the change set.
        EntityIdList:
          $ref: '#/components/schemas/ResourceIdList'
          description: This object is a list of entity IDs (string) that are a part of a change set. The entity ID list is a maximum of 20 entities. It must contain at least one entity.
        FailureCode:
          $ref: '#/components/schemas/FailureCode'
          description: 'Returned if the change set is in <code>FAILED</code> status. Can be either <code>CLIENT_ERROR</code>, which means that there are issues with the request (see the <code>ErrorDetailList</code> of <code>DescribeChangeSet</code>), or <code>SERVER_FAULT</code>, which means that there is a problem in the system, and you should retry your request.'
      description: A summary of a change set returned in a list of change sets when the <code>ListChangeSets</code> action is called.
    ChangeSetSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChangeSetSummaryListItem'
    DateTimeISO8601:
      type: string
      pattern: '^([\d]{4})\-(1[0-2]|0[1-9])\-(3[01]|0[1-9]|[12][\d])T(2[0-3]|[01][\d]):([0-5][\d]):([0-5][\d])Z$'
      minLength: 20
      maxLength: 20
    ChangeStatus:
      type: string
      enum:
        - PREPARING
        - APPLYING
        - SUCCEEDED
        - CANCELLED
        - FAILED
    ResourceIdList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceId'
    FailureCode:
      type: string
      enum:
        - CLIENT_ERROR
        - SERVER_FAULT
    ErrorDetailList:
      type: array
      items:
        $ref: '#/components/schemas/ErrorDetail'
    ClientRequestToken:
      type: string
      pattern: '^[\w\-]+$'
      minLength: 1
      maxLength: 36
    DescribeChangeSetRequest:
      type: object
      title: DescribeChangeSetRequest
      properties: {}
    ExceptionMessageContent:
      type: string
      pattern: ^(.)+$
      minLength: 1
      maxLength: 2048
    DescribeEntityRequest:
      type: object
      title: DescribeEntityRequest
      properties: {}
    EntityType:
      type: string
      pattern: '^[a-zA-Z]+$'
      minLength: 1
      maxLength: 255
    Identifier:
      type: string
      pattern: '^[\w\-@]+$'
      minLength: 1
      maxLength: 255
    EntityNameString:
      type: string
      pattern: '^\\S+[\\S\\s]*'
      minLength: 1
      maxLength: 255
    VisibilityValue:
      type: string
      pattern: '^[a-zA-Z]+$'
      minLength: 1
      maxLength: 64
    EntitySummary:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/EntityNameString'
          description: The name for the entity. This value is not unique. It is defined by the seller.
        EntityType:
          $ref: '#/components/schemas/EntityType'
          description: The type of the entity.
        EntityId:
          $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the entity.
        EntityArn:
          $ref: '#/components/schemas/ARN'
          description: The ARN associated with the unique identifier for the entity.
        LastModifiedDate:
          $ref: '#/components/schemas/DateTimeISO8601'
          description: 'The last time the entity was published, using ISO 8601 format (2018-02-27T13:45:22Z).'
        Visibility:
          $ref: '#/components/schemas/VisibilityValue'
          description: 'The visibility status of the entity to buyers. This value can be <code>Public</code> (everyone can view the entity), <code>Limited</code> (the entity is visible to limited accounts only), or <code>Restricted</code> (the entity was published and then unpublished and only existing buyers can view it). '
      description: 'This object is a container for common summary information about the entity. The summary doesn''t contain the whole entity structure, but it does contain information common across all entities.'
    EntitySummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EntitySummary'
    ErrorCodeString:
      type: string
      pattern: '^[a-zA-Z_]+$'
      minLength: 1
      maxLength: 72
    ErrorDetail:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCodeString'
          description: The error code that identifies the type of error.
        ErrorMessage:
          $ref: '#/components/schemas/ExceptionMessageContent'
          description: The message for the error.
      description: Details about the error.
    FilterName:
      type: string
      pattern: '^[a-zA-Z]+$'
      minLength: 1
      maxLength: 255
    ValueList:
      type: array
      items:
        $ref: '#/components/schemas/FilterValueContent'
      minItems: 1
      maxItems: 10
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
      minItems: 1
      maxItems: 8
    FilterValueContent:
      type: string
      pattern: ^(.)+$
      minLength: 1
      maxLength: 255
    Sort:
      type: object
      properties:
        SortBy:
          $ref: '#/components/schemas/SortBy'
          description: '<p>For <code>ListEntities</code>, supported attributes include <code>LastModifiedDate</code> (default), <code>Visibility</code>, <code>EntityId</code>, and <code>Name</code>.</p> <p>For <code>ListChangeSets</code>, supported attributes include <code>StartTime</code> and <code>EndTime</code>.</p>'
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sorting order. Can be <code>ASCENDING</code> or <code>DESCENDING</code>. The default value is <code>DESCENDING</code>.
      description: 'An object that contains two attributes, <code>SortBy</code> and <code>SortOrder</code>.'
    MaxResultInteger:
      type: integer
      minimum: 1
      maximum: 20
    NextToken:
      type: string
      pattern: '^[\w+=.:@\-\/]$'
      minLength: 1
      maxLength: 2048
    ListChangeSetsRequest:
      type: object
      required:
        - Catalog
      title: ListChangeSetsRequest
      properties:
        Catalog:
          $ref: '#/components/schemas/Catalog'
          description: 'The catalog related to the request. Fixed value: <code>AWSMarketplace</code> '
        FilterList:
          $ref: '#/components/schemas/FilterList'
          description: An array of filter objects.
        Sort:
          $ref: '#/components/schemas/Sort'
          description: 'An object that contains two attributes, <code>SortBy</code> and <code>SortOrder</code>.'
        MaxResults:
          $ref: '#/components/schemas/MaxResultInteger'
          description: 'The maximum number of results returned by a single call. This value must be provided in the next call to retrieve the next set of results. By default, this value is 20.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token value retrieved from a previous call to access the next page of results.
    ListEntitiesRequest:
      type: object
      required:
        - Catalog
        - EntityType
      title: ListEntitiesRequest
      properties:
        Catalog:
          $ref: '#/components/schemas/Catalog'
          description: 'The catalog related to the request. Fixed value: <code>AWSMarketplace</code> '
        EntityType:
          $ref: '#/components/schemas/EntityType'
          description: The type of entities to retrieve.
        FilterList:
          $ref: '#/components/schemas/FilterList'
          description: 'An array of filter objects. Each filter object contains two attributes, <code>filterName</code> and <code>filterValues</code>.'
        Sort:
          $ref: '#/components/schemas/Sort'
          description: 'An object that contains two attributes, <code>SortBy</code> and <code>SortOrder</code>.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The value of the next token, if it exists. Null if there are no more results.'
        MaxResults:
          $ref: '#/components/schemas/MaxResultInteger'
          description: 'Specifies the upper limit of the elements on a single page. If a value isn''t provided, the default value is 20.'
    RequestedChangeList:
      type: array
      items:
        $ref: '#/components/schemas/Change'
      minItems: 1
      maxItems: 20
    StartChangeSetRequest:
      type: object
      required:
        - Catalog
        - ChangeSet
      title: StartChangeSetRequest
      properties:
        Catalog:
          $ref: '#/components/schemas/Catalog'
          description: 'The catalog related to the request. Fixed value: <code>AWSMarketplace</code> '
        ChangeSet:
          $ref: '#/components/schemas/RequestedChangeList'
          description: Array of <code>change</code> object.
        ChangeSetName:
          $ref: '#/components/schemas/ChangeSetName'
          description: 'Optional case sensitive string of up to 100 ASCII characters. The change set name can be used to filter the list of change sets. '
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: A unique token to identify the request to ensure idempotency.
security:
  - hmac: []
