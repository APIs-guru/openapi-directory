openapi: 3.0.0
info:
  version: '2015-02-02'
  x-release: v4
  title: Amazon ElastiCache
  description: '<fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: elasticache
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticache-2015-02-02.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/elasticache/'
servers:
  - url: 'http://elasticache.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon ElastiCache multi-region endpoint
  - url: 'https://elasticache.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon ElastiCache multi-region endpoint
  - url: 'http://elasticache.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon ElastiCache endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://elasticache.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon ElastiCache endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#Action=AddTagsToResource:
    get:
      x-aws-operation-name: AddTagsToResource
      operationId: GET_AddTagsToResource
      description: '<p>A tag is a key-value pair where the key and value are case-sensitive. You can use tags to categorize and track all your ElastiCache resources, with the exception of global replication group. When you add or remove tags on replication groups, those actions will be replicated to all nodes in the replication group. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.ResourceLevelPermissions.html">Resource-level permissions</a>.</p> <p> For example, you can use cost-allocation tags to your ElastiCache resources, Amazon generates a cost allocation report as a comma-separated value (CSV) file with your usage and costs aggregated by your tags. You can apply tags that represent business categories (such as cost centers, application names, or owners) to organize your costs across multiple services.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Tagging.html">Using Cost Allocation Tags in Amazon ElastiCache</a> in the <i>ElastiCache User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '482':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '483':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
        '484':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '485':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '486':
          description: ReservedCacheNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
        '487':
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
        '488':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '489':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '490':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '491':
          description: InvalidARNFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: '<p>The Amazon Resource Name (ARN) of the resource to which the tags are to be added, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code> or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>. ElastiCache resources are <i>cluster</i> and <i>snapshot</i>.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Service Namespaces</a>.</p>'
          schema:
            type: string
        - name: Tags
          in: query
          required: true
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTagsToResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AddTagsToResource
      operationId: POST_AddTagsToResource
      description: '<p>A tag is a key-value pair where the key and value are case-sensitive. You can use tags to categorize and track all your ElastiCache resources, with the exception of global replication group. When you add or remove tags on replication groups, those actions will be replicated to all nodes in the replication group. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.ResourceLevelPermissions.html">Resource-level permissions</a>.</p> <p> For example, you can use cost-allocation tags to your ElastiCache resources, Amazon generates a cost allocation report as a comma-separated value (CSV) file with your usage and costs aggregated by your tags. You can apply tags that represent business categories (such as cost centers, application names, or owners) to organize your costs across multiple services.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Tagging.html">Using Cost Allocation Tags in Amazon ElastiCache</a> in the <i>ElastiCache User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '482':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '483':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
        '484':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '485':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '486':
          description: ReservedCacheNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
        '487':
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
        '488':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '489':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '490':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '491':
          description: InvalidARNFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddTagsToResourceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTagsToResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=AuthorizeCacheSecurityGroupIngress:
    get:
      x-aws-operation-name: AuthorizeCacheSecurityGroupIngress
      operationId: GET_AuthorizeCacheSecurityGroupIngress
      description: '<p>Allows network ingress to a cache security group. Applications using ElastiCache must be running on Amazon EC2, and Amazon EC2 security groups are used as the authorization mechanism.</p> <note> <p>You cannot authorize ingress from an Amazon EC2 security group in one region to an ElastiCache cluster in another region.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeCacheSecurityGroupIngressResult'
        '480':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '481':
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
        '483':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheSecurityGroupName
          in: query
          required: true
          description: The cache security group that allows network ingress.
          schema:
            type: string
        - name: EC2SecurityGroupName
          in: query
          required: true
          description: The Amazon EC2 security group to be authorized for ingress to the cache security group.
          schema:
            type: string
        - name: EC2SecurityGroupOwnerId
          in: query
          required: true
          description: The Amazon account number of the Amazon EC2 security group owner. Note that this is not the same thing as an Amazon access key ID - you must provide a valid Amazon account number for this parameter.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeCacheSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AuthorizeCacheSecurityGroupIngress
      operationId: POST_AuthorizeCacheSecurityGroupIngress
      description: '<p>Allows network ingress to a cache security group. Applications using ElastiCache must be running on Amazon EC2, and Amazon EC2 security groups are used as the authorization mechanism.</p> <note> <p>You cannot authorize ingress from an Amazon EC2 security group in one region to an ElastiCache cluster in another region.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeCacheSecurityGroupIngressResult'
        '480':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '481':
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
        '483':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AuthorizeCacheSecurityGroupIngressMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeCacheSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=BatchApplyUpdateAction:
    get:
      x-aws-operation-name: BatchApplyUpdateAction
      operationId: GET_BatchApplyUpdateAction
      description: 'Apply the service update. For more information on service updates and applying them, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/applying-updates.html">Applying Service Updates</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateActionResultsMessage'
        '480':
          description: ServiceUpdateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      parameters:
        - name: ReplicationGroupIds
          in: query
          required: false
          description: The replication group IDs
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
            maxItems: 20
        - name: CacheClusterIds
          in: query
          required: false
          description: The cache cluster IDs
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
            maxItems: 20
        - name: ServiceUpdateName
          in: query
          required: true
          description: The unique ID of the service update
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchApplyUpdateAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: BatchApplyUpdateAction
      operationId: POST_BatchApplyUpdateAction
      description: 'Apply the service update. For more information on service updates and applying them, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/applying-updates.html">Applying Service Updates</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateActionResultsMessage'
        '480':
          description: ServiceUpdateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchApplyUpdateActionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchApplyUpdateAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=BatchStopUpdateAction:
    get:
      x-aws-operation-name: BatchStopUpdateAction
      operationId: GET_BatchStopUpdateAction
      description: 'Stop the service update. For more information on service updates and stopping them, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/stopping-self-service-updates.html">Stopping Service Updates</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateActionResultsMessage'
        '480':
          description: ServiceUpdateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      parameters:
        - name: ReplicationGroupIds
          in: query
          required: false
          description: The replication group IDs
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
            maxItems: 20
        - name: CacheClusterIds
          in: query
          required: false
          description: The cache cluster IDs
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
            maxItems: 20
        - name: ServiceUpdateName
          in: query
          required: true
          description: The unique ID of the service update
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchStopUpdateAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: BatchStopUpdateAction
      operationId: POST_BatchStopUpdateAction
      description: 'Stop the service update. For more information on service updates and stopping them, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/stopping-self-service-updates.html">Stopping Service Updates</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateActionResultsMessage'
        '480':
          description: ServiceUpdateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchStopUpdateActionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchStopUpdateAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=CompleteMigration:
    get:
      x-aws-operation-name: CompleteMigration
      operationId: GET_CompleteMigration
      description: Complete the migration of data.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CompleteMigrationResponse'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: ReplicationGroupNotUnderMigrationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotUnderMigrationFault'
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: The ID of the replication group to which data is being migrated.
          schema:
            type: string
        - name: Force
          in: query
          required: false
          description: Forces the migration to stop without ensuring that data is in sync. It is recommended to use this option only to abort the migration and not recommended when application wants to continue migration to ElastiCache.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CompleteMigration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CompleteMigration
      operationId: POST_CompleteMigration
      description: Complete the migration of data.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CompleteMigrationResponse'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: ReplicationGroupNotUnderMigrationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotUnderMigrationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CompleteMigrationMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CompleteMigration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=CopySnapshot:
    get:
      x-aws-operation-name: CopySnapshot
      operationId: GET_CopySnapshot
      description: '<p>Makes a copy of an existing snapshot.</p> <note> <p>This operation is valid for Redis only.</p> </note> <important> <p>Users or groups that have permissions to use the <code>CopySnapshot</code> operation can create their own Amazon S3 buckets and copy snapshots to it. To control access to your snapshots, use an IAM policy to control who has the ability to use the <code>CopySnapshot</code> operation. For more information about using IAM to control the use of ElastiCache operations, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html">Exporting Snapshots</a> and <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.html">Authentication &amp; Access Control</a>.</p> </important> <p>You could receive the following error messages.</p> <p class="title"> <b>Error Messages</b> </p> <ul> <li> <p> <b>Error Message:</b> The S3 bucket %s is outside of the region.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s does not exist.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s is not owned by the authenticated user.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message:</b> The authenticated user does not have sufficient permissions to perform the desired activity.</p> <p> <b>Solution:</b> Contact your system administrator to get the needed permissions.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s already contains an object with key %s.</p> <p> <b>Solution:</b> Give the <code>TargetSnapshotName</code> a new and unique value. If exporting a snapshot, you could alternatively create a new Amazon S3 bucket and use this same value for <code>TargetSnapshotName</code>.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted READ permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add List and Read permissions on the bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted WRITE permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add Upload/Delete permissions on the bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted READ_ACP permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add View Permissions on the bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopySnapshotResult'
        '480':
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
        '481':
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
        '482':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '483':
          description: InvalidSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSnapshotStateFault'
        '484':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '485':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '486':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: SourceSnapshotName
          in: query
          required: true
          description: The name of an existing snapshot from which to make a copy.
          schema:
            type: string
        - name: TargetSnapshotName
          in: query
          required: true
          description: 'A name for the snapshot copy. ElastiCache does not permit overwriting a snapshot, therefore this name must be unique within its context - ElastiCache or an Amazon S3 bucket if exporting.'
          schema:
            type: string
        - name: TargetBucket
          in: query
          required: false
          description: '<p>The Amazon S3 bucket to which the snapshot is exported. This parameter is used only when exporting a snapshot for external access.</p> <p>When using this parameter to export a snapshot, be sure Amazon ElastiCache has the needed permissions to this S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the <i>Amazon ElastiCache User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html">Exporting a Snapshot</a> in the <i>Amazon ElastiCache User Guide</i>.</p>'
          schema:
            type: string
        - name: KmsKeyId
          in: query
          required: false
          description: The ID of the KMS key used to encrypt the target snapshot.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopySnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CopySnapshot
      operationId: POST_CopySnapshot
      description: '<p>Makes a copy of an existing snapshot.</p> <note> <p>This operation is valid for Redis only.</p> </note> <important> <p>Users or groups that have permissions to use the <code>CopySnapshot</code> operation can create their own Amazon S3 buckets and copy snapshots to it. To control access to your snapshots, use an IAM policy to control who has the ability to use the <code>CopySnapshot</code> operation. For more information about using IAM to control the use of ElastiCache operations, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html">Exporting Snapshots</a> and <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.html">Authentication &amp; Access Control</a>.</p> </important> <p>You could receive the following error messages.</p> <p class="title"> <b>Error Messages</b> </p> <ul> <li> <p> <b>Error Message:</b> The S3 bucket %s is outside of the region.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s does not exist.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s is not owned by the authenticated user.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message:</b> The authenticated user does not have sufficient permissions to perform the desired activity.</p> <p> <b>Solution:</b> Contact your system administrator to get the needed permissions.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s already contains an object with key %s.</p> <p> <b>Solution:</b> Give the <code>TargetSnapshotName</code> a new and unique value. If exporting a snapshot, you could alternatively create a new Amazon S3 bucket and use this same value for <code>TargetSnapshotName</code>.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted READ permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add List and Read permissions on the bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted WRITE permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add Upload/Delete permissions on the bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted READ_ACP permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add View Permissions on the bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopySnapshotResult'
        '480':
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
        '481':
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
        '482':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '483':
          description: InvalidSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSnapshotStateFault'
        '484':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '485':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '486':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CopySnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopySnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=CreateCacheCluster:
    get:
      x-aws-operation-name: CreateCacheCluster
      operationId: GET_CreateCacheCluster
      description: '<p>Creates a cluster. All nodes in the cluster run the same protocol-compliant cache engine software, either Memcached or Redis.</p> <p>This operation is not supported for Redis (cluster mode enabled) clusters.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheClusterResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: CacheClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterAlreadyExistsFault'
        '483':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '484':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '485':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
        '486':
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
        '487':
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
        '488':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '489':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '490':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '491':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '492':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '493':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheClusterId
          in: query
          required: true
          description: '<p>The node group (shard) identifier. This parameter is stored as a lowercase string.</p> <p> <b>Constraints:</b> </p> <ul> <li> <p>A name must contain from 1 to 50 alphanumeric characters or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>A name cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
          schema:
            type: string
        - name: ReplicationGroupId
          in: query
          required: false
          description: '<p>The ID of the replication group to which this cluster should belong. If this parameter is specified, the cluster is added to the specified replication group as a read replica; otherwise, the cluster is a standalone primary that is not part of any replication group.</p> <p>If the specified replication group is Multi-AZ enabled and the Availability Zone is not specified, the cluster is created in Availability Zones that provide the best spread of read replicas across Availability Zones.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>'
          schema:
            type: string
        - name: AZMode
          in: query
          required: false
          description: '<p>Specifies whether the nodes in this Memcached cluster are created in a single Availability Zone or created across multiple Availability Zones in the cluster''s region.</p> <p>This parameter is only supported for Memcached clusters.</p> <p>If the <code>AZMode</code> and <code>PreferredAvailabilityZones</code> are not specified, ElastiCache assumes <code>single-az</code> mode.</p>'
          schema:
            type: string
            enum:
              - single-az
              - cross-az
        - name: PreferredAvailabilityZone
          in: query
          required: false
          description: '<p>The EC2 Availability Zone in which the cluster is created.</p> <p>All nodes belonging to this cluster are placed in the preferred Availability Zone. If you want to create your nodes across multiple Availability Zones, use <code>PreferredAvailabilityZones</code>.</p> <p>Default: System chosen Availability Zone.</p>'
          schema:
            type: string
        - name: PreferredAvailabilityZones
          in: query
          required: false
          description: '<p>A list of the Availability Zones in which cache nodes are created. The order of the zones in the list is not important.</p> <p>This option is only supported on Memcached.</p> <note> <p>If you are creating your cluster in an Amazon VPC (recommended) you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group.</p> <p>The number of Availability Zones listed must equal the value of <code>NumCacheNodes</code>.</p> </note> <p>If you want all the nodes in the same Availability Zone, use <code>PreferredAvailabilityZone</code> instead, or repeat the Availability Zone multiple times in the list.</p> <p>Default: System chosen Availability Zones.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: PreferredAvailabilityZone
        - name: NumCacheNodes
          in: query
          required: false
          description: '<p>The initial number of cache nodes that the cluster has.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 40.</p> <p>If you need more than 40 nodes for your Memcached cluster, please fill out the ElastiCache Limit Increase Request form at <a href="http://aws.amazon.com/contact-us/elasticache-node-limit-request/">http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.</p>'
          schema:
            type: integer
        - name: CacheNodeType
          in: query
          required: false
          description: '<p>The compute and memory capacity of the nodes in the node group (shard).</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
          schema:
            type: string
        - name: Engine
          in: query
          required: false
          description: '<p>The name of the cache engine to be used for this cluster.</p> <p>Valid values for this parameter are: <code>memcached</code> | <code>redis</code> </p>'
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: '<p>The version number of the cache engine to be used for this cluster. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster or replication group and create it anew with the earlier engine version. </p>'
          schema:
            type: string
        - name: CacheParameterGroupName
          in: query
          required: false
          description: 'The name of the parameter group to associate with this cluster. If this argument is omitted, the default parameter group for the specified engine is used. You cannot use any parameter group which has <code>cluster-enabled=''yes''</code> when creating a cluster.'
          schema:
            type: string
        - name: CacheSubnetGroupName
          in: query
          required: false
          description: '<p>The name of the subnet group to be used for the cluster.</p> <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (Amazon VPC).</p> <important> <p>If you''re going to launch your cluster in an Amazon VPC, you need to create a subnet group before you start creating a cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html">Subnets and Subnet Groups</a>.</p> </important>'
          schema:
            type: string
        - name: CacheSecurityGroupNames
          in: query
          required: false
          description: <p>A list of security group names to associate with this cluster.</p> <p>Use this parameter only when you are creating a cluster outside of an Amazon Virtual Private Cloud (Amazon VPC).</p>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: CacheSecurityGroupName
        - name: SecurityGroupIds
          in: query
          required: false
          description: <p>One or more VPC security groups associated with the cluster.</p> <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (Amazon VPC).</p>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SecurityGroupId
        - name: Tags
          in: query
          required: false
          description: A list of tags to be added to this resource.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: SnapshotArns
          in: query
          required: false
          description: '<p>A single-element string list containing an Amazon Resource Name (ARN) that uniquely identifies a Redis RDB snapshot file stored in Amazon S3. The snapshot file is used to populate the node group (shard). The Amazon S3 object name in the ARN cannot contain any commas.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note> <p>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SnapshotArn
        - name: SnapshotName
          in: query
          required: false
          description: <p>The name of a Redis snapshot from which to restore data into the new node group (shard). The snapshot status changes to <code>restoring</code> while the new node group (shard) is being created.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: 'Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for <code>ddd</code> are:'
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: The port number on which each of the cache nodes accepts connections.
          schema:
            type: integer
        - name: NotificationTopicArn
          in: query
          required: false
          description: <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be the same as the cluster owner.</p> </note>
          schema:
            type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: This parameter is currently disabled.
          schema:
            type: boolean
        - name: SnapshotRetentionLimit
          in: query
          required: false
          description: '<p>The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot taken today is retained for 5 days before being deleted.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note> <p>Default: 0 (i.e., automatic backups are disabled for this cache cluster).</p>'
          schema:
            type: integer
        - name: SnapshotWindow
          in: query
          required: false
          description: '<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>'
          schema:
            type: string
        - name: AuthToken
          in: query
          required: false
          description: '<p> <b>Reserved parameter.</b> The password used to access a password protected server.</p> <p>Password constraints:</p> <ul> <li> <p>Must be only printable ASCII characters.</p> </li> <li> <p>Must be at least 16 characters and no more than 128 characters in length.</p> </li> <li> <p>The only permitted printable special characters are !, &amp;, #, $, ^, &lt;, &gt;, and -. Other printable special characters cannot be used in the AUTH token.</p> </li> </ul> <p>For more information, see <a href="http://redis.io/commands/AUTH">AUTH password</a> at http://redis.io/commands/AUTH.</p>'
          schema:
            type: string
        - name: OutpostMode
          in: query
          required: false
          description: Specifies whether the nodes in the cluster are created in a single outpost or across multiple outposts.
          schema:
            type: string
            enum:
              - single-outpost
              - cross-outpost
        - name: PreferredOutpostArn
          in: query
          required: false
          description: The outpost ARN in which the cache cluster is created.
          schema:
            type: string
        - name: PreferredOutpostArns
          in: query
          required: false
          description: The outpost ARNs in which the cache cluster is created.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: PreferredOutpostArn
        - name: LogDeliveryConfigurations
          in: query
          required: false
          description: 'Specifies the destination, format and type of the logs. '
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LogDeliveryConfigurationRequest'
                - xml:
                    name: LogDeliveryConfigurationRequest
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateCacheCluster
      operationId: POST_CreateCacheCluster
      description: '<p>Creates a cluster. All nodes in the cluster run the same protocol-compliant cache engine software, either Memcached or Redis.</p> <p>This operation is not supported for Redis (cluster mode enabled) clusters.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheClusterResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: CacheClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterAlreadyExistsFault'
        '483':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '484':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '485':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
        '486':
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
        '487':
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
        '488':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '489':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '490':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '491':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '492':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '493':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCacheClusterMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=CreateCacheParameterGroup:
    get:
      x-aws-operation-name: CreateCacheParameterGroup
      operationId: GET_CreateCacheParameterGroup
      description: '<p>Creates a new Amazon ElastiCache cache parameter group. An ElastiCache cache parameter group is a collection of parameters and their values that are applied to all of the nodes in any cluster or replication group using the CacheParameterGroup.</p> <p>A newly created CacheParameterGroup is an exact duplicate of the default parameter group for the CacheParameterGroupFamily. To customize the newly created CacheParameterGroup you can change the values of specific parameters. For more information, see:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheParameterGroup.html">ModifyCacheParameterGroup</a> in the ElastiCache API Reference.</p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.html">Parameters and Parameter Groups</a> in the ElastiCache User Guide.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheParameterGroupResult'
        '480':
          description: CacheParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupQuotaExceededFault'
        '481':
          description: CacheParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupAlreadyExistsFault'
        '482':
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
        '483':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '484':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '485':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheParameterGroupName
          in: query
          required: true
          description: A user-specified name for the cache parameter group.
          schema:
            type: string
        - name: CacheParameterGroupFamily
          in: query
          required: true
          description: '<p>The name of the cache parameter group family that the cache parameter group can be used with.</p> <p>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.x</code> | </p>'
          schema:
            type: string
        - name: Description
          in: query
          required: true
          description: A user-specified description for the cache parameter group.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateCacheParameterGroup
      operationId: POST_CreateCacheParameterGroup
      description: '<p>Creates a new Amazon ElastiCache cache parameter group. An ElastiCache cache parameter group is a collection of parameters and their values that are applied to all of the nodes in any cluster or replication group using the CacheParameterGroup.</p> <p>A newly created CacheParameterGroup is an exact duplicate of the default parameter group for the CacheParameterGroupFamily. To customize the newly created CacheParameterGroup you can change the values of specific parameters. For more information, see:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheParameterGroup.html">ModifyCacheParameterGroup</a> in the ElastiCache API Reference.</p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.html">Parameters and Parameter Groups</a> in the ElastiCache User Guide.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheParameterGroupResult'
        '480':
          description: CacheParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupQuotaExceededFault'
        '481':
          description: CacheParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupAlreadyExistsFault'
        '482':
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
        '483':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '484':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '485':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCacheParameterGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=CreateCacheSecurityGroup:
    get:
      x-aws-operation-name: CreateCacheSecurityGroup
      operationId: GET_CreateCacheSecurityGroup
      description: '<p>Creates a new cache security group. Use a cache security group to control access to one or more clusters.</p> <p>Cache security groups are only used when you are creating a cluster outside of an Amazon Virtual Private Cloud (Amazon VPC). If you are creating a cluster inside of a VPC, use a cache subnet group instead. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSubnetGroup.html">CreateCacheSubnetGroup</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheSecurityGroupResult'
        '480':
          description: CacheSecurityGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupAlreadyExistsFault'
        '481':
          description: CacheSecurityGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupQuotaExceededFault'
        '482':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '483':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheSecurityGroupName
          in: query
          required: true
          description: '<p>A name for the cache security group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Cannot be the word "Default".</p> <p>Example: <code>mysecuritygroup</code> </p>'
          schema:
            type: string
        - name: Description
          in: query
          required: true
          description: A description for the cache security group.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateCacheSecurityGroup
      operationId: POST_CreateCacheSecurityGroup
      description: '<p>Creates a new cache security group. Use a cache security group to control access to one or more clusters.</p> <p>Cache security groups are only used when you are creating a cluster outside of an Amazon Virtual Private Cloud (Amazon VPC). If you are creating a cluster inside of a VPC, use a cache subnet group instead. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSubnetGroup.html">CreateCacheSubnetGroup</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheSecurityGroupResult'
        '480':
          description: CacheSecurityGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupAlreadyExistsFault'
        '481':
          description: CacheSecurityGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupQuotaExceededFault'
        '482':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '483':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCacheSecurityGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=CreateCacheSubnetGroup:
    get:
      x-aws-operation-name: CreateCacheSubnetGroup
      operationId: GET_CreateCacheSubnetGroup
      description: <p>Creates a new cache subnet group.</p> <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (Amazon VPC).</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheSubnetGroupResult'
        '480':
          description: CacheSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupAlreadyExistsFault'
        '481':
          description: CacheSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupQuotaExceededFault'
        '482':
          description: CacheSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetQuotaExceededFault'
        '483':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '484':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '485':
          description: SubnetNotAllowedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetNotAllowedFault'
      parameters:
        - name: CacheSubnetGroupName
          in: query
          required: true
          description: '<p>A name for the cache subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code> </p>'
          schema:
            type: string
        - name: CacheSubnetGroupDescription
          in: query
          required: true
          description: A description for the cache subnet group.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: true
          description: A list of VPC subnet IDs for the cache subnet group.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SubnetIdentifier
        - name: Tags
          in: query
          required: false
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateCacheSubnetGroup
      operationId: POST_CreateCacheSubnetGroup
      description: <p>Creates a new cache subnet group.</p> <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (Amazon VPC).</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheSubnetGroupResult'
        '480':
          description: CacheSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupAlreadyExistsFault'
        '481':
          description: CacheSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupQuotaExceededFault'
        '482':
          description: CacheSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetQuotaExceededFault'
        '483':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '484':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '485':
          description: SubnetNotAllowedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetNotAllowedFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCacheSubnetGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=CreateGlobalReplicationGroup:
    get:
      x-aws-operation-name: CreateGlobalReplicationGroup
      operationId: GET_CreateGlobalReplicationGroup
      description: '<p>Global Datastore for Redis offers fully managed, fast, reliable and secure cross-region replication. Using Global Datastore for Redis, you can create cross-region read replica clusters for ElastiCache for Redis to enable low-latency reads and disaster recovery across regions. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastore.html">Replication Across Regions Using Global Datastore</a>. </p> <ul> <li> <p>The <b>GlobalReplicationGroupIdSuffix</b> is the name of the Global datastore.</p> </li> <li> <p>The <b>PrimaryReplicationGroupId</b> represents the name of the primary cluster that accepts writes and will replicate updates to the secondary cluster.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateGlobalReplicationGroupResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: GlobalReplicationGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupAlreadyExistsFault'
        '483':
          description: ServiceLinkedRoleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
        '484':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      parameters:
        - name: GlobalReplicationGroupIdSuffix
          in: query
          required: true
          description: '<p>The suffix name of a Global datastore. Amazon ElastiCache automatically applies a prefix to the Global datastore ID when it is created. Each Amazon Region has its own prefix. For instance, a Global datastore ID created in the US-West-1 region will begin with "dsdfu" along with the suffix name you provide. The suffix, combined with the auto-generated prefix, guarantees uniqueness of the Global datastore name across multiple regions. </p> <p>For a full list of Amazon Regions and their respective Global datastore iD prefixes, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastores-CLI.html">Using the Amazon CLI with Global datastores </a>.</p>'
          schema:
            type: string
        - name: GlobalReplicationGroupDescription
          in: query
          required: false
          description: Provides details of the Global datastore
          schema:
            type: string
        - name: PrimaryReplicationGroupId
          in: query
          required: true
          description: The name of the primary cluster that accepts writes and will replicate updates to the secondary cluster.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateGlobalReplicationGroup
      operationId: POST_CreateGlobalReplicationGroup
      description: '<p>Global Datastore for Redis offers fully managed, fast, reliable and secure cross-region replication. Using Global Datastore for Redis, you can create cross-region read replica clusters for ElastiCache for Redis to enable low-latency reads and disaster recovery across regions. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastore.html">Replication Across Regions Using Global Datastore</a>. </p> <ul> <li> <p>The <b>GlobalReplicationGroupIdSuffix</b> is the name of the Global datastore.</p> </li> <li> <p>The <b>PrimaryReplicationGroupId</b> represents the name of the primary cluster that accepts writes and will replicate updates to the secondary cluster.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateGlobalReplicationGroupResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: GlobalReplicationGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupAlreadyExistsFault'
        '483':
          description: ServiceLinkedRoleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
        '484':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateGlobalReplicationGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=CreateReplicationGroup:
    get:
      x-aws-operation-name: CreateReplicationGroup
      operationId: GET_CreateReplicationGroup
      description: '<p>Creates a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group.</p> <p>This API can be used to create a standalone regional replication group or a secondary replication group associated with a Global datastore.</p> <p>A Redis (cluster mode disabled) replication group is a collection of clusters, where one of the clusters is a read/write primary and the others are read-only replicas. Writes to the primary are asynchronously propagated to the replicas.</p> <p>A Redis cluster-mode enabled cluster is comprised of from 1 to 90 shards (API/CLI: node groups). Each shard has a primary node and up to 5 read-only replica nodes. The configuration can range from 90 shards and 0 replicas to 15 shards and 5 replicas, which is the maximum number or replicas allowed. </p> <p>The node or shard limit can be increased to a maximum of 500 per cluster if the Redis engine version is 5.0.6 or higher. For example, you can choose to configure a 500 node cluster that ranges between 83 shards (one primary and 5 replicas per shard) and 500 shards (single primary and no replicas). Make sure there are enough available IP addresses to accommodate the increase. Common pitfalls include the subnets in the subnet group have too small a CIDR range or the subnets are shared and heavily used by other clusters. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.Creating.html">Creating a Subnet Group</a>. For versions below 5.0.6, the limit is 250 per cluster.</p> <p>To request a limit increase, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">Amazon Service Limits</a> and choose the limit type <b>Nodes per cluster per instance type</b>. </p> <p>When a Redis (cluster mode disabled) replication group has been successfully created, you can add one or more read replicas to it, up to a total of 5 read replicas. If you need to increase or decrease the number of node groups (console: shards), you can avail yourself of ElastiCache for Redis'' scaling. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Scaling.html">Scaling ElastiCache for Redis Clusters</a> in the <i>ElastiCache User Guide</i>.</p> <note> <p>This operation is valid for Redis only.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateReplicationGroupResult'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '482':
          description: ReplicationGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupAlreadyExistsFault'
        '483':
          description: InvalidUserGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
        '484':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '485':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '486':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '487':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
        '488':
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
        '489':
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
        '490':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '491':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '492':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '493':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '494':
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
        '495':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '496':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '497':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '498':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: '<p>The replication group identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>A name must contain from 1 to 40 alphanumeric characters or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>A name cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
          schema:
            type: string
        - name: ReplicationGroupDescription
          in: query
          required: true
          description: A user-created description for the replication group.
          schema:
            type: string
        - name: GlobalReplicationGroupId
          in: query
          required: false
          description: The name of the Global datastore
          schema:
            type: string
        - name: PrimaryClusterId
          in: query
          required: false
          description: '<p>The identifier of the cluster that serves as the primary for this replication group. This cluster must already exist and have a status of <code>available</code>.</p> <p>This parameter is not required if <code>NumCacheClusters</code>, <code>NumNodeGroups</code>, or <code>ReplicasPerNodeGroup</code> is specified.</p>'
          schema:
            type: string
        - name: AutomaticFailoverEnabled
          in: query
          required: false
          description: '<p>Specifies whether a read-only replica is automatically promoted to read/write primary if the existing primary fails.</p> <p> <code>AutomaticFailoverEnabled</code> must be enabled for Redis (cluster mode enabled) replication groups.</p> <p>Default: false</p>'
          schema:
            type: boolean
        - name: MultiAZEnabled
          in: query
          required: false
          description: 'A flag indicating if you have Multi-AZ enabled to enhance fault tolerance. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html">Minimizing Downtime: Multi-AZ</a>.'
          schema:
            type: boolean
        - name: NumCacheClusters
          in: query
          required: false
          description: '<p>The number of clusters this replication group initially has.</p> <p>This parameter is not used if there is more than one node group (shard). You should use <code>ReplicasPerNodeGroup</code> instead.</p> <p>If <code>AutomaticFailoverEnabled</code> is <code>true</code>, the value of this parameter must be at least 2. If <code>AutomaticFailoverEnabled</code> is <code>false</code> you can omit this parameter (it will default to 1), or you can explicitly set it to a value between 2 and 6.</p> <p>The maximum permitted value for <code>NumCacheClusters</code> is 6 (1 primary plus 5 replicas).</p>'
          schema:
            type: integer
        - name: PreferredCacheClusterAZs
          in: query
          required: false
          description: '<p>A list of EC2 Availability Zones in which the replication group''s clusters are created. The order of the Availability Zones in the list is the order in which clusters are allocated. The primary cluster is created in the first AZ in the list.</p> <p>This parameter is not used if there is more than one node group (shard). You should use <code>NodeGroupConfiguration</code> instead.</p> <note> <p>If you are creating your replication group in an Amazon VPC (recommended), you can only locate clusters in Availability Zones associated with the subnets in the selected subnet group.</p> <p>The number of Availability Zones listed must equal the value of <code>NumCacheClusters</code>.</p> </note> <p>Default: system chosen Availability Zones.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: AvailabilityZone
        - name: NumNodeGroups
          in: query
          required: false
          description: '<p>An optional parameter that specifies the number of node groups (shards) for this Redis (cluster mode enabled) replication group. For Redis (cluster mode disabled) either omit this parameter or set it to 1.</p> <p>Default: 1</p>'
          schema:
            type: integer
        - name: ReplicasPerNodeGroup
          in: query
          required: false
          description: An optional parameter that specifies the number of replica nodes in each node group (shard). Valid values are 0 to 5.
          schema:
            type: integer
        - name: NodeGroupConfiguration
          in: query
          required: false
          description: '<p>A list of node group (shard) configuration options. Each node group (shard) configuration has the following members: <code>PrimaryAvailabilityZone</code>, <code>ReplicaAvailabilityZones</code>, <code>ReplicaCount</code>, and <code>Slots</code>.</p> <p>If you''re creating a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group, you can use this parameter to individually configure each node group (shard), or you can omit this parameter. However, it is required when seeding a Redis (cluster mode enabled) cluster from a S3 rdb file. You must configure each node group (shard) using this parameter because you must specify the slots for each node group.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NodeGroupConfiguration'
                - xml:
                    name: NodeGroupConfiguration
        - name: CacheNodeType
          in: query
          required: false
          description: '<p>The compute and memory capacity of the nodes in the node group (shard).</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
          schema:
            type: string
        - name: Engine
          in: query
          required: false
          description: The name of the cache engine to be used for the clusters in this replication group. Must be Redis.
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: '<p>The version number of the cache engine to be used for the clusters in this replication group. To view the supported cache engine versions, use the <code>DescribeCacheEngineVersions</code> operation.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting a Cache Engine and Version</a>) in the <i>ElastiCache User Guide</i>, but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster or replication group and create it anew with the earlier engine version. </p>'
          schema:
            type: string
        - name: CacheParameterGroupName
          in: query
          required: false
          description: '<p>The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used.</p> <p>If you are running Redis version 3.2.4 or later, only one node group (shard), and want to use a default parameter group, we recommend that you specify the parameter group by name. </p> <ul> <li> <p>To create a Redis (cluster mode disabled) replication group, use <code>CacheParameterGroupName=default.redis3.2</code>.</p> </li> <li> <p>To create a Redis (cluster mode enabled) replication group, use <code>CacheParameterGroupName=default.redis3.2.cluster.on</code>.</p> </li> </ul>'
          schema:
            type: string
        - name: CacheSubnetGroupName
          in: query
          required: false
          description: '<p>The name of the cache subnet group to be used for the replication group.</p> <important> <p>If you''re going to launch your cluster in an Amazon VPC, you need to create a subnet group before you start creating a cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html">Subnets and Subnet Groups</a>.</p> </important>'
          schema:
            type: string
        - name: CacheSecurityGroupNames
          in: query
          required: false
          description: A list of cache security group names to associate with this replication group.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: CacheSecurityGroupName
        - name: SecurityGroupIds
          in: query
          required: false
          description: <p>One or more Amazon VPC security groups associated with this replication group.</p> <p>Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud (Amazon VPC).</p>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SecurityGroupId
        - name: Tags
          in: query
          required: false
          description: 'A list of tags to be added to this resource. Tags are comma-separated key,value pairs (e.g. Key=<code>myKey</code>, Value=<code>myKeyValue</code>. You can include multiple tags as shown following: Key=<code>myKey</code>, Value=<code>myKeyValue</code> Key=<code>mySecondKey</code>, Value=<code>mySecondKeyValue</code>. Tags on replication groups will be replicated to all nodes.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: SnapshotArns
          in: query
          required: false
          description: '<p>A list of Amazon Resource Names (ARN) that uniquely identify the Redis RDB snapshot files stored in Amazon S3. The snapshot files are used to populate the new replication group. The Amazon S3 object name in the ARN cannot contain any commas. The new replication group will have the number of node groups (console: shards) specified by the parameter <i>NumNodeGroups</i> or the number of node groups configured by <i>NodeGroupConfiguration</i> regardless of the number of ARNs specified here.</p> <p>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SnapshotArn
        - name: SnapshotName
          in: query
          required: false
          description: The name of a snapshot from which to restore data into the new replication group. The snapshot status changes to <code>restoring</code> while the new replication group is being created.
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: '<p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for <code>ddd</code> are:</p> <p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>'
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: The port number on which each member of the replication group accepts connections.
          schema:
            type: integer
        - name: NotificationTopicArn
          in: query
          required: false
          description: <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be the same as the cluster owner.</p> </note>
          schema:
            type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: This parameter is currently disabled.
          schema:
            type: boolean
        - name: SnapshotRetentionLimit
          in: query
          required: false
          description: '<p>The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <p>Default: 0 (i.e., automatic backups are disabled for this cluster).</p>'
          schema:
            type: integer
        - name: SnapshotWindow
          in: query
          required: false
          description: '<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p>'
          schema:
            type: string
        - name: AuthToken
          in: query
          required: false
          description: '<p> <b>Reserved parameter.</b> The password used to access a password protected server.</p> <p> <code>AuthToken</code> can be specified only on replication groups where <code>TransitEncryptionEnabled</code> is <code>true</code>.</p> <important> <p>For HIPAA compliance, you must specify <code>TransitEncryptionEnabled</code> as <code>true</code>, an <code>AuthToken</code>, and a <code>CacheSubnetGroup</code>.</p> </important> <p>Password constraints:</p> <ul> <li> <p>Must be only printable ASCII characters.</p> </li> <li> <p>Must be at least 16 characters and no more than 128 characters in length.</p> </li> <li> <p>The only permitted printable special characters are !, &amp;, #, $, ^, &lt;, &gt;, and -. Other printable special characters cannot be used in the AUTH token.</p> </li> </ul> <p>For more information, see <a href="http://redis.io/commands/AUTH">AUTH password</a> at http://redis.io/commands/AUTH.</p>'
          schema:
            type: string
        - name: TransitEncryptionEnabled
          in: query
          required: false
          description: '<p>A flag that enables in-transit encryption when set to <code>true</code>.</p> <p>You cannot modify the value of <code>TransitEncryptionEnabled</code> after the cluster is created. To enable in-transit encryption on a cluster you must set <code>TransitEncryptionEnabled</code> to <code>true</code> when you create a cluster.</p> <p>This parameter is valid only if the <code>Engine</code> parameter is <code>redis</code>, the <code>EngineVersion</code> parameter is <code>3.2.6</code>, <code>4.x</code> or later, and the cluster is being created in an Amazon VPC.</p> <p>If you enable in-transit encryption, you must also specify a value for <code>CacheSubnetGroup</code>.</p> <p> <b>Required:</b> Only available when creating a replication group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code> or later.</p> <p>Default: <code>false</code> </p> <important> <p>For HIPAA compliance, you must specify <code>TransitEncryptionEnabled</code> as <code>true</code>, an <code>AuthToken</code>, and a <code>CacheSubnetGroup</code>.</p> </important>'
          schema:
            type: boolean
        - name: AtRestEncryptionEnabled
          in: query
          required: false
          description: '<p>A flag that enables encryption at rest when set to <code>true</code>.</p> <p>You cannot modify the value of <code>AtRestEncryptionEnabled</code> after the replication group is created. To enable encryption at rest on a replication group you must set <code>AtRestEncryptionEnabled</code> to <code>true</code> when you create the replication group. </p> <p> <b>Required:</b> Only available when creating a replication group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code> or later.</p> <p>Default: <code>false</code> </p>'
          schema:
            type: boolean
        - name: KmsKeyId
          in: query
          required: false
          description: The ID of the KMS key used to encrypt the disk in the cluster.
          schema:
            type: string
        - name: UserGroupIds
          in: query
          required: false
          description: The user group to associate with the replication group.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/UserGroupId'
            minItems: 1
        - name: LogDeliveryConfigurations
          in: query
          required: false
          description: 'Specifies the destination, format and type of the logs.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LogDeliveryConfigurationRequest'
                - xml:
                    name: LogDeliveryConfigurationRequest
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateReplicationGroup
      operationId: POST_CreateReplicationGroup
      description: '<p>Creates a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group.</p> <p>This API can be used to create a standalone regional replication group or a secondary replication group associated with a Global datastore.</p> <p>A Redis (cluster mode disabled) replication group is a collection of clusters, where one of the clusters is a read/write primary and the others are read-only replicas. Writes to the primary are asynchronously propagated to the replicas.</p> <p>A Redis cluster-mode enabled cluster is comprised of from 1 to 90 shards (API/CLI: node groups). Each shard has a primary node and up to 5 read-only replica nodes. The configuration can range from 90 shards and 0 replicas to 15 shards and 5 replicas, which is the maximum number or replicas allowed. </p> <p>The node or shard limit can be increased to a maximum of 500 per cluster if the Redis engine version is 5.0.6 or higher. For example, you can choose to configure a 500 node cluster that ranges between 83 shards (one primary and 5 replicas per shard) and 500 shards (single primary and no replicas). Make sure there are enough available IP addresses to accommodate the increase. Common pitfalls include the subnets in the subnet group have too small a CIDR range or the subnets are shared and heavily used by other clusters. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.Creating.html">Creating a Subnet Group</a>. For versions below 5.0.6, the limit is 250 per cluster.</p> <p>To request a limit increase, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">Amazon Service Limits</a> and choose the limit type <b>Nodes per cluster per instance type</b>. </p> <p>When a Redis (cluster mode disabled) replication group has been successfully created, you can add one or more read replicas to it, up to a total of 5 read replicas. If you need to increase or decrease the number of node groups (console: shards), you can avail yourself of ElastiCache for Redis'' scaling. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Scaling.html">Scaling ElastiCache for Redis Clusters</a> in the <i>ElastiCache User Guide</i>.</p> <note> <p>This operation is valid for Redis only.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateReplicationGroupResult'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '482':
          description: ReplicationGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupAlreadyExistsFault'
        '483':
          description: InvalidUserGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
        '484':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '485':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '486':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '487':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
        '488':
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
        '489':
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
        '490':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '491':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '492':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '493':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '494':
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
        '495':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '496':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '497':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '498':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateReplicationGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=CreateSnapshot:
    get:
      x-aws-operation-name: CreateSnapshot
      operationId: GET_CreateSnapshot
      description: <p>Creates a copy of an entire cluster or replication group at a specific moment in time.</p> <note> <p>This operation is valid for Redis only.</p> </note>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSnapshotResult'
        '480':
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
        '481':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '482':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '483':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '484':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '485':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '486':
          description: SnapshotFeatureNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotFeatureNotSupportedFault'
        '487':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '488':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '489':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      parameters:
        - name: ReplicationGroupId
          in: query
          required: false
          description: The identifier of an existing replication group. The snapshot is created from this replication group.
          schema:
            type: string
        - name: CacheClusterId
          in: query
          required: false
          description: The identifier of an existing cluster. The snapshot is created from this cluster.
          schema:
            type: string
        - name: SnapshotName
          in: query
          required: true
          description: A name for the snapshot being created.
          schema:
            type: string
        - name: KmsKeyId
          in: query
          required: false
          description: The ID of the KMS key used to encrypt the snapshot.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateSnapshot
      operationId: POST_CreateSnapshot
      description: <p>Creates a copy of an entire cluster or replication group at a specific moment in time.</p> <note> <p>This operation is valid for Redis only.</p> </note>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSnapshotResult'
        '480':
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
        '481':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '482':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '483':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '484':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '485':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '486':
          description: SnapshotFeatureNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotFeatureNotSupportedFault'
        '487':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '488':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '489':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=CreateUser:
    get:
      x-aws-operation-name: CreateUser
      operationId: GET_CreateUser
      description: 'For Redis engine version 6.x onwards: Creates a Redis user. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html">Using Role Based Access Control (RBAC)</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
        '480':
          description: UserAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserAlreadyExistsFault'
        '481':
          description: UserQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserQuotaExceededFault'
        '482':
          description: DuplicateUserNameFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
        '483':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '485':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
      parameters:
        - name: UserId
          in: query
          required: true
          description: The ID of the user.
          schema:
            type: string
            pattern: '[a-zA-Z][a-zA-Z0-9\-]*'
            minLength: 1
        - name: UserName
          in: query
          required: true
          description: The username of the user.
          schema:
            type: string
            minLength: 1
        - name: Engine
          in: query
          required: true
          description: 'The current supported value is Redis. '
          schema:
            type: string
            pattern: '[a-zA-Z]*'
        - name: Passwords
          in: query
          required: false
          description: Passwords used for this user. You can create up to two passwords for each user.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
            minItems: 1
        - name: AccessString
          in: query
          required: true
          description: Access permissions string used for this user.
          schema:
            type: string
            pattern: .*\S.*
        - name: NoPasswordRequired
          in: query
          required: false
          description: Indicates a password is not required for this user.
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateUser
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateUser
      operationId: POST_CreateUser
      description: 'For Redis engine version 6.x onwards: Creates a Redis user. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html">Using Role Based Access Control (RBAC)</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
        '480':
          description: UserAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserAlreadyExistsFault'
        '481':
          description: UserQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserQuotaExceededFault'
        '482':
          description: DuplicateUserNameFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
        '483':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '485':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateUserMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateUser
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=CreateUserGroup:
    get:
      x-aws-operation-name: CreateUserGroup
      operationId: GET_CreateUserGroup
      description: 'For Redis engine version 6.x onwards: Creates a Redis user group. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html">Using Role Based Access Control (RBAC)</a> '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
        '480':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '481':
          description: DuplicateUserNameFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
        '482':
          description: UserGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupAlreadyExistsFault'
        '483':
          description: DefaultUserRequired
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultUserRequired'
        '484':
          description: UserGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupQuotaExceededFault'
        '485':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '486':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
      parameters:
        - name: UserGroupId
          in: query
          required: true
          description: The ID of the user group.
          schema:
            type: string
        - name: Engine
          in: query
          required: true
          description: 'The current supported value is Redis. '
          schema:
            type: string
            pattern: '[a-zA-Z]*'
        - name: UserIds
          in: query
          required: false
          description: The list of user IDs that belong to the user group.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/UserId'
            minItems: 1
        - name: Tags
          in: query
          required: false
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateUserGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateUserGroup
      operationId: POST_CreateUserGroup
      description: 'For Redis engine version 6.x onwards: Creates a Redis user group. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html">Using Role Based Access Control (RBAC)</a> '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
        '480':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '481':
          description: DuplicateUserNameFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
        '482':
          description: UserGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupAlreadyExistsFault'
        '483':
          description: DefaultUserRequired
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultUserRequired'
        '484':
          description: UserGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupQuotaExceededFault'
        '485':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '486':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateUserGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateUserGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DecreaseNodeGroupsInGlobalReplicationGroup:
    get:
      x-aws-operation-name: DecreaseNodeGroupsInGlobalReplicationGroup
      operationId: GET_DecreaseNodeGroupsInGlobalReplicationGroup
      description: Decreases the number of node groups in a Global datastore
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DecreaseNodeGroupsInGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: GlobalReplicationGroupId
          in: query
          required: true
          description: The name of the Global datastore
          schema:
            type: string
        - name: NodeGroupCount
          in: query
          required: true
          description: The number of node groups (shards) that results from the modification of the shard configuration
          schema:
            type: integer
        - name: GlobalNodeGroupsToRemove
          in: query
          required: false
          description: 'If the value of NodeGroupCount is less than the current number of node groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain is required. GlobalNodeGroupsToRemove is a list of NodeGroupIds to remove from the cluster. ElastiCache for Redis will attempt to remove all node groups listed by GlobalNodeGroupsToRemove from the cluster. '
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: GlobalNodeGroupId
        - name: GlobalNodeGroupsToRetain
          in: query
          required: false
          description: 'If the value of NodeGroupCount is less than the current number of node groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain is required. GlobalNodeGroupsToRetain is a list of NodeGroupIds to retain from the cluster. ElastiCache for Redis will attempt to retain all node groups listed by GlobalNodeGroupsToRetain from the cluster. '
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: GlobalNodeGroupId
        - name: ApplyImmediately
          in: query
          required: true
          description: 'Indicates that the shard reconfiguration process begins immediately. At present, the only permitted value for this parameter is true. '
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DecreaseNodeGroupsInGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DecreaseNodeGroupsInGlobalReplicationGroup
      operationId: POST_DecreaseNodeGroupsInGlobalReplicationGroup
      description: Decreases the number of node groups in a Global datastore
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DecreaseNodeGroupsInGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DecreaseNodeGroupsInGlobalReplicationGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DecreaseNodeGroupsInGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DecreaseReplicaCount:
    get:
      x-aws-operation-name: DecreaseReplicaCount
      operationId: GET_DecreaseReplicaCount
      description: Dynamically decreases the number of replicas in a Redis (cluster mode disabled) replication group or the number of replica nodes in one or more node groups (shards) of a Redis (cluster mode enabled) replication group. This operation is performed with no cluster down time.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DecreaseReplicaCountResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '483':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '484':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '485':
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
        '486':
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
        '487':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '488':
          description: ServiceLinkedRoleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
        '489':
          description: NoOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoOperationFault'
        '490':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '491':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: The id of the replication group from which you want to remove replica nodes.
          schema:
            type: string
        - name: NewReplicaCount
          in: query
          required: false
          description: '<p>The number of read replica nodes you want at the completion of this operation. For Redis (cluster mode disabled) replication groups, this is the number of replica nodes in the replication group. For Redis (cluster mode enabled) replication groups, this is the number of replica nodes in each of the replication group''s node groups.</p> <p>The minimum number of replicas in a shard or replication group is:</p> <ul> <li> <p>Redis (cluster mode disabled)</p> <ul> <li> <p>If Multi-AZ is enabled: 1</p> </li> <li> <p>If Multi-AZ is not enabled: 0</p> </li> </ul> </li> <li> <p>Redis (cluster mode enabled): 0 (though you will not be able to failover to a replica if your primary node fails)</p> </li> </ul>'
          schema:
            type: integer
        - name: ReplicaConfiguration
          in: query
          required: false
          description: 'A list of <code>ConfigureShard</code> objects that can be used to configure each shard in a Redis (cluster mode enabled) replication group. The <code>ConfigureShard</code> has three members: <code>NewReplicaCount</code>, <code>NodeGroupId</code>, and <code>PreferredAvailabilityZones</code>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ConfigureShard'
                - xml:
                    name: ConfigureShard
        - name: ReplicasToRemove
          in: query
          required: false
          description: A list of the node ids to remove from the replication group or node group (shard).
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
        - name: ApplyImmediately
          in: query
          required: true
          description: 'If <code>True</code>, the number of replica nodes is decreased immediately. <code>ApplyImmediately=False</code> is not currently supported.'
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DecreaseReplicaCount
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DecreaseReplicaCount
      operationId: POST_DecreaseReplicaCount
      description: Dynamically decreases the number of replicas in a Redis (cluster mode disabled) replication group or the number of replica nodes in one or more node groups (shards) of a Redis (cluster mode enabled) replication group. This operation is performed with no cluster down time.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DecreaseReplicaCountResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '483':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '484':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '485':
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
        '486':
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
        '487':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '488':
          description: ServiceLinkedRoleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
        '489':
          description: NoOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoOperationFault'
        '490':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '491':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DecreaseReplicaCountMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DecreaseReplicaCount
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DeleteCacheCluster:
    get:
      x-aws-operation-name: DeleteCacheCluster
      operationId: GET_DeleteCacheCluster
      description: '<p>Deletes a previously provisioned cluster. <code>DeleteCacheCluster</code> deletes all associated cache nodes, node endpoints and the cluster itself. When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the cluster; you cannot cancel or revert this operation.</p> <p>This operation is not valid for:</p> <ul> <li> <p>Redis (cluster mode enabled) clusters</p> </li> <li> <p>Redis (cluster mode disabled) clusters</p> </li> <li> <p>A cluster that is the last read replica of a replication group</p> </li> <li> <p>A cluster that is the primary node of a replication group</p> </li> <li> <p>A node group (shard) that has Multi-AZ mode enabled</p> </li> <li> <p>A cluster from a Redis (cluster mode enabled) replication group</p> </li> <li> <p>A cluster that is not in the <code>available</code> state</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteCacheClusterResult'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '482':
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
        '483':
          description: SnapshotFeatureNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotFeatureNotSupportedFault'
        '484':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '485':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '486':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheClusterId
          in: query
          required: true
          description: The cluster identifier for the cluster to be deleted. This parameter is not case sensitive.
          schema:
            type: string
        - name: FinalSnapshotIdentifier
          in: query
          required: false
          description: 'The user-supplied name of a final cluster snapshot. This is the unique name that identifies the snapshot. ElastiCache creates the snapshot, and then deletes the cluster immediately afterward.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteCacheCluster
      operationId: POST_DeleteCacheCluster
      description: '<p>Deletes a previously provisioned cluster. <code>DeleteCacheCluster</code> deletes all associated cache nodes, node endpoints and the cluster itself. When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the cluster; you cannot cancel or revert this operation.</p> <p>This operation is not valid for:</p> <ul> <li> <p>Redis (cluster mode enabled) clusters</p> </li> <li> <p>Redis (cluster mode disabled) clusters</p> </li> <li> <p>A cluster that is the last read replica of a replication group</p> </li> <li> <p>A cluster that is the primary node of a replication group</p> </li> <li> <p>A node group (shard) that has Multi-AZ mode enabled</p> </li> <li> <p>A cluster from a Redis (cluster mode enabled) replication group</p> </li> <li> <p>A cluster that is not in the <code>available</code> state</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteCacheClusterResult'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '482':
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
        '483':
          description: SnapshotFeatureNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotFeatureNotSupportedFault'
        '484':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '485':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '486':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteCacheClusterMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DeleteCacheParameterGroup:
    get:
      x-aws-operation-name: DeleteCacheParameterGroup
      operationId: GET_DeleteCacheParameterGroup
      description: Deletes the specified cache parameter group. You cannot delete a cache parameter group if it is associated with any cache clusters. You cannot delete the default cache parameter groups in your account.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
        '481':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheParameterGroupName
          in: query
          required: true
          description: <p>The name of the cache parameter group to delete.</p> <note> <p>The specified cache security group must not be associated with any clusters.</p> </note>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteCacheParameterGroup
      operationId: POST_DeleteCacheParameterGroup
      description: Deletes the specified cache parameter group. You cannot delete a cache parameter group if it is associated with any cache clusters. You cannot delete the default cache parameter groups in your account.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
        '481':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteCacheParameterGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DeleteCacheSecurityGroup:
    get:
      x-aws-operation-name: DeleteCacheSecurityGroup
      operationId: GET_DeleteCacheSecurityGroup
      description: <p>Deletes a cache security group.</p> <note> <p>You cannot delete a cache security group if it is associated with any clusters.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
        '481':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheSecurityGroupName
          in: query
          required: true
          description: <p>The name of the cache security group to delete.</p> <note> <p>You cannot delete the default security group.</p> </note>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteCacheSecurityGroup
      operationId: POST_DeleteCacheSecurityGroup
      description: <p>Deletes a cache security group.</p> <note> <p>You cannot delete a cache security group if it is associated with any clusters.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
        '481':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteCacheSecurityGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DeleteCacheSubnetGroup:
    get:
      x-aws-operation-name: DeleteCacheSubnetGroup
      operationId: GET_DeleteCacheSubnetGroup
      description: <p>Deletes a cache subnet group.</p> <note> <p>You cannot delete a default cache subnet group or one that is associated with any clusters.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: CacheSubnetGroupInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupInUse'
        '481':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
      parameters:
        - name: CacheSubnetGroupName
          in: query
          required: true
          description: '<p>The name of the cache subnet group to delete.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p>'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteCacheSubnetGroup
      operationId: POST_DeleteCacheSubnetGroup
      description: <p>Deletes a cache subnet group.</p> <note> <p>You cannot delete a default cache subnet group or one that is associated with any clusters.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: CacheSubnetGroupInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupInUse'
        '481':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteCacheSubnetGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DeleteGlobalReplicationGroup:
    get:
      x-aws-operation-name: DeleteGlobalReplicationGroup
      operationId: GET_DeleteGlobalReplicationGroup
      description: '<p>Deleting a Global datastore is a two-step process: </p> <ul> <li> <p>First, you must <a>DisassociateGlobalReplicationGroup</a> to remove the secondary clusters in the Global datastore.</p> </li> <li> <p>Once the Global datastore contains only the primary cluster, you can use the <code>DeleteGlobalReplicationGroup</code> API to delete the Global datastore while retainining the primary cluster using <code>RetainPrimaryReplicationGroup=true</code>.</p> </li> </ul> <p>Since the Global Datastore has only a primary cluster, you can delete the Global Datastore while retaining the primary by setting <code>RetainPrimaryReplicationGroup=true</code>. The primary cluster is never deleted when deleting a Global Datastore. It can only be deleted when it no longer is associated with any Global Datastore.</p> <p>When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the selected resources; you cannot cancel or revert this operation.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      parameters:
        - name: GlobalReplicationGroupId
          in: query
          required: true
          description: The name of the Global datastore
          schema:
            type: string
        - name: RetainPrimaryReplicationGroup
          in: query
          required: true
          description: 'The primary replication group is retained as a standalone replication group. '
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteGlobalReplicationGroup
      operationId: POST_DeleteGlobalReplicationGroup
      description: '<p>Deleting a Global datastore is a two-step process: </p> <ul> <li> <p>First, you must <a>DisassociateGlobalReplicationGroup</a> to remove the secondary clusters in the Global datastore.</p> </li> <li> <p>Once the Global datastore contains only the primary cluster, you can use the <code>DeleteGlobalReplicationGroup</code> API to delete the Global datastore while retainining the primary cluster using <code>RetainPrimaryReplicationGroup=true</code>.</p> </li> </ul> <p>Since the Global Datastore has only a primary cluster, you can delete the Global Datastore while retaining the primary by setting <code>RetainPrimaryReplicationGroup=true</code>. The primary cluster is never deleted when deleting a Global Datastore. It can only be deleted when it no longer is associated with any Global Datastore.</p> <p>When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the selected resources; you cannot cancel or revert this operation.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteGlobalReplicationGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DeleteReplicationGroup:
    get:
      x-aws-operation-name: DeleteReplicationGroup
      operationId: GET_DeleteReplicationGroup
      description: '<p>Deletes an existing replication group. By default, this operation deletes the entire replication group, including the primary/primaries and all of the read replicas. If the replication group has only one primary, you can optionally delete only the read replicas, while retaining the primary by setting <code>RetainPrimaryCluster=true</code>.</p> <p>When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the selected resources; you cannot cancel or revert this operation.</p> <note> <p>This operation is valid for Redis only.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteReplicationGroupResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
        '483':
          description: SnapshotFeatureNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotFeatureNotSupportedFault'
        '484':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '485':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '486':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: The identifier for the cluster to be deleted. This parameter is not case sensitive.
          schema:
            type: string
        - name: RetainPrimaryCluster
          in: query
          required: false
          description: 'If set to <code>true</code>, all of the read replicas are deleted, but the primary node is retained.'
          schema:
            type: boolean
        - name: FinalSnapshotIdentifier
          in: query
          required: false
          description: 'The name of a final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster, rather than one of the replicas; this is to ensure that it captures the freshest data. After the final snapshot is taken, the replication group is immediately deleted.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteReplicationGroup
      operationId: POST_DeleteReplicationGroup
      description: '<p>Deletes an existing replication group. By default, this operation deletes the entire replication group, including the primary/primaries and all of the read replicas. If the replication group has only one primary, you can optionally delete only the read replicas, while retaining the primary by setting <code>RetainPrimaryCluster=true</code>.</p> <p>When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the selected resources; you cannot cancel or revert this operation.</p> <note> <p>This operation is valid for Redis only.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteReplicationGroupResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
        '483':
          description: SnapshotFeatureNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotFeatureNotSupportedFault'
        '484':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '485':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '486':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteReplicationGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DeleteSnapshot:
    get:
      x-aws-operation-name: DeleteSnapshot
      operationId: GET_DeleteSnapshot
      description: '<p>Deletes an existing snapshot. When you receive a successful response from this operation, ElastiCache immediately begins deleting the snapshot; you cannot cancel or revert this operation.</p> <note> <p>This operation is valid for Redis only.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResult'
        '480':
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
        '481':
          description: InvalidSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSnapshotStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: SnapshotName
          in: query
          required: true
          description: The name of the snapshot to be deleted.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteSnapshot
      operationId: POST_DeleteSnapshot
      description: '<p>Deletes an existing snapshot. When you receive a successful response from this operation, ElastiCache immediately begins deleting the snapshot; you cannot cancel or revert this operation.</p> <note> <p>This operation is valid for Redis only.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResult'
        '480':
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
        '481':
          description: InvalidSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSnapshotStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DeleteUser:
    get:
      x-aws-operation-name: DeleteUser
      operationId: GET_DeleteUser
      description: 'For Redis engine version 6.x onwards: Deletes a user. The user will be removed from all user groups and in turn removed from all replication groups. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html">Using Role Based Access Control (RBAC)</a>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
        '480':
          description: InvalidUserStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserStateFault'
        '481':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: DefaultUserAssociatedToUserGroupFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultUserAssociatedToUserGroupFault'
      parameters:
        - name: UserId
          in: query
          required: true
          description: The ID of the user.
          schema:
            type: string
            pattern: '[a-zA-Z][a-zA-Z0-9\-]*'
            minLength: 1
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteUser
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteUser
      operationId: POST_DeleteUser
      description: 'For Redis engine version 6.x onwards: Deletes a user. The user will be removed from all user groups and in turn removed from all replication groups. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html">Using Role Based Access Control (RBAC)</a>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
        '480':
          description: InvalidUserStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserStateFault'
        '481':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: DefaultUserAssociatedToUserGroupFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultUserAssociatedToUserGroupFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteUserMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteUser
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DeleteUserGroup:
    get:
      x-aws-operation-name: DeleteUserGroup
      operationId: GET_DeleteUserGroup
      description: 'For Redis engine version 6.x onwards: Deletes a user group. The user group must first be disassociated from the replication group before it can be deleted. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html">Using Role Based Access Control (RBAC)</a>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
        '480':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '481':
          description: InvalidUserGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      parameters:
        - name: UserGroupId
          in: query
          required: true
          description: The ID of the user group.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteUserGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteUserGroup
      operationId: POST_DeleteUserGroup
      description: 'For Redis engine version 6.x onwards: Deletes a user group. The user group must first be disassociated from the replication group before it can be deleted. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html">Using Role Based Access Control (RBAC)</a>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
        '480':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '481':
          description: InvalidUserGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteUserGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteUserGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeCacheClusters:
    get:
      x-aws-operation-name: DescribeCacheClusters
      operationId: GET_DescribeCacheClusters
      description: '<p>Returns information about all provisioned clusters if no cluster identifier is specified, or about a specific cache cluster if a cluster identifier is supplied.</p> <p>By default, abbreviated information about the clusters is returned. You can use the optional <i>ShowCacheNodeInfo</i> flag to retrieve detailed information about the cache nodes associated with the clusters. These details include the DNS address and port for the cache node endpoint.</p> <p>If the cluster is in the <i>creating</i> state, only cluster-level information is displayed until all of the nodes are successfully provisioned.</p> <p>If the cluster is in the <i>deleting</i> state, only cluster-level information is displayed.</p> <p>If cache nodes are currently being added to the cluster, node endpoint information and creation time for the additional nodes are not displayed until they are completely provisioned. When the cluster state is <i>available</i>, the cluster is ready for use.</p> <p>If cache nodes are currently being removed from the cluster, no endpoint information for the removed nodes is displayed.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterMessage'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheClusterId
          in: query
          required: false
          description: 'The user-supplied cluster identifier. If this parameter is specified, only information about that specific cluster is returned. This parameter isn''t case sensitive.'
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: ShowCacheNodeInfo
          in: query
          required: false
          description: An optional flag that can be included in the <code>DescribeCacheCluster</code> request to retrieve information about the individual cache nodes.
          schema:
            type: boolean
        - name: ShowCacheClustersNotInReplicationGroups
          in: query
          required: false
          description: 'An optional flag that can be included in the <code>DescribeCacheCluster</code> request to show only nodes (API/CLI: clusters) that are not members of a replication group. In practice, this mean Memcached and single node Redis clusters.'
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheClusters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeCacheClusters
      operationId: POST_DescribeCacheClusters
      description: '<p>Returns information about all provisioned clusters if no cluster identifier is specified, or about a specific cache cluster if a cluster identifier is supplied.</p> <p>By default, abbreviated information about the clusters is returned. You can use the optional <i>ShowCacheNodeInfo</i> flag to retrieve detailed information about the cache nodes associated with the clusters. These details include the DNS address and port for the cache node endpoint.</p> <p>If the cluster is in the <i>creating</i> state, only cluster-level information is displayed until all of the nodes are successfully provisioned.</p> <p>If the cluster is in the <i>deleting</i> state, only cluster-level information is displayed.</p> <p>If cache nodes are currently being added to the cluster, node endpoint information and creation time for the additional nodes are not displayed until they are completely provisioned. When the cluster state is <i>available</i>, the cluster is ready for use.</p> <p>If cache nodes are currently being removed from the cluster, no endpoint information for the removed nodes is displayed.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterMessage'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCacheClustersMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheClusters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeCacheEngineVersions:
    get:
      x-aws-operation-name: DescribeCacheEngineVersions
      operationId: GET_DescribeCacheEngineVersions
      description: Returns a list of the available cache engines and their versions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheEngineVersionMessage'
      parameters:
        - name: Engine
          in: query
          required: false
          description: 'The cache engine to return. Valid values: <code>memcached</code> | <code>redis</code> '
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: '<p>The cache engine version to return.</p> <p>Example: <code>1.4.14</code> </p>'
          schema:
            type: string
        - name: CacheParameterGroupFamily
          in: query
          required: false
          description: '<p>The name of a specific cache parameter group family to return details for.</p> <p>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.x</code> | </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>'
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: DefaultOnly
          in: query
          required: false
          description: 'If <code>true</code>, specifies that only the default version of the specified engine or engine and major version combination is to be returned.'
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheEngineVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeCacheEngineVersions
      operationId: POST_DescribeCacheEngineVersions
      description: Returns a list of the available cache engines and their versions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheEngineVersionMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCacheEngineVersionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheEngineVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeCacheParameterGroups:
    get:
      x-aws-operation-name: DescribeCacheParameterGroups
      operationId: GET_DescribeCacheParameterGroups
      description: 'Returns a list of cache parameter group descriptions. If a cache parameter group name is specified, the list contains only the descriptions for that group.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupsMessage'
        '480':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheParameterGroupName
          in: query
          required: false
          description: The name of a specific cache parameter group to return details for.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeCacheParameterGroups
      operationId: POST_DescribeCacheParameterGroups
      description: 'Returns a list of cache parameter group descriptions. If a cache parameter group name is specified, the list contains only the descriptions for that group.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupsMessage'
        '480':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCacheParameterGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeCacheParameters:
    get:
      x-aws-operation-name: DescribeCacheParameters
      operationId: GET_DescribeCacheParameters
      description: Returns the detailed parameter list for a particular cache parameter group.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupDetails'
        '480':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheParameterGroupName
          in: query
          required: true
          description: The name of a specific cache parameter group to return details for.
          schema:
            type: string
        - name: Source
          in: query
          required: false
          description: '<p>The parameter types to return.</p> <p>Valid values: <code>user</code> | <code>system</code> | <code>engine-default</code> </p>'
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeCacheParameters
      operationId: POST_DescribeCacheParameters
      description: Returns the detailed parameter list for a particular cache parameter group.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupDetails'
        '480':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCacheParametersMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeCacheSecurityGroups:
    get:
      x-aws-operation-name: DescribeCacheSecurityGroups
      operationId: GET_DescribeCacheSecurityGroups
      description: 'Returns a list of cache security group descriptions. If a cache security group name is specified, the list contains only the description of that group. This applicable only when you have ElastiCache in Classic setup '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupMessage'
        '480':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheSecurityGroupName
          in: query
          required: false
          description: The name of the cache security group to return details for.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheSecurityGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeCacheSecurityGroups
      operationId: POST_DescribeCacheSecurityGroups
      description: 'Returns a list of cache security group descriptions. If a cache security group name is specified, the list contains only the description of that group. This applicable only when you have ElastiCache in Classic setup '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupMessage'
        '480':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCacheSecurityGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheSecurityGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeCacheSubnetGroups:
    get:
      x-aws-operation-name: DescribeCacheSubnetGroups
      operationId: GET_DescribeCacheSubnetGroups
      description: 'Returns a list of cache subnet group descriptions. If a subnet group name is specified, the list contains only the description of that group. This is applicable only when you have ElastiCache in VPC setup. All ElastiCache clusters now launch in VPC by default. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupMessage'
        '480':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
      parameters:
        - name: CacheSubnetGroupName
          in: query
          required: false
          description: The name of the cache subnet group to return details for.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeCacheSubnetGroups
      operationId: POST_DescribeCacheSubnetGroups
      description: 'Returns a list of cache subnet group descriptions. If a subnet group name is specified, the list contains only the description of that group. This is applicable only when you have ElastiCache in VPC setup. All ElastiCache clusters now launch in VPC by default. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupMessage'
        '480':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCacheSubnetGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeEngineDefaultParameters:
    get:
      x-aws-operation-name: DescribeEngineDefaultParameters
      operationId: GET_DescribeEngineDefaultParameters
      description: Returns the default engine and system parameter information for the specified cache engine.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultParametersResult'
        '480':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheParameterGroupFamily
          in: query
          required: true
          description: '<p>The name of the cache parameter group family.</p> <p>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.x</code> | </p>'
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEngineDefaultParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEngineDefaultParameters
      operationId: POST_DescribeEngineDefaultParameters
      description: Returns the default engine and system parameter information for the specified cache engine.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultParametersResult'
        '480':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEngineDefaultParametersMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEngineDefaultParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeEvents:
    get:
      x-aws-operation-name: DescribeEvents
      operationId: GET_DescribeEvents
      description: '<p>Returns events related to clusters, cache security groups, and cache parameter groups. You can obtain events specific to a particular cluster, cache security group, or cache parameter group by providing the name as a parameter.</p> <p>By default, only the events occurring within the last hour are returned; however, you can retrieve up to 14 days'' worth of events if necessary.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventsMessage'
        '480':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: SourceIdentifier
          in: query
          required: false
          description: 'The identifier of the event source for which events are returned. If not specified, all sources are included in the response.'
          schema:
            type: string
        - name: SourceType
          in: query
          required: false
          description: 'The event source to retrieve events for. If no value is specified, all events are returned.'
          schema:
            type: string
            enum:
              - cache-cluster
              - cache-parameter-group
              - cache-security-group
              - cache-subnet-group
              - replication-group
              - user
              - user-group
        - name: StartTime
          in: query
          required: false
          description: '<p>The beginning of the time interval to retrieve events for, specified in ISO 8601 format.</p> <p> <b>Example:</b> 2017-03-30T07:03:49.555Z</p>'
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: '<p>The end of the time interval for which to retrieve events, specified in ISO 8601 format.</p> <p> <b>Example:</b> 2017-03-30T07:03:49.555Z</p>'
          schema:
            type: string
            format: date-time
        - name: Duration
          in: query
          required: false
          description: The number of minutes worth of events to retrieve.
          schema:
            type: integer
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEvents
      operationId: POST_DescribeEvents
      description: '<p>Returns events related to clusters, cache security groups, and cache parameter groups. You can obtain events specific to a particular cluster, cache security group, or cache parameter group by providing the name as a parameter.</p> <p>By default, only the events occurring within the last hour are returned; however, you can retrieve up to 14 days'' worth of events if necessary.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventsMessage'
        '480':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeGlobalReplicationGroups:
    get:
      x-aws-operation-name: DescribeGlobalReplicationGroups
      operationId: GET_DescribeGlobalReplicationGroups
      description: 'Returns information about a particular global replication group. If no identifier is specified, returns information about all Global datastores. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeGlobalReplicationGroupsResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: GlobalReplicationGroupId
          in: query
          required: false
          description: The name of the Global datastore
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: 'The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a marker is included in the response so that the remaining results can be retrieved. '
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
          schema:
            type: string
        - name: ShowMemberInfo
          in: query
          required: false
          description: Returns the list of members that comprise the Global datastore.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeGlobalReplicationGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeGlobalReplicationGroups
      operationId: POST_DescribeGlobalReplicationGroups
      description: 'Returns information about a particular global replication group. If no identifier is specified, returns information about all Global datastores. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeGlobalReplicationGroupsResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeGlobalReplicationGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeGlobalReplicationGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeReplicationGroups:
    get:
      x-aws-operation-name: DescribeReplicationGroups
      operationId: GET_DescribeReplicationGroups
      description: '<p>Returns information about a particular replication group. If no identifier is specified, <code>DescribeReplicationGroups</code> returns information about all replication groups.</p> <note> <p>This operation is valid for Redis only.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupMessage'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ReplicationGroupId
          in: query
          required: false
          description: '<p>The identifier for the replication group to be described. This parameter is not case sensitive.</p> <p>If you do not specify this parameter, information about all replication groups is returned.</p>'
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReplicationGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReplicationGroups
      operationId: POST_DescribeReplicationGroups
      description: '<p>Returns information about a particular replication group. If no identifier is specified, <code>DescribeReplicationGroups</code> returns information about all replication groups.</p> <note> <p>This operation is valid for Redis only.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupMessage'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReplicationGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReplicationGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeReservedCacheNodes:
    get:
      x-aws-operation-name: DescribeReservedCacheNodes
      operationId: GET_DescribeReservedCacheNodes
      description: 'Returns information about reserved cache nodes for this account, or about a specified reserved cache node.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeMessage'
        '480':
          description: ReservedCacheNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ReservedCacheNodeId
          in: query
          required: false
          description: The reserved cache node identifier filter value. Use this parameter to show only the reservation that matches the specified reservation ID.
          schema:
            type: string
        - name: ReservedCacheNodesOfferingId
          in: query
          required: false
          description: The offering identifier filter value. Use this parameter to show only purchased reservations matching the specified offering identifier.
          schema:
            type: string
        - name: CacheNodeType
          in: query
          required: false
          description: '<p>The cache node type filter value. Use this parameter to show only those reservations matching the specified cache node type.</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
          schema:
            type: string
        - name: Duration
          in: query
          required: false
          description: '<p>The duration filter value, specified in years or seconds. Use this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>'
          schema:
            type: string
        - name: ProductDescription
          in: query
          required: false
          description: The product description filter value. Use this parameter to show only those reservations matching the specified product description.
          schema:
            type: string
        - name: OfferingType
          in: query
          required: false
          description: '<p>The offering type filter value. Use this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid values: <code>"Light Utilization"|"Medium Utilization"|"Heavy Utilization"|"All Upfront"|"Partial Upfront"| "No Upfront"</code> </p>'
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedCacheNodes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReservedCacheNodes
      operationId: POST_DescribeReservedCacheNodes
      description: 'Returns information about reserved cache nodes for this account, or about a specified reserved cache node.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeMessage'
        '480':
          description: ReservedCacheNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReservedCacheNodesMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedCacheNodes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeReservedCacheNodesOfferings:
    get:
      x-aws-operation-name: DescribeReservedCacheNodesOfferings
      operationId: GET_DescribeReservedCacheNodesOfferings
      description: Lists available reserved cache node offerings.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodesOfferingMessage'
        '480':
          description: ReservedCacheNodesOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodesOfferingNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ReservedCacheNodesOfferingId
          in: query
          required: false
          description: '<p>The offering identifier filter value. Use this parameter to show only the available offering that matches the specified reservation identifier.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>'
          schema:
            type: string
        - name: CacheNodeType
          in: query
          required: false
          description: '<p>The cache node type filter value. Use this parameter to show only the available offerings matching the specified cache node type.</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
          schema:
            type: string
        - name: Duration
          in: query
          required: false
          description: '<p>Duration filter value, specified in years or seconds. Use this parameter to show only reservations for a given duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>'
          schema:
            type: string
        - name: ProductDescription
          in: query
          required: false
          description: The product description filter value. Use this parameter to show only the available offerings matching the specified product description.
          schema:
            type: string
        - name: OfferingType
          in: query
          required: false
          description: '<p>The offering type filter value. Use this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>"Light Utilization"|"Medium Utilization"|"Heavy Utilization" |"All Upfront"|"Partial Upfront"| "No Upfront"</code> </p>'
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedCacheNodesOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReservedCacheNodesOfferings
      operationId: POST_DescribeReservedCacheNodesOfferings
      description: Lists available reserved cache node offerings.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodesOfferingMessage'
        '480':
          description: ReservedCacheNodesOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodesOfferingNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReservedCacheNodesOfferingsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedCacheNodesOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeServiceUpdates:
    get:
      x-aws-operation-name: DescribeServiceUpdates
      operationId: GET_DescribeServiceUpdates
      description: Returns details of the service updates
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdatesMessage'
        '480':
          description: ServiceUpdateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ServiceUpdateName
          in: query
          required: false
          description: The unique ID of the service update
          schema:
            type: string
        - name: ServiceUpdateStatus
          in: query
          required: false
          description: The status of the service update
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServiceUpdateStatus'
            maxItems: 3
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of records to include in the response
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeServiceUpdates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeServiceUpdates
      operationId: POST_DescribeServiceUpdates
      description: Returns details of the service updates
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdatesMessage'
        '480':
          description: ServiceUpdateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeServiceUpdatesMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeServiceUpdates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeSnapshots:
    get:
      x-aws-operation-name: DescribeSnapshots
      operationId: GET_DescribeSnapshots
      description: '<p>Returns information about cluster or replication group snapshots. By default, <code>DescribeSnapshots</code> lists all of your snapshots; it can optionally describe a single snapshot, or just the snapshots associated with a particular cache cluster.</p> <note> <p>This operation is valid for Redis only.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotsListMessage'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ReplicationGroupId
          in: query
          required: false
          description: 'A user-supplied replication group identifier. If this parameter is specified, only snapshots associated with that specific replication group are described.'
          schema:
            type: string
        - name: CacheClusterId
          in: query
          required: false
          description: 'A user-supplied cluster identifier. If this parameter is specified, only snapshots associated with that specific cluster are described.'
          schema:
            type: string
        - name: SnapshotName
          in: query
          required: false
          description: 'A user-supplied name of the snapshot. If this parameter is specified, only this snapshot are described.'
          schema:
            type: string
        - name: SnapshotSource
          in: query
          required: false
          description: 'If set to <code>system</code>, the output shows snapshots that were automatically created by ElastiCache. If set to <code>user</code> the output shows snapshots that were manually created. If omitted, the output shows both automatically and manually created snapshots.'
          schema:
            type: string
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 50</p> <p>Constraints: minimum 20; maximum 50.</p>'
          schema:
            type: integer
        - name: ShowNodeGroupConfig
          in: query
          required: false
          description: 'A Boolean value which if true, the node group (shard) configuration is included in the snapshot description.'
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSnapshots
      operationId: POST_DescribeSnapshots
      description: '<p>Returns information about cluster or replication group snapshots. By default, <code>DescribeSnapshots</code> lists all of your snapshots; it can optionally describe a single snapshot, or just the snapshots associated with a particular cache cluster.</p> <note> <p>This operation is valid for Redis only.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotsListMessage'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSnapshotsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeUpdateActions:
    get:
      x-aws-operation-name: DescribeUpdateActions
      operationId: GET_DescribeUpdateActions
      description: 'Returns details of the update actions '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateActionsMessage'
        '480':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ServiceUpdateName
          in: query
          required: false
          description: The unique ID of the service update
          schema:
            type: string
        - name: ReplicationGroupIds
          in: query
          required: false
          description: The replication group IDs
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
            maxItems: 20
        - name: CacheClusterIds
          in: query
          required: false
          description: The cache cluster IDs
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
            maxItems: 20
        - name: Engine
          in: query
          required: false
          description: 'The Elasticache engine to which the update applies. Either Redis or Memcached '
          schema:
            type: string
        - name: ServiceUpdateStatus
          in: query
          required: false
          description: The status of the service update
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServiceUpdateStatus'
            maxItems: 3
        - name: ServiceUpdateTimeRange
          in: query
          required: false
          description: The range of time specified to search for service updates that are in available status
          schema:
            type: object
            properties:
              StartTime:
                $ref: '#/components/schemas/TStamp'
                description: The start time of the time range filter
              EndTime:
                $ref: '#/components/schemas/TStamp'
                description: The end time of the time range filter
            description: Filters update actions from the service updates that are in available status during the time range.
        - name: UpdateActionStatus
          in: query
          required: false
          description: The status of the update action.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/UpdateActionStatus'
            maxItems: 9
        - name: ShowNodeLevelUpdateStatus
          in: query
          required: false
          description: 'Dictates whether to include node level update status in the response '
          schema:
            type: boolean
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of records to include in the response
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeUpdateActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeUpdateActions
      operationId: POST_DescribeUpdateActions
      description: 'Returns details of the update actions '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateActionsMessage'
        '480':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeUpdateActionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeUpdateActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeUserGroups:
    get:
      x-aws-operation-name: DescribeUserGroups
      operationId: GET_DescribeUserGroups
      description: Returns a list of user groups.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeUserGroupsResult'
        '480':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '481':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: UserGroupId
          in: query
          required: false
          description: The ID of the user group.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: 'The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a marker is included in the response so that the remaining results can be retrieved. '
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords. &gt;'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeUserGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeUserGroups
      operationId: POST_DescribeUserGroups
      description: Returns a list of user groups.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeUserGroupsResult'
        '480':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '481':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeUserGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeUserGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DescribeUsers:
    get:
      x-aws-operation-name: DescribeUsers
      operationId: GET_DescribeUsers
      description: Returns a list of users.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeUsersResult'
        '480':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '481':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: Engine
          in: query
          required: false
          description: 'The Redis engine. '
          schema:
            type: string
            pattern: '[a-zA-Z]*'
        - name: UserId
          in: query
          required: false
          description: The ID of the user.
          schema:
            type: string
            pattern: '[a-zA-Z][a-zA-Z0-9\-]*'
            minLength: 1
        - name: Filters
          in: query
          required: false
          description: Filter to determine the list of User IDs to return.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Filter'
        - name: MaxRecords
          in: query
          required: false
          description: 'The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a marker is included in the response so that the remaining results can be retrieved. '
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords. &gt;'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeUsers
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeUsers
      operationId: POST_DescribeUsers
      description: Returns a list of users.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeUsersResult'
        '480':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '481':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeUsersMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeUsers
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=DisassociateGlobalReplicationGroup:
    get:
      x-aws-operation-name: DisassociateGlobalReplicationGroup
      operationId: GET_DisassociateGlobalReplicationGroup
      description: 'Remove a secondary cluster from the Global datastore using the Global datastore name. The secondary cluster will no longer receive updates from the primary cluster, but will remain as a standalone cluster in that Amazon region.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: GlobalReplicationGroupId
          in: query
          required: true
          description: The name of the Global datastore
          schema:
            type: string
        - name: ReplicationGroupId
          in: query
          required: true
          description: The name of the secondary cluster you wish to remove from the Global datastore
          schema:
            type: string
        - name: ReplicationGroupRegion
          in: query
          required: true
          description: The Amazon region of secondary cluster you wish to remove from the Global datastore
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisassociateGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateGlobalReplicationGroup
      operationId: POST_DisassociateGlobalReplicationGroup
      description: 'Remove a secondary cluster from the Global datastore using the Global datastore name. The secondary cluster will no longer receive updates from the primary cluster, but will remain as a standalone cluster in that Amazon region.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateGlobalReplicationGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisassociateGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=FailoverGlobalReplicationGroup:
    get:
      x-aws-operation-name: FailoverGlobalReplicationGroup
      operationId: GET_FailoverGlobalReplicationGroup
      description: 'Used to failover the primary region to a selected secondary region. The selected secondary region will become primary, and all other clusters will become secondary.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FailoverGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: GlobalReplicationGroupId
          in: query
          required: true
          description: The name of the Global datastore
          schema:
            type: string
        - name: PrimaryRegion
          in: query
          required: true
          description: The Amazon region of the primary cluster of the Global datastore
          schema:
            type: string
        - name: PrimaryReplicationGroupId
          in: query
          required: true
          description: The name of the primary replication group
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - FailoverGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: FailoverGlobalReplicationGroup
      operationId: POST_FailoverGlobalReplicationGroup
      description: 'Used to failover the primary region to a selected secondary region. The selected secondary region will become primary, and all other clusters will become secondary.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FailoverGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/FailoverGlobalReplicationGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - FailoverGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=IncreaseNodeGroupsInGlobalReplicationGroup:
    get:
      x-aws-operation-name: IncreaseNodeGroupsInGlobalReplicationGroup
      operationId: GET_IncreaseNodeGroupsInGlobalReplicationGroup
      description: Increase the number of node groups in the Global datastore
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IncreaseNodeGroupsInGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      parameters:
        - name: GlobalReplicationGroupId
          in: query
          required: true
          description: The name of the Global datastore
          schema:
            type: string
        - name: NodeGroupCount
          in: query
          required: true
          description: The number of node groups you wish to add
          schema:
            type: integer
        - name: RegionalConfigurations
          in: query
          required: false
          description: 'Describes the replication group IDs, the Amazon regions where they are stored and the shard configuration for each that comprise the Global datastore'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/RegionalConfiguration'
                - xml:
                    name: RegionalConfiguration
        - name: ApplyImmediately
          in: query
          required: true
          description: 'Indicates that the process begins immediately. At present, the only permitted value for this parameter is true.'
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - IncreaseNodeGroupsInGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: IncreaseNodeGroupsInGlobalReplicationGroup
      operationId: POST_IncreaseNodeGroupsInGlobalReplicationGroup
      description: Increase the number of node groups in the Global datastore
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IncreaseNodeGroupsInGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/IncreaseNodeGroupsInGlobalReplicationGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - IncreaseNodeGroupsInGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=IncreaseReplicaCount:
    get:
      x-aws-operation-name: IncreaseReplicaCount
      operationId: GET_IncreaseReplicaCount
      description: Dynamically increases the number of replicas in a Redis (cluster mode disabled) replication group or the number of replica nodes in one or more node groups (shards) of a Redis (cluster mode enabled) replication group. This operation is performed with no cluster down time.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IncreaseReplicaCountResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '483':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '484':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '485':
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
        '486':
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
        '487':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '488':
          description: NoOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoOperationFault'
        '489':
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
        '490':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '491':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: The id of the replication group to which you want to add replica nodes.
          schema:
            type: string
        - name: NewReplicaCount
          in: query
          required: false
          description: 'The number of read replica nodes you want at the completion of this operation. For Redis (cluster mode disabled) replication groups, this is the number of replica nodes in the replication group. For Redis (cluster mode enabled) replication groups, this is the number of replica nodes in each of the replication group''s node groups.'
          schema:
            type: integer
        - name: ReplicaConfiguration
          in: query
          required: false
          description: 'A list of <code>ConfigureShard</code> objects that can be used to configure each shard in a Redis (cluster mode enabled) replication group. The <code>ConfigureShard</code> has three members: <code>NewReplicaCount</code>, <code>NodeGroupId</code>, and <code>PreferredAvailabilityZones</code>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ConfigureShard'
                - xml:
                    name: ConfigureShard
        - name: ApplyImmediately
          in: query
          required: true
          description: 'If <code>True</code>, the number of replica nodes is increased immediately. <code>ApplyImmediately=False</code> is not currently supported.'
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - IncreaseReplicaCount
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: IncreaseReplicaCount
      operationId: POST_IncreaseReplicaCount
      description: Dynamically increases the number of replicas in a Redis (cluster mode disabled) replication group or the number of replica nodes in one or more node groups (shards) of a Redis (cluster mode enabled) replication group. This operation is performed with no cluster down time.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IncreaseReplicaCountResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '483':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '484':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '485':
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
        '486':
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
        '487':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '488':
          description: NoOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoOperationFault'
        '489':
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
        '490':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '491':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/IncreaseReplicaCountMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - IncreaseReplicaCount
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=ListAllowedNodeTypeModifications:
    get:
      x-aws-operation-name: ListAllowedNodeTypeModifications
      operationId: GET_ListAllowedNodeTypeModifications
      description: '<p>Lists all available node types that you can scale your Redis cluster''s or replication group''s current node type.</p> <p>When you use the <code>ModifyCacheCluster</code> or <code>ModifyReplicationGroup</code> operations to scale your cluster or replication group, the value of the <code>CacheNodeType</code> parameter must be one of the node types returned by this operation.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AllowedNodeTypeModificationsMessage'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '483':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      parameters:
        - name: CacheClusterId
          in: query
          required: false
          description: <p>The name of the cluster you want to scale up to a larger node instanced type. ElastiCache uses the cluster id to identify the current node type of this cluster and from that to create a list of node types you can scale up to.</p> <important> <p>You must provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p> </important>
          schema:
            type: string
        - name: ReplicationGroupId
          in: query
          required: false
          description: '<p>The name of the replication group want to scale up to a larger node type. ElastiCache uses the replication group id to identify the current node type being used by this replication group, and from that to create a list of node types you can scale up to.</p> <important> <p>You must provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p> </important>'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListAllowedNodeTypeModifications
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListAllowedNodeTypeModifications
      operationId: POST_ListAllowedNodeTypeModifications
      description: '<p>Lists all available node types that you can scale your Redis cluster''s or replication group''s current node type.</p> <p>When you use the <code>ModifyCacheCluster</code> or <code>ModifyReplicationGroup</code> operations to scale your cluster or replication group, the value of the <code>CacheNodeType</code> parameter must be one of the node types returned by this operation.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AllowedNodeTypeModificationsMessage'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '482':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '483':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListAllowedNodeTypeModificationsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListAllowedNodeTypeModifications
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=ListTagsForResource:
    get:
      x-aws-operation-name: ListTagsForResource
      operationId: GET_ListTagsForResource
      description: '<p>Lists all tags currently on a named resource.</p> <p> A tag is a key-value pair where the key and value are case-sensitive. You can use tags to categorize and track all your ElastiCache resources, with the exception of global replication group. When you add or remove tags on replication groups, those actions will be replicated to all nodes in the replication group. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.ResourceLevelPermissions.html">Resource-level permissions</a>.</p> <p>If the cluster is not in the <i>available</i> state, <code>ListTagsForResource</code> returns an error.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '482':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '483':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
        '484':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '485':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '486':
          description: ReservedCacheNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
        '487':
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
        '488':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '489':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '490':
          description: InvalidARNFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: '<p>The Amazon Resource Name (ARN) of the resource for which you want the list of tags, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code> or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>.</p>'
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListTagsForResource
      operationId: POST_ListTagsForResource
      description: '<p>Lists all tags currently on a named resource.</p> <p> A tag is a key-value pair where the key and value are case-sensitive. You can use tags to categorize and track all your ElastiCache resources, with the exception of global replication group. When you add or remove tags on replication groups, those actions will be replicated to all nodes in the replication group. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.ResourceLevelPermissions.html">Resource-level permissions</a>.</p> <p>If the cluster is not in the <i>available</i> state, <code>ListTagsForResource</code> returns an error.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '482':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '483':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
        '484':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '485':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '486':
          description: ReservedCacheNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
        '487':
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
        '488':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '489':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '490':
          description: InvalidARNFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=ModifyCacheCluster:
    get:
      x-aws-operation-name: ModifyCacheCluster
      operationId: GET_ModifyCacheCluster
      description: Modifies the settings for a cluster. You can use this operation to change one or more cluster configuration parameters by specifying the parameters and the new values.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyCacheClusterResult'
        '480':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '481':
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
        '482':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '483':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '484':
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
        '485':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '486':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '487':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '488':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '489':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '490':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheClusterId
          in: query
          required: true
          description: The cluster identifier. This value is stored as a lowercase string.
          schema:
            type: string
        - name: NumCacheNodes
          in: query
          required: false
          description: '<p>The number of cache nodes that the cluster should have. If the value for <code>NumCacheNodes</code> is greater than the sum of the number of current cache nodes and the number of cache nodes pending creation (which may be zero), more nodes are added. If the value is less than the number of existing cache nodes, nodes are removed. If the value is equal to the number of current cache nodes, any pending add or remove requests are canceled.</p> <p>If you are removing cache nodes, you must use the <code>CacheNodeIdsToRemove</code> parameter to provide the IDs of the specific cache nodes to remove.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 40.</p> <note> <p>Adding or removing Memcached cache nodes can be applied immediately or as a pending operation (see <code>ApplyImmediately</code>).</p> <p>A pending operation to modify the number of cache nodes in a cluster during its maintenance window, whether by adding or removing nodes in accordance with the scale out architecture, is not queued. The customer''s latest request to add or remove nodes to the cluster overrides any previous pending operations to modify the number of cache nodes in the cluster. For example, a request to remove 2 nodes would override a previous pending operation to remove 3 nodes. Similarly, a request to add 2 nodes would override a previous pending operation to remove 3 nodes and vice versa. As Memcached cache nodes may now be provisioned in different Availability Zones with flexible cache node placement, a request to add nodes does not automatically override a previous pending operation to add nodes. The customer can modify the previous pending operation to add more nodes or explicitly cancel the pending request and retry the new request. To cancel pending operations to modify the number of cache nodes in a cluster, use the <code>ModifyCacheCluster</code> request and set <code>NumCacheNodes</code> equal to the number of cache nodes currently in the cluster.</p> </note>'
          schema:
            type: integer
        - name: CacheNodeIdsToRemove
          in: query
          required: false
          description: '<p>A list of cache node IDs to be removed. A node ID is a numeric identifier (0001, 0002, etc.). This parameter is only valid when <code>NumCacheNodes</code> is less than the existing number of cache nodes. The number of cache node IDs supplied in this parameter must match the difference between the existing number of cache nodes in the cluster or pending cache nodes, whichever is greater, and the value of <code>NumCacheNodes</code> in the request.</p> <p>For example: If you have 3 active cache nodes, 7 pending cache nodes, and the number of cache nodes in this <code>ModifyCacheCluster</code> call is 5, you must list 2 (7 - 5) cache node IDs to remove.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: CacheNodeId
        - name: AZMode
          in: query
          required: false
          description: '<p>Specifies whether the new nodes in this Memcached cluster are all created in a single Availability Zone or created across multiple Availability Zones.</p> <p>Valid values: <code>single-az</code> | <code>cross-az</code>.</p> <p>This option is only supported for Memcached clusters.</p> <note> <p>You cannot specify <code>single-az</code> if the Memcached cluster already has cache nodes in different Availability Zones. If <code>cross-az</code> is specified, existing Memcached nodes remain in their current Availability Zone.</p> <p>Only newly created nodes are located in different Availability Zones. </p> </note>'
          schema:
            type: string
            enum:
              - single-az
              - cross-az
        - name: NewAvailabilityZones
          in: query
          required: false
          description: '<note> <p>This option is only supported on Memcached clusters.</p> </note> <p>The list of Availability Zones where the new Memcached cache nodes are created.</p> <p>This parameter is only valid when <code>NumCacheNodes</code> in the request is greater than the sum of the number of active cache nodes and the number of cache nodes pending creation (which may be zero). The number of Availability Zones supplied in this list must match the cache nodes being added in this request.</p> <p>Scenarios:</p> <ul> <li> <p> <b>Scenario 1:</b> You have 3 active nodes and wish to add 2 nodes. Specify <code>NumCacheNodes=5</code> (3 + 2) and optionally specify two Availability Zones for the two new nodes.</p> </li> <li> <p> <b>Scenario 2:</b> You have 3 active nodes and 2 nodes pending creation (from the scenario 1 call) and want to add 1 more node. Specify <code>NumCacheNodes=6</code> ((3 + 2) + 1) and optionally specify an Availability Zone for the new node.</p> </li> <li> <p> <b>Scenario 3:</b> You want to cancel all pending operations. Specify <code>NumCacheNodes=3</code> to cancel all pending operations.</p> </li> </ul> <p>The Availability Zone placement of nodes pending creation cannot be modified. If you wish to cancel any nodes pending creation, add 0 nodes by setting <code>NumCacheNodes</code> to the number of current nodes.</p> <p>If <code>cross-az</code> is specified, existing Memcached nodes remain in their current Availability Zone. Only newly created nodes can be located in different Availability Zones. For guidance on how to move existing Memcached nodes to different Availability Zones, see the <b>Availability Zone Considerations</b> section of <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html">Cache Node Considerations for Memcached</a>.</p> <p> <b>Impact of new add/remove requests upon pending requests</b> </p> <ul> <li> <p>Scenario-1</p> <ul> <li> <p>Pending Action: Delete</p> </li> <li> <p>New Request: Delete</p> </li> <li> <p>Result: The new delete, pending or immediate, replaces the pending delete.</p> </li> </ul> </li> <li> <p>Scenario-2</p> <ul> <li> <p>Pending Action: Delete</p> </li> <li> <p>New Request: Create</p> </li> <li> <p>Result: The new create, pending or immediate, replaces the pending delete.</p> </li> </ul> </li> <li> <p>Scenario-3</p> <ul> <li> <p>Pending Action: Create</p> </li> <li> <p>New Request: Delete</p> </li> <li> <p>Result: The new delete, pending or immediate, replaces the pending create.</p> </li> </ul> </li> <li> <p>Scenario-4</p> <ul> <li> <p>Pending Action: Create</p> </li> <li> <p>New Request: Create</p> </li> <li> <p>Result: The new create is added to the pending create.</p> <important> <p> <b>Important:</b> If the new create request is <b>Apply Immediately - Yes</b>, all creates are performed immediately. If the new create request is <b>Apply Immediately - No</b>, all creates are pending.</p> </important> </li> </ul> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: PreferredAvailabilityZone
        - name: CacheSecurityGroupNames
          in: query
          required: false
          description: '<p>A list of cache security group names to authorize on this cluster. This change is asynchronously applied as soon as possible.</p> <p>You can use this parameter only with clusters that are created outside of an Amazon Virtual Private Cloud (Amazon VPC).</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be "Default".</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: CacheSecurityGroupName
        - name: SecurityGroupIds
          in: query
          required: false
          description: <p>Specifies the VPC Security Groups associated with the cluster.</p> <p>This parameter can be used only with clusters that are created in an Amazon Virtual Private Cloud (Amazon VPC).</p>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SecurityGroupId
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: '<p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>'
          schema:
            type: string
        - name: NotificationTopicArn
          in: query
          required: false
          description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be same as the cluster owner.</p> </note>
          schema:
            type: string
        - name: CacheParameterGroupName
          in: query
          required: false
          description: The name of the cache parameter group to apply to this cluster. This change is asynchronously applied as soon as possible for parameters when the <code>ApplyImmediately</code> parameter is specified as <code>true</code> for this request.
          schema:
            type: string
        - name: NotificationTopicStatus
          in: query
          required: false
          description: '<p>The status of the Amazon SNS notification topic. Notifications are sent only if the status is <code>active</code>.</p> <p>Valid values: <code>active</code> | <code>inactive</code> </p>'
          schema:
            type: string
        - name: ApplyImmediately
          in: query
          required: false
          description: '<p>If <code>true</code>, this parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the cluster.</p> <p>If <code>false</code>, changes to the cluster are applied on the next maintenance reboot, or the next failure reboot, whichever occurs first.</p> <important> <p>If you perform a <code>ModifyCacheCluster</code> before a pending modification is applied, the pending modification is replaced by the newer modification.</p> </important> <p>Valid values: <code>true</code> | <code>false</code> </p> <p>Default: <code>false</code> </p>'
          schema:
            type: boolean
        - name: EngineVersion
          in: query
          required: false
          description: '<p>The upgraded version of the cache engine to be run on the cache nodes.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster and create it anew with the earlier engine version. </p>'
          schema:
            type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: This parameter is currently disabled.
          schema:
            type: boolean
        - name: SnapshotRetentionLimit
          in: query
          required: false
          description: '<p>The number of days for which ElastiCache retains automatic cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <note> <p>If the value of <code>SnapshotRetentionLimit</code> is set to zero (0), backups are turned off.</p> </note>'
          schema:
            type: integer
        - name: SnapshotWindow
          in: query
          required: false
          description: 'The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your cluster. '
          schema:
            type: string
        - name: CacheNodeType
          in: query
          required: false
          description: A valid cache node type that you want to scale this cluster up to.
          schema:
            type: string
        - name: AuthToken
          in: query
          required: false
          description: '<p>Reserved parameter. The password used to access a password protected server. This parameter must be specified with the <code>auth-token-update</code> parameter. Password constraints:</p> <ul> <li> <p>Must be only printable ASCII characters</p> </li> <li> <p>Must be at least 16 characters and no more than 128 characters in length</p> </li> <li> <p>Cannot contain any of the following characters: ''/'', ''"'', or ''@'', ''%''</p> </li> </ul> <p> For more information, see AUTH password at <a href="http://redis.io/commands/AUTH">AUTH</a>.</p>'
          schema:
            type: string
        - name: AuthTokenUpdateStrategy
          in: query
          required: false
          description: '<p>Specifies the strategy to use to update the AUTH token. This parameter must be specified with the <code>auth-token</code> parameter. Possible values:</p> <ul> <li> <p>Rotate</p> </li> <li> <p>Set</p> </li> </ul> <p> For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/auth.html">Authenticating Users with Redis AUTH</a> </p>'
          schema:
            type: string
            enum:
              - SET
              - ROTATE
              - DELETE
        - name: LogDeliveryConfigurations
          in: query
          required: false
          description: 'Specifies the destination, format and type of the logs.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LogDeliveryConfigurationRequest'
                - xml:
                    name: LogDeliveryConfigurationRequest
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyCacheCluster
      operationId: POST_ModifyCacheCluster
      description: Modifies the settings for a cluster. You can use this operation to change one or more cluster configuration parameters by specifying the parameters and the new values.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyCacheClusterResult'
        '480':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '481':
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
        '482':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '483':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '484':
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
        '485':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '486':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '487':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '488':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '489':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '490':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyCacheClusterMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=ModifyCacheParameterGroup:
    get:
      x-aws-operation-name: ModifyCacheParameterGroup
      operationId: GET_ModifyCacheParameterGroup
      description: Modifies the parameters of a cache parameter group. You can modify up to 20 parameters in a single request by submitting a list parameter name and value pairs.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNameMessage'
        '480':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '481':
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '484':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
      parameters:
        - name: CacheParameterGroupName
          in: query
          required: true
          description: The name of the cache parameter group to modify.
          schema:
            type: string
        - name: ParameterNameValues
          in: query
          required: true
          description: An array of parameter names and values for the parameter update. You must supply at least one parameter name and value; subsequent arguments are optional. A maximum of 20 parameters may be modified per request.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ParameterNameValue'
                - xml:
                    name: ParameterNameValue
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyCacheParameterGroup
      operationId: POST_ModifyCacheParameterGroup
      description: Modifies the parameters of a cache parameter group. You can modify up to 20 parameters in a single request by submitting a list parameter name and value pairs.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNameMessage'
        '480':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '481':
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '484':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyCacheParameterGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=ModifyCacheSubnetGroup:
    get:
      x-aws-operation-name: ModifyCacheSubnetGroup
      operationId: GET_ModifyCacheSubnetGroup
      description: Modifies an existing cache subnet group.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyCacheSubnetGroupResult'
        '480':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
        '481':
          description: CacheSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetQuotaExceededFault'
        '482':
          description: SubnetInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetInUse'
        '483':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '484':
          description: SubnetNotAllowedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetNotAllowedFault'
      parameters:
        - name: CacheSubnetGroupName
          in: query
          required: true
          description: '<p>The name for the cache subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code> </p>'
          schema:
            type: string
        - name: CacheSubnetGroupDescription
          in: query
          required: false
          description: A description of the cache subnet group.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: false
          description: The EC2 subnet IDs for the cache subnet group.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SubnetIdentifier
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCacheSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyCacheSubnetGroup
      operationId: POST_ModifyCacheSubnetGroup
      description: Modifies an existing cache subnet group.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyCacheSubnetGroupResult'
        '480':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
        '481':
          description: CacheSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetQuotaExceededFault'
        '482':
          description: SubnetInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetInUse'
        '483':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '484':
          description: SubnetNotAllowedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetNotAllowedFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyCacheSubnetGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCacheSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=ModifyGlobalReplicationGroup:
    get:
      x-aws-operation-name: ModifyGlobalReplicationGroup
      operationId: GET_ModifyGlobalReplicationGroup
      description: Modifies the settings for a Global datastore.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      parameters:
        - name: GlobalReplicationGroupId
          in: query
          required: true
          description: The name of the Global datastore
          schema:
            type: string
        - name: ApplyImmediately
          in: query
          required: true
          description: 'This parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible. Modifications to Global Replication Groups cannot be requested to be applied in PreferredMaintenceWindow. '
          schema:
            type: boolean
        - name: CacheNodeType
          in: query
          required: false
          description: A valid cache node type that you want to scale this Global datastore to.
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: 'The upgraded version of the cache engine to be run on the clusters in the Global datastore. '
          schema:
            type: string
        - name: CacheParameterGroupName
          in: query
          required: false
          description: The name of the cache parameter group to use with the Global datastore. It must be compatible with the major engine version used by the Global datastore.
          schema:
            type: string
        - name: GlobalReplicationGroupDescription
          in: query
          required: false
          description: A description of the Global datastore
          schema:
            type: string
        - name: AutomaticFailoverEnabled
          in: query
          required: false
          description: 'Determines whether a read replica is automatically promoted to read/write primary if the existing primary encounters a failure. '
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyGlobalReplicationGroup
      operationId: POST_ModifyGlobalReplicationGroup
      description: Modifies the settings for a Global datastore.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyGlobalReplicationGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=ModifyReplicationGroup:
    get:
      x-aws-operation-name: ModifyReplicationGroup
      operationId: GET_ModifyReplicationGroup
      description: '<p>Modifies the settings for a replication group.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/scaling-redis-cluster-mode-enabled.html">Scaling for Amazon ElastiCache for Redis (cluster mode enabled)</a> in the ElastiCache User Guide</p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyReplicationGroupShardConfiguration.html">ModifyReplicationGroupShardConfiguration</a> in the ElastiCache API Reference</p> </li> </ul> <note> <p>This operation is valid for Redis only.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyReplicationGroupResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: InvalidUserGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
        '483':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '484':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '485':
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
        '486':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '487':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '488':
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
        '489':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '490':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '491':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '492':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '493':
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
        '494':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '495':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: The identifier of the replication group to modify.
          schema:
            type: string
        - name: ReplicationGroupDescription
          in: query
          required: false
          description: A description for the replication group. Maximum length is 255 characters.
          schema:
            type: string
        - name: PrimaryClusterId
          in: query
          required: false
          description: 'For replication groups with a single primary, if this parameter is specified, ElastiCache promotes the specified cluster in the specified replication group to the primary role. The nodes of all other clusters in the replication group are read replicas.'
          schema:
            type: string
        - name: SnapshottingClusterId
          in: query
          required: false
          description: The cluster ID that is used as the daily snapshot source for the replication group. This parameter cannot be set for Redis (cluster mode enabled) replication groups.
          schema:
            type: string
        - name: AutomaticFailoverEnabled
          in: query
          required: false
          description: '<p>Determines whether a read replica is automatically promoted to read/write primary if the existing primary encounters a failure.</p> <p>Valid values: <code>true</code> | <code>false</code> </p>'
          schema:
            type: boolean
        - name: MultiAZEnabled
          in: query
          required: false
          description: A flag to indicate MultiAZ is enabled.
          schema:
            type: boolean
        - name: NodeGroupId
          in: query
          required: false
          description: Deprecated. This parameter is not used.
          schema:
            type: string
        - name: CacheSecurityGroupNames
          in: query
          required: false
          description: '<p>A list of cache security group names to authorize for the clusters in this replication group. This change is asynchronously applied as soon as possible.</p> <p>This parameter can be used only with replication group containing clusters running outside of an Amazon Virtual Private Cloud (Amazon VPC).</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be <code>Default</code>.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: CacheSecurityGroupName
        - name: SecurityGroupIds
          in: query
          required: false
          description: <p>Specifies the VPC Security Groups associated with the clusters in the replication group.</p> <p>This parameter can be used only with replication group containing clusters running in an Amazon Virtual Private Cloud (Amazon VPC).</p>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SecurityGroupId
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: '<p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>'
          schema:
            type: string
        - name: NotificationTopicArn
          in: query
          required: false
          description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be same as the replication group owner. </p> </note>
          schema:
            type: string
        - name: CacheParameterGroupName
          in: query
          required: false
          description: The name of the cache parameter group to apply to all of the clusters in this replication group. This change is asynchronously applied as soon as possible for parameters when the <code>ApplyImmediately</code> parameter is specified as <code>true</code> for this request.
          schema:
            type: string
        - name: NotificationTopicStatus
          in: query
          required: false
          description: '<p>The status of the Amazon SNS notification topic for the replication group. Notifications are sent only if the status is <code>active</code>.</p> <p>Valid values: <code>active</code> | <code>inactive</code> </p>'
          schema:
            type: string
        - name: ApplyImmediately
          in: query
          required: false
          description: '<p>If <code>true</code>, this parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the replication group.</p> <p>If <code>false</code>, changes to the nodes in the replication group are applied on the next maintenance reboot, or the next failure reboot, whichever occurs first.</p> <p>Valid values: <code>true</code> | <code>false</code> </p> <p>Default: <code>false</code> </p>'
          schema:
            type: boolean
        - name: EngineVersion
          in: query
          required: false
          description: '<p>The upgraded version of the cache engine to be run on the clusters in the replication group.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing replication group and create it anew with the earlier engine version. </p>'
          schema:
            type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: This parameter is currently disabled.
          schema:
            type: boolean
        - name: SnapshotRetentionLimit
          in: query
          required: false
          description: '<p>The number of days for which ElastiCache retains automatic node group (shard) snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <p> <b>Important</b> If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p>'
          schema:
            type: integer
        - name: SnapshotWindow
          in: query
          required: false
          description: '<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of the node group (shard) specified by <code>SnapshottingClusterId</code>.</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p>'
          schema:
            type: string
        - name: CacheNodeType
          in: query
          required: false
          description: A valid cache node type that you want to scale this replication group to.
          schema:
            type: string
        - name: AuthToken
          in: query
          required: false
          description: '<p>Reserved parameter. The password used to access a password protected server. This parameter must be specified with the <code>auth-token-update-strategy </code> parameter. Password constraints:</p> <ul> <li> <p>Must be only printable ASCII characters</p> </li> <li> <p>Must be at least 16 characters and no more than 128 characters in length</p> </li> <li> <p>Cannot contain any of the following characters: ''/'', ''"'', or ''@'', ''%''</p> </li> </ul> <p> For more information, see AUTH password at <a href="http://redis.io/commands/AUTH">AUTH</a>.</p>'
          schema:
            type: string
        - name: AuthTokenUpdateStrategy
          in: query
          required: false
          description: '<p>Specifies the strategy to use to update the AUTH token. This parameter must be specified with the <code>auth-token</code> parameter. Possible values:</p> <ul> <li> <p>Rotate</p> </li> <li> <p>Set</p> </li> </ul> <p> For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/auth.html">Authenticating Users with Redis AUTH</a> </p>'
          schema:
            type: string
            enum:
              - SET
              - ROTATE
              - DELETE
        - name: UserGroupIdsToAdd
          in: query
          required: false
          description: The user group you are associating with the replication group.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/UserGroupId'
        - name: UserGroupIdsToRemove
          in: query
          required: false
          description: 'The user group to remove, meaning the users in the group no longer can access the replication group.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/UserGroupId'
        - name: RemoveUserGroups
          in: query
          required: false
          description: Removes the user groups that can access this replication group.
          schema:
            type: boolean
        - name: LogDeliveryConfigurations
          in: query
          required: false
          description: 'Specifies the destination, format and type of the logs.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LogDeliveryConfigurationRequest'
                - xml:
                    name: LogDeliveryConfigurationRequest
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyReplicationGroup
      operationId: POST_ModifyReplicationGroup
      description: '<p>Modifies the settings for a replication group.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/scaling-redis-cluster-mode-enabled.html">Scaling for Amazon ElastiCache for Redis (cluster mode enabled)</a> in the ElastiCache User Guide</p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyReplicationGroupShardConfiguration.html">ModifyReplicationGroupShardConfiguration</a> in the ElastiCache API Reference</p> </li> </ul> <note> <p>This operation is valid for Redis only.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyReplicationGroupResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: InvalidUserGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
        '483':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '484':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '485':
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
        '486':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '487':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '488':
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
        '489':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '490':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '491':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '492':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '493':
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
        '494':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '495':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyReplicationGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=ModifyReplicationGroupShardConfiguration:
    get:
      x-aws-operation-name: ModifyReplicationGroupShardConfiguration
      operationId: GET_ModifyReplicationGroupShardConfiguration
      description: 'Modifies a replication group''s shards (node groups) by allowing you to add shards, remove shards, or rebalance the keyspaces among existing shards.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyReplicationGroupShardConfigurationResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '483':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '484':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '485':
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
        '486':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '487':
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
        '488':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '489':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: The name of the Redis (cluster mode enabled) cluster (replication group) on which the shards are to be configured.
          schema:
            type: string
        - name: NodeGroupCount
          in: query
          required: true
          description: The number of node groups (shards) that results from the modification of the shard configuration.
          schema:
            type: integer
        - name: ApplyImmediately
          in: query
          required: true
          description: '<p>Indicates that the shard reconfiguration process begins immediately. At present, the only permitted value for this parameter is <code>true</code>.</p> <p>Value: true</p>'
          schema:
            type: boolean
        - name: ReshardingConfiguration
          in: query
          required: false
          description: '<p>Specifies the preferred availability zones for each node group in the cluster. If the value of <code>NodeGroupCount</code> is greater than the current number of node groups (shards), you can use this parameter to specify the preferred availability zones of the cluster''s shards. If you omit this parameter ElastiCache selects availability zones for you.</p> <p>You can specify this parameter only if the value of <code>NodeGroupCount</code> is greater than the current number of node groups (shards).</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ReshardingConfiguration'
                - xml:
                    name: ReshardingConfiguration
        - name: NodeGroupsToRemove
          in: query
          required: false
          description: '<p>If the value of <code>NodeGroupCount</code> is less than the current number of node groups (shards), then either <code>NodeGroupsToRemove</code> or <code>NodeGroupsToRetain</code> is required. <code>NodeGroupsToRemove</code> is a list of <code>NodeGroupId</code>s to remove from the cluster.</p> <p>ElastiCache for Redis will attempt to remove all node groups listed by <code>NodeGroupsToRemove</code> from the cluster.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/AllowedNodeGroupId'
                - xml:
                    name: NodeGroupToRemove
        - name: NodeGroupsToRetain
          in: query
          required: false
          description: '<p>If the value of <code>NodeGroupCount</code> is less than the current number of node groups (shards), then either <code>NodeGroupsToRemove</code> or <code>NodeGroupsToRetain</code> is required. <code>NodeGroupsToRetain</code> is a list of <code>NodeGroupId</code>s to retain in the cluster.</p> <p>ElastiCache for Redis will attempt to remove all node groups except those listed by <code>NodeGroupsToRetain</code> from the cluster.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/AllowedNodeGroupId'
                - xml:
                    name: NodeGroupToRetain
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyReplicationGroupShardConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyReplicationGroupShardConfiguration
      operationId: POST_ModifyReplicationGroupShardConfiguration
      description: 'Modifies a replication group''s shards (node groups) by allowing you to add shards, remove shards, or rebalance the keyspaces among existing shards.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyReplicationGroupShardConfigurationResult'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '483':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '484':
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
        '485':
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
        '486':
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '487':
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
        '488':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '489':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyReplicationGroupShardConfigurationMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyReplicationGroupShardConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=ModifyUser:
    get:
      x-aws-operation-name: ModifyUser
      operationId: GET_ModifyUser
      description: Changes user password(s) and/or access string.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
        '480':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '481':
          description: InvalidUserStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: UserId
          in: query
          required: true
          description: The ID of the user.
          schema:
            type: string
            pattern: '[a-zA-Z][a-zA-Z0-9\-]*'
            minLength: 1
        - name: AccessString
          in: query
          required: false
          description: Access permissions string used for this user.
          schema:
            type: string
            pattern: .*\S.*
        - name: AppendAccessString
          in: query
          required: false
          description: Adds additional user permissions to the access string.
          schema:
            type: string
            pattern: .*\S.*
        - name: Passwords
          in: query
          required: false
          description: The passwords belonging to the user. You are allowed up to two.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
            minItems: 1
        - name: NoPasswordRequired
          in: query
          required: false
          description: Indicates no password is required for the user.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyUser
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyUser
      operationId: POST_ModifyUser
      description: Changes user password(s) and/or access string.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
        '480':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '481':
          description: InvalidUserStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyUserMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyUser
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=ModifyUserGroup:
    get:
      x-aws-operation-name: ModifyUserGroup
      operationId: GET_ModifyUserGroup
      description: Changes the list of users that belong to the user group.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
        '480':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '481':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '482':
          description: DuplicateUserNameFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
        '483':
          description: DefaultUserRequired
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultUserRequired'
        '484':
          description: InvalidUserGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
        '485':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '486':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: UserGroupId
          in: query
          required: true
          description: The ID of the user group.
          schema:
            type: string
        - name: UserIdsToAdd
          in: query
          required: false
          description: The list of user IDs to add to the user group.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/UserId'
            minItems: 1
        - name: UserIdsToRemove
          in: query
          required: false
          description: The list of user IDs to remove from the user group.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/UserId'
            minItems: 1
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyUserGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyUserGroup
      operationId: POST_ModifyUserGroup
      description: Changes the list of users that belong to the user group.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
        '480':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '481':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '482':
          description: DuplicateUserNameFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
        '483':
          description: DefaultUserRequired
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultUserRequired'
        '484':
          description: InvalidUserGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
        '485':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '486':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyUserGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyUserGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=PurchaseReservedCacheNodesOffering:
    get:
      x-aws-operation-name: PurchaseReservedCacheNodesOffering
      operationId: GET_PurchaseReservedCacheNodesOffering
      description: 'Allows you to purchase a reserved cache node offering. Reserved nodes are not eligible for cancellation and are non-refundable. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/reserved-nodes.html">Managing Costs with Reserved Nodes</a> for Redis or <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/reserved-nodes.html">Managing Costs with Reserved Nodes</a> for Memcached.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseReservedCacheNodesOfferingResult'
        '480':
          description: ReservedCacheNodesOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodesOfferingNotFoundFault'
        '481':
          description: ReservedCacheNodeAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeAlreadyExistsFault'
        '482':
          description: ReservedCacheNodeQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeQuotaExceededFault'
        '483':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '484':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '485':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ReservedCacheNodesOfferingId
          in: query
          required: true
          description: '<p>The ID of the reserved cache node offering to purchase.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>'
          schema:
            type: string
        - name: ReservedCacheNodeId
          in: query
          required: false
          description: '<p>A customer-specified identifier to track this reservation.</p> <note> <p>The Reserved Cache Node ID is an unique customer-specified identifier to track this reservation. If this parameter is not specified, ElastiCache automatically generates an identifier for the reservation.</p> </note> <p>Example: myreservationID</p>'
          schema:
            type: string
        - name: CacheNodeCount
          in: query
          required: false
          description: '<p>The number of cache node instances to reserve.</p> <p>Default: <code>1</code> </p>'
          schema:
            type: integer
        - name: Tags
          in: query
          required: false
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PurchaseReservedCacheNodesOffering
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PurchaseReservedCacheNodesOffering
      operationId: POST_PurchaseReservedCacheNodesOffering
      description: 'Allows you to purchase a reserved cache node offering. Reserved nodes are not eligible for cancellation and are non-refundable. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/reserved-nodes.html">Managing Costs with Reserved Nodes</a> for Redis or <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/reserved-nodes.html">Managing Costs with Reserved Nodes</a> for Memcached.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseReservedCacheNodesOfferingResult'
        '480':
          description: ReservedCacheNodesOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodesOfferingNotFoundFault'
        '481':
          description: ReservedCacheNodeAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeAlreadyExistsFault'
        '482':
          description: ReservedCacheNodeQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeQuotaExceededFault'
        '483':
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '484':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '485':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PurchaseReservedCacheNodesOfferingMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PurchaseReservedCacheNodesOffering
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=RebalanceSlotsInGlobalReplicationGroup:
    get:
      x-aws-operation-name: RebalanceSlotsInGlobalReplicationGroup
      operationId: GET_RebalanceSlotsInGlobalReplicationGroup
      description: Redistribute slots to ensure uniform distribution across existing shards in the cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebalanceSlotsInGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      parameters:
        - name: GlobalReplicationGroupId
          in: query
          required: true
          description: The name of the Global datastore
          schema:
            type: string
        - name: ApplyImmediately
          in: query
          required: true
          description: 'If <code>True</code>, redistribution is applied immediately.'
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebalanceSlotsInGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RebalanceSlotsInGlobalReplicationGroup
      operationId: POST_RebalanceSlotsInGlobalReplicationGroup
      description: Redistribute slots to ensure uniform distribution across existing shards in the cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebalanceSlotsInGlobalReplicationGroupResult'
        '480':
          description: GlobalReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
        '481':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RebalanceSlotsInGlobalReplicationGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebalanceSlotsInGlobalReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=RebootCacheCluster:
    get:
      x-aws-operation-name: RebootCacheCluster
      operationId: GET_RebootCacheCluster
      description: '<p>Reboots some, or all, of the cache nodes within a provisioned cluster. This operation applies any modified cache parameter groups to the cluster. The reboot operation takes place as soon as possible, and results in a momentary outage to the cluster. During the reboot, the cluster status is set to REBOOTING.</p> <p>The reboot causes the contents of the cache (for each cache node being rebooted) to be lost.</p> <p>When the reboot is complete, a cluster event is created.</p> <p>Rebooting a cluster is currently supported on Memcached and Redis (cluster mode disabled) clusters. Rebooting is not supported on Redis (cluster mode enabled) clusters.</p> <p>If you make changes to parameters that require a Redis (cluster mode enabled) cluster reboot for the changes to be applied, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Rebooting.html">Rebooting a Cluster</a> for an alternate process.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebootCacheClusterResult'
        '480':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '481':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
      parameters:
        - name: CacheClusterId
          in: query
          required: true
          description: The cluster identifier. This parameter is stored as a lowercase string.
          schema:
            type: string
        - name: CacheNodeIdsToReboot
          in: query
          required: true
          description: 'A list of cache node IDs to reboot. A node ID is a numeric identifier (0001, 0002, etc.). To reboot an entire cluster, specify all of the cache node IDs.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: CacheNodeId
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RebootCacheCluster
      operationId: POST_RebootCacheCluster
      description: '<p>Reboots some, or all, of the cache nodes within a provisioned cluster. This operation applies any modified cache parameter groups to the cluster. The reboot operation takes place as soon as possible, and results in a momentary outage to the cluster. During the reboot, the cluster status is set to REBOOTING.</p> <p>The reboot causes the contents of the cache (for each cache node being rebooted) to be lost.</p> <p>When the reboot is complete, a cluster event is created.</p> <p>Rebooting a cluster is currently supported on Memcached and Redis (cluster mode disabled) clusters. Rebooting is not supported on Redis (cluster mode enabled) clusters.</p> <p>If you make changes to parameters that require a Redis (cluster mode enabled) cluster reboot for the changes to be applied, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Rebooting.html">Rebooting a Cluster</a> for an alternate process.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebootCacheClusterResult'
        '480':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '481':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RebootCacheClusterMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=RemoveTagsFromResource:
    get:
      x-aws-operation-name: RemoveTagsFromResource
      operationId: GET_RemoveTagsFromResource
      description: 'Removes the tags identified by the <code>TagKeys</code> list from the named resource. A tag is a key-value pair where the key and value are case-sensitive. You can use tags to categorize and track all your ElastiCache resources, with the exception of global replication group. When you add or remove tags on replication groups, those actions will be replicated to all nodes in the replication group. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.ResourceLevelPermissions.html">Resource-level permissions</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '482':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '483':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
        '484':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '485':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '486':
          description: ReservedCacheNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
        '487':
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
        '488':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '489':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '490':
          description: InvalidARNFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
        '491':
          description: TagNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagNotFoundFault'
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: '<p>The Amazon Resource Name (ARN) of the resource from which you want the tags removed, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code> or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Service Namespaces</a>.</p>'
          schema:
            type: string
        - name: TagKeys
          in: query
          required: true
          description: A list of <code>TagKeys</code> identifying the tags you want removed from the named resource.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTagsFromResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RemoveTagsFromResource
      operationId: POST_RemoveTagsFromResource
      description: 'Removes the tags identified by the <code>TagKeys</code> list from the named resource. A tag is a key-value pair where the key and value are case-sensitive. You can use tags to categorize and track all your ElastiCache resources, with the exception of global replication group. When you add or remove tags on replication groups, those actions will be replicated to all nodes in the replication group. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.ResourceLevelPermissions.html">Resource-level permissions</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
        '480':
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
        '481':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '482':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '483':
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
        '484':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '485':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '486':
          description: ReservedCacheNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
        '487':
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
        '488':
          description: UserNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
        '489':
          description: UserGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
        '490':
          description: InvalidARNFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
        '491':
          description: TagNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveTagsFromResourceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTagsFromResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=ResetCacheParameterGroup:
    get:
      x-aws-operation-name: ResetCacheParameterGroup
      operationId: GET_ResetCacheParameterGroup
      description: 'Modifies the parameters of a cache parameter group to the engine or system default value. You can reset specific parameters by submitting a list of parameter names. To reset the entire cache parameter group, specify the <code>ResetAllParameters</code> and <code>CacheParameterGroupName</code> parameters.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNameMessage'
        '480':
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
        '481':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '484':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
      parameters:
        - name: CacheParameterGroupName
          in: query
          required: true
          description: The name of the cache parameter group to reset.
          schema:
            type: string
        - name: ResetAllParameters
          in: query
          required: false
          description: '<p>If <code>true</code>, all parameters in the cache parameter group are reset to their default values. If <code>false</code>, only the parameters listed by <code>ParameterNameValues</code> are reset to their default values.</p> <p>Valid values: <code>true</code> | <code>false</code> </p>'
          schema:
            type: boolean
        - name: ParameterNameValues
          in: query
          required: false
          description: 'An array of parameter names to reset to their default values. If <code>ResetAllParameters</code> is <code>true</code>, do not use <code>ParameterNameValues</code>. If <code>ResetAllParameters</code> is <code>false</code>, you must specify the name of at least one parameter to reset.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ParameterNameValue'
                - xml:
                    name: ParameterNameValue
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResetCacheParameterGroup
      operationId: POST_ResetCacheParameterGroup
      description: 'Modifies the parameters of a cache parameter group to the engine or system default value. You can reset specific parameters by submitting a list of parameter names. To reset the entire cache parameter group, specify the <code>ResetAllParameters</code> and <code>CacheParameterGroupName</code> parameters.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNameMessage'
        '480':
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
        '481':
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
        '482':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '484':
          description: InvalidGlobalReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetCacheParameterGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=RevokeCacheSecurityGroupIngress:
    get:
      x-aws-operation-name: RevokeCacheSecurityGroupIngress
      operationId: GET_RevokeCacheSecurityGroupIngress
      description: Revokes ingress from a cache security group. Use this operation to disallow access from an Amazon EC2 security group that had been previously authorized.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeCacheSecurityGroupIngressResult'
        '480':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '482':
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
        '483':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: CacheSecurityGroupName
          in: query
          required: true
          description: The name of the cache security group to revoke ingress from.
          schema:
            type: string
        - name: EC2SecurityGroupName
          in: query
          required: true
          description: The name of the Amazon EC2 security group to revoke access from.
          schema:
            type: string
        - name: EC2SecurityGroupOwnerId
          in: query
          required: true
          description: The Amazon account number of the Amazon EC2 security group owner. Note that this is not the same thing as an Amazon access key ID - you must provide a valid Amazon account number for this parameter.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeCacheSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RevokeCacheSecurityGroupIngress
      operationId: POST_RevokeCacheSecurityGroupIngress
      description: Revokes ingress from a cache security group. Use this operation to disallow access from an Amazon EC2 security group that had been previously authorized.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeCacheSecurityGroupIngressResult'
        '480':
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '482':
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
        '483':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RevokeCacheSecurityGroupIngressMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeCacheSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=StartMigration:
    get:
      x-aws-operation-name: StartMigration
      operationId: GET_StartMigration
      description: Start the migration of data.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartMigrationResponse'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: ReplicationGroupAlreadyUnderMigrationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupAlreadyUnderMigrationFault'
        '483':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: The ID of the replication group to which data should be migrated.
          schema:
            type: string
        - name: CustomerNodeEndpointList
          in: query
          required: true
          description: 'List of endpoints from which data should be migrated. For Redis (cluster mode disabled), list should have only one element.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CustomerNodeEndpoint'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - StartMigration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: StartMigration
      operationId: POST_StartMigration
      description: Start the migration of data.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartMigrationResponse'
        '480':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '481':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '482':
          description: ReplicationGroupAlreadyUnderMigrationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupAlreadyUnderMigrationFault'
        '483':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/StartMigrationMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - StartMigration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
  /#Action=TestFailover:
    get:
      x-aws-operation-name: TestFailover
      operationId: GET_TestFailover
      description: '<p>Represents the input of a <code>TestFailover</code> operation which test automatic failover on a specified node group (called shard in the console) in a replication group (called cluster in the console).</p> <p class="title"> <b>Note the following</b> </p> <ul> <li> <p>A customer can use this operation to test automatic failover on up to 5 shards (called node groups in the ElastiCache API and Amazon CLI) in any rolling 24-hour period.</p> </li> <li> <p>If calling this operation on shards in different clusters (called replication groups in the API and CLI), the calls can be made concurrently.</p> <p> </p> </li> <li> <p>If calling this operation multiple times on different shards in the same Redis (cluster mode enabled) replication group, the first node replacement must complete before a subsequent call can be made.</p> </li> <li> <p>To determine whether the node replacement is complete you can check Events using the Amazon ElastiCache console, the Amazon CLI, or the ElastiCache API. Look for the following automatic failover related events, listed here in order of occurrance:</p> <ol> <li> <p>Replication group message: <code>Test Failover API called for node group &lt;node-group-id&gt;</code> </p> </li> <li> <p>Cache cluster message: <code>Failover from primary node &lt;primary-node-id&gt; to replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Replication group message: <code>Failover from primary node &lt;primary-node-id&gt; to replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Cache cluster message: <code>Recovering cache nodes &lt;node-id&gt;</code> </p> </li> <li> <p>Cache cluster message: <code>Finished recovery for cache nodes &lt;node-id&gt;</code> </p> </li> </ol> <p>For more information see:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ECEvents.Viewing.html">Viewing ElastiCache Events</a> in the <i>ElastiCache User Guide</i> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeEvents.html">DescribeEvents</a> in the ElastiCache API Reference</p> </li> </ul> </li> </ul> <p>Also see, <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html#auto-failover-test">Testing Multi-AZ </a> in the <i>ElastiCache User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TestFailoverResult'
        '480':
          description: APICallRateForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/APICallRateForCustomerExceededFault'
        '481':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '482':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '483':
          description: NodeGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupNotFoundFault'
        '484':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '485':
          description: TestFailoverNotAvailableFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TestFailoverNotAvailableFault'
        '486':
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
        '487':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '488':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: 'The name of the replication group (console: cluster) whose automatic failover is being tested by this operation.'
          schema:
            type: string
        - name: NodeGroupId
          in: query
          required: true
          description: The name of the node group (called shard in the console) in this replication group on which automatic failover is to be tested. You may test automatic failover on up to 5 node groups in any rolling 24-hour period.
          schema:
            type: string
            pattern: \d+
            minLength: 1
            maxLength: 4
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - TestFailover
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: TestFailover
      operationId: POST_TestFailover
      description: '<p>Represents the input of a <code>TestFailover</code> operation which test automatic failover on a specified node group (called shard in the console) in a replication group (called cluster in the console).</p> <p class="title"> <b>Note the following</b> </p> <ul> <li> <p>A customer can use this operation to test automatic failover on up to 5 shards (called node groups in the ElastiCache API and Amazon CLI) in any rolling 24-hour period.</p> </li> <li> <p>If calling this operation on shards in different clusters (called replication groups in the API and CLI), the calls can be made concurrently.</p> <p> </p> </li> <li> <p>If calling this operation multiple times on different shards in the same Redis (cluster mode enabled) replication group, the first node replacement must complete before a subsequent call can be made.</p> </li> <li> <p>To determine whether the node replacement is complete you can check Events using the Amazon ElastiCache console, the Amazon CLI, or the ElastiCache API. Look for the following automatic failover related events, listed here in order of occurrance:</p> <ol> <li> <p>Replication group message: <code>Test Failover API called for node group &lt;node-group-id&gt;</code> </p> </li> <li> <p>Cache cluster message: <code>Failover from primary node &lt;primary-node-id&gt; to replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Replication group message: <code>Failover from primary node &lt;primary-node-id&gt; to replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Cache cluster message: <code>Recovering cache nodes &lt;node-id&gt;</code> </p> </li> <li> <p>Cache cluster message: <code>Finished recovery for cache nodes &lt;node-id&gt;</code> </p> </li> </ol> <p>For more information see:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ECEvents.Viewing.html">Viewing ElastiCache Events</a> in the <i>ElastiCache User Guide</i> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeEvents.html">DescribeEvents</a> in the ElastiCache API Reference</p> </li> </ul> </li> </ul> <p>Also see, <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html#auto-failover-test">Testing Multi-AZ </a> in the <i>ElastiCache User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TestFailoverResult'
        '480':
          description: APICallRateForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/APICallRateForCustomerExceededFault'
        '481':
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
        '482':
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
        '483':
          description: NodeGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupNotFoundFault'
        '484':
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
        '485':
          description: TestFailoverNotAvailableFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TestFailoverNotAvailableFault'
        '486':
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
        '487':
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '488':
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TestFailoverMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - TestFailover
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2015-02-02'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    TagListMessage:
      type: object
      properties:
        TagList:
          $ref: '#/components/schemas/TagList'
          description: A list of tags as key-value pairs.
      description: 'Represents the output from the <code>AddTagsToResource</code>, <code>ListTagsForResource</code>, and <code>RemoveTagsFromResource</code> operations.'
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/String'
          description: The key for the tag. May not be null.
        Value:
          $ref: '#/components/schemas/String'
          description: The tag's value. May be null.
      description: 'A tag that can be added to an ElastiCache cluster or replication group. Tags are composed of a Key/Value pair. You can use tags to categorize and track all your ElastiCache resources, with the exception of global replication group. When you add or remove tags on replication groups, those actions will be replicated to all nodes in the replication group. A tag with a null Value is permitted.'
    CacheClusterNotFoundFault: {}
    CacheParameterGroupNotFoundFault: {}
    CacheSecurityGroupNotFoundFault: {}
    CacheSubnetGroupNotFoundFault: {}
    InvalidReplicationGroupStateFault: {}
    ReplicationGroupNotFoundFault: {}
    ReservedCacheNodeNotFoundFault: {}
    SnapshotNotFoundFault: {}
    UserNotFoundFault: {}
    UserGroupNotFoundFault: {}
    TagQuotaPerResourceExceeded: {}
    InvalidARNFault: {}
    AuthorizeCacheSecurityGroupIngressResult:
      type: object
      properties:
        CacheSecurityGroup:
          $ref: '#/components/schemas/CacheSecurityGroup'
    InvalidCacheSecurityGroupStateFault: {}
    AuthorizationAlreadyExistsFault: {}
    InvalidParameterValueException: {}
    InvalidParameterCombinationException: {}
    UpdateActionResultsMessage:
      type: object
      properties:
        ProcessedUpdateActions:
          $ref: '#/components/schemas/ProcessedUpdateActionList'
          description: Update actions that have been processed successfully
        UnprocessedUpdateActions:
          $ref: '#/components/schemas/UnprocessedUpdateActionList'
          description: Update actions that haven't been processed successfully
    String:
      type: string
    ServiceUpdateNotFoundFault: {}
    CompleteMigrationResponse:
      type: object
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
    ReplicationGroupNotUnderMigrationFault: {}
    CopySnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    SnapshotAlreadyExistsFault: {}
    SnapshotQuotaExceededFault: {}
    InvalidSnapshotStateFault: {}
    CreateCacheClusterResult:
      type: object
      properties:
        CacheCluster:
          $ref: '#/components/schemas/CacheCluster'
    LogDeliveryConfigurationRequest:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/LogType'
          description: 'Refers to <a href="https://redis.io/commands/slowlog">slow-log</a>.'
        DestinationType:
          $ref: '#/components/schemas/DestinationType'
          description: Specify either <code>cloudwatch-logs</code> or <code>kinesis-firehose</code> as the destination type.
        DestinationDetails:
          $ref: '#/components/schemas/DestinationDetails'
          description: Configuration details of either a CloudWatch Logs destination or Kinesis Data Firehose destination.
        LogFormat:
          $ref: '#/components/schemas/LogFormat'
          description: Specifies either JSON or TEXT
        Enabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: Specify if log delivery is enabled. Default <code>true</code>.
      description: 'Specifies the destination, format and type of the logs. '
    CacheClusterAlreadyExistsFault: {}
    InsufficientCacheClusterCapacityFault: {}
    ClusterQuotaForCustomerExceededFault: {}
    NodeQuotaForClusterExceededFault: {}
    NodeQuotaForCustomerExceededFault: {}
    InvalidVPCNetworkStateFault: {}
    CreateCacheParameterGroupResult:
      type: object
      properties:
        CacheParameterGroup:
          $ref: '#/components/schemas/CacheParameterGroup'
    CacheParameterGroupQuotaExceededFault: {}
    CacheParameterGroupAlreadyExistsFault: {}
    InvalidCacheParameterGroupStateFault: {}
    CreateCacheSecurityGroupResult:
      type: object
      properties:
        CacheSecurityGroup:
          $ref: '#/components/schemas/CacheSecurityGroup'
    CacheSecurityGroupAlreadyExistsFault: {}
    CacheSecurityGroupQuotaExceededFault: {}
    CreateCacheSubnetGroupResult:
      type: object
      properties:
        CacheSubnetGroup:
          $ref: '#/components/schemas/CacheSubnetGroup'
    CacheSubnetGroupAlreadyExistsFault: {}
    CacheSubnetGroupQuotaExceededFault: {}
    CacheSubnetQuotaExceededFault: {}
    InvalidSubnet: {}
    SubnetNotAllowedFault: {}
    CreateGlobalReplicationGroupResult:
      type: object
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
    GlobalReplicationGroupAlreadyExistsFault: {}
    ServiceLinkedRoleNotFoundFault: {}
    CreateReplicationGroupResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
    NodeGroupConfiguration:
      type: object
      properties:
        NodeGroupId:
          $ref: '#/components/schemas/AllowedNodeGroupId'
          description: Either the ElastiCache for Redis supplied 4-digit id or a user supplied id for the node group these configuration values apply to.
        Slots:
          $ref: '#/components/schemas/String'
          description: '<p>A string that specifies the keyspace for a particular node group. Keyspaces range from 0 to 16,383. The string is in the format <code>startkey-endkey</code>.</p> <p>Example: <code>"0-3999"</code> </p>'
        ReplicaCount:
          $ref: '#/components/schemas/IntegerOptional'
          description: The number of read replica nodes in this node group (shard).
        PrimaryAvailabilityZone:
          $ref: '#/components/schemas/String'
          description: The Availability Zone where the primary node of this node group (shard) is launched.
        ReplicaAvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZonesList'
          description: A list of Availability Zones to be used for the read replicas. The number of Availability Zones in this list must match the value of <code>ReplicaCount</code> or <code>ReplicasPerNodeGroup</code> if not specified.
        PrimaryOutpostArn:
          $ref: '#/components/schemas/String'
          description: The outpost ARN of the primary node.
        ReplicaOutpostArns:
          $ref: '#/components/schemas/OutpostArnsList'
          description: The outpost ARN of the node replicas.
      description: 'Node group (shard) configuration options. Each node group (shard) configuration has the following: <code>Slots</code>, <code>PrimaryAvailabilityZone</code>, <code>ReplicaAvailabilityZones</code>, <code>ReplicaCount</code>.'
    UserGroupId:
      type: string
      pattern: '[a-zA-Z][a-zA-Z0-9\-]*'
      minLength: 1
    InvalidCacheClusterStateFault: {}
    ReplicationGroupAlreadyExistsFault: {}
    InvalidUserGroupStateFault: {}
    NodeGroupsPerReplicationGroupQuotaExceededFault: {}
    GlobalReplicationGroupNotFoundFault: {}
    InvalidGlobalReplicationGroupStateFault: {}
    CreateSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    SnapshotFeatureNotSupportedFault: {}
    User:
      type: object
      properties:
        UserId:
          $ref: '#/components/schemas/String'
          description: The ID of the user.
        UserName:
          $ref: '#/components/schemas/String'
          description: The username of the user.
        Status:
          $ref: '#/components/schemas/String'
          description: 'Indicates the user status. Can be "active", "modifying" or "deleting".'
        Engine:
          $ref: '#/components/schemas/EngineType'
          description: The current supported value is Redis.
        AccessString:
          $ref: '#/components/schemas/String'
          description: Access permissions string used for this user.
        UserGroupIds:
          $ref: '#/components/schemas/UserGroupIdList'
          description: Returns a list of the user group IDs the user belongs to.
        Authentication:
          $ref: '#/components/schemas/Authentication'
          description: Denotes whether the user requires a password to authenticate.
        ARN:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the user.
    UserAlreadyExistsFault: {}
    UserQuotaExceededFault: {}
    DuplicateUserNameFault: {}
    UserGroup:
      type: object
      properties:
        UserGroupId:
          $ref: '#/components/schemas/String'
          description: The ID of the user group.
        Status:
          $ref: '#/components/schemas/String'
          description: 'Indicates user group status. Can be "creating", "active", "modifying", "deleting".'
        Engine:
          $ref: '#/components/schemas/EngineType'
          description: 'The current supported value is Redis. '
        UserIds:
          $ref: '#/components/schemas/UserIdList'
          description: The list of user IDs that belong to the user group.
        PendingChanges:
          $ref: '#/components/schemas/UserGroupPendingChanges'
          description: A list of updates being applied to the user groups.
        ReplicationGroups:
          $ref: '#/components/schemas/UGReplicationGroupIdList'
          description: A list of replication groups that the user group can access.
        ARN:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the user group.
    UserId:
      type: string
      pattern: '[a-zA-Z][a-zA-Z0-9\-]*'
      minLength: 1
    UserGroupAlreadyExistsFault: {}
    DefaultUserRequired: {}
    UserGroupQuotaExceededFault: {}
    DecreaseNodeGroupsInGlobalReplicationGroupResult:
      type: object
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
    DecreaseReplicaCountResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
    ConfigureShard:
      type: object
      required:
        - NodeGroupId
        - NewReplicaCount
      properties:
        NodeGroupId:
          $ref: '#/components/schemas/AllowedNodeGroupId'
          description: 'The 4-digit id for the node group you are configuring. For Redis (cluster mode disabled) replication groups, the node group id is always 0001. To find a Redis (cluster mode enabled)''s node group''s (shard''s) id, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/shard-find-id.html">Finding a Shard''s Id</a>.'
        NewReplicaCount:
          $ref: '#/components/schemas/Integer'
          description: '<p>The number of replicas you want in this node group at the end of this operation. The maximum value for <code>NewReplicaCount</code> is 5. The minimum value depends upon the type of Redis replication group you are working with.</p> <p>The minimum number of replicas in a shard or replication group is:</p> <ul> <li> <p>Redis (cluster mode disabled)</p> <ul> <li> <p>If Multi-AZ: 1</p> </li> <li> <p>If Multi-AZ: 0</p> </li> </ul> </li> <li> <p>Redis (cluster mode enabled): 0 (though you will not be able to failover to a replica if your primary node fails)</p> </li> </ul>'
        PreferredAvailabilityZones:
          $ref: '#/components/schemas/PreferredAvailabilityZoneList'
          description: 'A list of <code>PreferredAvailabilityZone</code> strings that specify which availability zones the replication group''s nodes are to be in. The nummber of <code>PreferredAvailabilityZone</code> values must equal the value of <code>NewReplicaCount</code> plus 1 to account for the primary node. If this member of <code>ReplicaConfiguration</code> is omitted, ElastiCache for Redis selects the availability zone for each of the replicas.'
        PreferredOutpostArns:
          $ref: '#/components/schemas/PreferredOutpostArnList'
          description: The outpost ARNs in which the cache cluster is created.
      description: 'Node group (shard) configuration options when adding or removing replicas. Each node group (shard) configuration has the following members: NodeGroupId, NewReplicaCount, and PreferredAvailabilityZones. '
    NoOperationFault: {}
    DeleteCacheClusterResult:
      type: object
      properties:
        CacheCluster:
          $ref: '#/components/schemas/CacheCluster'
    CacheSubnetGroupInUse: {}
    DeleteGlobalReplicationGroupResult:
      type: object
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
    DeleteReplicationGroupResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
    DeleteSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    InvalidUserStateFault: {}
    DefaultUserAssociatedToUserGroupFault: {}
    CacheClusterMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: Provides an identifier to allow retrieval of paginated results.
        CacheClusters:
          $ref: '#/components/schemas/CacheClusterList'
          description: A list of clusters. Each item in the list contains detailed information about one cluster.
      description: Represents the output of a <code>DescribeCacheClusters</code> operation.
    CacheEngineVersionMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: Provides an identifier to allow retrieval of paginated results.
        CacheEngineVersions:
          $ref: '#/components/schemas/CacheEngineVersionList'
          description: A list of cache engine version details. Each element in the list contains detailed information about one cache engine version.
      description: Represents the output of a <a>DescribeCacheEngineVersions</a> operation.
    CacheParameterGroupsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: Provides an identifier to allow retrieval of paginated results.
        CacheParameterGroups:
          $ref: '#/components/schemas/CacheParameterGroupList'
          description: A list of cache parameter groups. Each element in the list contains detailed information about one cache parameter group.
      description: Represents the output of a <code>DescribeCacheParameterGroups</code> operation.
    CacheParameterGroupDetails:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: Provides an identifier to allow retrieval of paginated results.
        Parameters:
          $ref: '#/components/schemas/ParametersList'
          description: A list of <a>Parameter</a> instances.
        CacheNodeTypeSpecificParameters:
          $ref: '#/components/schemas/CacheNodeTypeSpecificParametersList'
          description: A list of parameters specific to a particular cache node type. Each element in the list contains detailed information about one parameter.
      description: Represents the output of a <code>DescribeCacheParameters</code> operation.
    CacheSecurityGroupMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: Provides an identifier to allow retrieval of paginated results.
        CacheSecurityGroups:
          $ref: '#/components/schemas/CacheSecurityGroups'
          description: A list of cache security groups. Each element in the list contains detailed information about one group.
      description: Represents the output of a <code>DescribeCacheSecurityGroups</code> operation.
    CacheSubnetGroupMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: Provides an identifier to allow retrieval of paginated results.
        CacheSubnetGroups:
          $ref: '#/components/schemas/CacheSubnetGroups'
          description: A list of cache subnet groups. Each element in the list contains detailed information about one group.
      description: Represents the output of a <code>DescribeCacheSubnetGroups</code> operation.
    DescribeEngineDefaultParametersResult:
      type: object
      properties:
        EngineDefaults:
          $ref: '#/components/schemas/EngineDefaults'
    EventsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: Provides an identifier to allow retrieval of paginated results.
        Events:
          $ref: '#/components/schemas/EventList'
          description: A list of events. Each element in the list contains detailed information about one event.
      description: Represents the output of a <code>DescribeEvents</code> operation.
    DescribeGlobalReplicationGroupsResult:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords. &gt;'
        GlobalReplicationGroups:
          $ref: '#/components/schemas/GlobalReplicationGroupList'
          description: Indicates the slot configuration and global identifier for each slice group.
    ReplicationGroupMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: Provides an identifier to allow retrieval of paginated results.
        ReplicationGroups:
          $ref: '#/components/schemas/ReplicationGroupList'
          description: A list of replication groups. Each item in the list contains detailed information about one replication group.
      description: Represents the output of a <code>DescribeReplicationGroups</code> operation.
    ReservedCacheNodeMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: Provides an identifier to allow retrieval of paginated results.
        ReservedCacheNodes:
          $ref: '#/components/schemas/ReservedCacheNodeList'
          description: A list of reserved cache nodes. Each element in the list contains detailed information about one node.
      description: Represents the output of a <code>DescribeReservedCacheNodes</code> operation.
    ReservedCacheNodesOfferingMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: Provides an identifier to allow retrieval of paginated results.
        ReservedCacheNodesOfferings:
          $ref: '#/components/schemas/ReservedCacheNodesOfferingList'
          description: A list of reserved cache node offerings. Each element in the list contains detailed information about one offering.
      description: Represents the output of a <code>DescribeReservedCacheNodesOfferings</code> operation.
    ReservedCacheNodesOfferingNotFoundFault: {}
    ServiceUpdatesMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
        ServiceUpdates:
          $ref: '#/components/schemas/ServiceUpdateList'
          description: A list of service updates
    ServiceUpdateStatus:
      type: string
      enum:
        - available
        - cancelled
        - expired
    DescribeSnapshotsListMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
        Snapshots:
          $ref: '#/components/schemas/SnapshotList'
          description: A list of snapshots. Each item in the list contains detailed information about one snapshot.
      description: Represents the output of a <code>DescribeSnapshots</code> operation.
    UpdateActionsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
        UpdateActions:
          $ref: '#/components/schemas/UpdateActionList'
          description: Returns a list of update actions
    TStamp:
      type: string
      format: date-time
    UpdateActionStatus:
      type: string
      enum:
        - not-applied
        - waiting-to-start
        - in-progress
        - stopping
        - stopped
        - complete
        - scheduling
        - scheduled
        - not-applicable
    DescribeUserGroupsResult:
      type: object
      properties:
        UserGroups:
          $ref: '#/components/schemas/UserGroupList'
          description: Returns a list of user groups.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords. &gt;'
    DescribeUsersResult:
      type: object
      properties:
        Users:
          $ref: '#/components/schemas/UserList'
          description: A list of users.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords. &gt;'
    Filter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: '#/components/schemas/FilterName'
          description: 'The property being filtered. For example, UserId.'
        Values:
          $ref: '#/components/schemas/FilterValueList'
          description: 'The property values to filter on. For example, "user-123".'
      description: Used to streamline results of a search based on the property being filtered.
    DisassociateGlobalReplicationGroupResult:
      type: object
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
    FailoverGlobalReplicationGroupResult:
      type: object
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
    IncreaseNodeGroupsInGlobalReplicationGroupResult:
      type: object
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
    RegionalConfiguration:
      type: object
      required:
        - ReplicationGroupId
        - ReplicationGroupRegion
        - ReshardingConfiguration
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the secondary cluster
        ReplicationGroupRegion:
          $ref: '#/components/schemas/String'
          description: The Amazon region where the cluster is stored
        ReshardingConfiguration:
          $ref: '#/components/schemas/ReshardingConfigurationList'
          description: 'A list of <code>PreferredAvailabilityZones</code> objects that specifies the configuration of a node group in the resharded cluster. '
      description: 'A list of the replication groups '
    IncreaseReplicaCountResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
    InvalidKMSKeyFault: {}
    AllowedNodeTypeModificationsMessage:
      type: object
      properties:
        ScaleUpModifications:
          $ref: '#/components/schemas/NodeTypeList'
          description: '<p>A string list, each element of which specifies a cache node type which you can use to scale your cluster or replication group.</p> <p>When scaling up a Redis cluster or replication group using <code>ModifyCacheCluster</code> or <code>ModifyReplicationGroup</code>, use a value from this list for the <code>CacheNodeType</code> parameter.</p>'
        ScaleDownModifications:
          $ref: '#/components/schemas/NodeTypeList'
          description: 'A string list, each element of which specifies a cache node type which you can use to scale your cluster or replication group. When scaling down a Redis cluster or replication group using ModifyCacheCluster or ModifyReplicationGroup, use a value from this list for the CacheNodeType parameter. '
      description: Represents the allowed node types you can use to modify your cluster or replication group.
    ModifyCacheClusterResult:
      type: object
      properties:
        CacheCluster:
          $ref: '#/components/schemas/CacheCluster'
    CacheParameterGroupNameMessage:
      type: object
      properties:
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache parameter group.
      description: '<p>Represents the output of one of the following operations:</p> <ul> <li> <p> <code>ModifyCacheParameterGroup</code> </p> </li> <li> <p> <code>ResetCacheParameterGroup</code> </p> </li> </ul>'
    ParameterNameValue:
      type: object
      properties:
        ParameterName:
          $ref: '#/components/schemas/String'
          description: The name of the parameter.
        ParameterValue:
          $ref: '#/components/schemas/String'
          description: The value of the parameter.
      description: Describes a name-value pair that is used to update the value of a parameter.
    ModifyCacheSubnetGroupResult:
      type: object
      properties:
        CacheSubnetGroup:
          $ref: '#/components/schemas/CacheSubnetGroup'
    SubnetInUse: {}
    ModifyGlobalReplicationGroupResult:
      type: object
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
    ModifyReplicationGroupResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
    ModifyReplicationGroupShardConfigurationResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
    ReshardingConfiguration:
      type: object
      properties:
        NodeGroupId:
          $ref: '#/components/schemas/AllowedNodeGroupId'
          description: Either the ElastiCache for Redis supplied 4-digit id or a user supplied id for the node group these configuration values apply to.
        PreferredAvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZonesList'
          description: A list of preferred availability zones for the nodes in this cluster.
      description: A list of <code>PreferredAvailabilityZones</code> objects that specifies the configuration of a node group in the resharded cluster.
    AllowedNodeGroupId:
      type: string
      pattern: \d+
      minLength: 1
      maxLength: 4
    PurchaseReservedCacheNodesOfferingResult:
      type: object
      properties:
        ReservedCacheNode:
          $ref: '#/components/schemas/ReservedCacheNode'
    ReservedCacheNodeAlreadyExistsFault: {}
    ReservedCacheNodeQuotaExceededFault: {}
    RebalanceSlotsInGlobalReplicationGroupResult:
      type: object
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
    RebootCacheClusterResult:
      type: object
      properties:
        CacheCluster:
          $ref: '#/components/schemas/CacheCluster'
    TagNotFoundFault: {}
    RevokeCacheSecurityGroupIngressResult:
      type: object
      properties:
        CacheSecurityGroup:
          $ref: '#/components/schemas/CacheSecurityGroup'
    AuthorizationNotFoundFault: {}
    StartMigrationResponse:
      type: object
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
    CustomerNodeEndpoint:
      type: object
      properties:
        Address:
          $ref: '#/components/schemas/String'
          description: The address of the node endpoint
        Port:
          $ref: '#/components/schemas/IntegerOptional'
          description: The port of the node endpoint
      description: The endpoint from which data should be migrated.
    ReplicationGroupAlreadyUnderMigrationFault: {}
    TestFailoverResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
    APICallRateForCustomerExceededFault: {}
    NodeGroupNotFoundFault: {}
    TestFailoverNotAvailableFault: {}
    AZMode:
      type: string
      enum:
        - single-az
        - cross-az
    AccessString:
      type: string
      pattern: .*\S.*
    TagList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Tag'
          - xml:
              name: Tag
    AddTagsToResourceMessage:
      type: object
      required:
        - ResourceName
        - Tags
      title: AddTagsToResourceMessage
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
          description: '<p>The Amazon Resource Name (ARN) of the resource to which the tags are to be added, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code> or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>. ElastiCache resources are <i>cluster</i> and <i>snapshot</i>.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Service Namespaces</a>.</p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
      description: Represents the input of an AddTagsToResource operation.
    NodeTypeList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    AuthTokenUpdateStatus:
      type: string
      enum:
        - SETTING
        - ROTATING
    AuthTokenUpdateStrategyType:
      type: string
      enum:
        - SET
        - ROTATE
        - DELETE
    AuthenticationType:
      type: string
      enum:
        - password
        - no-password
    IntegerOptional:
      type: integer
    Authentication:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/AuthenticationType'
          description: Indicates whether the user requires a password to authenticate.
        PasswordCount:
          $ref: '#/components/schemas/IntegerOptional'
          description: The number of passwords belonging to the user. The maximum is two.
      description: Indicates whether the user requires a password to authenticate.
    AuthorizeCacheSecurityGroupIngressMessage:
      type: object
      required:
        - CacheSecurityGroupName
        - EC2SecurityGroupName
        - EC2SecurityGroupOwnerId
      title: AuthorizeCacheSecurityGroupIngressMessage
      properties:
        CacheSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The cache security group that allows network ingress.
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The Amazon EC2 security group to be authorized for ingress to the cache security group.
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
          description: The Amazon account number of the Amazon EC2 security group owner. Note that this is not the same thing as an Amazon access key ID - you must provide a valid Amazon account number for this parameter.
      description: Represents the input of an AuthorizeCacheSecurityGroupIngress operation.
    CacheSecurityGroup:
      type: object
      properties:
        OwnerId:
          $ref: '#/components/schemas/String'
          description: The Amazon account ID of the cache security group owner.
        CacheSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache security group.
        Description:
          $ref: '#/components/schemas/String'
          description: The description of the cache security group.
        EC2SecurityGroups:
          $ref: '#/components/schemas/EC2SecurityGroupList'
          description: A list of Amazon EC2 security groups that are associated with this cache security group.
        ARN:
          $ref: '#/components/schemas/String'
          description: 'The ARN of the cache security group,'
      description: '<p>Represents the output of one of the following operations:</p> <ul> <li> <p> <code>AuthorizeCacheSecurityGroupIngress</code> </p> </li> <li> <p> <code>CreateCacheSecurityGroup</code> </p> </li> <li> <p> <code>RevokeCacheSecurityGroupIngress</code> </p> </li> </ul>'
    AutomaticFailoverStatus:
      type: string
      enum:
        - enabled
        - disabled
        - enabling
        - disabling
    AvailabilityZone:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the Availability Zone.
      description: Describes an Availability Zone in which the cluster is launched.
    AvailabilityZonesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: AvailabilityZone
    ReplicationGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/String'
      maxItems: 20
    CacheClusterIdList:
      type: array
      items:
        $ref: '#/components/schemas/String'
      maxItems: 20
    BatchApplyUpdateActionMessage:
      type: object
      required:
        - ServiceUpdateName
      title: BatchApplyUpdateActionMessage
      properties:
        ReplicationGroupIds:
          $ref: '#/components/schemas/ReplicationGroupIdList'
          description: The replication group IDs
        CacheClusterIds:
          $ref: '#/components/schemas/CacheClusterIdList'
          description: The cache cluster IDs
        ServiceUpdateName:
          $ref: '#/components/schemas/String'
          description: The unique ID of the service update
    BatchStopUpdateActionMessage:
      type: object
      required:
        - ServiceUpdateName
      title: BatchStopUpdateActionMessage
      properties:
        ReplicationGroupIds:
          $ref: '#/components/schemas/ReplicationGroupIdList'
          description: The replication group IDs
        CacheClusterIds:
          $ref: '#/components/schemas/CacheClusterIdList'
          description: The cache cluster IDs
        ServiceUpdateName:
          $ref: '#/components/schemas/String'
          description: The unique ID of the service update
    Boolean:
      type: boolean
    BooleanOptional:
      type: boolean
    Endpoint:
      type: object
      properties:
        Address:
          $ref: '#/components/schemas/String'
          description: The DNS hostname of the cache node.
        Port:
          $ref: '#/components/schemas/Integer'
          description: The port number that the cache engine is listening on.
      description: Represents the information required for client programs to connect to a cache node.
    PendingModifiedValues:
      type: object
      properties:
        NumCacheNodes:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The new number of cache nodes for the cluster.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 40.</p>'
        CacheNodeIdsToRemove:
          $ref: '#/components/schemas/CacheNodeIdsList'
          description: 'A list of cache node IDs that are being removed (or will be removed) from the cluster. A node ID is a 4-digit numeric identifier (0001, 0002, etc.).'
        EngineVersion:
          $ref: '#/components/schemas/String'
          description: The new cache engine version that the cluster runs.
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: The cache node type that this cluster or replication group is scaled to.
        AuthTokenStatus:
          $ref: '#/components/schemas/AuthTokenUpdateStatus'
          description: The auth token status
        LogDeliveryConfigurations:
          $ref: '#/components/schemas/PendingLogDeliveryConfigurationList'
          description: 'The log delivery configurations being modified '
      description: 'A group of settings that are applied to the cluster in the future, or that are currently being applied.'
    NotificationConfiguration:
      type: object
      properties:
        TopicArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) that identifies the topic.
        TopicStatus:
          $ref: '#/components/schemas/String'
          description: The current state of the topic.
      description: Describes a notification topic and its status. Notification topics are used for publishing ElastiCache events to subscribers using Amazon Simple Notification Service (SNS).
    CacheSecurityGroupMembershipList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CacheSecurityGroupMembership'
          - xml:
              name: CacheSecurityGroup
    CacheParameterGroupStatus:
      type: object
      properties:
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache parameter group.
        ParameterApplyStatus:
          $ref: '#/components/schemas/String'
          description: The status of parameter updates.
        CacheNodeIdsToReboot:
          $ref: '#/components/schemas/CacheNodeIdsList'
          description: 'A list of the cache node IDs which need to be rebooted for parameter changes to be applied. A node ID is a numeric identifier (0001, 0002, etc.).'
      description: Status of the cache parameter group.
    CacheNodeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CacheNode'
          - xml:
              name: CacheNode
    SecurityGroupMembershipList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupMembership'
    LogDeliveryConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LogDeliveryConfiguration'
          - xml:
              name: LogDeliveryConfiguration
    CacheCluster:
      type: object
      properties:
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: The user-supplied identifier of the cluster. This identifier is a unique key that identifies a cluster.
        ConfigurationEndpoint:
          $ref: '#/components/schemas/Endpoint'
          description: '<p>Represents a Memcached cluster endpoint which can be used by an application to connect to any node in the cluster. The configuration endpoint will always have <code>.cfg</code> in it.</p> <p>Example: <code>mem-3.9dvc4r<u>.cfg</u>.usw2.cache.amazonaws.com:11211</code> </p>'
        ClientDownloadLandingPage:
          $ref: '#/components/schemas/String'
          description: The URL of the web page where you can download the latest ElastiCache client library.
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the compute and memory capacity node type for the cluster.</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
        Engine:
          $ref: '#/components/schemas/String'
          description: The name of the cache engine (<code>memcached</code> or <code>redis</code>) to be used for this cluster.
        EngineVersion:
          $ref: '#/components/schemas/String'
          description: The version of the cache engine that is used in this cluster.
        CacheClusterStatus:
          $ref: '#/components/schemas/String'
          description: 'The current state of this cluster, one of the following values: <code>available</code>, <code>creating</code>, <code>deleted</code>, <code>deleting</code>, <code>incompatible-network</code>, <code>modifying</code>, <code>rebooting cluster nodes</code>, <code>restore-failed</code>, or <code>snapshotting</code>.'
        NumCacheNodes:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of cache nodes in the cluster.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 40.</p>'
        PreferredAvailabilityZone:
          $ref: '#/components/schemas/String'
          description: The name of the Availability Zone in which the cluster is located or "Multiple" if the cache nodes are located in different Availability Zones.
        PreferredOutpostArn:
          $ref: '#/components/schemas/String'
          description: The outpost ARN in which the cache cluster is created.
        CacheClusterCreateTime:
          $ref: '#/components/schemas/TStamp'
          description: The date and time when the cluster was created.
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
          description: '<p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>'
        PendingModifiedValues:
          $ref: '#/components/schemas/PendingModifiedValues'
        NotificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
          description: 'Describes a notification topic and its status. Notification topics are used for publishing ElastiCache events to subscribers using Amazon Simple Notification Service (SNS). '
        CacheSecurityGroups:
          $ref: '#/components/schemas/CacheSecurityGroupMembershipList'
          description: 'A list of cache security group elements, composed of name and status sub-elements.'
        CacheParameterGroup:
          $ref: '#/components/schemas/CacheParameterGroupStatus'
          description: Status of the cache parameter group.
        CacheSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache subnet group associated with the cluster.
        CacheNodes:
          $ref: '#/components/schemas/CacheNodeList'
          description: A list of cache nodes that are members of the cluster.
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/Boolean'
          description: This parameter is currently disabled.
        SecurityGroups:
          $ref: '#/components/schemas/SecurityGroupMembershipList'
          description: A list of VPC Security Groups associated with the cluster.
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: 'The replication group to which this cluster belongs. If this field is empty, the cluster is not associated with any replication group.'
        SnapshotRetentionLimit:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days for which ElastiCache retains automatic cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <important> <p> If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p> </important>'
        SnapshotWindow:
          $ref: '#/components/schemas/String'
          description: '<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your cluster.</p> <p>Example: <code>05:00-09:00</code> </p>'
        AuthTokenEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A flag that enables using an <code>AuthToken</code> (password) when issuing Redis commands.</p> <p>Default: <code>false</code> </p>'
        AuthTokenLastModifiedDate:
          $ref: '#/components/schemas/TStamp'
          description: The date the auth token was last modified
        TransitEncryptionEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A flag that enables in-transit encryption when set to <code>true</code>.</p> <p>You cannot modify the value of <code>TransitEncryptionEnabled</code> after the cluster is created. To enable in-transit encryption on a cluster you must set <code>TransitEncryptionEnabled</code> to <code>true</code> when you create a cluster.</p> <p> <b>Required:</b> Only available when creating a replication group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code> or later.</p> <p>Default: <code>false</code> </p>'
        AtRestEncryptionEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A flag that enables encryption at-rest when set to <code>true</code>.</p> <p>You cannot modify the value of <code>AtRestEncryptionEnabled</code> after the cluster is created. To enable at-rest encryption on a cluster you must set <code>AtRestEncryptionEnabled</code> to <code>true</code> when you create a cluster.</p> <p> <b>Required:</b> Only available when creating a replication group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code> or later.</p> <p>Default: <code>false</code> </p>'
        ARN:
          $ref: '#/components/schemas/String'
          description: The ARN (Amazon Resource Name) of the cache cluster.
        ReplicationGroupLogDeliveryEnabled:
          $ref: '#/components/schemas/Boolean'
          description: A boolean value indicating whether log delivery is enabled for the replication group.
        LogDeliveryConfigurations:
          $ref: '#/components/schemas/LogDeliveryConfigurationList'
          description: 'Returns the destination, format and type of the logs.'
      description: Contains all of the attributes of a specific cluster.
    CacheClusterList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CacheCluster'
          - xml:
              name: CacheCluster
    CacheEngineVersion:
      type: object
      properties:
        Engine:
          $ref: '#/components/schemas/String'
          description: The name of the cache engine.
        EngineVersion:
          $ref: '#/components/schemas/String'
          description: The version number of the cache engine.
        CacheParameterGroupFamily:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the cache parameter group family associated with this cache engine.</p> <p>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.x</code> | </p>'
        CacheEngineDescription:
          $ref: '#/components/schemas/String'
          description: The description of the cache engine.
        CacheEngineVersionDescription:
          $ref: '#/components/schemas/String'
          description: The description of the cache engine version.
      description: Provides all of the details about a particular cache engine version.
    CacheEngineVersionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CacheEngineVersion'
          - xml:
              name: CacheEngineVersion
    CacheNode:
      type: object
      properties:
        CacheNodeId:
          $ref: '#/components/schemas/String'
          description: 'The cache node identifier. A node ID is a numeric identifier (0001, 0002, etc.). The combination of cluster ID and node ID uniquely identifies every cache node used in a customer''s Amazon account.'
        CacheNodeStatus:
          $ref: '#/components/schemas/String'
          description: 'The current state of this cache node, one of the following values: <code>available</code>, <code>creating</code>, <code>rebooting</code>, or <code>deleting</code>.'
        CacheNodeCreateTime:
          $ref: '#/components/schemas/TStamp'
          description: The date and time when the cache node was created.
        Endpoint:
          $ref: '#/components/schemas/Endpoint'
          description: The hostname for connecting to this cache node.
        ParameterGroupStatus:
          $ref: '#/components/schemas/String'
          description: The status of the parameter group applied to this cache node.
        SourceCacheNodeId:
          $ref: '#/components/schemas/String'
          description: 'The ID of the primary node to which this read replica node is synchronized. If this field is empty, this node is not associated with a primary cluster.'
        CustomerAvailabilityZone:
          $ref: '#/components/schemas/String'
          description: The Availability Zone where this node was created and now resides.
        CustomerOutpostArn:
          $ref: '#/components/schemas/String'
          description: The customer outpost ARN of the cache node.
      description: '<p>Represents an individual cache node within a cluster. Each cache node runs its own instance of the cluster''s protocol-compliant caching software - either Memcached or Redis.</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
    CacheNodeIdsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: CacheNodeId
    CacheNodeTypeSpecificValueList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CacheNodeTypeSpecificValue'
          - xml:
              name: CacheNodeTypeSpecificValue
    ChangeType:
      type: string
      enum:
        - immediate
        - requires-reboot
    CacheNodeTypeSpecificParameter:
      type: object
      properties:
        ParameterName:
          $ref: '#/components/schemas/String'
          description: The name of the parameter.
        Description:
          $ref: '#/components/schemas/String'
          description: A description of the parameter.
        Source:
          $ref: '#/components/schemas/String'
          description: The source of the parameter value.
        DataType:
          $ref: '#/components/schemas/String'
          description: The valid data type for the parameter.
        AllowedValues:
          $ref: '#/components/schemas/String'
          description: The valid range of values for the parameter.
        IsModifiable:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.
        MinimumEngineVersion:
          $ref: '#/components/schemas/String'
          description: The earliest cache engine version to which the parameter can apply.
        CacheNodeTypeSpecificValues:
          $ref: '#/components/schemas/CacheNodeTypeSpecificValueList'
          description: A list of cache node types and their corresponding values for this parameter.
        ChangeType:
          $ref: '#/components/schemas/ChangeType'
          description: 'Indicates whether a change to the parameter is applied immediately or requires a reboot for the change to be applied. You can force a reboot or wait until the next maintenance window''s reboot. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Rebooting.html">Rebooting a Cluster</a>.'
      description: 'A parameter that has a different value for each cache node type it is applied to. For example, in a Redis cluster, a <code>cache.m1.large</code> cache node type would have a larger <code>maxmemory</code> value than a <code>cache.m1.small</code> type.'
    CacheNodeTypeSpecificParametersList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CacheNodeTypeSpecificParameter'
          - xml:
              name: CacheNodeTypeSpecificParameter
    CacheNodeTypeSpecificValue:
      type: object
      properties:
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: The cache node type for which this value applies.
        Value:
          $ref: '#/components/schemas/String'
          description: The value for the cache node type.
      description: A value that applies only to a certain cache node type.
    NodeUpdateStatus:
      type: string
      enum:
        - not-applied
        - waiting-to-start
        - in-progress
        - stopping
        - stopped
        - complete
    NodeUpdateInitiatedBy:
      type: string
      enum:
        - system
        - customer
    CacheNodeUpdateStatus:
      type: object
      properties:
        CacheNodeId:
          $ref: '#/components/schemas/String'
          description: The node ID of the cache cluster
        NodeUpdateStatus:
          $ref: '#/components/schemas/NodeUpdateStatus'
          description: The update status of the node
        NodeDeletionDate:
          $ref: '#/components/schemas/TStamp'
          description: The deletion date of the node
        NodeUpdateStartDate:
          $ref: '#/components/schemas/TStamp'
          description: The start date of the update for a node
        NodeUpdateEndDate:
          $ref: '#/components/schemas/TStamp'
          description: The end date of the update for a node
        NodeUpdateInitiatedBy:
          $ref: '#/components/schemas/NodeUpdateInitiatedBy'
          description: Reflects whether the update was initiated by the customer or automatically applied
        NodeUpdateInitiatedDate:
          $ref: '#/components/schemas/TStamp'
          description: The date when the update is triggered
        NodeUpdateStatusModifiedDate:
          $ref: '#/components/schemas/TStamp'
          description: The date when the NodeUpdateStatus was last modified&gt;
      description: The status of the service update on the cache node
    CacheNodeUpdateStatusList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CacheNodeUpdateStatus'
          - xml:
              name: CacheNodeUpdateStatus
    CacheParameterGroup:
      type: object
      properties:
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache parameter group.
        CacheParameterGroupFamily:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the cache parameter group family that this cache parameter group is compatible with.</p> <p>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.x</code> | </p>'
        Description:
          $ref: '#/components/schemas/String'
          description: The description for this cache parameter group.
        IsGlobal:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether the parameter group is associated with a Global datastore
        ARN:
          $ref: '#/components/schemas/String'
          description: The ARN (Amazon Resource Name) of the cache parameter group.
      description: Represents the output of a <code>CreateCacheParameterGroup</code> operation.
    ParametersList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Parameter'
          - xml:
              name: Parameter
    CacheParameterGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CacheParameterGroup'
          - xml:
              name: CacheParameterGroup
    EC2SecurityGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EC2SecurityGroup'
          - xml:
              name: EC2SecurityGroup
    CacheSecurityGroupMembership:
      type: object
      properties:
        CacheSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache security group.
        Status:
          $ref: '#/components/schemas/String'
          description: 'The membership status in the cache security group. The status changes when a cache security group is modified, or when the cache security groups assigned to a cluster are modified.'
      description: Represents a cluster's status within a particular cache security group.
    CacheSecurityGroups:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CacheSecurityGroup'
          - xml:
              name: CacheSecurityGroup
    CacheSecurityGroupNameList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: CacheSecurityGroupName
    SubnetList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Subnet'
          - xml:
              name: Subnet
    CacheSubnetGroup:
      type: object
      properties:
        CacheSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache subnet group.
        CacheSubnetGroupDescription:
          $ref: '#/components/schemas/String'
          description: The description of the cache subnet group.
        VpcId:
          $ref: '#/components/schemas/String'
          description: The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group.
        Subnets:
          $ref: '#/components/schemas/SubnetList'
          description: A list of subnets associated with the cache subnet group.
        ARN:
          $ref: '#/components/schemas/String'
          description: The ARN (Amazon Resource Name) of the cache subnet group.
      description: '<p>Represents the output of one of the following operations:</p> <ul> <li> <p> <code>CreateCacheSubnetGroup</code> </p> </li> <li> <p> <code>ModifyCacheSubnetGroup</code> </p> </li> </ul>'
    CacheSubnetGroups:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CacheSubnetGroup'
          - xml:
              name: CacheSubnetGroup
    CloudWatchLogsDestinationDetails:
      type: object
      properties:
        LogGroup:
          $ref: '#/components/schemas/String'
          description: The name of the CloudWatch Logs log group.
      description: The configuration details of the CloudWatch Logs destination.
    ClusterIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: ClusterId
    CompleteMigrationMessage:
      type: object
      required:
        - ReplicationGroupId
      title: CompleteMigrationMessage
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The ID of the replication group to which data is being migrated.
        Force:
          $ref: '#/components/schemas/Boolean'
          description: Forces the migration to stop without ensuring that data is in sync. It is recommended to use this option only to abort the migration and not recommended when application wants to continue migration to ElastiCache.
    ReplicationGroup:
      type: object
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The identifier for the replication group.
        Description:
          $ref: '#/components/schemas/String'
          description: The user supplied description of the replication group.
        GlobalReplicationGroupInfo:
          $ref: '#/components/schemas/GlobalReplicationGroupInfo'
          description: The name of the Global datastore and role of this replication group in the Global datastore.
        Status:
          $ref: '#/components/schemas/String'
          description: 'The current state of this replication group - <code>creating</code>, <code>available</code>, <code>modifying</code>, <code>deleting</code>, <code>create-failed</code>, <code>snapshotting</code>.'
        PendingModifiedValues:
          $ref: '#/components/schemas/ReplicationGroupPendingModifiedValues'
          description: 'A group of settings to be applied to the replication group, either immediately or during the next maintenance window.'
        MemberClusters:
          $ref: '#/components/schemas/ClusterIdList'
          description: The names of all the cache clusters that are part of this replication group.
        NodeGroups:
          $ref: '#/components/schemas/NodeGroupList'
          description: 'A list of node groups in this replication group. For Redis (cluster mode disabled) replication groups, this is a single-element list. For Redis (cluster mode enabled) replication groups, the list contains an entry for each node group (shard).'
        SnapshottingClusterId:
          $ref: '#/components/schemas/String'
          description: The cluster ID that is used as the daily snapshot source for the replication group.
        AutomaticFailover:
          $ref: '#/components/schemas/AutomaticFailoverStatus'
          description: Indicates the status of automatic failover for this Redis replication group.
        MultiAZ:
          $ref: '#/components/schemas/MultiAZStatus'
          description: 'A flag indicating if you have Multi-AZ enabled to enhance fault tolerance. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html">Minimizing Downtime: Multi-AZ</a> '
        ConfigurationEndpoint:
          $ref: '#/components/schemas/Endpoint'
          description: The configuration endpoint for this replication group. Use the configuration endpoint to connect to this replication group.
        SnapshotRetentionLimit:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days for which ElastiCache retains automatic cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <important> <p> If the value of <code>SnapshotRetentionLimit</code> is set to zero (0), backups are turned off.</p> </important>'
        SnapshotWindow:
          $ref: '#/components/schemas/String'
          description: '<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>'
        ClusterEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A flag indicating whether or not this replication group is cluster enabled; i.e., whether its data can be partitioned across multiple shards (API/CLI: node groups).</p> <p>Valid values: <code>true</code> | <code>false</code> </p>'
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: The name of the compute and memory capacity node type for each node in the replication group.
        AuthTokenEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A flag that enables using an <code>AuthToken</code> (password) when issuing Redis commands.</p> <p>Default: <code>false</code> </p>'
        AuthTokenLastModifiedDate:
          $ref: '#/components/schemas/TStamp'
          description: The date the auth token was last modified
        TransitEncryptionEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A flag that enables in-transit encryption when set to <code>true</code>.</p> <p>You cannot modify the value of <code>TransitEncryptionEnabled</code> after the cluster is created. To enable in-transit encryption on a cluster you must set <code>TransitEncryptionEnabled</code> to <code>true</code> when you create a cluster.</p> <p> <b>Required:</b> Only available when creating a replication group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code> or later.</p> <p>Default: <code>false</code> </p>'
        AtRestEncryptionEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A flag that enables encryption at-rest when set to <code>true</code>.</p> <p>You cannot modify the value of <code>AtRestEncryptionEnabled</code> after the cluster is created. To enable encryption at-rest on a cluster you must set <code>AtRestEncryptionEnabled</code> to <code>true</code> when you create a cluster.</p> <p> <b>Required:</b> Only available when creating a replication group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code> or later.</p> <p>Default: <code>false</code> </p>'
        MemberClustersOutpostArns:
          $ref: '#/components/schemas/ReplicationGroupOutpostArnList'
          description: The outpost ARNs of the replication group's member clusters.
        KmsKeyId:
          $ref: '#/components/schemas/String'
          description: The ID of the KMS key used to encrypt the disk in the cluster.
        ARN:
          $ref: '#/components/schemas/String'
          description: The ARN (Amazon Resource Name) of the replication group.
        UserGroupIds:
          $ref: '#/components/schemas/UserGroupIdList'
          description: The list of user group IDs that have access to the replication group.
        LogDeliveryConfigurations:
          $ref: '#/components/schemas/LogDeliveryConfigurationList'
          description: 'Returns the destination, format and type of the logs. '
        ReplicationGroupCreateTime:
          $ref: '#/components/schemas/TStamp'
          description: The date and time when the cluster was created.
      description: Contains all of the attributes of a specific Redis replication group.
    Integer:
      type: integer
    PreferredAvailabilityZoneList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: PreferredAvailabilityZone
    PreferredOutpostArnList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: PreferredOutpostArn
    CopySnapshotMessage:
      type: object
      required:
        - SourceSnapshotName
        - TargetSnapshotName
      title: CopySnapshotMessage
      properties:
        SourceSnapshotName:
          $ref: '#/components/schemas/String'
          description: The name of an existing snapshot from which to make a copy.
        TargetSnapshotName:
          $ref: '#/components/schemas/String'
          description: 'A name for the snapshot copy. ElastiCache does not permit overwriting a snapshot, therefore this name must be unique within its context - ElastiCache or an Amazon S3 bucket if exporting.'
        TargetBucket:
          $ref: '#/components/schemas/String'
          description: '<p>The Amazon S3 bucket to which the snapshot is exported. This parameter is used only when exporting a snapshot for external access.</p> <p>When using this parameter to export a snapshot, be sure Amazon ElastiCache has the needed permissions to this S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the <i>Amazon ElastiCache User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html">Exporting a Snapshot</a> in the <i>Amazon ElastiCache User Guide</i>.</p>'
        KmsKeyId:
          $ref: '#/components/schemas/String'
          description: The ID of the KMS key used to encrypt the target snapshot.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
      description: Represents the input of a <code>CopySnapshotMessage</code> operation.
    Snapshot:
      type: object
      properties:
        SnapshotName:
          $ref: '#/components/schemas/String'
          description: 'The name of a snapshot. For an automatic snapshot, the name is system-generated. For a manual snapshot, this is the user-provided name.'
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The unique identifier of the source replication group.
        ReplicationGroupDescription:
          $ref: '#/components/schemas/String'
          description: A description of the source replication group.
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: The user-supplied identifier of the source cluster.
        SnapshotStatus:
          $ref: '#/components/schemas/String'
          description: 'The status of the snapshot. Valid values: <code>creating</code> | <code>available</code> | <code>restoring</code> | <code>copying</code> | <code>deleting</code>.'
        SnapshotSource:
          $ref: '#/components/schemas/String'
          description: Indicates whether the snapshot is from an automatic backup (<code>automated</code>) or was created manually (<code>manual</code>).
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the compute and memory capacity node type for the source cluster.</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
        Engine:
          $ref: '#/components/schemas/String'
          description: The name of the cache engine (<code>memcached</code> or <code>redis</code>) used by the source cluster.
        EngineVersion:
          $ref: '#/components/schemas/String'
          description: The version of the cache engine version that is used by the source cluster.
        NumCacheNodes:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of cache nodes in the source cluster.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 40.</p>'
        PreferredAvailabilityZone:
          $ref: '#/components/schemas/String'
          description: The name of the Availability Zone in which the source cluster is located.
        PreferredOutpostArn:
          $ref: '#/components/schemas/String'
          description: The ARN (Amazon Resource Name) of the preferred outpost.
        CacheClusterCreateTime:
          $ref: '#/components/schemas/TStamp'
          description: The date and time when the source cluster was created.
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
          description: '<p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>'
        TopicArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) for the topic used by the source cluster for publishing notifications.
        Port:
          $ref: '#/components/schemas/IntegerOptional'
          description: The port number used by each cache nodes in the source cluster.
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The cache parameter group that is associated with the source cluster.
        CacheSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache subnet group associated with the source cluster.
        VpcId:
          $ref: '#/components/schemas/String'
          description: The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group for the source cluster.
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/Boolean'
          description: This parameter is currently disabled.
        SnapshotRetentionLimit:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>For an automatic snapshot, the number of days for which ElastiCache retains the snapshot before deleting it.</p> <p>For manual snapshots, this field reflects the <code>SnapshotRetentionLimit</code> for the source cluster when the snapshot was created. This field is otherwise ignored: Manual snapshots do not expire, and can only be deleted using the <code>DeleteSnapshot</code> operation. </p> <p> <b>Important</b> If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p>'
        SnapshotWindow:
          $ref: '#/components/schemas/String'
          description: The daily time range during which ElastiCache takes daily snapshots of the source cluster.
        NumNodeGroups:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The number of node groups (shards) in this snapshot. When restoring from a snapshot, the number of node groups (shards) in the snapshot and in the restored replication group must be the same.'
        AutomaticFailover:
          $ref: '#/components/schemas/AutomaticFailoverStatus'
          description: Indicates the status of automatic failover for the source Redis replication group.
        NodeSnapshots:
          $ref: '#/components/schemas/NodeSnapshotList'
          description: A list of the cache nodes in the source cluster.
        KmsKeyId:
          $ref: '#/components/schemas/String'
          description: The ID of the KMS key used to encrypt the snapshot.
        ARN:
          $ref: '#/components/schemas/String'
          description: The ARN (Amazon Resource Name) of the snapshot.
      description: Represents a copy of an entire Redis cluster as of the time when the snapshot was taken.
    SecurityGroupIdsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: SecurityGroupId
    SnapshotArnsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: SnapshotArn
    OutpostMode:
      type: string
      enum:
        - single-outpost
        - cross-outpost
    LogDeliveryConfigurationRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LogDeliveryConfigurationRequest'
          - xml:
              name: LogDeliveryConfigurationRequest
    CreateCacheClusterMessage:
      type: object
      required:
        - CacheClusterId
      title: CreateCacheClusterMessage
      properties:
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: '<p>The node group (shard) identifier. This parameter is stored as a lowercase string.</p> <p> <b>Constraints:</b> </p> <ul> <li> <p>A name must contain from 1 to 50 alphanumeric characters or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>A name cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: '<p>The ID of the replication group to which this cluster should belong. If this parameter is specified, the cluster is added to the specified replication group as a read replica; otherwise, the cluster is a standalone primary that is not part of any replication group.</p> <p>If the specified replication group is Multi-AZ enabled and the Availability Zone is not specified, the cluster is created in Availability Zones that provide the best spread of read replicas across Availability Zones.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>'
        AZMode:
          $ref: '#/components/schemas/AZMode'
          description: '<p>Specifies whether the nodes in this Memcached cluster are created in a single Availability Zone or created across multiple Availability Zones in the cluster''s region.</p> <p>This parameter is only supported for Memcached clusters.</p> <p>If the <code>AZMode</code> and <code>PreferredAvailabilityZones</code> are not specified, ElastiCache assumes <code>single-az</code> mode.</p>'
        PreferredAvailabilityZone:
          $ref: '#/components/schemas/String'
          description: '<p>The EC2 Availability Zone in which the cluster is created.</p> <p>All nodes belonging to this cluster are placed in the preferred Availability Zone. If you want to create your nodes across multiple Availability Zones, use <code>PreferredAvailabilityZones</code>.</p> <p>Default: System chosen Availability Zone.</p>'
        PreferredAvailabilityZones:
          $ref: '#/components/schemas/PreferredAvailabilityZoneList'
          description: '<p>A list of the Availability Zones in which cache nodes are created. The order of the zones in the list is not important.</p> <p>This option is only supported on Memcached.</p> <note> <p>If you are creating your cluster in an Amazon VPC (recommended) you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group.</p> <p>The number of Availability Zones listed must equal the value of <code>NumCacheNodes</code>.</p> </note> <p>If you want all the nodes in the same Availability Zone, use <code>PreferredAvailabilityZone</code> instead, or repeat the Availability Zone multiple times in the list.</p> <p>Default: System chosen Availability Zones.</p>'
        NumCacheNodes:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The initial number of cache nodes that the cluster has.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 40.</p> <p>If you need more than 40 nodes for your Memcached cluster, please fill out the ElastiCache Limit Increase Request form at <a href="http://aws.amazon.com/contact-us/elasticache-node-limit-request/">http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.</p>'
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: '<p>The compute and memory capacity of the nodes in the node group (shard).</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
        Engine:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the cache engine to be used for this cluster.</p> <p>Valid values for this parameter are: <code>memcached</code> | <code>redis</code> </p>'
        EngineVersion:
          $ref: '#/components/schemas/String'
          description: '<p>The version number of the cache engine to be used for this cluster. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster or replication group and create it anew with the earlier engine version. </p>'
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: 'The name of the parameter group to associate with this cluster. If this argument is omitted, the default parameter group for the specified engine is used. You cannot use any parameter group which has <code>cluster-enabled=''yes''</code> when creating a cluster.'
        CacheSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the subnet group to be used for the cluster.</p> <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (Amazon VPC).</p> <important> <p>If you''re going to launch your cluster in an Amazon VPC, you need to create a subnet group before you start creating a cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html">Subnets and Subnet Groups</a>.</p> </important>'
        CacheSecurityGroupNames:
          $ref: '#/components/schemas/CacheSecurityGroupNameList'
          description: <p>A list of security group names to associate with this cluster.</p> <p>Use this parameter only when you are creating a cluster outside of an Amazon Virtual Private Cloud (Amazon VPC).</p>
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIdsList'
          description: <p>One or more VPC security groups associated with the cluster.</p> <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (Amazon VPC).</p>
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to be added to this resource.
        SnapshotArns:
          $ref: '#/components/schemas/SnapshotArnsList'
          description: '<p>A single-element string list containing an Amazon Resource Name (ARN) that uniquely identifies a Redis RDB snapshot file stored in Amazon S3. The snapshot file is used to populate the node group (shard). The Amazon S3 object name in the ARN cannot contain any commas.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note> <p>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>'
        SnapshotName:
          $ref: '#/components/schemas/String'
          description: <p>The name of a Redis snapshot from which to restore data into the new node group (shard). The snapshot status changes to <code>restoring</code> while the new node group (shard) is being created.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
          description: 'Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for <code>ddd</code> are:'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
          description: The port number on which each of the cache nodes accepts connections.
        NotificationTopicArn:
          $ref: '#/components/schemas/String'
          description: <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be the same as the cluster owner.</p> </note>
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
          description: This parameter is currently disabled.
        SnapshotRetentionLimit:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot taken today is retained for 5 days before being deleted.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note> <p>Default: 0 (i.e., automatic backups are disabled for this cache cluster).</p>'
        SnapshotWindow:
          $ref: '#/components/schemas/String'
          description: '<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>'
        AuthToken:
          $ref: '#/components/schemas/String'
          description: '<p> <b>Reserved parameter.</b> The password used to access a password protected server.</p> <p>Password constraints:</p> <ul> <li> <p>Must be only printable ASCII characters.</p> </li> <li> <p>Must be at least 16 characters and no more than 128 characters in length.</p> </li> <li> <p>The only permitted printable special characters are !, &amp;, #, $, ^, &lt;, &gt;, and -. Other printable special characters cannot be used in the AUTH token.</p> </li> </ul> <p>For more information, see <a href="http://redis.io/commands/AUTH">AUTH password</a> at http://redis.io/commands/AUTH.</p>'
        OutpostMode:
          $ref: '#/components/schemas/OutpostMode'
          description: Specifies whether the nodes in the cluster are created in a single outpost or across multiple outposts.
        PreferredOutpostArn:
          $ref: '#/components/schemas/String'
          description: The outpost ARN in which the cache cluster is created.
        PreferredOutpostArns:
          $ref: '#/components/schemas/PreferredOutpostArnList'
          description: The outpost ARNs in which the cache cluster is created.
        LogDeliveryConfigurations:
          $ref: '#/components/schemas/LogDeliveryConfigurationRequestList'
          description: 'Specifies the destination, format and type of the logs. '
      description: Represents the input of a CreateCacheCluster operation.
    CreateCacheParameterGroupMessage:
      type: object
      required:
        - CacheParameterGroupName
        - CacheParameterGroupFamily
        - Description
      title: CreateCacheParameterGroupMessage
      properties:
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: A user-specified name for the cache parameter group.
        CacheParameterGroupFamily:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the cache parameter group family that the cache parameter group can be used with.</p> <p>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.x</code> | </p>'
        Description:
          $ref: '#/components/schemas/String'
          description: A user-specified description for the cache parameter group.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
      description: Represents the input of a <code>CreateCacheParameterGroup</code> operation.
    CreateCacheSecurityGroupMessage:
      type: object
      required:
        - CacheSecurityGroupName
        - Description
      title: CreateCacheSecurityGroupMessage
      properties:
        CacheSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>A name for the cache security group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Cannot be the word "Default".</p> <p>Example: <code>mysecuritygroup</code> </p>'
        Description:
          $ref: '#/components/schemas/String'
          description: A description for the cache security group.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
      description: Represents the input of a <code>CreateCacheSecurityGroup</code> operation.
    SubnetIdentifierList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: SubnetIdentifier
    CreateCacheSubnetGroupMessage:
      type: object
      required:
        - CacheSubnetGroupName
        - CacheSubnetGroupDescription
        - SubnetIds
      title: CreateCacheSubnetGroupMessage
      properties:
        CacheSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>A name for the cache subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code> </p>'
        CacheSubnetGroupDescription:
          $ref: '#/components/schemas/String'
          description: A description for the cache subnet group.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdentifierList'
          description: A list of VPC subnet IDs for the cache subnet group.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
      description: Represents the input of a <code>CreateCacheSubnetGroup</code> operation.
    CreateGlobalReplicationGroupMessage:
      type: object
      required:
        - GlobalReplicationGroupIdSuffix
        - PrimaryReplicationGroupId
      title: CreateGlobalReplicationGroupMessage
      properties:
        GlobalReplicationGroupIdSuffix:
          $ref: '#/components/schemas/String'
          description: '<p>The suffix name of a Global datastore. Amazon ElastiCache automatically applies a prefix to the Global datastore ID when it is created. Each Amazon Region has its own prefix. For instance, a Global datastore ID created in the US-West-1 region will begin with "dsdfu" along with the suffix name you provide. The suffix, combined with the auto-generated prefix, guarantees uniqueness of the Global datastore name across multiple regions. </p> <p>For a full list of Amazon Regions and their respective Global datastore iD prefixes, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastores-CLI.html">Using the Amazon CLI with Global datastores </a>.</p>'
        GlobalReplicationGroupDescription:
          $ref: '#/components/schemas/String'
          description: Provides details of the Global datastore
        PrimaryReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the primary cluster that accepts writes and will replicate updates to the secondary cluster.
    GlobalReplicationGroup:
      type: object
      properties:
        GlobalReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the Global datastore
        GlobalReplicationGroupDescription:
          $ref: '#/components/schemas/String'
          description: The optional description of the Global datastore
        Status:
          $ref: '#/components/schemas/String'
          description: The status of the Global datastore
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: The cache node type of the Global datastore
        Engine:
          $ref: '#/components/schemas/String'
          description: The Elasticache engine. For Redis only.
        EngineVersion:
          $ref: '#/components/schemas/String'
          description: The Elasticache Redis engine version.
        Members:
          $ref: '#/components/schemas/GlobalReplicationGroupMemberList'
          description: The replication groups that comprise the Global datastore.
        ClusterEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: A flag that indicates whether the Global datastore is cluster enabled.
        GlobalNodeGroups:
          $ref: '#/components/schemas/GlobalNodeGroupList'
          description: Indicates the slot configuration and global identifier for each slice group.
        AuthTokenEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A flag that enables using an <code>AuthToken</code> (password) when issuing Redis commands.</p> <p>Default: <code>false</code> </p>'
        TransitEncryptionEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A flag that enables in-transit encryption when set to true. You cannot modify the value of <code>TransitEncryptionEnabled</code> after the cluster is created. To enable in-transit encryption on a cluster you must set <code>TransitEncryptionEnabled</code> to true when you create a cluster. </p> <p> <b>Required:</b> Only available when creating a replication group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code> or later.</p>'
        AtRestEncryptionEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A flag that enables encryption at rest when set to <code>true</code>.</p> <p>You cannot modify the value of <code>AtRestEncryptionEnabled</code> after the replication group is created. To enable encryption at rest on a replication group you must set <code>AtRestEncryptionEnabled</code> to <code>true</code> when you create the replication group. </p> <p> <b>Required:</b> Only available when creating a replication group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code> or later.</p>'
        ARN:
          $ref: '#/components/schemas/String'
          description: The ARN (Amazon Resource Name) of the global replication group.
      description: '<p>Consists of a primary cluster that accepts writes and an associated secondary cluster that resides in a different Amazon region. The secondary cluster accepts only reads. The primary cluster automatically replicates updates to the secondary cluster.</p> <ul> <li> <p>The <b>GlobalReplicationGroupIdSuffix</b> represents the name of the Global datastore, which is what you use to associate a secondary cluster.</p> </li> </ul>'
    NodeGroupConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NodeGroupConfiguration'
          - xml:
              name: NodeGroupConfiguration
    UserGroupIdListInput:
      type: array
      items:
        $ref: '#/components/schemas/UserGroupId'
      minItems: 1
    CreateReplicationGroupMessage:
      type: object
      required:
        - ReplicationGroupId
        - ReplicationGroupDescription
      title: CreateReplicationGroupMessage
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: '<p>The replication group identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>A name must contain from 1 to 40 alphanumeric characters or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>A name cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
        ReplicationGroupDescription:
          $ref: '#/components/schemas/String'
          description: A user-created description for the replication group.
        GlobalReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the Global datastore
        PrimaryClusterId:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier of the cluster that serves as the primary for this replication group. This cluster must already exist and have a status of <code>available</code>.</p> <p>This parameter is not required if <code>NumCacheClusters</code>, <code>NumNodeGroups</code>, or <code>ReplicasPerNodeGroup</code> is specified.</p>'
        AutomaticFailoverEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>Specifies whether a read-only replica is automatically promoted to read/write primary if the existing primary fails.</p> <p> <code>AutomaticFailoverEnabled</code> must be enabled for Redis (cluster mode enabled) replication groups.</p> <p>Default: false</p>'
        MultiAZEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'A flag indicating if you have Multi-AZ enabled to enhance fault tolerance. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html">Minimizing Downtime: Multi-AZ</a>.'
        NumCacheClusters:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of clusters this replication group initially has.</p> <p>This parameter is not used if there is more than one node group (shard). You should use <code>ReplicasPerNodeGroup</code> instead.</p> <p>If <code>AutomaticFailoverEnabled</code> is <code>true</code>, the value of this parameter must be at least 2. If <code>AutomaticFailoverEnabled</code> is <code>false</code> you can omit this parameter (it will default to 1), or you can explicitly set it to a value between 2 and 6.</p> <p>The maximum permitted value for <code>NumCacheClusters</code> is 6 (1 primary plus 5 replicas).</p>'
        PreferredCacheClusterAZs:
          $ref: '#/components/schemas/AvailabilityZonesList'
          description: '<p>A list of EC2 Availability Zones in which the replication group''s clusters are created. The order of the Availability Zones in the list is the order in which clusters are allocated. The primary cluster is created in the first AZ in the list.</p> <p>This parameter is not used if there is more than one node group (shard). You should use <code>NodeGroupConfiguration</code> instead.</p> <note> <p>If you are creating your replication group in an Amazon VPC (recommended), you can only locate clusters in Availability Zones associated with the subnets in the selected subnet group.</p> <p>The number of Availability Zones listed must equal the value of <code>NumCacheClusters</code>.</p> </note> <p>Default: system chosen Availability Zones.</p>'
        NumNodeGroups:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>An optional parameter that specifies the number of node groups (shards) for this Redis (cluster mode enabled) replication group. For Redis (cluster mode disabled) either omit this parameter or set it to 1.</p> <p>Default: 1</p>'
        ReplicasPerNodeGroup:
          $ref: '#/components/schemas/IntegerOptional'
          description: An optional parameter that specifies the number of replica nodes in each node group (shard). Valid values are 0 to 5.
        NodeGroupConfiguration:
          $ref: '#/components/schemas/NodeGroupConfigurationList'
          description: '<p>A list of node group (shard) configuration options. Each node group (shard) configuration has the following members: <code>PrimaryAvailabilityZone</code>, <code>ReplicaAvailabilityZones</code>, <code>ReplicaCount</code>, and <code>Slots</code>.</p> <p>If you''re creating a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group, you can use this parameter to individually configure each node group (shard), or you can omit this parameter. However, it is required when seeding a Redis (cluster mode enabled) cluster from a S3 rdb file. You must configure each node group (shard) using this parameter because you must specify the slots for each node group.</p>'
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: '<p>The compute and memory capacity of the nodes in the node group (shard).</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
        Engine:
          $ref: '#/components/schemas/String'
          description: The name of the cache engine to be used for the clusters in this replication group. Must be Redis.
        EngineVersion:
          $ref: '#/components/schemas/String'
          description: '<p>The version number of the cache engine to be used for the clusters in this replication group. To view the supported cache engine versions, use the <code>DescribeCacheEngineVersions</code> operation.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting a Cache Engine and Version</a>) in the <i>ElastiCache User Guide</i>, but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster or replication group and create it anew with the earlier engine version. </p>'
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used.</p> <p>If you are running Redis version 3.2.4 or later, only one node group (shard), and want to use a default parameter group, we recommend that you specify the parameter group by name. </p> <ul> <li> <p>To create a Redis (cluster mode disabled) replication group, use <code>CacheParameterGroupName=default.redis3.2</code>.</p> </li> <li> <p>To create a Redis (cluster mode enabled) replication group, use <code>CacheParameterGroupName=default.redis3.2.cluster.on</code>.</p> </li> </ul>'
        CacheSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the cache subnet group to be used for the replication group.</p> <important> <p>If you''re going to launch your cluster in an Amazon VPC, you need to create a subnet group before you start creating a cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html">Subnets and Subnet Groups</a>.</p> </important>'
        CacheSecurityGroupNames:
          $ref: '#/components/schemas/CacheSecurityGroupNameList'
          description: A list of cache security group names to associate with this replication group.
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIdsList'
          description: <p>One or more Amazon VPC security groups associated with this replication group.</p> <p>Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud (Amazon VPC).</p>
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags to be added to this resource. Tags are comma-separated key,value pairs (e.g. Key=<code>myKey</code>, Value=<code>myKeyValue</code>. You can include multiple tags as shown following: Key=<code>myKey</code>, Value=<code>myKeyValue</code> Key=<code>mySecondKey</code>, Value=<code>mySecondKeyValue</code>. Tags on replication groups will be replicated to all nodes.'
        SnapshotArns:
          $ref: '#/components/schemas/SnapshotArnsList'
          description: '<p>A list of Amazon Resource Names (ARN) that uniquely identify the Redis RDB snapshot files stored in Amazon S3. The snapshot files are used to populate the new replication group. The Amazon S3 object name in the ARN cannot contain any commas. The new replication group will have the number of node groups (console: shards) specified by the parameter <i>NumNodeGroups</i> or the number of node groups configured by <i>NodeGroupConfiguration</i> regardless of the number of ARNs specified here.</p> <p>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>'
        SnapshotName:
          $ref: '#/components/schemas/String'
          description: The name of a snapshot from which to restore data into the new replication group. The snapshot status changes to <code>restoring</code> while the new replication group is being created.
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
          description: '<p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for <code>ddd</code> are:</p> <p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
          description: The port number on which each member of the replication group accepts connections.
        NotificationTopicArn:
          $ref: '#/components/schemas/String'
          description: <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be the same as the cluster owner.</p> </note>
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
          description: This parameter is currently disabled.
        SnapshotRetentionLimit:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <p>Default: 0 (i.e., automatic backups are disabled for this cluster).</p>'
        SnapshotWindow:
          $ref: '#/components/schemas/String'
          description: '<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p>'
        AuthToken:
          $ref: '#/components/schemas/String'
          description: '<p> <b>Reserved parameter.</b> The password used to access a password protected server.</p> <p> <code>AuthToken</code> can be specified only on replication groups where <code>TransitEncryptionEnabled</code> is <code>true</code>.</p> <important> <p>For HIPAA compliance, you must specify <code>TransitEncryptionEnabled</code> as <code>true</code>, an <code>AuthToken</code>, and a <code>CacheSubnetGroup</code>.</p> </important> <p>Password constraints:</p> <ul> <li> <p>Must be only printable ASCII characters.</p> </li> <li> <p>Must be at least 16 characters and no more than 128 characters in length.</p> </li> <li> <p>The only permitted printable special characters are !, &amp;, #, $, ^, &lt;, &gt;, and -. Other printable special characters cannot be used in the AUTH token.</p> </li> </ul> <p>For more information, see <a href="http://redis.io/commands/AUTH">AUTH password</a> at http://redis.io/commands/AUTH.</p>'
        TransitEncryptionEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A flag that enables in-transit encryption when set to <code>true</code>.</p> <p>You cannot modify the value of <code>TransitEncryptionEnabled</code> after the cluster is created. To enable in-transit encryption on a cluster you must set <code>TransitEncryptionEnabled</code> to <code>true</code> when you create a cluster.</p> <p>This parameter is valid only if the <code>Engine</code> parameter is <code>redis</code>, the <code>EngineVersion</code> parameter is <code>3.2.6</code>, <code>4.x</code> or later, and the cluster is being created in an Amazon VPC.</p> <p>If you enable in-transit encryption, you must also specify a value for <code>CacheSubnetGroup</code>.</p> <p> <b>Required:</b> Only available when creating a replication group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code> or later.</p> <p>Default: <code>false</code> </p> <important> <p>For HIPAA compliance, you must specify <code>TransitEncryptionEnabled</code> as <code>true</code>, an <code>AuthToken</code>, and a <code>CacheSubnetGroup</code>.</p> </important>'
        AtRestEncryptionEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A flag that enables encryption at rest when set to <code>true</code>.</p> <p>You cannot modify the value of <code>AtRestEncryptionEnabled</code> after the replication group is created. To enable encryption at rest on a replication group you must set <code>AtRestEncryptionEnabled</code> to <code>true</code> when you create the replication group. </p> <p> <b>Required:</b> Only available when creating a replication group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code> or later.</p> <p>Default: <code>false</code> </p>'
        KmsKeyId:
          $ref: '#/components/schemas/String'
          description: The ID of the KMS key used to encrypt the disk in the cluster.
        UserGroupIds:
          $ref: '#/components/schemas/UserGroupIdListInput'
          description: The user group to associate with the replication group.
        LogDeliveryConfigurations:
          $ref: '#/components/schemas/LogDeliveryConfigurationRequestList'
          description: 'Specifies the destination, format and type of the logs.'
      description: Represents the input of a <code>CreateReplicationGroup</code> operation.
    CreateSnapshotMessage:
      type: object
      required:
        - SnapshotName
      title: CreateSnapshotMessage
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The identifier of an existing replication group. The snapshot is created from this replication group.
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: The identifier of an existing cluster. The snapshot is created from this cluster.
        SnapshotName:
          $ref: '#/components/schemas/String'
          description: A name for the snapshot being created.
        KmsKeyId:
          $ref: '#/components/schemas/String'
          description: The ID of the KMS key used to encrypt the snapshot.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
      description: Represents the input of a <code>CreateSnapshot</code> operation.
    EngineType:
      type: string
      pattern: '[a-zA-Z]*'
    UserIdListInput:
      type: array
      items:
        $ref: '#/components/schemas/UserId'
      minItems: 1
    CreateUserGroupMessage:
      type: object
      required:
        - UserGroupId
        - Engine
      title: CreateUserGroupMessage
      properties:
        UserGroupId:
          $ref: '#/components/schemas/String'
          description: The ID of the user group.
        Engine:
          $ref: '#/components/schemas/EngineType'
          description: 'The current supported value is Redis. '
        UserIds:
          $ref: '#/components/schemas/UserIdListInput'
          description: The list of user IDs that belong to the user group.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
    UserName:
      type: string
      minLength: 1
    PasswordListInput:
      type: array
      items:
        $ref: '#/components/schemas/String'
      minItems: 1
    CreateUserMessage:
      type: object
      required:
        - UserId
        - UserName
        - Engine
        - AccessString
      title: CreateUserMessage
      properties:
        UserId:
          $ref: '#/components/schemas/UserId'
          description: The ID of the user.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: The username of the user.
        Engine:
          $ref: '#/components/schemas/EngineType'
          description: 'The current supported value is Redis. '
        Passwords:
          $ref: '#/components/schemas/PasswordListInput'
          description: Passwords used for this user. You can create up to two passwords for each user.
        AccessString:
          $ref: '#/components/schemas/AccessString'
          description: Access permissions string used for this user.
        NoPasswordRequired:
          $ref: '#/components/schemas/BooleanOptional'
          description: Indicates a password is not required for this user.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
    CustomerNodeEndpointList:
      type: array
      items:
        $ref: '#/components/schemas/CustomerNodeEndpoint'
    GlobalNodeGroupIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: GlobalNodeGroupId
    DecreaseNodeGroupsInGlobalReplicationGroupMessage:
      type: object
      required:
        - GlobalReplicationGroupId
        - NodeGroupCount
        - ApplyImmediately
      title: DecreaseNodeGroupsInGlobalReplicationGroupMessage
      properties:
        GlobalReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the Global datastore
        NodeGroupCount:
          $ref: '#/components/schemas/Integer'
          description: The number of node groups (shards) that results from the modification of the shard configuration
        GlobalNodeGroupsToRemove:
          $ref: '#/components/schemas/GlobalNodeGroupIdList'
          description: 'If the value of NodeGroupCount is less than the current number of node groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain is required. GlobalNodeGroupsToRemove is a list of NodeGroupIds to remove from the cluster. ElastiCache for Redis will attempt to remove all node groups listed by GlobalNodeGroupsToRemove from the cluster. '
        GlobalNodeGroupsToRetain:
          $ref: '#/components/schemas/GlobalNodeGroupIdList'
          description: 'If the value of NodeGroupCount is less than the current number of node groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain is required. GlobalNodeGroupsToRetain is a list of NodeGroupIds to retain from the cluster. ElastiCache for Redis will attempt to retain all node groups listed by GlobalNodeGroupsToRetain from the cluster. '
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates that the shard reconfiguration process begins immediately. At present, the only permitted value for this parameter is true. '
    ReplicaConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ConfigureShard'
          - xml:
              name: ConfigureShard
    RemoveReplicasList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    DecreaseReplicaCountMessage:
      type: object
      required:
        - ReplicationGroupId
        - ApplyImmediately
      title: DecreaseReplicaCountMessage
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The id of the replication group from which you want to remove replica nodes.
        NewReplicaCount:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of read replica nodes you want at the completion of this operation. For Redis (cluster mode disabled) replication groups, this is the number of replica nodes in the replication group. For Redis (cluster mode enabled) replication groups, this is the number of replica nodes in each of the replication group''s node groups.</p> <p>The minimum number of replicas in a shard or replication group is:</p> <ul> <li> <p>Redis (cluster mode disabled)</p> <ul> <li> <p>If Multi-AZ is enabled: 1</p> </li> <li> <p>If Multi-AZ is not enabled: 0</p> </li> </ul> </li> <li> <p>Redis (cluster mode enabled): 0 (though you will not be able to failover to a replica if your primary node fails)</p> </li> </ul>'
        ReplicaConfiguration:
          $ref: '#/components/schemas/ReplicaConfigurationList'
          description: 'A list of <code>ConfigureShard</code> objects that can be used to configure each shard in a Redis (cluster mode enabled) replication group. The <code>ConfigureShard</code> has three members: <code>NewReplicaCount</code>, <code>NodeGroupId</code>, and <code>PreferredAvailabilityZones</code>.'
        ReplicasToRemove:
          $ref: '#/components/schemas/RemoveReplicasList'
          description: A list of the node ids to remove from the replication group or node group (shard).
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
          description: 'If <code>True</code>, the number of replica nodes is decreased immediately. <code>ApplyImmediately=False</code> is not currently supported.'
    DeleteCacheClusterMessage:
      type: object
      required:
        - CacheClusterId
      title: DeleteCacheClusterMessage
      properties:
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: The cluster identifier for the cluster to be deleted. This parameter is not case sensitive.
        FinalSnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: 'The user-supplied name of a final cluster snapshot. This is the unique name that identifies the snapshot. ElastiCache creates the snapshot, and then deletes the cluster immediately afterward.'
      description: Represents the input of a <code>DeleteCacheCluster</code> operation.
    DeleteCacheParameterGroupMessage:
      type: object
      required:
        - CacheParameterGroupName
      title: DeleteCacheParameterGroupMessage
      properties:
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: <p>The name of the cache parameter group to delete.</p> <note> <p>The specified cache security group must not be associated with any clusters.</p> </note>
      description: Represents the input of a <code>DeleteCacheParameterGroup</code> operation.
    DeleteCacheSecurityGroupMessage:
      type: object
      required:
        - CacheSecurityGroupName
      title: DeleteCacheSecurityGroupMessage
      properties:
        CacheSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: <p>The name of the cache security group to delete.</p> <note> <p>You cannot delete the default security group.</p> </note>
      description: Represents the input of a <code>DeleteCacheSecurityGroup</code> operation.
    DeleteCacheSubnetGroupMessage:
      type: object
      required:
        - CacheSubnetGroupName
      title: DeleteCacheSubnetGroupMessage
      properties:
        CacheSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the cache subnet group to delete.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p>'
      description: Represents the input of a <code>DeleteCacheSubnetGroup</code> operation.
    DeleteGlobalReplicationGroupMessage:
      type: object
      required:
        - GlobalReplicationGroupId
        - RetainPrimaryReplicationGroup
      title: DeleteGlobalReplicationGroupMessage
      properties:
        GlobalReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the Global datastore
        RetainPrimaryReplicationGroup:
          $ref: '#/components/schemas/Boolean'
          description: 'The primary replication group is retained as a standalone replication group. '
    DeleteReplicationGroupMessage:
      type: object
      required:
        - ReplicationGroupId
      title: DeleteReplicationGroupMessage
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The identifier for the cluster to be deleted. This parameter is not case sensitive.
        RetainPrimaryCluster:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'If set to <code>true</code>, all of the read replicas are deleted, but the primary node is retained.'
        FinalSnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: 'The name of a final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster, rather than one of the replicas; this is to ensure that it captures the freshest data. After the final snapshot is taken, the replication group is immediately deleted.'
      description: Represents the input of a <code>DeleteReplicationGroup</code> operation.
    DeleteSnapshotMessage:
      type: object
      required:
        - SnapshotName
      title: DeleteSnapshotMessage
      properties:
        SnapshotName:
          $ref: '#/components/schemas/String'
          description: The name of the snapshot to be deleted.
      description: Represents the input of a <code>DeleteSnapshot</code> operation.
    DeleteUserGroupMessage:
      type: object
      required:
        - UserGroupId
      title: DeleteUserGroupMessage
      properties:
        UserGroupId:
          $ref: '#/components/schemas/String'
          description: The ID of the user group.
    DeleteUserMessage:
      type: object
      required:
        - UserId
      title: DeleteUserMessage
      properties:
        UserId:
          $ref: '#/components/schemas/UserId'
          description: The ID of the user.
    DescribeCacheClustersMessage:
      type: object
      title: DescribeCacheClustersMessage
      properties:
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: 'The user-supplied cluster identifier. If this parameter is specified, only information about that specific cluster is returned. This parameter isn''t case sensitive.'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
        ShowCacheNodeInfo:
          $ref: '#/components/schemas/BooleanOptional'
          description: An optional flag that can be included in the <code>DescribeCacheCluster</code> request to retrieve information about the individual cache nodes.
        ShowCacheClustersNotInReplicationGroups:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'An optional flag that can be included in the <code>DescribeCacheCluster</code> request to show only nodes (API/CLI: clusters) that are not members of a replication group. In practice, this mean Memcached and single node Redis clusters.'
      description: Represents the input of a <code>DescribeCacheClusters</code> operation.
    DescribeCacheEngineVersionsMessage:
      type: object
      title: DescribeCacheEngineVersionsMessage
      properties:
        Engine:
          $ref: '#/components/schemas/String'
          description: 'The cache engine to return. Valid values: <code>memcached</code> | <code>redis</code> '
        EngineVersion:
          $ref: '#/components/schemas/String'
          description: '<p>The cache engine version to return.</p> <p>Example: <code>1.4.14</code> </p>'
        CacheParameterGroupFamily:
          $ref: '#/components/schemas/String'
          description: '<p>The name of a specific cache parameter group family to return details for.</p> <p>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.x</code> | </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
        DefaultOnly:
          $ref: '#/components/schemas/Boolean'
          description: 'If <code>true</code>, specifies that only the default version of the specified engine or engine and major version combination is to be returned.'
      description: Represents the input of a <code>DescribeCacheEngineVersions</code> operation.
    DescribeCacheParameterGroupsMessage:
      type: object
      title: DescribeCacheParameterGroupsMessage
      properties:
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of a specific cache parameter group to return details for.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
      description: Represents the input of a <code>DescribeCacheParameterGroups</code> operation.
    DescribeCacheParametersMessage:
      type: object
      required:
        - CacheParameterGroupName
      title: DescribeCacheParametersMessage
      properties:
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of a specific cache parameter group to return details for.
        Source:
          $ref: '#/components/schemas/String'
          description: '<p>The parameter types to return.</p> <p>Valid values: <code>user</code> | <code>system</code> | <code>engine-default</code> </p>'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
      description: Represents the input of a <code>DescribeCacheParameters</code> operation.
    DescribeCacheSecurityGroupsMessage:
      type: object
      title: DescribeCacheSecurityGroupsMessage
      properties:
        CacheSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache security group to return details for.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
      description: Represents the input of a <code>DescribeCacheSecurityGroups</code> operation.
    DescribeCacheSubnetGroupsMessage:
      type: object
      title: DescribeCacheSubnetGroupsMessage
      properties:
        CacheSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache subnet group to return details for.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
      description: Represents the input of a <code>DescribeCacheSubnetGroups</code> operation.
    DescribeEngineDefaultParametersMessage:
      type: object
      required:
        - CacheParameterGroupFamily
      title: DescribeEngineDefaultParametersMessage
      properties:
        CacheParameterGroupFamily:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the cache parameter group family.</p> <p>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.x</code> | </p>'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
      description: Represents the input of a <code>DescribeEngineDefaultParameters</code> operation.
    EngineDefaults:
      type: object
      properties:
        CacheParameterGroupFamily:
          $ref: '#/components/schemas/String'
          description: '<p>Specifies the name of the cache parameter group family to which the engine default parameters apply.</p> <p>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.x</code> | </p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: Provides an identifier to allow retrieval of paginated results.
        Parameters:
          $ref: '#/components/schemas/ParametersList'
          description: Contains a list of engine default parameters.
        CacheNodeTypeSpecificParameters:
          $ref: '#/components/schemas/CacheNodeTypeSpecificParametersList'
          description: A list of parameters specific to a particular cache node type. Each element in the list contains detailed information about one parameter.
      description: Represents the output of a <code>DescribeEngineDefaultParameters</code> operation.
    SourceType:
      type: string
      enum:
        - cache-cluster
        - cache-parameter-group
        - cache-security-group
        - cache-subnet-group
        - replication-group
        - user
        - user-group
    DescribeEventsMessage:
      type: object
      title: DescribeEventsMessage
      properties:
        SourceIdentifier:
          $ref: '#/components/schemas/String'
          description: 'The identifier of the event source for which events are returned. If not specified, all sources are included in the response.'
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: 'The event source to retrieve events for. If no value is specified, all events are returned.'
        StartTime:
          $ref: '#/components/schemas/TStamp'
          description: '<p>The beginning of the time interval to retrieve events for, specified in ISO 8601 format.</p> <p> <b>Example:</b> 2017-03-30T07:03:49.555Z</p>'
        EndTime:
          $ref: '#/components/schemas/TStamp'
          description: '<p>The end of the time interval for which to retrieve events, specified in ISO 8601 format.</p> <p> <b>Example:</b> 2017-03-30T07:03:49.555Z</p>'
        Duration:
          $ref: '#/components/schemas/IntegerOptional'
          description: The number of minutes worth of events to retrieve.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
      description: Represents the input of a <code>DescribeEvents</code> operation.
    DescribeGlobalReplicationGroupsMessage:
      type: object
      title: DescribeGlobalReplicationGroupsMessage
      properties:
        GlobalReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the Global datastore
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a marker is included in the response so that the remaining results can be retrieved. '
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
        ShowMemberInfo:
          $ref: '#/components/schemas/BooleanOptional'
          description: Returns the list of members that comprise the Global datastore.
    GlobalReplicationGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/GlobalReplicationGroup'
          - xml:
              name: GlobalReplicationGroup
    DescribeReplicationGroupsMessage:
      type: object
      title: DescribeReplicationGroupsMessage
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier for the replication group to be described. This parameter is not case sensitive.</p> <p>If you do not specify this parameter, information about all replication groups is returned.</p>'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
      description: Represents the input of a <code>DescribeReplicationGroups</code> operation.
    DescribeReservedCacheNodesMessage:
      type: object
      title: DescribeReservedCacheNodesMessage
      properties:
        ReservedCacheNodeId:
          $ref: '#/components/schemas/String'
          description: The reserved cache node identifier filter value. Use this parameter to show only the reservation that matches the specified reservation ID.
        ReservedCacheNodesOfferingId:
          $ref: '#/components/schemas/String'
          description: The offering identifier filter value. Use this parameter to show only purchased reservations matching the specified offering identifier.
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: '<p>The cache node type filter value. Use this parameter to show only those reservations matching the specified cache node type.</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
        Duration:
          $ref: '#/components/schemas/String'
          description: '<p>The duration filter value, specified in years or seconds. Use this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>'
        ProductDescription:
          $ref: '#/components/schemas/String'
          description: The product description filter value. Use this parameter to show only those reservations matching the specified product description.
        OfferingType:
          $ref: '#/components/schemas/String'
          description: '<p>The offering type filter value. Use this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid values: <code>"Light Utilization"|"Medium Utilization"|"Heavy Utilization"|"All Upfront"|"Partial Upfront"| "No Upfront"</code> </p>'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
      description: Represents the input of a <code>DescribeReservedCacheNodes</code> operation.
    DescribeReservedCacheNodesOfferingsMessage:
      type: object
      title: DescribeReservedCacheNodesOfferingsMessage
      properties:
        ReservedCacheNodesOfferingId:
          $ref: '#/components/schemas/String'
          description: '<p>The offering identifier filter value. Use this parameter to show only the available offering that matches the specified reservation identifier.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>'
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: '<p>The cache node type filter value. Use this parameter to show only the available offerings matching the specified cache node type.</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
        Duration:
          $ref: '#/components/schemas/String'
          description: '<p>Duration filter value, specified in years or seconds. Use this parameter to show only reservations for a given duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>'
        ProductDescription:
          $ref: '#/components/schemas/String'
          description: The product description filter value. Use this parameter to show only the available offerings matching the specified product description.
        OfferingType:
          $ref: '#/components/schemas/String'
          description: '<p>The offering type filter value. Use this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>"Light Utilization"|"Medium Utilization"|"Heavy Utilization" |"All Upfront"|"Partial Upfront"| "No Upfront"</code> </p>'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
      description: Represents the input of a <code>DescribeReservedCacheNodesOfferings</code> operation.
    ServiceUpdateStatusList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceUpdateStatus'
      maxItems: 3
    DescribeServiceUpdatesMessage:
      type: object
      title: DescribeServiceUpdatesMessage
      properties:
        ServiceUpdateName:
          $ref: '#/components/schemas/String'
          description: The unique ID of the service update
        ServiceUpdateStatus:
          $ref: '#/components/schemas/ServiceUpdateStatusList'
          description: The status of the service update
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: The maximum number of records to include in the response
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
    SnapshotList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Snapshot'
          - xml:
              name: Snapshot
    DescribeSnapshotsMessage:
      type: object
      title: DescribeSnapshotsMessage
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: 'A user-supplied replication group identifier. If this parameter is specified, only snapshots associated with that specific replication group are described.'
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: 'A user-supplied cluster identifier. If this parameter is specified, only snapshots associated with that specific cluster are described.'
        SnapshotName:
          $ref: '#/components/schemas/String'
          description: 'A user-supplied name of the snapshot. If this parameter is specified, only this snapshot are described.'
        SnapshotSource:
          $ref: '#/components/schemas/String'
          description: 'If set to <code>system</code>, the output shows snapshots that were automatically created by ElastiCache. If set to <code>user</code> the output shows snapshots that were manually created. If omitted, the output shows both automatically and manually created snapshots.'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 50</p> <p>Constraints: minimum 20; maximum 50.</p>'
        ShowNodeGroupConfig:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'A Boolean value which if true, the node group (shard) configuration is included in the snapshot description.'
      description: Represents the input of a <code>DescribeSnapshotsMessage</code> operation.
    TimeRangeFilter:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/TStamp'
          description: The start time of the time range filter
        EndTime:
          $ref: '#/components/schemas/TStamp'
          description: The end time of the time range filter
      description: Filters update actions from the service updates that are in available status during the time range.
    UpdateActionStatusList:
      type: array
      items:
        $ref: '#/components/schemas/UpdateActionStatus'
      maxItems: 9
    DescribeUpdateActionsMessage:
      type: object
      title: DescribeUpdateActionsMessage
      properties:
        ServiceUpdateName:
          $ref: '#/components/schemas/String'
          description: The unique ID of the service update
        ReplicationGroupIds:
          $ref: '#/components/schemas/ReplicationGroupIdList'
          description: The replication group IDs
        CacheClusterIds:
          $ref: '#/components/schemas/CacheClusterIdList'
          description: The cache cluster IDs
        Engine:
          $ref: '#/components/schemas/String'
          description: 'The Elasticache engine to which the update applies. Either Redis or Memcached '
        ServiceUpdateStatus:
          $ref: '#/components/schemas/ServiceUpdateStatusList'
          description: The status of the service update
        ServiceUpdateTimeRange:
          $ref: '#/components/schemas/TimeRangeFilter'
          description: The range of time specified to search for service updates that are in available status
        UpdateActionStatus:
          $ref: '#/components/schemas/UpdateActionStatusList'
          description: The status of the update action.
        ShowNodeLevelUpdateStatus:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'Dictates whether to include node level update status in the response '
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: The maximum number of records to include in the response
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
    DescribeUserGroupsMessage:
      type: object
      title: DescribeUserGroupsMessage
      properties:
        UserGroupId:
          $ref: '#/components/schemas/String'
          description: The ID of the user group.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a marker is included in the response so that the remaining results can be retrieved. '
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords. &gt;'
    UserGroupList:
      type: array
      items:
        $ref: '#/components/schemas/UserGroup'
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    DescribeUsersMessage:
      type: object
      title: DescribeUsersMessage
      properties:
        Engine:
          $ref: '#/components/schemas/EngineType'
          description: 'The Redis engine. '
        UserId:
          $ref: '#/components/schemas/UserId'
          description: The ID of the user.
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: Filter to determine the list of User IDs to return.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a marker is included in the response so that the remaining results can be retrieved. '
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords. &gt;'
    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'
    KinesisFirehoseDestinationDetails:
      type: object
      properties:
        DeliveryStream:
          $ref: '#/components/schemas/String'
          description: The name of the Kinesis Data Firehose delivery stream.
      description: The configuration details of the Kinesis Data Firehose destination.
    DestinationDetails:
      type: object
      properties:
        CloudWatchLogsDetails:
          $ref: '#/components/schemas/CloudWatchLogsDestinationDetails'
          description: The configuration details of the CloudWatch Logs destination.
        KinesisFirehoseDetails:
          $ref: '#/components/schemas/KinesisFirehoseDestinationDetails'
          description: The configuration details of the Kinesis Data Firehose destination.
      description: Configuration details of either a CloudWatch Logs destination or Kinesis Data Firehose destination.
    DestinationType:
      type: string
      enum:
        - cloudwatch-logs
        - kinesis-firehose
    DisassociateGlobalReplicationGroupMessage:
      type: object
      required:
        - GlobalReplicationGroupId
        - ReplicationGroupId
        - ReplicationGroupRegion
      title: DisassociateGlobalReplicationGroupMessage
      properties:
        GlobalReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the Global datastore
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the secondary cluster you wish to remove from the Global datastore
        ReplicationGroupRegion:
          $ref: '#/components/schemas/String'
          description: The Amazon region of secondary cluster you wish to remove from the Global datastore
    Double:
      type: number
      format: double
    EC2SecurityGroup:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
          description: The status of the Amazon EC2 security group.
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the Amazon EC2 security group.
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
          description: The Amazon account ID of the Amazon EC2 security group owner.
      description: Provides ownership and status information for an Amazon EC2 security group.
    Event:
      type: object
      properties:
        SourceIdentifier:
          $ref: '#/components/schemas/String'
          description: 'The identifier for the source of the event. For example, if the event occurred at the cluster level, the identifier would be the name of the cluster.'
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: 'Specifies the origin of this event - a cluster, a parameter group, a security group, etc.'
        Message:
          $ref: '#/components/schemas/String'
          description: The text of the event.
        Date:
          $ref: '#/components/schemas/TStamp'
          description: The date and time when the event occurred.
      description: 'Represents a single occurrence of something interesting within the system. Some examples of events are creating a cluster, adding or removing a cache node, or rebooting a node.'
    EventList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Event'
          - xml:
              name: Event
    FailoverGlobalReplicationGroupMessage:
      type: object
      required:
        - GlobalReplicationGroupId
        - PrimaryRegion
        - PrimaryReplicationGroupId
      title: FailoverGlobalReplicationGroupMessage
      properties:
        GlobalReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the Global datastore
        PrimaryRegion:
          $ref: '#/components/schemas/String'
          description: The Amazon region of the primary cluster of the Global datastore
        PrimaryReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the primary replication group
    FilterName:
      type: string
      pattern: .*\S.*
    FilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/FilterValue'
      minItems: 1
    FilterValue:
      type: string
      pattern: .*\S.*
    GlobalNodeGroup:
      type: object
      properties:
        GlobalNodeGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the global node group
        Slots:
          $ref: '#/components/schemas/String'
          description: The keyspace for this node group
      description: Indicates the slot configuration and global identifier for a slice group.
    GlobalNodeGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/GlobalNodeGroup'
          - xml:
              name: GlobalNodeGroup
    GlobalReplicationGroupMemberList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/GlobalReplicationGroupMember'
          - xml:
              name: GlobalReplicationGroupMember
    GlobalReplicationGroupInfo:
      type: object
      properties:
        GlobalReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the Global datastore
        GlobalReplicationGroupMemberRole:
          $ref: '#/components/schemas/String'
          description: The role of the replication group in a Global datastore. Can be primary or secondary.
      description: The name of the Global datastore and role of this replication group in the Global datastore.
    GlobalReplicationGroupMember:
      type: object
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The replication group id of the Global datastore member.
        ReplicationGroupRegion:
          $ref: '#/components/schemas/String'
          description: The Amazon region of the Global datastore member.
        Role:
          $ref: '#/components/schemas/String'
          description: 'Indicates the role of the replication group, primary or secondary.'
        AutomaticFailover:
          $ref: '#/components/schemas/AutomaticFailoverStatus'
          description: Indicates whether automatic failover is enabled for the replication group.
        Status:
          $ref: '#/components/schemas/String'
          description: The status of the membership of the replication group.
      description: 'A member of a Global datastore. It contains the Replication Group Id, the Amazon region and the role of the replication group. '
    RegionalConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RegionalConfiguration'
          - xml:
              name: RegionalConfiguration
    IncreaseNodeGroupsInGlobalReplicationGroupMessage:
      type: object
      required:
        - GlobalReplicationGroupId
        - NodeGroupCount
        - ApplyImmediately
      title: IncreaseNodeGroupsInGlobalReplicationGroupMessage
      properties:
        GlobalReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the Global datastore
        NodeGroupCount:
          $ref: '#/components/schemas/Integer'
          description: The number of node groups you wish to add
        RegionalConfigurations:
          $ref: '#/components/schemas/RegionalConfigurationList'
          description: 'Describes the replication group IDs, the Amazon regions where they are stored and the shard configuration for each that comprise the Global datastore'
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates that the process begins immediately. At present, the only permitted value for this parameter is true.'
    IncreaseReplicaCountMessage:
      type: object
      required:
        - ReplicationGroupId
        - ApplyImmediately
      title: IncreaseReplicaCountMessage
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The id of the replication group to which you want to add replica nodes.
        NewReplicaCount:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The number of read replica nodes you want at the completion of this operation. For Redis (cluster mode disabled) replication groups, this is the number of replica nodes in the replication group. For Redis (cluster mode enabled) replication groups, this is the number of replica nodes in each of the replication group''s node groups.'
        ReplicaConfiguration:
          $ref: '#/components/schemas/ReplicaConfigurationList'
          description: 'A list of <code>ConfigureShard</code> objects that can be used to configure each shard in a Redis (cluster mode enabled) replication group. The <code>ConfigureShard</code> has three members: <code>NewReplicaCount</code>, <code>NodeGroupId</code>, and <code>PreferredAvailabilityZones</code>.'
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
          description: 'If <code>True</code>, the number of replica nodes is increased immediately. <code>ApplyImmediately=False</code> is not currently supported.'
    KeyList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ListAllowedNodeTypeModificationsMessage:
      type: object
      title: ListAllowedNodeTypeModificationsMessage
      properties:
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: <p>The name of the cluster you want to scale up to a larger node instanced type. ElastiCache uses the cluster id to identify the current node type of this cluster and from that to create a list of node types you can scale up to.</p> <important> <p>You must provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p> </important>
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the replication group want to scale up to a larger node type. ElastiCache uses the replication group id to identify the current node type being used by this replication group, and from that to create a list of node types you can scale up to.</p> <important> <p>You must provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p> </important>'
      description: The input parameters for the <code>ListAllowedNodeTypeModifications</code> operation.
    ListTagsForResourceMessage:
      type: object
      required:
        - ResourceName
      title: ListTagsForResourceMessage
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
          description: '<p>The Amazon Resource Name (ARN) of the resource for which you want the list of tags, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code> or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>.</p>'
      description: The input parameters for the <code>ListTagsForResource</code> operation.
    LogType:
      type: string
      enum:
        - slow-log
    LogFormat:
      type: string
      enum:
        - text
        - json
    LogDeliveryConfigurationStatus:
      type: string
      enum:
        - active
        - enabling
        - modifying
        - disabling
        - error
    LogDeliveryConfiguration:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/LogType'
          description: 'Refers to <a href="https://redis.io/commands/slowlog">slow-log</a>.'
        DestinationType:
          $ref: '#/components/schemas/DestinationType'
          description: 'Returns the destination type, either <code>cloudwatch-logs</code> or <code>kinesis-firehose</code>.'
        DestinationDetails:
          $ref: '#/components/schemas/DestinationDetails'
          description: Configuration details of either a CloudWatch Logs destination or Kinesis Data Firehose destination.
        LogFormat:
          $ref: '#/components/schemas/LogFormat'
          description: 'Returns the log format, either JSON or TEXT.'
        Status:
          $ref: '#/components/schemas/LogDeliveryConfigurationStatus'
          description: 'Returns the log delivery configuration status. Values are one of <code>enabling</code> | <code>disabling</code> | <code>modifying</code> | <code>active</code> | <code>error</code> '
        Message:
          $ref: '#/components/schemas/String'
          description: Returns an error message for the log delivery configuration.
      description: 'Returns the destination, format and type of the logs. '
    ModifyCacheClusterMessage:
      type: object
      required:
        - CacheClusterId
      title: ModifyCacheClusterMessage
      properties:
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: The cluster identifier. This value is stored as a lowercase string.
        NumCacheNodes:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of cache nodes that the cluster should have. If the value for <code>NumCacheNodes</code> is greater than the sum of the number of current cache nodes and the number of cache nodes pending creation (which may be zero), more nodes are added. If the value is less than the number of existing cache nodes, nodes are removed. If the value is equal to the number of current cache nodes, any pending add or remove requests are canceled.</p> <p>If you are removing cache nodes, you must use the <code>CacheNodeIdsToRemove</code> parameter to provide the IDs of the specific cache nodes to remove.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 40.</p> <note> <p>Adding or removing Memcached cache nodes can be applied immediately or as a pending operation (see <code>ApplyImmediately</code>).</p> <p>A pending operation to modify the number of cache nodes in a cluster during its maintenance window, whether by adding or removing nodes in accordance with the scale out architecture, is not queued. The customer''s latest request to add or remove nodes to the cluster overrides any previous pending operations to modify the number of cache nodes in the cluster. For example, a request to remove 2 nodes would override a previous pending operation to remove 3 nodes. Similarly, a request to add 2 nodes would override a previous pending operation to remove 3 nodes and vice versa. As Memcached cache nodes may now be provisioned in different Availability Zones with flexible cache node placement, a request to add nodes does not automatically override a previous pending operation to add nodes. The customer can modify the previous pending operation to add more nodes or explicitly cancel the pending request and retry the new request. To cancel pending operations to modify the number of cache nodes in a cluster, use the <code>ModifyCacheCluster</code> request and set <code>NumCacheNodes</code> equal to the number of cache nodes currently in the cluster.</p> </note>'
        CacheNodeIdsToRemove:
          $ref: '#/components/schemas/CacheNodeIdsList'
          description: '<p>A list of cache node IDs to be removed. A node ID is a numeric identifier (0001, 0002, etc.). This parameter is only valid when <code>NumCacheNodes</code> is less than the existing number of cache nodes. The number of cache node IDs supplied in this parameter must match the difference between the existing number of cache nodes in the cluster or pending cache nodes, whichever is greater, and the value of <code>NumCacheNodes</code> in the request.</p> <p>For example: If you have 3 active cache nodes, 7 pending cache nodes, and the number of cache nodes in this <code>ModifyCacheCluster</code> call is 5, you must list 2 (7 - 5) cache node IDs to remove.</p>'
        AZMode:
          $ref: '#/components/schemas/AZMode'
          description: '<p>Specifies whether the new nodes in this Memcached cluster are all created in a single Availability Zone or created across multiple Availability Zones.</p> <p>Valid values: <code>single-az</code> | <code>cross-az</code>.</p> <p>This option is only supported for Memcached clusters.</p> <note> <p>You cannot specify <code>single-az</code> if the Memcached cluster already has cache nodes in different Availability Zones. If <code>cross-az</code> is specified, existing Memcached nodes remain in their current Availability Zone.</p> <p>Only newly created nodes are located in different Availability Zones. </p> </note>'
        NewAvailabilityZones:
          $ref: '#/components/schemas/PreferredAvailabilityZoneList'
          description: '<note> <p>This option is only supported on Memcached clusters.</p> </note> <p>The list of Availability Zones where the new Memcached cache nodes are created.</p> <p>This parameter is only valid when <code>NumCacheNodes</code> in the request is greater than the sum of the number of active cache nodes and the number of cache nodes pending creation (which may be zero). The number of Availability Zones supplied in this list must match the cache nodes being added in this request.</p> <p>Scenarios:</p> <ul> <li> <p> <b>Scenario 1:</b> You have 3 active nodes and wish to add 2 nodes. Specify <code>NumCacheNodes=5</code> (3 + 2) and optionally specify two Availability Zones for the two new nodes.</p> </li> <li> <p> <b>Scenario 2:</b> You have 3 active nodes and 2 nodes pending creation (from the scenario 1 call) and want to add 1 more node. Specify <code>NumCacheNodes=6</code> ((3 + 2) + 1) and optionally specify an Availability Zone for the new node.</p> </li> <li> <p> <b>Scenario 3:</b> You want to cancel all pending operations. Specify <code>NumCacheNodes=3</code> to cancel all pending operations.</p> </li> </ul> <p>The Availability Zone placement of nodes pending creation cannot be modified. If you wish to cancel any nodes pending creation, add 0 nodes by setting <code>NumCacheNodes</code> to the number of current nodes.</p> <p>If <code>cross-az</code> is specified, existing Memcached nodes remain in their current Availability Zone. Only newly created nodes can be located in different Availability Zones. For guidance on how to move existing Memcached nodes to different Availability Zones, see the <b>Availability Zone Considerations</b> section of <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html">Cache Node Considerations for Memcached</a>.</p> <p> <b>Impact of new add/remove requests upon pending requests</b> </p> <ul> <li> <p>Scenario-1</p> <ul> <li> <p>Pending Action: Delete</p> </li> <li> <p>New Request: Delete</p> </li> <li> <p>Result: The new delete, pending or immediate, replaces the pending delete.</p> </li> </ul> </li> <li> <p>Scenario-2</p> <ul> <li> <p>Pending Action: Delete</p> </li> <li> <p>New Request: Create</p> </li> <li> <p>Result: The new create, pending or immediate, replaces the pending delete.</p> </li> </ul> </li> <li> <p>Scenario-3</p> <ul> <li> <p>Pending Action: Create</p> </li> <li> <p>New Request: Delete</p> </li> <li> <p>Result: The new delete, pending or immediate, replaces the pending create.</p> </li> </ul> </li> <li> <p>Scenario-4</p> <ul> <li> <p>Pending Action: Create</p> </li> <li> <p>New Request: Create</p> </li> <li> <p>Result: The new create is added to the pending create.</p> <important> <p> <b>Important:</b> If the new create request is <b>Apply Immediately - Yes</b>, all creates are performed immediately. If the new create request is <b>Apply Immediately - No</b>, all creates are pending.</p> </important> </li> </ul> </li> </ul>'
        CacheSecurityGroupNames:
          $ref: '#/components/schemas/CacheSecurityGroupNameList'
          description: '<p>A list of cache security group names to authorize on this cluster. This change is asynchronously applied as soon as possible.</p> <p>You can use this parameter only with clusters that are created outside of an Amazon Virtual Private Cloud (Amazon VPC).</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be "Default".</p>'
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIdsList'
          description: <p>Specifies the VPC Security Groups associated with the cluster.</p> <p>This parameter can be used only with clusters that are created in an Amazon Virtual Private Cloud (Amazon VPC).</p>
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
          description: '<p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>'
        NotificationTopicArn:
          $ref: '#/components/schemas/String'
          description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be same as the cluster owner.</p> </note>
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache parameter group to apply to this cluster. This change is asynchronously applied as soon as possible for parameters when the <code>ApplyImmediately</code> parameter is specified as <code>true</code> for this request.
        NotificationTopicStatus:
          $ref: '#/components/schemas/String'
          description: '<p>The status of the Amazon SNS notification topic. Notifications are sent only if the status is <code>active</code>.</p> <p>Valid values: <code>active</code> | <code>inactive</code> </p>'
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
          description: '<p>If <code>true</code>, this parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the cluster.</p> <p>If <code>false</code>, changes to the cluster are applied on the next maintenance reboot, or the next failure reboot, whichever occurs first.</p> <important> <p>If you perform a <code>ModifyCacheCluster</code> before a pending modification is applied, the pending modification is replaced by the newer modification.</p> </important> <p>Valid values: <code>true</code> | <code>false</code> </p> <p>Default: <code>false</code> </p>'
        EngineVersion:
          $ref: '#/components/schemas/String'
          description: '<p>The upgraded version of the cache engine to be run on the cache nodes.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster and create it anew with the earlier engine version. </p>'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
          description: This parameter is currently disabled.
        SnapshotRetentionLimit:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days for which ElastiCache retains automatic cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <note> <p>If the value of <code>SnapshotRetentionLimit</code> is set to zero (0), backups are turned off.</p> </note>'
        SnapshotWindow:
          $ref: '#/components/schemas/String'
          description: 'The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your cluster. '
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: A valid cache node type that you want to scale this cluster up to.
        AuthToken:
          $ref: '#/components/schemas/String'
          description: '<p>Reserved parameter. The password used to access a password protected server. This parameter must be specified with the <code>auth-token-update</code> parameter. Password constraints:</p> <ul> <li> <p>Must be only printable ASCII characters</p> </li> <li> <p>Must be at least 16 characters and no more than 128 characters in length</p> </li> <li> <p>Cannot contain any of the following characters: ''/'', ''"'', or ''@'', ''%''</p> </li> </ul> <p> For more information, see AUTH password at <a href="http://redis.io/commands/AUTH">AUTH</a>.</p>'
        AuthTokenUpdateStrategy:
          $ref: '#/components/schemas/AuthTokenUpdateStrategyType'
          description: '<p>Specifies the strategy to use to update the AUTH token. This parameter must be specified with the <code>auth-token</code> parameter. Possible values:</p> <ul> <li> <p>Rotate</p> </li> <li> <p>Set</p> </li> </ul> <p> For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/auth.html">Authenticating Users with Redis AUTH</a> </p>'
        LogDeliveryConfigurations:
          $ref: '#/components/schemas/LogDeliveryConfigurationRequestList'
          description: 'Specifies the destination, format and type of the logs.'
      description: Represents the input of a <code>ModifyCacheCluster</code> operation.
    ParameterNameValueList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ParameterNameValue'
          - xml:
              name: ParameterNameValue
    ModifyCacheParameterGroupMessage:
      type: object
      required:
        - CacheParameterGroupName
        - ParameterNameValues
      title: ModifyCacheParameterGroupMessage
      properties:
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache parameter group to modify.
        ParameterNameValues:
          $ref: '#/components/schemas/ParameterNameValueList'
          description: An array of parameter names and values for the parameter update. You must supply at least one parameter name and value; subsequent arguments are optional. A maximum of 20 parameters may be modified per request.
      description: Represents the input of a <code>ModifyCacheParameterGroup</code> operation.
    ModifyCacheSubnetGroupMessage:
      type: object
      required:
        - CacheSubnetGroupName
      title: ModifyCacheSubnetGroupMessage
      properties:
        CacheSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name for the cache subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code> </p>'
        CacheSubnetGroupDescription:
          $ref: '#/components/schemas/String'
          description: A description of the cache subnet group.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdentifierList'
          description: The EC2 subnet IDs for the cache subnet group.
      description: Represents the input of a <code>ModifyCacheSubnetGroup</code> operation.
    ModifyGlobalReplicationGroupMessage:
      type: object
      required:
        - GlobalReplicationGroupId
        - ApplyImmediately
      title: ModifyGlobalReplicationGroupMessage
      properties:
        GlobalReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the Global datastore
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
          description: 'This parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible. Modifications to Global Replication Groups cannot be requested to be applied in PreferredMaintenceWindow. '
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: A valid cache node type that you want to scale this Global datastore to.
        EngineVersion:
          $ref: '#/components/schemas/String'
          description: 'The upgraded version of the cache engine to be run on the clusters in the Global datastore. '
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache parameter group to use with the Global datastore. It must be compatible with the major engine version used by the Global datastore.
        GlobalReplicationGroupDescription:
          $ref: '#/components/schemas/String'
          description: A description of the Global datastore
        AutomaticFailoverEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'Determines whether a read replica is automatically promoted to read/write primary if the existing primary encounters a failure. '
    UserGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/UserGroupId'
    ModifyReplicationGroupMessage:
      type: object
      required:
        - ReplicationGroupId
      title: ModifyReplicationGroupMessage
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The identifier of the replication group to modify.
        ReplicationGroupDescription:
          $ref: '#/components/schemas/String'
          description: A description for the replication group. Maximum length is 255 characters.
        PrimaryClusterId:
          $ref: '#/components/schemas/String'
          description: 'For replication groups with a single primary, if this parameter is specified, ElastiCache promotes the specified cluster in the specified replication group to the primary role. The nodes of all other clusters in the replication group are read replicas.'
        SnapshottingClusterId:
          $ref: '#/components/schemas/String'
          description: The cluster ID that is used as the daily snapshot source for the replication group. This parameter cannot be set for Redis (cluster mode enabled) replication groups.
        AutomaticFailoverEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>Determines whether a read replica is automatically promoted to read/write primary if the existing primary encounters a failure.</p> <p>Valid values: <code>true</code> | <code>false</code> </p>'
        MultiAZEnabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: A flag to indicate MultiAZ is enabled.
        NodeGroupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - deprecated: true
              description: Deprecated. This parameter is not used.
        CacheSecurityGroupNames:
          $ref: '#/components/schemas/CacheSecurityGroupNameList'
          description: '<p>A list of cache security group names to authorize for the clusters in this replication group. This change is asynchronously applied as soon as possible.</p> <p>This parameter can be used only with replication group containing clusters running outside of an Amazon Virtual Private Cloud (Amazon VPC).</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be <code>Default</code>.</p>'
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIdsList'
          description: <p>Specifies the VPC Security Groups associated with the clusters in the replication group.</p> <p>This parameter can be used only with replication group containing clusters running in an Amazon Virtual Private Cloud (Amazon VPC).</p>
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
          description: '<p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>'
        NotificationTopicArn:
          $ref: '#/components/schemas/String'
          description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be same as the replication group owner. </p> </note>
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache parameter group to apply to all of the clusters in this replication group. This change is asynchronously applied as soon as possible for parameters when the <code>ApplyImmediately</code> parameter is specified as <code>true</code> for this request.
        NotificationTopicStatus:
          $ref: '#/components/schemas/String'
          description: '<p>The status of the Amazon SNS notification topic for the replication group. Notifications are sent only if the status is <code>active</code>.</p> <p>Valid values: <code>active</code> | <code>inactive</code> </p>'
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
          description: '<p>If <code>true</code>, this parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the replication group.</p> <p>If <code>false</code>, changes to the nodes in the replication group are applied on the next maintenance reboot, or the next failure reboot, whichever occurs first.</p> <p>Valid values: <code>true</code> | <code>false</code> </p> <p>Default: <code>false</code> </p>'
        EngineVersion:
          $ref: '#/components/schemas/String'
          description: '<p>The upgraded version of the cache engine to be run on the clusters in the replication group.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing replication group and create it anew with the earlier engine version. </p>'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
          description: This parameter is currently disabled.
        SnapshotRetentionLimit:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days for which ElastiCache retains automatic node group (shard) snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <p> <b>Important</b> If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p>'
        SnapshotWindow:
          $ref: '#/components/schemas/String'
          description: '<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of the node group (shard) specified by <code>SnapshottingClusterId</code>.</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p>'
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: A valid cache node type that you want to scale this replication group to.
        AuthToken:
          $ref: '#/components/schemas/String'
          description: '<p>Reserved parameter. The password used to access a password protected server. This parameter must be specified with the <code>auth-token-update-strategy </code> parameter. Password constraints:</p> <ul> <li> <p>Must be only printable ASCII characters</p> </li> <li> <p>Must be at least 16 characters and no more than 128 characters in length</p> </li> <li> <p>Cannot contain any of the following characters: ''/'', ''"'', or ''@'', ''%''</p> </li> </ul> <p> For more information, see AUTH password at <a href="http://redis.io/commands/AUTH">AUTH</a>.</p>'
        AuthTokenUpdateStrategy:
          $ref: '#/components/schemas/AuthTokenUpdateStrategyType'
          description: '<p>Specifies the strategy to use to update the AUTH token. This parameter must be specified with the <code>auth-token</code> parameter. Possible values:</p> <ul> <li> <p>Rotate</p> </li> <li> <p>Set</p> </li> </ul> <p> For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/auth.html">Authenticating Users with Redis AUTH</a> </p>'
        UserGroupIdsToAdd:
          $ref: '#/components/schemas/UserGroupIdList'
          description: The user group you are associating with the replication group.
        UserGroupIdsToRemove:
          $ref: '#/components/schemas/UserGroupIdList'
          description: 'The user group to remove, meaning the users in the group no longer can access the replication group.'
        RemoveUserGroups:
          $ref: '#/components/schemas/BooleanOptional'
          description: Removes the user groups that can access this replication group.
        LogDeliveryConfigurations:
          $ref: '#/components/schemas/LogDeliveryConfigurationRequestList'
          description: 'Specifies the destination, format and type of the logs.'
      description: Represents the input of a <code>ModifyReplicationGroups</code> operation.
    ReshardingConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReshardingConfiguration'
          - xml:
              name: ReshardingConfiguration
    NodeGroupsToRemoveList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AllowedNodeGroupId'
          - xml:
              name: NodeGroupToRemove
    NodeGroupsToRetainList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AllowedNodeGroupId'
          - xml:
              name: NodeGroupToRetain
    ModifyReplicationGroupShardConfigurationMessage:
      type: object
      required:
        - ReplicationGroupId
        - NodeGroupCount
        - ApplyImmediately
      title: ModifyReplicationGroupShardConfigurationMessage
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the Redis (cluster mode enabled) cluster (replication group) on which the shards are to be configured.
        NodeGroupCount:
          $ref: '#/components/schemas/Integer'
          description: The number of node groups (shards) that results from the modification of the shard configuration.
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Indicates that the shard reconfiguration process begins immediately. At present, the only permitted value for this parameter is <code>true</code>.</p> <p>Value: true</p>'
        ReshardingConfiguration:
          $ref: '#/components/schemas/ReshardingConfigurationList'
          description: '<p>Specifies the preferred availability zones for each node group in the cluster. If the value of <code>NodeGroupCount</code> is greater than the current number of node groups (shards), you can use this parameter to specify the preferred availability zones of the cluster''s shards. If you omit this parameter ElastiCache selects availability zones for you.</p> <p>You can specify this parameter only if the value of <code>NodeGroupCount</code> is greater than the current number of node groups (shards).</p>'
        NodeGroupsToRemove:
          $ref: '#/components/schemas/NodeGroupsToRemoveList'
          description: '<p>If the value of <code>NodeGroupCount</code> is less than the current number of node groups (shards), then either <code>NodeGroupsToRemove</code> or <code>NodeGroupsToRetain</code> is required. <code>NodeGroupsToRemove</code> is a list of <code>NodeGroupId</code>s to remove from the cluster.</p> <p>ElastiCache for Redis will attempt to remove all node groups listed by <code>NodeGroupsToRemove</code> from the cluster.</p>'
        NodeGroupsToRetain:
          $ref: '#/components/schemas/NodeGroupsToRetainList'
          description: '<p>If the value of <code>NodeGroupCount</code> is less than the current number of node groups (shards), then either <code>NodeGroupsToRemove</code> or <code>NodeGroupsToRetain</code> is required. <code>NodeGroupsToRetain</code> is a list of <code>NodeGroupId</code>s to retain in the cluster.</p> <p>ElastiCache for Redis will attempt to remove all node groups except those listed by <code>NodeGroupsToRetain</code> from the cluster.</p>'
      description: Represents the input for a <code>ModifyReplicationGroupShardConfiguration</code> operation.
    ModifyUserGroupMessage:
      type: object
      required:
        - UserGroupId
      title: ModifyUserGroupMessage
      properties:
        UserGroupId:
          $ref: '#/components/schemas/String'
          description: The ID of the user group.
        UserIdsToAdd:
          $ref: '#/components/schemas/UserIdListInput'
          description: The list of user IDs to add to the user group.
        UserIdsToRemove:
          $ref: '#/components/schemas/UserIdListInput'
          description: The list of user IDs to remove from the user group.
    ModifyUserMessage:
      type: object
      required:
        - UserId
      title: ModifyUserMessage
      properties:
        UserId:
          $ref: '#/components/schemas/UserId'
          description: The ID of the user.
        AccessString:
          $ref: '#/components/schemas/AccessString'
          description: Access permissions string used for this user.
        AppendAccessString:
          $ref: '#/components/schemas/AccessString'
          description: Adds additional user permissions to the access string.
        Passwords:
          $ref: '#/components/schemas/PasswordListInput'
          description: The passwords belonging to the user. You are allowed up to two.
        NoPasswordRequired:
          $ref: '#/components/schemas/BooleanOptional'
          description: Indicates no password is required for the user.
    MultiAZStatus:
      type: string
      enum:
        - enabled
        - disabled
    NodeGroupMemberList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NodeGroupMember'
          - xml:
              name: NodeGroupMember
    NodeGroup:
      type: object
      properties:
        NodeGroupId:
          $ref: '#/components/schemas/String'
          description: 'The identifier for the node group (shard). A Redis (cluster mode disabled) replication group contains only 1 node group; therefore, the node group ID is 0001. A Redis (cluster mode enabled) replication group contains 1 to 90 node groups numbered 0001 to 0090. Optionally, the user can provide the id for a node group. '
        Status:
          $ref: '#/components/schemas/String'
          description: 'The current state of this replication group - <code>creating</code>, <code>available</code>, <code>modifying</code>, <code>deleting</code>.'
        PrimaryEndpoint:
          $ref: '#/components/schemas/Endpoint'
          description: The endpoint of the primary node in this node group (shard).
        ReaderEndpoint:
          $ref: '#/components/schemas/Endpoint'
          description: The endpoint of the replica nodes in this node group (shard).
        Slots:
          $ref: '#/components/schemas/String'
          description: The keyspace for this node group (shard).
        NodeGroupMembers:
          $ref: '#/components/schemas/NodeGroupMemberList'
          description: A list containing information about individual nodes within the node group (shard).
      description: Represents a collection of cache nodes in a replication group. One node in the node group is the read/write primary node. All the other nodes are read-only Replica nodes.
    OutpostArnsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: OutpostArn
    NodeGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NodeGroup'
          - xml:
              name: NodeGroup
    NodeGroupMember:
      type: object
      properties:
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: The ID of the cluster to which the node belongs.
        CacheNodeId:
          $ref: '#/components/schemas/String'
          description: 'The ID of the node within its cluster. A node ID is a numeric identifier (0001, 0002, etc.).'
        ReadEndpoint:
          $ref: '#/components/schemas/Endpoint'
          description: The information required for client programs to connect to a node for read operations. The read endpoint is only applicable on Redis (cluster mode disabled) clusters.
        PreferredAvailabilityZone:
          $ref: '#/components/schemas/String'
          description: The name of the Availability Zone in which the node is located.
        PreferredOutpostArn:
          $ref: '#/components/schemas/String'
          description: The outpost ARN of the node group member.
        CurrentRole:
          $ref: '#/components/schemas/String'
          description: The role that is currently assigned to the node - <code>primary</code> or <code>replica</code>. This member is only applicable for Redis (cluster mode disabled) replication groups.
      description: Represents a single node within a node group (shard).
    NodeGroupMemberUpdateStatus:
      type: object
      properties:
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: The cache cluster ID
        CacheNodeId:
          $ref: '#/components/schemas/String'
          description: The node ID of the cache cluster
        NodeUpdateStatus:
          $ref: '#/components/schemas/NodeUpdateStatus'
          description: The update status of the node
        NodeDeletionDate:
          $ref: '#/components/schemas/TStamp'
          description: The deletion date of the node
        NodeUpdateStartDate:
          $ref: '#/components/schemas/TStamp'
          description: The start date of the update for a node
        NodeUpdateEndDate:
          $ref: '#/components/schemas/TStamp'
          description: The end date of the update for a node
        NodeUpdateInitiatedBy:
          $ref: '#/components/schemas/NodeUpdateInitiatedBy'
          description: Reflects whether the update was initiated by the customer or automatically applied
        NodeUpdateInitiatedDate:
          $ref: '#/components/schemas/TStamp'
          description: The date when the update is triggered
        NodeUpdateStatusModifiedDate:
          $ref: '#/components/schemas/TStamp'
          description: The date when the NodeUpdateStatus was last modified
      description: 'The status of the service update on the node group member '
    NodeGroupMemberUpdateStatusList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NodeGroupMemberUpdateStatus'
          - xml:
              name: NodeGroupMemberUpdateStatus
    NodeGroupUpdateStatus:
      type: object
      properties:
        NodeGroupId:
          $ref: '#/components/schemas/String'
          description: The ID of the node group
        NodeGroupMemberUpdateStatus:
          $ref: '#/components/schemas/NodeGroupMemberUpdateStatusList'
          description: The status of the service update on the node group member
      description: 'The status of the service update on the node group '
    NodeGroupUpdateStatusList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NodeGroupUpdateStatus'
          - xml:
              name: NodeGroupUpdateStatus
    NodeSnapshot:
      type: object
      properties:
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the source cluster.
        NodeGroupId:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the source node group (shard).
        CacheNodeId:
          $ref: '#/components/schemas/String'
          description: The cache node identifier for the node in the source cluster.
        NodeGroupConfiguration:
          $ref: '#/components/schemas/NodeGroupConfiguration'
          description: The configuration for the source node group (shard).
        CacheSize:
          $ref: '#/components/schemas/String'
          description: The size of the cache on the source cache node.
        CacheNodeCreateTime:
          $ref: '#/components/schemas/TStamp'
          description: The date and time when the cache node was created in the source cluster.
        SnapshotCreateTime:
          $ref: '#/components/schemas/TStamp'
          description: The date and time when the source node's metadata and cache data set was obtained for the snapshot.
      description: Represents an individual cache node in a snapshot of a cluster.
    NodeSnapshotList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NodeSnapshot'
          - xml:
              name: NodeSnapshot
    Parameter:
      type: object
      properties:
        ParameterName:
          $ref: '#/components/schemas/String'
          description: The name of the parameter.
        ParameterValue:
          $ref: '#/components/schemas/String'
          description: The value of the parameter.
        Description:
          $ref: '#/components/schemas/String'
          description: A description of the parameter.
        Source:
          $ref: '#/components/schemas/String'
          description: The source of the parameter.
        DataType:
          $ref: '#/components/schemas/String'
          description: The valid data type for the parameter.
        AllowedValues:
          $ref: '#/components/schemas/String'
          description: The valid range of values for the parameter.
        IsModifiable:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.
        MinimumEngineVersion:
          $ref: '#/components/schemas/String'
          description: The earliest cache engine version to which the parameter can apply.
        ChangeType:
          $ref: '#/components/schemas/ChangeType'
          description: 'Indicates whether a change to the parameter is applied immediately or requires a reboot for the change to be applied. You can force a reboot or wait until the next maintenance window''s reboot. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Rebooting.html">Rebooting a Cluster</a>.'
      description: Describes an individual setting that controls some aspect of ElastiCache behavior.
    PendingAutomaticFailoverStatus:
      type: string
      enum:
        - enabled
        - disabled
    PendingLogDeliveryConfiguration:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/LogType'
          description: 'Refers to <a href="https://redis.io/commands/slowlog">slow-log</a>.'
        DestinationType:
          $ref: '#/components/schemas/DestinationType'
          description: 'Returns the destination type, either CloudWatch Logs or Kinesis Data Firehose.'
        DestinationDetails:
          $ref: '#/components/schemas/DestinationDetails'
          description: Configuration details of either a CloudWatch Logs destination or Kinesis Data Firehose destination.
        LogFormat:
          $ref: '#/components/schemas/LogFormat'
          description: 'Returns the log format, either JSON or TEXT'
      description: 'The log delivery configurations being modified '
    PendingLogDeliveryConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/PendingLogDeliveryConfiguration'
    ProcessedUpdateAction:
      type: object
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The ID of the replication group
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: The ID of the cache cluster
        ServiceUpdateName:
          $ref: '#/components/schemas/String'
          description: The unique ID of the service update
        UpdateActionStatus:
          $ref: '#/components/schemas/UpdateActionStatus'
          description: The status of the update action on the Redis cluster
      description: Update action that has been processed for the corresponding apply/stop request
    ProcessedUpdateActionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ProcessedUpdateAction'
          - xml:
              name: ProcessedUpdateAction
    PurchaseReservedCacheNodesOfferingMessage:
      type: object
      required:
        - ReservedCacheNodesOfferingId
      title: PurchaseReservedCacheNodesOfferingMessage
      properties:
        ReservedCacheNodesOfferingId:
          $ref: '#/components/schemas/String'
          description: '<p>The ID of the reserved cache node offering to purchase.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>'
        ReservedCacheNodeId:
          $ref: '#/components/schemas/String'
          description: '<p>A customer-specified identifier to track this reservation.</p> <note> <p>The Reserved Cache Node ID is an unique customer-specified identifier to track this reservation. If this parameter is not specified, ElastiCache automatically generates an identifier for the reservation.</p> </note> <p>Example: myreservationID</p>'
        CacheNodeCount:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of cache node instances to reserve.</p> <p>Default: <code>1</code> </p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'
      description: Represents the input of a <code>PurchaseReservedCacheNodesOffering</code> operation.
    ReservedCacheNode:
      type: object
      properties:
        ReservedCacheNodeId:
          $ref: '#/components/schemas/String'
          description: The unique identifier for the reservation.
        ReservedCacheNodesOfferingId:
          $ref: '#/components/schemas/String'
          description: The offering identifier.
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: '<p>The cache node type for the reserved cache nodes.</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
        StartTime:
          $ref: '#/components/schemas/TStamp'
          description: The time the reservation started.
        Duration:
          $ref: '#/components/schemas/Integer'
          description: The duration of the reservation in seconds.
        FixedPrice:
          $ref: '#/components/schemas/Double'
          description: The fixed price charged for this reserved cache node.
        UsagePrice:
          $ref: '#/components/schemas/Double'
          description: The hourly price charged for this reserved cache node.
        CacheNodeCount:
          $ref: '#/components/schemas/Integer'
          description: The number of cache nodes that have been reserved.
        ProductDescription:
          $ref: '#/components/schemas/String'
          description: The description of the reserved cache node.
        OfferingType:
          $ref: '#/components/schemas/String'
          description: The offering type of this reserved cache node.
        State:
          $ref: '#/components/schemas/String'
          description: The state of the reserved cache node.
        RecurringCharges:
          $ref: '#/components/schemas/RecurringChargeList'
          description: The recurring price charged to run this reserved cache node.
        ReservationARN:
          $ref: '#/components/schemas/String'
          description: '<p>The Amazon Resource Name (ARN) of the reserved cache node.</p> <p>Example: <code>arn:aws:elasticache:us-east-1:123456789012:reserved-instance:ri-2017-03-27-08-33-25-582</code> </p>'
      description: Represents the output of a <code>PurchaseReservedCacheNodesOffering</code> operation.
    RebalanceSlotsInGlobalReplicationGroupMessage:
      type: object
      required:
        - GlobalReplicationGroupId
        - ApplyImmediately
      title: RebalanceSlotsInGlobalReplicationGroupMessage
      properties:
        GlobalReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The name of the Global datastore
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
          description: 'If <code>True</code>, redistribution is applied immediately.'
    RebootCacheClusterMessage:
      type: object
      required:
        - CacheClusterId
        - CacheNodeIdsToReboot
      title: RebootCacheClusterMessage
      properties:
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: The cluster identifier. This parameter is stored as a lowercase string.
        CacheNodeIdsToReboot:
          $ref: '#/components/schemas/CacheNodeIdsList'
          description: 'A list of cache node IDs to reboot. A node ID is a numeric identifier (0001, 0002, etc.). To reboot an entire cluster, specify all of the cache node IDs.'
      description: Represents the input of a <code>RebootCacheCluster</code> operation.
    RecurringCharge:
      type: object
      properties:
        RecurringChargeAmount:
          $ref: '#/components/schemas/Double'
          description: The monetary amount of the recurring charge.
        RecurringChargeFrequency:
          $ref: '#/components/schemas/String'
          description: The frequency of the recurring charge.
      description: 'Contains the specific price and frequency of a recurring charges for a reserved cache node, or for a reserved cache node offering.'
    RecurringChargeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RecurringCharge'
          - xml:
              name: RecurringCharge
    RemoveTagsFromResourceMessage:
      type: object
      required:
        - ResourceName
        - TagKeys
      title: RemoveTagsFromResourceMessage
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
          description: '<p>The Amazon Resource Name (ARN) of the resource from which you want the tags removed, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code> or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Service Namespaces</a>.</p>'
        TagKeys:
          $ref: '#/components/schemas/KeyList'
          description: A list of <code>TagKeys</code> identifying the tags you want removed from the named resource.
      description: Represents the input of a <code>RemoveTagsFromResource</code> operation.
    ReplicationGroupPendingModifiedValues:
      type: object
      properties:
        PrimaryClusterId:
          $ref: '#/components/schemas/String'
          description: 'The primary cluster ID that is applied immediately (if <code>--apply-immediately</code> was specified), or during the next maintenance window.'
        AutomaticFailoverStatus:
          $ref: '#/components/schemas/PendingAutomaticFailoverStatus'
          description: Indicates the status of automatic failover for this Redis replication group.
        Resharding:
          $ref: '#/components/schemas/ReshardingStatus'
          description: The status of an online resharding operation.
        AuthTokenStatus:
          $ref: '#/components/schemas/AuthTokenUpdateStatus'
          description: The auth token status
        UserGroups:
          $ref: '#/components/schemas/UserGroupsUpdateStatus'
          description: The user groups being modified.
        LogDeliveryConfigurations:
          $ref: '#/components/schemas/PendingLogDeliveryConfigurationList'
          description: 'The log delivery configurations being modified '
      description: 'The settings to be applied to the Redis replication group, either immediately or during the next maintenance window.'
    ReplicationGroupOutpostArnList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: ReplicationGroupOutpostArn
    ReplicationGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReplicationGroup'
          - xml:
              name: ReplicationGroup
    ReshardingStatus:
      type: object
      properties:
        SlotMigration:
          $ref: '#/components/schemas/SlotMigration'
          description: Represents the progress of an online resharding operation.
      description: The status of an online resharding operation.
    UserGroupsUpdateStatus:
      type: object
      properties:
        UserGroupIdsToAdd:
          $ref: '#/components/schemas/UserGroupIdList'
          description: The list of user group IDs to add.
        UserGroupIdsToRemove:
          $ref: '#/components/schemas/UserGroupIdList'
          description: The list of user group IDs to remove.
      description: The status of the user group update.
    ReservedCacheNodeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedCacheNode'
          - xml:
              name: ReservedCacheNode
    ReservedCacheNodesOffering:
      type: object
      properties:
        ReservedCacheNodesOfferingId:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the reserved cache node offering.
        CacheNodeType:
          $ref: '#/components/schemas/String'
          description: '<p>The cache node type for the reserved cache node.</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>'
        Duration:
          $ref: '#/components/schemas/Integer'
          description: The duration of the offering. in seconds.
        FixedPrice:
          $ref: '#/components/schemas/Double'
          description: The fixed price charged for this offering.
        UsagePrice:
          $ref: '#/components/schemas/Double'
          description: The hourly price charged for this offering.
        ProductDescription:
          $ref: '#/components/schemas/String'
          description: The cache engine used by the offering.
        OfferingType:
          $ref: '#/components/schemas/String'
          description: The offering type.
        RecurringCharges:
          $ref: '#/components/schemas/RecurringChargeList'
          description: The recurring price charged to run this reserved cache node.
      description: Describes all of the attributes of a reserved cache node offering.
    ReservedCacheNodesOfferingList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedCacheNodesOffering'
          - xml:
              name: ReservedCacheNodesOffering
    ResetCacheParameterGroupMessage:
      type: object
      required:
        - CacheParameterGroupName
      title: ResetCacheParameterGroupMessage
      properties:
        CacheParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache parameter group to reset.
        ResetAllParameters:
          $ref: '#/components/schemas/Boolean'
          description: '<p>If <code>true</code>, all parameters in the cache parameter group are reset to their default values. If <code>false</code>, only the parameters listed by <code>ParameterNameValues</code> are reset to their default values.</p> <p>Valid values: <code>true</code> | <code>false</code> </p>'
        ParameterNameValues:
          $ref: '#/components/schemas/ParameterNameValueList'
          description: 'An array of parameter names to reset to their default values. If <code>ResetAllParameters</code> is <code>true</code>, do not use <code>ParameterNameValues</code>. If <code>ResetAllParameters</code> is <code>false</code>, you must specify the name of at least one parameter to reset.'
      description: Represents the input of a <code>ResetCacheParameterGroup</code> operation.
    SlotMigration:
      type: object
      properties:
        ProgressPercentage:
          $ref: '#/components/schemas/Double'
          description: The percentage of the slot migration that is complete.
      description: Represents the progress of an online resharding operation.
    RevokeCacheSecurityGroupIngressMessage:
      type: object
      required:
        - CacheSecurityGroupName
        - EC2SecurityGroupName
        - EC2SecurityGroupOwnerId
      title: RevokeCacheSecurityGroupIngressMessage
      properties:
        CacheSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cache security group to revoke ingress from.
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the Amazon EC2 security group to revoke access from.
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
          description: The Amazon account number of the Amazon EC2 security group owner. Note that this is not the same thing as an Amazon access key ID - you must provide a valid Amazon account number for this parameter.
      description: Represents the input of a <code>RevokeCacheSecurityGroupIngress</code> operation.
    SecurityGroupMembership:
      type: object
      properties:
        SecurityGroupId:
          $ref: '#/components/schemas/String'
          description: The identifier of the cache security group.
        Status:
          $ref: '#/components/schemas/String'
          description: 'The status of the cache security group membership. The status changes whenever a cache security group is modified, or when the cache security groups assigned to a cluster are modified.'
      description: Represents a single cache security group and its status.
    ServiceUpdateSeverity:
      type: string
      enum:
        - critical
        - important
        - medium
        - low
    ServiceUpdateType:
      type: string
      enum:
        - security-update
    ServiceUpdate:
      type: object
      properties:
        ServiceUpdateName:
          $ref: '#/components/schemas/String'
          description: The unique ID of the service update
        ServiceUpdateReleaseDate:
          $ref: '#/components/schemas/TStamp'
          description: The date when the service update is initially available
        ServiceUpdateEndDate:
          $ref: '#/components/schemas/TStamp'
          description: The date after which the service update is no longer available
        ServiceUpdateSeverity:
          $ref: '#/components/schemas/ServiceUpdateSeverity'
          description: The severity of the service update
        ServiceUpdateRecommendedApplyByDate:
          $ref: '#/components/schemas/TStamp'
          description: 'The recommendend date to apply the service update in order to ensure compliance. For information on compliance, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/elasticache-compliance.html#elasticache-compliance-self-service">Self-Service Security Updates for Compliance</a>.'
        ServiceUpdateStatus:
          $ref: '#/components/schemas/ServiceUpdateStatus'
          description: The status of the service update
        ServiceUpdateDescription:
          $ref: '#/components/schemas/String'
          description: Provides details of the service update
        ServiceUpdateType:
          $ref: '#/components/schemas/ServiceUpdateType'
          description: Reflects the nature of the service update
        Engine:
          $ref: '#/components/schemas/String'
          description: The Elasticache engine to which the update applies. Either Redis or Memcached
        EngineVersion:
          $ref: '#/components/schemas/String'
          description: The Elasticache engine version to which the update applies. Either Redis or Memcached engine version
        AutoUpdateAfterRecommendedApplyByDate:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'Indicates whether the service update will be automatically applied once the recommended apply-by date has expired. '
        EstimatedUpdateTime:
          $ref: '#/components/schemas/String'
          description: The estimated length of time the service update will take
      description: An update that you can apply to your Redis clusters.
    ServiceUpdateList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ServiceUpdate'
          - xml:
              name: ServiceUpdate
    SlaMet:
      type: string
      enum:
        - 'yes'
        - 'no'
        - n/a
    StartMigrationMessage:
      type: object
      required:
        - ReplicationGroupId
        - CustomerNodeEndpointList
      title: StartMigrationMessage
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The ID of the replication group to which data should be migrated.
        CustomerNodeEndpointList:
          $ref: '#/components/schemas/CustomerNodeEndpointList'
          description: 'List of endpoints from which data should be migrated. For Redis (cluster mode disabled), list should have only one element.'
    SubnetOutpost:
      type: object
      properties:
        SubnetOutpostArn:
          $ref: '#/components/schemas/String'
          description: The outpost ARN of the subnet.
      description: The ID of the outpost subnet.
    Subnet:
      type: object
      properties:
        SubnetIdentifier:
          $ref: '#/components/schemas/String'
          description: The unique identifier for the subnet.
        SubnetAvailabilityZone:
          $ref: '#/components/schemas/AvailabilityZone'
          description: The Availability Zone associated with the subnet.
        SubnetOutpost:
          $ref: '#/components/schemas/SubnetOutpost'
          description: The outpost ARN of the subnet.
      description: Represents the subnet associated with a cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with ElastiCache.
    TestFailoverMessage:
      type: object
      required:
        - ReplicationGroupId
        - NodeGroupId
      title: TestFailoverMessage
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: 'The name of the replication group (console: cluster) whose automatic failover is being tested by this operation.'
        NodeGroupId:
          $ref: '#/components/schemas/AllowedNodeGroupId'
          description: The name of the node group (called shard in the console) in this replication group on which automatic failover is to be tested. You may test automatic failover on up to 5 node groups in any rolling 24-hour period.
    UGReplicationGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    UnprocessedUpdateAction:
      type: object
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The replication group ID
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: The ID of the cache cluster
        ServiceUpdateName:
          $ref: '#/components/schemas/String'
          description: The unique ID of the service update
        ErrorType:
          $ref: '#/components/schemas/String'
          description: The error type for requests that are not processed
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: The error message that describes the reason the request was not processed
      description: Update action that has failed to be processed for the corresponding apply/stop request
    UnprocessedUpdateActionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/UnprocessedUpdateAction'
          - xml:
              name: UnprocessedUpdateAction
    UpdateAction:
      type: object
      properties:
        ReplicationGroupId:
          $ref: '#/components/schemas/String'
          description: The ID of the replication group
        CacheClusterId:
          $ref: '#/components/schemas/String'
          description: The ID of the cache cluster
        ServiceUpdateName:
          $ref: '#/components/schemas/String'
          description: The unique ID of the service update
        ServiceUpdateReleaseDate:
          $ref: '#/components/schemas/TStamp'
          description: The date the update is first available
        ServiceUpdateSeverity:
          $ref: '#/components/schemas/ServiceUpdateSeverity'
          description: The severity of the service update
        ServiceUpdateStatus:
          $ref: '#/components/schemas/ServiceUpdateStatus'
          description: The status of the service update
        ServiceUpdateRecommendedApplyByDate:
          $ref: '#/components/schemas/TStamp'
          description: 'The recommended date to apply the service update to ensure compliance. For information on compliance, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/elasticache-compliance.html#elasticache-compliance-self-service">Self-Service Security Updates for Compliance</a>.'
        ServiceUpdateType:
          $ref: '#/components/schemas/ServiceUpdateType'
          description: 'Reflects the nature of the service update '
        UpdateActionAvailableDate:
          $ref: '#/components/schemas/TStamp'
          description: The date that the service update is available to a replication group
        UpdateActionStatus:
          $ref: '#/components/schemas/UpdateActionStatus'
          description: The status of the update action
        NodesUpdated:
          $ref: '#/components/schemas/String'
          description: The progress of the service update on the replication group
        UpdateActionStatusModifiedDate:
          $ref: '#/components/schemas/TStamp'
          description: The date when the UpdateActionStatus was last modified
        SlaMet:
          $ref: '#/components/schemas/SlaMet'
          description: 'If yes, all nodes in the replication group have been updated by the recommended apply-by date. If no, at least one node in the replication group have not been updated by the recommended apply-by date. If N/A, the replication group was created after the recommended apply-by date.'
        NodeGroupUpdateStatus:
          $ref: '#/components/schemas/NodeGroupUpdateStatusList'
          description: The status of the service update on the node group
        CacheNodeUpdateStatus:
          $ref: '#/components/schemas/CacheNodeUpdateStatusList'
          description: The status of the service update on the cache node
        EstimatedUpdateTime:
          $ref: '#/components/schemas/String'
          description: The estimated length of time for the update to complete
        Engine:
          $ref: '#/components/schemas/String'
          description: The Elasticache engine to which the update applies. Either Redis or Memcached
      description: The status of the service update for a specific replication group
    UpdateActionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/UpdateAction'
          - xml:
              name: UpdateAction
    UserIdList:
      type: array
      items:
        $ref: '#/components/schemas/UserId'
    UserGroupPendingChanges:
      type: object
      properties:
        UserIdsToRemove:
          $ref: '#/components/schemas/UserIdList'
          description: The list of user IDs to remove.
        UserIdsToAdd:
          $ref: '#/components/schemas/UserIdList'
          description: The list of user IDs to add.
      description: Returns the updates being applied to the user group.
security:
  - hmac: []
