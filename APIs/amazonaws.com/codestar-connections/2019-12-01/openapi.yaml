openapi: 3.0.0
info:
  version: '2019-12-01'
  x-release: v4
  title: AWS CodeStar connections
  description: '<fullname>AWS CodeStar Connections</fullname> <p>This AWS CodeStar Connections API Reference provides descriptions and usage examples of the operations and data types for the AWS CodeStar Connections API. You can use the connections API to work with connections and installations.</p> <p> <i>Connections</i> are configurations that you use to connect AWS resources to external code repositories. Each connection is a resource that can be given to services such as CodePipeline to connect to a third-party repository such as Bitbucket. For example, you can add the connection in CodePipeline so that it triggers your pipeline when a code change is made to your third-party code repository. Each connection is named and associated with a unique ARN that is used to reference the connection.</p> <p>When you create a connection, the console initiates a third-party connection handshake. <i>Installations</i> are the apps that are used to conduct this handshake. For example, the installation for the Bitbucket provider type is the Bitbucket app. When you create a connection, you can choose an existing installation or create one.</p> <p>When you want to create a connection to an installed provider type such as GitHub Enterprise Server, you create a <i>host</i> for your connections.</p> <p>You can work with connections by calling:</p> <ul> <li> <p> <a>CreateConnection</a>, which creates a uniquely named connection that can be referenced by services such as CodePipeline.</p> </li> <li> <p> <a>DeleteConnection</a>, which deletes the specified connection.</p> </li> <li> <p> <a>GetConnection</a>, which returns information about the connection, including the connection status.</p> </li> <li> <p> <a>ListConnections</a>, which lists the connections associated with your account.</p> </li> </ul> <p>You can work with hosts by calling:</p> <ul> <li> <p> <a>CreateHost</a>, which creates a host that represents the infrastructure where your provider is installed.</p> </li> <li> <p> <a>DeleteHost</a>, which deletes the specified host.</p> </li> <li> <p> <a>GetHost</a>, which returns information about the host, including the setup status.</p> </li> <li> <p> <a>ListHosts</a>, which lists the hosts associated with your account.</p> </li> </ul> <p>You can work with tags in AWS CodeStar Connections by calling the following:</p> <ul> <li> <p> <a>ListTagsForResource</a>, which gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS CodeStar Connections.</p> </li> <li> <p> <a>TagResource</a>, which adds or updates tags for a resource in AWS CodeStar Connections.</p> </li> <li> <p> <a>UntagResource</a>, which removes tags for a resource in AWS CodeStar Connections.</p> </li> </ul> <p>For information about how to use AWS CodeStar Connections, see the <a href="https://docs.aws.amazon.com/dtconsole/latest/userguide/welcome-connections.html">Developer Tools User Guide</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: codestar-connections
  x-aws-signingName: codestar-connections
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codestar-connections-2019-12-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/codestar-connections/'
servers:
  - url: 'http://codestar-connections.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS CodeStar connections multi-region endpoint
  - url: 'https://codestar-connections.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS CodeStar connections multi-region endpoint
  - url: 'http://codestar-connections.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS CodeStar connections endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://codestar-connections.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS CodeStar connections endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.CreateConnection:
    post:
      operationId: CreateConnection
      description: Creates a connection that can then be given to other AWS services like CodePipeline so that it can access third-party code repositories. The connection is in pending status until the third-party connection handshake is completed from the console.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConnectionOutput'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - com.amazonaws.codestar.connections.CodeStar_connections_20191201.CreateConnection
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.CreateHost:
    post:
      operationId: CreateHost
      description: '<p>Creates a resource that represents the infrastructure where a third-party provider is installed. The host is used when you create connections to an installed third-party provider type, such as GitHub Enterprise Server. You create one host for all connections to that provider.</p> <note> <p>A host created through the CLI or the SDK is in `PENDING` status by default. You can make its status `AVAILABLE` by setting up the host in the console.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHostOutput'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHostInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - com.amazonaws.codestar.connections.CodeStar_connections_20191201.CreateHost
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.DeleteConnection:
    post:
      operationId: DeleteConnection
      description: The connection to be deleted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConnectionOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConnectionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - com.amazonaws.codestar.connections.CodeStar_connections_20191201.DeleteConnection
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.DeleteHost:
    post:
      operationId: DeleteHost
      description: '<p>The host to be deleted. Before you delete a host, all connections associated to the host must be deleted.</p> <note> <p>A host cannot be deleted if it is in the VPC_CONFIG_INITIALIZING or VPC_CONFIG_DELETING state.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHostOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHostInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - com.amazonaws.codestar.connections.CodeStar_connections_20191201.DeleteHost
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.GetConnection:
    post:
      operationId: GetConnection
      description: 'Returns the connection ARN and details such as status, owner, and provider type.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectionOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConnectionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - com.amazonaws.codestar.connections.CodeStar_connections_20191201.GetConnection
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.GetHost:
    post:
      operationId: GetHost
      description: 'Returns the host ARN and details such as status, provider type, endpoint, and, if applicable, the VPC configuration.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHostOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetHostInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - com.amazonaws.codestar.connections.CodeStar_connections_20191201.GetHost
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListConnections:
    post:
      operationId: ListConnections
      description: Lists the connections associated with your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListConnectionsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListConnections
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListHosts:
    post:
      operationId: ListHosts
      description: Lists the hosts associated with your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHostsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListHostsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListHosts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Gets the set of key-value pairs (metadata) that are used to manage the resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.TagResource:
    post:
      operationId: TagResource
      description: Adds to or modifies the tags of the given resource. Tags are metadata that can be used to manage a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - com.amazonaws.codestar.connections.CodeStar_connections_20191201.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.UntagResource:
    post:
      operationId: UntagResource
      description: Removes tags from an AWS resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - com.amazonaws.codestar.connections.CodeStar_connections_20191201.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.UpdateHost:
    post:
      operationId: UpdateHost
      description: Updates a specified host with the provided configurations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHostOutput'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '483':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHostInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - com.amazonaws.codestar.connections.CodeStar_connections_20191201.UpdateHost
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateConnectionOutput:
      type: object
      required:
        - ConnectionArn
      properties:
        ConnectionArn:
          $ref: '#/components/schemas/ConnectionArn'
          description: <p>The Amazon Resource Name (ARN) of the connection to be created. The ARN is used as the connection reference when the connection is shared between AWS services.</p> <note> <p>The ARN is never reused if the connection is deleted.</p> </note>
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Specifies the tags applied to the resource.
    CreateConnectionInput:
      type: object
      required:
        - ConnectionName
      title: CreateConnectionInput
      properties:
        ProviderType:
          $ref: '#/components/schemas/ProviderType'
          description: The name of the external provider where your third-party code repository is configured.
        ConnectionName:
          $ref: '#/components/schemas/ConnectionName'
          description: The name of the connection to be created. The name must be unique in the calling AWS account.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The key-value pair to use when tagging the resource.
        HostArn:
          $ref: '#/components/schemas/HostArn'
          description: The Amazon Resource Name (ARN) of the host associated with the connection to be created.
    LimitExceededException: {}
    ResourceNotFoundException: {}
    ResourceUnavailableException: {}
    CreateHostOutput:
      type: object
      properties:
        HostArn:
          $ref: '#/components/schemas/HostArn'
          description: The Amazon Resource Name (ARN) of the host to be created.
        Tags:
          $ref: '#/components/schemas/TagList'
    CreateHostInput:
      type: object
      required:
        - Name
        - ProviderType
        - ProviderEndpoint
      title: CreateHostInput
      properties:
        Name:
          $ref: '#/components/schemas/HostName'
          description: The name of the host to be created. The name must be unique in the calling AWS account.
        ProviderType:
          $ref: '#/components/schemas/ProviderType'
          description: The name of the installed provider to be associated with your connection. The host resource represents the infrastructure where your provider type is installed. The valid provider type is GitHub Enterprise Server.
        ProviderEndpoint:
          $ref: '#/components/schemas/Url'
          description: The endpoint of the infrastructure to be represented by the host after it is created.
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
          description: The VPC configuration to be provisioned for the host. A VPC must be configured and the infrastructure to be represented by the host must already be connected to the VPC.
        Tags:
          $ref: '#/components/schemas/TagList'
    DeleteConnectionOutput:
      type: object
      properties: {}
    DeleteConnectionInput:
      type: object
      required:
        - ConnectionArn
      title: DeleteConnectionInput
      properties:
        ConnectionArn:
          $ref: '#/components/schemas/ConnectionArn'
          description: <p>The Amazon Resource Name (ARN) of the connection to be deleted.</p> <note> <p>The ARN is never reused if the connection is deleted.</p> </note>
    DeleteHostOutput:
      type: object
      properties: {}
    DeleteHostInput:
      type: object
      required:
        - HostArn
      title: DeleteHostInput
      properties:
        HostArn:
          $ref: '#/components/schemas/HostArn'
          description: The Amazon Resource Name (ARN) of the host to be deleted.
    GetConnectionOutput:
      type: object
      properties:
        Connection:
          $ref: '#/components/schemas/Connection'
          description: 'The connection details, such as status, owner, and provider type.'
    GetConnectionInput:
      type: object
      required:
        - ConnectionArn
      title: GetConnectionInput
      properties:
        ConnectionArn:
          $ref: '#/components/schemas/ConnectionArn'
          description: The Amazon Resource Name (ARN) of a connection.
    GetHostOutput:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/HostName'
          description: The name of the requested host.
        Status:
          $ref: '#/components/schemas/HostStatus'
          description: The status of the requested host.
        ProviderType:
          $ref: '#/components/schemas/ProviderType'
          description: 'The provider type of the requested host, such as GitHub Enterprise Server.'
        ProviderEndpoint:
          $ref: '#/components/schemas/Url'
          description: The endpoint of the infrastructure represented by the requested host.
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
          description: The VPC configuration of the requested host.
    GetHostInput:
      type: object
      required:
        - HostArn
      title: GetHostInput
      properties:
        HostArn:
          $ref: '#/components/schemas/HostArn'
          description: The Amazon Resource Name (ARN) of the requested host.
    ListConnectionsOutput:
      type: object
      properties:
        Connections:
          $ref: '#/components/schemas/ConnectionList'
          description: 'A list of connections and the details for each connection, such as status, owner, and provider type.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that can be used in the next <code>ListConnections</code> call. To view all items in the list, continue to call this operation with each subsequent token until no more <code>nextToken</code> values are returned.'
    ListConnectionsInput:
      type: object
      title: ListConnectionsInput
      properties:
        ProviderTypeFilter:
          $ref: '#/components/schemas/ProviderType'
          description: 'Filters the list of connections to those associated with a specified provider, such as Bitbucket.'
        HostArnFilter:
          $ref: '#/components/schemas/HostArn'
          description: Filters the list of connections to those associated with a specified host.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token that was returned from the previous <code>ListConnections</code> call, which can be used to return the next set of connections in the list.'
    ListHostsOutput:
      type: object
      properties:
        Hosts:
          $ref: '#/components/schemas/HostList'
          description: 'A list of hosts and the details for each host, such as status, endpoint, and provider type.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that can be used in the next <code>ListHosts</code> call. To view all items in the list, continue to call this operation with each subsequent token until no more <code>nextToken</code> values are returned.'
    ListHostsInput:
      type: object
      title: ListHostsInput
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token that was returned from the previous <code>ListHosts</code> call, which can be used to return the next set of hosts in the list.'
    ListTagsForResourceOutput:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag key and value pairs associated with the specified resource.
    ListTagsForResourceInput:
      type: object
      required:
        - ResourceArn
      title: ListTagsForResourceInput
      properties:
        ResourceArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: 'The Amazon Resource Name (ARN) of the resource for which you want to get information about tags, if any.'
    TagResourceOutput:
      type: object
      properties: {}
    TagResourceInput:
      type: object
      required:
        - ResourceArn
        - Tags
      title: TagResourceInput
      properties:
        ResourceArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the resource to which you want to add or update tags.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags you want to modify or add to the resource.
    UntagResourceOutput:
      type: object
      properties: {}
    UntagResourceInput:
      type: object
      required:
        - ResourceArn
        - TagKeys
      title: UntagResourceInput
      properties:
        ResourceArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the resource to remove tags from.
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: The list of keys for the tags to be removed from the resource.
    UpdateHostOutput:
      type: object
      properties: {}
    UpdateHostInput:
      type: object
      required:
        - HostArn
      title: UpdateHostInput
      properties:
        HostArn:
          $ref: '#/components/schemas/HostArn'
          description: The Amazon Resource Name (ARN) of the host to be updated.
        ProviderEndpoint:
          $ref: '#/components/schemas/Url'
          description: The URL or endpoint of the host to be updated.
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
          description: The VPC configuration of the host to be updated. A VPC must be configured and the infrastructure to be represented by the host must already be connected to the VPC.
    ConflictException: {}
    UnsupportedOperationException: {}
    AccountId:
      type: string
      pattern: '[0-9]{12}'
      minLength: 12
      maxLength: 12
    AmazonResourceName:
      type: string
      pattern: 'arn:aws(-[\w]+)*:.+:.+:[0-9]{12}:.+'
      minLength: 1
      maxLength: 1011
    ConnectionName:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      maxLength: 32
    ConnectionArn:
      type: string
      pattern: 'arn:aws(-[\w]+)*:.+:.+:[0-9]{12}:.+'
      minLength: 0
      maxLength: 256
    ProviderType:
      type: string
      enum:
        - Bitbucket
        - GitHub
        - GitHubEnterpriseServer
    ConnectionStatus:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - ERROR
    HostArn:
      type: string
      pattern: 'arn:aws(-[\w]+)*:codestar-connections:.+:[0-9]{12}:host\/.+'
      minLength: 0
      maxLength: 256
    Connection:
      type: object
      properties:
        ConnectionName:
          $ref: '#/components/schemas/ConnectionName'
          description: The name of the connection. Connection names must be unique in an AWS user account.
        ConnectionArn:
          $ref: '#/components/schemas/ConnectionArn'
          description: <p>The Amazon Resource Name (ARN) of the connection. The ARN is used as the connection reference when the connection is shared between AWS services.</p> <note> <p>The ARN is never reused if the connection is deleted.</p> </note>
        ProviderType:
          $ref: '#/components/schemas/ProviderType'
          description: The name of the external provider where your third-party code repository is configured.
        OwnerAccountId:
          $ref: '#/components/schemas/AccountId'
          description: 'The identifier of the external provider where your third-party code repository is configured. For Bitbucket, this is the account ID of the owner of the Bitbucket repository.'
        ConnectionStatus:
          $ref: '#/components/schemas/ConnectionStatus'
          description: 'The current status of the connection. '
        HostArn:
          $ref: '#/components/schemas/HostArn'
          description: The Amazon Resource Name (ARN) of the host associated with the connection.
      description: '<p>A resource that is used to connect third-party source providers with services like AWS CodePipeline.</p> <p>Note: A connection created through CloudFormation, the CLI, or the SDK is in `PENDING` status by default. You can make its status `AVAILABLE` by updating the connection in the console.</p>'
    ConnectionList:
      type: array
      items:
        $ref: '#/components/schemas/Connection'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 200
    HostName:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 64
    Url:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 512
    VpcConfiguration:
      type: object
      required:
        - VpcId
        - SubnetIds
        - SecurityGroupIds
      properties:
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: The ID of the Amazon VPC connected to the infrastructure where your provider type is installed.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIds'
          description: The ID of the subnet or subnets associated with the Amazon VPC connected to the infrastructure where your provider type is installed.
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIds'
          description: The ID of the security group or security groups associated with the Amazon VPC connected to the infrastructure where your provider type is installed.
        TlsCertificate:
          $ref: '#/components/schemas/TlsCertificate'
          description: The value of the Transport Layer Security (TLS) certificate associated with the infrastructure where your provider type is installed.
      description: The VPC configuration provisioned for the host.
    HostStatus:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 64
    HostStatusMessage:
      type: string
    Host:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/HostName'
          description: The name of the host.
        HostArn:
          $ref: '#/components/schemas/HostArn'
          description: The Amazon Resource Name (ARN) of the host.
        ProviderType:
          $ref: '#/components/schemas/ProviderType'
          description: The name of the installed provider to be associated with your connection. The host resource represents the infrastructure where your provider type is installed. The valid provider type is GitHub Enterprise Server.
        ProviderEndpoint:
          $ref: '#/components/schemas/Url'
          description: The endpoint of the infrastructure where your provider type is installed.
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
          description: The VPC configuration provisioned for the host.
        Status:
          $ref: '#/components/schemas/HostStatus'
          description: 'The status of the host, such as PENDING, AVAILABLE, VPC_CONFIG_DELETING, VPC_CONFIG_INITIALIZING, and VPC_CONFIG_FAILED_INITIALIZATION.'
        StatusMessage:
          $ref: '#/components/schemas/HostStatusMessage'
          description: The status description for the host.
      description: '<p>A resource that represents the infrastructure where a third-party provider is installed. The host is used when you create connections to an installed third-party provider type, such as GitHub Enterprise Server. You create one host for all connections to that provider.</p> <note> <p>A host created through the CLI or the SDK is in `PENDING` status by default. You can make its status `AVAILABLE` by setting up the host in the console.</p> </note>'
    HostList:
      type: array
      items:
        $ref: '#/components/schemas/Host'
    MaxResults:
      type: integer
      minimum: 0
      maximum: 100
    NextToken:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    SecurityGroupId:
      type: string
      pattern: 'sg-\w{8}(\w{9})?'
      minLength: 11
      maxLength: 20
    SecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      minItems: 1
      maxItems: 10
    SubnetId:
      type: string
      pattern: 'subnet-\w{8}(\w{9})?'
      minLength: 15
      maxLength: 24
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
      minItems: 1
      maxItems: 10
    TagKey:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The tag's key.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The tag's value.
      description: <p>A tag is a key-value pair that is used to manage the resource.</p> <p>This tag is available for use by AWS services that support tags.</p>
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 200
    TlsCertificate:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      maxLength: 16384
    VpcId:
      type: string
      pattern: 'vpc-\w{8}(\w{9})?'
      minLength: 12
      maxLength: 21
security:
  - hmac: []
