openapi: 3.0.0
info:
  version: '2017-09-29'
  x-release: v4
  title: AWS IoT Jobs Data Plane
  description: '<p>AWS IoT Jobs is a service that allows you to define a set of jobs â€” remote operations that are sent to and executed on one or more devices connected to AWS IoT. For example, you can define a job that instructs a set of devices to download and install application or firmware updates, reboot, rotate certificates, or perform remote troubleshooting operations.</p> <p> To create a job, you make a job document which is a description of the remote operations to be performed, and you specify a list of targets that should perform the operations. The targets can be individual things, thing groups or both.</p> <p> AWS IoT Jobs sends a message to inform the targets that a job is available. The target starts the execution of the job by downloading the job document, performing the operations it specifies, and reporting its progress to AWS IoT. The Jobs service provides commands to track the progress of a job on a specific target and for all the targets of the job</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: iot-jobs-data
  x-aws-signingName: iot-jobs-data
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot-jobs-data-2017-09-29.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iot/'
servers:
  - url: 'http://data.jobs.iot.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT Jobs Data Plane multi-region endpoint
  - url: 'https://data.jobs.iot.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT Jobs Data Plane multi-region endpoint
  - url: 'http://data.jobs.iot.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Jobs Data Plane endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://data.jobs.iot.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Jobs Data Plane endpoint for China (Beijing) and China (Ningxia)
paths:
  '/things/{thingName}/jobs/{jobId}':
    get:
      operationId: DescribeJobExecution
      description: Gets details of a job execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobExecutionResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: CertificateValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
        '485':
          description: TerminalStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalStateException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier assigned to this job when it was created.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+|^\$next'
        - name: thingName
          in: path
          required: true
          description: The thing name associated with the device the job execution is running on.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: includeJobDocument
          in: query
          required: false
          description: 'Optional. When set to true, the response contains the job document. The default is false.'
          schema:
            type: boolean
        - name: executionNumber
          in: query
          required: false
          description: 'Optional. A number that identifies a particular job execution on a particular device. If not specified, the latest job execution is returned.'
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateJobExecution
      description: Updates the status of a job execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateJobExecutionResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: CertificateValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
        '485':
          description: InvalidStateTransitionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateTransitionException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier assigned to this job when it was created.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
        - name: thingName
          in: path
          required: true
          description: The name of the thing associated with the device.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  description: 'The new status for the job execution (IN_PROGRESS, FAILED, SUCCESS, or REJECTED). This must be specified on every update.'
                  type: string
                  enum:
                    - QUEUED
                    - IN_PROGRESS
                    - SUCCEEDED
                    - FAILED
                    - TIMED_OUT
                    - REJECTED
                    - REMOVED
                    - CANCELED
                statusDetails:
                  description: ' Optional. A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/DetailsValue'
                stepTimeoutInMinutes:
                  description: 'Specifies the amount of time this device has to finish execution of this job. If the job execution status is not set to a terminal state before this timer expires, or before the timer is reset (by again calling <code>UpdateJobExecution</code>, setting the status to <code>IN_PROGRESS</code> and specifying a new timeout value in this field) the job execution status will be automatically set to <code>TIMED_OUT</code>. Note that setting or resetting this timeout has no effect on that job execution timeout which may have been specified when the job was created (<code>CreateJob</code> using field <code>timeoutConfig</code>).'
                  type: integer
                expectedVersion:
                  description: 'Optional. The expected current version of the job execution. Each time you update the job execution, its version is incremented. If the version of the job execution stored in Jobs does not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that contains the current job execution status data is returned. (This makes it unnecessary to perform a separate DescribeJobExecution request in order to obtain the job execution status data.)'
                  type: integer
                includeJobExecutionState:
                  description: 'Optional. When included and set to true, the response contains the JobExecutionState data. The default is false.'
                  type: boolean
                includeJobDocument:
                  description: 'Optional. When set to true, the response contains the job document. The default is false.'
                  type: boolean
                executionNumber:
                  description: Optional. A number that identifies a particular job execution on a particular device.
                  type: integer
  '/things/{thingName}/jobs':
    get:
      operationId: GetPendingJobExecutions
      description: Gets the list of all jobs for a thing that are not in a terminal status.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPendingJobExecutionsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: CertificateValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing that is executing the job.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/jobs/$next':
    put:
      operationId: StartNextPendingJobExecution
      description: Gets and starts the next pending (status IN_PROGRESS or QUEUED) job execution for a thing.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartNextPendingJobExecutionResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: CertificateValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing associated with the device.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                statusDetails:
                  description: 'A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/DetailsValue'
                stepTimeoutInMinutes:
                  description: 'Specifies the amount of time this device has to finish execution of this job. If the job execution status is not set to a terminal state before this timer expires, or before the timer is reset (by calling <code>UpdateJobExecution</code>, setting the status to <code>IN_PROGRESS</code> and specifying a new timeout value in field <code>stepTimeoutInMinutes</code>) the job execution status will be automatically set to <code>TIMED_OUT</code>. Note that setting this timeout has no effect on that job execution timeout which may have been specified when the job was created (<code>CreateJob</code> using field <code>timeoutConfig</code>).'
                  type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    DescribeJobExecutionResponse:
      type: object
      properties:
        execution:
          $ref: '#/components/schemas/JobExecution'
          description: Contains data about a job execution.
    InvalidRequestException: {}
    ResourceNotFoundException: {}
    ThrottlingException: {}
    ServiceUnavailableException: {}
    CertificateValidationException: {}
    TerminalStateException: {}
    GetPendingJobExecutionsResponse:
      type: object
      properties:
        inProgressJobs:
          $ref: '#/components/schemas/JobExecutionSummaryList'
          description: A list of JobExecutionSummary objects with status IN_PROGRESS.
        queuedJobs:
          $ref: '#/components/schemas/JobExecutionSummaryList'
          description: A list of JobExecutionSummary objects with status QUEUED.
    StartNextPendingJobExecutionResponse:
      type: object
      properties:
        execution:
          $ref: '#/components/schemas/JobExecution'
          description: A JobExecution object.
    DetailsValue:
      type: string
      pattern: '[^\p\{C\}]*\+'
      minLength: 1
      maxLength: 1024
    UpdateJobExecutionResponse:
      type: object
      properties:
        executionState:
          $ref: '#/components/schemas/JobExecutionState'
          description: A JobExecutionState object.
        jobDocument:
          $ref: '#/components/schemas/JobDocument'
          description: The contents of the Job Documents.
    InvalidStateTransitionException: {}
    ApproximateSecondsBeforeTimedOut:
      type: integer
    DescribeJobExecutionJobId:
      type: string
      pattern: '[a-zA-Z0-9_-]+|^\$next'
    ThingName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    IncludeJobDocument:
      type: boolean
    ExecutionNumber:
      type: integer
    DescribeJobExecutionRequest:
      type: object
      title: DescribeJobExecutionRequest
      properties: {}
    JobExecution:
      type: object
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was created.
        thingName:
          $ref: '#/components/schemas/ThingName'
          description: The name of the thing that is executing the job.
        status:
          $ref: '#/components/schemas/JobExecutionStatus'
          description: 'The status of the job execution. Can be one of: "QUEUED", "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or "REMOVED".'
        statusDetails:
          $ref: '#/components/schemas/DetailsMap'
          description: A collection of name/value pairs that describe the status of the job execution.
        queuedAt:
          $ref: '#/components/schemas/QueuedAt'
          description: 'The time, in milliseconds since the epoch, when the job execution was enqueued.'
        startedAt:
          $ref: '#/components/schemas/StartedAt'
          description: 'The time, in milliseconds since the epoch, when the job execution was started.'
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the job execution was last updated. '
        approximateSecondsBeforeTimedOut:
          $ref: '#/components/schemas/ApproximateSecondsBeforeTimedOut'
          description: The estimated number of seconds that remain before the job execution status will be changed to <code>TIMED_OUT</code>.
        versionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version of the job execution. Job execution versions are incremented each time they are updated by a device.
        executionNumber:
          $ref: '#/components/schemas/ExecutionNumber'
          description: A number that identifies a particular job execution on a particular device. It can be used later in commands that return or update job execution information.
        jobDocument:
          $ref: '#/components/schemas/JobDocument'
          description: The content of the job document.
      description: Contains data about a job execution.
    DetailsKey:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    DetailsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DetailsValue'
    ExpectedVersion:
      type: integer
    GetPendingJobExecutionsRequest:
      type: object
      title: GetPendingJobExecutionsRequest
      properties: {}
    JobExecutionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/JobExecutionSummary'
    IncludeExecutionState:
      type: boolean
    JobDocument:
      type: string
      maxLength: 32768
    JobId:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 64
    JobExecutionStatus:
      type: string
      enum:
        - QUEUED
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
        - TIMED_OUT
        - REJECTED
        - REMOVED
        - CANCELED
    QueuedAt:
      type: integer
    StartedAt:
      type: integer
    LastUpdatedAt:
      type: integer
    VersionNumber:
      type: integer
    JobExecutionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/JobExecutionStatus'
          description: 'The status of the job execution. Can be one of: "QUEUED", "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or "REMOVED".'
        statusDetails:
          $ref: '#/components/schemas/DetailsMap'
          description: A collection of name/value pairs that describe the status of the job execution.
        versionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version of the job execution. Job execution versions are incremented each time they are updated by a device.
      description: Contains data about the state of a job execution.
    JobExecutionSummary:
      type: object
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was created.
        queuedAt:
          $ref: '#/components/schemas/QueuedAt'
          description: 'The time, in milliseconds since the epoch, when the job execution was enqueued.'
        startedAt:
          $ref: '#/components/schemas/StartedAt'
          description: 'The time, in milliseconds since the epoch, when the job execution started.'
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the job execution was last updated.'
        versionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version of the job execution. Job execution versions are incremented each time AWS IoT Jobs receives an update from a device.
        executionNumber:
          $ref: '#/components/schemas/ExecutionNumber'
          description: A number that identifies a particular job execution on a particular device.
      description: Contains a subset of information about a job execution.
    StepTimeoutInMinutes:
      type: integer
    StartNextPendingJobExecutionRequest:
      type: object
      title: StartNextPendingJobExecutionRequest
      properties:
        statusDetails:
          $ref: '#/components/schemas/DetailsMap'
          description: 'A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged.'
        stepTimeoutInMinutes:
          $ref: '#/components/schemas/StepTimeoutInMinutes'
          description: 'Specifies the amount of time this device has to finish execution of this job. If the job execution status is not set to a terminal state before this timer expires, or before the timer is reset (by calling <code>UpdateJobExecution</code>, setting the status to <code>IN_PROGRESS</code> and specifying a new timeout value in field <code>stepTimeoutInMinutes</code>) the job execution status will be automatically set to <code>TIMED_OUT</code>. Note that setting this timeout has no effect on that job execution timeout which may have been specified when the job was created (<code>CreateJob</code> using field <code>timeoutConfig</code>).'
    UpdateJobExecutionRequest:
      type: object
      required:
        - status
      title: UpdateJobExecutionRequest
      properties:
        status:
          $ref: '#/components/schemas/JobExecutionStatus'
          description: 'The new status for the job execution (IN_PROGRESS, FAILED, SUCCESS, or REJECTED). This must be specified on every update.'
        statusDetails:
          $ref: '#/components/schemas/DetailsMap'
          description: ' Optional. A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged.'
        stepTimeoutInMinutes:
          $ref: '#/components/schemas/StepTimeoutInMinutes'
          description: 'Specifies the amount of time this device has to finish execution of this job. If the job execution status is not set to a terminal state before this timer expires, or before the timer is reset (by again calling <code>UpdateJobExecution</code>, setting the status to <code>IN_PROGRESS</code> and specifying a new timeout value in this field) the job execution status will be automatically set to <code>TIMED_OUT</code>. Note that setting or resetting this timeout has no effect on that job execution timeout which may have been specified when the job was created (<code>CreateJob</code> using field <code>timeoutConfig</code>).'
        expectedVersion:
          $ref: '#/components/schemas/ExpectedVersion'
          description: 'Optional. The expected current version of the job execution. Each time you update the job execution, its version is incremented. If the version of the job execution stored in Jobs does not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that contains the current job execution status data is returned. (This makes it unnecessary to perform a separate DescribeJobExecution request in order to obtain the job execution status data.)'
        includeJobExecutionState:
          $ref: '#/components/schemas/IncludeExecutionState'
          description: 'Optional. When included and set to true, the response contains the JobExecutionState data. The default is false.'
        includeJobDocument:
          $ref: '#/components/schemas/IncludeJobDocument'
          description: 'Optional. When set to true, the response contains the job document. The default is false.'
        executionNumber:
          $ref: '#/components/schemas/ExecutionNumber'
          description: Optional. A number that identifies a particular job execution on a particular device.
security:
  - hmac: []
