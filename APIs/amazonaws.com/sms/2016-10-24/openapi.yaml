openapi: 3.0.0
info:
  version: '2016-10-24'
  x-release: v4
  title: AWS Server Migration Service
  description: '<fullname>AWS Server Migration Service</fullname> <p>AWS Server Migration Service (AWS SMS) makes it easier and faster for you to migrate your on-premises workloads to AWS. To learn more about AWS SMS, see the following resources:</p> <ul> <li> <p> <a href="http://aws.amazon.com/server-migration-service/">AWS Server Migration Service product page</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/server-migration-service/latest/userguide/">AWS Server Migration Service User Guide</a> </p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: sms
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sms-2016-10-24.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/sms/'
servers:
  - url: 'http://sms.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The SMS multi-region endpoint
  - url: 'https://sms.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The SMS multi-region endpoint
  - url: 'http://sms.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SMS endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://sms.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SMS endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.CreateApp:
    post:
      operationId: CreateApp
      description: Creates an application. An application consists of one or more server groups. Each server group contain one or more servers.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.CreateApp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.CreateReplicationJob:
    post:
      operationId: CreateReplicationJob
      description: Creates a replication job. The replication job schedules periodic replication runs to replicate your server to AWS. Each replication run creates an Amazon Machine Image (AMI).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReplicationJobResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '483':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '484':
          description: ServerCannotBeReplicatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCannotBeReplicatedException'
        '485':
          description: ReplicationJobAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationJobAlreadyExistsException'
        '486':
          description: NoConnectorsAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoConnectorsAvailableException'
        '487':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '488':
          description: TemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReplicationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.CreateReplicationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteApp:
    post:
      operationId: DeleteApp
      description: Deletes the specified application. Optionally deletes the launched stack associated with the application and all AWS SMS replication jobs for servers in the application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DeleteApp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteAppLaunchConfiguration:
    post:
      operationId: DeleteAppLaunchConfiguration
      description: Deletes the launch configuration for the specified application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppLaunchConfigurationResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppLaunchConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DeleteAppLaunchConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteAppReplicationConfiguration:
    post:
      operationId: DeleteAppReplicationConfiguration
      description: Deletes the replication configuration for the specified application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppReplicationConfigurationResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppReplicationConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DeleteAppReplicationConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteAppValidationConfiguration:
    post:
      operationId: DeleteAppValidationConfiguration
      description: Deletes the validation configuration for the specified application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppValidationConfigurationResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppValidationConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DeleteAppValidationConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteReplicationJob:
    post:
      operationId: DeleteReplicationJob
      description: '<p>Deletes the specified replication job.</p> <p>After you delete a replication job, there are no further replication runs. AWS deletes the contents of the Amazon S3 bucket used to store AWS SMS artifacts. The AMIs created by the replication runs are not deleted.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReplicationJobResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '483':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '484':
          description: ReplicationJobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationJobNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReplicationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DeleteReplicationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteServerCatalog:
    post:
      operationId: DeleteServerCatalog
      description: Deletes all servers from your server catalog.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServerCatalogResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServerCatalogRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DeleteServerCatalog
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DisassociateConnector:
    post:
      operationId: DisassociateConnector
      description: '<p>Disassociates the specified connector from AWS SMS.</p> <p>After you disassociate a connector, it is no longer available to support replication jobs.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateConnectorResponse'
        '480':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '481':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '482':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateConnectorRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DisassociateConnector
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GenerateChangeSet:
    post:
      operationId: GenerateChangeSet
      description: Generates a target change set for a currently launched stack and writes it to an Amazon S3 object in the customer’s Amazon S3 bucket.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateChangeSetResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateChangeSetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GenerateChangeSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GenerateTemplate:
    post:
      operationId: GenerateTemplate
      description: Generates an AWS CloudFormation template based on the current launch configuration and writes it to an Amazon S3 object in the customer’s Amazon S3 bucket.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateTemplateResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateTemplateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GenerateTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetApp:
    post:
      operationId: GetApp
      description: Retrieve information about the specified application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAppRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetApp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppLaunchConfiguration:
    post:
      operationId: GetAppLaunchConfiguration
      description: Retrieves the application launch configuration associated with the specified application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppLaunchConfigurationResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAppLaunchConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetAppLaunchConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppReplicationConfiguration:
    post:
      operationId: GetAppReplicationConfiguration
      description: Retrieves the application replication configuration associated with the specified application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppReplicationConfigurationResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAppReplicationConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetAppReplicationConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppValidationConfiguration:
    post:
      operationId: GetAppValidationConfiguration
      description: Retrieves information about a configuration for validating an application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppValidationConfigurationResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAppValidationConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetAppValidationConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppValidationOutput:
    post:
      operationId: GetAppValidationOutput
      description: Retrieves output from validating an application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppValidationOutputResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAppValidationOutputRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetAppValidationOutput
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetConnectors:
    post:
      operationId: GetConnectors
      description: Describes the connectors registered with the AWS SMS.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectorsResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConnectorsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetConnectors
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetReplicationJobs:
    post:
      operationId: GetReplicationJobs
      description: Describes the specified replication job or all of your replication jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReplicationJobsResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReplicationJobsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetReplicationJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetReplicationRuns:
    post:
      operationId: GetReplicationRuns
      description: Describes the replication runs for the specified replication job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReplicationRunsResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReplicationRunsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetReplicationRuns
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetServers:
    post:
      operationId: GetServers
      description: '<p>Describes the servers in your server catalog.</p> <p>Before you can describe your servers, you must import them using <a>ImportServerCatalog</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServersResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServersRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetServers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.ImportAppCatalog:
    post:
      operationId: ImportAppCatalog
      description: Allows application import from AWS Migration Hub.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportAppCatalogResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportAppCatalogRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.ImportAppCatalog
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.ImportServerCatalog:
    post:
      operationId: ImportServerCatalog
      description: '<p>Gathers a complete list of on-premises servers. Connectors must be installed and monitoring all servers to import.</p> <p>This call returns immediately, but might take additional time to retrieve all the servers.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportServerCatalogResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '484':
          description: NoConnectorsAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoConnectorsAvailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportServerCatalogRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.ImportServerCatalog
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.LaunchApp:
    post:
      operationId: LaunchApp
      description: Launches the specified application as a stack in AWS CloudFormation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchAppResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchAppRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.LaunchApp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.ListApps:
    post:
      operationId: ListApps
      description: Retrieves summaries for all applications.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppsResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAppsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.ListApps
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.NotifyAppValidationOutput:
    post:
      operationId: NotifyAppValidationOutput
      description: Provides information to AWS SMS about whether application validation is successful.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyAppValidationOutputResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyAppValidationOutputRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.NotifyAppValidationOutput
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.PutAppLaunchConfiguration:
    post:
      operationId: PutAppLaunchConfiguration
      description: Creates or updates the launch configuration for the specified application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppLaunchConfigurationResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAppLaunchConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.PutAppLaunchConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.PutAppReplicationConfiguration:
    post:
      operationId: PutAppReplicationConfiguration
      description: Creates or updates the replication configuration for the specified application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppReplicationConfigurationResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAppReplicationConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.PutAppReplicationConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.PutAppValidationConfiguration:
    post:
      operationId: PutAppValidationConfiguration
      description: Creates or updates a validation configuration for the specified application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppValidationConfigurationResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAppValidationConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.PutAppValidationConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StartAppReplication:
    post:
      operationId: StartAppReplication
      description: Starts replicating the specified application by creating replication jobs for each server in the application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartAppReplicationResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartAppReplicationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.StartAppReplication
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StartOnDemandAppReplication:
    post:
      operationId: StartOnDemandAppReplication
      description: Starts an on-demand replication run for the specified application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartOnDemandAppReplicationResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartOnDemandAppReplicationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.StartOnDemandAppReplication
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StartOnDemandReplicationRun:
    post:
      operationId: StartOnDemandReplicationRun
      description: <p>Starts an on-demand replication run for the specified replication job. This replication run starts immediately. This replication run is in addition to the ones already scheduled.</p> <p>There is a limit on the number of on-demand replications runs that you can request in a 24-hour period.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartOnDemandReplicationRunResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '483':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '484':
          description: ReplicationRunLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationRunLimitExceededException'
        '485':
          description: DryRunOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryRunOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartOnDemandReplicationRunRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.StartOnDemandReplicationRun
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StopAppReplication:
    post:
      operationId: StopAppReplication
      description: Stops replicating the specified application by deleting the replication job for each server in the application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopAppReplicationResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopAppReplicationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.StopAppReplication
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.TerminateApp:
    post:
      operationId: TerminateApp
      description: Terminates the stack for the specified application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateAppResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateAppRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.TerminateApp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.UpdateApp:
    post:
      operationId: UpdateApp
      description: Updates the specified application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '483':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.UpdateApp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.UpdateReplicationJob:
    post:
      operationId: UpdateReplicationJob
      description: Updates the specified settings for the specified replication job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReplicationJobResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '482':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '483':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '484':
          description: ServerCannotBeReplicatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCannotBeReplicatedException'
        '485':
          description: ReplicationJobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationJobNotFoundException'
        '486':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
        '487':
          description: TemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReplicationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.UpdateReplicationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateAppResponse:
      type: object
      properties:
        appSummary:
          $ref: '#/components/schemas/AppSummary'
          description: A summary description of the application.
        serverGroups:
          $ref: '#/components/schemas/ServerGroups'
          description: The server groups included in the application.
        tags:
          $ref: '#/components/schemas/Tags'
          description: The tags associated with the application.
    CreateAppRequest:
      type: object
      title: CreateAppRequest
      properties:
        name:
          $ref: '#/components/schemas/AppName'
          description: The name of the new application.
        description:
          $ref: '#/components/schemas/AppDescription'
          description: The description of the new application
        roleName:
          $ref: '#/components/schemas/RoleName'
          description: The name of the service role in the customer's account to be used by AWS SMS.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of application creation.'
        serverGroups:
          $ref: '#/components/schemas/ServerGroups'
          description: The server groups to include in the application.
        tags:
          $ref: '#/components/schemas/Tags'
          description: The tags to be associated with the application.
    UnauthorizedOperationException: {}
    InvalidParameterException: {}
    MissingRequiredParameterException: {}
    InternalError: {}
    OperationNotPermittedException: {}
    CreateReplicationJobResponse:
      type: object
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
          description: The unique identifier of the replication job.
    CreateReplicationJobRequest:
      type: object
      required:
        - serverId
        - seedReplicationTime
      title: CreateReplicationJobRequest
      properties:
        serverId:
          $ref: '#/components/schemas/ServerId'
          description: The ID of the server.
        seedReplicationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The seed replication time.
        frequency:
          $ref: '#/components/schemas/Frequency'
          description: 'The time between consecutive replication runs, in hours.'
        runOnce:
          $ref: '#/components/schemas/RunOnce'
          description: Indicates whether to run the replication job one time.
        licenseType:
          $ref: '#/components/schemas/LicenseType'
          description: The license type to be used for the AMI created by a successful replication run.
        roleName:
          $ref: '#/components/schemas/RoleName'
          description: The name of the IAM role to be used by the AWS SMS.
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the replication job.
        numberOfRecentAmisToKeep:
          $ref: '#/components/schemas/NumberOfRecentAmisToKeep'
          description: The maximum number of SMS-created AMIs to retain. The oldest is deleted after the maximum number is reached and a new AMI is created.
        encrypted:
          $ref: '#/components/schemas/Encrypted'
          description: Indicates whether the replication job produces encrypted AMIs.
        kmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The ID of the KMS key for replication jobs that produce encrypted AMIs. This value can be any of the following:</p> <ul> <li> <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN referring to the KMS key ID</p> </li> <li> <p>ARN referring to the KMS key alias</p> </li> </ul> <p> If encrypted is <i>true</i> but a KMS key ID is not specified, the customer''s default KMS key for Amazon EBS is used. </p>'
    ServerCannotBeReplicatedException: {}
    ReplicationJobAlreadyExistsException: {}
    NoConnectorsAvailableException: {}
    TemporarilyUnavailableException: {}
    DeleteAppResponse:
      type: object
      properties: {}
    DeleteAppRequest:
      type: object
      title: DeleteAppRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
        forceStopAppReplication:
          $ref: '#/components/schemas/ForceStopAppReplication'
          description: Indicates whether to stop all replication jobs corresponding to the servers in the application while deleting the application.
        forceTerminateApp:
          $ref: '#/components/schemas/ForceTerminateApp'
          description: Indicates whether to terminate the stack corresponding to the application while deleting the application.
    DeleteAppLaunchConfigurationResponse:
      type: object
      properties: {}
    DeleteAppLaunchConfigurationRequest:
      type: object
      title: DeleteAppLaunchConfigurationRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
    DeleteAppReplicationConfigurationResponse:
      type: object
      properties: {}
    DeleteAppReplicationConfigurationRequest:
      type: object
      title: DeleteAppReplicationConfigurationRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
    DeleteAppValidationConfigurationResponse:
      type: object
      properties: {}
    DeleteAppValidationConfigurationRequest:
      type: object
      required:
        - appId
      title: DeleteAppValidationConfigurationRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppIdWithValidation'
          description: The ID of the application.
    DeleteReplicationJobResponse:
      type: object
      properties: {}
    DeleteReplicationJobRequest:
      type: object
      required:
        - replicationJobId
      title: DeleteReplicationJobRequest
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
          description: The ID of the replication job.
    ReplicationJobNotFoundException: {}
    DeleteServerCatalogResponse:
      type: object
      properties: {}
    DeleteServerCatalogRequest:
      type: object
      title: DeleteServerCatalogRequest
      properties: {}
    DisassociateConnectorResponse:
      type: object
      properties: {}
    DisassociateConnectorRequest:
      type: object
      required:
        - connectorId
      title: DisassociateConnectorRequest
      properties:
        connectorId:
          $ref: '#/components/schemas/ConnectorId'
          description: The ID of the connector.
    GenerateChangeSetResponse:
      type: object
      properties:
        s3Location:
          $ref: '#/components/schemas/S3Location'
          description: The location of the Amazon S3 object.
    GenerateChangeSetRequest:
      type: object
      title: GenerateChangeSetRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application associated with the change set.
        changesetFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: The format for the change set.
    GenerateTemplateResponse:
      type: object
      properties:
        s3Location:
          $ref: '#/components/schemas/S3Location'
          description: The location of the Amazon S3 object.
    GenerateTemplateRequest:
      type: object
      title: GenerateTemplateRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application associated with the AWS CloudFormation template.
        templateFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: The format for generating the AWS CloudFormation template.
    GetAppResponse:
      type: object
      properties:
        appSummary:
          $ref: '#/components/schemas/AppSummary'
          description: Information about the application.
        serverGroups:
          $ref: '#/components/schemas/ServerGroups'
          description: The server groups that belong to the application.
        tags:
          $ref: '#/components/schemas/Tags'
          description: The tags associated with the application.
    GetAppRequest:
      type: object
      title: GetAppRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
    GetAppLaunchConfigurationResponse:
      type: object
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
        roleName:
          $ref: '#/components/schemas/RoleName'
          description: The name of the service role in the customer's account that AWS CloudFormation uses to launch the application.
        autoLaunch:
          $ref: '#/components/schemas/AutoLaunch'
          description: Indicates whether the application is configured to launch automatically after replication is complete.
        serverGroupLaunchConfigurations:
          $ref: '#/components/schemas/ServerGroupLaunchConfigurations'
          description: The launch configurations for server groups in this application.
    GetAppLaunchConfigurationRequest:
      type: object
      title: GetAppLaunchConfigurationRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
    GetAppReplicationConfigurationResponse:
      type: object
      properties:
        serverGroupReplicationConfigurations:
          $ref: '#/components/schemas/ServerGroupReplicationConfigurations'
          description: The replication configurations associated with server groups in this application.
    GetAppReplicationConfigurationRequest:
      type: object
      title: GetAppReplicationConfigurationRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
    GetAppValidationConfigurationResponse:
      type: object
      properties:
        appValidationConfigurations:
          $ref: '#/components/schemas/AppValidationConfigurations'
          description: The configuration for application validation.
        serverGroupValidationConfigurations:
          $ref: '#/components/schemas/ServerGroupValidationConfigurations'
          description: The configuration for instance validation.
    GetAppValidationConfigurationRequest:
      type: object
      required:
        - appId
      title: GetAppValidationConfigurationRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppIdWithValidation'
          description: The ID of the application.
    GetAppValidationOutputResponse:
      type: object
      properties:
        validationOutputList:
          $ref: '#/components/schemas/ValidationOutputList'
          description: The validation output.
    GetAppValidationOutputRequest:
      type: object
      required:
        - appId
      title: GetAppValidationOutputRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppIdWithValidation'
          description: The ID of the application.
    GetConnectorsResponse:
      type: object
      properties:
        connectorList:
          $ref: '#/components/schemas/ConnectorList'
          description: Information about the registered connectors.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token required to retrieve the next set of results. This value is null when there are no more results to return.
    GetConnectorsRequest:
      type: object
      title: GetConnectorsRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return in a single call. The default value is 50. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
    GetReplicationJobsResponse:
      type: object
      properties:
        replicationJobList:
          $ref: '#/components/schemas/ReplicationJobList'
          description: Information about the replication jobs.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token required to retrieve the next set of results. This value is null when there are no more results to return.
    GetReplicationJobsRequest:
      type: object
      title: GetReplicationJobsRequest
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
          description: The ID of the replication job.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return in a single call. The default value is 50. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
    GetReplicationRunsResponse:
      type: object
      properties:
        replicationJob:
          $ref: '#/components/schemas/ReplicationJob'
          description: Information about the replication job.
        replicationRunList:
          $ref: '#/components/schemas/ReplicationRunList'
          description: Information about the replication runs.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token required to retrieve the next set of results. This value is null when there are no more results to return.
    GetReplicationRunsRequest:
      type: object
      required:
        - replicationJobId
      title: GetReplicationRunsRequest
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
          description: The ID of the replication job.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return in a single call. The default value is 50. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
    GetServersResponse:
      type: object
      properties:
        lastModifiedOn:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the server was last modified.
        serverCatalogStatus:
          $ref: '#/components/schemas/ServerCatalogStatus'
          description: The status of the server catalog.
        serverList:
          $ref: '#/components/schemas/ServerList'
          description: Information about the servers.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token required to retrieve the next set of results. This value is null when there are no more results to return.
    GetServersRequest:
      type: object
      title: GetServersRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return in a single call. The default value is 50. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
        vmServerAddressList:
          $ref: '#/components/schemas/VmServerAddressList'
          description: The server addresses.
    ImportAppCatalogResponse:
      type: object
      properties: {}
    ImportAppCatalogRequest:
      type: object
      title: ImportAppCatalogRequest
      properties:
        roleName:
          $ref: '#/components/schemas/RoleName'
          description: 'The name of the service role. If you omit this parameter, we create a service-linked role for AWS Migration Hub in your account. Otherwise, the role that you provide must have the <a href="https://docs.aws.amazon.com/migrationhub/latest/ug/new-customer-setup.html#sms-managed">policy and trust policy</a> described in the <i>AWS Migration Hub User Guide</i>.'
    ImportServerCatalogResponse:
      type: object
      properties: {}
    ImportServerCatalogRequest:
      type: object
      title: ImportServerCatalogRequest
      properties: {}
    LaunchAppResponse:
      type: object
      properties: {}
    LaunchAppRequest:
      type: object
      title: LaunchAppRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
    ListAppsResponse:
      type: object
      properties:
        apps:
          $ref: '#/components/schemas/Apps'
          description: The application summaries.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token required to retrieve the next set of results. This value is null when there are no more results to return.
    ListAppsRequest:
      type: object
      title: ListAppsRequest
      properties:
        appIds:
          $ref: '#/components/schemas/AppIds'
          description: The unique application IDs.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return in a single call. The default value is 100. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. '
    NotifyAppValidationOutputResponse:
      type: object
      properties: {}
    NotifyAppValidationOutputRequest:
      type: object
      required:
        - appId
      title: NotifyAppValidationOutputRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppIdWithValidation'
          description: The ID of the application.
        notificationContext:
          $ref: '#/components/schemas/NotificationContext'
          description: The notification information.
    PutAppLaunchConfigurationResponse:
      type: object
      properties: {}
    PutAppLaunchConfigurationRequest:
      type: object
      title: PutAppLaunchConfigurationRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
        roleName:
          $ref: '#/components/schemas/RoleName'
          description: The name of service role in the customer's account that AWS CloudFormation uses to launch the application.
        autoLaunch:
          $ref: '#/components/schemas/AutoLaunch'
          description: Indicates whether the application is configured to launch automatically after replication is complete.
        serverGroupLaunchConfigurations:
          $ref: '#/components/schemas/ServerGroupLaunchConfigurations'
          description: Information about the launch configurations for server groups in the application.
    PutAppReplicationConfigurationResponse:
      type: object
      properties: {}
    PutAppReplicationConfigurationRequest:
      type: object
      title: PutAppReplicationConfigurationRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
        serverGroupReplicationConfigurations:
          $ref: '#/components/schemas/ServerGroupReplicationConfigurations'
          description: Information about the replication configurations for server groups in the application.
    PutAppValidationConfigurationResponse:
      type: object
      properties: {}
    PutAppValidationConfigurationRequest:
      type: object
      required:
        - appId
      title: PutAppValidationConfigurationRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppIdWithValidation'
          description: The ID of the application.
        appValidationConfigurations:
          $ref: '#/components/schemas/AppValidationConfigurations'
          description: The configuration for application validation.
        serverGroupValidationConfigurations:
          $ref: '#/components/schemas/ServerGroupValidationConfigurations'
          description: The configuration for instance validation.
    StartAppReplicationResponse:
      type: object
      properties: {}
    StartAppReplicationRequest:
      type: object
      title: StartAppReplicationRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
    StartOnDemandAppReplicationResponse:
      type: object
      properties: {}
    StartOnDemandAppReplicationRequest:
      type: object
      required:
        - appId
      title: StartOnDemandAppReplicationRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the replication run.
    StartOnDemandReplicationRunResponse:
      type: object
      properties:
        replicationRunId:
          $ref: '#/components/schemas/ReplicationRunId'
          description: The ID of the replication run.
    StartOnDemandReplicationRunRequest:
      type: object
      required:
        - replicationJobId
      title: StartOnDemandReplicationRunRequest
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
          description: The ID of the replication job.
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the replication run.
    ReplicationRunLimitExceededException: {}
    DryRunOperationException: {}
    StopAppReplicationResponse:
      type: object
      properties: {}
    StopAppReplicationRequest:
      type: object
      title: StopAppReplicationRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
    TerminateAppResponse:
      type: object
      properties: {}
    TerminateAppRequest:
      type: object
      title: TerminateAppRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
    UpdateAppResponse:
      type: object
      properties:
        appSummary:
          $ref: '#/components/schemas/AppSummary'
          description: A summary description of the application.
        serverGroups:
          $ref: '#/components/schemas/ServerGroups'
          description: The updated server groups in the application.
        tags:
          $ref: '#/components/schemas/Tags'
          description: The tags associated with the application.
    UpdateAppRequest:
      type: object
      title: UpdateAppRequest
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The ID of the application.
        name:
          $ref: '#/components/schemas/AppName'
          description: The new name of the application.
        description:
          $ref: '#/components/schemas/AppDescription'
          description: The new description of the application.
        roleName:
          $ref: '#/components/schemas/RoleName'
          description: The name of the service role in the customer's account used by AWS SMS.
        serverGroups:
          $ref: '#/components/schemas/ServerGroups'
          description: The server groups in the application to update.
        tags:
          $ref: '#/components/schemas/Tags'
          description: The tags to associate with the application.
    UpdateReplicationJobResponse:
      type: object
      properties: {}
    UpdateReplicationJobRequest:
      type: object
      required:
        - replicationJobId
      title: UpdateReplicationJobRequest
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
          description: The ID of the replication job.
        frequency:
          $ref: '#/components/schemas/Frequency'
          description: 'The time between consecutive replication runs, in hours.'
        nextReplicationRunStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start time of the next replication run.
        licenseType:
          $ref: '#/components/schemas/LicenseType'
          description: The license type to be used for the AMI created by a successful replication run.
        roleName:
          $ref: '#/components/schemas/RoleName'
          description: The name of the IAM role to be used by AWS SMS.
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the replication job.
        numberOfRecentAmisToKeep:
          $ref: '#/components/schemas/NumberOfRecentAmisToKeep'
          description: The maximum number of SMS-created AMIs to retain. The oldest is deleted after the maximum number is reached and a new AMI is created.
        encrypted:
          $ref: '#/components/schemas/Encrypted'
          description: 'When true, the replication job produces encrypted AMIs. For more information, <code>KmsKeyId</code>.'
        kmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The ID of the KMS key for replication jobs that produce encrypted AMIs. This value can be any of the following:</p> <ul> <li> <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN referring to the KMS key ID</p> </li> <li> <p>ARN referring to the KMS key alias</p> </li> </ul> <p>If encrypted is enabled but a KMS key ID is not specified, the customer''s default KMS key for Amazon EBS is used.</p>'
    AmiId:
      type: string
    AppDescription:
      type: string
    AppId:
      type: string
    AppIdWithValidation:
      type: string
      pattern: '^app-[0-9a-f]{17}$'
    AppIds:
      type: array
      items:
        $ref: '#/components/schemas/AppId'
    AppLaunchConfigurationStatus:
      type: string
      enum:
        - NOT_CONFIGURED
        - CONFIGURED
    AppLaunchStatus:
      type: string
      enum:
        - READY_FOR_CONFIGURATION
        - CONFIGURATION_IN_PROGRESS
        - CONFIGURATION_INVALID
        - READY_FOR_LAUNCH
        - VALIDATION_IN_PROGRESS
        - LAUNCH_PENDING
        - LAUNCH_IN_PROGRESS
        - LAUNCHED
        - PARTIALLY_LAUNCHED
        - DELTA_LAUNCH_IN_PROGRESS
        - DELTA_LAUNCH_FAILED
        - LAUNCH_FAILED
        - TERMINATE_IN_PROGRESS
        - TERMINATE_FAILED
        - TERMINATED
    AppLaunchStatusMessage:
      type: string
    AppName:
      type: string
    AppReplicationConfigurationStatus:
      type: string
      enum:
        - NOT_CONFIGURED
        - CONFIGURED
    AppReplicationStatus:
      type: string
      enum:
        - READY_FOR_CONFIGURATION
        - CONFIGURATION_IN_PROGRESS
        - CONFIGURATION_INVALID
        - READY_FOR_REPLICATION
        - VALIDATION_IN_PROGRESS
        - REPLICATION_PENDING
        - REPLICATION_IN_PROGRESS
        - REPLICATED
        - PARTIALLY_REPLICATED
        - DELTA_REPLICATION_IN_PROGRESS
        - DELTA_REPLICATED
        - DELTA_REPLICATION_FAILED
        - REPLICATION_FAILED
        - REPLICATION_STOPPING
        - REPLICATION_STOP_FAILED
        - REPLICATION_STOPPED
    AppReplicationStatusMessage:
      type: string
    AppStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - UPDATING
        - DELETING
        - DELETED
        - DELETE_FAILED
    AppStatusMessage:
      type: string
    ImportedAppId:
      type: string
    Timestamp:
      type: string
      format: date-time
    LaunchDetails:
      type: object
      properties:
        latestLaunchTime:
          $ref: '#/components/schemas/Timestamp'
          description: The latest time that this application was launched successfully.
        stackName:
          $ref: '#/components/schemas/StackName'
          description: The name of the latest stack launched for this application.
        stackId:
          $ref: '#/components/schemas/StackId'
          description: The ID of the latest stack launched for this application.
      description: Details about the latest launch of an application.
    RoleName:
      type: string
    TotalServerGroups:
      type: integer
    TotalServers:
      type: integer
    AppSummary:
      type: object
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
          description: The unique ID of the application.
        importedAppId:
          $ref: '#/components/schemas/ImportedAppId'
          description: The ID of the application.
        name:
          $ref: '#/components/schemas/AppName'
          description: The name of the application.
        description:
          $ref: '#/components/schemas/AppDescription'
          description: The description of the application.
        status:
          $ref: '#/components/schemas/AppStatus'
          description: Status of the application.
        statusMessage:
          $ref: '#/components/schemas/AppStatusMessage'
          description: A message related to the status of the application
        replicationConfigurationStatus:
          $ref: '#/components/schemas/AppReplicationConfigurationStatus'
          description: Status of the replication configuration.
        replicationStatus:
          $ref: '#/components/schemas/AppReplicationStatus'
          description: The replication status of the application.
        replicationStatusMessage:
          $ref: '#/components/schemas/AppReplicationStatusMessage'
          description: A message related to the replication status of the application.
        latestReplicationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the application's most recent successful replication.
        launchConfigurationStatus:
          $ref: '#/components/schemas/AppLaunchConfigurationStatus'
          description: Status of the launch configuration.
        launchStatus:
          $ref: '#/components/schemas/AppLaunchStatus'
          description: The launch status of the application.
        launchStatusMessage:
          $ref: '#/components/schemas/AppLaunchStatusMessage'
          description: A message related to the launch status of the application.
        launchDetails:
          $ref: '#/components/schemas/LaunchDetails'
          description: Details about the latest launch of the application.
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The creation time of the application.
        lastModified:
          $ref: '#/components/schemas/Timestamp'
          description: The last modified time of the application.
        roleName:
          $ref: '#/components/schemas/RoleName'
          description: The name of the service role in the customer's account used by AWS SMS.
        totalServerGroups:
          $ref: '#/components/schemas/TotalServerGroups'
          description: The number of server groups present in the application.
        totalServers:
          $ref: '#/components/schemas/TotalServers'
          description: The number of servers present in the application.
      description: Information about the application.
    ValidationId:
      type: string
      pattern: '^val-[0-9a-f]{17}$'
    NonEmptyStringWithMaxLen255:
      type: string
      pattern: '^[\S]+$'
      minLength: 1
      maxLength: 255
    AppValidationStrategy:
      type: string
      enum:
        - SSM
    SSMValidationParameters:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/Source'
          description: The location of the validation script.
        instanceId:
          $ref: '#/components/schemas/InstanceId'
          description: 'The ID of the instance. The instance must have the following tag: UserForSMSApplicationValidation=true.'
        scriptType:
          $ref: '#/components/schemas/ScriptType'
          description: The type of validation script.
        command:
          $ref: '#/components/schemas/Command'
          description: The command to run the validation script
        executionTimeoutSeconds:
          $ref: '#/components/schemas/ExecutionTimeoutSeconds'
          description: 'The timeout interval, in seconds.'
        outputS3BucketName:
          $ref: '#/components/schemas/BucketName'
          description: The name of the S3 bucket for output.
      description: Contains validation parameters.
    AppValidationConfiguration:
      type: object
      properties:
        validationId:
          $ref: '#/components/schemas/ValidationId'
          description: The ID of the validation.
        name:
          $ref: '#/components/schemas/NonEmptyStringWithMaxLen255'
          description: The name of the configuration.
        appValidationStrategy:
          $ref: '#/components/schemas/AppValidationStrategy'
          description: The validation strategy.
        ssmValidationParameters:
          $ref: '#/components/schemas/SSMValidationParameters'
          description: The validation parameters.
      description: Configuration for validating an application.
    AppValidationConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/AppValidationConfiguration'
    SSMOutput:
      type: object
      properties:
        s3Location:
          $ref: '#/components/schemas/S3Location'
      description: Contains the location of validation output.
    AppValidationOutput:
      type: object
      properties:
        ssmOutput:
          $ref: '#/components/schemas/SSMOutput'
          description: Output from using SSM to validate the application.
      description: Output from validating an application.
    Apps:
      type: array
      items:
        $ref: '#/components/schemas/AppSummary'
    AssociatePublicIpAddress:
      type: boolean
    AutoLaunch:
      type: boolean
    BucketName:
      type: string
    ClientToken:
      type: string
    Command:
      type: string
      minLength: 1
      maxLength: 64000
    ConnectorId:
      type: string
    ConnectorVersion:
      type: string
    ConnectorStatus:
      type: string
      enum:
        - HEALTHY
        - UNHEALTHY
    ConnectorCapabilityList:
      type: array
      items:
        $ref: '#/components/schemas/ConnectorCapability'
    VmManagerName:
      type: string
    VmManagerType:
      type: string
      enum:
        - VSPHERE
        - SCVMM
        - HYPERV-MANAGER
    VmManagerId:
      type: string
    IpAddress:
      type: string
    MacAddress:
      type: string
    Connector:
      type: object
      properties:
        connectorId:
          $ref: '#/components/schemas/ConnectorId'
          description: The ID of the connector.
        version:
          $ref: '#/components/schemas/ConnectorVersion'
          description: The connector version.
        status:
          $ref: '#/components/schemas/ConnectorStatus'
          description: The status of the connector.
        capabilityList:
          $ref: '#/components/schemas/ConnectorCapabilityList'
          description: The capabilities of the connector.
        vmManagerName:
          $ref: '#/components/schemas/VmManagerName'
          description: The name of the VM manager.
        vmManagerType:
          $ref: '#/components/schemas/VmManagerType'
          description: The VM management product.
        vmManagerId:
          $ref: '#/components/schemas/VmManagerId'
          description: The ID of the VM manager.
        ipAddress:
          $ref: '#/components/schemas/IpAddress'
          description: The IP address of the connector.
        macAddress:
          $ref: '#/components/schemas/MacAddress'
          description: The MAC address of the connector.
        associatedOn:
          $ref: '#/components/schemas/Timestamp'
          description: The time the connector was associated.
      description: Represents a connector.
    ConnectorCapability:
      type: string
      enum:
        - VSPHERE
        - SCVMM
        - HYPERV-MANAGER
        - SNAPSHOT_BATCHING
        - SMS_OPTIMIZED
    ConnectorList:
      type: array
      items:
        $ref: '#/components/schemas/Connector'
    ServerGroups:
      type: array
      items:
        $ref: '#/components/schemas/ServerGroup'
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    ServerId:
      type: string
    Frequency:
      type: integer
    RunOnce:
      type: boolean
    LicenseType:
      type: string
      enum:
        - AWS
        - BYOL
    Description:
      type: string
    NumberOfRecentAmisToKeep:
      type: integer
    Encrypted:
      type: boolean
    KmsKeyId:
      type: string
    ReplicationJobId:
      type: string
    ForceStopAppReplication:
      type: boolean
    ForceTerminateApp:
      type: boolean
    EC2KeyName:
      type: string
    ExecutionTimeoutSeconds:
      type: integer
      minimum: 60
      maximum: 28800
    OutputFormat:
      type: string
      enum:
        - JSON
        - YAML
    S3Location:
      type: object
      properties:
        bucket:
          $ref: '#/components/schemas/S3BucketName'
          description: The Amazon S3 bucket name.
        key:
          $ref: '#/components/schemas/S3KeyName'
          description: The Amazon S3 bucket key.
      description: Location of an Amazon S3 object.
    ServerGroupLaunchConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/ServerGroupLaunchConfiguration'
    ServerGroupReplicationConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/ServerGroupReplicationConfiguration'
    ServerGroupValidationConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/ServerGroupValidationConfiguration'
    ValidationOutputList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationOutput'
    NextToken:
      type: string
    MaxResults:
      type: integer
    ReplicationJobList:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationJob'
    ReplicationJob:
      type: object
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
          description: The ID of the replication job.
        serverId:
          $ref: '#/components/schemas/ServerId'
          description: The ID of the server.
        serverType:
          $ref: '#/components/schemas/ServerType'
          description: The type of server.
        vmServer:
          $ref: '#/components/schemas/VmServer'
          description: Information about the VM server.
        seedReplicationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The seed replication time.
        frequency:
          $ref: '#/components/schemas/Frequency'
          description: 'The time between consecutive replication runs, in hours.'
        runOnce:
          $ref: '#/components/schemas/RunOnce'
          description: Indicates whether to run the replication job one time.
        nextReplicationRunStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start time of the next replication run.
        licenseType:
          $ref: '#/components/schemas/LicenseType'
          description: The license type to be used for the AMI created by a successful replication run.
        roleName:
          $ref: '#/components/schemas/RoleName'
          description: The name of the IAM role to be used by AWS SMS.
        latestAmiId:
          $ref: '#/components/schemas/AmiId'
          description: The ID of the latest Amazon Machine Image (AMI).
        state:
          $ref: '#/components/schemas/ReplicationJobState'
          description: The state of the replication job.
        statusMessage:
          $ref: '#/components/schemas/ReplicationJobStatusMessage'
          description: The description of the current status of the replication job.
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the replication job.
        numberOfRecentAmisToKeep:
          $ref: '#/components/schemas/NumberOfRecentAmisToKeep'
          description: 'The number of recent AMIs to keep in the customer''s account for a replication job. By default, the value is set to zero, meaning that all AMIs are kept.'
        encrypted:
          $ref: '#/components/schemas/Encrypted'
          description: Indicates whether the replication job should produce encrypted AMIs.
        kmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The ID of the KMS key for replication jobs that produce encrypted AMIs. This value can be any of the following: </p> <ul> <li> <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN referring to the KMS key ID</p> </li> <li> <p>ARN referring to the KMS key alias</p> </li> </ul> <p>If encrypted is enabled but a KMS key ID is not specified, the customer''s default KMS key for Amazon EBS is used.</p>'
        replicationRunList:
          $ref: '#/components/schemas/ReplicationRunList'
          description: Information about the replication runs.
      description: Represents a replication job.
    ReplicationRunList:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationRun'
    VmServerAddressList:
      type: array
      items:
        $ref: '#/components/schemas/VmServerAddress'
    ServerCatalogStatus:
      type: string
      enum:
        - NOT_IMPORTED
        - IMPORTING
        - AVAILABLE
        - DELETED
        - EXPIRED
    ServerList:
      type: array
      items:
        $ref: '#/components/schemas/Server'
    InstanceId:
      type: string
      pattern: '(^i-(\w{8}|\w{17})$)|(^mi-\w{17}$)'
    InstanceType:
      type: string
    StackName:
      type: string
    StackId:
      type: string
    LaunchOrder:
      type: integer
    LogicalId:
      type: string
    ValidationStatus:
      type: string
      enum:
        - READY_FOR_VALIDATION
        - PENDING
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
    ValidationStatusMessage:
      type: string
      maxLength: 2500
    NotificationContext:
      type: object
      properties:
        validationId:
          $ref: '#/components/schemas/ValidationId'
          description: The ID of the validation.
        status:
          $ref: '#/components/schemas/ValidationStatus'
          description: The status of the validation.
        statusMessage:
          $ref: '#/components/schemas/ValidationStatusMessage'
          description: The status message.
      description: Contains the status of validating an application.
    ServerType:
      type: string
      enum:
        - VIRTUAL_MACHINE
    VmServer:
      type: object
      properties:
        vmServerAddress:
          $ref: '#/components/schemas/VmServerAddress'
          description: The VM server location.
        vmName:
          $ref: '#/components/schemas/VmName'
          description: The name of the VM.
        vmManagerName:
          $ref: '#/components/schemas/VmManagerName'
          description: The name of the VM manager.
        vmManagerType:
          $ref: '#/components/schemas/VmManagerType'
          description: The type of VM management product.
        vmPath:
          $ref: '#/components/schemas/VmPath'
          description: The VM folder path in the vCenter Server virtual machine inventory tree.
      description: Represents a VM server.
    ReplicationJobState:
      type: string
      enum:
        - PENDING
        - ACTIVE
        - FAILED
        - DELETING
        - DELETED
        - COMPLETED
        - PAUSED_ON_FAILURE
        - FAILING
    ReplicationJobStatusMessage:
      type: string
    ReplicationJobTerminated:
      type: boolean
    ReplicationRunId:
      type: string
    ReplicationRunState:
      type: string
      enum:
        - PENDING
        - MISSED
        - ACTIVE
        - FAILED
        - COMPLETED
        - DELETING
        - DELETED
    ReplicationRunType:
      type: string
      enum:
        - ON_DEMAND
        - AUTOMATIC
    ReplicationRunStageDetails:
      type: object
      properties:
        stage:
          $ref: '#/components/schemas/ReplicationRunStage'
          description: The current stage of a replication run.
        stageProgress:
          $ref: '#/components/schemas/ReplicationRunStageProgress'
          description: The progress of the current stage of a replication run.
      description: Details of the current stage of a replication run.
    ReplicationRunStatusMessage:
      type: string
    ReplicationRun:
      type: object
      properties:
        replicationRunId:
          $ref: '#/components/schemas/ReplicationRunId'
          description: The ID of the replication run.
        state:
          $ref: '#/components/schemas/ReplicationRunState'
          description: The state of the replication run.
        type:
          $ref: '#/components/schemas/ReplicationRunType'
          description: The type of replication run.
        stageDetails:
          $ref: '#/components/schemas/ReplicationRunStageDetails'
          description: Details about the current stage of the replication run.
        statusMessage:
          $ref: '#/components/schemas/ReplicationRunStatusMessage'
          description: The description of the current status of the replication job.
        amiId:
          $ref: '#/components/schemas/AmiId'
          description: The ID of the Amazon Machine Image (AMI) from the replication run.
        scheduledStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start time of the next replication run.
        completedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The completion time of the last replication run.
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the replication run.
        encrypted:
          $ref: '#/components/schemas/Encrypted'
          description: Indicates whether the replication run should produce an encrypted AMI.
        kmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The ID of the KMS key for replication jobs that produce encrypted AMIs. This value can be any of the following:</p> <ul> <li> <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN referring to the KMS key ID</p> </li> <li> <p>ARN referring to the KMS key alias</p> </li> </ul> <p> If encrypted is <i>true</i> but a KMS key ID is not specified, the customer''s default KMS key for Amazon EBS is used. </p>'
      description: Represents a replication run.
    ReplicationRunStage:
      type: string
    ReplicationRunStageProgress:
      type: string
    S3BucketName:
      type: string
      minLength: 3
      maxLength: 63
    S3KeyName:
      type: string
      maxLength: 1024
    Source:
      type: object
      properties:
        s3Location:
          $ref: '#/components/schemas/S3Location'
      description: Contains the location of a validation script.
    ScriptType:
      type: string
      enum:
        - SHELL_SCRIPT
        - POWERSHELL_SCRIPT
    SecurityGroup:
      type: string
    Server:
      type: object
      properties:
        serverId:
          $ref: '#/components/schemas/ServerId'
          description: The ID of the server.
        serverType:
          $ref: '#/components/schemas/ServerType'
          description: The type of server.
        vmServer:
          $ref: '#/components/schemas/VmServer'
          description: Information about the VM server.
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
          description: The ID of the replication job.
        replicationJobTerminated:
          $ref: '#/components/schemas/ReplicationJobTerminated'
          description: Indicates whether the replication job is deleted or failed.
      description: Represents a server.
    ServerGroupId:
      type: string
    ServerGroupName:
      type: string
    ServerGroup:
      type: object
      properties:
        serverGroupId:
          $ref: '#/components/schemas/ServerGroupId'
          description: The ID of a server group.
        name:
          $ref: '#/components/schemas/ServerGroupName'
          description: The name of a server group.
        serverList:
          $ref: '#/components/schemas/ServerList'
          description: The servers that belong to a server group.
      description: Logical grouping of servers.
    ServerLaunchConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/ServerLaunchConfiguration'
    ServerGroupLaunchConfiguration:
      type: object
      properties:
        serverGroupId:
          $ref: '#/components/schemas/ServerGroupId'
          description: The ID of the server group with which the launch configuration is associated.
        launchOrder:
          $ref: '#/components/schemas/LaunchOrder'
          description: The launch order of servers in the server group.
        serverLaunchConfigurations:
          $ref: '#/components/schemas/ServerLaunchConfigurations'
          description: The launch configuration for servers in the server group.
      description: Launch configuration for a server group.
    ServerReplicationConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/ServerReplicationConfiguration'
    ServerGroupReplicationConfiguration:
      type: object
      properties:
        serverGroupId:
          $ref: '#/components/schemas/ServerGroupId'
          description: The ID of the server group with which this replication configuration is associated.
        serverReplicationConfigurations:
          $ref: '#/components/schemas/ServerReplicationConfigurations'
          description: The replication configuration for servers in the server group.
      description: Replication configuration for a server group.
    ServerValidationConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/ServerValidationConfiguration'
    ServerGroupValidationConfiguration:
      type: object
      properties:
        serverGroupId:
          $ref: '#/components/schemas/ServerGroupId'
          description: The ID of the server group.
        serverValidationConfigurations:
          $ref: '#/components/schemas/ServerValidationConfigurations'
          description: The validation configuration.
      description: Configuration for validating an instance.
    VPC:
      type: string
    Subnet:
      type: string
    UserData:
      type: object
      properties:
        s3Location:
          $ref: '#/components/schemas/S3Location'
          description: Amazon S3 location of the user-data script.
      description: A script that runs on first launch of an Amazon EC2 instance. Used for configuring the server during launch.
    ServerLaunchConfiguration:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
          description: The ID of the server with which the launch configuration is associated.
        logicalId:
          $ref: '#/components/schemas/LogicalId'
          description: The logical ID of the server in the AWS CloudFormation template.
        vpc:
          $ref: '#/components/schemas/VPC'
          description: The ID of the VPC into which the server should be launched.
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The ID of the subnet the server should be launched into.
        securityGroup:
          $ref: '#/components/schemas/SecurityGroup'
          description: The ID of the security group that applies to the launched server.
        ec2KeyName:
          $ref: '#/components/schemas/EC2KeyName'
          description: The name of the Amazon EC2 SSH key to be used for connecting to the launched server.
        userData:
          $ref: '#/components/schemas/UserData'
          description: Location of the user-data script to be executed when launching the server.
        instanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The instance type to use when launching the server.
        associatePublicIpAddress:
          $ref: '#/components/schemas/AssociatePublicIpAddress'
          description: Indicates whether a publicly accessible IP address is created when launching the server.
        iamInstanceProfileName:
          $ref: '#/components/schemas/RoleName'
          description: The name of the IAM instance profile.
        configureScript:
          $ref: '#/components/schemas/S3Location'
        configureScriptType:
          $ref: '#/components/schemas/ScriptType'
          description: The type of configuration script.
      description: Launch configuration for a server.
    ServerReplicationParameters:
      type: object
      properties:
        seedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The seed time for creating a replication job for the server.
        frequency:
          $ref: '#/components/schemas/Frequency'
          description: The frequency of creating replication jobs for the server.
        runOnce:
          $ref: '#/components/schemas/RunOnce'
          description: Indicates whether to run the replication job one time.
        licenseType:
          $ref: '#/components/schemas/LicenseType'
          description: The license type for creating a replication job for the server.
        numberOfRecentAmisToKeep:
          $ref: '#/components/schemas/NumberOfRecentAmisToKeep'
          description: The number of recent AMIs to keep when creating a replication job for this server.
        encrypted:
          $ref: '#/components/schemas/Encrypted'
          description: Indicates whether the replication job produces encrypted AMIs.
        kmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The ID of the KMS key for replication jobs that produce encrypted AMIs. This value can be any of the following:</p> <ul> <li> <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN referring to the KMS key ID</p> </li> <li> <p>ARN referring to the KMS key alias</p> </li> </ul> <p>If encrypted is enabled but a KMS key ID is not specified, the customer''s default KMS key for Amazon EBS is used.</p>'
      description: The replication parameters for replicating a server.
    ServerReplicationConfiguration:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
          description: The ID of the server with which this replication configuration is associated.
        serverReplicationParameters:
          $ref: '#/components/schemas/ServerReplicationParameters'
          description: The parameters for replicating the server.
      description: Replication configuration of a server.
    ServerValidationStrategy:
      type: string
      enum:
        - USERDATA
    UserDataValidationParameters:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/Source'
          description: The location of the validation script.
        scriptType:
          $ref: '#/components/schemas/ScriptType'
          description: The type of validation script.
      description: Contains validation parameters.
    ServerValidationConfiguration:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
        validationId:
          $ref: '#/components/schemas/ValidationId'
          description: The ID of the validation.
        name:
          $ref: '#/components/schemas/NonEmptyStringWithMaxLen255'
          description: The name of the configuration.
        serverValidationStrategy:
          $ref: '#/components/schemas/ServerValidationStrategy'
          description: The validation strategy.
        userDataValidationParameters:
          $ref: '#/components/schemas/UserDataValidationParameters'
          description: The validation parameters.
      description: Configuration for validating an instance.
    ServerValidationOutput:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
      description: Contains output from validating an instance.
    TagKey:
      type: string
    TagValue:
      type: string
    Tag:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/TagKey'
          description: The tag key.
        value:
          $ref: '#/components/schemas/TagValue'
          description: The tag value.
      description: Key/value pair that can be assigned to an application.
    ValidationOutput:
      type: object
      properties:
        validationId:
          $ref: '#/components/schemas/ValidationId'
          description: The ID of the validation.
        name:
          $ref: '#/components/schemas/NonEmptyStringWithMaxLen255'
          description: The name of the validation.
        status:
          $ref: '#/components/schemas/ValidationStatus'
          description: The status of the validation.
        statusMessage:
          $ref: '#/components/schemas/ValidationStatusMessage'
          description: The status message.
        latestValidationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The latest time that the validation was performed.
        appValidationOutput:
          $ref: '#/components/schemas/AppValidationOutput'
          description: The output from validating an application.
        serverValidationOutput:
          $ref: '#/components/schemas/ServerValidationOutput'
          description: The output from validation an instance.
      description: Contains validation output.
    VmId:
      type: string
    VmName:
      type: string
    VmPath:
      type: string
    VmServerAddress:
      type: object
      properties:
        vmManagerId:
          $ref: '#/components/schemas/VmManagerId'
          description: The ID of the VM manager.
        vmId:
          $ref: '#/components/schemas/VmId'
          description: The ID of the VM.
      description: Represents a VM server location.
security:
  - hmac: []
