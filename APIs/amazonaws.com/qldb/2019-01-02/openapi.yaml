openapi: 3.0.0
info:
  version: '2019-01-02'
  x-release: v4
  title: Amazon QLDB
  description: The control plane for Amazon QLDB
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: qldb
  x-aws-signingName: qldb
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/qldb-2019-01-02.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/qldb/'
servers:
  - url: 'http://qldb.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The QLDB multi-region endpoint
  - url: 'https://qldb.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The QLDB multi-region endpoint
  - url: 'http://qldb.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The QLDB endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://qldb.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The QLDB endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/ledgers/{name}/journal-kinesis-streams/{streamId}':
    delete:
      operationId: CancelJournalKinesisStream
      description: '<p>Ends a given Amazon QLDB journal stream. Before a stream can be canceled, its current status must be <code>ACTIVE</code>.</p> <p>You can''t restart a stream after you cancel it. Canceled QLDB stream resources are subject to a 7-day retention period, so they are automatically deleted after this limit expires.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelJournalKinesisStreamResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
        - name: streamId
          in: path
          required: true
          description: The UUID (represented in Base62-encoded text) of the QLDB journal stream to be canceled.
          schema:
            type: string
            pattern: '^[A-Za-z-0-9]+$'
            minLength: 22
            maxLength: 22
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeJournalKinesisStream
      description: '<p>Returns detailed information about a given Amazon QLDB journal stream. The output includes the Amazon Resource Name (ARN), stream name, current status, creation time, and the parameters of the original stream creation request.</p> <p>This action does not return any expired journal streams. For more information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/streams.create.html#streams.create.states.expiration">Expiration for terminal streams</a> in the <i>Amazon QLDB Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJournalKinesisStreamResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
        - name: streamId
          in: path
          required: true
          description: The UUID (represented in Base62-encoded text) of the QLDB journal stream to describe.
          schema:
            type: string
            pattern: '^[A-Za-z-0-9]+$'
            minLength: 22
            maxLength: 22
  /ledgers:
    post:
      operationId: CreateLedger
      description: Creates a new ledger in your account in the current Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLedgerResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - PermissionsMode
              properties:
                Name:
                  description: '<p>The name of the ledger that you want to create. The name must be unique among all of the ledgers in your account in the current Region.</p> <p>Naming constraints for ledger names are defined in <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming">Quotas in Amazon QLDB</a> in the <i>Amazon QLDB Developer Guide</i>.</p>'
                  type: string
                  pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
                  minLength: 1
                  maxLength: 32
                Tags:
                  description: The key-value pairs to add as tags to the ledger that you want to create. Tag keys are case sensitive. Tag values are case sensitive and can be null.
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                PermissionsMode:
                  description: '<p>The permissions mode to assign to the ledger that you want to create. This parameter can have one of the following values:</p> <ul> <li> <p> <code>ALLOW_ALL</code>: A legacy permissions mode that enables access control with API-level granularity for ledgers.</p> <p>This mode allows users who have the <code>SendCommand</code> API permission for this ledger to run all PartiQL commands (hence, <code>ALLOW_ALL</code>) on any tables in the specified ledger. This mode disregards any table-level or command-level IAM permissions policies that you create for the ledger.</p> </li> <li> <p> <code>STANDARD</code>: (<i>Recommended</i>) A permissions mode that enables access control with finer granularity for ledgers, tables, and PartiQL commands.</p> <p>By default, this mode denies all user requests to run any PartiQL commands on any tables in this ledger. To allow PartiQL commands to run, you must create IAM permissions policies for specific table resources and PartiQL actions, in addition to the <code>SendCommand</code> API permission for the ledger. For information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-standard-mode.html">Getting started with the standard permissions mode</a> in the <i>Amazon QLDB Developer Guide</i>.</p> </li> </ul> <note> <p>We strongly recommend using the <code>STANDARD</code> permissions mode to maximize the security of your ledger data.</p> </note>'
                  type: string
                  enum:
                    - ALLOW_ALL
                    - STANDARD
                DeletionProtection:
                  description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger. You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>.</p>'
                  type: boolean
                KmsKey:
                  description: '<p>The key in Key Management Service (KMS) to use for encryption of data at rest in the ledger. For more information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html">Encryption at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p> <p>Use one of the following options to specify this parameter:</p> <ul> <li> <p> <code>AWS_OWNED_KMS_KEY</code>: Use an KMS key that is owned and managed by Amazon Web Services on your behalf.</p> </li> <li> <p> <b>Undefined</b>: By default, use an Amazon Web Services owned KMS key.</p> </li> <li> <p> <b>A valid symmetric customer managed KMS key</b>: Use the specified KMS key in your account that you create, own, and manage.</p> <p>Amazon QLDB does not support asymmetric keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using symmetric and asymmetric keys</a> in the <i>Key Management Service Developer Guide</i>.</p> </li> </ul> <p>To specify a customer managed KMS key, you can use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a key in a different account, you must use the key ARN or alias ARN.</p> <p>For example:</p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id">Key identifiers (KeyId)</a> in the <i>Key Management Service Developer Guide</i>.</p>'
                  type: string
                  maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListLedgers
      description: <p>Returns an array of ledger summaries that are associated with the current account and Region.</p> <p>This action returns a maximum of 100 items and is paginated so that you can retrieve all the items by calling <code>ListLedgers</code> multiple times.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLedgersResponse'
      parameters:
        - name: max_results
          in: query
          required: false
          description: The maximum number of results to return in a single <code>ListLedgers</code> request. (The actual number of results returned might be fewer.)
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: next_token
          in: query
          required: false
          description: 'A pagination token, indicating that you want to retrieve the next page of results. If you received a value for <code>NextToken</code> in the response from a previous <code>ListLedgers</code> call, then you should use that value as input here.'
          schema:
            type: string
            pattern: '^[A-Za-z-0-9+/=]+$'
            minLength: 4
            maxLength: 1024
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/ledgers/{name}':
    delete:
      operationId: DeleteLedger
      description: '<p>Deletes a ledger and all of its contents. This action is irreversible.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger. You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '483':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger that you want to delete.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeLedger
      description: 'Returns information about a ledger, including its state, permissions mode, encryption at rest settings, and when it was created.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLedgerResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger that you want to describe.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
    patch:
      operationId: UpdateLedger
      description: Updates properties on a ledger.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLedgerResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeletionProtection:
                  description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger. You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>.</p>'
                  type: boolean
                KmsKey:
                  description: '<p>The key in Key Management Service (KMS) to use for encryption of data at rest in the ledger. For more information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html">Encryption at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p> <p>Use one of the following options to specify this parameter:</p> <ul> <li> <p> <code>AWS_OWNED_KMS_KEY</code>: Use an KMS key that is owned and managed by Amazon Web Services on your behalf.</p> </li> <li> <p> <b>Undefined</b>: Make no changes to the KMS key of the ledger.</p> </li> <li> <p> <b>A valid symmetric customer managed KMS key</b>: Use the specified KMS key in your account that you create, own, and manage.</p> <p>Amazon QLDB does not support asymmetric keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using symmetric and asymmetric keys</a> in the <i>Key Management Service Developer Guide</i>.</p> </li> </ul> <p>To specify a customer managed KMS key, you can use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a key in a different account, you must use the key ARN or alias ARN.</p> <p>For example:</p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id">Key identifiers (KeyId)</a> in the <i>Key Management Service Developer Guide</i>.</p>'
                  type: string
                  maxLength: 1600
  '/ledgers/{name}/journal-s3-exports/{exportId}':
    get:
      operationId: DescribeJournalS3Export
      description: '<p>Returns information about a journal export job, including the ledger name, export ID, creation time, current status, and the parameters of the original export creation request.</p> <p>This action does not return any expired export jobs. For more information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration">Export job expiration</a> in the <i>Amazon QLDB Developer Guide</i>.</p> <p>If the export job with the given <code>ExportId</code> doesn''t exist, then throws <code>ResourceNotFoundException</code>.</p> <p>If the ledger with the given <code>Name</code> doesn''t exist, then throws <code>ResourceNotFoundException</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJournalS3ExportResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
        - name: exportId
          in: path
          required: true
          description: The UUID (represented in Base62-encoded text) of the journal export job to describe.
          schema:
            type: string
            pattern: '^[A-Za-z-0-9]+$'
            minLength: 22
            maxLength: 22
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/ledgers/{name}/journal-s3-exports':
    post:
      operationId: ExportJournalToS3
      description: '<p>Exports journal contents within a date and time range from a ledger into a specified Amazon Simple Storage Service (Amazon S3) bucket. The data is written as files in Amazon Ion format.</p> <p>If the ledger with the given <code>Name</code> doesn''t exist, then throws <code>ResourceNotFoundException</code>.</p> <p>If the ledger with the given <code>Name</code> is in <code>CREATING</code> status, then throws <code>ResourcePreconditionNotMetException</code>.</p> <p>You can initiate up to two concurrent journal export requests for each ledger. Beyond this limit, journal export requests throw <code>LimitExceededException</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportJournalToS3Response'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InclusiveStartTime
                - ExclusiveEndTime
                - S3ExportConfiguration
                - RoleArn
              properties:
                InclusiveStartTime:
                  description: '<p>The inclusive start date and time for the range of journal contents to export.</p> <p>The <code>InclusiveStartTime</code> must be in <code>ISO 8601</code> date and time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p> <p>The <code>InclusiveStartTime</code> must be before <code>ExclusiveEndTime</code>.</p> <p>If you provide an <code>InclusiveStartTime</code> that is before the ledger''s <code>CreationDateTime</code>, Amazon QLDB defaults it to the ledger''s <code>CreationDateTime</code>.</p>'
                  type: string
                  format: date-time
                ExclusiveEndTime:
                  description: '<p>The exclusive end date and time for the range of journal contents to export.</p> <p>The <code>ExclusiveEndTime</code> must be in <code>ISO 8601</code> date and time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p> <p>The <code>ExclusiveEndTime</code> must be less than or equal to the current UTC date and time.</p>'
                  type: string
                  format: date-time
                S3ExportConfiguration:
                  description: The Amazon Simple Storage Service (Amazon S3) bucket location in which a journal export job writes the journal contents.
                  type: object
                  properties:
                    Bucket:
                      $ref: '#/components/schemas/S3Bucket'
                      description: '<p>The Amazon S3 bucket name in which a journal export job writes the journal contents.</p> <p>The bucket name must comply with the Amazon S3 bucket naming conventions. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html">Bucket Restrictions and Limitations</a> in the <i>Amazon S3 Developer Guide</i>.</p>'
                    Prefix:
                      $ref: '#/components/schemas/S3Prefix'
                      description: '<p>The prefix for the Amazon S3 bucket in which a journal export job writes the journal contents.</p> <p>The prefix must comply with Amazon S3 key naming rules and restrictions. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html">Object Key and Metadata</a> in the <i>Amazon S3 Developer Guide</i>.</p> <p>The following are examples of valid <code>Prefix</code> values:</p> <ul> <li> <p> <code>JournalExports-ForMyLedger/Testing/</code> </p> </li> <li> <p> <code>JournalExports</code> </p> </li> <li> <p> <code>My:Tests/</code> </p> </li> </ul>'
                    EncryptionConfiguration:
                      $ref: '#/components/schemas/S3EncryptionConfiguration'
                      description: The encryption settings that are used by a journal export job to write data in an Amazon S3 bucket.
                RoleArn:
                  description: '<p>The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal export job to do the following:</p> <ul> <li> <p>Write objects into your Amazon Simple Storage Service (Amazon S3) bucket.</p> </li> <li> <p>(Optional) Use your customer master key (CMK) in Key Management Service (KMS) for server-side encryption of your exported data.</p> </li> </ul>'
                  type: string
                  minLength: 20
                  maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListJournalS3ExportsForLedger
      description: '<p>Returns an array of journal export job descriptions for a specified ledger.</p> <p>This action returns a maximum of <code>MaxResults</code> items, and is paginated so that you can retrieve all the items by calling <code>ListJournalS3ExportsForLedger</code> multiple times.</p> <p>This action does not return any expired export jobs. For more information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration">Export job expiration</a> in the <i>Amazon QLDB Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJournalS3ExportsForLedgerResponse'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
        - name: max_results
          in: query
          required: false
          description: The maximum number of results to return in a single <code>ListJournalS3ExportsForLedger</code> request. (The actual number of results returned might be fewer.)
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: next_token
          in: query
          required: false
          description: 'A pagination token, indicating that you want to retrieve the next page of results. If you received a value for <code>NextToken</code> in the response from a previous <code>ListJournalS3ExportsForLedger</code> call, then you should use that value as input here.'
          schema:
            type: string
            pattern: '^[A-Za-z-0-9+/=]+$'
            minLength: 4
            maxLength: 1024
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/ledgers/{name}/block':
    post:
      operationId: GetBlock
      description: '<p>Returns a block object at a specified address in a journal. Also returns a proof of the specified block for verification if <code>DigestTipAddress</code> is provided.</p> <p>For information about the data contents in a block, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/journal-contents.html">Journal contents</a> in the <i>Amazon QLDB Developer Guide</i>.</p> <p>If the specified ledger doesn''t exist or is in <code>DELETING</code> status, then throws <code>ResourceNotFoundException</code>.</p> <p>If the specified ledger is in <code>CREATING</code> status, then throws <code>ResourcePreconditionNotMetException</code>.</p> <p>If no block exists with the specified address, then throws <code>InvalidParameterException</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - BlockAddress
              properties:
                BlockAddress:
                  description: A structure that can contain a value in multiple encoding formats.
                  type: object
                  properties:
                    IonText:
                      $ref: '#/components/schemas/IonText'
                      description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure.
                DigestTipAddress:
                  description: A structure that can contain a value in multiple encoding formats.
                  type: object
                  properties:
                    IonText:
                      $ref: '#/components/schemas/IonText'
                      description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/ledgers/{name}/digest':
    post:
      operationId: GetDigest
      description: Returns the digest of a ledger at the latest committed block in the journal. The response includes a 256-bit hash value and a block address.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDigestResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/ledgers/{name}/revision':
    post:
      operationId: GetRevision
      description: Returns a revision data object for a specified document ID and block address. Also returns a proof of the specified revision for verification if <code>DigestTipAddress</code> is provided.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRevisionResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - BlockAddress
                - DocumentId
              properties:
                BlockAddress:
                  description: A structure that can contain a value in multiple encoding formats.
                  type: object
                  properties:
                    IonText:
                      $ref: '#/components/schemas/IonText'
                      description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure.
                DocumentId:
                  description: The UUID (represented in Base62-encoded text) of the document to be verified.
                  type: string
                  pattern: '^[A-Za-z-0-9]+$'
                  minLength: 22
                  maxLength: 22
                DigestTipAddress:
                  description: A structure that can contain a value in multiple encoding formats.
                  type: object
                  properties:
                    IonText:
                      $ref: '#/components/schemas/IonText'
                      description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/ledgers/{name}/journal-kinesis-streams':
    get:
      operationId: ListJournalKinesisStreamsForLedger
      description: '<p>Returns an array of all Amazon QLDB journal stream descriptors for a given ledger. The output of each stream descriptor includes the same details that are returned by <code>DescribeJournalKinesisStream</code>.</p> <p>This action does not return any expired journal streams. For more information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/streams.create.html#streams.create.states.expiration">Expiration for terminal streams</a> in the <i>Amazon QLDB Developer Guide</i>.</p> <p>This action returns a maximum of <code>MaxResults</code> items. It is paginated so that you can retrieve all the items by calling <code>ListJournalKinesisStreamsForLedger</code> multiple times.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJournalKinesisStreamsForLedgerResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
        - name: max_results
          in: query
          required: false
          description: The maximum number of results to return in a single <code>ListJournalKinesisStreamsForLedger</code> request. (The actual number of results returned might be fewer.)
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: next_token
          in: query
          required: false
          description: 'A pagination token, indicating that you want to retrieve the next page of results. If you received a value for <code>NextToken</code> in the response from a previous <code>ListJournalKinesisStreamsForLedger</code> call, you should use that value as input here.'
          schema:
            type: string
            pattern: '^[A-Za-z-0-9+/=]+$'
            minLength: 4
            maxLength: 1024
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: StreamJournalToKinesis
      description: Creates a journal stream for a given Amazon QLDB ledger. The stream captures every document revision that is committed to the ledger's journal and delivers the data to a specified Amazon Kinesis Data Streams resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamJournalToKinesisResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - RoleArn
                - InclusiveStartTime
                - KinesisConfiguration
                - StreamName
              properties:
                RoleArn:
                  description: The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
                  type: string
                  minLength: 20
                  maxLength: 1600
                Tags:
                  description: The key-value pairs to add as tags to the stream that you want to create. Tag keys are case sensitive. Tag values are case sensitive and can be null.
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                InclusiveStartTime:
                  description: '<p>The inclusive start date and time from which to start streaming journal data. This parameter must be in <code>ISO 8601</code> date and time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p> <p>The <code>InclusiveStartTime</code> cannot be in the future and must be before <code>ExclusiveEndTime</code>.</p> <p>If you provide an <code>InclusiveStartTime</code> that is before the ledger''s <code>CreationDateTime</code>, QLDB effectively defaults it to the ledger''s <code>CreationDateTime</code>.</p>'
                  type: string
                  format: date-time
                ExclusiveEndTime:
                  description: '<p>The exclusive date and time that specifies when the stream ends. If you don''t define this parameter, the stream runs indefinitely until you cancel it.</p> <p>The <code>ExclusiveEndTime</code> must be in <code>ISO 8601</code> date and time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p>'
                  type: string
                  format: date-time
                KinesisConfiguration:
                  description: The configuration settings of the Amazon Kinesis Data Streams destination for an Amazon QLDB journal stream.
                  type: object
                  properties:
                    StreamArn:
                      $ref: '#/components/schemas/Arn'
                      description: The Amazon Resource Name (ARN) of the Kinesis Data Streams resource.
                    AggregationEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: '<p>Enables QLDB to publish multiple data records in a single Kinesis Data Streams record, increasing the number of records sent per API call.</p> <p> <i>This option is enabled by default.</i> Record aggregation has important implications for processing records and requires de-aggregation in your stream consumer. To learn more, see <a href="https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html">KPL Key Concepts</a> and <a href="https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html">Consumer De-aggregation</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>.</p>'
                StreamName:
                  description: '<p>The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.</p> <p>Your stream name must be unique among other <i>active</i> streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming">Quotas in Amazon QLDB</a> in the <i>Amazon QLDB Developer Guide</i>.</p>'
                  type: string
                  pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
                  minLength: 1
                  maxLength: 32
  /journal-s3-exports:
    get:
      operationId: ListJournalS3Exports
      description: '<p>Returns an array of journal export job descriptions for all ledgers that are associated with the current account and Region.</p> <p>This action returns a maximum of <code>MaxResults</code> items, and is paginated so that you can retrieve all the items by calling <code>ListJournalS3Exports</code> multiple times.</p> <p>This action does not return any expired export jobs. For more information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration">Export job expiration</a> in the <i>Amazon QLDB Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJournalS3ExportsResponse'
      parameters:
        - name: max_results
          in: query
          required: false
          description: The maximum number of results to return in a single <code>ListJournalS3Exports</code> request. (The actual number of results returned might be fewer.)
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: next_token
          in: query
          required: false
          description: 'A pagination token, indicating that you want to retrieve the next page of results. If you received a value for <code>NextToken</code> in the response from a previous <code>ListJournalS3Exports</code> call, then you should use that value as input here.'
          schema:
            type: string
            pattern: '^[A-Za-z-0-9+/=]+$'
            minLength: 4
            maxLength: 1024
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: Returns all tags for a specified Amazon QLDB resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: '<p>The Amazon Resource Name (ARN) for which to list the tags. For example:</p> <p> <code>arn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger</code> </p>'
          schema:
            type: string
            minLength: 20
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: '<p>Adds one or more tags to a specified Amazon QLDB resource.</p> <p>A resource can have up to 50 tags. If you try to create more than 50 tags for a resource, your request fails and returns an error.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: '<p>The Amazon Resource Name (ARN) to which you want to add the tags. For example:</p> <p> <code>arn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger</code> </p>'
          schema:
            type: string
            minLength: 20
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: 'The key-value pairs to add as tags to the specified QLDB resource. Tag keys are case sensitive. If you specify a key that already exists for the resource, your request fails and returns an error. Tag values are case sensitive and can be null.'
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes one or more tags from a specified Amazon QLDB resource. You can specify up to 50 tag keys to remove.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: '<p>The Amazon Resource Name (ARN) from which to remove the tags. For example:</p> <p> <code>arn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger</code> </p>'
          schema:
            type: string
            minLength: 20
            maxLength: 1600
        - name: tagKeys
          in: query
          required: true
          description: The list of tag keys to remove.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 0
            maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/ledgers/{name}/permissions-mode':
    patch:
      operationId: UpdateLedgerPermissionsMode
      description: '<p>Updates the permissions mode of a ledger.</p> <important> <p>Before you switch to the <code>STANDARD</code> permissions mode, you must first create all required IAM policies and table tags to avoid disruption to your users. To learn more, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/ledger-management.basics.html#ledger-mgmt.basics.update-permissions.migrating">Migrating to the standard permissions mode</a> in the <i>Amazon QLDB Developer Guide</i>.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLedgerPermissionsModeResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PermissionsMode
              properties:
                PermissionsMode:
                  description: '<p>The permissions mode to assign to the ledger. This parameter can have one of the following values:</p> <ul> <li> <p> <code>ALLOW_ALL</code>: A legacy permissions mode that enables access control with API-level granularity for ledgers.</p> <p>This mode allows users who have the <code>SendCommand</code> API permission for this ledger to run all PartiQL commands (hence, <code>ALLOW_ALL</code>) on any tables in the specified ledger. This mode disregards any table-level or command-level IAM permissions policies that you create for the ledger.</p> </li> <li> <p> <code>STANDARD</code>: (<i>Recommended</i>) A permissions mode that enables access control with finer granularity for ledgers, tables, and PartiQL commands.</p> <p>By default, this mode denies all user requests to run any PartiQL commands on any tables in this ledger. To allow PartiQL commands to run, you must create IAM permissions policies for specific table resources and PartiQL actions, in addition to the <code>SendCommand</code> API permission for the ledger. For information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-standard-mode.html">Getting started with the standard permissions mode</a> in the <i>Amazon QLDB Developer Guide</i>.</p> </li> </ul> <note> <p>We strongly recommend using the <code>STANDARD</code> permissions mode to maximize the security of your ledger data.</p> </note>'
                  type: string
                  enum:
                    - ALLOW_ALL
                    - STANDARD
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CancelJournalKinesisStreamResponse:
      type: object
      properties:
        StreamId:
          $ref: '#/components/schemas/UniqueId'
          description: The UUID (Base62-encoded text) of the canceled QLDB journal stream.
    InvalidParameterException: {}
    ResourceNotFoundException: {}
    ResourcePreconditionNotMetException: {}
    CreateLedgerResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the ledger.
        State:
          $ref: '#/components/schemas/LedgerState'
          description: The current status of the ledger.
        CreationDateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in epoch time format, when the ledger was created. (Epoch time format is the number of seconds elapsed since 12:00:00 AM January 1, 1970 UTC.)'
        PermissionsMode:
          $ref: '#/components/schemas/PermissionsMode'
          description: The permissions mode of the ledger that you created.
        DeletionProtection:
          $ref: '#/components/schemas/DeletionProtection'
          description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger. You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>.</p>'
        KmsKeyArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN of the customer managed KMS key that the ledger uses for encryption at rest. If this parameter is undefined, the ledger uses an Amazon Web Services owned KMS key for encryption.'
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    ResourceAlreadyExistsException: {}
    LimitExceededException: {}
    ResourceInUseException: {}
    DescribeJournalKinesisStreamResponse:
      type: object
      properties:
        Stream:
          $ref: '#/components/schemas/JournalKinesisStreamDescription'
          description: Information about the QLDB journal stream returned by a <code>DescribeJournalS3Export</code> request.
    DescribeJournalS3ExportResponse:
      type: object
      required:
        - ExportDescription
      properties:
        ExportDescription:
          $ref: '#/components/schemas/JournalS3ExportDescription'
          description: Information about the journal export job returned by a <code>DescribeJournalS3Export</code> request.
    DescribeLedgerResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the ledger.
        State:
          $ref: '#/components/schemas/LedgerState'
          description: The current status of the ledger.
        CreationDateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in epoch time format, when the ledger was created. (Epoch time format is the number of seconds elapsed since 12:00:00 AM January 1, 1970 UTC.)'
        PermissionsMode:
          $ref: '#/components/schemas/PermissionsMode'
          description: The permissions mode of the ledger.
        DeletionProtection:
          $ref: '#/components/schemas/DeletionProtection'
          description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger. You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>.</p>'
        EncryptionDescription:
          $ref: '#/components/schemas/LedgerEncryptionDescription'
          description: 'Information about the encryption of data at rest in the ledger. This includes the current status, the KMS key, and when the key became inaccessible (in the case of an error).'
    ExportJournalToS3Response:
      type: object
      required:
        - ExportId
      properties:
        ExportId:
          $ref: '#/components/schemas/UniqueId'
          description: '<p>The UUID (represented in Base62-encoded text) that QLDB assigns to each journal export job.</p> <p>To describe your export request and check the status of the job, you can use <code>ExportId</code> to call <code>DescribeJournalS3Export</code>.</p>'
    S3Bucket:
      type: string
      pattern: '^[A-Za-z-0-9-_.]+$'
      minLength: 3
      maxLength: 255
    S3Prefix:
      type: string
      minLength: 0
      maxLength: 128
    S3EncryptionConfiguration:
      type: object
      required:
        - ObjectEncryptionType
      properties:
        ObjectEncryptionType:
          $ref: '#/components/schemas/S3ObjectEncryptionType'
          description: '<p>The Amazon S3 object encryption type.</p> <p>To learn more about server-side encryption options in Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html">Protecting Data Using Server-Side Encryption</a> in the <i>Amazon S3 Developer Guide</i>.</p>'
        KmsKeyArn:
          $ref: '#/components/schemas/Arn'
          description: <p>The Amazon Resource Name (ARN) of a symmetric customer master key (CMK) in Key Management Service (KMS). Amazon S3 does not support asymmetric CMKs.</p> <p>You must provide a <code>KmsKeyArn</code> if you specify <code>SSE_KMS</code> as the <code>ObjectEncryptionType</code>.</p> <p> <code>KmsKeyArn</code> is not required if you specify <code>SSE_S3</code> as the <code>ObjectEncryptionType</code>.</p>
      description: The encryption settings that are used by a journal export job to write data in an Amazon Simple Storage Service (Amazon S3) bucket.
    GetBlockResponse:
      type: object
      required:
        - Block
      properties:
        Block:
          $ref: '#/components/schemas/ValueHolder'
          description: The block data object in Amazon Ion format.
        Proof:
          $ref: '#/components/schemas/ValueHolder'
          description: 'The proof object in Amazon Ion format returned by a <code>GetBlock</code> request. A proof contains the list of hash values required to recalculate the specified digest using a Merkle tree, starting with the specified block.'
    IonText:
      type: string
      minLength: 1
      maxLength: 1048576
      format: password
    GetDigestResponse:
      type: object
      required:
        - Digest
        - DigestTipAddress
      properties:
        Digest:
          $ref: '#/components/schemas/Digest'
          description: The 256-bit hash value representing the digest returned by a <code>GetDigest</code> request.
        DigestTipAddress:
          $ref: '#/components/schemas/ValueHolder'
          description: 'The latest block location covered by the digest that you requested. An address is an Amazon Ion structure that has two fields: <code>strandId</code> and <code>sequenceNo</code>.'
    GetRevisionResponse:
      type: object
      required:
        - Revision
      properties:
        Proof:
          $ref: '#/components/schemas/ValueHolder'
          description: 'The proof object in Amazon Ion format returned by a <code>GetRevision</code> request. A proof contains the list of hash values that are required to recalculate the specified digest using a Merkle tree, starting with the specified document revision.'
        Revision:
          $ref: '#/components/schemas/ValueHolder'
          description: The document revision data object in Amazon Ion format.
    ListJournalKinesisStreamsForLedgerResponse:
      type: object
      properties:
        Streams:
          $ref: '#/components/schemas/JournalKinesisStreamDescriptionList'
          description: The array of QLDB journal stream descriptors that are associated with the given ledger.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: '<ul> <li> <p>If <code>NextToken</code> is empty, the last page of results has been processed and there are no more results to be retrieved.</p> </li> <li> <p>If <code>NextToken</code> is <i>not</i> empty, more results are available. To retrieve the next page of results, use the value of <code>NextToken</code> in a subsequent <code>ListJournalKinesisStreamsForLedger</code> call.</p> </li> </ul>'
    ListJournalS3ExportsResponse:
      type: object
      properties:
        JournalS3Exports:
          $ref: '#/components/schemas/JournalS3ExportList'
          description: The array of journal export job descriptions for all ledgers that are associated with the current account and Region.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: '<ul> <li> <p>If <code>NextToken</code> is empty, then the last page of results has been processed and there are no more results to be retrieved.</p> </li> <li> <p>If <code>NextToken</code> is <i>not</i> empty, then there are more results available. To retrieve the next page of results, use the value of <code>NextToken</code> in a subsequent <code>ListJournalS3Exports</code> call.</p> </li> </ul>'
    ListJournalS3ExportsForLedgerResponse:
      type: object
      properties:
        JournalS3Exports:
          $ref: '#/components/schemas/JournalS3ExportList'
          description: The array of journal export job descriptions that are associated with the specified ledger.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: '<ul> <li> <p>If <code>NextToken</code> is empty, then the last page of results has been processed and there are no more results to be retrieved.</p> </li> <li> <p>If <code>NextToken</code> is <i>not</i> empty, then there are more results available. To retrieve the next page of results, use the value of <code>NextToken</code> in a subsequent <code>ListJournalS3ExportsForLedger</code> call.</p> </li> </ul>'
    ListLedgersResponse:
      type: object
      properties:
        Ledgers:
          $ref: '#/components/schemas/LedgerList'
          description: The array of ledger summaries that are associated with the current account and Region.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: '<p>A pagination token, indicating whether there are more results available:</p> <ul> <li> <p>If <code>NextToken</code> is empty, then the last page of results has been processed and there are no more results to be retrieved.</p> </li> <li> <p>If <code>NextToken</code> is <i>not</i> empty, then there are more results available. To retrieve the next page of results, use the value of <code>NextToken</code> in a subsequent <code>ListLedgers</code> call.</p> </li> </ul>'
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/Tags'
          description: The tags that are currently associated with the specified Amazon QLDB resource.
    StreamJournalToKinesisResponse:
      type: object
      properties:
        StreamId:
          $ref: '#/components/schemas/UniqueId'
          description: The UUID (represented in Base62-encoded text) that QLDB assigns to each QLDB journal stream.
    Arn:
      type: string
      minLength: 20
      maxLength: 1600
    Boolean:
      type: boolean
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateLedgerResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the ledger.
        State:
          $ref: '#/components/schemas/LedgerState'
          description: The current status of the ledger.
        CreationDateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in epoch time format, when the ledger was created. (Epoch time format is the number of seconds elapsed since 12:00:00 AM January 1, 1970 UTC.)'
        DeletionProtection:
          $ref: '#/components/schemas/DeletionProtection'
          description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger. You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>.</p>'
        EncryptionDescription:
          $ref: '#/components/schemas/LedgerEncryptionDescription'
          description: 'Information about the encryption of data at rest in the ledger. This includes the current status, the KMS key, and when the key became inaccessible (in the case of an error).'
    UpdateLedgerPermissionsModeResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the ledger.
        PermissionsMode:
          $ref: '#/components/schemas/PermissionsMode'
          description: The current permissions mode of the ledger.
    LedgerName:
      type: string
      pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
      minLength: 1
      maxLength: 32
    UniqueId:
      type: string
      pattern: '^[A-Za-z-0-9]+$'
      minLength: 22
      maxLength: 22
    CancelJournalKinesisStreamRequest:
      type: object
      title: CancelJournalKinesisStreamRequest
      properties: {}
    Tags:
      type: object
      minProperties: 0
      maxProperties: 200
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    PermissionsMode:
      type: string
      enum:
        - ALLOW_ALL
        - STANDARD
    DeletionProtection:
      type: boolean
    KmsKey:
      type: string
      maxLength: 1600
    CreateLedgerRequest:
      type: object
      required:
        - Name
        - PermissionsMode
      title: CreateLedgerRequest
      properties:
        Name:
          $ref: '#/components/schemas/LedgerName'
          description: '<p>The name of the ledger that you want to create. The name must be unique among all of the ledgers in your account in the current Region.</p> <p>Naming constraints for ledger names are defined in <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming">Quotas in Amazon QLDB</a> in the <i>Amazon QLDB Developer Guide</i>.</p>'
        Tags:
          $ref: '#/components/schemas/Tags'
          description: The key-value pairs to add as tags to the ledger that you want to create. Tag keys are case sensitive. Tag values are case sensitive and can be null.
        PermissionsMode:
          $ref: '#/components/schemas/PermissionsMode'
          description: '<p>The permissions mode to assign to the ledger that you want to create. This parameter can have one of the following values:</p> <ul> <li> <p> <code>ALLOW_ALL</code>: A legacy permissions mode that enables access control with API-level granularity for ledgers.</p> <p>This mode allows users who have the <code>SendCommand</code> API permission for this ledger to run all PartiQL commands (hence, <code>ALLOW_ALL</code>) on any tables in the specified ledger. This mode disregards any table-level or command-level IAM permissions policies that you create for the ledger.</p> </li> <li> <p> <code>STANDARD</code>: (<i>Recommended</i>) A permissions mode that enables access control with finer granularity for ledgers, tables, and PartiQL commands.</p> <p>By default, this mode denies all user requests to run any PartiQL commands on any tables in this ledger. To allow PartiQL commands to run, you must create IAM permissions policies for specific table resources and PartiQL actions, in addition to the <code>SendCommand</code> API permission for the ledger. For information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-standard-mode.html">Getting started with the standard permissions mode</a> in the <i>Amazon QLDB Developer Guide</i>.</p> </li> </ul> <note> <p>We strongly recommend using the <code>STANDARD</code> permissions mode to maximize the security of your ledger data.</p> </note>'
        DeletionProtection:
          $ref: '#/components/schemas/DeletionProtection'
          description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger. You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>.</p>'
        KmsKey:
          $ref: '#/components/schemas/KmsKey'
          description: '<p>The key in Key Management Service (KMS) to use for encryption of data at rest in the ledger. For more information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html">Encryption at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p> <p>Use one of the following options to specify this parameter:</p> <ul> <li> <p> <code>AWS_OWNED_KMS_KEY</code>: Use an KMS key that is owned and managed by Amazon Web Services on your behalf.</p> </li> <li> <p> <b>Undefined</b>: By default, use an Amazon Web Services owned KMS key.</p> </li> <li> <p> <b>A valid symmetric customer managed KMS key</b>: Use the specified KMS key in your account that you create, own, and manage.</p> <p>Amazon QLDB does not support asymmetric keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using symmetric and asymmetric keys</a> in the <i>Key Management Service Developer Guide</i>.</p> </li> </ul> <p>To specify a customer managed KMS key, you can use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a key in a different account, you must use the key ARN or alias ARN.</p> <p>For example:</p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id">Key identifiers (KeyId)</a> in the <i>Key Management Service Developer Guide</i>.</p>'
    LedgerState:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - DELETED
    Timestamp:
      type: string
      format: date-time
    DeleteLedgerRequest:
      type: object
      title: DeleteLedgerRequest
      properties: {}
    DescribeJournalKinesisStreamRequest:
      type: object
      title: DescribeJournalKinesisStreamRequest
      properties: {}
    JournalKinesisStreamDescription:
      type: object
      required:
        - LedgerName
        - RoleArn
        - StreamId
        - Status
        - KinesisConfiguration
        - StreamName
      properties:
        LedgerName:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in epoch time format, when the QLDB journal stream was created. (Epoch time format is the number of seconds elapsed since 12:00:00 AM January 1, 1970 UTC.)'
        InclusiveStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The inclusive start date and time from which to start streaming journal data.
        ExclusiveEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The exclusive date and time that specifies when the stream ends. If this parameter is undefined, the stream runs indefinitely until you cancel it.'
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
        StreamId:
          $ref: '#/components/schemas/UniqueId'
          description: The UUID (represented in Base62-encoded text) of the QLDB journal stream.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the QLDB journal stream.
        Status:
          $ref: '#/components/schemas/StreamStatus'
          description: The current state of the QLDB journal stream.
        KinesisConfiguration:
          $ref: '#/components/schemas/KinesisConfiguration'
          description: The configuration settings of the Amazon Kinesis Data Streams destination for a QLDB journal stream.
        ErrorCause:
          $ref: '#/components/schemas/ErrorCause'
          description: The error message that describes the reason that a stream has a status of <code>IMPAIRED</code> or <code>FAILED</code>. This is not applicable to streams that have other status values.
        StreamName:
          $ref: '#/components/schemas/StreamName'
          description: The user-defined name of the QLDB journal stream.
      description: 'Information about an Amazon QLDB journal stream, including the Amazon Resource Name (ARN), stream name, creation time, current status, and the parameters of the original stream creation request.'
    DescribeJournalS3ExportRequest:
      type: object
      title: DescribeJournalS3ExportRequest
      properties: {}
    JournalS3ExportDescription:
      type: object
      required:
        - LedgerName
        - ExportId
        - ExportCreationTime
        - Status
        - InclusiveStartTime
        - ExclusiveEndTime
        - S3ExportConfiguration
        - RoleArn
      properties:
        LedgerName:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger.
        ExportId:
          $ref: '#/components/schemas/UniqueId'
          description: The UUID (represented in Base62-encoded text) of the journal export job.
        ExportCreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in epoch time format, when the export job was created. (Epoch time format is the number of seconds elapsed since 12:00:00 AM January 1, 1970 UTC.)'
        Status:
          $ref: '#/components/schemas/ExportStatus'
          description: The current state of the journal export job.
        InclusiveStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The inclusive start date and time for the range of journal contents that are specified in the original export request.
        ExclusiveEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The exclusive end date and time for the range of journal contents that are specified in the original export request.
        S3ExportConfiguration:
          $ref: '#/components/schemas/S3ExportConfiguration'
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: '<p>The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal export job to do the following:</p> <ul> <li> <p>Write objects into your Amazon Simple Storage Service (Amazon S3) bucket.</p> </li> <li> <p>(Optional) Use your customer master key (CMK) in Key Management Service (KMS) for server-side encryption of your exported data.</p> </li> </ul>'
      description: 'Information about a journal export job, including the ledger name, export ID, creation time, current status, and the parameters of the original export creation request.'
    DescribeLedgerRequest:
      type: object
      title: DescribeLedgerRequest
      properties: {}
    LedgerEncryptionDescription:
      type: object
      required:
        - KmsKeyArn
        - EncryptionStatus
      properties:
        KmsKeyArn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) of the customer managed KMS key that the ledger uses for encryption at rest. If this parameter is undefined, the ledger uses an Amazon Web Services owned KMS key for encryption.'
        EncryptionStatus:
          $ref: '#/components/schemas/EncryptionStatus'
          description: '<p>The current state of encryption at rest for the ledger. This can be one of the following values:</p> <ul> <li> <p> <code>ENABLED</code>: Encryption is fully enabled using the specified key.</p> </li> <li> <p> <code>UPDATING</code>: The ledger is actively processing the specified key change.</p> <p>Key changes in QLDB are asynchronous. The ledger is fully accessible without any performance impact while the key change is being processed. The amount of time it takes to update a key varies depending on the ledger size.</p> </li> <li> <p> <code>KMS_KEY_INACCESSIBLE</code>: The specified customer managed KMS key is not accessible, and the ledger is impaired. Either the key was disabled or deleted, or the grants on the key were revoked. When a ledger is impaired, it is not accessible and does not accept any read or write requests.</p> <p>An impaired ledger automatically returns to an active state after you restore the grants on the key, or re-enable the key that was disabled. However, deleting a customer managed KMS key is irreversible. After a key is deleted, you can no longer access the ledgers that are protected with that key, and the data becomes unrecoverable permanently.</p> </li> </ul>'
        InaccessibleKmsKeyDateTime:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>The date and time, in epoch time format, when the KMS key first became inaccessible, in the case of an error. (Epoch time format is the number of seconds that have elapsed since 12:00:00 AM January 1, 1970 UTC.)</p> <p>This parameter is undefined if the KMS key is accessible.</p>'
      description: '<p>Information about the encryption of data at rest in an Amazon QLDB ledger. This includes the current status, the key in Key Management Service (KMS), and when the key became inaccessible (in the case of an error).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html">Encryption at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p>'
    Digest:
      type: string
      minLength: 32
      maxLength: 32
    EncryptionStatus:
      type: string
      enum:
        - ENABLED
        - UPDATING
        - KMS_KEY_INACCESSIBLE
    ErrorCause:
      type: string
      enum:
        - KINESIS_STREAM_NOT_FOUND
        - IAM_PERMISSION_REVOKED
    S3ExportConfiguration:
      type: object
      required:
        - Bucket
        - Prefix
        - EncryptionConfiguration
      properties:
        Bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: '<p>The Amazon S3 bucket name in which a journal export job writes the journal contents.</p> <p>The bucket name must comply with the Amazon S3 bucket naming conventions. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html">Bucket Restrictions and Limitations</a> in the <i>Amazon S3 Developer Guide</i>.</p>'
        Prefix:
          $ref: '#/components/schemas/S3Prefix'
          description: '<p>The prefix for the Amazon S3 bucket in which a journal export job writes the journal contents.</p> <p>The prefix must comply with Amazon S3 key naming rules and restrictions. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html">Object Key and Metadata</a> in the <i>Amazon S3 Developer Guide</i>.</p> <p>The following are examples of valid <code>Prefix</code> values:</p> <ul> <li> <p> <code>JournalExports-ForMyLedger/Testing/</code> </p> </li> <li> <p> <code>JournalExports</code> </p> </li> <li> <p> <code>My:Tests/</code> </p> </li> </ul>'
        EncryptionConfiguration:
          $ref: '#/components/schemas/S3EncryptionConfiguration'
          description: The encryption settings that are used by a journal export job to write data in an Amazon S3 bucket.
      description: The Amazon Simple Storage Service (Amazon S3) bucket location in which a journal export job writes the journal contents.
    ExportJournalToS3Request:
      type: object
      required:
        - InclusiveStartTime
        - ExclusiveEndTime
        - S3ExportConfiguration
        - RoleArn
      title: ExportJournalToS3Request
      properties:
        InclusiveStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>The inclusive start date and time for the range of journal contents to export.</p> <p>The <code>InclusiveStartTime</code> must be in <code>ISO 8601</code> date and time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p> <p>The <code>InclusiveStartTime</code> must be before <code>ExclusiveEndTime</code>.</p> <p>If you provide an <code>InclusiveStartTime</code> that is before the ledger''s <code>CreationDateTime</code>, Amazon QLDB defaults it to the ledger''s <code>CreationDateTime</code>.</p>'
        ExclusiveEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>The exclusive end date and time for the range of journal contents to export.</p> <p>The <code>ExclusiveEndTime</code> must be in <code>ISO 8601</code> date and time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p> <p>The <code>ExclusiveEndTime</code> must be less than or equal to the current UTC date and time.</p>'
        S3ExportConfiguration:
          $ref: '#/components/schemas/S3ExportConfiguration'
          description: The configuration settings of the Amazon S3 bucket destination for your export request.
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: '<p>The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal export job to do the following:</p> <ul> <li> <p>Write objects into your Amazon Simple Storage Service (Amazon S3) bucket.</p> </li> <li> <p>(Optional) Use your customer master key (CMK) in Key Management Service (KMS) for server-side encryption of your exported data.</p> </li> </ul>'
    ExportStatus:
      type: string
      enum:
        - IN_PROGRESS
        - COMPLETED
        - CANCELLED
    ValueHolder:
      type: object
      properties:
        IonText:
          $ref: '#/components/schemas/IonText'
          description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure.
      description: A structure that can contain a value in multiple encoding formats.
    GetBlockRequest:
      type: object
      required:
        - BlockAddress
      title: GetBlockRequest
      properties:
        BlockAddress:
          $ref: '#/components/schemas/ValueHolder'
          description: '<p>The location of the block that you want to request. An address is an Amazon Ion structure that has two fields: <code>strandId</code> and <code>sequenceNo</code>.</p> <p>For example: <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:14}</code>.</p>'
        DigestTipAddress:
          $ref: '#/components/schemas/ValueHolder'
          description: '<p>The latest block location covered by the digest for which to request a proof. An address is an Amazon Ion structure that has two fields: <code>strandId</code> and <code>sequenceNo</code>.</p> <p>For example: <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:49}</code>.</p>'
    GetDigestRequest:
      type: object
      title: GetDigestRequest
      properties: {}
    GetRevisionRequest:
      type: object
      required:
        - BlockAddress
        - DocumentId
      title: GetRevisionRequest
      properties:
        BlockAddress:
          $ref: '#/components/schemas/ValueHolder'
          description: '<p>The block location of the document revision to be verified. An address is an Amazon Ion structure that has two fields: <code>strandId</code> and <code>sequenceNo</code>.</p> <p>For example: <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:14}</code>.</p>'
        DocumentId:
          $ref: '#/components/schemas/UniqueId'
          description: The UUID (represented in Base62-encoded text) of the document to be verified.
        DigestTipAddress:
          $ref: '#/components/schemas/ValueHolder'
          description: '<p>The latest block location covered by the digest for which to request a proof. An address is an Amazon Ion structure that has two fields: <code>strandId</code> and <code>sequenceNo</code>.</p> <p>For example: <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:49}</code>.</p>'
    StreamStatus:
      type: string
      enum:
        - ACTIVE
        - COMPLETED
        - CANCELED
        - FAILED
        - IMPAIRED
    KinesisConfiguration:
      type: object
      required:
        - StreamArn
      properties:
        StreamArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Kinesis Data Streams resource.
        AggregationEnabled:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Enables QLDB to publish multiple data records in a single Kinesis Data Streams record, increasing the number of records sent per API call.</p> <p> <i>This option is enabled by default.</i> Record aggregation has important implications for processing records and requires de-aggregation in your stream consumer. To learn more, see <a href="https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html">KPL Key Concepts</a> and <a href="https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html">Consumer De-aggregation</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>.</p>'
      description: The configuration settings of the Amazon Kinesis Data Streams destination for an Amazon QLDB journal stream.
    StreamName:
      type: string
      pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
      minLength: 1
      maxLength: 32
    JournalKinesisStreamDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/JournalKinesisStreamDescription'
    JournalS3ExportList:
      type: array
      items:
        $ref: '#/components/schemas/JournalS3ExportDescription'
    LedgerSummary:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger.
        State:
          $ref: '#/components/schemas/LedgerState'
          description: The current status of the ledger.
        CreationDateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in epoch time format, when the ledger was created. (Epoch time format is the number of seconds elapsed since 12:00:00 AM January 1, 1970 UTC.)'
      description: 'Information about a ledger, including its name, state, and when it was created.'
    LedgerList:
      type: array
      items:
        $ref: '#/components/schemas/LedgerSummary'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      pattern: '^[A-Za-z-0-9+/=]+$'
      minLength: 4
      maxLength: 1024
    ListJournalKinesisStreamsForLedgerRequest:
      type: object
      title: ListJournalKinesisStreamsForLedgerRequest
      properties: {}
    ListJournalS3ExportsForLedgerRequest:
      type: object
      title: ListJournalS3ExportsForLedgerRequest
      properties: {}
    ListJournalS3ExportsRequest:
      type: object
      title: ListJournalS3ExportsRequest
      properties: {}
    ListLedgersRequest:
      type: object
      title: ListLedgersRequest
      properties: {}
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    S3ObjectEncryptionType:
      type: string
      enum:
        - SSE_KMS
        - SSE_S3
        - NO_ENCRYPTION
    StreamJournalToKinesisRequest:
      type: object
      required:
        - RoleArn
        - InclusiveStartTime
        - KinesisConfiguration
        - StreamName
      title: StreamJournalToKinesisRequest
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: The key-value pairs to add as tags to the stream that you want to create. Tag keys are case sensitive. Tag values are case sensitive and can be null.
        InclusiveStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>The inclusive start date and time from which to start streaming journal data. This parameter must be in <code>ISO 8601</code> date and time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p> <p>The <code>InclusiveStartTime</code> cannot be in the future and must be before <code>ExclusiveEndTime</code>.</p> <p>If you provide an <code>InclusiveStartTime</code> that is before the ledger''s <code>CreationDateTime</code>, QLDB effectively defaults it to the ledger''s <code>CreationDateTime</code>.</p>'
        ExclusiveEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>The exclusive date and time that specifies when the stream ends. If you don''t define this parameter, the stream runs indefinitely until you cancel it.</p> <p>The <code>ExclusiveEndTime</code> must be in <code>ISO 8601</code> date and time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p>'
        KinesisConfiguration:
          $ref: '#/components/schemas/KinesisConfiguration'
          description: The configuration settings of the Kinesis Data Streams destination for your stream request.
        StreamName:
          $ref: '#/components/schemas/StreamName'
          description: '<p>The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.</p> <p>Your stream name must be unique among other <i>active</i> streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming">Quotas in Amazon QLDB</a> in the <i>Amazon QLDB Developer Guide</i>.</p>'
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          $ref: '#/components/schemas/Tags'
          description: 'The key-value pairs to add as tags to the specified QLDB resource. Tag keys are case sensitive. If you specify a key that already exists for the resource, your request fails and returns an error. Tag values are case sensitive and can be null.'
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateLedgerPermissionsModeRequest:
      type: object
      required:
        - PermissionsMode
      title: UpdateLedgerPermissionsModeRequest
      properties:
        PermissionsMode:
          $ref: '#/components/schemas/PermissionsMode'
          description: '<p>The permissions mode to assign to the ledger. This parameter can have one of the following values:</p> <ul> <li> <p> <code>ALLOW_ALL</code>: A legacy permissions mode that enables access control with API-level granularity for ledgers.</p> <p>This mode allows users who have the <code>SendCommand</code> API permission for this ledger to run all PartiQL commands (hence, <code>ALLOW_ALL</code>) on any tables in the specified ledger. This mode disregards any table-level or command-level IAM permissions policies that you create for the ledger.</p> </li> <li> <p> <code>STANDARD</code>: (<i>Recommended</i>) A permissions mode that enables access control with finer granularity for ledgers, tables, and PartiQL commands.</p> <p>By default, this mode denies all user requests to run any PartiQL commands on any tables in this ledger. To allow PartiQL commands to run, you must create IAM permissions policies for specific table resources and PartiQL actions, in addition to the <code>SendCommand</code> API permission for the ledger. For information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-standard-mode.html">Getting started with the standard permissions mode</a> in the <i>Amazon QLDB Developer Guide</i>.</p> </li> </ul> <note> <p>We strongly recommend using the <code>STANDARD</code> permissions mode to maximize the security of your ledger data.</p> </note>'
    UpdateLedgerRequest:
      type: object
      title: UpdateLedgerRequest
      properties:
        DeletionProtection:
          $ref: '#/components/schemas/DeletionProtection'
          description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger. You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>.</p>'
        KmsKey:
          $ref: '#/components/schemas/KmsKey'
          description: '<p>The key in Key Management Service (KMS) to use for encryption of data at rest in the ledger. For more information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html">Encryption at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p> <p>Use one of the following options to specify this parameter:</p> <ul> <li> <p> <code>AWS_OWNED_KMS_KEY</code>: Use an KMS key that is owned and managed by Amazon Web Services on your behalf.</p> </li> <li> <p> <b>Undefined</b>: Make no changes to the KMS key of the ledger.</p> </li> <li> <p> <b>A valid symmetric customer managed KMS key</b>: Use the specified KMS key in your account that you create, own, and manage.</p> <p>Amazon QLDB does not support asymmetric keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using symmetric and asymmetric keys</a> in the <i>Key Management Service Developer Guide</i>.</p> </li> </ul> <p>To specify a customer managed KMS key, you can use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a key in a different account, you must use the key ARN or alias ARN.</p> <p>For example:</p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id">Key identifiers (KeyId)</a> in the <i>Key Management Service Developer Guide</i>.</p>'
security:
  - hmac: []
