openapi: 3.0.0
info:
  version: '2015-07-09'
  x-release: v4
  title: AWS CodePipeline
  description: '<fullname>AWS CodePipeline</fullname> <p> <b>Overview</b> </p> <p>This is the AWS CodePipeline API Reference. This guide provides descriptions of the actions and data types for AWS CodePipeline. Some functionality for your pipeline can only be configured through the API. For more information, see the <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html">AWS CodePipeline User Guide</a>.</p> <p>You can use the AWS CodePipeline API to work with pipelines, stages, actions, and transitions.</p> <p> <i>Pipelines</i> are models of automated release processes. Each pipeline is uniquely named, and consists of stages, actions, and transitions. </p> <p>You can work with pipelines by calling:</p> <ul> <li> <p> <a>CreatePipeline</a>, which creates a uniquely named pipeline.</p> </li> <li> <p> <a>DeletePipeline</a>, which deletes the specified pipeline.</p> </li> <li> <p> <a>GetPipeline</a>, which returns information about the pipeline structure and pipeline metadata, including the pipeline Amazon Resource Name (ARN).</p> </li> <li> <p> <a>GetPipelineExecution</a>, which returns information about a specific execution of a pipeline.</p> </li> <li> <p> <a>GetPipelineState</a>, which returns information about the current state of the stages and actions of a pipeline.</p> </li> <li> <p> <a>ListActionExecutions</a>, which returns action-level details for past executions. The details include full stage and action-level details, including individual action duration, status, any errors that occurred during the execution, and input and output artifact location details.</p> </li> <li> <p> <a>ListPipelines</a>, which gets a summary of all of the pipelines associated with your account.</p> </li> <li> <p> <a>ListPipelineExecutions</a>, which gets a summary of the most recent executions for a pipeline.</p> </li> <li> <p> <a>StartPipelineExecution</a>, which runs the most recent revision of an artifact through the pipeline.</p> </li> <li> <p> <a>StopPipelineExecution</a>, which stops the specified pipeline execution from continuing through the pipeline.</p> </li> <li> <p> <a>UpdatePipeline</a>, which updates a pipeline with edits or changes to the structure of the pipeline.</p> </li> </ul> <p>Pipelines include <i>stages</i>. Each stage contains one or more actions that must complete before the next stage begins. A stage results in success or failure. If a stage fails, the pipeline stops at that stage and remains stopped until either a new version of an artifact appears in the source location, or a user takes action to rerun the most recent artifact through the pipeline. You can call <a>GetPipelineState</a>, which displays the status of a pipeline, including the status of stages in the pipeline, or <a>GetPipeline</a>, which returns the entire structure of the pipeline, including the stages of that pipeline. For more information about the structure of stages and actions, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/pipeline-structure.html">AWS CodePipeline Pipeline Structure Reference</a>.</p> <p>Pipeline stages include <i>actions</i> that are categorized into categories such as source or build actions performed in a stage of a pipeline. For example, you can use a source action to import artifacts into a pipeline from a source such as Amazon S3. Like stages, you do not work with actions directly in most cases, but you do define and interact with actions when working with pipeline operations such as <a>CreatePipeline</a> and <a>GetPipelineState</a>. Valid action categories are:</p> <ul> <li> <p>Source</p> </li> <li> <p>Build</p> </li> <li> <p>Test</p> </li> <li> <p>Deploy</p> </li> <li> <p>Approval</p> </li> <li> <p>Invoke</p> </li> </ul> <p>Pipelines also include <i>transitions</i>, which allow the transition of artifacts from one stage to the next in a pipeline after the actions in one stage complete.</p> <p>You can work with transitions by calling:</p> <ul> <li> <p> <a>DisableStageTransition</a>, which prevents artifacts from transitioning to the next stage in a pipeline.</p> </li> <li> <p> <a>EnableStageTransition</a>, which enables transition of artifacts between stages in a pipeline. </p> </li> </ul> <p> <b>Using the API to integrate with AWS CodePipeline</b> </p> <p>For third-party integrators or developers who want to create their own integrations with AWS CodePipeline, the expected sequence varies from the standard API user. To integrate with AWS CodePipeline, developers need to work with the following items:</p> <p> <b>Jobs</b>, which are instances of an action. For example, a job for a source action might import a revision of an artifact from a source. </p> <p>You can work with jobs by calling:</p> <ul> <li> <p> <a>AcknowledgeJob</a>, which confirms whether a job worker has received the specified job.</p> </li> <li> <p> <a>GetJobDetails</a>, which returns the details of a job.</p> </li> <li> <p> <a>PollForJobs</a>, which determines whether there are any jobs to act on.</p> </li> <li> <p> <a>PutJobFailureResult</a>, which provides details of a job failure. </p> </li> <li> <p> <a>PutJobSuccessResult</a>, which provides details of a job success.</p> </li> </ul> <p> <b>Third party jobs</b>, which are instances of an action created by a partner action and integrated into AWS CodePipeline. Partner actions are created by members of the AWS Partner Network.</p> <p>You can work with third party jobs by calling:</p> <ul> <li> <p> <a>AcknowledgeThirdPartyJob</a>, which confirms whether a job worker has received the specified job.</p> </li> <li> <p> <a>GetThirdPartyJobDetails</a>, which requests the details of a job for a partner action.</p> </li> <li> <p> <a>PollForThirdPartyJobs</a>, which determines whether there are any jobs to act on. </p> </li> <li> <p> <a>PutThirdPartyJobFailureResult</a>, which provides details of a job failure.</p> </li> <li> <p> <a>PutThirdPartyJobSuccessResult</a>, which provides details of a job success.</p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: codepipeline
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codepipeline-2015-07-09.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/codepipeline/'
servers:
  - url: 'http://codepipeline.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CodePipeline multi-region endpoint
  - url: 'https://codepipeline.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CodePipeline multi-region endpoint
  - url: 'http://codepipeline.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CodePipeline endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://codepipeline.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CodePipeline endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=CodePipeline_20150709.AcknowledgeJob:
    post:
      operationId: AcknowledgeJob
      description: Returns information about a specified job and whether that job has been received by the job worker. Used for custom actions only.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcknowledgeJobOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidNonceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNonceException'
        '482':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeJobInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.AcknowledgeJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.AcknowledgeThirdPartyJob:
    post:
      operationId: AcknowledgeThirdPartyJob
      description: Confirms a job worker has received the specified job. Used for partner actions only.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcknowledgeThirdPartyJobOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidNonceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNonceException'
        '482':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '483':
          description: InvalidClientTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClientTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeThirdPartyJobInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.AcknowledgeThirdPartyJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.CreateCustomActionType:
    post:
      operationId: CreateCustomActionType
      description: Creates a new custom action that can be used in all pipelines associated with the AWS account. Only used for custom actions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomActionTypeOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '483':
          description: InvalidTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagsException'
        '484':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomActionTypeInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.CreateCustomActionType
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.CreatePipeline:
    post:
      operationId: CreatePipeline
      description: '<p>Creates a pipeline.</p> <note> <p>In the pipeline structure, you must include either <code>artifactStore</code> or <code>artifactStores</code> in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use <code>artifactStores</code>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePipelineOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: PipelineNameInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNameInUseException'
        '482':
          description: InvalidStageDeclarationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStageDeclarationException'
        '483':
          description: InvalidActionDeclarationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidActionDeclarationException'
        '484':
          description: InvalidBlockerDeclarationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidBlockerDeclarationException'
        '485':
          description: InvalidStructureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStructureException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '487':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '488':
          description: InvalidTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagsException'
        '489':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.CreatePipeline
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.DeleteCustomActionType:
    post:
      operationId: DeleteCustomActionType
      description: '<p>Marks a custom action as deleted. <code>PollForJobs</code> for the custom action fails after the action is marked for deletion. Used for custom actions only.</p> <important> <p>To re-create a custom action after it has been deleted you must use a string in the version field that has never been used before. This string can be an incremented version number, for example. To restore a deleted custom action, use a JSON file that is identical to the deleted action, including the original string in the version field.</p> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCustomActionTypeInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.DeleteCustomActionType
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.DeletePipeline:
    post:
      operationId: DeletePipeline
      description: Deletes the specified pipeline.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePipelineInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.DeletePipeline
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.DeleteWebhook:
    post:
      operationId: DeleteWebhook
      description: 'Deletes a previously created webhook by name. Deleting the webhook stops AWS CodePipeline from starting a pipeline every time an external event occurs. The API returns successfully when trying to delete a webhook that is already deleted. If a deleted webhook is re-created by calling PutWebhook with the same name, it will have a different URL.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWebhookOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWebhookInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.DeleteWebhook
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.DeregisterWebhookWithThirdParty:
    post:
      operationId: DeregisterWebhookWithThirdParty
      description: Removes the connection between the webhook that was created by CodePipeline and the external tool with events to be detected. Currently supported only for webhooks that target an action type of GitHub.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterWebhookWithThirdPartyOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: WebhookNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterWebhookWithThirdPartyInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.DeregisterWebhookWithThirdParty
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.DisableStageTransition:
    post:
      operationId: DisableStageTransition
      description: Prevents artifacts in a pipeline from transitioning to the next stage in the pipeline.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
        '482':
          description: StageNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableStageTransitionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.DisableStageTransition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.EnableStageTransition:
    post:
      operationId: EnableStageTransition
      description: Enables artifacts in a pipeline to transition to a stage in a pipeline.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
        '482':
          description: StageNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableStageTransitionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.EnableStageTransition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.GetActionType:
    post:
      operationId: GetActionType
      description: 'Returns information about an action type created for an external provider, where the action is to be used by customers of the external provider. The action can be created with any supported integration model.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActionTypeOutput'
        '480':
          description: ActionTypeNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTypeNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActionTypeInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.GetActionType
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.GetJobDetails:
    post:
      operationId: GetJobDetails
      description: '<p>Returns information about a job. Used for custom actions only.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobDetailsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetJobDetailsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.GetJobDetails
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.GetPipeline:
    post:
      operationId: GetPipeline
      description: 'Returns the metadata, structure, stages, and actions of a pipeline. Can be used to return the entire structure of a pipeline in JSON format, which can then be modified and used to update the pipeline structure with <a>UpdatePipeline</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelineOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
        '482':
          description: PipelineVersionNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineVersionNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPipelineInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.GetPipeline
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.GetPipelineExecution:
    post:
      operationId: GetPipelineExecution
      description: 'Returns information about an execution of a pipeline, including details about artifacts, the pipeline execution ID, and the name, version, and status of the pipeline.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelineExecutionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
        '482':
          description: PipelineExecutionNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineExecutionNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPipelineExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.GetPipelineExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.GetPipelineState:
    post:
      operationId: GetPipelineState
      description: '<p>Returns information about the state of a pipeline, including the stages and actions.</p> <note> <p>Values returned in the <code>revisionId</code> and <code>revisionUrl</code> fields indicate the source revision information, such as the commit ID, for the current state.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelineStateOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPipelineStateInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.GetPipelineState
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.GetThirdPartyJobDetails:
    post:
      operationId: GetThirdPartyJobDetails
      description: '<p>Requests the details of a job for a third party action. Used for partner actions only.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThirdPartyJobDetailsOutput'
        '480':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InvalidClientTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClientTokenException'
        '483':
          description: InvalidJobException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetThirdPartyJobDetailsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.GetThirdPartyJobDetails
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.ListActionExecutions:
    post:
      operationId: ListActionExecutions
      description: Lists the action executions that have occurred in a pipeline.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActionExecutionsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: PipelineExecutionNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineExecutionNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListActionExecutionsInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.ListActionExecutions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.ListActionTypes:
    post:
      operationId: ListActionTypes
      description: Gets a summary of all AWS CodePipeline action types associated with your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActionTypesOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListActionTypesInput'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.ListActionTypes
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.ListPipelineExecutions:
    post:
      operationId: ListPipelineExecutions
      description: Gets a summary of the most recent executions for a pipeline.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelineExecutionsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPipelineExecutionsInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.ListPipelineExecutions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.ListPipelines:
    post:
      operationId: ListPipelines
      description: Gets a summary of all of the pipelines associated with your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPipelinesInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.ListPipelines
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Gets the set of key-value pairs (metadata) that are used to manage the resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.ListWebhooks:
    post:
      operationId: ListWebhooks
      description: Gets a listing of all the webhooks in this AWS Region for this account. The output lists all webhooks and includes the webhook URL and ARN and the configuration for each webhook.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWebhooksOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWebhooksInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.ListWebhooks
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.PollForJobs:
    post:
      operationId: PollForJobs
      description: '<p>Returns information about any jobs for AWS CodePipeline to act on. <code>PollForJobs</code> is valid only for action types with "Custom" in the owner field. If the action type contains "AWS" or "ThirdParty" in the owner field, the <code>PollForJobs</code> action returns an error.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollForJobsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ActionTypeNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTypeNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollForJobsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.PollForJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.PollForThirdPartyJobs:
    post:
      operationId: PollForThirdPartyJobs
      description: '<p>Determines whether there are any third party jobs for a job worker to act on. Used for partner actions only.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollForThirdPartyJobsOutput'
        '480':
          description: ActionTypeNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTypeNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollForThirdPartyJobsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.PollForThirdPartyJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.PutActionRevision:
    post:
      operationId: PutActionRevision
      description: Provides information to AWS CodePipeline about new revisions to a source.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutActionRevisionOutput'
        '480':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
        '481':
          description: StageNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageNotFoundException'
        '482':
          description: ActionNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutActionRevisionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.PutActionRevision
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.PutApprovalResult:
    post:
      operationId: PutApprovalResult
      description: Provides the response to a manual approval request to AWS CodePipeline. Valid responses include Approved and Rejected.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutApprovalResultOutput'
        '480':
          description: InvalidApprovalTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidApprovalTokenException'
        '481':
          description: ApprovalAlreadyCompletedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalAlreadyCompletedException'
        '482':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
        '483':
          description: StageNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageNotFoundException'
        '484':
          description: ActionNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionNotFoundException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutApprovalResultInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.PutApprovalResult
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.PutJobFailureResult:
    post:
      operationId: PutJobFailureResult
      description: Represents the failure of a job as returned to the pipeline by a job worker. Used for custom actions only.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutJobFailureResultInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.PutJobFailureResult
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.PutJobSuccessResult:
    post:
      operationId: PutJobSuccessResult
      description: Represents the success of a job as returned to the pipeline by a job worker. Used for custom actions only.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
        '483':
          description: OutputVariablesSizeExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputVariablesSizeExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutJobSuccessResultInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.PutJobSuccessResult
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.PutThirdPartyJobFailureResult:
    post:
      operationId: PutThirdPartyJobFailureResult
      description: Represents the failure of a third party job as returned to the pipeline by a job worker. Used for partner actions only.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
        '483':
          description: InvalidClientTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClientTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutThirdPartyJobFailureResultInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.PutThirdPartyJobFailureResult
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.PutThirdPartyJobSuccessResult:
    post:
      operationId: PutThirdPartyJobSuccessResult
      description: Represents the success of a third party job as returned to the pipeline by a job worker. Used for partner actions only.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
        '483':
          description: InvalidClientTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClientTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutThirdPartyJobSuccessResultInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.PutThirdPartyJobSuccessResult
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.PutWebhook:
    post:
      operationId: PutWebhook
      description: 'Defines a webhook and returns a unique webhook URL generated by CodePipeline. This URL can be supplied to third party source hosting providers to call every time there''s a code change. When CodePipeline receives a POST request on this URL, the pipeline defined in the webhook is started as long as the POST request satisfied the authentication and filtering requirements supplied when defining the webhook. RegisterWebhookWithThirdParty and DeregisterWebhookWithThirdParty APIs can be used to automatically configure supported third parties to call the generated webhook URL.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutWebhookOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InvalidWebhookFilterPatternException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidWebhookFilterPatternException'
        '483':
          description: InvalidWebhookAuthenticationParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidWebhookAuthenticationParametersException'
        '484':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
        '485':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '486':
          description: InvalidTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagsException'
        '487':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutWebhookInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.PutWebhook
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.RegisterWebhookWithThirdParty:
    post:
      operationId: RegisterWebhookWithThirdParty
      description: Configures a connection between the webhook that was created and the external tool with events to be detected.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterWebhookWithThirdPartyOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: WebhookNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterWebhookWithThirdPartyInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.RegisterWebhookWithThirdParty
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.RetryStageExecution:
    post:
      operationId: RetryStageExecution
      description: 'Resumes the pipeline execution by retrying the last failed actions in a stage. You can retry a stage immediately if any of the actions in the stage fail. When you retry, all actions that are still in progress continue working, and failed actions are triggered again.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryStageExecutionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
        '483':
          description: StageNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageNotFoundException'
        '484':
          description: StageNotRetryableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageNotRetryableException'
        '485':
          description: NotLatestPipelineExecutionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotLatestPipelineExecutionException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetryStageExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.RetryStageExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.StartPipelineExecution:
    post:
      operationId: StartPipelineExecution
      description: 'Starts the specified pipeline. Specifically, it begins processing the latest commit to the source location specified as part of the pipeline.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartPipelineExecutionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartPipelineExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.StartPipelineExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.StopPipelineExecution:
    post:
      operationId: StopPipelineExecution
      description: 'Stops the specified pipeline execution. You choose to either stop the pipeline execution by completing in-progress actions without starting subsequent actions, or by abandoning in-progress actions. While completing or abandoning in-progress actions, the pipeline execution is in a <code>Stopping</code> state. After all in-progress actions are completed or abandoned, the pipeline execution is in a <code>Stopped</code> state.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPipelineExecutionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: PipelineNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
        '483':
          description: PipelineExecutionNotStoppableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineExecutionNotStoppableException'
        '484':
          description: DuplicatedStopRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicatedStopRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopPipelineExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.StopPipelineExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.TagResource:
    post:
      operationId: TagResource
      description: 'Adds to or modifies the tags of the given resource. Tags are metadata that can be used to manage a resource. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '483':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '484':
          description: InvalidTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagsException'
        '485':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.UntagResource:
    post:
      operationId: UntagResource
      description: Removes tags from an AWS resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '483':
          description: InvalidTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagsException'
        '484':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.UpdateActionType:
    post:
      operationId: UpdateActionType
      description: 'Updates an action type that was created with any supported integration model, where the action type is to be used by customers of the action type provider. Use a JSON file with the action definition and <code>UpdateActionType</code> to provide the full structure.'
      responses:
        '200':
          description: Success
        '480':
          description: RequestFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestFailedException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ActionTypeNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTypeNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActionTypeInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.UpdateActionType
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=CodePipeline_20150709.UpdatePipeline:
    post:
      operationId: UpdatePipeline
      description: Updates a specified pipeline with edits or changes to its structure. Use a JSON file with the pipeline structure and <code>UpdatePipeline</code> to provide the full structure of the pipeline. Updating the pipeline increases the version number of the pipeline by 1.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePipelineOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidStageDeclarationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStageDeclarationException'
        '482':
          description: InvalidActionDeclarationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidActionDeclarationException'
        '483':
          description: InvalidBlockerDeclarationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidBlockerDeclarationException'
        '484':
          description: InvalidStructureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStructureException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodePipeline_20150709.UpdatePipeline
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcknowledgeJobOutput:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/JobStatus'
          description: Whether the job worker has received the specified job.
      description: Represents the output of an AcknowledgeJob action.
    AcknowledgeJobInput:
      type: object
      required:
        - jobId
        - nonce
      title: AcknowledgeJobInput
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique system-generated ID of the job for which you want to confirm receipt.
        nonce:
          $ref: '#/components/schemas/Nonce'
          description: A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Get this number from the response of the <a>PollForJobs</a> request that returned this job.
      description: Represents the input of an AcknowledgeJob action.
    ValidationException: {}
    InvalidNonceException: {}
    JobNotFoundException: {}
    AcknowledgeThirdPartyJobOutput:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/JobStatus'
          description: 'The status information for the third party job, if any.'
      description: Represents the output of an AcknowledgeThirdPartyJob action.
    AcknowledgeThirdPartyJobInput:
      type: object
      required:
        - jobId
        - nonce
        - clientToken
      title: AcknowledgeThirdPartyJobInput
      properties:
        jobId:
          $ref: '#/components/schemas/ThirdPartyJobId'
          description: The unique system-generated ID of the job.
        nonce:
          $ref: '#/components/schemas/Nonce'
          description: A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Get this number from the response to a <a>GetThirdPartyJobDetails</a> request.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
      description: Represents the input of an AcknowledgeThirdPartyJob action.
    InvalidClientTokenException: {}
    CreateCustomActionTypeOutput:
      type: object
      required:
        - actionType
      properties:
        actionType:
          $ref: '#/components/schemas/ActionType'
          description: Returns information about the details of an action type.
        tags:
          $ref: '#/components/schemas/TagList'
          description: Specifies the tags applied to the custom action.
      description: Represents the output of a <code>CreateCustomActionType</code> operation.
    CreateCustomActionTypeInput:
      type: object
      required:
        - category
        - provider
        - version
        - inputArtifactDetails
        - outputArtifactDetails
      title: CreateCustomActionTypeInput
      properties:
        category:
          $ref: '#/components/schemas/ActionCategory'
          description: 'The category of the custom action, such as a build action or a test action.'
        provider:
          $ref: '#/components/schemas/ActionProvider'
          description: 'The provider of the service used in the custom action, such as AWS CodeDeploy.'
        version:
          $ref: '#/components/schemas/Version'
          description: The version identifier of the custom action.
        settings:
          $ref: '#/components/schemas/ActionTypeSettings'
          description: URLs that provide users information about this custom action.
        configurationProperties:
          $ref: '#/components/schemas/ActionConfigurationPropertyList'
          description: '<p>The configuration properties for the custom action.</p> <note> <p>You can refer to a name in the configuration properties of the custom action within the URL templates by following the format of {Config:name}, as long as the configuration property is both required and not secret. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html">Create a Custom Action for a Pipeline</a>.</p> </note>'
        inputArtifactDetails:
          $ref: '#/components/schemas/ArtifactDetails'
          description: 'The details of the input artifact for the action, such as its commit ID.'
        outputArtifactDetails:
          $ref: '#/components/schemas/ArtifactDetails'
          description: 'The details of the output artifact of the action, such as its commit ID.'
        tags:
          $ref: '#/components/schemas/TagList'
          description: The tags for the custom action.
      description: Represents the input of a CreateCustomActionType operation.
    LimitExceededException: {}
    TooManyTagsException: {}
    InvalidTagsException: {}
    ConcurrentModificationException: {}
    CreatePipelineOutput:
      type: object
      properties:
        pipeline:
          $ref: '#/components/schemas/PipelineDeclaration'
          description: 'Represents the structure of actions and stages to be performed in the pipeline. '
        tags:
          $ref: '#/components/schemas/TagList'
          description: Specifies the tags applied to the pipeline.
      description: Represents the output of a <code>CreatePipeline</code> action.
    CreatePipelineInput:
      type: object
      required:
        - pipeline
      title: CreatePipelineInput
      properties:
        pipeline:
          $ref: '#/components/schemas/PipelineDeclaration'
          description: 'Represents the structure of actions and stages to be performed in the pipeline. '
        tags:
          $ref: '#/components/schemas/TagList'
          description: The tags for the pipeline.
      description: Represents the input of a <code>CreatePipeline</code> action.
    PipelineNameInUseException: {}
    InvalidStageDeclarationException: {}
    InvalidActionDeclarationException: {}
    InvalidBlockerDeclarationException: {}
    InvalidStructureException: {}
    DeleteCustomActionTypeInput:
      type: object
      required:
        - category
        - provider
        - version
      title: DeleteCustomActionTypeInput
      properties:
        category:
          $ref: '#/components/schemas/ActionCategory'
          description: 'The category of the custom action that you want to delete, such as source or deploy.'
        provider:
          $ref: '#/components/schemas/ActionProvider'
          description: 'The provider of the service used in the custom action, such as AWS CodeDeploy.'
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the custom action to delete.
      description: Represents the input of a <code>DeleteCustomActionType</code> operation. The custom action will be marked as deleted.
    DeletePipelineInput:
      type: object
      required:
        - name
      title: DeletePipelineInput
      properties:
        name:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline to be deleted.
      description: Represents the input of a <code>DeletePipeline</code> action.
    DeleteWebhookOutput:
      type: object
      properties: {}
    DeleteWebhookInput:
      type: object
      required:
        - name
      title: DeleteWebhookInput
      properties:
        name:
          $ref: '#/components/schemas/WebhookName'
          description: The name of the webhook you want to delete.
    DeregisterWebhookWithThirdPartyOutput:
      type: object
      properties: {}
    DeregisterWebhookWithThirdPartyInput:
      type: object
      title: DeregisterWebhookWithThirdPartyInput
      properties:
        webhookName:
          $ref: '#/components/schemas/WebhookName'
          description: The name of the webhook you want to deregister.
    WebhookNotFoundException: {}
    DisableStageTransitionInput:
      type: object
      required:
        - pipelineName
        - stageName
        - transitionType
        - reason
      title: DisableStageTransitionInput
      properties:
        pipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline in which you want to disable the flow of artifacts from one stage to another.
        stageName:
          $ref: '#/components/schemas/StageName'
          description: The name of the stage where you want to disable the inbound or outbound transition of artifacts.
        transitionType:
          $ref: '#/components/schemas/StageTransitionType'
          description: 'Specifies whether artifacts are prevented from transitioning into the stage and being processed by the actions in that stage (inbound), or prevented from transitioning from the stage after they have been processed by the actions in that stage (outbound).'
        reason:
          $ref: '#/components/schemas/DisabledReason'
          description: 'The reason given to the user that a stage is disabled, such as waiting for manual approval or manual tests. This message is displayed in the pipeline console UI.'
      description: Represents the input of a <code>DisableStageTransition</code> action.
    PipelineNotFoundException: {}
    StageNotFoundException: {}
    EnableStageTransitionInput:
      type: object
      required:
        - pipelineName
        - stageName
        - transitionType
      title: EnableStageTransitionInput
      properties:
        pipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline in which you want to enable the flow of artifacts from one stage to another.
        stageName:
          $ref: '#/components/schemas/StageName'
          description: 'The name of the stage where you want to enable the transition of artifacts, either into the stage (inbound) or from that stage to the next stage (outbound).'
        transitionType:
          $ref: '#/components/schemas/StageTransitionType'
          description: Specifies whether artifacts are allowed to enter the stage and be processed by the actions in that stage (inbound) or whether already processed artifacts are allowed to transition to the next stage (outbound).
      description: Represents the input of an <code>EnableStageTransition</code> action.
    GetActionTypeOutput:
      type: object
      properties:
        actionType:
          $ref: '#/components/schemas/ActionTypeDeclaration'
          description: 'The action type information for the requested action type, such as the action type ID.'
    GetActionTypeInput:
      type: object
      required:
        - category
        - owner
        - provider
        - version
      title: GetActionTypeInput
      properties:
        category:
          $ref: '#/components/schemas/ActionCategory'
          description: '<p>Defines what kind of action can be taken in the stage. The following are the valid values:</p> <ul> <li> <p> <code>Source</code> </p> </li> <li> <p> <code>Build</code> </p> </li> <li> <p> <code>Test</code> </p> </li> <li> <p> <code>Deploy</code> </p> </li> <li> <p> <code>Approval</code> </p> </li> <li> <p> <code>Invoke</code> </p> </li> </ul>'
        owner:
          $ref: '#/components/schemas/ActionTypeOwner'
          description: 'The creator of an action type that was created with any supported integration model. There are two valid values: <code>AWS</code> and <code>ThirdParty</code>.'
        provider:
          $ref: '#/components/schemas/ActionProvider'
          description: The provider of the action type being called. The provider name is specified when the action type is created.
        version:
          $ref: '#/components/schemas/Version'
          description: A string that describes the action type version.
    ActionTypeNotFoundException: {}
    GetJobDetailsOutput:
      type: object
      properties:
        jobDetails:
          $ref: '#/components/schemas/JobDetails'
          description: '<p>The details of the job.</p> <note> <p>If AWSSessionCredentials is used, a long-running job can call <code>GetJobDetails</code> again to obtain new credentials.</p> </note>'
      description: Represents the output of a <code>GetJobDetails</code> action.
    GetJobDetailsInput:
      type: object
      required:
        - jobId
      title: GetJobDetailsInput
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique system-generated ID for the job.
      description: Represents the input of a <code>GetJobDetails</code> action.
    GetPipelineOutput:
      type: object
      properties:
        pipeline:
          $ref: '#/components/schemas/PipelineDeclaration'
          description: 'Represents the structure of actions and stages to be performed in the pipeline. '
        metadata:
          $ref: '#/components/schemas/PipelineMetadata'
          description: Represents the pipeline metadata information returned as part of the output of a <code>GetPipeline</code> action.
      description: Represents the output of a <code>GetPipeline</code> action.
    GetPipelineInput:
      type: object
      required:
        - name
      title: GetPipelineInput
      properties:
        name:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline for which you want to get information. Pipeline names must be unique under an AWS user account.
        version:
          $ref: '#/components/schemas/PipelineVersion'
          description: 'The version number of the pipeline. If you do not specify a version, defaults to the current version.'
      description: Represents the input of a <code>GetPipeline</code> action.
    PipelineVersionNotFoundException: {}
    GetPipelineExecutionOutput:
      type: object
      properties:
        pipelineExecution:
          $ref: '#/components/schemas/PipelineExecution'
          description: Represents information about the execution of a pipeline.
      description: Represents the output of a <code>GetPipelineExecution</code> action.
    GetPipelineExecutionInput:
      type: object
      required:
        - pipelineName
        - pipelineExecutionId
      title: GetPipelineExecutionInput
      properties:
        pipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline about which you want to get execution details.
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The ID of the pipeline execution about which you want to get execution details.
      description: Represents the input of a <code>GetPipelineExecution</code> action.
    PipelineExecutionNotFoundException: {}
    GetPipelineStateOutput:
      type: object
      properties:
        pipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline for which you want to get the state.
        pipelineVersion:
          $ref: '#/components/schemas/PipelineVersion'
          description: <p>The version number of the pipeline.</p> <note> <p>A newly created pipeline is always assigned a version number of <code>1</code>.</p> </note>
        stageStates:
          $ref: '#/components/schemas/StageStateList'
          description: 'A list of the pipeline stage output information, including stage name, state, most recent run details, whether the stage is disabled, and other data.'
        created:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time the pipeline was created, in timestamp format.'
        updated:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time the pipeline was last updated, in timestamp format.'
      description: Represents the output of a <code>GetPipelineState</code> action.
    GetPipelineStateInput:
      type: object
      required:
        - name
      title: GetPipelineStateInput
      properties:
        name:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline about which you want to get information.
      description: Represents the input of a <code>GetPipelineState</code> action.
    GetThirdPartyJobDetailsOutput:
      type: object
      properties:
        jobDetails:
          $ref: '#/components/schemas/ThirdPartyJobDetails'
          description: 'The details of the job, including any protected values defined for the job.'
      description: Represents the output of a <code>GetThirdPartyJobDetails</code> action.
    GetThirdPartyJobDetailsInput:
      type: object
      required:
        - jobId
        - clientToken
      title: GetThirdPartyJobDetailsInput
      properties:
        jobId:
          $ref: '#/components/schemas/ThirdPartyJobId'
          description: The unique system-generated ID used for identifying the job.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
      description: Represents the input of a <code>GetThirdPartyJobDetails</code> action.
    InvalidJobException: {}
    ListActionExecutionsOutput:
      type: object
      properties:
        actionExecutionDetails:
          $ref: '#/components/schemas/ActionExecutionDetailList'
          description: 'The details for a list of recent executions, such as action execution ID.'
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the amount of returned information is significantly large, an identifier is also returned and can be used in a subsequent <code>ListActionExecutions</code> call to return the next set of action executions in the list.'
    ListActionExecutionsInput:
      type: object
      required:
        - pipelineName
      title: ListActionExecutionsInput
      properties:
        pipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: ' The name of the pipeline for which you want to list action execution history.'
        filter:
          $ref: '#/components/schemas/ActionExecutionFilter'
          description: Input information used to filter action execution history.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: '<p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned nextToken value. Action execution history is retained for up to 12 months, based on action execution start times. Default value is 100. </p> <note> <p>Detailed execution history is available for executions run on or after February 21, 2019.</p> </note>'
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token that was returned from the previous <code>ListActionExecutions</code> call, which can be used to return the next set of action executions in the list.'
    InvalidNextTokenException: {}
    ListActionTypesOutput:
      type: object
      required:
        - actionTypes
      properties:
        actionTypes:
          $ref: '#/components/schemas/ActionTypeList'
          description: Provides details of the action types.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the amount of returned information is significantly large, an identifier is also returned. It can be used in a subsequent list action types call to return the next set of action types in the list.'
      description: Represents the output of a <code>ListActionTypes</code> action.
    ListActionTypesInput:
      type: object
      title: ListActionTypesInput
      properties:
        actionOwnerFilter:
          $ref: '#/components/schemas/ActionOwner'
          description: Filters the list of action types to those created by a specified entity.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'An identifier that was returned from the previous list action types call, which can be used to return the next set of action types in the list.'
        regionFilter:
          $ref: '#/components/schemas/AWSRegionName'
          description: The Region to filter on for the list of action types.
      description: Represents the input of a <code>ListActionTypes</code> action.
    ListPipelineExecutionsOutput:
      type: object
      properties:
        pipelineExecutionSummaries:
          $ref: '#/components/schemas/PipelineExecutionSummaryList'
          description: A list of executions in the history of a pipeline.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that can be used in the next <code>ListPipelineExecutions</code> call. To view all items in the list, continue to call this operation with each subsequent token until no more nextToken values are returned.'
      description: Represents the output of a <code>ListPipelineExecutions</code> action.
    ListPipelineExecutionsInput:
      type: object
      required:
        - pipelineName
      title: ListPipelineExecutionsInput
      properties:
        pipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline for which you want to get execution summary information.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned nextToken value. Pipeline history is limited to the most recent 12 months, based on pipeline execution start times. Default value is 100.'
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token that was returned from the previous <code>ListPipelineExecutions</code> call, which can be used to return the next set of pipeline executions in the list.'
      description: Represents the input of a <code>ListPipelineExecutions</code> action.
    ListPipelinesOutput:
      type: object
      properties:
        pipelines:
          $ref: '#/components/schemas/PipelineList'
          description: The list of pipelines.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the amount of returned information is significantly large, an identifier is also returned. It can be used in a subsequent list pipelines call to return the next set of pipelines in the list.'
      description: Represents the output of a <code>ListPipelines</code> action.
    ListPipelinesInput:
      type: object
      title: ListPipelinesInput
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: An identifier that was returned from the previous list pipelines call. It can be used to return the next set of pipelines in the list.
        maxResults:
          $ref: '#/components/schemas/MaxPipelines'
          description: 'The maximum number of pipelines to return in a single call. To retrieve the remaining pipelines, make another call with the returned nextToken value. The minimum value you can specify is 1. The maximum accepted value is 1000.'
      description: Represents the input of a <code>ListPipelines</code> action.
    ListTagsForResourceOutput:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/TagList'
          description: The tags for the resource.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the amount of returned information is significantly large, an identifier is also returned and can be used in a subsequent API call to return the next page of the list. The ListTagsforResource call lists all available tags in one call and does not use pagination.'
    ListTagsForResourceInput:
      type: object
      required:
        - resourceArn
      title: ListTagsForResourceInput
      properties:
        resourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource to get tags for.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token that was returned from the previous API call, which would be used to return the next page of the list. The ListTagsforResource call lists all available tags in one call and does not use pagination.'
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in a single call.
    ResourceNotFoundException: {}
    InvalidArnException: {}
    ListWebhooksOutput:
      type: object
      properties:
        webhooks:
          $ref: '#/components/schemas/WebhookList'
          description: The JSON detail returned for each webhook in the list output for the ListWebhooks call.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the amount of returned information is significantly large, an identifier is also returned and can be used in a subsequent ListWebhooks call to return the next set of webhooks in the list. '
    ListWebhooksInput:
      type: object
      title: ListWebhooksInput
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token that was returned from the previous ListWebhooks call, which can be used to return the next set of webhooks in the list.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned nextToken value.'
    PollForJobsOutput:
      type: object
      properties:
        jobs:
          $ref: '#/components/schemas/JobList'
          description: Information about the jobs to take action on.
      description: Represents the output of a <code>PollForJobs</code> action.
    PollForJobsInput:
      type: object
      required:
        - actionTypeId
      title: PollForJobsInput
      properties:
        actionTypeId:
          $ref: '#/components/schemas/ActionTypeId'
          description: Represents information about an action type.
        maxBatchSize:
          $ref: '#/components/schemas/MaxBatchSize'
          description: The maximum number of jobs to return in a poll for jobs call.
        queryParam:
          $ref: '#/components/schemas/QueryParamMap'
          description: 'A map of property names and values. For an action type with no queryable properties, this value must be null or an empty map. For an action type with a queryable property, you must supply that property as a key in the map. Only jobs whose action configuration matches the mapped value are returned.'
      description: Represents the input of a <code>PollForJobs</code> action.
    PollForThirdPartyJobsOutput:
      type: object
      properties:
        jobs:
          $ref: '#/components/schemas/ThirdPartyJobList'
          description: Information about the jobs to take action on.
      description: Represents the output of a <code>PollForThirdPartyJobs</code> action.
    PollForThirdPartyJobsInput:
      type: object
      required:
        - actionTypeId
      title: PollForThirdPartyJobsInput
      properties:
        actionTypeId:
          $ref: '#/components/schemas/ActionTypeId'
          description: Represents information about an action type.
        maxBatchSize:
          $ref: '#/components/schemas/MaxBatchSize'
          description: The maximum number of jobs to return in a poll for jobs call.
      description: Represents the input of a <code>PollForThirdPartyJobs</code> action.
    PutActionRevisionOutput:
      type: object
      properties:
        newRevision:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether the artifact revision was previously used in an execution of the specified pipeline.
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The ID of the current workflow state of the pipeline.
      description: Represents the output of a <code>PutActionRevision</code> action.
    PutActionRevisionInput:
      type: object
      required:
        - pipelineName
        - stageName
        - actionName
        - actionRevision
      title: PutActionRevisionInput
      properties:
        pipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline that starts processing the revision to the source.
        stageName:
          $ref: '#/components/schemas/StageName'
          description: The name of the stage that contains the action that acts on the revision.
        actionName:
          $ref: '#/components/schemas/ActionName'
          description: The name of the action that processes the revision.
        actionRevision:
          $ref: '#/components/schemas/ActionRevision'
          description: Represents information about the version (or revision) of an action.
      description: Represents the input of a <code>PutActionRevision</code> action.
    ActionNotFoundException: {}
    PutApprovalResultOutput:
      type: object
      properties:
        approvedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp showing when the approval or rejection was submitted.
      description: Represents the output of a <code>PutApprovalResult</code> action.
    PutApprovalResultInput:
      type: object
      required:
        - pipelineName
        - stageName
        - actionName
        - result
        - token
      title: PutApprovalResultInput
      properties:
        pipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: 'The name of the pipeline that contains the action. '
        stageName:
          $ref: '#/components/schemas/StageName'
          description: The name of the stage that contains the action.
        actionName:
          $ref: '#/components/schemas/ActionName'
          description: The name of the action for which approval is requested.
        result:
          $ref: '#/components/schemas/ApprovalResult'
          description: Represents information about the result of the approval request.
        token:
          $ref: '#/components/schemas/ApprovalToken'
          description: The system-generated token used to identify a unique approval request. The token for each open approval request can be obtained using the <a>GetPipelineState</a> action. It is used to validate that the approval request corresponding to this token is still valid.
      description: Represents the input of a <code>PutApprovalResult</code> action.
    InvalidApprovalTokenException: {}
    ApprovalAlreadyCompletedException: {}
    PutJobFailureResultInput:
      type: object
      required:
        - jobId
        - failureDetails
      title: PutJobFailureResultInput
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique system-generated ID of the job that failed. This is the same ID returned from <code>PollForJobs</code>.
        failureDetails:
          $ref: '#/components/schemas/FailureDetails'
          description: The details about the failure of a job.
      description: Represents the input of a <code>PutJobFailureResult</code> action.
    InvalidJobStateException: {}
    PutJobSuccessResultInput:
      type: object
      required:
        - jobId
      title: PutJobSuccessResultInput
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique system-generated ID of the job that succeeded. This is the same ID returned from <code>PollForJobs</code>.
        currentRevision:
          $ref: '#/components/schemas/CurrentRevision'
          description: The ID of the current revision of the artifact successfully worked on by the job.
        continuationToken:
          $ref: '#/components/schemas/ContinuationToken'
          description: 'A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a custom action in progress. Future jobs use this token to identify the running instance of the action. It can be reused to return more information about the progress of the custom action. When the action is complete, no continuation token should be supplied.'
        executionDetails:
          $ref: '#/components/schemas/ExecutionDetails'
          description: 'The execution details of the successful job, such as the actions taken by the job worker.'
        outputVariables:
          $ref: '#/components/schemas/OutputVariablesMap'
          description: Key-value pairs produced as output by a job worker that can be made available to a downstream action configuration. <code>outputVariables</code> can be included only when there is no continuation token on the request.
      description: Represents the input of a <code>PutJobSuccessResult</code> action.
    OutputVariablesSizeExceededException: {}
    PutThirdPartyJobFailureResultInput:
      type: object
      required:
        - jobId
        - clientToken
        - failureDetails
      title: PutThirdPartyJobFailureResultInput
      properties:
        jobId:
          $ref: '#/components/schemas/ThirdPartyJobId'
          description: The ID of the job that failed. This is the same ID returned from <code>PollForThirdPartyJobs</code>.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
        failureDetails:
          $ref: '#/components/schemas/FailureDetails'
          description: Represents information about failure details.
      description: Represents the input of a <code>PutThirdPartyJobFailureResult</code> action.
    PutThirdPartyJobSuccessResultInput:
      type: object
      required:
        - jobId
        - clientToken
      title: PutThirdPartyJobSuccessResultInput
      properties:
        jobId:
          $ref: '#/components/schemas/ThirdPartyJobId'
          description: The ID of the job that successfully completed. This is the same ID returned from <code>PollForThirdPartyJobs</code>.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
        currentRevision:
          $ref: '#/components/schemas/CurrentRevision'
          description: Represents information about a current revision.
        continuationToken:
          $ref: '#/components/schemas/ContinuationToken'
          description: 'A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a partner action in progress. Future jobs use this token to identify the running instance of the action. It can be reused to return more information about the progress of the partner action. When the action is complete, no continuation token should be supplied.'
        executionDetails:
          $ref: '#/components/schemas/ExecutionDetails'
          description: 'The details of the actions taken and results produced on an artifact as it passes through stages in the pipeline. '
      description: Represents the input of a <code>PutThirdPartyJobSuccessResult</code> action.
    PutWebhookOutput:
      type: object
      properties:
        webhook:
          $ref: '#/components/schemas/ListWebhookItem'
          description: 'The detail returned from creating the webhook, such as the webhook name, webhook URL, and webhook ARN.'
    PutWebhookInput:
      type: object
      required:
        - webhook
      title: PutWebhookInput
      properties:
        webhook:
          $ref: '#/components/schemas/WebhookDefinition'
          description: 'The detail provided in an input file to create the webhook, such as the webhook name, the pipeline name, and the action name. Give the webhook a unique name that helps you identify it. You might name the webhook after the pipeline and action it targets so that you can easily recognize what it''s used for later.'
        tags:
          $ref: '#/components/schemas/TagList'
          description: The tags for the webhook.
    InvalidWebhookFilterPatternException: {}
    InvalidWebhookAuthenticationParametersException: {}
    RegisterWebhookWithThirdPartyOutput:
      type: object
      properties: {}
    RegisterWebhookWithThirdPartyInput:
      type: object
      title: RegisterWebhookWithThirdPartyInput
      properties:
        webhookName:
          $ref: '#/components/schemas/WebhookName'
          description: 'The name of an existing webhook created with PutWebhook to register with a supported third party. '
    RetryStageExecutionOutput:
      type: object
      properties:
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The ID of the current workflow execution in the failed stage.
      description: Represents the output of a <code>RetryStageExecution</code> action.
    RetryStageExecutionInput:
      type: object
      required:
        - pipelineName
        - stageName
        - pipelineExecutionId
        - retryMode
      title: RetryStageExecutionInput
      properties:
        pipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline that contains the failed stage.
        stageName:
          $ref: '#/components/schemas/StageName'
          description: The name of the failed stage to be retried.
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The ID of the pipeline execution in the failed stage to be retried. Use the <a>GetPipelineState</a> action to retrieve the current pipelineExecutionId of the failed stage
        retryMode:
          $ref: '#/components/schemas/StageRetryMode'
          description: 'The scope of the retry attempt. Currently, the only supported value is FAILED_ACTIONS.'
      description: Represents the input of a <code>RetryStageExecution</code> action.
    ConflictException: {}
    StageNotRetryableException: {}
    NotLatestPipelineExecutionException: {}
    StartPipelineExecutionOutput:
      type: object
      properties:
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The unique system-generated ID of the pipeline execution that was started.
      description: Represents the output of a <code>StartPipelineExecution</code> action.
    StartPipelineExecutionInput:
      type: object
      required:
        - name
      title: StartPipelineExecutionInput
      properties:
        name:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline to start.
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: The system-generated unique ID used to identify a unique execution request.
      description: Represents the input of a <code>StartPipelineExecution</code> action.
    StopPipelineExecutionOutput:
      type: object
      properties:
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The unique system-generated ID of the pipeline execution that was stopped.
    StopPipelineExecutionInput:
      type: object
      required:
        - pipelineName
        - pipelineExecutionId
      title: StopPipelineExecutionInput
      properties:
        pipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline to stop.
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The ID of the pipeline execution to be stopped in the current stage. Use the <code>GetPipelineState</code> action to retrieve the current pipelineExecutionId.
        abandon:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Use this option to stop the pipeline execution by abandoning, rather than finishing, in-progress actions.</p> <note> <p>This option can lead to failed or out-of-sequence tasks.</p> </note>'
        reason:
          $ref: '#/components/schemas/StopPipelineExecutionReason'
          description: 'Use this option to enter comments, such as the reason the pipeline was stopped.'
    PipelineExecutionNotStoppableException: {}
    DuplicatedStopRequestException: {}
    TagResourceOutput:
      type: object
      properties: {}
    TagResourceInput:
      type: object
      required:
        - resourceArn
        - tags
      title: TagResourceInput
      properties:
        resourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource you want to add tags to.
        tags:
          $ref: '#/components/schemas/TagList'
          description: The tags you want to modify or add to the resource.
    UntagResourceOutput:
      type: object
      properties: {}
    UntagResourceInput:
      type: object
      required:
        - resourceArn
        - tagKeys
      title: UntagResourceInput
      properties:
        resourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: ' The Amazon Resource Name (ARN) of the resource to remove tags from.'
        tagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: The list of keys for the tags to be removed from the resource.
    UpdateActionTypeInput:
      type: object
      required:
        - actionType
      title: UpdateActionTypeInput
      properties:
        actionType:
          $ref: '#/components/schemas/ActionTypeDeclaration'
          description: The action type definition for the action type to be updated.
    RequestFailedException: {}
    UpdatePipelineOutput:
      type: object
      properties:
        pipeline:
          $ref: '#/components/schemas/PipelineDeclaration'
          description: The structure of the updated pipeline.
      description: Represents the output of an <code>UpdatePipeline</code> action.
    UpdatePipelineInput:
      type: object
      required:
        - pipeline
      title: UpdatePipelineInput
      properties:
        pipeline:
          $ref: '#/components/schemas/PipelineDeclaration'
          description: The name of the pipeline to be updated.
      description: Represents the input of an <code>UpdatePipeline</code> action.
    AWSRegionName:
      type: string
      minLength: 4
      maxLength: 30
    AccessKeyId:
      type: string
      format: password
    SecretAccessKey:
      type: string
      format: password
    SessionToken:
      type: string
      format: password
    AWSSessionCredentials:
      type: object
      required:
        - accessKeyId
        - secretAccessKey
        - sessionToken
      properties:
        accessKeyId:
          $ref: '#/components/schemas/AccessKeyId'
          description: The access key for the session.
        secretAccessKey:
          $ref: '#/components/schemas/SecretAccessKey'
          description: The secret access key for the session.
        sessionToken:
          $ref: '#/components/schemas/SessionToken'
          description: The token for the session.
      description: Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the S3 bucket used to store artifact for the pipeline in AWS CodePipeline.
    AccountId:
      type: string
      pattern: '[0-9]{12}'
    JobId:
      type: string
      pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
    Nonce:
      type: string
      minLength: 1
      maxLength: 50
    JobStatus:
      type: string
      enum:
        - Created
        - Queued
        - Dispatched
        - InProgress
        - TimedOut
        - Succeeded
        - Failed
    ThirdPartyJobId:
      type: string
      minLength: 1
      maxLength: 512
    ClientToken:
      type: string
      minLength: 1
      maxLength: 256
    ActionCategory:
      type: string
      enum:
        - Source
        - Build
        - Deploy
        - Test
        - Invoke
        - Approval
    ActionConfigurationMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ActionConfigurationValue'
    ActionConfiguration:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/ActionConfigurationMap'
          description: The configuration data for the action.
      description: Represents information about an action configuration.
    ActionConfigurationKey:
      type: string
      minLength: 1
      maxLength: 50
    ActionConfigurationValue:
      type: string
      minLength: 1
      maxLength: 1000
    Boolean:
      type: boolean
    Description:
      type: string
      minLength: 1
      maxLength: 160
    ActionConfigurationPropertyType:
      type: string
      enum:
        - String
        - Number
        - Boolean
    ActionConfigurationProperty:
      type: object
      required:
        - name
        - required
        - key
        - secret
      properties:
        name:
          $ref: '#/components/schemas/ActionConfigurationKey'
          description: The name of the action configuration property.
        required:
          $ref: '#/components/schemas/Boolean'
          description: Whether the configuration property is a required value.
        key:
          $ref: '#/components/schemas/Boolean'
          description: Whether the configuration property is a key.
        secret:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Whether the configuration property is secret. Secrets are hidden from all calls except for <code>GetJobDetails</code>, <code>GetThirdPartyJobDetails</code>, <code>PollForJobs</code>, and <code>PollForThirdPartyJobs</code>.</p> <p>When updating a pipeline, passing * * * * * without changing any other values of the action preserves the previous value of the secret.</p>'
        queryable:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Indicates that the property is used with <code>PollForJobs</code>. When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.</p> <p>If you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to other restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric characters, underscores, and hyphens.</p>'
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the action configuration property that is displayed to users.
        type:
          $ref: '#/components/schemas/ActionConfigurationPropertyType'
          description: The type of the configuration property.
      description: Represents information about an action configuration property.
    ActionConfigurationPropertyList:
      type: array
      items:
        $ref: '#/components/schemas/ActionConfigurationProperty'
      maxItems: 10
    ActionConfigurationQueryableValue:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 50
    ActionName:
      type: string
      pattern: '[A-Za-z0-9.@\-_]+'
      minLength: 1
      maxLength: 100
    ActionExecutionId:
      type: string
    ActionContext:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ActionName'
          description: The name of the action in the context of a job.
        actionExecutionId:
          $ref: '#/components/schemas/ActionExecutionId'
          description: The system-generated unique ID that corresponds to an action's execution.
      description: Represents the context of an action in the stage of a pipeline to a job worker.
    ActionTypeId:
      type: object
      required:
        - category
        - owner
        - provider
        - version
      properties:
        category:
          $ref: '#/components/schemas/ActionCategory'
          description: '<p>A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values. </p> <ul> <li> <p>Source</p> </li> <li> <p>Build</p> </li> <li> <p>Test</p> </li> <li> <p>Deploy</p> </li> <li> <p>Invoke</p> </li> <li> <p>Approval</p> </li> </ul>'
        owner:
          $ref: '#/components/schemas/ActionOwner'
          description: 'The creator of the action being called. There are three valid values for the <code>Owner</code> field in the action category section within your pipeline structure: <code>AWS</code>, <code>ThirdParty</code>, and <code>Custom</code>. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers">Valid Action Types and Providers in CodePipeline</a>.'
        provider:
          $ref: '#/components/schemas/ActionProvider'
          description: 'The provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers">Valid Action Types and Providers in CodePipeline</a>.'
        version:
          $ref: '#/components/schemas/Version'
          description: A string that describes the action version.
      description: Represents information about an action type.
    ActionRunOrder:
      type: integer
      minimum: 1
      maximum: 999
    OutputArtifactList:
      type: array
      items:
        $ref: '#/components/schemas/OutputArtifact'
    InputArtifactList:
      type: array
      items:
        $ref: '#/components/schemas/InputArtifact'
    RoleArn:
      type: string
      pattern: 'arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*'
      maxLength: 1024
    ActionNamespace:
      type: string
      pattern: '[A-Za-z0-9@\-_]+'
      minLength: 1
      maxLength: 100
    ActionDeclaration:
      type: object
      required:
        - name
        - actionTypeId
      properties:
        name:
          $ref: '#/components/schemas/ActionName'
          description: The action declaration's name.
        actionTypeId:
          $ref: '#/components/schemas/ActionTypeId'
          description: Specifies the action type and the provider of the action.
        runOrder:
          $ref: '#/components/schemas/ActionRunOrder'
          description: The order in which actions are run.
        configuration:
          $ref: '#/components/schemas/ActionConfigurationMap'
          description: '<p>The action''s configuration. These are key-value pairs that specify input values for an action. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements">Action Structure Requirements in CodePipeline</a>. For the list of configuration properties for the AWS CloudFormation action type in CodePipeline, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-action-reference.html">Configuration Properties Reference</a> in the <i>AWS CloudFormation User Guide</i>. For template snippets with examples, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-parameter-override-functions.html">Using Parameter Override Functions with CodePipeline Pipelines</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>The values can be represented in either JSON or YAML format. For example, the JSON configuration item format is as follows: </p> <p> <i>JSON:</i> </p> <p> <code>"Configuration" : { Key : Value },</code> </p>'
        outputArtifacts:
          $ref: '#/components/schemas/OutputArtifactList'
          description: 'The name or ID of the result of the action declaration, such as a test or build artifact.'
        inputArtifacts:
          $ref: '#/components/schemas/InputArtifactList'
          description: 'The name or ID of the artifact consumed by the action, such as a test or build artifact.'
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline.
        region:
          $ref: '#/components/schemas/AWSRegionName'
          description: 'The action declaration''s AWS Region, such as us-east-1.'
        namespace:
          $ref: '#/components/schemas/ActionNamespace'
          description: The variable namespace associated with the action. All variables produced as output by this action fall under this namespace.
      description: Represents information about an action declaration.
    ActionExecutionStatus:
      type: string
      enum:
        - InProgress
        - Abandoned
        - Succeeded
        - Failed
    ExecutionSummary:
      type: string
      minLength: 1
      maxLength: 2048
    Timestamp:
      type: string
      format: date-time
    ActionExecutionToken:
      type: string
    LastUpdatedBy:
      type: string
    ExecutionId:
      type: string
      minLength: 1
      maxLength: 1500
    Url:
      type: string
      minLength: 1
      maxLength: 2048
    Percentage:
      type: integer
      minimum: 0
      maximum: 100
    ErrorDetails:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code'
          description: The system ID or number code of the error.
        message:
          $ref: '#/components/schemas/Message'
          description: The text of the error message.
      description: Represents information about an error in AWS CodePipeline.
    ActionExecution:
      type: object
      properties:
        actionExecutionId:
          $ref: '#/components/schemas/ActionExecutionId'
          description: '<p>ID of the workflow action execution in the current stage. Use the <a>GetPipelineState</a> action to retrieve the current action execution details of the current stage.</p> <note> <p>For older executions, this field might be empty. The action execution ID is available for executions run on or after March 2020.</p> </note>'
        status:
          $ref: '#/components/schemas/ActionExecutionStatus'
          description: 'The status of the action, or for a completed action, the last status of the action.'
        summary:
          $ref: '#/components/schemas/ExecutionSummary'
          description: A summary of the run of the action.
        lastStatusChange:
          $ref: '#/components/schemas/Timestamp'
          description: The last status change of the action.
        token:
          $ref: '#/components/schemas/ActionExecutionToken'
          description: The system-generated token used to identify a unique approval request. The token for each open approval request can be obtained using the <code>GetPipelineState</code> command. It is used to validate that the approval request corresponding to this token is still valid.
        lastUpdatedBy:
          $ref: '#/components/schemas/LastUpdatedBy'
          description: The ARN of the user who last changed the pipeline.
        externalExecutionId:
          $ref: '#/components/schemas/ExecutionId'
          description: The external ID of the run of the action.
        externalExecutionUrl:
          $ref: '#/components/schemas/Url'
          description: 'The URL of a resource external to AWS that is used when running the action (for example, an external repository URL).'
        percentComplete:
          $ref: '#/components/schemas/Percentage'
          description: A percentage of completeness of the action as it runs.
        errorDetails:
          $ref: '#/components/schemas/ErrorDetails'
          description: The details of an error returned by a URL external to AWS.
      description: Represents information about the run of an action.
    PipelineExecutionId:
      type: string
      pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
    PipelineVersion:
      type: integer
      minimum: 1
    StageName:
      type: string
      pattern: '[A-Za-z0-9.@\-_]+'
      minLength: 1
      maxLength: 100
    ActionExecutionInput:
      type: object
      properties:
        actionTypeId:
          $ref: '#/components/schemas/ActionTypeId'
        configuration:
          $ref: '#/components/schemas/ActionConfigurationMap'
          description: Configuration data for an action execution.
        resolvedConfiguration:
          $ref: '#/components/schemas/ResolvedActionConfigurationMap'
          description: Configuration data for an action execution with all variable references replaced with their real values for the execution.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline. '
        region:
          $ref: '#/components/schemas/AWSRegionName'
          description: 'The AWS Region for the action, such as us-east-1.'
        inputArtifacts:
          $ref: '#/components/schemas/ArtifactDetailList'
          description: Details of input artifacts of the action that correspond to the action execution.
        namespace:
          $ref: '#/components/schemas/ActionNamespace'
          description: The variable namespace associated with the action. All variables produced as output by this action fall under this namespace.
      description: Input information used for an action execution.
    ActionExecutionOutput:
      type: object
      properties:
        outputArtifacts:
          $ref: '#/components/schemas/ArtifactDetailList'
          description: Details of output artifacts of the action that correspond to the action execution.
        executionResult:
          $ref: '#/components/schemas/ActionExecutionResult'
          description: Execution result information listed in the output details for an action execution.
        outputVariables:
          $ref: '#/components/schemas/OutputVariablesMap'
          description: The outputVariables field shows the key-value pairs that were output as part of that execution.
      description: 'Output details listed for an action execution, such as the action execution result.'
    ActionExecutionDetail:
      type: object
      properties:
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The pipeline execution ID for the action execution.
        actionExecutionId:
          $ref: '#/components/schemas/ActionExecutionId'
          description: The action execution ID.
        pipelineVersion:
          $ref: '#/components/schemas/PipelineVersion'
          description: The version of the pipeline where the action was run.
        stageName:
          $ref: '#/components/schemas/StageName'
          description: The name of the stage that contains the action.
        actionName:
          $ref: '#/components/schemas/ActionName'
          description: The name of the action.
        startTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start time of the action execution.
        lastUpdateTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last update time of the action execution.
        status:
          $ref: '#/components/schemas/ActionExecutionStatus'
          description: ' The status of the action execution. Status categories are <code>InProgress</code>, <code>Succeeded</code>, and <code>Failed</code>.'
        input:
          $ref: '#/components/schemas/ActionExecutionInput'
          description: 'Input details for the action execution, such as role ARN, Region, and input artifacts.'
        output:
          $ref: '#/components/schemas/ActionExecutionOutput'
          description: 'Output details for the action execution, such as the action execution result.'
      description: 'Returns information about an execution of an action, including the action execution ID, and the name, version, and timing of the action. '
    ActionExecutionDetailList:
      type: array
      items:
        $ref: '#/components/schemas/ActionExecutionDetail'
    ActionExecutionFilter:
      type: object
      properties:
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The pipeline execution ID used to filter action execution history.
      description: Filter values for the action execution.
    ResolvedActionConfigurationMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ArtifactDetailList:
      type: array
      items:
        $ref: '#/components/schemas/ArtifactDetail'
    ActionExecutionResult:
      type: object
      properties:
        externalExecutionId:
          $ref: '#/components/schemas/ExternalExecutionId'
          description: The action provider's external ID for the action execution.
        externalExecutionSummary:
          $ref: '#/components/schemas/ExternalExecutionSummary'
          description: The action provider's summary for the action execution.
        externalExecutionUrl:
          $ref: '#/components/schemas/Url'
          description: 'The deepest external link to the external resource (for example, a repository URL or deployment endpoint) that is used when running the action.'
      description: 'Execution result information, such as the external execution ID.'
    OutputVariablesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/OutputVariablesValue'
    ExternalExecutionId:
      type: string
    ExternalExecutionSummary:
      type: string
    ActionOwner:
      type: string
      enum:
        - AWS
        - ThirdParty
        - Custom
    ActionProvider:
      type: string
      pattern: '[0-9A-Za-z_-]+'
      minLength: 1
      maxLength: 35
    Revision:
      type: string
      minLength: 1
      maxLength: 1500
    RevisionChangeIdentifier:
      type: string
      minLength: 1
      maxLength: 100
    ActionRevision:
      type: object
      required:
        - revisionId
        - revisionChangeId
        - created
      properties:
        revisionId:
          $ref: '#/components/schemas/Revision'
          description: The system-generated unique ID that identifies the revision number of the action.
        revisionChangeId:
          $ref: '#/components/schemas/RevisionChangeIdentifier'
          description: 'The unique identifier of the change that set the state to this revision (for example, a deployment ID or timestamp).'
        created:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when the most recent version of the action was created, in timestamp format.'
      description: Represents information about the version (or revision) of an action.
    ActionState:
      type: object
      properties:
        actionName:
          $ref: '#/components/schemas/ActionName'
          description: The name of the action.
        currentRevision:
          $ref: '#/components/schemas/ActionRevision'
          description: Represents information about the version (or revision) of an action.
        latestExecution:
          $ref: '#/components/schemas/ActionExecution'
          description: Represents information about the run of an action.
        entityUrl:
          $ref: '#/components/schemas/Url'
          description: 'A URL link for more information about the state of the action, such as a deployment group details page.'
        revisionUrl:
          $ref: '#/components/schemas/Url'
          description: 'A URL link for more information about the revision, such as a commit details page.'
      description: Represents information about the state of an action.
    ActionStateList:
      type: array
      items:
        $ref: '#/components/schemas/ActionState'
    ActionTypeSettings:
      type: object
      properties:
        thirdPartyConfigurationUrl:
          $ref: '#/components/schemas/Url'
          description: The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
        entityUrlTemplate:
          $ref: '#/components/schemas/UrlTemplate'
          description: 'The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display in the pipeline.'
        executionUrlTemplate:
          $ref: '#/components/schemas/UrlTemplate'
          description: 'The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as the console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action.'
        revisionUrlTemplate:
          $ref: '#/components/schemas/UrlTemplate'
          description: The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
      description: Returns information about the settings for an action type.
    ArtifactDetails:
      type: object
      required:
        - minimumCount
        - maximumCount
      properties:
        minimumCount:
          $ref: '#/components/schemas/MinimumArtifactCount'
          description: The minimum number of artifacts allowed for the action type.
        maximumCount:
          $ref: '#/components/schemas/MaximumArtifactCount'
          description: The maximum number of artifacts allowed for the action type.
      description: Returns information about the details of an artifact.
    ActionType:
      type: object
      required:
        - id
        - inputArtifactDetails
        - outputArtifactDetails
      properties:
        id:
          $ref: '#/components/schemas/ActionTypeId'
          description: Represents information about an action type.
        settings:
          $ref: '#/components/schemas/ActionTypeSettings'
          description: The settings for the action type.
        actionConfigurationProperties:
          $ref: '#/components/schemas/ActionConfigurationPropertyList'
          description: The configuration properties for the action type.
        inputArtifactDetails:
          $ref: '#/components/schemas/ArtifactDetails'
          description: 'The details of the input artifact for the action, such as its commit ID.'
        outputArtifactDetails:
          $ref: '#/components/schemas/ArtifactDetails'
          description: 'The details of the output artifact of the action, such as its commit ID.'
      description: Returns information about the details of an action type.
    MinimumActionTypeArtifactCount:
      type: integer
      minimum: 0
      maximum: 10
    MaximumActionTypeArtifactCount:
      type: integer
      minimum: 0
      maximum: 10
    ActionTypeArtifactDetails:
      type: object
      required:
        - minimumCount
        - maximumCount
      properties:
        minimumCount:
          $ref: '#/components/schemas/MinimumActionTypeArtifactCount'
          description: 'The minimum number of artifacts that can be used with the action type. For example, you should specify a minimum and maximum of zero input artifacts for an action type with a category of <code>source</code>.'
        maximumCount:
          $ref: '#/components/schemas/MaximumActionTypeArtifactCount'
          description: 'The maximum number of artifacts that can be used with the actiontype. For example, you should specify a minimum and maximum of zero input artifacts for an action type with a category of <code>source</code>.'
      description: 'Information about parameters for artifacts associated with the action type, such as the minimum and maximum artifacts allowed.'
    ActionTypeDescription:
      type: string
      minLength: 1
      maxLength: 1024
    ActionTypeExecutor:
      type: object
      required:
        - configuration
        - type
      properties:
        configuration:
          $ref: '#/components/schemas/ExecutorConfiguration'
          description: The action configuration properties for the action type. These properties are specified in the action definition when the action type is created.
        type:
          $ref: '#/components/schemas/ExecutorType'
          description: 'The integration model used to create and update the action type, <code>Lambda</code> or <code>JobWorker</code>. '
        policyStatementsTemplate:
          $ref: '#/components/schemas/PolicyStatementsTemplate'
          description: '<p>The policy statement that specifies the permissions in the CodePipeline customer’s account that are needed to successfully run an action.</p> <p>To grant permission to another account, specify the account ID as the Principal, a domain-style identifier defined by the service, for example <code>codepipeline.amazonaws.com</code>.</p> <note> <p>The size of the passed JSON policy document cannot exceed 2048 characters.</p> </note>'
        jobTimeout:
          $ref: '#/components/schemas/JobTimeout'
          description: 'The timeout in seconds for the job. An action execution can have multiple jobs. This is the timeout for a single job, not the entire action execution.'
      description: 'The action engine, or executor, for an action type created for a provider, where the action is to be used by customers of the provider. The action engine is associated with the model used to create and update the action, such as the Lambda integration model.'
    ActionTypeIdentifier:
      type: object
      required:
        - category
        - owner
        - provider
        - version
      properties:
        category:
          $ref: '#/components/schemas/ActionCategory'
          description: '<p>Defines what kind of action can be taken in the stage, one of the following:</p> <ul> <li> <p> <code>Source</code> </p> </li> <li> <p> <code>Build</code> </p> </li> <li> <p> <code>Test</code> </p> </li> <li> <p> <code>Deploy</code> </p> </li> <li> <p> <code>Approval</code> </p> </li> <li> <p> <code>Invoke</code> </p> </li> </ul>'
        owner:
          $ref: '#/components/schemas/ActionTypeOwner'
          description: 'The creator of the action type being called: <code>AWS</code> or <code>ThirdParty</code>.'
        provider:
          $ref: '#/components/schemas/ActionProvider'
          description: The provider of the action type being called. The provider name is supplied when the action type is created.
        version:
          $ref: '#/components/schemas/Version'
          description: A string that describes the action type version.
      description: 'Specifies the category, owner, provider, and version of the action type.'
    ActionTypePermissions:
      type: object
      required:
        - allowedAccounts
      properties:
        allowedAccounts:
          $ref: '#/components/schemas/AllowedAccounts'
          description: A list of AWS account IDs with access to use the action type in their pipelines.
      description: Details identifying the users with permissions to use the action type.
    ActionTypeUrls:
      type: object
      properties:
        configurationUrl:
          $ref: '#/components/schemas/Url'
          description: The URL returned to the CodePipeline console that contains a link to the page where customers can configure the external action.
        entityUrlTemplate:
          $ref: '#/components/schemas/UrlTemplate'
          description: 'The URL returned to the CodePipeline console that provides a deep link to the resources of the external system, such as a status page. This link is provided as part of the action display in the pipeline.'
        executionUrlTemplate:
          $ref: '#/components/schemas/UrlTemplate'
          description: 'The link to an execution page for the action type in progress. For example, for a CodeDeploy action, this link is shown on the pipeline view page in the CodePipeline console, and it links to a CodeDeploy status page.'
        revisionUrlTemplate:
          $ref: '#/components/schemas/UrlTemplate'
          description: The URL returned to the CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
      description: 'Returns information about URLs for web pages that display to customers as links on the pipeline view, such as an external configuration page for the action type.'
    ActionTypeDeclaration:
      type: object
      required:
        - executor
        - id
        - inputArtifactDetails
        - outputArtifactDetails
      properties:
        description:
          $ref: '#/components/schemas/ActionTypeDescription'
          description: The description for the action type to be updated.
        executor:
          $ref: '#/components/schemas/ActionTypeExecutor'
          description: Information about the executor for an action type that was created with any supported integration model.
        id:
          $ref: '#/components/schemas/ActionTypeIdentifier'
          description: 'The action category, owner, provider, and version of the action type to be updated.'
        inputArtifactDetails:
          $ref: '#/components/schemas/ActionTypeArtifactDetails'
          description: 'Details for the artifacts, such as application files, to be worked on by the action. For example, the minimum and maximum number of input artifacts allowed.'
        outputArtifactDetails:
          $ref: '#/components/schemas/ActionTypeArtifactDetails'
          description: 'Details for the output artifacts, such as a built application, that are the result of the action. For example, the minimum and maximum number of output artifacts allowed.'
        permissions:
          $ref: '#/components/schemas/ActionTypePermissions'
          description: Details identifying the accounts with permissions to use the action type.
        properties:
          description: The properties of the action type to be updated.
        urls:
          $ref: '#/components/schemas/ActionTypeUrls'
          description: The links associated with the action type to be updated.
      description: The parameters for the action type definition that are provided when the action type is created or updated.
    ExecutorConfiguration:
      type: object
      properties:
        lambdaExecutorConfiguration:
          $ref: '#/components/schemas/LambdaExecutorConfiguration'
          description: Details about the <code>Lambda</code> executor of the action type.
        jobWorkerExecutorConfiguration:
          $ref: '#/components/schemas/JobWorkerExecutorConfiguration'
          description: Details about the <code>JobWorker</code> executor of the action type.
      description: 'The action engine, or executor, related to the supported integration model used to create and update the action type. The available executor types are <code>Lambda</code> and <code>JobWorker</code>.'
    ExecutorType:
      type: string
      enum:
        - JobWorker
        - Lambda
    PolicyStatementsTemplate:
      type: string
      minLength: 1
      maxLength: 2048
    JobTimeout:
      type: integer
      minimum: 60
      maximum: 43200
    Version:
      type: string
      pattern: '[0-9A-Za-z_-]+'
      minLength: 1
      maxLength: 9
    ActionTypeOwner:
      type: string
      pattern: AWS|ThirdParty
    ActionTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ActionType'
    AllowedAccounts:
      type: array
      items:
        $ref: '#/components/schemas/AllowedAccount'
      minItems: 1
      maxItems: 1000
    ActionTypeProperty:
      type: object
      required:
        - name
        - optional
        - key
        - noEcho
      properties:
        name:
          $ref: '#/components/schemas/ActionConfigurationKey'
          description: The property name that is displayed to users.
        optional:
          $ref: '#/components/schemas/Boolean'
          description: Whether the configuration property is an optional value.
        key:
          $ref: '#/components/schemas/Boolean'
          description: Whether the configuration property is a key.
        noEcho:
          $ref: '#/components/schemas/Boolean'
          description: 'Whether to omit the field value entered by the customer in the log. If <code>true</code>, the value is not saved in CloudTrail logs for the action execution.'
        queryable:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates that the property is used with polling. An action type can have up to one queryable property. If it has one, that property must be both required and not secret.'
        description:
          $ref: '#/components/schemas/PropertyDescription'
          description: The description of the property that is displayed to users.
      description: 'Represents information about each property specified in the action configuration, such as the description and key name that display for the customer using the action type.'
    ActionTypeProperties:
      type: array
      items:
        $ref: '#/components/schemas/ActionTypeProperty'
      maxItems: 10
    PropertyDescription:
      type: string
      minLength: 1
      maxLength: 250
    UrlTemplate:
      type: string
      minLength: 1
      maxLength: 2048
    AllowedAccount:
      type: string
      pattern: '[0-9]{12}|\*'
    ApprovalSummary:
      type: string
      minLength: 0
      maxLength: 512
    ApprovalStatus:
      type: string
      enum:
        - Approved
        - Rejected
    ApprovalResult:
      type: object
      required:
        - summary
        - status
      properties:
        summary:
          $ref: '#/components/schemas/ApprovalSummary'
          description: The summary of the current status of the approval request.
        status:
          $ref: '#/components/schemas/ApprovalStatus'
          description: The response submitted by a reviewer assigned to an approval action request.
      description: Represents information about the result of an approval request.
    ApprovalToken:
      type: string
      pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
    ArtifactName:
      type: string
      pattern: '[a-zA-Z0-9_\-]+'
      minLength: 1
      maxLength: 100
    ArtifactLocation:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ArtifactLocationType'
          description: The type of artifact in the location.
        s3Location:
          $ref: '#/components/schemas/S3ArtifactLocation'
          description: The S3 bucket that contains the artifact.
      description: Represents information about the location of an artifact.
    Artifact:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ArtifactName'
          description: The artifact's name.
        revision:
          $ref: '#/components/schemas/Revision'
          description: 'The artifact''s revision ID. Depending on the type of object, this could be a commit ID (GitHub) or a revision ID (Amazon S3).'
        location:
          $ref: '#/components/schemas/ArtifactLocation'
          description: The location of an artifact.
      description: Represents information about an artifact that is worked on by actions in the pipeline.
    S3Location:
      type: object
      properties:
        bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: The Amazon S3 artifact bucket for an action's artifacts.
        key:
          $ref: '#/components/schemas/S3Key'
          description: The artifact name.
      description: The Amazon S3 artifact location for an action's artifacts.
    ArtifactDetail:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ArtifactName'
          description: The artifact object name for the action execution.
        s3location:
          $ref: '#/components/schemas/S3Location'
          description: The Amazon S3 artifact location for the action execution.
      description: 'Artifact details for the action execution, such as the artifact location.'
    MinimumArtifactCount:
      type: integer
      minimum: 0
      maximum: 5
    MaximumArtifactCount:
      type: integer
      minimum: 0
      maximum: 5
    ArtifactList:
      type: array
      items:
        $ref: '#/components/schemas/Artifact'
    ArtifactLocationType:
      type: string
      enum:
        - S3
    S3ArtifactLocation:
      type: object
      required:
        - bucketName
        - objectKey
      properties:
        bucketName:
          $ref: '#/components/schemas/S3BucketName'
          description: The name of the S3 bucket.
        objectKey:
          $ref: '#/components/schemas/S3ObjectKey'
          description: 'The key of the object in the S3 bucket, which uniquely identifies the object in the bucket.'
      description: The location of the S3 bucket that contains a revision.
    RevisionSummary:
      type: string
      minLength: 1
      maxLength: 2048
    ArtifactRevision:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ArtifactName'
          description: 'The name of an artifact. This name might be system-generated, such as "MyApp", or defined by the user when an action is created.'
        revisionId:
          $ref: '#/components/schemas/Revision'
          description: The revision ID of the artifact.
        revisionChangeIdentifier:
          $ref: '#/components/schemas/RevisionChangeIdentifier'
          description: 'An additional identifier for a revision, such as a commit date or, for artifacts stored in Amazon S3 buckets, the ETag value.'
        revisionSummary:
          $ref: '#/components/schemas/RevisionSummary'
          description: 'Summary information about the most recent revision of the artifact. For GitHub and AWS CodeCommit repositories, the commit message. For Amazon S3 buckets or actions, the user-provided content of a <code>codepipeline-artifact-revision-summary</code> key specified in the object metadata.'
        created:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when the most recent revision of the artifact was created, in timestamp format.'
        revisionUrl:
          $ref: '#/components/schemas/Url'
          description: 'The commit ID for the artifact revision. For artifacts stored in GitHub or AWS CodeCommit repositories, the commit ID is linked to a commit details page.'
      description: 'Represents revision details of an artifact. '
    ArtifactRevisionList:
      type: array
      items:
        $ref: '#/components/schemas/ArtifactRevision'
    ArtifactStoreType:
      type: string
      enum:
        - S3
    ArtifactStoreLocation:
      type: string
      pattern: '[a-zA-Z0-9\-\.]+'
      minLength: 3
      maxLength: 63
    EncryptionKey:
      type: object
      required:
        - id
        - type
      properties:
        id:
          $ref: '#/components/schemas/EncryptionKeyId'
          description: '<p>The ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.</p> <note> <p>Aliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.</p> </note>'
        type:
          $ref: '#/components/schemas/EncryptionKeyType'
          description: 'The type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ''KMS''.'
      description: 'Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key.'
    ArtifactStore:
      type: object
      required:
        - type
        - location
      properties:
        type:
          $ref: '#/components/schemas/ArtifactStoreType'
          description: 'The type of the artifact store, such as S3.'
        location:
          $ref: '#/components/schemas/ArtifactStoreLocation'
          description: The S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.
        encryptionKey:
          $ref: '#/components/schemas/EncryptionKey'
          description: 'The encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.'
      description: '<p>The S3 bucket where artifacts for the pipeline are stored.</p> <note> <p>You must include either <code>artifactStore</code> or <code>artifactStores</code> in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use <code>artifactStores</code>.</p> </note>'
    ArtifactStoreMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ArtifactStore'
    BlockerName:
      type: string
      minLength: 1
      maxLength: 100
    BlockerType:
      type: string
      enum:
        - Schedule
    BlockerDeclaration:
      type: object
      required:
        - name
        - type
      properties:
        name:
          $ref: '#/components/schemas/BlockerName'
          description: Reserved for future use.
        type:
          $ref: '#/components/schemas/BlockerType'
          description: Reserved for future use.
      description: Reserved for future use.
    ClientId:
      type: string
      pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
    ClientRequestToken:
      type: string
      pattern: '^[a-zA-Z0-9-]+$'
      minLength: 1
      maxLength: 128
    Code:
      type: string
    ContinuationToken:
      type: string
      minLength: 1
      maxLength: 2048
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    PipelineDeclaration:
      type: object
      required:
        - name
        - roleArn
        - stages
      properties:
        name:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform actions with no <code>actionRoleArn</code>, or to use to assume roles for actions with an <code>actionRoleArn</code>.'
        artifactStore:
          $ref: '#/components/schemas/ArtifactStore'
          description: '<p>Represents information about the S3 bucket where artifacts are stored for the pipeline.</p> <note> <p>You must include either <code>artifactStore</code> or <code>artifactStores</code> in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use <code>artifactStores</code>.</p> </note>'
        artifactStores:
          $ref: '#/components/schemas/ArtifactStoreMap'
          description: '<p>A mapping of <code>artifactStore</code> objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.</p> <note> <p>You must include either <code>artifactStore</code> or <code>artifactStores</code> in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use <code>artifactStores</code>.</p> </note>'
        stages:
          $ref: '#/components/schemas/PipelineStageDeclarationList'
          description: The stage in which to perform the action.
        version:
          $ref: '#/components/schemas/PipelineVersion'
          description: The version number of the pipeline. A new pipeline always has a version number of 1. This number is incremented when a pipeline is updated.
      description: Represents the structure of actions and stages to be performed in the pipeline.
    Time:
      type: string
      format: date-time
    CurrentRevision:
      type: object
      required:
        - revision
        - changeIdentifier
      properties:
        revision:
          $ref: '#/components/schemas/Revision'
          description: The revision ID of the current version of an artifact.
        changeIdentifier:
          $ref: '#/components/schemas/RevisionChangeIdentifier'
          description: The change identifier for the current revision.
        created:
          $ref: '#/components/schemas/Time'
          description: 'The date and time when the most recent revision of the artifact was created, in timestamp format.'
        revisionSummary:
          $ref: '#/components/schemas/RevisionSummary'
          description: The summary of the most recent revision of the artifact.
      description: Represents information about a current revision.
    PipelineName:
      type: string
      pattern: '[A-Za-z0-9.@\-_]+'
      minLength: 1
      maxLength: 100
    WebhookName:
      type: string
      pattern: '[A-Za-z0-9.@\-_]+'
      minLength: 1
      maxLength: 100
    StageTransitionType:
      type: string
      enum:
        - Inbound
        - Outbound
    DisabledReason:
      type: string
      pattern: '[a-zA-Z0-9!@ \(\)\.\*\?\-]+'
      minLength: 1
      maxLength: 300
    Enabled:
      type: boolean
    EncryptionKeyId:
      type: string
      minLength: 1
      maxLength: 400
    EncryptionKeyType:
      type: string
      enum:
        - KMS
    Message:
      type: string
      minLength: 1
      maxLength: 5000
    ExecutionDetails:
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/ExecutionSummary'
          description: The summary of the current status of the actions.
        externalExecutionId:
          $ref: '#/components/schemas/ExecutionId'
          description: 'The system-generated unique ID of this action used to identify this job worker in any external systems, such as AWS CodeDeploy.'
        percentComplete:
          $ref: '#/components/schemas/Percentage'
          description: 'The percentage of work completed on the action, represented on a scale of 0 to 100 percent.'
      description: The details of the actions taken and results produced on an artifact as it passes through stages in the pipeline.
    TriggerType:
      type: string
      enum:
        - CreatePipeline
        - StartPipelineExecution
        - PollForSourceChanges
        - Webhook
        - CloudWatchEvent
        - PutActionRevision
    TriggerDetail:
      type: string
      minLength: 0
      maxLength: 1024
    ExecutionTrigger:
      type: object
      properties:
        triggerType:
          $ref: '#/components/schemas/TriggerType'
          description: 'The type of change-detection method, command, or user interaction that started a pipeline execution.'
        triggerDetail:
          $ref: '#/components/schemas/TriggerDetail'
          description: 'Detail related to the event that started a pipeline execution, such as the webhook ARN of the webhook that triggered the pipeline execution or the user ARN for a user-initiated <code>start-pipeline-execution</code> CLI command.'
      description: The interaction or event that started a pipeline execution.
    LambdaExecutorConfiguration:
      type: object
      required:
        - lambdaFunctionArn
      properties:
        lambdaFunctionArn:
          $ref: '#/components/schemas/LambdaFunctionArn'
          description: The ARN of the Lambda function used by the action engine.
      description: 'Details about the configuration for the <code>Lambda</code> action engine, or executor.'
    JobWorkerExecutorConfiguration:
      type: object
      properties:
        pollingAccounts:
          $ref: '#/components/schemas/PollingAccountList'
          description: The accounts in which the job worker is configured and might poll for jobs as part of the action execution.
        pollingServicePrincipals:
          $ref: '#/components/schemas/PollingServicePrincipalList'
          description: The service Principals in which the job worker is configured and might poll for jobs as part of the action execution.
      description: 'Details about the polling configuration for the <code>JobWorker</code> action engine, or executor.'
    FailureType:
      type: string
      enum:
        - JobFailed
        - ConfigurationError
        - PermissionError
        - RevisionOutOfSync
        - RevisionUnavailable
        - SystemUnavailable
    FailureDetails:
      type: object
      required:
        - type
        - message
      properties:
        type:
          $ref: '#/components/schemas/FailureType'
          description: The type of the failure.
        message:
          $ref: '#/components/schemas/Message'
          description: The message about the failure.
        externalExecutionId:
          $ref: '#/components/schemas/ExecutionId'
          description: The external ID of the run of the action that failed.
      description: Represents information about failure details.
    JobDetails:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/JobId'
          description: The unique system-generated ID of the job.
        data:
          $ref: '#/components/schemas/JobData'
          description: 'Represents other information about a job required for a job worker to complete the job. '
        accountId:
          $ref: '#/components/schemas/AccountId'
          description: The AWS account ID associated with the job.
      description: Represents information about the details of a job.
    PipelineExecution:
      type: object
      properties:
        pipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline with the specified pipeline execution.
        pipelineVersion:
          $ref: '#/components/schemas/PipelineVersion'
          description: The version number of the pipeline with the specified pipeline execution.
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The ID of the pipeline execution.
        status:
          $ref: '#/components/schemas/PipelineExecutionStatus'
          description: '<p>The status of the pipeline execution.</p> <ul> <li> <p>Cancelled: The pipeline’s definition was updated before the pipeline execution could be completed.</p> </li> <li> <p>InProgress: The pipeline execution is currently running.</p> </li> <li> <p>Stopped: The pipeline execution was manually stopped. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-executions-stopped">Stopped Executions</a>.</p> </li> <li> <p>Stopping: The pipeline execution received a request to be manually stopped. Depending on the selected stop mode, the execution is either completing or abandoning in-progress actions. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-executions-stopped">Stopped Executions</a>.</p> </li> <li> <p>Succeeded: The pipeline execution was completed successfully. </p> </li> <li> <p>Superseded: While this pipeline execution was waiting for the next stage to be completed, a newer pipeline execution advanced and continued through the pipeline instead. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-superseded">Superseded Executions</a>.</p> </li> <li> <p>Failed: The pipeline execution was not completed successfully.</p> </li> </ul>'
        statusSummary:
          $ref: '#/components/schemas/PipelineExecutionStatusSummary'
          description: A summary that contains a description of the pipeline execution status.
        artifactRevisions:
          $ref: '#/components/schemas/ArtifactRevisionList'
          description: A list of <code>ArtifactRevision</code> objects included in a pipeline execution.
      description: Represents information about an execution of a pipeline.
    PipelineMetadata:
      type: object
      properties:
        pipelineArn:
          $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the pipeline.
        created:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time the pipeline was created, in timestamp format.'
        updated:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time the pipeline was last updated, in timestamp format.'
      description: Information about a pipeline.
    StageStateList:
      type: array
      items:
        $ref: '#/components/schemas/StageState'
    ThirdPartyJobDetails:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ThirdPartyJobId'
          description: The identifier used to identify the job details in AWS CodePipeline.
        data:
          $ref: '#/components/schemas/ThirdPartyJobData'
          description: The data to be returned by the third party job worker.
        nonce:
          $ref: '#/components/schemas/Nonce'
          description: A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Use this number in an <a>AcknowledgeThirdPartyJob</a> request.
      description: The details of a job sent in response to a <code>GetThirdPartyJobDetails</code> request.
    InputArtifact:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/ArtifactName'
          description: '<p>The name of the artifact to be worked on (for example, "My App").</p> <p>The input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.</p>'
      description: 'Represents information about an artifact to be worked on, such as a test or build artifact.'
    JobData:
      type: object
      properties:
        actionTypeId:
          $ref: '#/components/schemas/ActionTypeId'
          description: Represents information about an action type.
        actionConfiguration:
          $ref: '#/components/schemas/ActionConfiguration'
          description: Represents information about an action configuration.
        pipelineContext:
          $ref: '#/components/schemas/PipelineContext'
          description: <p>Represents information about a pipeline to a job worker.</p> <note> <p>Includes <code>pipelineArn</code> and <code>pipelineExecutionId</code> for custom jobs.</p> </note>
        inputArtifacts:
          $ref: '#/components/schemas/ArtifactList'
          description: The artifact supplied to the job.
        outputArtifacts:
          $ref: '#/components/schemas/ArtifactList'
          description: The output of the job.
        artifactCredentials:
          $ref: '#/components/schemas/AWSSessionCredentials'
          description: Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the S3 bucket used to store artifacts for the pipeline in AWS CodePipeline.
        continuationToken:
          $ref: '#/components/schemas/ContinuationToken'
          description: 'A system-generated token, such as a AWS CodeDeploy deployment ID, required by a job to continue the job asynchronously.'
        encryptionKey:
          $ref: '#/components/schemas/EncryptionKey'
          description: 'Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. '
      description: Represents other information about a job required for a job worker to complete the job.
    Job:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/JobId'
          description: The unique system-generated ID of the job.
        data:
          $ref: '#/components/schemas/JobData'
          description: Other data about a job.
        nonce:
          $ref: '#/components/schemas/Nonce'
          description: A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Use this number in an <a>AcknowledgeJob</a> request.
        accountId:
          $ref: '#/components/schemas/AccountId'
          description: The ID of the AWS account to use when performing the job.
      description: Represents information about a job.
    PipelineContext:
      type: object
      properties:
        pipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline. This is a user-specified value. Pipeline names must be unique across all pipeline names under an Amazon Web Services account.
        stage:
          $ref: '#/components/schemas/StageContext'
          description: The stage of the pipeline.
        action:
          $ref: '#/components/schemas/ActionContext'
          description: The context of an action to a job worker in the stage of a pipeline.
        pipelineArn:
          $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the pipeline.
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The execution ID of the pipeline.
      description: <p>Represents information about a pipeline to a job worker.</p> <note> <p>PipelineContext contains <code>pipelineArn</code> and <code>pipelineExecutionId</code> for custom action jobs. The <code>pipelineArn</code> and <code>pipelineExecutionId</code> fields are not populated for ThirdParty action jobs.</p> </note>
    JobList:
      type: array
      items:
        $ref: '#/components/schemas/Job'
    PollingAccountList:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
      minItems: 1
      maxItems: 1000
    PollingServicePrincipalList:
      type: array
      items:
        $ref: '#/components/schemas/ServicePrincipal'
      minItems: 1
      maxItems: 10
    JsonPath:
      type: string
      minLength: 1
      maxLength: 150
    LambdaFunctionArn:
      type: string
      pattern: 'arn:aws(-[\w]+)*:lambda:.+:[0-9]{12}:function:.+'
      minLength: 1
      maxLength: 140
    LastChangedAt:
      type: string
      format: date-time
    LastChangedBy:
      type: string
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      minLength: 1
      maxLength: 2048
    PipelineExecutionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PipelineExecutionSummary'
    MaxPipelines:
      type: integer
      minimum: 1
      maximum: 1000
    PipelineList:
      type: array
      items:
        $ref: '#/components/schemas/PipelineSummary'
    ResourceArn:
      type: string
      pattern: 'arn:aws(-[\w]+)*:codepipeline:.+:[0-9]{12}:.+'
    WebhookDefinition:
      type: object
      required:
        - name
        - targetPipeline
        - targetAction
        - filters
        - authentication
        - authenticationConfiguration
      properties:
        name:
          $ref: '#/components/schemas/WebhookName'
          description: The name of the webhook.
        targetPipeline:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline you want to connect to the webhook.
        targetAction:
          $ref: '#/components/schemas/ActionName'
          description: The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
        filters:
          $ref: '#/components/schemas/WebhookFilters'
          description: A list of rules applied to the body/payload sent in the POST request to a webhook URL. All defined rules must pass for the request to be accepted and the pipeline started.
        authentication:
          $ref: '#/components/schemas/WebhookAuthenticationType'
          description: '<p>Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.</p> <ul> <li> <p>For information about the authentication scheme implemented by GITHUB_HMAC, see <a href="https://developer.github.com/webhooks/securing/">Securing your webhooks</a> on the GitHub Developer website.</p> </li> <li> <p> IP rejects webhooks trigger requests unless they originate from an IP address in the IP range whitelisted in the authentication configuration.</p> </li> <li> <p> UNAUTHENTICATED accepts all webhook trigger requests regardless of origin.</p> </li> </ul>'
        authenticationConfiguration:
          $ref: '#/components/schemas/WebhookAuthConfiguration'
          description: 'Properties that configure the authentication applied to incoming webhook trigger requests. The required properties depend on the authentication type. For GITHUB_HMAC, only the <code>SecretToken </code>property must be set. For IP, only the <code>AllowedIPRange </code>property must be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.'
      description: Represents information about a webhook and its definition.
    WebhookUrl:
      type: string
      minLength: 1
      maxLength: 1000
    WebhookErrorMessage:
      type: string
    WebhookErrorCode:
      type: string
    WebhookLastTriggered:
      type: string
      format: date-time
    WebhookArn:
      type: string
    ListWebhookItem:
      type: object
      required:
        - definition
        - url
      properties:
        definition:
          $ref: '#/components/schemas/WebhookDefinition'
          description: 'The detail returned for each webhook, such as the webhook authentication type and filter rules.'
        url:
          $ref: '#/components/schemas/WebhookUrl'
          description: 'A unique URL generated by CodePipeline. When a POST request is made to this URL, the defined pipeline is started as long as the body of the post request satisfies the defined authentication and filtering conditions. Deleting and re-creating a webhook makes the old URL invalid and generates a new one.'
        errorMessage:
          $ref: '#/components/schemas/WebhookErrorMessage'
          description: The text of the error message about the webhook.
        errorCode:
          $ref: '#/components/schemas/WebhookErrorCode'
          description: The number code of the error.
        lastTriggered:
          $ref: '#/components/schemas/WebhookLastTriggered'
          description: 'The date and time a webhook was last successfully triggered, in timestamp format.'
        arn:
          $ref: '#/components/schemas/WebhookArn'
          description: The Amazon Resource Name (ARN) of the webhook.
        tags:
          $ref: '#/components/schemas/TagList'
          description: Specifies the tags applied to the webhook.
      description: 'The detail returned for each webhook after listing webhooks, such as the webhook URL, the webhook name, and the webhook ARN.'
    WebhookList:
      type: array
      items:
        $ref: '#/components/schemas/ListWebhookItem'
    MatchEquals:
      type: string
      minLength: 1
      maxLength: 150
    MaxBatchSize:
      type: integer
      minimum: 1
    OutputArtifact:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/ArtifactName'
          description: '<p>The name of the output of an artifact, such as "My App".</p> <p>The input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.</p> <p>Output artifact names must be unique within a pipeline.</p>'
      description: Represents information about the output of an action.
    OutputVariablesKey:
      type: string
      pattern: '[A-Za-z0-9@\-_]+'
    OutputVariablesValue:
      type: string
    PipelineArn:
      type: string
      pattern: 'arn:aws(-[\w]+)*:codepipeline:.+:[0-9]{12}:.+'
    StageContext:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/StageName'
          description: The name of the stage.
      description: Represents information about a stage to a job worker.
    PipelineStageDeclarationList:
      type: array
      items:
        $ref: '#/components/schemas/StageDeclaration'
    PipelineExecutionStatus:
      type: string
      enum:
        - Cancelled
        - InProgress
        - Stopped
        - Stopping
        - Succeeded
        - Superseded
        - Failed
    PipelineExecutionStatusSummary:
      type: string
    SourceRevisionList:
      type: array
      items:
        $ref: '#/components/schemas/SourceRevision'
    StopExecutionTrigger:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/StopPipelineExecutionReason'
          description: The user-specified reason the pipeline was stopped.
      description: The interaction that stopped a pipeline execution.
    PipelineExecutionSummary:
      type: object
      properties:
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The ID of the pipeline execution.
        status:
          $ref: '#/components/schemas/PipelineExecutionStatus'
          description: '<p>The status of the pipeline execution.</p> <ul> <li> <p>InProgress: The pipeline execution is currently running.</p> </li> <li> <p>Stopped: The pipeline execution was manually stopped. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-executions-stopped">Stopped Executions</a>.</p> </li> <li> <p>Stopping: The pipeline execution received a request to be manually stopped. Depending on the selected stop mode, the execution is either completing or abandoning in-progress actions. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-executions-stopped">Stopped Executions</a>.</p> </li> <li> <p>Succeeded: The pipeline execution was completed successfully. </p> </li> <li> <p>Superseded: While this pipeline execution was waiting for the next stage to be completed, a newer pipeline execution advanced and continued through the pipeline instead. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-superseded">Superseded Executions</a>.</p> </li> <li> <p>Failed: The pipeline execution was not completed successfully.</p> </li> </ul>'
        startTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when the pipeline execution began, in timestamp format.'
        lastUpdateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time of the last change to the pipeline execution, in timestamp format.'
        sourceRevisions:
          $ref: '#/components/schemas/SourceRevisionList'
          description: A list of the source artifact revisions that initiated a pipeline execution.
        trigger:
          $ref: '#/components/schemas/ExecutionTrigger'
          description: 'The interaction or event that started a pipeline execution, such as automated change detection or a <code>StartPipelineExecution</code> API call.'
        stopTrigger:
          $ref: '#/components/schemas/StopExecutionTrigger'
          description: The interaction that stopped a pipeline execution.
      description: Summary information about a pipeline execution.
    PipelineSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline.
        version:
          $ref: '#/components/schemas/PipelineVersion'
          description: The version number of the pipeline.
        created:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time the pipeline was created, in timestamp format.'
        updated:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time of the last update to the pipeline, in timestamp format.'
      description: Returns a summary of a pipeline.
    StageDeclaration:
      type: object
      required:
        - name
        - actions
      properties:
        name:
          $ref: '#/components/schemas/StageName'
          description: The name of the stage.
        blockers:
          $ref: '#/components/schemas/StageBlockerDeclarationList'
          description: Reserved for future use.
        actions:
          $ref: '#/components/schemas/StageActionDeclarationList'
          description: The actions included in a stage.
      description: Represents information about a stage and its definition.
    QueryParamMap:
      type: object
      minProperties: 0
      maxProperties: 1
      additionalProperties:
        $ref: '#/components/schemas/ActionConfigurationQueryableValue'
    ThirdPartyJobList:
      type: array
      items:
        $ref: '#/components/schemas/ThirdPartyJob'
    ServicePrincipal:
      type: string
      minLength: 1
      maxLength: 128
    String:
      type: string
    StageRetryMode:
      type: string
      enum:
        - FAILED_ACTIONS
    S3BucketName:
      type: string
    S3ObjectKey:
      type: string
    S3Bucket:
      type: string
      minLength: 3
      maxLength: 63
    S3Key:
      type: string
      minLength: 1
      maxLength: 100
    SourceRevision:
      type: object
      required:
        - actionName
      properties:
        actionName:
          $ref: '#/components/schemas/ActionName'
          description: The name of the action that processed the revision to the source artifact.
        revisionId:
          $ref: '#/components/schemas/Revision'
          description: The system-generated unique ID that identifies the revision number of the artifact.
        revisionSummary:
          $ref: '#/components/schemas/RevisionSummary'
          description: 'Summary information about the most recent revision of the artifact. For GitHub and AWS CodeCommit repositories, the commit message. For Amazon S3 buckets or actions, the user-provided content of a <code>codepipeline-artifact-revision-summary</code> key specified in the object metadata.'
        revisionUrl:
          $ref: '#/components/schemas/Url'
          description: 'The commit ID for the artifact revision. For artifacts stored in GitHub or AWS CodeCommit repositories, the commit ID is linked to a commit details page.'
      description: Information about the version (or revision) of a source artifact that initiated a pipeline execution.
    StageActionDeclarationList:
      type: array
      items:
        $ref: '#/components/schemas/ActionDeclaration'
    StageBlockerDeclarationList:
      type: array
      items:
        $ref: '#/components/schemas/BlockerDeclaration'
    StageExecutionStatus:
      type: string
      enum:
        - Cancelled
        - InProgress
        - Failed
        - Stopped
        - Stopping
        - Succeeded
    StageExecution:
      type: object
      required:
        - pipelineExecutionId
        - status
      properties:
        pipelineExecutionId:
          $ref: '#/components/schemas/PipelineExecutionId'
          description: The ID of the pipeline execution associated with the stage.
        status:
          $ref: '#/components/schemas/StageExecutionStatus'
          description: '<p>The status of the stage, or for a completed stage, the last status of the stage.</p> <note> <p>A status of cancelled means that the pipeline’s definition was updated before the stage execution could be completed.</p> </note>'
      description: Represents information about the run of a stage.
    TransitionState:
      type: object
      properties:
        enabled:
          $ref: '#/components/schemas/Enabled'
          description: Whether the transition between stages is enabled (true) or disabled (false).
        lastChangedBy:
          $ref: '#/components/schemas/LastChangedBy'
          description: The ID of the user who last changed the transition state.
        lastChangedAt:
          $ref: '#/components/schemas/LastChangedAt'
          description: The timestamp when the transition state was last changed.
        disabledReason:
          $ref: '#/components/schemas/DisabledReason'
          description: The user-specified reason why the transition between two stages of a pipeline was disabled.
      description: Represents information about the state of transitions between one stage and another stage.
    StageState:
      type: object
      properties:
        stageName:
          $ref: '#/components/schemas/StageName'
          description: The name of the stage.
        inboundExecution:
          $ref: '#/components/schemas/StageExecution'
        inboundTransitionState:
          $ref: '#/components/schemas/TransitionState'
          description: 'The state of the inbound transition, which is either enabled or disabled.'
        actionStates:
          $ref: '#/components/schemas/ActionStateList'
          description: The state of the stage.
        latestExecution:
          $ref: '#/components/schemas/StageExecution'
          description: 'Information about the latest execution in the stage, including its ID and status.'
      description: Represents information about the state of the stage.
    StopPipelineExecutionReason:
      type: string
      maxLength: 200
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: '#/components/schemas/TagKey'
          description: The tag's key.
        value:
          $ref: '#/components/schemas/TagValue'
          description: The tag's value.
      description: A tag is a key-value pair that is used to manage the resource.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    ThirdPartyJob:
      type: object
      properties:
        clientId:
          $ref: '#/components/schemas/ClientId'
          description: The <code>clientToken</code> portion of the <code>clientId</code> and <code>clientToken</code> pair used to verify that the calling entity is allowed access to the job and its details.
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier used to identify the job in AWS CodePipeline.
      description: A response to a <code>PollForThirdPartyJobs</code> request returned by AWS CodePipeline when there is a job to be worked on by a partner action.
    ThirdPartyJobData:
      type: object
      properties:
        actionTypeId:
          $ref: '#/components/schemas/ActionTypeId'
          description: Represents information about an action type.
        actionConfiguration:
          $ref: '#/components/schemas/ActionConfiguration'
          description: Represents information about an action configuration.
        pipelineContext:
          $ref: '#/components/schemas/PipelineContext'
          description: <p>Represents information about a pipeline to a job worker.</p> <note> <p>Does not include <code>pipelineArn</code> and <code>pipelineExecutionId</code> for ThirdParty jobs.</p> </note>
        inputArtifacts:
          $ref: '#/components/schemas/ArtifactList'
          description: 'The name of the artifact that is worked on by the action, if any. This name might be system-generated, such as "MyApp", or it might be defined by the user when the action is created. The input artifact name must match the name of an output artifact generated by an action in an earlier action or stage of the pipeline.'
        outputArtifacts:
          $ref: '#/components/schemas/ArtifactList'
          description: 'The name of the artifact that is the result of the action, if any. This name might be system-generated, such as "MyBuiltApp", or it might be defined by the user when the action is created.'
        artifactCredentials:
          $ref: '#/components/schemas/AWSSessionCredentials'
          description: 'Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the S3 bucket used to store artifact for the pipeline in AWS CodePipeline. '
        continuationToken:
          $ref: '#/components/schemas/ContinuationToken'
          description: 'A system-generated token, such as a AWS CodeDeploy deployment ID, that a job requires to continue the job asynchronously.'
        encryptionKey:
          $ref: '#/components/schemas/EncryptionKey'
          description: 'The encryption key used to encrypt and decrypt data in the artifact store for the pipeline, such as an AWS Key Management Service (AWS KMS) key. This is optional and might not be present.'
      description: Represents information about the job data for a partner action.
    WebhookAuthConfigurationAllowedIPRange:
      type: string
      minLength: 1
      maxLength: 100
    WebhookAuthConfigurationSecretToken:
      type: string
      minLength: 1
      maxLength: 100
    WebhookAuthConfiguration:
      type: object
      properties:
        AllowedIPRange:
          $ref: '#/components/schemas/WebhookAuthConfigurationAllowedIPRange'
          description: 'The property used to configure acceptance of webhooks in an IP address range. For IP, only the <code>AllowedIPRange</code> property must be set. This property must be set to a valid CIDR range.'
        SecretToken:
          $ref: '#/components/schemas/WebhookAuthConfigurationSecretToken'
          description: 'The property used to configure GitHub authentication. For GITHUB_HMAC, only the <code>SecretToken</code> property must be set.'
      description: The authentication applied to incoming webhook trigger requests.
    WebhookAuthenticationType:
      type: string
      enum:
        - GITHUB_HMAC
        - IP
        - UNAUTHENTICATED
    WebhookFilters:
      type: array
      items:
        $ref: '#/components/schemas/WebhookFilterRule'
      maxItems: 5
    WebhookFilterRule:
      type: object
      required:
        - jsonPath
      properties:
        jsonPath:
          $ref: '#/components/schemas/JsonPath'
          description: 'A JsonPath expression that is applied to the body/payload of the webhook. The value selected by the JsonPath expression must match the value specified in the <code>MatchEquals</code> field. Otherwise, the request is ignored. For more information, see <a href="https://github.com/json-path/JsonPath">Java JsonPath implementation</a> in GitHub.'
        matchEquals:
          $ref: '#/components/schemas/MatchEquals'
          description: 'The value selected by the <code>JsonPath</code> expression must match what is supplied in the <code>MatchEquals</code> field. Otherwise, the request is ignored. Properties from the target action configuration can be included as placeholders in this value by surrounding the action configuration key with curly brackets. For example, if the value supplied here is "refs/heads/{Branch}" and the target action has an action configuration property called "Branch" with a value of "master", the <code>MatchEquals</code> value is evaluated as "refs/heads/master". For a list of action configuration properties for built-in action types, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements">Pipeline Structure Reference Action Requirements</a>.'
      description: The event criteria that specify when a webhook notification is sent to your URL.
security:
  - hmac: []
