openapi: 3.0.0
info:
  version: '2017-01-26'
  x-release: v4
  title: AWS Resource Groups Tagging API
  description: <fullname>Resource Groups Tagging API</fullname>
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: resourcegroupstaggingapi
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/resourcegroupstaggingapi-2017-01-26.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/tagging/'
servers:
  - url: 'http://tagging.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Resource Groups Tagging API multi-region endpoint
  - url: 'https://tagging.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Resource Groups Tagging API multi-region endpoint
  - url: 'http://tagging.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Resource Groups Tagging API endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://tagging.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Resource Groups Tagging API endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.DescribeReportCreation:
    post:
      operationId: DescribeReportCreation
      description: <p>Describes the status of the <code>StartReportCreation</code> operation. </p> <p>You can call this operation only from the organization's management account and from the us-east-1 Region.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReportCreationOutput'
        '480':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeReportCreationInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.DescribeReportCreation
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetComplianceSummary:
    post:
      operationId: GetComplianceSummary
      description: '<p>Returns a table that shows counts of resources that are noncompliant with their tag policies.</p> <p>For more information on tag policies, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">Tag Policies</a> in the <i>AWS Organizations User Guide.</i> </p> <p>You can call this operation only from the organization''s management account and from the us-east-1 Region.</p> <p>This operation supports pagination, where the response can be sent in multiple pages. You should check the <code>PaginationToken</code> response parameter to determine if there are additional results available to return. Repeat the query, passing the <code>PaginationToken</code> response parameter value as an input to the next request until you recieve a <code>null</code> value. A null value for <code>PaginationToken</code> indicates that there are no more results waiting to be returned.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComplianceSummaryOutput'
        '480':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetComplianceSummaryInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PaginationToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.GetComplianceSummary
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetResources:
    post:
      operationId: GetResources
      description: '<p>Returns all the tagged or previously tagged resources that are located in the specified Region for the AWS account.</p> <p>Depending on what information you want returned, you can also specify the following:</p> <ul> <li> <p> <i>Filters</i> that specify what tags and resource types you want returned. The response includes all tags that are associated with the requested resources.</p> </li> <li> <p>Information about compliance with the account''s effective tag policy. For more information on tag policies, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">Tag Policies</a> in the <i>AWS Organizations User Guide.</i> </p> </li> </ul> <p>This operation supports pagination, where the response can be sent in multiple pages. You should check the <code>PaginationToken</code> response parameter to determine if there are additional results available to return. Repeat the query, passing the <code>PaginationToken</code> response parameter value as an input to the next request until you recieve a <code>null</code> value. A null value for <code>PaginationToken</code> indicates that there are no more results waiting to be returned.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcesOutput'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: PaginationTokenExpiredException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationTokenExpiredException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResourcesInput'
      parameters:
        - name: ResourcesPerPage
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PaginationToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.GetResources
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetTagKeys:
    post:
      operationId: GetTagKeys
      description: '<p>Returns all tag keys currently in use in the specified Region for the calling AWS account.</p> <p>This operation supports pagination, where the response can be sent in multiple pages. You should check the <code>PaginationToken</code> response parameter to determine if there are additional results available to return. Repeat the query, passing the <code>PaginationToken</code> response parameter value as an input to the next request until you recieve a <code>null</code> value. A null value for <code>PaginationToken</code> indicates that there are no more results waiting to be returned.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagKeysOutput'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: PaginationTokenExpiredException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationTokenExpiredException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTagKeysInput'
      parameters:
        - name: PaginationToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.GetTagKeys
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetTagValues:
    post:
      operationId: GetTagValues
      description: '<p>Returns all tag values for the specified key that are used in the specified AWS Region for the calling AWS account.</p> <p>This operation supports pagination, where the response can be sent in multiple pages. You should check the <code>PaginationToken</code> response parameter to determine if there are additional results available to return. Repeat the query, passing the <code>PaginationToken</code> response parameter value as an input to the next request until you recieve a <code>null</code> value. A null value for <code>PaginationToken</code> indicates that there are no more results waiting to be returned.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagValuesOutput'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: PaginationTokenExpiredException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationTokenExpiredException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTagValuesInput'
      parameters:
        - name: PaginationToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.GetTagValues
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.StartReportCreation:
    post:
      operationId: StartReportCreation
      description: '<p>Generates a report that lists all tagged resources in the accounts across your organization and tells whether each resource is compliant with the effective tag policy. Compliance data is refreshed daily. The report is generated asynchronously.</p> <p>The generated report is saved to the following location:</p> <p> <code>s3://example-bucket/AwsTagPolicies/o-exampleorgid/YYYY-MM-ddTHH:mm:ssZ/report.csv</code> </p> <p>You can call this operation only from the organization''s management account and from the us-east-1 Region.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartReportCreationOutput'
        '480':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '481':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartReportCreationInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.StartReportCreation
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.TagResources:
    post:
      operationId: TagResources
      description: '<p>Applies one or more tags to the specified resources. Note the following:</p> <ul> <li> <p>Not all resources can have tags. For a list of services with resources that support tagging using this operation, see <a href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/supported-services.html">Services that support the Resource Groups Tagging API</a>.</p> </li> <li> <p>Each resource can have up to 50 tags. For other limits, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html#tag-conventions">Tag Naming and Usage Conventions</a> in the <i>AWS General Reference.</i> </p> </li> <li> <p>You can only tag resources that are located in the specified AWS Region for the AWS account.</p> </li> <li> <p>To add tags to a resource, you need the necessary permissions for the service that the resource belongs to as well as permissions for adding tags. For more information, see the documentation for each service.</p> </li> </ul> <important> <p>Do not store personally identifiable information (PII) or other confidential or sensitive information in tags. We use tags to provide you with billing and administration services. Tags are not intended to be used for private or sensitive data.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourcesOutput'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourcesInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.TagResources
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.UntagResources:
    post:
      operationId: UntagResources
      description: '<p>Removes the specified tags from the specified resources. When you specify a tag key, the action removes both that key and its associated value. The operation succeeds even if you attempt to remove tags from a resource that were already removed. Note the following:</p> <ul> <li> <p>To remove tags from a resource, you need the necessary permissions for the service that the resource belongs to as well as permissions for removing tags. For more information, see the documentation for the service whose resource you want to untag.</p> </li> <li> <p>You can only tag resources that are located in the specified AWS Region for the calling AWS account.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourcesOutput'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourcesInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.UntagResources
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    DescribeReportCreationOutput:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
          description: '<p>Reports the status of the operation.</p> <p>The operation status can be one of the following:</p> <ul> <li> <p> <code>RUNNING</code> - Report creation is in progress.</p> </li> <li> <p> <code>SUCCEEDED</code> - Report creation is complete. You can open the report from the Amazon S3 bucket that you specified when you ran <code>StartReportCreation</code>.</p> </li> <li> <p> <code>FAILED</code> - Report creation timed out or the Amazon S3 bucket is not accessible. </p> </li> <li> <p> <code>NO REPORT</code> - No report was generated in the last 90 days.</p> </li> </ul>'
        S3Location:
          $ref: '#/components/schemas/S3Location'
          description: The path to the Amazon S3 bucket where the report was stored on creation.
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: Details of the common errors that all operations return.
    DescribeReportCreationInput:
      type: object
      title: DescribeReportCreationInput
      properties: {}
    ConstraintViolationException: {}
    InternalServiceException: {}
    InvalidParameterException: {}
    ThrottledException: {}
    GetComplianceSummaryOutput:
      type: object
      properties:
        SummaryList:
          $ref: '#/components/schemas/SummaryList'
          description: A table that shows counts of noncompliant resources.
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'A string that indicates that there is more data available than this response contains. To receive the next part of the response, specify this response value as the <code>PaginationToken</code> value in the request for the next page.'
    GetComplianceSummaryInput:
      type: object
      title: GetComplianceSummaryInput
      properties:
        TargetIdFilters:
          $ref: '#/components/schemas/TargetIdFilterList'
          description: 'Specifies target identifiers (usually, specific account IDs) to limit the output by. If you use this parameter, the count of returned noncompliant resources includes only resources with the specified target IDs.'
        RegionFilters:
          $ref: '#/components/schemas/RegionFilterList'
          description: 'Specifies a list of AWS Regions to limit the output by. If you use this parameter, the count of returned noncompliant resources includes only resources in the specified Regions.'
        ResourceTypeFilters:
          $ref: '#/components/schemas/ResourceTypeFilterList'
          description: '<p>Specifies that you want the response to include information for only resources of the specified types. The format of each resource type is <code>service[:resourceType]</code>. For example, specifying a resource type of <code>ec2</code> returns all Amazon EC2 resources (which includes EC2 instances). Specifying a resource type of <code>ec2:instance</code> returns only EC2 instances. </p> <p>The string for each service name and resource type is the same as that embedded in a resource''s Amazon Resource Name (ARN). Consult the <i>AWS General Reference</i> for the following:</p> <ul> <li> <p>For a list of service name strings, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces">AWS Service Namespaces</a>.</p> </li> <li> <p>For resource type strings, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arns-syntax">Example ARNs</a>.</p> </li> <li> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p> </li> </ul> <p>You can specify multiple resource types by using a comma separated array. The array can include up to 100 items. Note that the length constraint requirement applies to each resource type filter. </p>'
        TagKeyFilters:
          $ref: '#/components/schemas/TagKeyFilterList'
          description: 'Specifies that you want the response to include information for only resources that have tags with the specified tag keys. If you use this parameter, the count of returned noncompliant resources includes only resources that have the specified tag keys.'
        GroupBy:
          $ref: '#/components/schemas/GroupBy'
          description: 'Specifies a list of attributes to group the counts of noncompliant resources by. If supplied, the counts are sorted by those attributes.'
        MaxResults:
          $ref: '#/components/schemas/MaxResultsGetComplianceSummary'
          description: 'Specifies the maximum number of results to be returned in each page. A query can return fewer than this maximum, even if there are more results still to return. You should always check the <code>PaginationToken</code> response value to see if there are more results. You can specify a minimum of 1 and a maximum value of 100.'
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Specifies a <code>PaginationToken</code> response value from a previous request to indicate that you want the next page of results. Leave this parameter empty in your initial request.
    GetResourcesOutput:
      type: object
      properties:
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'A string that indicates that there is more data available than this response contains. To receive the next part of the response, specify this response value as the <code>PaginationToken</code> value in the request for the next page.'
        ResourceTagMappingList:
          $ref: '#/components/schemas/ResourceTagMappingList'
          description: A list of resource ARNs and the tags (keys and values) associated with those ARNs.
    GetResourcesInput:
      type: object
      title: GetResourcesInput
      properties:
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Specifies a <code>PaginationToken</code> response value from a previous request to indicate that you want the next page of results. Leave this parameter empty in your initial request.
        TagFilters:
          $ref: '#/components/schemas/TagFilterList'
          description: '<p>Specifies a list of TagFilters (keys and values) to restrict the output to only those resources that have the specified tag and, if included, the specified value. Each <code>TagFilter</code> must contain a key with values optional. A request can include up to 50 keys, and each key can include up to 20 values. </p> <p>Note the following when deciding how to use TagFilters:</p> <ul> <li> <p>If you <i>don''t</i> specify a <code>TagFilter</code>, the response includes all resources that are currently tagged or ever had a tag. Resources that currently don''t have tags are shown with an empty tag set, like this: <code>"Tags": []</code>.</p> </li> <li> <p>If you specify more than one filter in a single request, the response returns only those resources that satisfy all filters.</p> </li> <li> <p>If you specify a filter that contains more than one value for a key, the response returns resources that match any of the specified values for that key.</p> </li> <li> <p>If you don''t specify any values for a key, the response returns resources that are tagged with that key and any or no value.</p> <p>For example, for the following filters: <code>filter1= {keyA,{value1}}</code>, <code>filter2={keyB,{value2,value3,value4}}</code>, <code>filter3= {keyC}</code>:</p> <ul> <li> <p> <code>GetResources({filter1})</code> returns resources tagged with <code>key1=value1</code> </p> </li> <li> <p> <code>GetResources({filter2})</code> returns resources tagged with <code>key2=value2</code> or <code>key2=value3</code> or <code>key2=value4</code> </p> </li> <li> <p> <code>GetResources({filter3})</code> returns resources tagged with any tag with the key <code>key3</code>, and with any or no value</p> </li> <li> <p> <code>GetResources({filter1,filter2,filter3})</code> returns resources tagged with <code>(key1=value1) and (key2=value2 or key2=value3 or key2=value4) and (key3, any or no value)</code> </p> </li> </ul> </li> </ul>'
        ResourcesPerPage:
          $ref: '#/components/schemas/ResourcesPerPage'
          description: 'Specifies the maximum number of results to be returned in each page. A query can return fewer than this maximum, even if there are more results still to return. You should always check the <code>PaginationToken</code> response value to see if there are more results. You can specify a minimum of 1 and a maximum value of 100.'
        TagsPerPage:
          $ref: '#/components/schemas/TagsPerPage'
          description: '<p>AWS recommends using <code>ResourcesPerPage</code> instead of this parameter.</p> <p>A limit that restricts the number of tags (key and value pairs) returned by <code>GetResources</code> in paginated output. A resource with no tags is counted as having one tag (one key and value pair).</p> <p> <code>GetResources</code> does not split a resource and its associated tags across pages. If the specified <code>TagsPerPage</code> would cause such a break, a <code>PaginationToken</code> is returned in place of the affected resource and its tags. Use that token in another request to get the remaining data. For example, if you specify a <code>TagsPerPage</code> of <code>100</code> and the account has 22 resources with 10 tags each (meaning that each resource has 10 key and value pairs), the output will consist of three pages. The first page displays the first 10 resources, each with its 10 tags. The second page displays the next 10 resources, each with its 10 tags. The third page displays the remaining 2 resources, each with its 10 tags.</p> <p>You can set <code>TagsPerPage</code> to a minimum of 100 items up to a maximum of 500 items.</p>'
        ResourceTypeFilters:
          $ref: '#/components/schemas/ResourceTypeFilterList'
          description: '<p>Specifies the resource types that you want included in the response. The format of each resource type is <code>service[:resourceType]</code>. For example, specifying a resource type of <code>ec2</code> returns all Amazon EC2 resources (which includes EC2 instances). Specifying a resource type of <code>ec2:instance</code> returns only EC2 instances. </p> <p>The string for each service name and resource type is the same as that embedded in a resource''s Amazon Resource Name (ARN). Consult the <i>AWS General Reference</i> for the following:</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p> <p>You can specify multiple resource types by using an array. The array can include up to 100 items. Note that the length constraint requirement applies to each resource type filter. </p>'
        IncludeComplianceDetails:
          $ref: '#/components/schemas/IncludeComplianceDetails'
          description: Specifies whether to include details regarding the compliance with the effective tag policy. Set this to <code>true</code> to determine whether resources are compliant with the tag policy and to get details.
        ExcludeCompliantResources:
          $ref: '#/components/schemas/ExcludeCompliantResources'
          description: <p>Specifies whether to exclude resources that are compliant with the tag policy. Set this to <code>true</code> if you are interested in retrieving information on noncompliant resources only.</p> <p>You can use this parameter only if the <code>IncludeComplianceDetails</code> parameter is also set to <code>true</code>.</p>
        ResourceARNList:
          $ref: '#/components/schemas/ResourceARNListForGet'
          description: '<p>Specifies a list of ARNs of resources for which you want to retrieve tag data. You can''t specify both this parameter and any of the pagination parameters (<code>ResourcesPerPage</code>, <code>TagsPerPage</code>, <code>PaginationToken</code>) in the same request. If you specify both, you get an <code>Invalid Parameter</code> exception.</p> <p>If a resource specified by this parameter doesn''t exist, it doesn''t generate an error; it simply isn''t included in the response.</p> <p>An ARN (Amazon Resource Name) uniquely identifies a resource. For more information, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
    PaginationTokenExpiredException: {}
    GetTagKeysOutput:
      type: object
      properties:
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'A string that indicates that there is more data available than this response contains. To receive the next part of the response, specify this response value as the <code>PaginationToken</code> value in the request for the next page.'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: A list of all tag keys in the AWS account.
    GetTagKeysInput:
      type: object
      title: GetTagKeysInput
      properties:
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Specifies a <code>PaginationToken</code> response value from a previous request to indicate that you want the next page of results. Leave this parameter empty in your initial request.
    GetTagValuesOutput:
      type: object
      properties:
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'A string that indicates that there is more data available than this response contains. To receive the next part of the response, specify this response value as the <code>PaginationToken</code> value in the request for the next page.'
        TagValues:
          $ref: '#/components/schemas/TagValuesOutputList'
          description: A list of all tag values for the specified key currently used in the specified AWS Region for the calling AWS account.
    GetTagValuesInput:
      type: object
      required:
        - Key
      title: GetTagValuesInput
      properties:
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Specifies a <code>PaginationToken</code> response value from a previous request to indicate that you want the next page of results. Leave this parameter empty in your initial request.
        Key:
          $ref: '#/components/schemas/TagKey'
          description: Specifies the tag key for which you want to list all existing values that are currently used in the specified AWS Region for the calling AWS account.
    StartReportCreationOutput:
      type: object
      properties: {}
    StartReportCreationInput:
      type: object
      required:
        - S3Bucket
      title: StartReportCreationInput
      properties:
        S3Bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: '<p>The name of the Amazon S3 bucket where the report will be stored; for example:</p> <p> <code>awsexamplebucket</code> </p> <p>For more information on S3 bucket requirements, including an example bucket policy, see the example S3 bucket policy on this page.</p>'
    ConcurrentModificationException: {}
    TagResourcesOutput:
      type: object
      properties:
        FailedResourcesMap:
          $ref: '#/components/schemas/FailedResourcesMap'
          description: 'A map containing a key-value pair for each failed item that couldn''t be tagged. The key is the ARN of the failed resource. The value is a <code>FailureInfo</code> object that contains an error code, a status code, and an error message. If there are no errors, the <code>FailedResourcesMap</code> is empty.'
    TagResourcesInput:
      type: object
      required:
        - ResourceARNList
        - Tags
      title: TagResourcesInput
      properties:
        ResourceARNList:
          $ref: '#/components/schemas/ResourceARNListForTagUntag'
          description: '<p>Specifies the list of ARNs of the resources that you want to apply tags to.</p> <p>An ARN (Amazon Resource Name) uniquely identifies a resource. For more information, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Specifies a list of tags that you want to add to the specified resources. A tag consists of a key and a value that you define.
    UntagResourcesOutput:
      type: object
      properties:
        FailedResourcesMap:
          $ref: '#/components/schemas/FailedResourcesMap'
          description: 'A map containing a key-value pair for each failed item that couldn''t be untagged. The key is the ARN of the failed resource. The value is a <code>FailureInfo</code> object that contains an error code, a status code, and an error message. If there are no errors, the <code>FailedResourcesMap</code> is empty.'
    UntagResourcesInput:
      type: object
      required:
        - ResourceARNList
        - TagKeys
      title: UntagResourcesInput
      properties:
        ResourceARNList:
          $ref: '#/components/schemas/ResourceARNListForTagUntag'
          description: '<p>Specifies a list of ARNs of the resources that you want to remove tags from.</p> <p>An ARN (Amazon Resource Name) uniquely identifies a resource. For more information, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
        TagKeys:
          $ref: '#/components/schemas/TagKeyListForUntag'
          description: Specifies a list of tag keys that you want to remove from the specified resources.
    AmazonResourceType:
      type: string
      pattern: '[\s\S]*'
      minLength: 0
      maxLength: 256
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    ComplianceStatus:
      type: boolean
    ComplianceDetails:
      type: object
      properties:
        NoncompliantKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: These tag keys on the resource are noncompliant with the effective tag policy.
        KeysWithNoncompliantValues:
          $ref: '#/components/schemas/TagKeyList'
          description: 'These are keys defined in the effective policy that are on the resource with either incorrect case treatment or noncompliant values. '
        ComplianceStatus:
          $ref: '#/components/schemas/ComplianceStatus'
          description: Whether a resource is compliant with the effective tag policy.
      description: 'Information that shows whether a resource is compliant with the effective tag policy, including details on any noncompliant tag keys.'
    Status:
      type: string
    S3Location:
      type: string
    ErrorMessage:
      type: string
    ErrorCode:
      type: string
      enum:
        - InternalServiceException
        - InvalidParameterException
    ExcludeCompliantResources:
      type: boolean
    FailureInfo:
      type: object
      properties:
        StatusCode:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status code of the common error.
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: 'The code of the common error. Valid values include <code>InternalServiceException</code>, <code>InvalidParameterException</code>, and any valid error code returned by the AWS service that hosts the resource that you want to tag.'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: The message of the common error.
      description: '<p>Information about the errors that are returned for each failed resource. This information can include <code>InternalServiceException</code> and <code>InvalidParameterException</code> errors. It can also include any valid error code returned by the AWS service that hosts the resource that the ARN key represents.</p> <p>The following are common error codes that you might receive from other AWS services:</p> <ul> <li> <p> <b>InternalServiceException</b> – This can mean that the Resource Groups Tagging API didn''t receive a response from another AWS service. It can also mean the the resource type in the request is not supported by the Resource Groups Tagging API. In these cases, it''s safe to retry the request and then call <a href="http://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html">GetResources</a> to verify the changes.</p> </li> <li> <p> <b>AccessDeniedException</b> – This can mean that you need permission to calling tagging operations in the AWS service that contains the resource. For example, to use the Resource Groups Tagging API to tag a CloudWatch alarm resource, you need permission to call <a href="http://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_TagResources.html"> <code>TagResources</code> </a> <i>and</i> <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html"> <code>TagResource</code> </a> in the CloudWatch API. </p> </li> </ul> <p>For more information on errors that are generated from other AWS services, see the documentation for that service. </p>'
    FailedResourcesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FailureInfo'
    StatusCode:
      type: integer
    TargetIdFilterList:
      type: array
      items:
        $ref: '#/components/schemas/TargetId'
      minItems: 1
      maxItems: 100
    RegionFilterList:
      type: array
      items:
        $ref: '#/components/schemas/Region'
      minItems: 1
      maxItems: 100
    ResourceTypeFilterList:
      type: array
      items:
        $ref: '#/components/schemas/AmazonResourceType'
    TagKeyFilterList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    GroupBy:
      type: array
      items:
        $ref: '#/components/schemas/GroupByAttribute'
    MaxResultsGetComplianceSummary:
      type: integer
      minimum: 1
      maximum: 1000
    PaginationToken:
      type: string
      pattern: '[\s\S]*'
      minLength: 0
      maxLength: 2048
    SummaryList:
      type: array
      items:
        $ref: '#/components/schemas/Summary'
    TagFilterList:
      type: array
      items:
        $ref: '#/components/schemas/TagFilter'
      minItems: 0
      maxItems: 50
    ResourcesPerPage:
      type: integer
    TagsPerPage:
      type: integer
    IncludeComplianceDetails:
      type: boolean
    ResourceARNListForGet:
      type: array
      items:
        $ref: '#/components/schemas/ResourceARN'
      minItems: 1
      maxItems: 100
    ResourceTagMappingList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceTagMapping'
    TagKey:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      maxLength: 128
    TagValuesOutputList:
      type: array
      items:
        $ref: '#/components/schemas/TagValue'
    GroupByAttribute:
      type: string
      enum:
        - TARGET_ID
        - REGION
        - RESOURCE_TYPE
    LastUpdated:
      type: string
    NonCompliantResources:
      type: integer
    Region:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      maxLength: 256
    ResourceARN:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      maxLength: 1011
    ResourceARNListForTagUntag:
      type: array
      items:
        $ref: '#/components/schemas/ResourceARN'
      minItems: 1
      maxItems: 20
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    ResourceTagMapping:
      type: object
      properties:
        ResourceARN:
          $ref: '#/components/schemas/ResourceARN'
          description: The ARN of the resource.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags that have been applied to one or more AWS resources.
        ComplianceDetails:
          $ref: '#/components/schemas/ComplianceDetails'
          description: 'Information that shows whether a resource is compliant with the effective tag policy, including details on any noncompliant tag keys.'
      description: A list of resource ARNs and the tags (keys and values) that are associated with each.
    S3Bucket:
      type: string
      pattern: '[a-z0-9.-]*'
      minLength: 3
      maxLength: 63
    TargetId:
      type: string
      pattern: '[a-zA-Z0-9-]*'
      minLength: 6
      maxLength: 68
    TargetIdType:
      type: string
      enum:
        - ACCOUNT
        - OU
        - ROOT
    Summary:
      type: object
      properties:
        LastUpdated:
          $ref: '#/components/schemas/LastUpdated'
          description: 'The timestamp that shows when this summary was generated in this Region. '
        TargetId:
          $ref: '#/components/schemas/TargetId'
          description: 'The account identifier or the root identifier of the organization. If you don''t know the root ID, you can call the AWS Organizations <a href="http://docs.aws.amazon.com/organizations/latest/APIReference/API_ListRoots.html">ListRoots</a> API.'
        TargetIdType:
          $ref: '#/components/schemas/TargetIdType'
          description: 'Whether the target is an account, an OU, or the organization root.'
        Region:
          $ref: '#/components/schemas/Region'
          description: The AWS Region that the summary applies to.
        ResourceType:
          $ref: '#/components/schemas/AmazonResourceType'
          description: The AWS resource type.
        NonCompliantResources:
          $ref: '#/components/schemas/NonCompliantResources'
          description: The count of noncompliant resources.
      description: A count of noncompliant resources.
    TagValue:
      type: string
      pattern: '[\s\S]*'
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: One part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: One part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key). The value can be empty or null.
      description: 'The metadata that you apply to AWS resources to help you categorize and organize them. Each tag consists of a key and a value, both of which you define. For more information, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging AWS Resources</a> in the <i>AWS General Reference</i>.'
    TagValueList:
      type: array
      items:
        $ref: '#/components/schemas/TagValue'
      minItems: 0
      maxItems: 20
    TagFilter:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: One part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.
        Values:
          $ref: '#/components/schemas/TagValueList'
          description: One part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key). The value can be empty or null.
      description: A list of tags (keys and values) that are used to specify the associated resources.
    TagKeyListForUntag:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
security:
  - hmac: []
