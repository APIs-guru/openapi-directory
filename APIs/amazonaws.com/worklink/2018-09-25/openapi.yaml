openapi: 3.0.0
info:
  version: '2018-09-25'
  x-release: v4
  title: Amazon WorkLink
  description: 'Amazon WorkLink is a cloud-based service that provides secure access to internal websites and web apps from iOS and Android phones. In a single step, your users, such as employees, can access internal websites as efficiently as they access any other public website. They enter a URL in their web browser, or choose a link to an internal website in an email. Amazon WorkLink authenticates the user''s access and securely renders authorized internal web content in a secure rendering service in the AWS cloud. Amazon WorkLink doesn''t download or store any internal web content on mobile devices.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: worklink
  x-aws-signingName: worklink
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/worklink-2018-09-25.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/worklink/'
servers:
  - url: 'http://worklink.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The WorkLink multi-region endpoint
  - url: 'https://worklink.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The WorkLink multi-region endpoint
  - url: 'http://worklink.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The WorkLink endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://worklink.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The WorkLink endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /associateDomain:
    post:
      operationId: AssociateDomain
      description: Specifies a domain to be associated to Amazon WorkLink.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateDomainResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - DomainName
                - AcmCertificateArn
              properties:
                FleetArn:
                  description: The Amazon Resource Name (ARN) of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                DomainName:
                  description: The fully qualified domain name (FQDN).
                  type: string
                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$'
                  minLength: 1
                  maxLength: 253
                DisplayName:
                  description: The name to display.
                  type: string
                  maxLength: 100
                AcmCertificateArn:
                  description: The ARN of an issued ACM certificate that is valid for the domain being associated.
                  type: string
                  pattern: 'arn:[\w+=/,.@-]+:[\w+=/,.@-]+:[\w+=/,.@-]*:[0-9]+:[\w+=,.@-]+(/[\w+=/,.@-]+)*'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /associateWebsiteAuthorizationProvider:
    post:
      operationId: AssociateWebsiteAuthorizationProvider
      description: Associates a website authorization provider with a specified fleet. This is used to authorize users against associated websites in the company network.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateWebsiteAuthorizationProviderResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - AuthorizationProviderType
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                AuthorizationProviderType:
                  description: The authorization provider type.
                  type: string
                  enum:
                    - SAML
                DomainName:
                  description: The domain name of the authorization provider. This applies only to SAML-based authorization providers.
                  type: string
                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$'
                  minLength: 1
                  maxLength: 253
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /associateWebsiteCertificateAuthority:
    post:
      operationId: AssociateWebsiteCertificateAuthority
      description: Imports the root certificate of a certificate authority (CA) used to obtain TLS certificates used by associated websites within the company network.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateWebsiteCertificateAuthorityResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - Certificate
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                Certificate:
                  description: The root certificate of the CA.
                  type: string
                  pattern: '-{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}(\u000D?\u000A)?'
                  minLength: 1
                  maxLength: 8192
                DisplayName:
                  description: The certificate name to display.
                  type: string
                  maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /createFleet:
    post:
      operationId: CreateFleet
      description: Creates a fleet. A fleet consists of resources and the configuration that delivers associated websites to authorized users who download and set up the Amazon WorkLink app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFleetResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetName
              properties:
                FleetName:
                  description: A unique name for the fleet.
                  type: string
                  pattern: '^[a-z0-9](?:[a-z0-9\-]{0,46}[a-z0-9])?$'
                  minLength: 1
                  maxLength: 48
                DisplayName:
                  description: The fleet name to display.
                  type: string
                  maxLength: 100
                OptimizeForEndUserLocation:
                  description: 'The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.'
                  type: boolean
                Tags:
                  description: ' The tags to add to the resource. A tag is a key-value pair.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /deleteFleet:
    post:
      operationId: DeleteFleet
      description: 'Deletes a fleet. Prevents users from accessing previously associated websites. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFleetResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeAuditStreamConfiguration:
    post:
      operationId: DescribeAuditStreamConfiguration
      description: Describes the configuration for delivering audit streams to the customer account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAuditStreamConfigurationResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeCompanyNetworkConfiguration:
    post:
      operationId: DescribeCompanyNetworkConfiguration
      description: Describes the networking configuration to access the internal websites associated with the specified fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCompanyNetworkConfigurationResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeDevice:
    post:
      operationId: DescribeDevice
      description: Provides information about a user's device.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeviceResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - DeviceId
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                DeviceId:
                  description: A unique identifier for a registered user's device.
                  type: string
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeDevicePolicyConfiguration:
    post:
      operationId: DescribeDevicePolicyConfiguration
      description: Describes the device policy configuration for the specified fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDevicePolicyConfigurationResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeDomain:
    post:
      operationId: DescribeDomain
      description: Provides information about the domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - DomainName
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                DomainName:
                  description: The name of the domain.
                  type: string
                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$'
                  minLength: 1
                  maxLength: 253
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeFleetMetadata:
    post:
      operationId: DescribeFleetMetadata
      description: 'Provides basic information for the specified fleet, excluding identity provider, networking, and device configuration details.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFleetMetadataResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The Amazon Resource Name (ARN) of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeIdentityProviderConfiguration:
    post:
      operationId: DescribeIdentityProviderConfiguration
      description: Describes the identity provider configuration of the specified fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeIdentityProviderConfigurationResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeWebsiteCertificateAuthority:
    post:
      operationId: DescribeWebsiteCertificateAuthority
      description: Provides information about the certificate authority.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWebsiteCertificateAuthorityResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - WebsiteCaId
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                WebsiteCaId:
                  description: A unique identifier for the certificate authority.
                  type: string
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /disassociateDomain:
    post:
      operationId: DisassociateDomain
      description: 'Disassociates a domain from Amazon WorkLink. End users lose the ability to access the domain with Amazon WorkLink. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateDomainResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - DomainName
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                DomainName:
                  description: The name of the domain.
                  type: string
                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$'
                  minLength: 1
                  maxLength: 253
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /disassociateWebsiteAuthorizationProvider:
    post:
      operationId: DisassociateWebsiteAuthorizationProvider
      description: 'Disassociates a website authorization provider from a specified fleet. After the disassociation, users can''t load any associated websites that require this authorization provider.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateWebsiteAuthorizationProviderResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - AuthorizationProviderId
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                AuthorizationProviderId:
                  description: A unique identifier for the authorization provider.
                  type: string
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /disassociateWebsiteCertificateAuthority:
    post:
      operationId: DisassociateWebsiteCertificateAuthority
      description: Removes a certificate authority (CA).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateWebsiteCertificateAuthorityResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - WebsiteCaId
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                WebsiteCaId:
                  description: A unique identifier for the CA.
                  type: string
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listDevices:
    post:
      operationId: ListDevices
      description: Retrieves a list of devices registered with the specified fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                NextToken:
                  description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
                  type: string
                  pattern: '[\w\-]+'
                  minLength: 1
                  maxLength: 4096
                MaxResults:
                  description: The maximum number of results to be included in the next page.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listDomains:
    post:
      operationId: ListDomains
      description: Retrieves a list of domains associated to a specified fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                NextToken:
                  description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
                  type: string
                  pattern: '[\w\-]+'
                  minLength: 1
                  maxLength: 4096
                MaxResults:
                  description: The maximum number of results to be included in the next page.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listFleets:
    post:
      operationId: ListFleets
      description: Retrieves a list of fleets for the current account and Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFleetsResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
                  type: string
                  pattern: '[\w\-]+'
                  minLength: 1
                  maxLength: 4096
                MaxResults:
                  description: The maximum number of results to be included in the next page.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{ResourceArn}':
    get:
      operationId: ListTagsForResource
      description: Retrieves a list of tags for the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the fleet.
          schema:
            type: string
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: 'Adds or overwrites one or more tags for the specified resource, such as a fleet. Each tag consists of a key and an optional value. If a resource already has a tag with the same key, this operation updates its value.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the fleet.
          schema:
            type: string
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The tags to add to the resource. A tag is a key-value pair.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  /listWebsiteAuthorizationProviders:
    post:
      operationId: ListWebsiteAuthorizationProviders
      description: Retrieves a list of website authorization providers associated with a specified fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWebsiteAuthorizationProvidersResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                NextToken:
                  description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
                  type: string
                  pattern: '[\w\-]+'
                  minLength: 1
                  maxLength: 4096
                MaxResults:
                  description: The maximum number of results to be included in the next page.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listWebsiteCertificateAuthorities:
    post:
      operationId: ListWebsiteCertificateAuthorities
      description: Retrieves a list of certificate authorities added for the current account and Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWebsiteCertificateAuthoritiesResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                MaxResults:
                  description: The maximum number of results to be included in the next page.
                  type: integer
                  minimum: 1
                NextToken:
                  description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
                  type: string
                  pattern: '[\w\-]+'
                  minLength: 1
                  maxLength: 4096
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /restoreDomainAccess:
    post:
      operationId: RestoreDomainAccess
      description: Moves a domain to ACTIVE status if it was in the INACTIVE status.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreDomainAccessResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - DomainName
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                DomainName:
                  description: The name of the domain.
                  type: string
                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$'
                  minLength: 1
                  maxLength: 253
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /revokeDomainAccess:
    post:
      operationId: RevokeDomainAccess
      description: Moves a domain to INACTIVE status if it was in the ACTIVE status.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeDomainAccessResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - DomainName
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                DomainName:
                  description: The name of the domain.
                  type: string
                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$'
                  minLength: 1
                  maxLength: 253
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /signOutUser:
    post:
      operationId: SignOutUser
      description: Signs the user out from all of their devices. The user can sign in again if they have valid credentials.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignOutUserResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - Username
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                Username:
                  description: The name of the user.
                  type: string
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{ResourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes one or more tags from the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the fleet.
          schema:
            type: string
            minLength: 20
            maxLength: 2048
        - name: tagKeys
          in: query
          required: true
          description: The list of tag keys to remove from the resource.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateAuditStreamConfiguration:
    post:
      operationId: UpdateAuditStreamConfiguration
      description: Updates the audit stream configuration for the fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAuditStreamConfigurationResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                AuditStreamArn:
                  description: The ARN of the Amazon Kinesis data stream that receives the audit events.
                  type: string
                  pattern: '^arn:aws:kinesis:.+:[0-9]{12}:stream/AmazonWorkLink-.*$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateCompanyNetworkConfiguration:
    post:
      operationId: UpdateCompanyNetworkConfiguration
      description: Updates the company network configuration for the fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCompanyNetworkConfigurationResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - VpcId
                - SubnetIds
                - SecurityGroupIds
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                VpcId:
                  description: The VPC with connectivity to associated websites.
                  type: string
                  pattern: '^vpc-([0-9a-f]{8}|[0-9a-f]{17})$'
                SubnetIds:
                  description: The subnets used for X-ENI connections from Amazon WorkLink rendering containers.
                  type: array
                  items:
                    $ref: '#/components/schemas/SubnetId'
                SecurityGroupIds:
                  description: The security groups associated with access to the provided subnets.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupId'
                  maxItems: 5
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateDevicePolicyConfiguration:
    post:
      operationId: UpdateDevicePolicyConfiguration
      description: Updates the device policy configuration for the fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDevicePolicyConfigurationResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                DeviceCaCertificate:
                  description: 'The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.'
                  type: string
                  pattern: '(-{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}\u000D?\u000A)*-{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}(\u000D?\u000A)?'
                  minLength: 1
                  maxLength: 32768
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateDomainMetadata:
    post:
      operationId: UpdateDomainMetadata
      description: 'Updates domain metadata, such as DisplayName.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainMetadataResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - DomainName
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                DomainName:
                  description: The name of the domain.
                  type: string
                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$'
                  minLength: 1
                  maxLength: 253
                DisplayName:
                  description: The name to display.
                  type: string
                  maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateFleetMetadata:
    post:
      operationId: UpdateFleetMetadata
      description: 'Updates fleet metadata, such as DisplayName.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFleetMetadataResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                DisplayName:
                  description: The fleet name to display. The existing DisplayName is unset if null is passed.
                  type: string
                  maxLength: 100
                OptimizeForEndUserLocation:
                  description: 'The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateIdentityProviderConfiguration:
    post:
      operationId: UpdateIdentityProviderConfiguration
      description: Updates the identity provider configuration for the fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIdentityProviderConfigurationResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FleetArn
                - IdentityProviderType
              properties:
                FleetArn:
                  description: The ARN of the fleet.
                  type: string
                  minLength: 20
                  maxLength: 2048
                IdentityProviderType:
                  description: The type of identity provider.
                  type: string
                  enum:
                    - SAML
                IdentityProviderSamlMetadata:
                  description: The SAML metadata document provided by the customer’s identity provider. The existing IdentityProviderSamlMetadata is unset if null is passed.
                  type: string
                  minLength: 1
                  maxLength: 204800
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateDomainResponse:
      type: object
      properties: {}
    UnauthorizedException: {}
    InternalServerErrorException: {}
    InvalidRequestException: {}
    ResourceNotFoundException: {}
    ResourceAlreadyExistsException: {}
    TooManyRequestsException: {}
    AssociateWebsiteAuthorizationProviderResponse:
      type: object
      properties:
        AuthorizationProviderId:
          $ref: '#/components/schemas/Id'
          description: A unique identifier for the authorization provider.
    AssociateWebsiteCertificateAuthorityResponse:
      type: object
      properties:
        WebsiteCaId:
          $ref: '#/components/schemas/Id'
          description: A unique identifier for the CA.
    CreateFleetResponse:
      type: object
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The Amazon Resource Name (ARN) of the fleet.
    TagValue:
      type: string
      maxLength: 256
    DeleteFleetResponse:
      type: object
      properties: {}
    DescribeAuditStreamConfigurationResponse:
      type: object
      properties:
        AuditStreamArn:
          $ref: '#/components/schemas/AuditStreamArn'
          description: The ARN of the Amazon Kinesis data stream that will receive the audit events.
    DescribeCompanyNetworkConfigurationResponse:
      type: object
      properties:
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: The VPC with connectivity to associated websites.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIds'
          description: The subnets used for X-ENI connections from Amazon WorkLink rendering containers.
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIds'
          description: The security groups associated with access to the provided subnets.
    DescribeDeviceResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/DeviceStatus'
          description: The current state of the device.
        Model:
          $ref: '#/components/schemas/DeviceModel'
          description: The model of the device.
        Manufacturer:
          $ref: '#/components/schemas/DeviceManufacturer'
          description: The manufacturer of the device.
        OperatingSystem:
          $ref: '#/components/schemas/DeviceOperatingSystemName'
          description: The operating system of the device.
        OperatingSystemVersion:
          $ref: '#/components/schemas/DeviceOperatingSystemVersion'
          description: The operating system version of the device.
        PatchLevel:
          $ref: '#/components/schemas/DevicePatchLevel'
          description: The operating system patch level of the device.
        FirstAccessedTime:
          $ref: '#/components/schemas/DateTime'
          description: The date that the device first signed in to Amazon WorkLink.
        LastAccessedTime:
          $ref: '#/components/schemas/DateTime'
          description: The date that the device last accessed Amazon WorkLink.
        Username:
          $ref: '#/components/schemas/Username'
          description: The user name associated with the device.
    DescribeDevicePolicyConfigurationResponse:
      type: object
      properties:
        DeviceCaCertificate:
          $ref: '#/components/schemas/Certificate'
          description: 'The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.'
    DescribeDomainResponse:
      type: object
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name to display.
        CreatedTime:
          $ref: '#/components/schemas/DateTime'
          description: The time that the domain was added.
        DomainStatus:
          $ref: '#/components/schemas/DomainStatus'
          description: The current state for the domain.
        AcmCertificateArn:
          $ref: '#/components/schemas/AcmCertificateArn'
          description: The ARN of an issued ACM certificate that is valid for the domain being associated.
    DescribeFleetMetadataResponse:
      type: object
      properties:
        CreatedTime:
          $ref: '#/components/schemas/DateTime'
          description: The time that the fleet was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/DateTime'
          description: The time that the fleet was last updated.
        FleetName:
          $ref: '#/components/schemas/FleetName'
          description: The name of the fleet.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name to display.
        OptimizeForEndUserLocation:
          $ref: '#/components/schemas/Boolean'
          description: 'The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.'
        CompanyCode:
          $ref: '#/components/schemas/CompanyCode'
          description: The identifier used by users to sign in to the Amazon WorkLink app.
        FleetStatus:
          $ref: '#/components/schemas/FleetStatus'
          description: The current state of the fleet.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags attached to the resource. A tag is a key-value pair.
    DescribeIdentityProviderConfigurationResponse:
      type: object
      properties:
        IdentityProviderType:
          $ref: '#/components/schemas/IdentityProviderType'
          description: The type of identity provider.
        ServiceProviderSamlMetadata:
          $ref: '#/components/schemas/SamlMetadata'
          description: The SAML metadata document uploaded to the user’s identity provider.
        IdentityProviderSamlMetadata:
          $ref: '#/components/schemas/SamlMetadata'
          description: The SAML metadata document provided by the user’s identity provider.
    DescribeWebsiteCertificateAuthorityResponse:
      type: object
      properties:
        Certificate:
          $ref: '#/components/schemas/Certificate'
          description: The root certificate of the certificate authority.
        CreatedTime:
          $ref: '#/components/schemas/DateTime'
          description: The time that the certificate authority was added.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The certificate name to display.
    DisassociateDomainResponse:
      type: object
      properties: {}
    DisassociateWebsiteAuthorizationProviderResponse:
      type: object
      properties: {}
    DisassociateWebsiteCertificateAuthorityResponse:
      type: object
      properties: {}
    ListDevicesResponse:
      type: object
      properties:
        Devices:
          $ref: '#/components/schemas/DeviceSummaryList'
          description: Information about the devices.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    ListDomainsResponse:
      type: object
      properties:
        Domains:
          $ref: '#/components/schemas/DomainSummaryList'
          description: Information about the domains.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    ListFleetsResponse:
      type: object
      properties:
        FleetSummaryList:
          $ref: '#/components/schemas/FleetSummaryList'
          description: The summary list of the fleets.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags attached to the resource. A tag is a key-value pair.
    ListWebsiteAuthorizationProvidersResponse:
      type: object
      properties:
        WebsiteAuthorizationProviders:
          $ref: '#/components/schemas/WebsiteAuthorizationProvidersSummaryList'
          description: The website authorization providers.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    ListWebsiteCertificateAuthoritiesResponse:
      type: object
      properties:
        WebsiteCertificateAuthorities:
          $ref: '#/components/schemas/WebsiteCaSummaryList'
          description: Information about the certificates.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    RestoreDomainAccessResponse:
      type: object
      properties: {}
    RevokeDomainAccessResponse:
      type: object
      properties: {}
    SignOutUserResponse:
      type: object
      properties: {}
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
      minLength: 1
      maxLength: 128
    UpdateAuditStreamConfigurationResponse:
      type: object
      properties: {}
    UpdateCompanyNetworkConfigurationResponse:
      type: object
      properties: {}
    SubnetId:
      type: string
      pattern: '^subnet-([0-9a-f]{8}|[0-9a-f]{17})$'
    SecurityGroupId:
      type: string
      pattern: '^sg-([0-9a-f]{8}|[0-9a-f]{17})$'
    UpdateDevicePolicyConfigurationResponse:
      type: object
      properties: {}
    UpdateDomainMetadataResponse:
      type: object
      properties: {}
    UpdateFleetMetadataResponse:
      type: object
      properties: {}
    UpdateIdentityProviderConfigurationResponse:
      type: object
      properties: {}
    AcmCertificateArn:
      type: string
      pattern: 'arn:[\w+=/,.@-]+:[\w+=/,.@-]+:[\w+=/,.@-]*:[0-9]+:[\w+=,.@-]+(/[\w+=/,.@-]+)*'
    FleetArn:
      type: string
      minLength: 20
      maxLength: 2048
    DomainName:
      type: string
      pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$'
      minLength: 1
      maxLength: 253
    DisplayName:
      type: string
      maxLength: 100
    AssociateDomainRequest:
      type: object
      required:
        - FleetArn
        - DomainName
        - AcmCertificateArn
      title: AssociateDomainRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The Amazon Resource Name (ARN) of the fleet.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The fully qualified domain name (FQDN).
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name to display.
        AcmCertificateArn:
          $ref: '#/components/schemas/AcmCertificateArn'
          description: The ARN of an issued ACM certificate that is valid for the domain being associated.
    AuthorizationProviderType:
      type: string
      enum:
        - SAML
    AssociateWebsiteAuthorizationProviderRequest:
      type: object
      required:
        - FleetArn
        - AuthorizationProviderType
      title: AssociateWebsiteAuthorizationProviderRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        AuthorizationProviderType:
          $ref: '#/components/schemas/AuthorizationProviderType'
          description: The authorization provider type.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The domain name of the authorization provider. This applies only to SAML-based authorization providers.
    Id:
      type: string
      minLength: 1
      maxLength: 256
    Certificate:
      type: string
      pattern: '-{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}(\u000D?\u000A)?'
      minLength: 1
      maxLength: 8192
    AssociateWebsiteCertificateAuthorityRequest:
      type: object
      required:
        - FleetArn
        - Certificate
      title: AssociateWebsiteCertificateAuthorityRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        Certificate:
          $ref: '#/components/schemas/Certificate'
          description: The root certificate of the CA.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The certificate name to display.
    AuditStreamArn:
      type: string
      pattern: '^arn:aws:kinesis:.+:[0-9]{12}:stream/AmazonWorkLink-.*$'
    Boolean:
      type: boolean
    CertificateChain:
      type: string
      pattern: '(-{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}\u000D?\u000A)*-{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}(\u000D?\u000A)?'
      minLength: 1
      maxLength: 32768
    CompanyCode:
      type: string
      minLength: 1
      maxLength: 32
    FleetName:
      type: string
      pattern: '^[a-z0-9](?:[a-z0-9\-]{0,46}[a-z0-9])?$'
      minLength: 1
      maxLength: 48
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CreateFleetRequest:
      type: object
      required:
        - FleetName
      title: CreateFleetRequest
      properties:
        FleetName:
          $ref: '#/components/schemas/FleetName'
          description: A unique name for the fleet.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The fleet name to display.
        OptimizeForEndUserLocation:
          $ref: '#/components/schemas/Boolean'
          description: 'The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.'
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: ' The tags to add to the resource. A tag is a key-value pair.'
    DateTime:
      type: string
      format: date-time
    DeleteFleetRequest:
      type: object
      required:
        - FleetArn
      title: DeleteFleetRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
    DescribeAuditStreamConfigurationRequest:
      type: object
      required:
        - FleetArn
      title: DescribeAuditStreamConfigurationRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
    DescribeCompanyNetworkConfigurationRequest:
      type: object
      required:
        - FleetArn
      title: DescribeCompanyNetworkConfigurationRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
    VpcId:
      type: string
      pattern: '^vpc-([0-9a-f]{8}|[0-9a-f]{17})$'
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    SecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 5
    DescribeDevicePolicyConfigurationRequest:
      type: object
      required:
        - FleetArn
      title: DescribeDevicePolicyConfigurationRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
    DescribeDeviceRequest:
      type: object
      required:
        - FleetArn
        - DeviceId
      title: DescribeDeviceRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        DeviceId:
          $ref: '#/components/schemas/Id'
          description: A unique identifier for a registered user's device.
    DeviceStatus:
      type: string
      enum:
        - ACTIVE
        - SIGNED_OUT
    DeviceModel:
      type: string
      minLength: 1
      maxLength: 256
    DeviceManufacturer:
      type: string
      minLength: 1
      maxLength: 256
    DeviceOperatingSystemName:
      type: string
      minLength: 1
      maxLength: 256
    DeviceOperatingSystemVersion:
      type: string
      minLength: 1
      maxLength: 256
    DevicePatchLevel:
      type: string
      minLength: 1
      maxLength: 256
    Username:
      type: string
      minLength: 1
      maxLength: 256
    DescribeDomainRequest:
      type: object
      required:
        - FleetArn
        - DomainName
      title: DescribeDomainRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
    DomainStatus:
      type: string
      enum:
        - PENDING_VALIDATION
        - ASSOCIATING
        - ACTIVE
        - INACTIVE
        - DISASSOCIATING
        - DISASSOCIATED
        - FAILED_TO_ASSOCIATE
        - FAILED_TO_DISASSOCIATE
    DescribeFleetMetadataRequest:
      type: object
      required:
        - FleetArn
      title: DescribeFleetMetadataRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The Amazon Resource Name (ARN) of the fleet.
    FleetStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - DELETED
        - FAILED_TO_CREATE
        - FAILED_TO_DELETE
    DescribeIdentityProviderConfigurationRequest:
      type: object
      required:
        - FleetArn
      title: DescribeIdentityProviderConfigurationRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
    IdentityProviderType:
      type: string
      enum:
        - SAML
    SamlMetadata:
      type: string
      minLength: 1
      maxLength: 204800
    DescribeWebsiteCertificateAuthorityRequest:
      type: object
      required:
        - FleetArn
        - WebsiteCaId
      title: DescribeWebsiteCertificateAuthorityRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        WebsiteCaId:
          $ref: '#/components/schemas/Id'
          description: A unique identifier for the certificate authority.
    DeviceSummary:
      type: object
      properties:
        DeviceId:
          $ref: '#/components/schemas/Id'
          description: The ID of the device.
        DeviceStatus:
          $ref: '#/components/schemas/DeviceStatus'
          description: The status of the device.
      description: The summary of devices.
    DeviceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DeviceSummary'
    DisassociateDomainRequest:
      type: object
      required:
        - FleetArn
        - DomainName
      title: DisassociateDomainRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
    DisassociateWebsiteAuthorizationProviderRequest:
      type: object
      required:
        - FleetArn
        - AuthorizationProviderId
      title: DisassociateWebsiteAuthorizationProviderRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        AuthorizationProviderId:
          $ref: '#/components/schemas/Id'
          description: A unique identifier for the authorization provider.
    DisassociateWebsiteCertificateAuthorityRequest:
      type: object
      required:
        - FleetArn
        - WebsiteCaId
      title: DisassociateWebsiteCertificateAuthorityRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        WebsiteCaId:
          $ref: '#/components/schemas/Id'
          description: A unique identifier for the CA.
    DomainSummary:
      type: object
      required:
        - DomainName
        - CreatedTime
        - DomainStatus
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name to display.
        CreatedTime:
          $ref: '#/components/schemas/DateTime'
          description: The time that the domain was created.
        DomainStatus:
          $ref: '#/components/schemas/DomainStatus'
          description: The status of the domain.
      description: The summary of the domain.
    DomainSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DomainSummary'
    FleetSummary:
      type: object
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The Amazon Resource Name (ARN) of the fleet.
        CreatedTime:
          $ref: '#/components/schemas/DateTime'
          description: The time when the fleet was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/DateTime'
          description: The time when the fleet was last updated.
        FleetName:
          $ref: '#/components/schemas/FleetName'
          description: The name of the fleet.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name of the fleet to display.
        CompanyCode:
          $ref: '#/components/schemas/CompanyCode'
          description: The identifier used by users to sign into the Amazon WorkLink app.
        FleetStatus:
          $ref: '#/components/schemas/FleetStatus'
          description: The status of the fleet.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags attached to the resource. A tag is a key-value pair.
      description: The summary of the fleet.
    FleetSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/FleetSummary'
    NextToken:
      type: string
      pattern: '[\w\-]+'
      minLength: 1
      maxLength: 4096
    MaxResults:
      type: integer
      minimum: 1
    ListDevicesRequest:
      type: object
      required:
        - FleetArn
      title: ListDevicesRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
    ListDomainsRequest:
      type: object
      required:
        - FleetArn
      title: ListDomainsRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
    ListFleetsRequest:
      type: object
      title: ListFleetsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListWebsiteAuthorizationProvidersRequest:
      type: object
      required:
        - FleetArn
      title: ListWebsiteAuthorizationProvidersRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
    WebsiteAuthorizationProvidersSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/WebsiteAuthorizationProviderSummary'
    ListWebsiteCertificateAuthoritiesRequest:
      type: object
      required:
        - FleetArn
      title: ListWebsiteCertificateAuthoritiesRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    WebsiteCaSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/WebsiteCaSummary'
    RestoreDomainAccessRequest:
      type: object
      required:
        - FleetArn
        - DomainName
      title: RestoreDomainAccessRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
    RevokeDomainAccessRequest:
      type: object
      required:
        - FleetArn
        - DomainName
      title: RevokeDomainAccessRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
    SignOutUserRequest:
      type: object
      required:
        - FleetArn
        - Username
      title: SignOutUserRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        Username:
          $ref: '#/components/schemas/Username'
          description: The name of the user.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags to add to the resource. A tag is a key-value pair.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateAuditStreamConfigurationRequest:
      type: object
      required:
        - FleetArn
      title: UpdateAuditStreamConfigurationRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        AuditStreamArn:
          $ref: '#/components/schemas/AuditStreamArn'
          description: The ARN of the Amazon Kinesis data stream that receives the audit events.
    UpdateCompanyNetworkConfigurationRequest:
      type: object
      required:
        - FleetArn
        - VpcId
        - SubnetIds
        - SecurityGroupIds
      title: UpdateCompanyNetworkConfigurationRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: The VPC with connectivity to associated websites.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIds'
          description: The subnets used for X-ENI connections from Amazon WorkLink rendering containers.
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIds'
          description: The security groups associated with access to the provided subnets.
    UpdateDevicePolicyConfigurationRequest:
      type: object
      required:
        - FleetArn
      title: UpdateDevicePolicyConfigurationRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        DeviceCaCertificate:
          $ref: '#/components/schemas/CertificateChain'
          description: 'The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.'
    UpdateDomainMetadataRequest:
      type: object
      required:
        - FleetArn
        - DomainName
      title: UpdateDomainMetadataRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name to display.
    UpdateFleetMetadataRequest:
      type: object
      required:
        - FleetArn
      title: UpdateFleetMetadataRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The fleet name to display. The existing DisplayName is unset if null is passed.
        OptimizeForEndUserLocation:
          $ref: '#/components/schemas/Boolean'
          description: 'The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.'
    UpdateIdentityProviderConfigurationRequest:
      type: object
      required:
        - FleetArn
        - IdentityProviderType
      title: UpdateIdentityProviderConfigurationRequest
      properties:
        FleetArn:
          $ref: '#/components/schemas/FleetArn'
          description: The ARN of the fleet.
        IdentityProviderType:
          $ref: '#/components/schemas/IdentityProviderType'
          description: The type of identity provider.
        IdentityProviderSamlMetadata:
          $ref: '#/components/schemas/SamlMetadata'
          description: The SAML metadata document provided by the customer’s identity provider. The existing IdentityProviderSamlMetadata is unset if null is passed.
    WebsiteAuthorizationProviderSummary:
      type: object
      required:
        - AuthorizationProviderType
      properties:
        AuthorizationProviderId:
          $ref: '#/components/schemas/Id'
          description: A unique identifier for the authorization provider.
        AuthorizationProviderType:
          $ref: '#/components/schemas/AuthorizationProviderType'
          description: The authorization provider type.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The domain name of the authorization provider. This applies only to SAML-based authorization providers.
        CreatedTime:
          $ref: '#/components/schemas/DateTime'
          description: The time of creation.
      description: The summary of the website authorization provider.
    WebsiteCaSummary:
      type: object
      properties:
        WebsiteCaId:
          $ref: '#/components/schemas/Id'
          description: A unique identifier for the CA.
        CreatedTime:
          $ref: '#/components/schemas/DateTime'
          description: The time when the CA was added.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name to display.
      description: The summary of the certificate authority (CA).
security:
  - hmac: []
