openapi: 3.0.0
info:
  version: '2018-01-12'
  x-release: v4
  title: Amazon Data Lifecycle Manager
  description: '<fullname>Amazon Data Lifecycle Manager</fullname> <p>With Amazon Data Lifecycle Manager, you can manage the lifecycle of your AWS resources. You create lifecycle policies, which are used to automate operations on the specified resources.</p> <p>Amazon DLM supports Amazon EBS volumes and snapshots. For information about using Amazon DLM with Amazon EBS, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html">Automating the Amazon EBS Snapshot Lifecycle</a> in the <i>Amazon EC2 User Guide</i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: dlm
  x-aws-signingName: dlm
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dlm-2018-01-12.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/dlm/'
servers:
  - url: 'http://dlm.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon DLM multi-region endpoint
  - url: 'https://dlm.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon DLM multi-region endpoint
  - url: 'http://dlm.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon DLM endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://dlm.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon DLM endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /policies:
    post:
      operationId: CreateLifecyclePolicy
      description: Creates a policy to manage the lifecycle of the specified AWS resources. You can create up to 100 lifecycle policies.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLifecyclePolicyResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ExecutionRoleArn
                - Description
                - State
                - PolicyDetails
              properties:
                ExecutionRoleArn:
                  description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
                  type: string
                  pattern: 'arn:aws(-[a-z]{1,3}){0,2}:iam::\d+:role/.*'
                  minLength: 0
                  maxLength: 2048
                Description:
                  description: 'A description of the lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.'
                  type: string
                  pattern: '[0-9A-Za-z _-]+'
                  minLength: 0
                  maxLength: 500
                State:
                  description: The desired activation state of the lifecycle policy after creation.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                PolicyDetails:
                  description: Specifies the configuration of a lifecycle policy.
                  type: object
                  properties:
                    PolicyType:
                      $ref: '#/components/schemas/PolicyTypeValues'
                      description: <p>The valid target resource types and actions a policy can manage. Specify <code>EBS_SNAPSHOT_MANAGEMENT</code> to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify <code>IMAGE_MANAGEMENT</code> to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify <code>EVENT_BASED_POLICY </code> to create an event-based policy that performs specific actions when a defined event occurs in your AWS account.</p> <p>The default is <code>EBS_SNAPSHOT_MANAGEMENT</code>.</p>
                    ResourceTypes:
                      $ref: '#/components/schemas/ResourceTypeValuesList'
                      description: '<p>The target resource type for snapshot and AMI lifecycle policies. Use <code>VOLUME </code>to create snapshots of individual volumes or use <code>INSTANCE</code> to create multi-volume snapshots from the volumes for an instance.</p> <p>This parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.</p>'
                    ResourceLocations:
                      $ref: '#/components/schemas/ResourceLocationList'
                      description: '<p>The location of the resources to backup. If the source resources are located in an AWS Region, specify <code>CLOUD</code>. If the source resources are located on an AWS Outpost in your account, specify <code>OUTPOST</code>. </p> <p>If you specify <code>OUTPOST</code>, Amazon Data Lifecycle Manager backs up all resources of the specified type with matching target tags across all of the Outposts in your account.</p>'
                    TargetTags:
                      $ref: '#/components/schemas/TargetTagList'
                      description: '<p>The single tag that identifies targeted resources for this policy.</p> <p>This parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.</p>'
                    Schedules:
                      $ref: '#/components/schemas/ScheduleList'
                      description: '<p>The schedules of policy-defined actions for snapshot and AMI lifecycle policies. A policy can have up to four schedulesâ€”one mandatory schedule and up to three optional schedules.</p> <p>This parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.</p>'
                    Parameters:
                      $ref: '#/components/schemas/Parameters'
                      description: '<p>A set of optional parameters for snapshot and AMI lifecycle policies. </p> <p>This parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.</p>'
                    EventSource:
                      $ref: '#/components/schemas/EventSource'
                      description: '<p>The event that triggers the event-based policy. </p> <p>This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter.</p>'
                    Actions:
                      $ref: '#/components/schemas/ActionList'
                      description: '<p>The actions to be performed when the event-based policy is triggered. You can specify only one action per policy.</p> <p>This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter.</p>'
                Tags:
                  description: The tags to apply to the lifecycle policy during creation.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLifecyclePolicies
      description: '<p>Gets summary information about all or the specified data lifecycle policies.</p> <p>To get complete information about a policy, use <a>GetLifecyclePolicy</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLifecyclePoliciesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: policyIds
          in: query
          required: false
          description: The identifiers of the data lifecycle policies.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PolicyId'
        - name: state
          in: query
          required: false
          description: The activation state.
          schema:
            type: string
            enum:
              - ENABLED
              - DISABLED
              - ERROR
        - name: resourceTypes
          in: query
          required: false
          description: The resource type.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResourceTypeValues'
            minItems: 1
            maxItems: 1
        - name: targetTags
          in: query
          required: false
          description: <p>The target tag for a policy.</p> <p>Tags are strings in the format <code>key=value</code>.</p>
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagFilter'
            minItems: 1
            maxItems: 50
        - name: tagsToAdd
          in: query
          required: false
          description: <p>The tags to add to objects created by the policy.</p> <p>Tags are strings in the format <code>key=value</code>.</p> <p>These user-defined tags are added in addition to the AWS-added lifecycle tags.</p>
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagFilter'
            minItems: 0
            maxItems: 50
  '/policies/{policyId}/':
    delete:
      operationId: DeleteLifecyclePolicy
      description: Deletes the specified lifecycle policy and halts the automated operations that the policy specified.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLifecyclePolicyResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: policyId
          in: path
          required: true
          description: The identifier of the lifecycle policy.
          schema:
            type: string
            pattern: 'policy-[A-Za-z0-9]+'
            minLength: 0
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLifecyclePolicy
      description: Gets detailed information about the specified lifecycle policy.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLifecyclePolicyResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: policyId
          in: path
          required: true
          description: The identifier of the lifecycle policy.
          schema:
            type: string
            pattern: 'policy-[A-Za-z0-9]+'
            minLength: 0
            maxLength: 64
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: Lists the tags for the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\d+:policy/[0-9A-Za-z_-]{1,128}$'
            minLength: 0
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Adds the specified tags to the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\d+:policy/[0-9A-Za-z_-]{1,128}$'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes the specified tags from the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\d+:policy/[0-9A-Za-z_-]{1,128}$'
            minLength: 0
            maxLength: 2048
        - name: tagKeys
          in: query
          required: true
          description: The tag keys.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/policies/{policyId}':
    patch:
      operationId: UpdateLifecyclePolicy
      description: Updates the specified lifecycle policy.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLifecyclePolicyResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: policyId
          in: path
          required: true
          description: The identifier of the lifecycle policy.
          schema:
            type: string
            pattern: 'policy-[A-Za-z0-9]+'
            minLength: 0
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExecutionRoleArn:
                  description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
                  type: string
                  pattern: 'arn:aws(-[a-z]{1,3}){0,2}:iam::\d+:role/.*'
                  minLength: 0
                  maxLength: 2048
                State:
                  description: The desired activation state of the lifecycle policy after creation.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                Description:
                  description: A description of the lifecycle policy.
                  type: string
                  pattern: '[0-9A-Za-z _-]+'
                  minLength: 0
                  maxLength: 500
                PolicyDetails:
                  description: Specifies the configuration of a lifecycle policy.
                  type: object
                  properties:
                    PolicyType:
                      $ref: '#/components/schemas/PolicyTypeValues'
                      description: <p>The valid target resource types and actions a policy can manage. Specify <code>EBS_SNAPSHOT_MANAGEMENT</code> to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify <code>IMAGE_MANAGEMENT</code> to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify <code>EVENT_BASED_POLICY </code> to create an event-based policy that performs specific actions when a defined event occurs in your AWS account.</p> <p>The default is <code>EBS_SNAPSHOT_MANAGEMENT</code>.</p>
                    ResourceTypes:
                      $ref: '#/components/schemas/ResourceTypeValuesList'
                      description: '<p>The target resource type for snapshot and AMI lifecycle policies. Use <code>VOLUME </code>to create snapshots of individual volumes or use <code>INSTANCE</code> to create multi-volume snapshots from the volumes for an instance.</p> <p>This parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.</p>'
                    ResourceLocations:
                      $ref: '#/components/schemas/ResourceLocationList'
                      description: '<p>The location of the resources to backup. If the source resources are located in an AWS Region, specify <code>CLOUD</code>. If the source resources are located on an AWS Outpost in your account, specify <code>OUTPOST</code>. </p> <p>If you specify <code>OUTPOST</code>, Amazon Data Lifecycle Manager backs up all resources of the specified type with matching target tags across all of the Outposts in your account.</p>'
                    TargetTags:
                      $ref: '#/components/schemas/TargetTagList'
                      description: '<p>The single tag that identifies targeted resources for this policy.</p> <p>This parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.</p>'
                    Schedules:
                      $ref: '#/components/schemas/ScheduleList'
                      description: '<p>The schedules of policy-defined actions for snapshot and AMI lifecycle policies. A policy can have up to four schedulesâ€”one mandatory schedule and up to three optional schedules.</p> <p>This parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.</p>'
                    Parameters:
                      $ref: '#/components/schemas/Parameters'
                      description: '<p>A set of optional parameters for snapshot and AMI lifecycle policies. </p> <p>This parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.</p>'
                    EventSource:
                      $ref: '#/components/schemas/EventSource'
                      description: '<p>The event that triggers the event-based policy. </p> <p>This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter.</p>'
                    Actions:
                      $ref: '#/components/schemas/ActionList'
                      description: '<p>The actions to be performed when the event-based policy is triggered. You can specify only one action per policy.</p> <p>This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter.</p>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateLifecyclePolicyResponse:
      type: object
      properties:
        PolicyId:
          $ref: '#/components/schemas/PolicyId'
          description: The identifier of the lifecycle policy.
    PolicyTypeValues:
      type: string
      enum:
        - EBS_SNAPSHOT_MANAGEMENT
        - IMAGE_MANAGEMENT
        - EVENT_BASED_POLICY
    ResourceTypeValuesList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceTypeValues'
      minItems: 1
      maxItems: 1
    ResourceLocationList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceLocationValues'
      minItems: 1
      maxItems: 1
    TargetTagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 1
      maxItems: 50
    ScheduleList:
      type: array
      items:
        $ref: '#/components/schemas/Schedule'
      minItems: 1
      maxItems: 4
    Parameters:
      type: object
      properties:
        ExcludeBootVolume:
          $ref: '#/components/schemas/ExcludeBootVolume'
          description: '[EBS Snapshot Management â€“ Instance policies only] Indicates whether to exclude the root volume from snapshots created using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshots.html">CreateSnapshots</a>. The default is false.'
        NoReboot:
          $ref: '#/components/schemas/NoReboot'
          description: Applies to AMI lifecycle policies only. Indicates whether targeted instances are rebooted when the lifecycle policy runs. <code>true</code> indicates that targeted instances are not rebooted when the policy runs. <code>false</code> indicates that target instances are rebooted when the policy runs. The default is <code>true</code> (instances are not rebooted).
      description: Specifies optional parameters to add to a policy. The set of valid parameters depends on the combination of policy type and resource type.
    EventSource:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: '#/components/schemas/EventSourceValues'
          description: The source of the event. Currently only managed AWS CloudWatch Events rules are supported.
        Parameters:
          $ref: '#/components/schemas/EventParameters'
          description: Information about the event.
      description: Specifies an event that triggers an event-based policy.
    ActionList:
      type: array
      items:
        $ref: '#/components/schemas/Action'
      minItems: 1
      maxItems: 1
    TagValue:
      type: string
      pattern: '[\p{all}]*'
      maxLength: 256
    InvalidRequestException: {}
    LimitExceededException: {}
    InternalServerException: {}
    DeleteLifecyclePolicyResponse:
      type: object
      properties: {}
    ResourceNotFoundException: {}
    GetLifecyclePoliciesResponse:
      type: object
      properties:
        Policies:
          $ref: '#/components/schemas/LifecyclePolicySummaryList'
          description: Summary information about the lifecycle policies.
    PolicyId:
      type: string
      pattern: 'policy-[A-Za-z0-9]+'
      minLength: 0
      maxLength: 64
    ResourceTypeValues:
      type: string
      enum:
        - VOLUME
        - INSTANCE
    TagFilter:
      type: string
      pattern: '[\p{all}]*'
      minLength: 0
      maxLength: 256
    GetLifecyclePolicyResponse:
      type: object
      properties:
        Policy:
          $ref: '#/components/schemas/LifecyclePolicy'
          description: Detailed information about the lifecycle policy.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Information about the tags.
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
      minLength: 1
      maxLength: 128
    UpdateLifecyclePolicyResponse:
      type: object
      properties: {}
    ActionName:
      type: string
      pattern: '[0-9A-Za-z _-]+'
      minLength: 0
      maxLength: 120
    CrossRegionCopyActionList:
      type: array
      items:
        $ref: '#/components/schemas/CrossRegionCopyAction'
      minItems: 0
      maxItems: 3
    Action:
      type: object
      required:
        - Name
        - CrossRegionCopy
      properties:
        Name:
          $ref: '#/components/schemas/ActionName'
          description: A descriptive name for the action.
        CrossRegionCopy:
          $ref: '#/components/schemas/CrossRegionCopyActionList'
          description: The rule for copying shared snapshots across Regions.
      description: Specifies an action for an event-based policy.
    AvailabilityZone:
      type: string
      pattern: '([a-z]+-){2,3}\d[a-z]'
      minLength: 0
      maxLength: 16
    AvailabilityZoneList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
      minItems: 1
      maxItems: 10
    AwsAccountId:
      type: string
      pattern: '^[0-9]{12}$'
      minLength: 12
      maxLength: 12
    CmkArn:
      type: string
      pattern: 'arn:aws(-[a-z]{1,3}){0,2}:kms:([a-z]+-){2,3}\d:\d+:key/.*'
      minLength: 0
      maxLength: 2048
    CopyTags:
      type: boolean
    CopyTagsNullable:
      type: boolean
    Count:
      type: integer
      minimum: 1
      maximum: 1000
    ExecutionRoleArn:
      type: string
      pattern: 'arn:aws(-[a-z]{1,3}){0,2}:iam::\d+:role/.*'
      minLength: 0
      maxLength: 2048
    PolicyDescription:
      type: string
      pattern: '[0-9A-Za-z _-]+'
      minLength: 0
      maxLength: 500
    SettablePolicyStateValues:
      type: string
      enum:
        - ENABLED
        - DISABLED
    PolicyDetails:
      type: object
      properties:
        PolicyType:
          $ref: '#/components/schemas/PolicyTypeValues'
          description: <p>The valid target resource types and actions a policy can manage. Specify <code>EBS_SNAPSHOT_MANAGEMENT</code> to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify <code>IMAGE_MANAGEMENT</code> to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify <code>EVENT_BASED_POLICY </code> to create an event-based policy that performs specific actions when a defined event occurs in your AWS account.</p> <p>The default is <code>EBS_SNAPSHOT_MANAGEMENT</code>.</p>
        ResourceTypes:
          $ref: '#/components/schemas/ResourceTypeValuesList'
          description: '<p>The target resource type for snapshot and AMI lifecycle policies. Use <code>VOLUME </code>to create snapshots of individual volumes or use <code>INSTANCE</code> to create multi-volume snapshots from the volumes for an instance.</p> <p>This parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.</p>'
        ResourceLocations:
          $ref: '#/components/schemas/ResourceLocationList'
          description: '<p>The location of the resources to backup. If the source resources are located in an AWS Region, specify <code>CLOUD</code>. If the source resources are located on an AWS Outpost in your account, specify <code>OUTPOST</code>. </p> <p>If you specify <code>OUTPOST</code>, Amazon Data Lifecycle Manager backs up all resources of the specified type with matching target tags across all of the Outposts in your account.</p>'
        TargetTags:
          $ref: '#/components/schemas/TargetTagList'
          description: '<p>The single tag that identifies targeted resources for this policy.</p> <p>This parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.</p>'
        Schedules:
          $ref: '#/components/schemas/ScheduleList'
          description: '<p>The schedules of policy-defined actions for snapshot and AMI lifecycle policies. A policy can have up to four schedulesâ€”one mandatory schedule and up to three optional schedules.</p> <p>This parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.</p>'
        Parameters:
          $ref: '#/components/schemas/Parameters'
          description: '<p>A set of optional parameters for snapshot and AMI lifecycle policies. </p> <p>This parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.</p>'
        EventSource:
          $ref: '#/components/schemas/EventSource'
          description: '<p>The event that triggers the event-based policy. </p> <p>This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter.</p>'
        Actions:
          $ref: '#/components/schemas/ActionList'
          description: '<p>The actions to be performed when the event-based policy is triggered. You can specify only one action per policy.</p> <p>This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter.</p>'
      description: Specifies the configuration of a lifecycle policy.
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 200
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CreateLifecyclePolicyRequest:
      type: object
      required:
        - ExecutionRoleArn
        - Description
        - State
        - PolicyDetails
      title: CreateLifecyclePolicyRequest
      properties:
        ExecutionRoleArn:
          $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
        Description:
          $ref: '#/components/schemas/PolicyDescription'
          description: 'A description of the lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.'
        State:
          $ref: '#/components/schemas/SettablePolicyStateValues'
          description: The desired activation state of the lifecycle policy after creation.
        PolicyDetails:
          $ref: '#/components/schemas/PolicyDetails'
          description: The configuration details of the lifecycle policy.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags to apply to the lifecycle policy during creation.
    LocationValues:
      type: string
      enum:
        - CLOUD
        - OUTPOST_LOCAL
    Interval:
      type: integer
      minimum: 1
    IntervalUnitValues:
      type: string
      enum:
        - HOURS
    TimesList:
      type: array
      items:
        $ref: '#/components/schemas/Time'
      maxItems: 1
    CronExpression:
      type: string
      pattern: 'cron\([^\n]{11,100}\)'
      minLength: 17
      maxLength: 106
    CreateRule:
      type: object
      properties:
        Location:
          $ref: '#/components/schemas/LocationValues'
          description: '<p>Specifies the destination for snapshots created by the policy. To create snapshots in the same Region as the source resource, specify <code>CLOUD</code>. To create snapshots on the same Outpost as the source resource, specify <code>OUTPOST_LOCAL</code>. If you omit this parameter, <code>CLOUD</code> is used by default.</p> <p>If the policy targets resources in an AWS Region, then you must create snapshots in the same Region as the source resource. </p> <p>If the policy targets resources on an Outpost, then you can create snapshots on the same Outpost as the source resource, or in the Region of that Outpost.</p>'
        Interval:
          $ref: '#/components/schemas/Interval'
          description: 'The interval between snapshots. The supported values are 1, 2, 3, 4, 6, 8, 12, and 24.'
        IntervalUnit:
          $ref: '#/components/schemas/IntervalUnitValues'
          description: The interval unit.
        Times:
          $ref: '#/components/schemas/TimesList'
          description: '<p>The time, in UTC, to start the operation. The supported format is hh:mm.</p> <p>The operation occurs within a one-hour window following the specified time. If you do not specify a time, Amazon DLM selects a time within the next 24 hours.</p>'
        CronExpression:
          $ref: '#/components/schemas/CronExpression'
          description: 'The schedule, as a Cron expression. The schedule interval must be between 1 hour and 1 year. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions">Cron expressions</a> in the <i>Amazon CloudWatch User Guide</i>.'
      description: '<p>Specifies when to create snapshots of EBS volumes.</p> <p>You must specify either a Cron expression or an interval, interval unit, and start time. You cannot specify both.</p>'
    Target:
      type: string
      pattern: '^[\w:\-\/\*]+$'
      minLength: 0
      maxLength: 2048
    EncryptionConfiguration:
      type: object
      required:
        - Encrypted
      properties:
        Encrypted:
          $ref: '#/components/schemas/Encrypted'
          description: 'To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.'
        CmkArn:
          $ref: '#/components/schemas/CmkArn'
          description: 'The Amazon Resource Name (ARN) of the AWS KMS customer master key (CMK) to use for EBS encryption. If this parameter is not specified, your AWS managed CMK for EBS is used.'
      description: Specifies the encryption settings for shared snapshots that are copied across Regions.
    CrossRegionCopyRetainRule:
      type: object
      properties:
        Interval:
          $ref: '#/components/schemas/Interval'
          description: 'The amount of time to retain each snapshot. The maximum is 100 years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.'
        IntervalUnit:
          $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time for time-based retention.
      description: Specifies the retention rule for cross-Region snapshot copies.
    CrossRegionCopyAction:
      type: object
      required:
        - Target
        - EncryptionConfiguration
      properties:
        Target:
          $ref: '#/components/schemas/Target'
          description: The target Region.
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
          description: The encryption settings for the copied snapshot.
        RetainRule:
          $ref: '#/components/schemas/CrossRegionCopyRetainRule'
      description: Specifies a rule for copying shared snapshots across Regions.
    RetentionIntervalUnitValues:
      type: string
      enum:
        - DAYS
        - WEEKS
        - MONTHS
        - YEARS
    TargetRegion:
      type: string
      pattern: '([a-z]+-){2,3}\d'
      minLength: 0
      maxLength: 16
    Encrypted:
      type: boolean
    CrossRegionCopyRule:
      type: object
      required:
        - Encrypted
      properties:
        TargetRegion:
          $ref: '#/components/schemas/TargetRegion'
          description: '<p>The target Region for the snapshot copies.</p> <p>If you specify a target Region, you must omit <b>Target</b>. You cannot specify a target Region and a target Outpost in the same rule.</p>'
        Target:
          $ref: '#/components/schemas/Target'
          description: '<p>The Amazon Resource Name (ARN) of the target AWS Outpost for the snapshot copies.</p> <p>If you specify an ARN, you must omit <b>TargetRegion</b>. You cannot specify a target Region and a target Outpost in the same rule.</p>'
        Encrypted:
          $ref: '#/components/schemas/Encrypted'
          description: 'To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or if encryption by default is not enabled.'
        CmkArn:
          $ref: '#/components/schemas/CmkArn'
          description: 'The Amazon Resource Name (ARN) of the AWS KMS customer master key (CMK) to use for EBS encryption. If this parameter is not specified, your AWS managed CMK for EBS is used.'
        CopyTags:
          $ref: '#/components/schemas/CopyTagsNullable'
          description: Copy all user-defined tags from the source snapshot to the copied snapshot.
        RetainRule:
          $ref: '#/components/schemas/CrossRegionCopyRetainRule'
          description: The retention rule.
      description: Specifies a rule for cross-Region snapshot copies.
    CrossRegionCopyRules:
      type: array
      items:
        $ref: '#/components/schemas/CrossRegionCopyRule'
      minItems: 0
      maxItems: 3
    DeleteLifecyclePolicyRequest:
      type: object
      title: DeleteLifecyclePolicyRequest
      properties: {}
    DescriptionRegex:
      type: string
      pattern: '[\p{all}]*'
      minLength: 0
      maxLength: 1000
    EventTypeValues:
      type: string
      enum:
        - shareSnapshot
    SnapshotOwnerList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAccountId'
      minItems: 0
      maxItems: 50
    EventParameters:
      type: object
      required:
        - EventType
        - SnapshotOwner
        - DescriptionRegex
      properties:
        EventType:
          $ref: '#/components/schemas/EventTypeValues'
          description: 'The type of event. Currently, only snapshot sharing events are supported.'
        SnapshotOwner:
          $ref: '#/components/schemas/SnapshotOwnerList'
          description: The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.
        DescriptionRegex:
          $ref: '#/components/schemas/DescriptionRegex'
          description: '<p>The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.</p> <p>For example, specifying <code>^.*Created for policy: policy-1234567890abcdef0.*$</code> configures the policy to run only if snapshots created by policy <code>policy-1234567890abcdef0</code> are shared with your account.</p>'
      description: Specifies an event that triggers an event-based policy.
    EventSourceValues:
      type: string
      enum:
        - MANAGED_CWE
    ExcludeBootVolume:
      type: boolean
    FastRestoreRule:
      type: object
      required:
        - AvailabilityZones
      properties:
        Count:
          $ref: '#/components/schemas/Count'
          description: The number of snapshots to be enabled with fast snapshot restore.
        Interval:
          $ref: '#/components/schemas/Interval'
          description: 'The amount of time to enable fast snapshot restore. The maximum is 100 years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.'
        IntervalUnit:
          $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time for enabling fast snapshot restore.
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZoneList'
          description: The Availability Zones in which to enable fast snapshot restore.
      description: Specifies a rule for enabling fast snapshot restore. You can enable fast snapshot restore based on either a count or a time interval.
    PolicyIdList:
      type: array
      items:
        $ref: '#/components/schemas/PolicyId'
    GettablePolicyStateValues:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - ERROR
    TargetTagsFilterList:
      type: array
      items:
        $ref: '#/components/schemas/TagFilter'
      minItems: 1
      maxItems: 50
    TagsToAddFilterList:
      type: array
      items:
        $ref: '#/components/schemas/TagFilter'
      minItems: 0
      maxItems: 50
    GetLifecyclePoliciesRequest:
      type: object
      title: GetLifecyclePoliciesRequest
      properties: {}
    LifecyclePolicySummaryList:
      type: array
      items:
        $ref: '#/components/schemas/LifecyclePolicySummary'
    GetLifecyclePolicyRequest:
      type: object
      title: GetLifecyclePolicyRequest
      properties: {}
    LifecyclePolicy:
      type: object
      properties:
        PolicyId:
          $ref: '#/components/schemas/PolicyId'
          description: The identifier of the lifecycle policy.
        Description:
          $ref: '#/components/schemas/PolicyDescription'
          description: The description of the lifecycle policy.
        State:
          $ref: '#/components/schemas/GettablePolicyStateValues'
          description: The activation state of the lifecycle policy.
        StatusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: The description of the status.
        ExecutionRoleArn:
          $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
        DateCreated:
          $ref: '#/components/schemas/Timestamp'
          description: The local date and time when the lifecycle policy was created.
        DateModified:
          $ref: '#/components/schemas/Timestamp'
          description: The local date and time when the lifecycle policy was last modified.
        PolicyDetails:
          $ref: '#/components/schemas/PolicyDetails'
          description: The configuration of the lifecycle policy
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags.
        PolicyArn:
          $ref: '#/components/schemas/PolicyArn'
          description: The Amazon Resource Name (ARN) of the policy.
      description: Detailed information about a lifecycle policy.
    StatusMessage:
      type: string
      pattern: '[\p{all}]*'
      minLength: 0
      maxLength: 500
    Timestamp:
      type: string
      format: date-time
    PolicyArn:
      type: string
      pattern: '^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\d+:policy/[0-9A-Za-z_-]{1,128}$'
      minLength: 0
      maxLength: 2048
    LifecyclePolicySummary:
      type: object
      properties:
        PolicyId:
          $ref: '#/components/schemas/PolicyId'
          description: The identifier of the lifecycle policy.
        Description:
          $ref: '#/components/schemas/PolicyDescription'
          description: The description of the lifecycle policy.
        State:
          $ref: '#/components/schemas/GettablePolicyStateValues'
          description: The activation state of the lifecycle policy.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags.
        PolicyType:
          $ref: '#/components/schemas/PolicyTypeValues'
          description: The type of policy. <code>EBS_SNAPSHOT_MANAGEMENT</code> indicates that the policy manages the lifecycle of Amazon EBS snapshots. <code>IMAGE_MANAGEMENT</code> indicates that the policy manages the lifecycle of EBS-backed AMIs.
      description: Summary information about a lifecycle policy.
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    NoReboot:
      type: boolean
    ResourceLocationValues:
      type: string
      enum:
        - CLOUD
        - OUTPOST
    RetainRule:
      type: object
      properties:
        Count:
          $ref: '#/components/schemas/Count'
          description: 'The number of snapshots to retain for each volume, up to a maximum of 1000.'
        Interval:
          $ref: '#/components/schemas/Interval'
          description: 'The amount of time to retain each snapshot. The maximum is 100 years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.'
        IntervalUnit:
          $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time for time-based retention.
      description: Specifies the retention rule for a lifecycle policy. You can retain snapshots based on either a count or a time interval.
    ScheduleName:
      type: string
      pattern: '[0-9A-Za-z _-]+'
      minLength: 0
      maxLength: 120
    TagsToAddList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 45
    VariableTagsList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 45
    ShareRules:
      type: array
      items:
        $ref: '#/components/schemas/ShareRule'
      minItems: 0
      maxItems: 1
    Schedule:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule.
        CopyTags:
          $ref: '#/components/schemas/CopyTags'
          description: Copy all user-defined tags on a source volume to snapshots of the volume created by this policy.
        TagsToAdd:
          $ref: '#/components/schemas/TagsToAddList'
          description: The tags to apply to policy-created resources. These user-defined tags are in addition to the AWS-added lifecycle tags.
        VariableTags:
          $ref: '#/components/schemas/VariableTagsList'
          description: 'A collection of key/value pairs with values determined dynamically when the policy is executed. Keys may be any valid Amazon EC2 tag key. Values must be in one of the two following formats: <code>$(instance-id)</code> or <code>$(timestamp)</code>. Variable tags are only valid for EBS Snapshot Management â€“ Instance policies.'
        CreateRule:
          $ref: '#/components/schemas/CreateRule'
          description: The creation rule.
        RetainRule:
          $ref: '#/components/schemas/RetainRule'
          description: The retention rule.
        FastRestoreRule:
          $ref: '#/components/schemas/FastRestoreRule'
          description: The rule for enabling fast snapshot restore.
        CrossRegionCopyRules:
          $ref: '#/components/schemas/CrossRegionCopyRules'
          description: '<p>The rule for cross-Region snapshot copies.</p> <p>You can only specify cross-Region copy rules for policies that create snapshots in a Region. If the policy creates snapshots on an Outpost, then you cannot copy the snapshots to a Region or to an Outpost. If the policy creates snapshots in a Region, then snapshots can be copied to up to three Regions or Outposts.</p>'
        ShareRules:
          $ref: '#/components/schemas/ShareRules'
          description: The rule for sharing snapshots with other AWS accounts.
      description: Specifies a backup schedule for a snapshot or AMI lifecycle policy.
    ShareTargetAccountList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAccountId'
      minItems: 1
    ShareRule:
      type: object
      required:
        - TargetAccounts
      properties:
        TargetAccounts:
          $ref: '#/components/schemas/ShareTargetAccountList'
          description: The IDs of the AWS accounts with which to share the snapshots.
        UnshareInterval:
          $ref: '#/components/schemas/Interval'
          description: The period after which snapshots that are shared with other AWS accounts are automatically unshared.
        UnshareIntervalUnit:
          $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time for the automatic unsharing interval.
      description: Specifies a rule for sharing snapshots across AWS accounts.
    String:
      type: string
      pattern: '[\p{all}]*'
      minLength: 0
      maxLength: 500
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/String'
          description: The tag key.
        Value:
          $ref: '#/components/schemas/String'
          description: The tag value.
      description: Specifies a tag for a resource.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
    Time:
      type: string
      pattern: '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
      minLength: 5
      maxLength: 5
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateLifecyclePolicyRequest:
      type: object
      title: UpdateLifecyclePolicyRequest
      properties:
        ExecutionRoleArn:
          $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
        State:
          $ref: '#/components/schemas/SettablePolicyStateValues'
          description: The desired activation state of the lifecycle policy after creation.
        Description:
          $ref: '#/components/schemas/PolicyDescription'
          description: A description of the lifecycle policy.
        PolicyDetails:
          $ref: '#/components/schemas/PolicyDetails'
          description: The configuration of the lifecycle policy. You cannot update the policy type or the resource type.
security:
  - hmac: []
