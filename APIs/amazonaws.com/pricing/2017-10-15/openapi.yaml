openapi: 3.0.0
info:
  version: '2017-10-15'
  x-release: v4
  title: AWS Price List Service
  description: '<p>Amazon Web Services Price List Service API (Amazon Web Services Price List Service) is a centralized and convenient way to programmatically query Amazon Web Services for services, products, and pricing information. The Amazon Web Services Price List Service uses standardized product attributes such as <code>Location</code>, <code>Storage Class</code>, and <code>Operating System</code>, and provides prices at the SKU level. You can use the Amazon Web Services Price List Service to build cost control and scenario planning tools, reconcile billing data, forecast future spend for budgeting purposes, and provide cost benefit analysis that compare your internal workloads with Amazon Web Services.</p> <p>Use <code>GetServices</code> without a service code to retrieve the service codes for all AWS services, then <code>GetServices</code> with a service code to retreive the attribute names for that service. After you have the service code and attribute names, you can use <code>GetAttributeValues</code> to see what values are available for an attribute. With the service code and an attribute name and value, you can use <code>GetProducts</code> to find specific products that you''re interested in, such as an <code>AmazonEC2</code> instance, with a <code>Provisioned IOPS</code> <code>volumeType</code>.</p> <p>Service Endpoint</p> <p>Amazon Web Services Price List Service API provides the following two endpoints:</p> <ul> <li> <p>https://api.pricing.us-east-1.amazonaws.com</p> </li> <li> <p>https://api.pricing.ap-south-1.amazonaws.com</p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: pricing
  x-aws-signingName: pricing
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/pricing-2017-10-15.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/pricing/'
servers:
  - url: 'http://api.pricing.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Pricing multi-region endpoint
  - url: 'https://api.pricing.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Pricing multi-region endpoint
  - url: 'http://api.pricing.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Pricing endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://api.pricing.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Pricing endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AWSPriceListService.DescribeServices:
    post:
      operationId: DescribeServices
      description: 'Returns the metadata for one service or a list of the metadata for all services. Use this without a service code to get the service codes for all services. Use it with a service code, such as <code>AmazonEC2</code>, to get information specific to that service, such as the attribute names available for that service. For example, some of the attribute names available for EC2 are <code>volumeType</code>, <code>maxIopsVolume</code>, <code>operation</code>, <code>locationType</code>, and <code>instanceCapacity10xlarge</code>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeServicesResponse'
        '480':
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: ExpiredNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeServicesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPriceListService.DescribeServices
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSPriceListService.GetAttributeValues:
    post:
      operationId: GetAttributeValues
      description: 'Returns a list of attribute values. Attibutes are similar to the details in a Price List API offer file. For a list of available attributes, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/reading-an-offer.html#pps-defs">Offer File Definitions</a> in the <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/billing-what-is.html">Amazon Web Services Billing and Cost Management User Guide</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAttributeValuesResponse'
        '480':
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: ExpiredNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAttributeValuesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPriceListService.GetAttributeValues
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSPriceListService.GetProducts:
    post:
      operationId: GetProducts
      description: Returns a list of all products that match the filter criteria.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsResponse'
        '480':
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: ExpiredNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProductsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPriceListService.GetProducts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    DescribeServicesResponse:
      type: object
      example:
        FormatVersion: aws_v1
        NextToken: abcdefg123
        Services:
          - AttributeNames:
              - volumeType
              - maxIopsvolume
              - instanceCapacity10xlarge
              - locationType
              - operation
            ServiceCode: AmazonEC2
      properties:
        Services:
          $ref: '#/components/schemas/ServiceList'
          description: The service metadata for the service or services in the response.
        FormatVersion:
          $ref: '#/components/schemas/String'
          description: 'The format version of the response. For example, <code>aws_v1</code>.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: The pagination token for the next set of retreivable results.
    DescribeServicesRequest:
      type: object
      title: DescribeServicesRequest
      properties:
        ServiceCode:
          $ref: '#/components/schemas/String'
          description: 'The code for the service whose information you want to retrieve, such as <code>AmazonEC2</code>. You can use the <code>ServiceCode</code> to filter the results in a <code>GetProducts</code> call. To retrieve a list of all services, leave this blank.'
        FormatVersion:
          $ref: '#/components/schemas/String'
          description: '<p>The format version that you want the response to be in.</p> <p>Valid values are: <code>aws_v1</code> </p>'
        NextToken:
          $ref: '#/components/schemas/String'
          description: The pagination token that indicates the next set of results that you want to retrieve.
        MaxResults:
          $ref: '#/components/schemas/BoxedInteger'
          description: The maximum number of results that you want returned in the response.
    InternalErrorException: {}
    InvalidParameterException: {}
    NotFoundException: {}
    InvalidNextTokenException: {}
    ExpiredNextTokenException: {}
    GetAttributeValuesResponse:
      type: object
      example:
        AttributeValues:
          - Value: Throughput Optimized HDD
          - Value: Provisioned IOPS
        NextToken: 'GpgauEXAMPLEezucl5LV0w==:7GzYJ0nw0DBTJ2J66EoTIIynE6O1uXwQtTRqioJzQadBnDVgHPzI1en4BUQnPCLpzeBk9RQQAWaFieA4+DapFAGLgk+Z/9/cTw9GldnPOHN98+FdmJP7wKU3QQpQ8MQr5KOeBkIsAqvAQYdL0DkL7tHwPtE5iCEByAmg9gcC/yBU1vAOsf7R3VaNN4M5jMDv3woSWqASSIlBVB6tgW78YL22KhssoItM/jWW+aP6Jqtq4mldxp/ct6DWAl+xLFwHU/CbketimPPXyqHF3/UXDw=='
      properties:
        AttributeValues:
          $ref: '#/components/schemas/AttributeValueList'
          description: 'The list of values for an attribute. For example, <code>Throughput Optimized HDD</code> and <code>Provisioned IOPS</code> are two available values for the <code>AmazonEC2</code> <code>volumeType</code>.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: The pagination token that indicates the next set of results to retrieve.
    GetAttributeValuesRequest:
      type: object
      required:
        - ServiceCode
        - AttributeName
      title: GetAttributeValuesRequest
      properties:
        ServiceCode:
          $ref: '#/components/schemas/String'
          description: 'The service code for the service whose attributes you want to retrieve. For example, if you want the retrieve an EC2 attribute, use <code>AmazonEC2</code>.'
        AttributeName:
          $ref: '#/components/schemas/String'
          description: 'The name of the attribute that you want to retrieve the values for, such as <code>volumeType</code>.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: The pagination token that indicates the next set of results that you want to retrieve.
        MaxResults:
          $ref: '#/components/schemas/BoxedInteger'
          description: The maximum number of results to return in response.
    GetProductsResponse:
      type: object
      properties:
        FormatVersion:
          $ref: '#/components/schemas/String'
          description: 'The format version of the response. For example, aws_v1.'
        PriceList:
          $ref: '#/components/schemas/PriceList'
          description: The list of products that match your filters. The list contains both the product metadata and the price information.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The pagination token that indicates the next set of results to retrieve.
    GetProductsRequest:
      type: object
      title: GetProductsRequest
      properties:
        ServiceCode:
          $ref: '#/components/schemas/String'
          description: 'The code for the service whose products you want to retrieve. '
        Filters:
          $ref: '#/components/schemas/Filters'
          description: The list of filters that limit the returned products. only products that match all filters are returned.
        FormatVersion:
          $ref: '#/components/schemas/String'
          description: '<p>The format version that you want the response to be in.</p> <p>Valid values are: <code>aws_v1</code> </p>'
        NextToken:
          $ref: '#/components/schemas/String'
          description: The pagination token that indicates the next set of results that you want to retrieve.
        MaxResults:
          $ref: '#/components/schemas/BoxedInteger'
          description: The maximum number of results to return in the response.
    String:
      type: string
    AttributeNameList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    AttributeValue:
      type: object
      properties:
        Value:
          $ref: '#/components/schemas/String'
          description: The specific value of an <code>attributeName</code>.
      description: 'The values of a given attribute, such as <code>Throughput Optimized HDD</code> or <code>Provisioned IOPS</code> for the <code>Amazon EC2</code> <code>volumeType</code> attribute.'
    AttributeValueList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeValue'
    BoxedInteger:
      type: integer
      minimum: 1
      maximum: 100
    ServiceList:
      type: array
      items:
        $ref: '#/components/schemas/Service'
    FilterType:
      type: string
      enum:
        - TERM_MATCH
    Filter:
      type: object
      required:
        - Type
        - Field
        - Value
      properties:
        Type:
          $ref: '#/components/schemas/FilterType'
          description: '<p>The type of filter that you want to use.</p> <p>Valid values are: <code>TERM_MATCH</code>. <code>TERM_MATCH</code> returns only products that match both the given filter field and the given value.</p>'
        Field:
          $ref: '#/components/schemas/String'
          description: '<p>The product metadata field that you want to filter on. You can filter by just the service code to see all products for a specific service, filter by just the attribute name to see a specific attribute for multiple services, or use both a service code and an attribute name to retrieve only products that match both fields.</p> <p>Valid values include: <code>ServiceCode</code>, and all attribute names</p> <p>For example, you can filter by the <code>AmazonEC2</code> service code and the <code>volumeType</code> attribute name to get the prices for only Amazon EC2 volumes.</p>'
        Value:
          $ref: '#/components/schemas/String'
          description: 'The service code or attribute value that you want to filter by. If you are filtering by service code this is the actual service code, such as <code>AmazonEC2</code>. If you are filtering by attribute name, this is the attribute value that you want the returned products to match, such as a <code>Provisioned IOPS</code> volume.'
      description: The constraints that you want all returned products to match.
    Filters:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    PriceList:
      type: array
      items:
        $ref: '#/components/schemas/PriceListItemJSON'
    PriceListItemJSON:
      type: string
    Service:
      type: object
      properties:
        ServiceCode:
          $ref: '#/components/schemas/String'
          description: The code for the Amazon Web Services service.
        AttributeNames:
          $ref: '#/components/schemas/AttributeNameList'
          description: The attributes that are available for this service.
      description: 'The metadata for a service, such as the service code and available attribute names.'
security:
  - hmac: []
