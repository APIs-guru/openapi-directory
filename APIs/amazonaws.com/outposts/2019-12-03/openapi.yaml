openapi: 3.0.0
info:
  version: '2019-12-03'
  x-release: v4
  title: AWS Outposts
  description: 'AWS Outposts is a fully managed service that extends AWS infrastructure, APIs, and tools to customer premises. By providing local access to AWS managed infrastructure, AWS Outposts enables customers to build and run applications on premises using the same programming interfaces as in AWS Regions, while using local compute and storage resources for lower latency and local data processing needs.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: outposts
  x-aws-signingName: outposts
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/outposts-2019-12-03.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/outposts/'
servers:
  - url: 'http://outposts.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Outposts multi-region endpoint
  - url: 'https://outposts.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Outposts multi-region endpoint
  - url: 'http://outposts.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Outposts endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://outposts.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Outposts endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /outposts:
    post:
      operationId: CreateOutpost
      description: <p>Creates an Outpost.</p> <p>You can specify <code>AvailabilityZone</code> or <code>AvailabilityZoneId</code>.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOutpostOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - SiteId
              properties:
                Name:
                  description: The name of the Outpost.
                  type: string
                  pattern: '^[\S ]+$'
                  minLength: 1
                  maxLength: 255
                Description:
                  description: The description of the Outpost.
                  type: string
                  pattern: '^[\S ]*$'
                  minLength: 0
                  maxLength: 1000
                SiteId:
                  description: The ID of the site.
                  type: string
                  pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:site/)?(os-[a-f0-9]{17})$'
                  minLength: 1
                  maxLength: 255
                AvailabilityZone:
                  description: The Availability Zone.
                  type: string
                  pattern: '^([a-zA-Z]+-){1,3}([a-zA-Z]+)?(\d+[a-zA-Z]?)?$'
                  minLength: 1
                  maxLength: 1000
                AvailabilityZoneId:
                  description: The ID of the Availability Zone.
                  type: string
                  pattern: '^[a-zA-Z]+\d-[a-zA-Z]+\d$'
                  minLength: 1
                  maxLength: 255
                Tags:
                  description: The tags to apply to the Outpost.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListOutposts
      description: '<p>Create a list of the Outposts for your AWS account. Add filters to your request to return a more specific list of results. Use filters to match an Outpost lifecycle status, Availibility Zone (<code>us-east-1a</code>), and AZ ID (<code>use1-az1</code>). </p> <p>If you specify multiple filters, the filters are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOutpostsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            pattern: ^(\d+)##(\S+)$
            description: The pagination token.
            minLength: 1
            maxLength: 1005
        - name: MaxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: The maximum page size.
            minimum: 1
            maximum: 1000
        - name: LifeCycleStatusFilter
          in: query
          required: false
          description: '<p> A filter for the lifecycle status of the Outpost. </p> <p> Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values. </p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LifeCycleStatus'
            minItems: 1
            maxItems: 5
        - name: AvailabilityZoneFilter
          in: query
          required: false
          description: '<p> A filter for the Availibility Zone (<code>us-east-1a</code>) of the Outpost. </p> <p> Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values. </p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AvailabilityZone'
            minItems: 1
            maxItems: 5
        - name: AvailabilityZoneIdFilter
          in: query
          required: false
          description: '<p> A filter for the AZ IDs (<code>use1-az1</code>) of the Outpost. </p> <p> Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values. </p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AvailabilityZoneId'
            minItems: 1
            maxItems: 5
  '/outposts/{OutpostId}':
    delete:
      operationId: DeleteOutpost
      description: Deletes the Outpost.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOutpostOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: OutpostId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/)?op-[a-f0-9]{17}$'
            description: The ID of the Outpost.
            minLength: 1
            maxLength: 180
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetOutpost
      description: Gets information about the specified Outpost.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutpostOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: OutpostId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/)?op-[a-f0-9]{17}$'
            description: The ID of the Outpost.
            minLength: 1
            maxLength: 180
  '/sites/{SiteId}':
    delete:
      operationId: DeleteSite
      description: Deletes the site.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSiteOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: SiteId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:site/)?(os-[a-f0-9]{17})$'
            description: The ID of the site.
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/outposts/{OutpostId}/instanceTypes':
    get:
      operationId: GetOutpostInstanceTypes
      description: Lists the instance types for the specified Outpost.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutpostInstanceTypesOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: OutpostId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/)?op-[a-f0-9]{17}$'
            description: The ID of the Outpost.
            minLength: 1
            maxLength: 180
        - name: NextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            pattern: ^(\d+)##(\S+)$
            description: The pagination token.
            minLength: 1
            maxLength: 1005
        - name: MaxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: The maximum page size.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /sites:
    get:
      operationId: ListSites
      description: Lists the sites for the specified AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSitesOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            pattern: ^(\d+)##(\S+)$
            description: The pagination token.
            minLength: 1
            maxLength: 1005
        - name: MaxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: The maximum page size.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{ResourceArn}':
    get:
      operationId: ListTagsForResource
      description: Lists the tags for the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:([a-z\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$'
            maxLength: 1011
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Adds tags to the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:([a-z\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$'
            maxLength: 1011
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The tags to add to the resource.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  '/tags/{ResourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes tags from the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:([a-z\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$'
            maxLength: 1011
        - name: tagKeys
          in: query
          required: true
          description: The tag keys.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateOutpostOutput:
      type: object
      properties:
        Outpost:
          $ref: '#/components/schemas/Outpost'
    TagValue:
      type: string
      pattern: '^[\S \n]+$'
      maxLength: 256
    ValidationException: {}
    ConflictException: {}
    NotFoundException: {}
    AccessDeniedException: {}
    InternalServerException: {}
    ServiceQuotaExceededException: {}
    DeleteOutpostOutput:
      type: object
      properties: {}
    DeleteSiteOutput:
      type: object
      properties: {}
    GetOutpostOutput:
      type: object
      properties:
        Outpost:
          $ref: '#/components/schemas/Outpost'
    GetOutpostInstanceTypesOutput:
      type: object
      properties:
        InstanceTypes:
          $ref: '#/components/schemas/InstanceTypeListDefinition'
        NextToken:
          $ref: '#/components/schemas/Token'
        OutpostId:
          $ref: '#/components/schemas/OutpostId'
        OutpostArn:
          $ref: '#/components/schemas/OutpostArn'
    ListOutpostsOutput:
      type: object
      properties:
        Outposts:
          $ref: '#/components/schemas/outpostListDefinition'
        NextToken:
          $ref: '#/components/schemas/Token'
    LifeCycleStatus:
      type: string
      pattern: '^[ A-Za-z]+$'
      description: The life cycle status.
      minLength: 1
      maxLength: 20
    AvailabilityZone:
      type: string
      pattern: '^([a-zA-Z]+-){1,3}([a-zA-Z]+)?(\d+[a-zA-Z]?)?$'
      description: The Availability Zone.
      minLength: 1
      maxLength: 1000
    AvailabilityZoneId:
      type: string
      pattern: '^[a-zA-Z]+\d-[a-zA-Z]+\d$'
      description: The ID of the Availability Zone.
      minLength: 1
      maxLength: 255
    ListSitesOutput:
      type: object
      properties:
        Sites:
          $ref: '#/components/schemas/siteListDefinition'
        NextToken:
          $ref: '#/components/schemas/Token'
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The resource tags.
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
      minLength: 1
      maxLength: 128
    AccountId:
      type: string
      pattern: '\d{12}'
      description: The ID of the AWS account.
      minLength: 12
      maxLength: 12
    Arn:
      type: string
      pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:([a-z\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$'
      maxLength: 1011
    AvailabilityZoneIdList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZoneId'
      minItems: 1
      maxItems: 5
    AvailabilityZoneList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
      minItems: 1
      maxItems: 5
    OutpostName:
      type: string
      pattern: '^[\S ]+$'
      description: The name of the Outpost.
      minLength: 1
      maxLength: 255
    OutpostDescription:
      type: string
      pattern: '^[\S ]*$'
      description: The description of the Outpost.
      minLength: 0
      maxLength: 1000
    SiteId:
      type: string
      pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:site/)?(os-[a-f0-9]{17})$'
      description: The ID of the site.
      minLength: 1
      maxLength: 255
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CreateOutpostInput:
      type: object
      required:
        - Name
        - SiteId
      title: CreateOutpostInput
      properties:
        Name:
          $ref: '#/components/schemas/OutpostName'
        Description:
          $ref: '#/components/schemas/OutpostDescription'
        SiteId:
          $ref: '#/components/schemas/SiteId'
        AvailabilityZone:
          $ref: '#/components/schemas/AvailabilityZone'
        AvailabilityZoneId:
          $ref: '#/components/schemas/AvailabilityZoneId'
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags to apply to the Outpost.
    Outpost:
      type: object
      properties:
        OutpostId:
          $ref: '#/components/schemas/OutpostId'
        OwnerId:
          $ref: '#/components/schemas/OwnerId'
        OutpostArn:
          $ref: '#/components/schemas/OutpostArn'
        SiteId:
          $ref: '#/components/schemas/SiteId'
        Name:
          $ref: '#/components/schemas/OutpostName'
        Description:
          $ref: '#/components/schemas/OutpostDescription'
        LifeCycleStatus:
          $ref: '#/components/schemas/LifeCycleStatus'
        AvailabilityZone:
          $ref: '#/components/schemas/AvailabilityZone'
        AvailabilityZoneId:
          $ref: '#/components/schemas/AvailabilityZoneId'
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The Outpost tags.
        SiteArn:
          $ref: '#/components/schemas/SiteArn'
      description: Information about an Outpost.
    OutpostId:
      type: string
      pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/)?op-[a-f0-9]{17}$'
      description: The ID of the Outpost.
      minLength: 1
      maxLength: 180
    DeleteOutpostInput:
      type: object
      title: DeleteOutpostInput
      properties: {}
    DeleteSiteInput:
      type: object
      title: DeleteSiteInput
      properties: {}
    GetOutpostInput:
      type: object
      title: GetOutpostInput
      properties: {}
    Token:
      type: string
      pattern: ^(\d+)##(\S+)$
      description: The pagination token.
      minLength: 1
      maxLength: 1005
    MaxResults1000:
      type: integer
      description: The maximum page size.
      minimum: 1
      maximum: 1000
    GetOutpostInstanceTypesInput:
      type: object
      title: GetOutpostInstanceTypesInput
      properties: {}
    InstanceTypeListDefinition:
      type: array
      description: Information about the instance types.
      items:
        $ref: '#/components/schemas/InstanceTypeItem'
    OutpostArn:
      type: string
      pattern: '^arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/op-[a-f0-9]{17}$'
      description: The Amazon Resource Name (ARN) of the Outpost.
      minLength: 1
      maxLength: 255
    InstanceType:
      type: string
      description: The instance type.
    InstanceTypeItem:
      type: object
      properties:
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
      description: Information about an instance type.
    LifeCycleStatusList:
      type: array
      items:
        $ref: '#/components/schemas/LifeCycleStatus'
      minItems: 1
      maxItems: 5
    ListOutpostsInput:
      type: object
      title: ListOutpostsInput
      properties: {}
    outpostListDefinition:
      type: array
      description: Information about the Outposts.
      items:
        $ref: '#/components/schemas/Outpost'
    ListSitesInput:
      type: object
      title: ListSitesInput
      properties: {}
    siteListDefinition:
      type: array
      description: Information about the sites.
      items:
        $ref: '#/components/schemas/Site'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    OwnerId:
      type: string
      pattern: '\d{12}'
      description: The AWS account ID of the Outpost owner.
      minLength: 12
      maxLength: 12
    SiteArn:
      type: string
      pattern: '^arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:site/(os-[a-f0-9]{17})$'
      description: The Amazon Resource Name (ARN) of the site.
      minLength: 1
      maxLength: 255
    SiteName:
      type: string
      pattern: '^[\S ]+$'
      description: The name of the site.
      minLength: 1
      maxLength: 1000
    SiteDescription:
      type: string
      pattern: '^[\S ]+$'
      description: The description of the site.
      minLength: 1
      maxLength: 1001
    Site:
      type: object
      properties:
        SiteId:
          $ref: '#/components/schemas/SiteId'
        AccountId:
          $ref: '#/components/schemas/AccountId'
        Name:
          $ref: '#/components/schemas/SiteName'
        Description:
          $ref: '#/components/schemas/SiteDescription'
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The site tags.
        SiteArn:
          $ref: '#/components/schemas/SiteArn'
      description: Information about a site.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags to add to the resource.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
security:
  - hmac: []
