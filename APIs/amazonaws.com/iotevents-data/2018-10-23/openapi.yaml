openapi: 3.0.0
info:
  version: '2018-10-23'
  x-release: v4
  title: AWS IoT Events Data
  description: '<p>AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events Data API commands to send inputs to detectors, list detectors, and view or update a detector''s status.</p> <p> For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/what-is-iotevents.html">What is AWS IoT Events?</a> in the <i>AWS IoT Events Developer Guide</i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: iotevents-data
  x-aws-signingName: ioteventsdata
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotevents-data-2018-10-23.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iotevents/'
servers:
  - url: 'http://data.iotevents.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT Events Data multi-region endpoint
  - url: 'https://data.iotevents.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT Events Data multi-region endpoint
  - url: 'http://data.iotevents.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Events Data endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://data.iotevents.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Events Data endpoint for China (Beijing) and China (Ningxia)
paths:
  /alarms/acknowledge:
    post:
      operationId: BatchAcknowledgeAlarm
      description: Acknowledges one or more alarms. The alarms change to the <code>ACKNOWLEDGED</code> state after you acknowledge them.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAcknowledgeAlarmResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - acknowledgeActionRequests
              properties:
                acknowledgeActionRequests:
                  description: The list of acknowledge action requests. You can specify up to 10 requests per operation.
                  type: array
                  items:
                    $ref: '#/components/schemas/AcknowledgeAlarmActionRequest'
                  minItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /alarms/disable:
    post:
      operationId: BatchDisableAlarm
      description: Disables one or more alarms. The alarms change to the <code>DISABLED</code> state after you disable them.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDisableAlarmResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - disableActionRequests
              properties:
                disableActionRequests:
                  description: The list of disable action requests. You can specify up to 10 requests per operation.
                  type: array
                  items:
                    $ref: '#/components/schemas/DisableAlarmActionRequest'
                  minItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /alarms/enable:
    post:
      operationId: BatchEnableAlarm
      description: Enables one or more alarms. The alarms change to the <code>NORMAL</code> state after you enable them.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchEnableAlarmResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - enableActionRequests
              properties:
                enableActionRequests:
                  description: The list of enable action requests. You can specify up to 10 requests per operation.
                  type: array
                  items:
                    $ref: '#/components/schemas/EnableAlarmActionRequest'
                  minItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /inputs/messages:
    post:
      operationId: BatchPutMessage
      description: 'Sends a set of messages to the AWS IoT Events system. Each message payload is transformed into the input you specify (<code>"inputName"</code>) and ingested into any detectors that monitor that input. If multiple messages are sent, the order in which the messages are processed isn''t guaranteed. To guarantee ordering, you must send messages one at a time and wait for a successful response.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPutMessageResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - messages
              properties:
                messages:
                  description: 'The list of messages to send. Each message has the following format: <code>''{ "messageId": "string", "inputName": "string", "payload": "string"}''</code> '
                  type: array
                  items:
                    $ref: '#/components/schemas/Message'
                  minItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /alarms/reset:
    post:
      operationId: BatchResetAlarm
      description: Resets one or more alarms. The alarms return to the <code>NORMAL</code> state after you reset them.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResetAlarmResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - resetActionRequests
              properties:
                resetActionRequests:
                  description: The list of reset action requests. You can specify up to 10 requests per operation.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResetAlarmActionRequest'
                  minItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /alarms/snooze:
    post:
      operationId: BatchSnoozeAlarm
      description: Changes one or more alarms to the snooze mode. The alarms change to the <code>SNOOZE_DISABLED</code> state after you set them to the snooze mode.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSnoozeAlarmResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - snoozeActionRequests
              properties:
                snoozeActionRequests:
                  description: The list of snooze action requests. You can specify up to 10 requests per operation.
                  type: array
                  items:
                    $ref: '#/components/schemas/SnoozeAlarmActionRequest'
                  minItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /detectors:
    post:
      operationId: BatchUpdateDetector
      description: 'Updates the state, variable values, and timer settings of one or more detectors (instances) of a specified detector model.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateDetectorResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - detectors
              properties:
                detectors:
                  description: 'The list of detectors (instances) to update, along with the values to update.'
                  type: array
                  items:
                    $ref: '#/components/schemas/UpdateDetectorRequest'
                  minItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/alarms/{alarmModelName}/keyValues/':
    get:
      operationId: DescribeAlarm
      description: Retrieves information about an alarm.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAlarmResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: alarmModelName
          in: path
          required: true
          description: The name of the alarm model.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_-]+$'
            minLength: 1
            maxLength: 128
        - name: keyValue
          in: query
          required: false
          description: 'The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-_:]+$'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/detectors/{detectorModelName}/keyValues/':
    get:
      operationId: DescribeDetector
      description: Returns information about the specified detector (instance).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDetectorResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: detectorModelName
          in: path
          required: true
          description: The name of the detector model whose detectors (instances) you want information about.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_-]+$'
            minLength: 1
            maxLength: 128
        - name: keyValue
          in: query
          required: false
          description: A filter used to limit results to detectors (instances) created because of the given key ID.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-_:]+$'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/alarms/{alarmModelName}':
    get:
      operationId: ListAlarms
      description: Lists one or more alarms. The operation returns only the metadata associated with each alarm.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlarmsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: alarmModelName
          in: path
          required: true
          description: The name of the alarm model.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_-]+$'
            minLength: 1
            maxLength: 128
        - name: nextToken
          in: query
          required: false
          description: The token that you can use to return the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/detectors/{detectorModelName}':
    get:
      operationId: ListDetectors
      description: Lists detectors (the instances of a detector model).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDetectorsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: detectorModelName
          in: path
          required: true
          description: The name of the detector model whose detectors (instances) are listed.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_-]+$'
            minLength: 1
            maxLength: 128
        - name: stateName
          in: query
          required: false
          description: A filter that limits results to those detectors (instances) in the given state.
          schema:
            type: string
            minLength: 1
            maxLength: 128
        - name: nextToken
          in: query
          required: false
          description: The token that you can use to return the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchAcknowledgeAlarmResponse:
      type: object
      properties:
        errorEntries:
          $ref: '#/components/schemas/BatchAlarmActionErrorEntries'
          description: 'A list of errors associated with the request, or <code>null</code> if there are no errors. Each error entry contains an entry ID that helps you identify the entry that failed.'
    AcknowledgeAlarmActionRequest:
      type: object
      required:
        - requestId
        - alarmModelName
      properties:
        requestId:
          $ref: '#/components/schemas/RequestId'
          description: The request ID. Each ID must be unique within each batch.
        alarmModelName:
          $ref: '#/components/schemas/AlarmModelName'
          description: The name of the alarm model.
        keyValue:
          $ref: '#/components/schemas/KeyValue'
          description: 'The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.'
        note:
          $ref: '#/components/schemas/Note'
          description: The note that you can leave when you acknowledge the alarm.
      description: Information needed to acknowledge the alarm.
    InvalidRequestException: {}
    InternalFailureException: {}
    ServiceUnavailableException: {}
    ThrottlingException: {}
    BatchDisableAlarmResponse:
      type: object
      properties:
        errorEntries:
          $ref: '#/components/schemas/BatchAlarmActionErrorEntries'
          description: 'A list of errors associated with the request, or <code>null</code> if there are no errors. Each error entry contains an entry ID that helps you identify the entry that failed.'
    DisableAlarmActionRequest:
      type: object
      required:
        - requestId
        - alarmModelName
      properties:
        requestId:
          $ref: '#/components/schemas/RequestId'
          description: The request ID. Each ID must be unique within each batch.
        alarmModelName:
          $ref: '#/components/schemas/AlarmModelName'
          description: The name of the alarm model.
        keyValue:
          $ref: '#/components/schemas/KeyValue'
          description: 'The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.'
        note:
          $ref: '#/components/schemas/Note'
          description: The note that you can leave when you disable the alarm.
      description: Information used to disable the alarm.
    BatchEnableAlarmResponse:
      type: object
      properties:
        errorEntries:
          $ref: '#/components/schemas/BatchAlarmActionErrorEntries'
          description: 'A list of errors associated with the request, or <code>null</code> if there are no errors. Each error entry contains an entry ID that helps you identify the entry that failed.'
    EnableAlarmActionRequest:
      type: object
      required:
        - requestId
        - alarmModelName
      properties:
        requestId:
          $ref: '#/components/schemas/RequestId'
          description: The request ID. Each ID must be unique within each batch.
        alarmModelName:
          $ref: '#/components/schemas/AlarmModelName'
          description: The name of the alarm model.
        keyValue:
          $ref: '#/components/schemas/KeyValue'
          description: 'The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.'
        note:
          $ref: '#/components/schemas/Note'
          description: The note that you can leave when you enable the alarm.
      description: Information needed to enable the alarm.
    BatchPutMessageResponse:
      type: object
      properties:
        BatchPutMessageErrorEntries:
          $ref: '#/components/schemas/BatchPutMessageErrorEntries'
          description: A list of any errors encountered when sending the messages.
    Message:
      type: object
      required:
        - messageId
        - inputName
        - payload
      properties:
        messageId:
          $ref: '#/components/schemas/MessageId'
          description: 'The ID to assign to the message. Within each batch sent, each <code>"messageId"</code> must be unique.'
        inputName:
          $ref: '#/components/schemas/EphemeralInputName'
          description: The name of the input into which the message payload is transformed.
        payload:
          $ref: '#/components/schemas/Payload'
          description: The payload of the message. This can be a JSON string or a Base-64-encoded string representing binary data (in which case you must decode it).
        timestamp:
          $ref: '#/components/schemas/TimestampValue'
          description: The timestamp associated with the message.
      description: Information about a message.
    BatchResetAlarmResponse:
      type: object
      properties:
        errorEntries:
          $ref: '#/components/schemas/BatchAlarmActionErrorEntries'
          description: 'A list of errors associated with the request, or <code>null</code> if there are no errors. Each error entry contains an entry ID that helps you identify the entry that failed.'
    ResetAlarmActionRequest:
      type: object
      required:
        - requestId
        - alarmModelName
      properties:
        requestId:
          $ref: '#/components/schemas/RequestId'
          description: The request ID. Each ID must be unique within each batch.
        alarmModelName:
          $ref: '#/components/schemas/AlarmModelName'
          description: The name of the alarm model.
        keyValue:
          $ref: '#/components/schemas/KeyValue'
          description: 'The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.'
        note:
          $ref: '#/components/schemas/Note'
          description: The note that you can leave when you reset the alarm.
      description: Information needed to reset the alarm.
    BatchSnoozeAlarmResponse:
      type: object
      properties:
        errorEntries:
          $ref: '#/components/schemas/BatchAlarmActionErrorEntries'
          description: 'A list of errors associated with the request, or <code>null</code> if there are no errors. Each error entry contains an entry ID that helps you identify the entry that failed.'
    SnoozeAlarmActionRequest:
      type: object
      required:
        - requestId
        - alarmModelName
        - snoozeDuration
      properties:
        requestId:
          $ref: '#/components/schemas/RequestId'
          description: The request ID. Each ID must be unique within each batch.
        alarmModelName:
          $ref: '#/components/schemas/AlarmModelName'
          description: The name of the alarm model.
        keyValue:
          $ref: '#/components/schemas/KeyValue'
          description: 'The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.'
        note:
          $ref: '#/components/schemas/Note'
          description: The note that you can leave when you snooze the alarm.
        snoozeDuration:
          $ref: '#/components/schemas/SnoozeDuration'
          description: The snooze time in seconds. The alarm automatically changes to the <code>NORMAL</code> state after this duration.
      description: Information needed to snooze the alarm.
    BatchUpdateDetectorResponse:
      type: object
      properties:
        batchUpdateDetectorErrorEntries:
          $ref: '#/components/schemas/BatchUpdateDetectorErrorEntries'
          description: 'A list of those detector updates that resulted in errors. (If an error is listed here, the specific update did not occur.)'
    UpdateDetectorRequest:
      type: object
      required:
        - messageId
        - detectorModelName
        - state
      properties:
        messageId:
          $ref: '#/components/schemas/MessageId'
          description: The ID to assign to the detector update <code>"message"</code>. Each <code>"messageId"</code> must be unique within each batch sent.
        detectorModelName:
          $ref: '#/components/schemas/DetectorModelName'
          description: The name of the detector model that created the detectors (instances).
        keyValue:
          $ref: '#/components/schemas/KeyValue'
          description: The value of the input key attribute (identifying the device or system) that caused the creation of this detector (instance).
        state:
          $ref: '#/components/schemas/DetectorStateDefinition'
          description: 'The new state, variable values, and timer settings of the detector (instance).'
      description: Information used to update the detector (instance).
    DescribeAlarmResponse:
      type: object
      properties:
        alarm:
          $ref: '#/components/schemas/Alarm'
          description: Contains information about an alarm.
    ResourceNotFoundException: {}
    DescribeDetectorResponse:
      type: object
      properties:
        detector:
          $ref: '#/components/schemas/Detector'
          description: Information about the detector (instance).
    ListAlarmsResponse:
      type: object
      properties:
        alarmSummaries:
          $ref: '#/components/schemas/AlarmSummaries'
          description: A list that summarizes each alarm.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token that you can use to return the next set of results, or <code>null</code> if there are no more results.'
    ListDetectorsResponse:
      type: object
      properties:
        detectorSummaries:
          $ref: '#/components/schemas/DetectorSummaries'
          description: A list of summary information about the detectors (instances).
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token that you can use to return the next set of results, or <code>null</code> if there are no more results.'
    Note:
      type: string
      maxLength: 256
    AcknowledgeActionConfiguration:
      type: object
      properties:
        note:
          $ref: '#/components/schemas/Note'
          description: The note that you can leave when you acknowledge the alarm.
      description: Contains the configuration information of an acknowledge action.
    RequestId:
      type: string
      pattern: '^[a-zA-Z0-9_-]+$'
      minLength: 1
      maxLength: 64
    AlarmModelName:
      type: string
      pattern: '^[a-zA-Z0-9_-]+$'
      minLength: 1
      maxLength: 128
    KeyValue:
      type: string
      pattern: '^[a-zA-Z0-9\-_:]+$'
      minLength: 1
      maxLength: 128
    AcknowledgeAlarmActionRequests:
      type: array
      items:
        $ref: '#/components/schemas/AcknowledgeAlarmActionRequest'
      minItems: 1
    AlarmModelVersion:
      type: string
      minLength: 1
      maxLength: 128
    AlarmState:
      type: object
      properties:
        stateName:
          $ref: '#/components/schemas/AlarmStateName'
          description: '<p>The name of the alarm state. The state name can be one of the following values:</p> <ul> <li> <p> <code>DISABLED</code> - When the alarm is in the <code>DISABLED</code> state, it isn''t ready to evaluate data. To enable the alarm, you must change the alarm to the <code>NORMAL</code> state.</p> </li> <li> <p> <code>NORMAL</code> - When the alarm is in the <code>NORMAL</code> state, it''s ready to evaluate data.</p> </li> <li> <p> <code>ACTIVE</code> - If the alarm is in the <code>ACTIVE</code> state, the alarm is invoked.</p> </li> <li> <p> <code>ACKNOWLEDGED</code> - When the alarm is in the <code>ACKNOWLEDGED</code> state, the alarm was invoked and you acknowledged the alarm.</p> </li> <li> <p> <code>SNOOZE_DISABLED</code> - When the alarm is in the <code>SNOOZE_DISABLED</code> state, the alarm is disabled for a specified period of time. After the snooze time, the alarm automatically changes to the <code>NORMAL</code> state. </p> </li> <li> <p> <code>LATCHED</code> - When the alarm is in the <code>LATCHED</code> state, the alarm was invoked. However, the data that the alarm is currently evaluating is within the specified range. To change the alarm to the <code>NORMAL</code> state, you must acknowledge the alarm.</p> </li> </ul>'
        ruleEvaluation:
          $ref: '#/components/schemas/RuleEvaluation'
          description: Information needed to evaluate data.
        customerAction:
          $ref: '#/components/schemas/CustomerAction'
          description: Contains information about the action that you can take to respond to the alarm.
        systemEvent:
          $ref: '#/components/schemas/SystemEvent'
          description: Contains information about alarm state changes.
      description: Contains information about the current state of the alarm.
    Severity:
      type: integer
      minimum: 0
      maximum: 2147483647
    Timestamp:
      type: string
      format: date-time
    Alarm:
      type: object
      properties:
        alarmModelName:
          $ref: '#/components/schemas/AlarmModelName'
          description: The name of the alarm model.
        alarmModelVersion:
          $ref: '#/components/schemas/AlarmModelVersion'
          description: The version of the alarm model.
        keyValue:
          $ref: '#/components/schemas/KeyValue'
          description: 'The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.'
        alarmState:
          $ref: '#/components/schemas/AlarmState'
          description: Contains information about the current state of the alarm.
        severity:
          $ref: '#/components/schemas/Severity'
          description: A non-negative integer that reflects the severity level of the alarm.
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time the alarm was created, in the Unix epoch format.'
        lastUpdateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time the alarm was last updated, in the Unix epoch format.'
      description: Contains information about an alarm.
    AlarmStateName:
      type: string
      enum:
        - DISABLED
        - NORMAL
        - ACTIVE
        - ACKNOWLEDGED
        - SNOOZE_DISABLED
        - LATCHED
    RuleEvaluation:
      type: object
      properties:
        simpleRuleEvaluation:
          $ref: '#/components/schemas/SimpleRuleEvaluation'
          description: Information needed to compare two values with a comparison operator.
      description: Information needed to evaluate data.
    CustomerAction:
      type: object
      properties:
        actionName:
          $ref: '#/components/schemas/CustomerActionName'
          description: '<p>The name of the action. The action name can be one of the following values:</p> <ul> <li> <p> <code>SNOOZE</code> - When you snooze the alarm, the alarm state changes to <code>SNOOZE_DISABLED</code>.</p> </li> <li> <p> <code>ENABLE</code> - When you enable the alarm, the alarm state changes to <code>NORMAL</code>.</p> </li> <li> <p> <code>DISABLE</code> - When you disable the alarm, the alarm state changes to <code>DISABLED</code>.</p> </li> <li> <p> <code>ACKNOWLEDGE</code> - When you acknowledge the alarm, the alarm state changes to <code>ACKNOWLEDGED</code>.</p> </li> <li> <p> <code>RESET</code> - When you reset the alarm, the alarm state changes to <code>NORMAL</code>.</p> </li> </ul> <p>For more information, see the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_AlarmState.html">AlarmState</a> API.</p>'
        snoozeActionConfiguration:
          $ref: '#/components/schemas/SnoozeActionConfiguration'
          description: Contains the configuration information of a snooze action.
        enableActionConfiguration:
          $ref: '#/components/schemas/EnableActionConfiguration'
          description: Contains the configuration information of an enable action.
        disableActionConfiguration:
          $ref: '#/components/schemas/DisableActionConfiguration'
          description: Contains the configuration information of a disable action.
        acknowledgeActionConfiguration:
          $ref: '#/components/schemas/AcknowledgeActionConfiguration'
          description: Contains the configuration information of an acknowledge action.
        resetActionConfiguration:
          $ref: '#/components/schemas/ResetActionConfiguration'
          description: Contains the configuration information of a reset action.
      description: Contains information about the action that you can take to respond to the alarm.
    SystemEvent:
      type: object
      properties:
        eventType:
          $ref: '#/components/schemas/EventType'
          description: 'The event type. If the value is <code>STATE_CHANGE</code>, the event contains information about alarm state changes.'
        stateChangeConfiguration:
          $ref: '#/components/schemas/StateChangeConfiguration'
          description: Contains the configuration information of alarm state changes.
      description: Contains information about alarm state changes.
    AlarmSummary:
      type: object
      properties:
        alarmModelName:
          $ref: '#/components/schemas/AlarmModelName'
          description: The name of the alarm model.
        alarmModelVersion:
          $ref: '#/components/schemas/AlarmModelVersion'
          description: The version of the alarm model.
        keyValue:
          $ref: '#/components/schemas/KeyValue'
          description: 'The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.'
        stateName:
          $ref: '#/components/schemas/AlarmStateName'
          description: '<p>The name of the alarm state. The state name can be one of the following values:</p> <ul> <li> <p> <code>DISABLED</code> - When the alarm is in the <code>DISABLED</code> state, it isn''t ready to evaluate data. To enable the alarm, you must change the alarm to the <code>NORMAL</code> state.</p> </li> <li> <p> <code>NORMAL</code> - When the alarm is in the <code>NORMAL</code> state, it''s ready to evaluate data.</p> </li> <li> <p> <code>ACTIVE</code> - If the alarm is in the <code>ACTIVE</code> state, the alarm is invoked.</p> </li> <li> <p> <code>ACKNOWLEDGED</code> - When the alarm is in the <code>ACKNOWLEDGED</code> state, the alarm was invoked and you acknowledged the alarm.</p> </li> <li> <p> <code>SNOOZE_DISABLED</code> - When the alarm is in the <code>SNOOZE_DISABLED</code> state, the alarm is disabled for a specified period of time. After the snooze time, the alarm automatically changes to the <code>NORMAL</code> state. </p> </li> <li> <p> <code>LATCHED</code> - When the alarm is in the <code>LATCHED</code> state, the alarm was invoked. However, the data that the alarm is currently evaluating is within the specified range. To change the alarm to the <code>NORMAL</code> state, you must acknowledge the alarm.</p> </li> </ul>'
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time the alarm was created, in the Unix epoch format.'
        lastUpdateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time the alarm was last updated, in the Unix epoch format.'
      description: Contains a summary of an alarm.
    AlarmSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AlarmSummary'
    BatchAcknowledgeAlarmRequest:
      type: object
      required:
        - acknowledgeActionRequests
      title: BatchAcknowledgeAlarmRequest
      properties:
        acknowledgeActionRequests:
          $ref: '#/components/schemas/AcknowledgeAlarmActionRequests'
          description: The list of acknowledge action requests. You can specify up to 10 requests per operation.
    BatchAlarmActionErrorEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchAlarmActionErrorEntry'
    BatchAlarmActionErrorEntry:
      type: object
      properties:
        requestId:
          $ref: '#/components/schemas/RequestId'
          description: The request ID. Each ID must be unique within each batch.
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: The error code.
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: A message that describes the error.
      description: '<p>Contains error messages associated with one of the following requests:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchAcknowledgeAlarm.html">BatchAcknowledgeAlarm</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchDisableAlarm.html">BatchDisableAlarm</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchEnableAlarm.html">BatchEnableAlarm</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchResetAlarm.html">BatchResetAlarm</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchSnoozeAlarm.html">BatchSnoozeAlarm</a> </p> </li> </ul>'
    ErrorCode:
      type: string
      enum:
        - ResourceNotFoundException
        - InvalidRequestException
        - InternalFailureException
        - ServiceUnavailableException
        - ThrottlingException
    ErrorMessage:
      type: string
    DisableAlarmActionRequests:
      type: array
      items:
        $ref: '#/components/schemas/DisableAlarmActionRequest'
      minItems: 1
    BatchDisableAlarmRequest:
      type: object
      required:
        - disableActionRequests
      title: BatchDisableAlarmRequest
      properties:
        disableActionRequests:
          $ref: '#/components/schemas/DisableAlarmActionRequests'
          description: The list of disable action requests. You can specify up to 10 requests per operation.
    EnableAlarmActionRequests:
      type: array
      items:
        $ref: '#/components/schemas/EnableAlarmActionRequest'
      minItems: 1
    BatchEnableAlarmRequest:
      type: object
      required:
        - enableActionRequests
      title: BatchEnableAlarmRequest
      properties:
        enableActionRequests:
          $ref: '#/components/schemas/EnableAlarmActionRequests'
          description: The list of enable action requests. You can specify up to 10 requests per operation.
    BatchPutMessageErrorEntry:
      type: object
      properties:
        messageId:
          $ref: '#/components/schemas/MessageId'
          description: The ID of the message that caused the error. (See the value corresponding to the <code>"messageId"</code> key in the <code>"message"</code> object.)
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: The error code.
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: A message that describes the error.
      description: Contains information about the errors encountered.
    BatchPutMessageErrorEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchPutMessageErrorEntry'
    MessageId:
      type: string
      pattern: '^[a-zA-Z0-9_-]+$'
      minLength: 1
      maxLength: 64
    Messages:
      type: array
      items:
        $ref: '#/components/schemas/Message'
      minItems: 1
    BatchPutMessageRequest:
      type: object
      required:
        - messages
      title: BatchPutMessageRequest
      properties:
        messages:
          $ref: '#/components/schemas/Messages'
          description: 'The list of messages to send. Each message has the following format: <code>''{ "messageId": "string", "inputName": "string", "payload": "string"}''</code> '
    ResetAlarmActionRequests:
      type: array
      items:
        $ref: '#/components/schemas/ResetAlarmActionRequest'
      minItems: 1
    BatchResetAlarmRequest:
      type: object
      required:
        - resetActionRequests
      title: BatchResetAlarmRequest
      properties:
        resetActionRequests:
          $ref: '#/components/schemas/ResetAlarmActionRequests'
          description: The list of reset action requests. You can specify up to 10 requests per operation.
    SnoozeAlarmActionRequests:
      type: array
      items:
        $ref: '#/components/schemas/SnoozeAlarmActionRequest'
      minItems: 1
    BatchSnoozeAlarmRequest:
      type: object
      required:
        - snoozeActionRequests
      title: BatchSnoozeAlarmRequest
      properties:
        snoozeActionRequests:
          $ref: '#/components/schemas/SnoozeAlarmActionRequests'
          description: The list of snooze action requests. You can specify up to 10 requests per operation.
    BatchUpdateDetectorErrorEntry:
      type: object
      properties:
        messageId:
          $ref: '#/components/schemas/MessageId'
          description: The <code>"messageId"</code> of the update request that caused the error. (The value of the <code>"messageId"</code> in the update request <code>"Detector"</code> object.)
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: The error code.
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: A message that describes the error.
      description: Information about the error that occurred when attempting to update a detector.
    BatchUpdateDetectorErrorEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchUpdateDetectorErrorEntry'
    UpdateDetectorRequests:
      type: array
      items:
        $ref: '#/components/schemas/UpdateDetectorRequest'
      minItems: 1
    BatchUpdateDetectorRequest:
      type: object
      required:
        - detectors
      title: BatchUpdateDetectorRequest
      properties:
        detectors:
          $ref: '#/components/schemas/UpdateDetectorRequests'
          description: 'The list of detectors (instances) to update, along with the values to update.'
    ComparisonOperator:
      type: string
      enum:
        - GREATER
        - GREATER_OR_EQUAL
        - LESS
        - LESS_OR_EQUAL
        - EQUAL
        - NOT_EQUAL
    CustomerActionName:
      type: string
      enum:
        - SNOOZE
        - ENABLE
        - DISABLE
        - ACKNOWLEDGE
        - RESET
    SnoozeActionConfiguration:
      type: object
      properties:
        snoozeDuration:
          $ref: '#/components/schemas/SnoozeDuration'
          description: The snooze time in seconds. The alarm automatically changes to the <code>NORMAL</code> state after this duration.
        note:
          $ref: '#/components/schemas/Note'
          description: The note that you can leave when you snooze the alarm.
      description: Contains the configuration information of a snooze action.
    EnableActionConfiguration:
      type: object
      properties:
        note:
          $ref: '#/components/schemas/Note'
          description: The note that you can leave when you enable the alarm.
      description: Contains the configuration information of an enable action.
    DisableActionConfiguration:
      type: object
      properties:
        note:
          $ref: '#/components/schemas/Note'
          description: The note that you can leave when you disable the alarm.
      description: Contains the configuration information of a disable action.
    ResetActionConfiguration:
      type: object
      properties:
        note:
          $ref: '#/components/schemas/Note'
          description: The note that you can leave when you reset the alarm.
      description: Contains the configuration information of a reset action.
    DescribeAlarmRequest:
      type: object
      title: DescribeAlarmRequest
      properties: {}
    DetectorModelName:
      type: string
      pattern: '^[a-zA-Z0-9_-]+$'
      minLength: 1
      maxLength: 128
    DescribeDetectorRequest:
      type: object
      title: DescribeDetectorRequest
      properties: {}
    Detector:
      type: object
      properties:
        detectorModelName:
          $ref: '#/components/schemas/DetectorModelName'
          description: The name of the detector model that created this detector (instance).
        keyValue:
          $ref: '#/components/schemas/KeyValue'
          description: The value of the key (identifying the device or system) that caused the creation of this detector (instance).
        detectorModelVersion:
          $ref: '#/components/schemas/DetectorModelVersion'
          description: The version of the detector model that created this detector (instance).
        state:
          $ref: '#/components/schemas/DetectorState'
          description: The current state of the detector (instance).
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the detector (instance) was created.
        lastUpdateTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the detector (instance) was last updated.
      description: Information about the detector (instance).
    DetectorModelVersion:
      type: string
      minLength: 1
      maxLength: 128
    DetectorState:
      type: object
      required:
        - stateName
        - variables
        - timers
      properties:
        stateName:
          $ref: '#/components/schemas/StateName'
          description: The name of the state.
        variables:
          $ref: '#/components/schemas/Variables'
          description: The current values of the detector's variables.
        timers:
          $ref: '#/components/schemas/Timers'
          description: The current state of the detector's timers.
      description: Information about the current state of the detector instance.
    StateName:
      type: string
      minLength: 1
      maxLength: 128
    Variables:
      type: array
      items:
        $ref: '#/components/schemas/Variable'
    Timers:
      type: array
      items:
        $ref: '#/components/schemas/Timer'
    VariableDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/VariableDefinition'
    TimerDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/TimerDefinition'
    DetectorStateDefinition:
      type: object
      required:
        - stateName
        - variables
        - timers
      properties:
        stateName:
          $ref: '#/components/schemas/StateName'
          description: The name of the new state of the detector (instance).
        variables:
          $ref: '#/components/schemas/VariableDefinitions'
          description: The new values of the detector's variables. Any variable whose value isn't specified is cleared.
        timers:
          $ref: '#/components/schemas/TimerDefinitions'
          description: 'The new values of the detector''s timers. Any timer whose value isn''t specified is cleared, and its timeout event won''t occur.'
      description: 'The new state, variable values, and timer settings of the detector (instance).'
    DetectorStateSummary:
      type: object
      properties:
        stateName:
          $ref: '#/components/schemas/StateName'
          description: The name of the state.
      description: Information about the detector state.
    DetectorSummary:
      type: object
      properties:
        detectorModelName:
          $ref: '#/components/schemas/DetectorModelName'
          description: The name of the detector model that created this detector (instance).
        keyValue:
          $ref: '#/components/schemas/KeyValue'
          description: The value of the key (identifying the device or system) that caused the creation of this detector (instance).
        detectorModelVersion:
          $ref: '#/components/schemas/DetectorModelVersion'
          description: The version of the detector model that created this detector (instance).
        state:
          $ref: '#/components/schemas/DetectorStateSummary'
          description: The current state of the detector (instance).
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the detector (instance) was created.
        lastUpdateTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the detector (instance) was last updated.
      description: Information about the detector (instance).
    DetectorSummaries:
      type: array
      items:
        $ref: '#/components/schemas/DetectorSummary'
    EphemeralInputName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]*$'
      minLength: 1
      maxLength: 128
    EpochMilliTimestamp:
      type: integer
      minimum: 1
      maximum: 9223372036854776000
    EventType:
      type: string
      enum:
        - STATE_CHANGE
    InputPropertyValue:
      type: string
    NextToken:
      type: string
    MaxResults:
      type: integer
      minimum: 1
      maximum: 250
    ListAlarmsRequest:
      type: object
      title: ListAlarmsRequest
      properties: {}
    ListDetectorsRequest:
      type: object
      title: ListDetectorsRequest
      properties: {}
    Payload:
      type: string
    TimestampValue:
      type: object
      properties:
        timeInMillis:
          $ref: '#/components/schemas/EpochMilliTimestamp'
          description: 'The value of the timestamp, in the Unix epoch format.'
      description: Contains information about a timestamp.
    SimpleRuleEvaluation:
      type: object
      properties:
        inputPropertyValue:
          $ref: '#/components/schemas/InputPropertyValue'
          description: 'The value of the input property, on the left side of the comparison operator.'
        operator:
          $ref: '#/components/schemas/ComparisonOperator'
          description: The comparison operator.
        thresholdValue:
          $ref: '#/components/schemas/ThresholdValue'
          description: 'The threshold value, on the right side of the comparison operator.'
      description: Information needed to compare two values with a comparison operator.
    Seconds:
      type: integer
    ThresholdValue:
      type: string
    SnoozeDuration:
      type: integer
    TriggerType:
      type: string
      enum:
        - SNOOZE_TIMEOUT
    StateChangeConfiguration:
      type: object
      properties:
        triggerType:
          $ref: '#/components/schemas/TriggerType'
          description: 'The trigger type. If the value is <code>SNOOZE_TIMEOUT</code>, the snooze duration ends and the alarm automatically changes to the <code>NORMAL</code> state.'
      description: Contains the configuration information of alarm state changes.
    TimerName:
      type: string
      minLength: 1
      maxLength: 128
    Timer:
      type: object
      required:
        - name
        - timestamp
      properties:
        name:
          $ref: '#/components/schemas/TimerName'
          description: The name of the timer.
        timestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The number of seconds which have elapsed on the timer.
      description: The current state of a timer.
    TimerDefinition:
      type: object
      required:
        - name
        - seconds
      properties:
        name:
          $ref: '#/components/schemas/TimerName'
          description: The name of the timer.
        seconds:
          $ref: '#/components/schemas/Seconds'
          description: The new setting of the timer (the number of seconds before the timer elapses).
      description: The new setting of a timer.
    VariableName:
      type: string
      pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
      minLength: 1
      maxLength: 128
    VariableValue:
      type: string
      minLength: 1
      maxLength: 1024
    Variable:
      type: object
      required:
        - name
        - value
      properties:
        name:
          $ref: '#/components/schemas/VariableName'
          description: The name of the variable.
        value:
          $ref: '#/components/schemas/VariableValue'
          description: The current value of the variable.
      description: The current state of the variable.
    VariableDefinition:
      type: object
      required:
        - name
        - value
      properties:
        name:
          $ref: '#/components/schemas/VariableName'
          description: The name of the variable.
        value:
          $ref: '#/components/schemas/VariableValue'
          description: The new value of the variable.
      description: The new value of the variable.
security:
  - hmac: []
