openapi: 3.0.0
info:
  version: '2017-07-01'
  x-release: v4
  title: Amazon HealthLake
  description: 'Amazon HealthLake is a HIPAA eligibile service that allows customers to store, transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: healthlake
  x-aws-signingName: healthlake
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/healthlake-2017-07-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/healthlake/'
servers:
  - url: 'http://healthlake.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The HealthLake multi-region endpoint
  - url: 'https://healthlake.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The HealthLake multi-region endpoint
  - url: 'http://healthlake.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The HealthLake endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://healthlake.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The HealthLake endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=HealthLake.CreateFHIRDatastore:
    post:
      operationId: CreateFHIRDatastore
      description: Creates a Data Store that can ingest and export FHIR formatted data.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFHIRDatastoreResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFHIRDatastoreRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.CreateFHIRDatastore
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=HealthLake.DeleteFHIRDatastore:
    post:
      operationId: DeleteFHIRDatastore
      description: 'Deletes a Data Store. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFHIRDatastoreResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFHIRDatastoreRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.DeleteFHIRDatastore
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=HealthLake.DescribeFHIRDatastore:
    post:
      operationId: DescribeFHIRDatastore
      description: 'Gets the properties associated with the FHIR Data Store, including the Data Store ID, Data Store ARN, Data Store name, Data Store status, created at, Data Store type version, and Data Store endpoint.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFHIRDatastoreResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFHIRDatastoreRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.DescribeFHIRDatastore
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=HealthLake.DescribeFHIRExportJob:
    post:
      operationId: DescribeFHIRExportJob
      description: 'Displays the properties of a FHIR export job, including the ID, ARN, name, and the status of the job.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFHIRExportJobResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFHIRExportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.DescribeFHIRExportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=HealthLake.DescribeFHIRImportJob:
    post:
      operationId: DescribeFHIRImportJob
      description: 'Displays the properties of a FHIR import job, including the ID, ARN, name, and the status of the job. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFHIRImportJobResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFHIRImportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.DescribeFHIRImportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=HealthLake.ListFHIRDatastores:
    post:
      operationId: ListFHIRDatastores
      description: 'Lists all FHIR Data Stores that are in the user’s account, regardless of Data Store status.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFHIRDatastoresResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFHIRDatastoresRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.ListFHIRDatastores
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=HealthLake.ListFHIRExportJobs:
    post:
      operationId: ListFHIRExportJobs
      description: ' Lists all FHIR export jobs associated with an account and their statuses. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFHIRExportJobsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFHIRExportJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.ListFHIRExportJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=HealthLake.ListFHIRImportJobs:
    post:
      operationId: ListFHIRImportJobs
      description: ' Lists all FHIR import jobs associated with an account and their statuses. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFHIRImportJobsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFHIRImportJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.ListFHIRImportJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=HealthLake.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: ' Returns a list of all existing tags associated with a Data Store. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=HealthLake.StartFHIRExportJob:
    post:
      operationId: StartFHIRExportJob
      description: Begins a FHIR export job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFHIRExportJobResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartFHIRExportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.StartFHIRExportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=HealthLake.StartFHIRImportJob:
    post:
      operationId: StartFHIRImportJob
      description: Begins a FHIR Import job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFHIRImportJobResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartFHIRImportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.StartFHIRImportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=HealthLake.TagResource:
    post:
      operationId: TagResource
      description: ' Adds a user specifed key and value tag to a Data Store. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=HealthLake.UntagResource:
    post:
      operationId: UntagResource
      description: ' Removes tags from a Data Store. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - HealthLake.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateFHIRDatastoreResponse:
      type: object
      required:
        - DatastoreId
        - DatastoreArn
        - DatastoreStatus
        - DatastoreEndpoint
      properties:
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: The AWS-generated Data Store id. This id is in the output from the initial Data Store creation call.
        DatastoreArn:
          $ref: '#/components/schemas/DatastoreArn'
          description: The datastore ARN is generated during the creation of the Data Store and can be found in the output from the initial Data Store creation call.
        DatastoreStatus:
          $ref: '#/components/schemas/DatastoreStatus'
          description: 'The status of the FHIR Data Store. Possible statuses are ‘CREATING’, ‘ACTIVE’, ‘DELETING’, ‘DELETED’.'
        DatastoreEndpoint:
          $ref: '#/components/schemas/BoundedLengthString'
          description: 'The AWS endpoint for the created Data Store. For preview, only US-east-1 endpoints are supported.'
    CreateFHIRDatastoreRequest:
      type: object
      required:
        - DatastoreTypeVersion
      title: CreateFHIRDatastoreRequest
      properties:
        DatastoreName:
          $ref: '#/components/schemas/DatastoreName'
          description: The user generated name for the Data Store.
        DatastoreTypeVersion:
          $ref: '#/components/schemas/FHIRVersion'
          description: The FHIR version of the Data Store. The only supported version is R4.
        SseConfiguration:
          $ref: '#/components/schemas/SseConfiguration'
          description: ' The server-side encryption key configuration for a customer provided encryption key specified for creating a Data Store. '
        PreloadDataConfig:
          $ref: '#/components/schemas/PreloadDataConfig'
          description: 'Optional parameter to preload data upon creation of the Data Store. Currently, the only supported preloaded data is synthetic data generated from Synthea.'
        ClientToken:
          $ref: '#/components/schemas/ClientTokenString'
          description: Optional user provided token used for ensuring idempotency.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: ' Resource tags that are applied to a Data Store when it is created. '
    ValidationException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    InternalServerException: {}
    DeleteFHIRDatastoreResponse:
      type: object
      required:
        - DatastoreId
        - DatastoreArn
        - DatastoreStatus
        - DatastoreEndpoint
      properties:
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: The AWS-generated ID for the Data Store to be deleted.
        DatastoreArn:
          $ref: '#/components/schemas/DatastoreArn'
          description: The Amazon Resource Name (ARN) that gives Amazon HealthLake access permission.
        DatastoreStatus:
          $ref: '#/components/schemas/DatastoreStatus'
          description: 'The status of the Data Store that the user has requested to be deleted. '
        DatastoreEndpoint:
          $ref: '#/components/schemas/BoundedLengthString'
          description: The AWS endpoint for the Data Store the user has requested to be deleted.
    DeleteFHIRDatastoreRequest:
      type: object
      title: DeleteFHIRDatastoreRequest
      properties:
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: ' The AWS-generated ID for the Data Store to be deleted.'
    ConflictException: {}
    ResourceNotFoundException: {}
    DescribeFHIRDatastoreResponse:
      type: object
      required:
        - DatastoreProperties
      properties:
        DatastoreProperties:
          $ref: '#/components/schemas/DatastoreProperties'
          description: 'All properties associated with a Data Store, including the Data Store ID, Data Store ARN, Data Store name, Data Store status, created at, Data Store type version, and Data Store endpoint.'
    DescribeFHIRDatastoreRequest:
      type: object
      title: DescribeFHIRDatastoreRequest
      properties:
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: The AWS-generated Data Store id. This is part of the ‘CreateFHIRDatastore’ output.
    DescribeFHIRExportJobResponse:
      type: object
      required:
        - ExportJobProperties
      properties:
        ExportJobProperties:
          $ref: '#/components/schemas/ExportJobProperties'
          description: 'Displays the properties of the export job, including the ID, Arn, Name, and the status of the job. '
    DescribeFHIRExportJobRequest:
      type: object
      required:
        - DatastoreId
        - JobId
      title: DescribeFHIRExportJobRequest
      properties:
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: The AWS generated ID for the Data Store from which files are being exported from for an export job.
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The AWS generated ID for an export job.
    DescribeFHIRImportJobResponse:
      type: object
      required:
        - ImportJobProperties
      properties:
        ImportJobProperties:
          $ref: '#/components/schemas/ImportJobProperties'
          description: 'The properties of the Import job request, including the ID, ARN, name, and the status of the job.'
    DescribeFHIRImportJobRequest:
      type: object
      required:
        - DatastoreId
        - JobId
      title: DescribeFHIRImportJobRequest
      properties:
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: The AWS-generated ID of the Data Store.
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The AWS-generated job ID.
    ListFHIRDatastoresResponse:
      type: object
      required:
        - DatastorePropertiesList
      properties:
        DatastorePropertiesList:
          $ref: '#/components/schemas/DatastorePropertiesList'
          description: All properties associated with the listed Data Stores.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Pagination token that can be used to retrieve the next page of results.
    ListFHIRDatastoresRequest:
      type: object
      title: ListFHIRDatastoresRequest
      properties:
        Filter:
          $ref: '#/components/schemas/DatastoreFilter'
          description: Lists all filters associated with a FHIR Data Store request.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Fetches the next page of Data Stores when results are paginated.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: The maximum number of Data Stores returned in a single page of a ListFHIRDatastoresRequest call.
    ListFHIRExportJobsResponse:
      type: object
      required:
        - ExportJobPropertiesList
      properties:
        ExportJobPropertiesList:
          $ref: '#/components/schemas/ExportJobPropertiesList'
          description: ' The properties of listed FHIR export jobs, including the ID, ARN, name, and the status of the job. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query. '
    ListFHIRExportJobsRequest:
      type: object
      required:
        - DatastoreId
      title: ListFHIRExportJobsRequest
      properties:
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: ' This parameter limits the response to the export job with the specified Data Store ID. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query. '
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: ' This parameter limits the number of results returned for a ListFHIRExportJobs to a maximum quantity specified by the user. '
        JobName:
          $ref: '#/components/schemas/JobName'
          description: ' This parameter limits the response to the export job with the specified job name. '
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: ' This parameter limits the response to the export jobs with the specified job status. '
        SubmittedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: ' This parameter limits the response to FHIR export jobs submitted before a user specified date. '
        SubmittedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: ' This parameter limits the response to FHIR export jobs submitted after a user specified date. '
    ListFHIRImportJobsResponse:
      type: object
      required:
        - ImportJobPropertiesList
      properties:
        ImportJobPropertiesList:
          $ref: '#/components/schemas/ImportJobPropertiesList'
          description: ' The properties of a listed FHIR import jobs, including the ID, ARN, name, and the status of the job. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' A pagination token used to identify the next page of results to return for a ListFHIRImportJobs query. '
    ListFHIRImportJobsRequest:
      type: object
      required:
        - DatastoreId
      title: ListFHIRImportJobsRequest
      properties:
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: ' This parameter limits the response to the import job with the specified Data Store ID. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' A pagination token used to identify the next page of results to return for a ListFHIRImportJobs query. '
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: ' This parameter limits the number of results returned for a ListFHIRImportJobs to a maximum quantity specified by the user. '
        JobName:
          $ref: '#/components/schemas/JobName'
          description: ' This parameter limits the response to the import job with the specified job name. '
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: ' This parameter limits the response to the import job with the specified job status. '
        SubmittedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: ' This parameter limits the response to FHIR import jobs submitted before a user specified date. '
        SubmittedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: ' This parameter limits the response to FHIR import jobs submitted after a user specified date. '
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: ' Returns a list of tags associated with a Data Store. '
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceARN
      title: ListTagsForResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: ' The Amazon Resource Name(ARN) of the Data Store for which tags are being added. '
    StartFHIRExportJobResponse:
      type: object
      required:
        - JobId
        - JobStatus
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The AWS generated ID for an export job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'The status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.'
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: The AWS generated ID for the Data Store from which files are being exported for an export job.
    StartFHIRExportJobRequest:
      type: object
      required:
        - OutputDataConfig
        - DatastoreId
        - DataAccessRoleArn
        - ClientToken
      title: StartFHIRExportJobRequest
      properties:
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The user generated name for an export job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: The output data configuration that was supplied when the export job was created.
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: The AWS generated ID for the Data Store from which files are being exported for an export job.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name used during the initiation of the job.
        ClientToken:
          $ref: '#/components/schemas/ClientTokenString'
          description: An optional user provided token used for ensuring idempotency.
    StartFHIRImportJobResponse:
      type: object
      required:
        - JobId
        - JobStatus
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The AWS-generated job ID.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: The status of an import job.
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: The AWS-generated Data Store ID.
    StartFHIRImportJobRequest:
      type: object
      required:
        - InputDataConfig
        - JobOutputDataConfig
        - DatastoreId
        - DataAccessRoleArn
        - ClientToken
      title: StartFHIRImportJobRequest
      properties:
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The name of the FHIR Import job in the StartFHIRImport job request.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: The input properties of the FHIR Import job in the StartFHIRImport job request.
        JobOutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: The AWS-generated Data Store ID.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) that gives Amazon HealthLake access permission.
        ClientToken:
          $ref: '#/components/schemas/ClientTokenString'
          description: Optional user provided token used for ensuring idempotency.
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceARN
        - Tags
      title: TagResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: ' The Amazon Resource Name(ARN)that gives Amazon HealthLake access to the Data Store which tags are being added to. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: ' The user specified key and value pair tags being added to a Data Store. '
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceARN
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: ' "The Amazon Resource Name(ARN) of the Data Store for which tags are being removed '
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: ' The keys for the tags to be removed from the Healthlake Data Store. '
    AmazonResourceName:
      type: string
      pattern: '^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-z0-9-]+:\d{12}:datastore\/fhir\/.{32}'
      minLength: 1
      maxLength: 1011
    BoundedLengthString:
      type: string
      pattern: '[\P{M}\p{M}]{1,5000}'
      minLength: 1
      maxLength: 5000
    ClientTokenString:
      type: string
      pattern: '^[a-zA-Z0-9-]+$'
      minLength: 1
      maxLength: 64
    CmkType:
      type: string
      enum:
        - CUSTOMER_MANAGED_KMS_KEY
        - AWS_OWNED_KMS_KEY
    DatastoreName:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
      minLength: 1
      maxLength: 256
    FHIRVersion:
      type: string
      enum:
        - R4
    SseConfiguration:
      type: object
      required:
        - KmsEncryptionConfig
      properties:
        KmsEncryptionConfig:
          $ref: '#/components/schemas/KmsEncryptionConfig'
          description: ' The KMS encryption configuration used to provide details for data encryption. '
      description: ' The server-side encryption key configuration for a customer provided encryption key. '
    PreloadDataConfig:
      type: object
      required:
        - PreloadDataType
      properties:
        PreloadDataType:
          $ref: '#/components/schemas/PreloadDataType'
          description: The type of preloaded data. Only Synthea preloaded data is supported.
      description: ' The input properties for the preloaded Data Store. Only data preloaded from Synthea is supported.'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 200
    DatastoreId:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
      minLength: 1
      maxLength: 32
    DatastoreArn:
      type: string
      pattern: '^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?'
    DatastoreStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - DELETED
    Timestamp:
      type: string
      format: date-time
    DatastoreFilter:
      type: object
      properties:
        DatastoreName:
          $ref: '#/components/schemas/DatastoreName'
          description: Allows the user to filter Data Store results by name.
        DatastoreStatus:
          $ref: '#/components/schemas/DatastoreStatus'
          description: Allows the user to filter Data Store results by status.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'A filter that allows the user to set cutoff dates for records. All Data Stores created before the specified date will be included in the results. '
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that allows the user to set cutoff dates for records. All Data Stores created after the specified date will be included in the results.
      description: The filters applied to Data Store query.
    String:
      type: string
      pattern: '[\P{M}\p{M}]{0,10000}'
      maxLength: 10000
    DatastoreProperties:
      type: object
      required:
        - DatastoreId
        - DatastoreArn
        - DatastoreStatus
        - DatastoreTypeVersion
        - DatastoreEndpoint
      properties:
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: The AWS-generated ID number for the Data Store.
        DatastoreArn:
          $ref: '#/components/schemas/DatastoreArn'
          description: The Amazon Resource Name used in the creation of the Data Store.
        DatastoreName:
          $ref: '#/components/schemas/DatastoreName'
          description: The user-generated name for the Data Store.
        DatastoreStatus:
          $ref: '#/components/schemas/DatastoreStatus'
          description: 'The status of the Data Store. Possible statuses are ''CREATING'', ''ACTIVE'', ''DELETING'', or ''DELETED''.'
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time that a Data Store was created. '
        DatastoreTypeVersion:
          $ref: '#/components/schemas/FHIRVersion'
          description: The FHIR version. Only R4 version data is supported.
        DatastoreEndpoint:
          $ref: '#/components/schemas/String'
          description: The AWS endpoint for the Data Store. Each Data Store will have it's own endpoint with Data Store ID in the endpoint URL.
        SseConfiguration:
          $ref: '#/components/schemas/SseConfiguration'
          description: ' The server-side encryption key configuration for a customer provided encryption key (CMK). '
        PreloadDataConfig:
          $ref: '#/components/schemas/PreloadDataConfig'
          description: The preloaded data configuration for the Data Store. Only data preloaded from Synthea is supported.
      description: 'Displays the properties of the Data Store, including the ID, Arn, name, and the status of the Data Store.'
    DatastorePropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/DatastoreProperties'
    JobId:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
      minLength: 1
      maxLength: 32
    ExportJobProperties:
      type: object
      required:
        - JobId
        - JobStatus
        - SubmitTime
        - DatastoreId
        - OutputDataConfig
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The AWS generated ID for an export job.
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The user generated name for an export job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'The status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.'
        SubmitTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time an export job was initiated.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time an export job completed.
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: The AWS generated ID for the Data Store from which files are being exported for an export job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: The output data configuration that was supplied when the export job was created.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name used during the initiation of the job.
        Message:
          $ref: '#/components/schemas/Message'
          description: An explanation of any errors that may have occurred during the export job.
      description: 'The properties of a FHIR export job, including the ID, ARN, name, and the status of the job.'
    ImportJobProperties:
      type: object
      required:
        - JobId
        - JobStatus
        - SubmitTime
        - DatastoreId
        - InputDataConfig
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The AWS-generated id number for the Import job.
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The user-generated name for an Import job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'The job status for an Import job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, FAILED.'
        SubmitTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the Import job was submitted for processing.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the Import job was completed.
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
          description: 'The datastore id used when the Import job was created. '
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: The input data configuration that was supplied when the Import job was created.
        JobOutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) that gives Amazon HealthLake access to your input data.
        Message:
          $ref: '#/components/schemas/Message'
          description: 'An explanation of any errors that may have occurred during the FHIR import job. '
      description: 'Displays the properties of the import job, including the ID, Arn, Name, and the status of the Data Store.'
    EncryptionKeyID:
      type: string
      pattern: '(arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:kms:)?([a-z]{2}-[a-z]+(-[a-z]+)?-\d:)?(\d{12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))'
      minLength: 1
      maxLength: 400
    JobName:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
      minLength: 1
      maxLength: 64
    JobStatus:
      type: string
      enum:
        - SUBMITTED
        - IN_PROGRESS
        - COMPLETED_WITH_ERRORS
        - COMPLETED
        - FAILED
    OutputDataConfig:
      type: object
      properties:
        S3Configuration:
          $ref: '#/components/schemas/S3Configuration'
          description: ' The output data configuration that was supplied when the export job was created. '
      description: The output data configuration that was supplied when the export job was created.
    IamRoleArn:
      type: string
      pattern: 'arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+'
      minLength: 20
      maxLength: 2048
    Message:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
      minLength: 1
      maxLength: 2048
    ExportJobPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/ExportJobProperties'
    InputDataConfig:
      type: object
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: 'The S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake. '
      description: ' The input properties for an import job.'
    ImportJobPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/ImportJobProperties'
    S3Uri:
      type: string
      pattern: 's3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?'
      maxLength: 1024
    KmsEncryptionConfig:
      type: object
      required:
        - CmkType
      properties:
        CmkType:
          $ref: '#/components/schemas/CmkType'
          description: ' The type of customer-managed-key(CMK) used for encyrption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs. '
        KmsKeyId:
          $ref: '#/components/schemas/EncryptionKeyID'
          description: ' The KMS encryption key id/alias used to encrypt the Data Store contents at rest. '
      description: ' The customer-managed-key(CMK) used when creating a Data Store. If a customer owned key is not specified, an AWS owned key will be used for encryption. '
    NextToken:
      type: string
      pattern: '\p{ASCII}{0,8192}'
      maxLength: 8192
    MaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 500
    S3Configuration:
      type: object
      required:
        - S3Uri
        - KmsKeyId
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: ' The S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake. '
        KmsKeyId:
          $ref: '#/components/schemas/EncryptionKeyID'
          description: ' The KMS key ID used to access the S3 bucket. '
      description: ' The configuration of the S3 bucket for either an import or export job. This includes assigning permissions for access. '
    PreloadDataType:
      type: string
      enum:
        - SYNTHEA
    TagKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: ' The key portion of a tag. Tag keys are case sensitive. '
        Value:
          $ref: '#/components/schemas/TagValue'
          description: ' The value portion of tag. Tag values are case sensitive. '
      description: ' A tag is a label consisting of a user-defined key and value. The form for tags is {"Key", "Value"} '
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 200
security:
  - hmac: []
