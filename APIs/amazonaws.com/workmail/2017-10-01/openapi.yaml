openapi: 3.0.0
info:
  version: '2017-10-01'
  x-release: v4
  title: Amazon WorkMail
  description: '<p>Amazon WorkMail is a secure, managed business email and calendaring service with support for existing desktop and mobile email clients. You can access your email, contacts, and calendars using Microsoft Outlook, your browser, or other native iOS and Android email applications. You can integrate WorkMail with your existing corporate directory and control both the keys that encrypt your data and the location in which your data is stored.</p> <p>The WorkMail API is designed for the following scenarios:</p> <ul> <li> <p>Listing and describing organizations</p> </li> </ul> <ul> <li> <p>Managing users</p> </li> </ul> <ul> <li> <p>Managing groups</p> </li> </ul> <ul> <li> <p>Managing resources</p> </li> </ul> <p>All WorkMail API operations are Amazon-authenticated and certificate-signed. They not only require the use of the AWS SDK, but also allow for the exclusive use of AWS Identity and Access Management users and roles to help facilitate access, trust, and permission policies. By creating a role and allowing an IAM user to access the WorkMail site, the IAM user gains full administrative visibility into the entire WorkMail organization (or as set in the IAM policy). This includes, but is not limited to, the ability to create, update, and delete users, groups, and resources. This allows developers to perform the scenarios listed above, as well as give users the ability to grant access on a selective basis using the IAM model.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: workmail
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workmail-2017-10-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/workmail/'
servers:
  - url: 'http://workmail.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon WorkMail multi-region endpoint
  - url: 'https://workmail.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon WorkMail multi-region endpoint
  - url: 'http://workmail.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon WorkMail endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://workmail.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon WorkMail endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=WorkMailService.AssociateDelegateToResource:
    post:
      operationId: AssociateDelegateToResource
      description: Adds a member (user or group) to the resource's set of delegates.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateDelegateToResourceResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateDelegateToResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.AssociateDelegateToResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.AssociateMemberToGroup:
    post:
      operationId: AssociateMemberToGroup
      description: Adds a member (user or group) to the group's set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateMemberToGroupResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '483':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '484':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '485':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '486':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '487':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateMemberToGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.AssociateMemberToGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.CancelMailboxExportJob:
    post:
      operationId: CancelMailboxExportJob
      description: '<p>Cancels a mailbox export job.</p> <note> <p>If the mailbox export job is near completion, it might not be possible to cancel it.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelMailboxExportJobResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '483':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelMailboxExportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.CancelMailboxExportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.CreateAlias:
    post:
      operationId: CreateAlias
      description: Adds an alias to the set of a given member (user or group) of Amazon WorkMail.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAliasResponse'
        '480':
          description: EmailAddressInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddressInUseException'
        '481':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '482':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: MailDomainNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainNotFoundException'
        '485':
          description: MailDomainStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainStateException'
        '486':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '487':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '488':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAliasRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.CreateAlias
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.CreateGroup:
    post:
      operationId: CreateGroup
      description: Creates a group that can be used in Amazon WorkMail by calling the <a>RegisterToWorkMail</a> operation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroupResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: NameAvailabilityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityException'
        '484':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '485':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '486':
          description: ReservedNameException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservedNameException'
        '487':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.CreateGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.CreateMobileDeviceAccessRule:
    post:
      operationId: CreateMobileDeviceAccessRule
      description: Creates a new mobile device access rule for the specified Amazon WorkMail organization.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMobileDeviceAccessRuleResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMobileDeviceAccessRuleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.CreateMobileDeviceAccessRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.CreateOrganization:
    post:
      operationId: CreateOrganization
      description: '<p>Creates a new Amazon WorkMail organization. Optionally, you can choose to associate an existing AWS Directory Service directory with your organization. If an AWS Directory Service directory ID is specified, the organization alias must match the directory alias. If you choose not to associate an existing directory with your organization, then we create a new Amazon WorkMail directory for you. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/add_new_organization.html">Adding an organization</a> in the <i>Amazon WorkMail Administrator Guide</i>.</p> <p>You can associate multiple email domains with an organization, then set your default email domain from the Amazon WorkMail console. You can also associate a domain that is managed in an Amazon Route 53 public hosted zone. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/add_domain.html">Adding a domain</a> and <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/default_domain.html">Choosing the default domain</a> in the <i>Amazon WorkMail Administrator Guide</i>.</p> <p>Optionally, you can use a customer managed master key from AWS Key Management Service (AWS KMS) to encrypt email for your organization. If you don''t associate an AWS KMS key, Amazon WorkMail creates a default AWS managed master key for you.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: DirectoryInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryInUseException'
        '482':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: NameAvailabilityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.CreateOrganization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.CreateResource:
    post:
      operationId: CreateResource
      description: 'Creates a new Amazon WorkMail resource. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResourceResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: NameAvailabilityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityException'
        '484':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '485':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '486':
          description: ReservedNameException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservedNameException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.CreateResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.CreateUser:
    post:
      operationId: CreateUser
      description: Creates a user who can be used in Amazon WorkMail by calling the <a>RegisterToWorkMail</a> operation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: InvalidPasswordException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
        '484':
          description: NameAvailabilityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityException'
        '485':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '486':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '487':
          description: ReservedNameException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservedNameException'
        '488':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.CreateUser
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DeleteAccessControlRule:
    post:
      operationId: DeleteAccessControlRule
      description: Deletes an access control rule for the specified WorkMail organization.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccessControlRuleResponse'
        '480':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '481':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAccessControlRuleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteAccessControlRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DeleteAlias:
    post:
      operationId: DeleteAlias
      description: Remove one or more specified aliases from a set of aliases for a given user.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAliasResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAliasRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteAlias
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DeleteGroup:
    post:
      operationId: DeleteGroup
      description: Deletes a group from Amazon WorkMail.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGroupResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '485':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '486':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DeleteMailboxPermissions:
    post:
      operationId: DeleteMailboxPermissions
      description: Deletes permissions granted to a member (user or group).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMailboxPermissionsResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMailboxPermissionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteMailboxPermissions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DeleteMobileDeviceAccessRule:
    post:
      operationId: DeleteMobileDeviceAccessRule
      description: Deletes a mobile device access rule for the specified Amazon WorkMail organization.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMobileDeviceAccessRuleResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMobileDeviceAccessRuleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteMobileDeviceAccessRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DeleteOrganization:
    post:
      operationId: DeleteOrganization
      description: 'Deletes an Amazon WorkMail organization and all underlying AWS resources managed by Amazon WorkMail as part of the organization. You can choose whether to delete the associated directory. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/remove_organization.html">Removing an organization</a> in the <i>Amazon WorkMail Administrator Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOrganizationResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOrganizationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteOrganization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DeleteResource:
    post:
      operationId: DeleteResource
      description: 'Deletes the specified resource. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourceResponse'
        '480':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DeleteRetentionPolicy:
    post:
      operationId: DeleteRetentionPolicy
      description: Deletes the specified retention policy from the specified organization.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRetentionPolicyResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRetentionPolicyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteRetentionPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DeleteUser:
    post:
      operationId: DeleteUser
      description: '<p>Deletes a user from Amazon WorkMail and all subsequent systems. Before you can delete a user, the user state must be <code>DISABLED</code>. Use the <a>DescribeUser</a> action to confirm the user state.</p> <p>Deleting a user is permanent and cannot be undone. WorkMail archives user mailboxes for 30 days before they are permanently removed.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '485':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '486':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteUser
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DeregisterFromWorkMail:
    post:
      operationId: DeregisterFromWorkMail
      description: 'Mark a user, group, or resource as no longer used in Amazon WorkMail. This action disassociates the mailbox and schedules it for clean-up. WorkMail keeps mailboxes for 30 days before they are permanently removed. The functionality in the console is <i>Disable</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterFromWorkMailResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterFromWorkMailRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeregisterFromWorkMail
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DescribeGroup:
    post:
      operationId: DescribeGroup
      description: Returns the data available for the group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGroupResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DescribeGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DescribeMailboxExportJob:
    post:
      operationId: DescribeMailboxExportJob
      description: Describes the current status of a mailbox export job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMailboxExportJobResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '483':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMailboxExportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DescribeMailboxExportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DescribeOrganization:
    post:
      operationId: DescribeOrganization
      description: Provides more information regarding a given organization based on its identifier.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOrganizationResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeOrganizationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DescribeOrganization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DescribeResource:
    post:
      operationId: DescribeResource
      description: Returns the data available for the resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeResourceResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DescribeResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DescribeUser:
    post:
      operationId: DescribeUser
      description: Provides information regarding the user.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DescribeUser
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DisassociateDelegateFromResource:
    post:
      operationId: DisassociateDelegateFromResource
      description: Removes a member from the resource's set of delegates.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateDelegateFromResourceResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateDelegateFromResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DisassociateDelegateFromResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.DisassociateMemberFromGroup:
    post:
      operationId: DisassociateMemberFromGroup
      description: Removes a member from a group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateMemberFromGroupResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '483':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '484':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '485':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '486':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '487':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateMemberFromGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DisassociateMemberFromGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.GetAccessControlEffect:
    post:
      operationId: GetAccessControlEffect
      description: 'Gets the effects of an organization''s access control rules as they apply to a specified IPv4 address, access protocol action, or user ID. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessControlEffectResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccessControlEffectRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.GetAccessControlEffect
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.GetDefaultRetentionPolicy:
    post:
      operationId: GetDefaultRetentionPolicy
      description: Gets the default retention policy details for the specified organization.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDefaultRetentionPolicyResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '483':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDefaultRetentionPolicyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.GetDefaultRetentionPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.GetMailboxDetails:
    post:
      operationId: GetMailboxDetails
      description: Requests a user's mailbox details for a specified organization and user.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMailboxDetailsResponse'
        '480':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '481':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '482':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMailboxDetailsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.GetMailboxDetails
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.GetMobileDeviceAccessEffect:
    post:
      operationId: GetMobileDeviceAccessEffect
      description: Simulates the effect of the mobile device access rules for the given attributes of a sample access event. Use this method to test the effects of the current set of mobile device access rules for the Amazon WorkMail organization for a particular user's attributes.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMobileDeviceAccessEffectResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMobileDeviceAccessEffectRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.GetMobileDeviceAccessEffect
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ListAccessControlRules:
    post:
      operationId: ListAccessControlRules
      description: Lists the access control rules for the specified organization.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessControlRulesResponse'
        '480':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '481':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccessControlRulesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListAccessControlRules
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ListAliases:
    post:
      operationId: ListAliases
      description: Creates a paginated call to list the aliases associated with a given entity.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAliasesResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAliasesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListAliases
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ListGroupMembers:
    post:
      operationId: ListGroupMembers
      description: Returns an overview of the members of a group. Users and groups can be members of a group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupMembersResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListGroupMembersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListGroupMembers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ListGroups:
    post:
      operationId: ListGroups
      description: Returns summaries of the organization's groups.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListGroupsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ListMailboxExportJobs:
    post:
      operationId: ListMailboxExportJobs
      description: Lists the mailbox export jobs started for the specified organization within the last seven days.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMailboxExportJobsResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMailboxExportJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListMailboxExportJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ListMailboxPermissions:
    post:
      operationId: ListMailboxPermissions
      description: 'Lists the mailbox permissions associated with a user, group, or resource mailbox.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMailboxPermissionsResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMailboxPermissionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListMailboxPermissions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ListMobileDeviceAccessRules:
    post:
      operationId: ListMobileDeviceAccessRules
      description: Lists the mobile device access rules for the specified Amazon WorkMail organization.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMobileDeviceAccessRulesResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMobileDeviceAccessRulesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListMobileDeviceAccessRules
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ListOrganizations:
    post:
      operationId: ListOrganizations
      description: Returns summaries of the customer's organizations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationsResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOrganizationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListOrganizations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ListResourceDelegates:
    post:
      operationId: ListResourceDelegates
      description: Lists the delegates associated with a resource. Users and groups can be resource delegates and answer requests on behalf of the resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourceDelegatesResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourceDelegatesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListResourceDelegates
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ListResources:
    post:
      operationId: ListResources
      description: Returns summaries of the organization's resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcesResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourcesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListResources
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Lists the tags applied to an Amazon WorkMail organization resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ListUsers:
    post:
      operationId: ListUsers
      description: Returns summaries of the organization's users.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListUsers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.PutAccessControlRule:
    post:
      operationId: PutAccessControlRule
      description: 'Adds a new access control rule for the specified organization. The rule allows or denies access to the organization for the specified IPv4 addresses, access protocol actions, and user IDs. Adding a new rule with the same name as an existing rule replaces the older rule.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccessControlRuleResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '483':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccessControlRuleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.PutAccessControlRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.PutMailboxPermissions:
    post:
      operationId: PutMailboxPermissions
      description: 'Sets permissions for a user, group, or resource. This replaces any pre-existing permissions.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMailboxPermissionsResponse'
        '480':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '481':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMailboxPermissionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.PutMailboxPermissions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.PutRetentionPolicy:
    post:
      operationId: PutRetentionPolicy
      description: Puts a retention policy to the specified organization.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRetentionPolicyResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRetentionPolicyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.PutRetentionPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.RegisterToWorkMail:
    post:
      operationId: RegisterToWorkMail
      description: '<p>Registers an existing and disabled user, group, or resource for Amazon WorkMail use by associating a mailbox and calendaring capabilities. It performs no change if the user, group, or resource is enabled and fails if the user, group, or resource is deleted. This operation results in the accumulation of costs. For more information, see <a href="https://aws.amazon.com/workmail/pricing">Pricing</a>. The equivalent console functionality for this operation is <i>Enable</i>. </p> <p>Users can either be created by calling the <a>CreateUser</a> API operation or they can be synchronized from your directory. For more information, see <a>DeregisterFromWorkMail</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterToWorkMailResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: EmailAddressInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddressInUseException'
        '483':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '484':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '485':
          description: EntityAlreadyRegisteredException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAlreadyRegisteredException'
        '486':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '487':
          description: MailDomainNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainNotFoundException'
        '488':
          description: MailDomainStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainStateException'
        '489':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '490':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterToWorkMailRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.RegisterToWorkMail
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.ResetPassword:
    post:
      operationId: ResetPassword
      description: Allows the administrator to reset the password for a user.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '483':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '484':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '485':
          description: InvalidPasswordException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
        '486':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '487':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '488':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ResetPassword
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.StartMailboxExportJob:
    post:
      operationId: StartMailboxExportJob
      description: 'Starts a mailbox export job to export MIME-format email messages and calendar items from the specified mailbox to the specified Amazon Simple Storage Service (Amazon S3) bucket. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/mail-export.html">Exporting mailbox content</a> in the <i>Amazon WorkMail Administrator Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMailboxExportJobResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '483':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMailboxExportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.StartMailboxExportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.TagResource:
    post:
      operationId: TagResource
      description: Applies the specified tags to the specified Amazon WorkMail organization resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.UntagResource:
    post:
      operationId: UntagResource
      description: Untags the specified tags from the specified Amazon WorkMail organization resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.UpdateMailboxQuota:
    post:
      operationId: UpdateMailboxQuota
      description: Updates a user's current mailbox quota for a specified organization and user.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMailboxQuotaResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '483':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '484':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMailboxQuotaRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.UpdateMailboxQuota
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.UpdateMobileDeviceAccessRule:
    post:
      operationId: UpdateMobileDeviceAccessRule
      description: Updates a mobile device access rule for the specified Amazon WorkMail organization.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMobileDeviceAccessRuleResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '482':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMobileDeviceAccessRuleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.UpdateMobileDeviceAccessRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.UpdatePrimaryEmailAddress:
    post:
      operationId: UpdatePrimaryEmailAddress
      description: 'Updates the primary email for a user, group, or resource. The current email is moved into the list of aliases (or swapped between an existing alias and the current primary email), and the email provided in the input is promoted as the primary.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePrimaryEmailAddressResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: EmailAddressInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddressInUseException'
        '483':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '484':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '485':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '486':
          description: MailDomainNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainNotFoundException'
        '487':
          description: MailDomainStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainStateException'
        '488':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '489':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '490':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
        '491':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePrimaryEmailAddressRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.UpdatePrimaryEmailAddress
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=WorkMailService.UpdateResource:
    post:
      operationId: UpdateResource
      description: 'Updates data for the resource. To have the latest information, it must be preceded by a <a>DescribeResource</a> call. The dataset in the request should be the one expected when performing another <code>DescribeResource</code> call.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResourceResponse'
        '480':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '481':
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
        '482':
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
        '483':
          description: InvalidConfigurationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidConfigurationException'
        '484':
          description: EmailAddressInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddressInUseException'
        '485':
          description: MailDomainNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainNotFoundException'
        '486':
          description: MailDomainStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainStateException'
        '487':
          description: NameAvailabilityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityException'
        '488':
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
        '489':
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.UpdateResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateDelegateToResourceResponse:
      type: object
      properties: {}
    AssociateDelegateToResourceRequest:
      type: object
      required:
        - OrganizationId
        - ResourceId
        - EntityId
      title: AssociateDelegateToResourceRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization under which the resource exists.
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The resource for which members (users or groups) are associated.
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The member (user or group) to associate to the resource.
    EntityNotFoundException: {}
    EntityStateException: {}
    InvalidParameterException: {}
    OrganizationNotFoundException: {}
    OrganizationStateException: {}
    AssociateMemberToGroupResponse:
      type: object
      properties: {}
    AssociateMemberToGroupRequest:
      type: object
      required:
        - OrganizationId
        - GroupId
        - MemberId
      title: AssociateMemberToGroupRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization under which the group exists.
        GroupId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The group to which the member (user or group) is associated.
        MemberId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The member (user or group) to associate to the group.
    DirectoryServiceAuthenticationFailedException: {}
    DirectoryUnavailableException: {}
    UnsupportedOperationException: {}
    CancelMailboxExportJobResponse:
      type: object
      properties: {}
    CancelMailboxExportJobRequest:
      type: object
      required:
        - ClientToken
        - JobId
        - OrganizationId
      title: CancelMailboxExportJobRequest
      properties:
        ClientToken:
          $ref: '#/components/schemas/IdempotencyClientToken'
          description: The idempotency token for the client request.
        JobId:
          $ref: '#/components/schemas/MailboxExportJobId'
          description: The job ID.
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization ID.
    CreateAliasResponse:
      type: object
      properties: {}
    CreateAliasRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
        - Alias
      title: CreateAliasRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization under which the member (user or group) exists.
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The member (user or group) to which this alias is added.
        Alias:
          $ref: '#/components/schemas/EmailAddress'
          description: The alias to add to the member set.
    EmailAddressInUseException: {}
    MailDomainNotFoundException: {}
    MailDomainStateException: {}
    LimitExceededException: {}
    CreateGroupResponse:
      type: object
      properties:
        GroupId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the group.
    CreateGroupRequest:
      type: object
      required:
        - OrganizationId
        - Name
      title: CreateGroupRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization under which the group is to be created.
        Name:
          $ref: '#/components/schemas/GroupName'
          description: The name of the group.
    NameAvailabilityException: {}
    ReservedNameException: {}
    CreateMobileDeviceAccessRuleResponse:
      type: object
      properties:
        MobileDeviceAccessRuleId:
          $ref: '#/components/schemas/MobileDeviceAccessRuleId'
          description: The identifier for the newly created mobile device access rule.
    CreateMobileDeviceAccessRuleRequest:
      type: object
      required:
        - OrganizationId
        - Name
        - Effect
      title: CreateMobileDeviceAccessRuleRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The Amazon WorkMail organization under which the rule will be created.
        ClientToken:
          $ref: '#/components/schemas/IdempotencyClientToken'
          description: The idempotency token for the client request.
        Name:
          $ref: '#/components/schemas/MobileDeviceAccessRuleName'
          description: The rule name.
        Description:
          $ref: '#/components/schemas/MobileDeviceAccessRuleDescription'
          description: The rule description.
        Effect:
          $ref: '#/components/schemas/MobileDeviceAccessRuleEffect'
          description: The effect of the rule when it matches. Allowed values are <code>ALLOW</code> or <code>DENY</code>.
        DeviceTypes:
          $ref: '#/components/schemas/DeviceTypeList'
          description: Device types that the rule will match.
        NotDeviceTypes:
          $ref: '#/components/schemas/DeviceTypeList'
          description: Device types that the rule <b>will not</b> match. All other device types will match.
        DeviceModels:
          $ref: '#/components/schemas/DeviceModelList'
          description: Device models that the rule will match.
        NotDeviceModels:
          $ref: '#/components/schemas/DeviceModelList'
          description: Device models that the rule <b>will not</b> match. All other device models will match.
        DeviceOperatingSystems:
          $ref: '#/components/schemas/DeviceOperatingSystemList'
          description: Device operating systems that the rule will match.
        NotDeviceOperatingSystems:
          $ref: '#/components/schemas/DeviceOperatingSystemList'
          description: Device operating systems that the rule <b>will not</b> match. All other device operating systems will match.
        DeviceUserAgents:
          $ref: '#/components/schemas/DeviceUserAgentList'
          description: Device user agents that the rule will match.
        NotDeviceUserAgents:
          $ref: '#/components/schemas/DeviceUserAgentList'
          description: Device user agents that the rule <b>will not</b> match. All other device user agents will match.
    CreateOrganizationResponse:
      type: object
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization ID.
    CreateOrganizationRequest:
      type: object
      required:
        - Alias
      title: CreateOrganizationRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The AWS Directory Service directory ID.
        Alias:
          $ref: '#/components/schemas/OrganizationName'
          description: The organization alias.
        ClientToken:
          $ref: '#/components/schemas/IdempotencyClientToken'
          description: The idempotency token associated with the request.
        Domains:
          $ref: '#/components/schemas/Domains'
          description: The email domains to associate with the organization.
        KmsKeyArn:
          $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of a customer managed master key from AWS KMS.
        EnableInteroperability:
          $ref: '#/components/schemas/Boolean'
          description: 'When <code>true</code>, allows organization interoperability between Amazon WorkMail and Microsoft Exchange. Can only be set to <code>true</code> if an AD Connector directory ID is included in the request.'
    DirectoryInUseException: {}
    CreateResourceResponse:
      type: object
      properties:
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The identifier of the new resource.
    CreateResourceRequest:
      type: object
      required:
        - OrganizationId
        - Name
        - Type
      title: CreateResourceRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier associated with the organization for which the resource is created.
        Name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the new resource.
        Type:
          $ref: '#/components/schemas/ResourceType'
          description: The type of the new resource. The available types are <code>equipment</code> and <code>room</code>.
    CreateUserResponse:
      type: object
      properties:
        UserId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier for the new user.
    CreateUserRequest:
      type: object
      required:
        - OrganizationId
        - Name
        - DisplayName
        - Password
      title: CreateUserRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier of the organization for which the user is created.
        Name:
          $ref: '#/components/schemas/UserName'
          description: The name for the new user. WorkMail directory user names have a maximum length of 64. All others have a maximum length of 20.
        DisplayName:
          $ref: '#/components/schemas/String'
          description: The display name for the new user.
        Password:
          $ref: '#/components/schemas/Password'
          description: The password for the new user.
    InvalidPasswordException: {}
    DeleteAccessControlRuleResponse:
      type: object
      properties: {}
    DeleteAccessControlRuleRequest:
      type: object
      required:
        - OrganizationId
        - Name
      title: DeleteAccessControlRuleRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization.
        Name:
          $ref: '#/components/schemas/AccessControlRuleName'
          description: The name of the access control rule.
    DeleteAliasResponse:
      type: object
      properties: {}
    DeleteAliasRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
        - Alias
      title: DeleteAliasRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization under which the user exists.
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier for the member (user or group) from which to have the aliases removed.
        Alias:
          $ref: '#/components/schemas/EmailAddress'
          description: The aliases to be removed from the user's set of aliases. Duplicate entries in the list are collapsed into single entries (the list is transformed into a set).
    DeleteGroupResponse:
      type: object
      properties: {}
    DeleteGroupRequest:
      type: object
      required:
        - OrganizationId
        - GroupId
      title: DeleteGroupRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization that contains the group.
        GroupId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the group to be deleted.
    DeleteMailboxPermissionsResponse:
      type: object
      properties: {}
    DeleteMailboxPermissionsRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
        - GranteeId
      title: DeleteMailboxPermissionsRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier of the organization under which the member (user or group) exists.
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the member (user or group) that owns the mailbox.
        GranteeId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the member (user or group) for which to delete granted permissions.
    DeleteMobileDeviceAccessRuleResponse:
      type: object
      properties: {}
    DeleteMobileDeviceAccessRuleRequest:
      type: object
      required:
        - OrganizationId
        - MobileDeviceAccessRuleId
      title: DeleteMobileDeviceAccessRuleRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The Amazon WorkMail organization under which the rule will be deleted.
        MobileDeviceAccessRuleId:
          $ref: '#/components/schemas/MobileDeviceAccessRuleId'
          description: The identifier of the rule to be deleted.
    DeleteOrganizationResponse:
      type: object
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization ID.
        State:
          $ref: '#/components/schemas/String'
          description: The state of the organization.
    DeleteOrganizationRequest:
      type: object
      required:
        - OrganizationId
        - DeleteDirectory
      title: DeleteOrganizationRequest
      properties:
        ClientToken:
          $ref: '#/components/schemas/IdempotencyClientToken'
          description: The idempotency token associated with the request.
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization ID.
        DeleteDirectory:
          $ref: '#/components/schemas/Boolean'
          description: 'If true, deletes the AWS Directory Service directory associated with the organization.'
    DeleteResourceResponse:
      type: object
      properties: {}
    DeleteResourceRequest:
      type: object
      required:
        - OrganizationId
        - ResourceId
      title: DeleteResourceRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier associated with the organization from which the resource is deleted.
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The identifier of the resource to be deleted.
    DeleteRetentionPolicyResponse:
      type: object
      properties: {}
    DeleteRetentionPolicyRequest:
      type: object
      required:
        - OrganizationId
        - Id
      title: DeleteRetentionPolicyRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization ID.
        Id:
          $ref: '#/components/schemas/ShortString'
          description: The retention policy ID.
    DeleteUserResponse:
      type: object
      properties: {}
    DeleteUserRequest:
      type: object
      required:
        - OrganizationId
        - UserId
      title: DeleteUserRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization that contains the user to be deleted.
        UserId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the user to be deleted.
    DeregisterFromWorkMailResponse:
      type: object
      properties: {}
    DeregisterFromWorkMailRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
      title: DeregisterFromWorkMailRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization under which the Amazon WorkMail entity exists.
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier for the member (user or group) to be updated.
    DescribeGroupResponse:
      type: object
      properties:
        GroupId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the described group.
        Name:
          $ref: '#/components/schemas/GroupName'
          description: The name of the described group.
        Email:
          $ref: '#/components/schemas/EmailAddress'
          description: The email of the described group.
        State:
          $ref: '#/components/schemas/EntityState'
          description: 'The state of the user: enabled (registered to Amazon WorkMail) or disabled (deregistered or never registered to WorkMail).'
        EnabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when a user was registered to WorkMail, in UNIX epoch time format.'
        DisabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when a user was deregistered from WorkMail, in UNIX epoch time format.'
    DescribeGroupRequest:
      type: object
      required:
        - OrganizationId
        - GroupId
      title: DescribeGroupRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization under which the group exists.
        GroupId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier for the group to be described.
    DescribeMailboxExportJobResponse:
      type: object
      properties:
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the user or resource associated with the mailbox.
        Description:
          $ref: '#/components/schemas/Description'
          description: The mailbox export job description.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the AWS Identity and Access Management (IAM) role that grants write permission to the Amazon Simple Storage Service (Amazon S3) bucket.
        KmsKeyArn:
          $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of the symmetric AWS Key Management Service (AWS KMS) key that encrypts the exported mailbox content.
        S3BucketName:
          $ref: '#/components/schemas/S3BucketName'
          description: The name of the S3 bucket.
        S3Prefix:
          $ref: '#/components/schemas/S3ObjectKey'
          description: The S3 bucket prefix.
        S3Path:
          $ref: '#/components/schemas/S3ObjectKey'
          description: The path to the S3 bucket and file that the mailbox export job is exporting to.
        EstimatedProgress:
          $ref: '#/components/schemas/Percentage'
          description: 'The estimated progress of the mailbox export job, in percentage points.'
        State:
          $ref: '#/components/schemas/MailboxExportJobState'
          description: The state of the mailbox export job.
        ErrorInfo:
          $ref: '#/components/schemas/MailboxExportErrorInfo'
          description: Error information for failed mailbox export jobs.
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The mailbox export job start timestamp.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The mailbox export job end timestamp.
    DescribeMailboxExportJobRequest:
      type: object
      required:
        - JobId
        - OrganizationId
      title: DescribeMailboxExportJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/MailboxExportJobId'
          description: The mailbox export job ID.
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization ID.
    DescribeOrganizationResponse:
      type: object
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier of an organization.
        Alias:
          $ref: '#/components/schemas/OrganizationName'
          description: The alias for an organization.
        State:
          $ref: '#/components/schemas/String'
          description: The state of an organization.
        DirectoryId:
          $ref: '#/components/schemas/String'
          description: The identifier for the directory associated with an Amazon WorkMail organization.
        DirectoryType:
          $ref: '#/components/schemas/String'
          description: The type of directory associated with the WorkMail organization.
        DefaultMailDomain:
          $ref: '#/components/schemas/String'
          description: The default mail domain associated with the organization.
        CompletedDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date at which the organization became usable in the WorkMail context, in UNIX epoch time format.'
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: (Optional) The error message indicating if unexpected behavior was encountered with regards to the organization.
        ARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the organization.
    DescribeOrganizationRequest:
      type: object
      required:
        - OrganizationId
      title: DescribeOrganizationRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization to be described.
    DescribeResourceResponse:
      type: object
      properties:
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The identifier of the described resource.
        Email:
          $ref: '#/components/schemas/EmailAddress'
          description: The email of the described resource.
        Name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the described resource.
        Type:
          $ref: '#/components/schemas/ResourceType'
          description: The type of the described resource.
        BookingOptions:
          $ref: '#/components/schemas/BookingOptions'
          description: The booking options for the described resource.
        State:
          $ref: '#/components/schemas/EntityState'
          description: 'The state of the resource: enabled (registered to Amazon WorkMail), disabled (deregistered or never registered to WorkMail), or deleted.'
        EnabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when a resource was enabled for WorkMail, in UNIX epoch time format.'
        DisabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when a resource was disabled from WorkMail, in UNIX epoch time format.'
    DescribeResourceRequest:
      type: object
      required:
        - OrganizationId
        - ResourceId
      title: DescribeResourceRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier associated with the organization for which the resource is described.
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The identifier of the resource to be described.
    DescribeUserResponse:
      type: object
      properties:
        UserId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier for the described user.
        Name:
          $ref: '#/components/schemas/UserName'
          description: The name for the user.
        Email:
          $ref: '#/components/schemas/EmailAddress'
          description: The email of the user.
        DisplayName:
          $ref: '#/components/schemas/String'
          description: The display name of the user.
        State:
          $ref: '#/components/schemas/EntityState'
          description: 'The state of a user: enabled (registered to Amazon WorkMail) or disabled (deregistered or never registered to WorkMail).'
        UserRole:
          $ref: '#/components/schemas/UserRole'
          description: 'In certain cases, other entities are modeled as users. If interoperability is enabled, resources are imported into Amazon WorkMail as users. Because different WorkMail organizations rely on different directory types, administrators can distinguish between an unregistered user (account is disabled and has a user role) and the directory administrators. The values are USER, RESOURCE, and SYSTEM_USER.'
        EnabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time at which the user was enabled for Amazon WorkMail usage, in UNIX epoch time format.'
        DisabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time at which the user was disabled for Amazon WorkMail usage, in UNIX epoch time format.'
    DescribeUserRequest:
      type: object
      required:
        - OrganizationId
        - UserId
      title: DescribeUserRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization under which the user exists.
        UserId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier for the user to be described.
    DisassociateDelegateFromResourceResponse:
      type: object
      properties: {}
    DisassociateDelegateFromResourceRequest:
      type: object
      required:
        - OrganizationId
        - ResourceId
        - EntityId
      title: DisassociateDelegateFromResourceRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization under which the resource exists.
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: 'The identifier of the resource from which delegates'' set members are removed. '
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: 'The identifier for the member (user, group) to be removed from the resource''s delegates.'
    DisassociateMemberFromGroupResponse:
      type: object
      properties: {}
    DisassociateMemberFromGroupRequest:
      type: object
      required:
        - OrganizationId
        - GroupId
        - MemberId
      title: DisassociateMemberFromGroupRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization under which the group exists.
        GroupId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier for the group from which members are removed.
        MemberId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier for the member to be removed to the group.
    GetAccessControlEffectResponse:
      type: object
      properties:
        Effect:
          $ref: '#/components/schemas/AccessControlRuleEffect'
          description: The rule effect.
        MatchedRules:
          $ref: '#/components/schemas/AccessControlRuleNameList'
          description: 'The rules that match the given parameters, resulting in an effect.'
    GetAccessControlEffectRequest:
      type: object
      required:
        - OrganizationId
        - IpAddress
        - Action
        - UserId
      title: GetAccessControlEffectRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization.
        IpAddress:
          $ref: '#/components/schemas/IpAddress'
          description: The IPv4 address.
        Action:
          $ref: '#/components/schemas/AccessControlRuleAction'
          description: 'The access protocol action. Valid values include <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>.'
        UserId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The user ID.
    GetDefaultRetentionPolicyResponse:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ShortString'
          description: The retention policy ID.
        Name:
          $ref: '#/components/schemas/ShortString'
          description: The retention policy name.
        Description:
          $ref: '#/components/schemas/String'
          description: The retention policy description.
        FolderConfigurations:
          $ref: '#/components/schemas/FolderConfigurations'
          description: The retention policy folder configurations.
    GetDefaultRetentionPolicyRequest:
      type: object
      required:
        - OrganizationId
      title: GetDefaultRetentionPolicyRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization ID.
    GetMailboxDetailsResponse:
      type: object
      properties:
        MailboxQuota:
          $ref: '#/components/schemas/MailboxQuota'
          description: 'The maximum allowed mailbox size, in MB, for the specified user.'
        MailboxSize:
          $ref: '#/components/schemas/MailboxSize'
          description: 'The current mailbox size, in MB, for the specified user.'
    GetMailboxDetailsRequest:
      type: object
      required:
        - OrganizationId
        - UserId
      title: GetMailboxDetailsRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization that contains the user whose mailbox details are being requested.
        UserId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier for the user whose mailbox details are being requested.
    GetMobileDeviceAccessEffectResponse:
      type: object
      properties:
        Effect:
          $ref: '#/components/schemas/MobileDeviceAccessRuleEffect'
          description: 'The effect of the simulated access, <code>ALLOW</code> or <code>DENY</code>, after evaluating mobile device access rules in the Amazon WorkMail organization for the simulated user parameters.'
        MatchedRules:
          $ref: '#/components/schemas/MobileDeviceAccessMatchedRuleList'
          description: A list of the rules which matched the simulated user input and produced the effect.
    GetMobileDeviceAccessEffectRequest:
      type: object
      required:
        - OrganizationId
      title: GetMobileDeviceAccessEffectRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The Amazon WorkMail organization to simulate the access effect for.
        DeviceType:
          $ref: '#/components/schemas/DeviceType'
          description: Device type the simulated user will report.
        DeviceModel:
          $ref: '#/components/schemas/DeviceModel'
          description: Device model the simulated user will report.
        DeviceOperatingSystem:
          $ref: '#/components/schemas/DeviceOperatingSystem'
          description: Device operating system the simulated user will report.
        DeviceUserAgent:
          $ref: '#/components/schemas/DeviceUserAgent'
          description: Device user agent the simulated user will report.
    ListAccessControlRulesResponse:
      type: object
      properties:
        Rules:
          $ref: '#/components/schemas/AccessControlRulesList'
          description: The access control rules.
    ListAccessControlRulesRequest:
      type: object
      required:
        - OrganizationId
      title: ListAccessControlRulesRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization.
    ListAliasesResponse:
      type: object
      properties:
        Aliases:
          $ref: '#/components/schemas/Aliases'
          description: The entity's paginated aliases.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. The value is "null" when there are no more results to return.
    ListAliasesRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
      title: ListAliasesRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization under which the entity exists.
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier for the entity for which to list the aliases.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in a single call.
    ListGroupMembersResponse:
      type: object
      properties:
        Members:
          $ref: '#/components/schemas/Members'
          description: The members associated to the group.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
    ListGroupMembersRequest:
      type: object
      required:
        - OrganizationId
        - GroupId
      title: ListGroupMembersRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization under which the group exists.
        GroupId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier for the group to which the members (users or groups) are associated.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' The token to use to retrieve the next page of results. The first call does not contain any tokens.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in a single call.
    ListGroupsResponse:
      type: object
      properties:
        Groups:
          $ref: '#/components/schemas/Groups'
          description: The overview of groups for an organization.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. The value is "null" when there are no more results to return.
    ListGroupsRequest:
      type: object
      required:
        - OrganizationId
      title: ListGroupsRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization under which the groups exist.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in a single call.
    ListMailboxExportJobsResponse:
      type: object
      properties:
        Jobs:
          $ref: '#/components/schemas/Jobs'
          description: The mailbox export job details.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results.
    ListMailboxExportJobsRequest:
      type: object
      required:
        - OrganizationId
      title: ListMailboxExportJobsRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization ID.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in a single call.
    ListMailboxPermissionsResponse:
      type: object
      properties:
        Permissions:
          $ref: '#/components/schemas/Permissions'
          description: 'One page of the user, group, or resource mailbox permissions.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. The value is "null" when there are no more results to return.
    ListMailboxPermissionsRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
      title: ListMailboxPermissionsRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: 'The identifier of the organization under which the user, group, or resource exists.'
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: 'The identifier of the user, group, or resource for which to list mailbox permissions.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in a single call.
    ListMobileDeviceAccessRulesResponse:
      type: object
      properties:
        Rules:
          $ref: '#/components/schemas/MobileDeviceAccessRulesList'
          description: The list of mobile device access rules that exist under the specified Amazon WorkMail organization.
    ListMobileDeviceAccessRulesRequest:
      type: object
      required:
        - OrganizationId
      title: ListMobileDeviceAccessRulesRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The Amazon WorkMail organization for which to list the rules.
    ListOrganizationsResponse:
      type: object
      properties:
        OrganizationSummaries:
          $ref: '#/components/schemas/OrganizationSummaries'
          description: The overview of owned organizations presented as a list of organization summaries.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. The value is "null" when there are no more results to return.
    ListOrganizationsRequest:
      type: object
      title: ListOrganizationsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in a single call.
    ListResourceDelegatesResponse:
      type: object
      properties:
        Delegates:
          $ref: '#/components/schemas/ResourceDelegates'
          description: One page of the resource's delegates.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token used to paginate through the delegates associated with a resource. While results are still available, it has an associated value. When the last page is reached, the token is empty. '
    ListResourceDelegatesRequest:
      type: object
      required:
        - OrganizationId
        - ResourceId
      title: ListResourceDelegatesRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization that contains the resource for which delegates are listed.
        ResourceId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier for the resource whose delegates are listed.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token used to paginate through the delegates associated with a resource.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The number of maximum results in a page.
    ListResourcesResponse:
      type: object
      properties:
        Resources:
          $ref: '#/components/schemas/Resources'
          description: One page of the organization's resource representation.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' The token used to paginate through all the organization''s resources. While results are still available, it has an associated value. When the last page is reached, the token is empty.'
    ListResourcesRequest:
      type: object
      required:
        - OrganizationId
      title: ListResourcesRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization under which the resources exist.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in a single call.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag key-value pairs.
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceARN
      title: ListTagsForResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The resource ARN.
    ResourceNotFoundException: {}
    ListUsersResponse:
      type: object
      properties:
        Users:
          $ref: '#/components/schemas/Users'
          description: The overview of users for an organization.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' The token to use to retrieve the next page of results. This value is `null` when there are no more results to return.'
    ListUsersRequest:
      type: object
      required:
        - OrganizationId
      title: ListUsersRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization under which the users exist.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in a single call.
    PutAccessControlRuleResponse:
      type: object
      properties: {}
    PutAccessControlRuleRequest:
      type: object
      required:
        - Name
        - Effect
        - Description
        - OrganizationId
      title: PutAccessControlRuleRequest
      properties:
        Name:
          $ref: '#/components/schemas/AccessControlRuleName'
          description: The rule name.
        Effect:
          $ref: '#/components/schemas/AccessControlRuleEffect'
          description: The rule effect.
        Description:
          $ref: '#/components/schemas/AccessControlRuleDescription'
          description: The rule description.
        IpRanges:
          $ref: '#/components/schemas/IpRangeList'
          description: IPv4 CIDR ranges to include in the rule.
        NotIpRanges:
          $ref: '#/components/schemas/IpRangeList'
          description: IPv4 CIDR ranges to exclude from the rule.
        Actions:
          $ref: '#/components/schemas/ActionsList'
          description: 'Access protocol actions to include in the rule. Valid values include <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>.'
        NotActions:
          $ref: '#/components/schemas/ActionsList'
          description: 'Access protocol actions to exclude from the rule. Valid values include <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>.'
        UserIds:
          $ref: '#/components/schemas/UserIdList'
          description: User IDs to include in the rule.
        NotUserIds:
          $ref: '#/components/schemas/UserIdList'
          description: User IDs to exclude from the rule.
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier of the organization.
    PutMailboxPermissionsResponse:
      type: object
      properties: {}
    PutMailboxPermissionsRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
        - GranteeId
        - PermissionValues
      title: PutMailboxPermissionsRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: 'The identifier of the organization under which the user, group, or resource exists.'
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: 'The identifier of the user, group, or resource for which to update mailbox permissions.'
        GranteeId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: 'The identifier of the user, group, or resource to which to grant the permissions.'
        PermissionValues:
          $ref: '#/components/schemas/PermissionValues'
          description: 'The permissions granted to the grantee. SEND_AS allows the grantee to send email as the owner of the mailbox (the grantee is not mentioned on these emails). SEND_ON_BEHALF allows the grantee to send email on behalf of the owner of the mailbox (the grantee is not mentioned as the physical sender of these emails). FULL_ACCESS allows the grantee full access to the mailbox, irrespective of other folder-level permissions set on the mailbox.'
    PutRetentionPolicyResponse:
      type: object
      properties: {}
    PutRetentionPolicyRequest:
      type: object
      required:
        - OrganizationId
        - Name
        - FolderConfigurations
      title: PutRetentionPolicyRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The organization ID.
        Id:
          $ref: '#/components/schemas/ShortString'
          description: The retention policy ID.
        Name:
          $ref: '#/components/schemas/ShortString'
          description: The retention policy name.
        Description:
          $ref: '#/components/schemas/PolicyDescription'
          description: The retention policy description.
        FolderConfigurations:
          $ref: '#/components/schemas/FolderConfigurations'
          description: The retention policy folder configurations.
    RegisterToWorkMailResponse:
      type: object
      properties: {}
    RegisterToWorkMailRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
        - Email
      title: RegisterToWorkMailRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: 'The identifier for the organization under which the user, group, or resource exists.'
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: 'The identifier for the user, group, or resource to be updated.'
        Email:
          $ref: '#/components/schemas/EmailAddress'
          description: 'The email for the user, group, or resource to be updated.'
    EntityAlreadyRegisteredException: {}
    ResetPasswordResponse:
      type: object
      properties: {}
    ResetPasswordRequest:
      type: object
      required:
        - OrganizationId
        - UserId
        - Password
      title: ResetPasswordRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier of the organization that contains the user for which the password is reset.
        UserId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the user for whom the password is reset.
        Password:
          $ref: '#/components/schemas/Password'
          description: The new password for the user.
    StartMailboxExportJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/MailboxExportJobId'
          description: The job ID.
    StartMailboxExportJobRequest:
      type: object
      required:
        - ClientToken
        - OrganizationId
        - EntityId
        - RoleArn
        - KmsKeyArn
        - S3BucketName
        - S3Prefix
      title: StartMailboxExportJobRequest
      properties:
        ClientToken:
          $ref: '#/components/schemas/IdempotencyClientToken'
          description: The idempotency token for the client request.
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier associated with the organization.
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the user or resource associated with the mailbox.
        Description:
          $ref: '#/components/schemas/Description'
          description: The mailbox export job description.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the AWS Identity and Access Management (IAM) role that grants write permission to the S3 bucket.
        KmsKeyArn:
          $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of the symmetric AWS Key Management Service (AWS KMS) key that encrypts the exported mailbox content.
        S3BucketName:
          $ref: '#/components/schemas/S3BucketName'
          description: The name of the S3 bucket.
        S3Prefix:
          $ref: '#/components/schemas/S3ObjectKey'
          description: The S3 bucket prefix.
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceARN
        - Tags
      title: TagResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The resource ARN.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tag key-value pairs.
    TooManyTagsException: {}
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceARN
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The resource ARN.
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: The tag keys.
    UpdateMailboxQuotaResponse:
      type: object
      properties: {}
    UpdateMailboxQuotaRequest:
      type: object
      required:
        - OrganizationId
        - UserId
        - MailboxQuota
      title: UpdateMailboxQuotaRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier for the organization that contains the user for whom to update the mailbox quota.
        UserId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifer for the user for whom to update the mailbox quota.
        MailboxQuota:
          $ref: '#/components/schemas/MailboxQuota'
          description: 'The updated mailbox quota, in MB, for the specified user.'
    UpdateMobileDeviceAccessRuleResponse:
      type: object
      properties: {}
    UpdateMobileDeviceAccessRuleRequest:
      type: object
      required:
        - OrganizationId
        - MobileDeviceAccessRuleId
        - Name
        - Effect
      title: UpdateMobileDeviceAccessRuleRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The Amazon WorkMail organization under which the rule will be updated.
        MobileDeviceAccessRuleId:
          $ref: '#/components/schemas/MobileDeviceAccessRuleId'
          description: The identifier of the rule to be updated.
        Name:
          $ref: '#/components/schemas/MobileDeviceAccessRuleName'
          description: The updated rule name.
        Description:
          $ref: '#/components/schemas/MobileDeviceAccessRuleDescription'
          description: The updated rule description.
        Effect:
          $ref: '#/components/schemas/MobileDeviceAccessRuleEffect'
          description: The effect of the rule when it matches. Allowed values are <code>ALLOW</code> or <code>DENY</code>.
        DeviceTypes:
          $ref: '#/components/schemas/DeviceTypeList'
          description: Device types that the updated rule will match.
        NotDeviceTypes:
          $ref: '#/components/schemas/DeviceTypeList'
          description: Device types that the updated rule <b>will not</b> match. All other device types will match.
        DeviceModels:
          $ref: '#/components/schemas/DeviceModelList'
          description: Device models that the updated rule will match.
        NotDeviceModels:
          $ref: '#/components/schemas/DeviceModelList'
          description: Device models that the updated rule <b>will not</b> match. All other device models will match.
        DeviceOperatingSystems:
          $ref: '#/components/schemas/DeviceOperatingSystemList'
          description: Device operating systems that the updated rule will match.
        NotDeviceOperatingSystems:
          $ref: '#/components/schemas/DeviceOperatingSystemList'
          description: Device operating systems that the updated rule <b>will not</b> match. All other device operating systems will match.
        DeviceUserAgents:
          $ref: '#/components/schemas/DeviceUserAgentList'
          description: User agents that the updated rule will match.
        NotDeviceUserAgents:
          $ref: '#/components/schemas/DeviceUserAgentList'
          description: User agents that the updated rule <b>will not</b> match. All other user agents will match.
    UpdatePrimaryEmailAddressResponse:
      type: object
      properties: {}
    UpdatePrimaryEmailAddressRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
        - Email
      title: UpdatePrimaryEmailAddressRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: 'The organization that contains the user, group, or resource to update.'
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: 'The user, group, or resource to update.'
        Email:
          $ref: '#/components/schemas/EmailAddress'
          description: The value of the email to be updated as primary.
    UpdateResourceResponse:
      type: object
      properties: {}
    UpdateResourceRequest:
      type: object
      required:
        - OrganizationId
        - ResourceId
      title: UpdateResourceRequest
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier associated with the organization for which the resource is updated.
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The identifier of the resource to be updated.
        Name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the resource to be updated.
        BookingOptions:
          $ref: '#/components/schemas/BookingOptions'
          description: The resource's booking options to be updated.
    InvalidConfigurationException: {}
    AccessControlRuleName:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 64
    AccessControlRuleEffect:
      type: string
      enum:
        - ALLOW
        - DENY
    AccessControlRuleDescription:
      type: string
      pattern: '[\u0020-\u00FF]+'
      minLength: 0
      maxLength: 255
    IpRangeList:
      type: array
      items:
        $ref: '#/components/schemas/IpRange'
      minItems: 0
      maxItems: 1024
    ActionsList:
      type: array
      items:
        $ref: '#/components/schemas/AccessControlRuleAction'
      minItems: 0
      maxItems: 10
    UserIdList:
      type: array
      items:
        $ref: '#/components/schemas/WorkMailIdentifier'
      minItems: 0
      maxItems: 10
    Timestamp:
      type: string
      format: date-time
    AccessControlRule:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/AccessControlRuleName'
          description: The rule name.
        Effect:
          $ref: '#/components/schemas/AccessControlRuleEffect'
          description: The rule effect.
        Description:
          $ref: '#/components/schemas/AccessControlRuleDescription'
          description: The rule description.
        IpRanges:
          $ref: '#/components/schemas/IpRangeList'
          description: IPv4 CIDR ranges to include in the rule.
        NotIpRanges:
          $ref: '#/components/schemas/IpRangeList'
          description: IPv4 CIDR ranges to exclude from the rule.
        Actions:
          $ref: '#/components/schemas/ActionsList'
          description: 'Access protocol actions to include in the rule. Valid values include <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>.'
        NotActions:
          $ref: '#/components/schemas/ActionsList'
          description: 'Access protocol actions to exclude from the rule. Valid values include <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>.'
        UserIds:
          $ref: '#/components/schemas/UserIdList'
          description: User IDs to include in the rule.
        NotUserIds:
          $ref: '#/components/schemas/UserIdList'
          description: User IDs to exclude from the rule.
        DateCreated:
          $ref: '#/components/schemas/Timestamp'
          description: The date that the rule was created.
        DateModified:
          $ref: '#/components/schemas/Timestamp'
          description: The date that the rule was modified.
      description: A rule that controls access to an Amazon WorkMail organization.
    AccessControlRuleAction:
      type: string
      pattern: '[a-zA-Z]+'
      minLength: 1
      maxLength: 64
    AccessControlRuleNameList:
      type: array
      items:
        $ref: '#/components/schemas/AccessControlRuleName'
      minItems: 0
      maxItems: 10
    AccessControlRulesList:
      type: array
      items:
        $ref: '#/components/schemas/AccessControlRule'
      minItems: 0
      maxItems: 10
    EmailAddress:
      type: string
      pattern: '[a-zA-Z0-9._%+-]{1,64}@[a-zA-Z0-9.-]+\.[a-zA-Z-]{2,}'
      minLength: 1
      maxLength: 254
    Aliases:
      type: array
      items:
        $ref: '#/components/schemas/EmailAddress'
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1011
    OrganizationId:
      type: string
      pattern: '^m-[0-9a-f]{32}$'
      minLength: 34
      maxLength: 34
    ResourceId:
      type: string
      pattern: '^r-[0-9a-f]{32}$'
      minLength: 34
      maxLength: 34
    WorkMailIdentifier:
      type: string
      minLength: 12
      maxLength: 256
    Boolean:
      type: boolean
    BookingOptions:
      type: object
      properties:
        AutoAcceptRequests:
          $ref: '#/components/schemas/Boolean'
          description: 'The resource''s ability to automatically reply to requests. If disabled, delegates must be associated to the resource.'
        AutoDeclineRecurringRequests:
          $ref: '#/components/schemas/Boolean'
          description: The resource's ability to automatically decline any recurring requests.
        AutoDeclineConflictingRequests:
          $ref: '#/components/schemas/Boolean'
          description: The resource's ability to automatically decline any conflicting requests.
      description: At least one delegate must be associated to the resource to disable automatic replies from the resource.
    IdempotencyClientToken:
      type: string
      pattern: '[\x21-\x7e]+'
      minLength: 1
      maxLength: 128
    MailboxExportJobId:
      type: string
      pattern: '[A-Za-z0-9-]+'
      minLength: 1
      maxLength: 63
    GroupName:
      type: string
      pattern: '[\u0020-\u00FF]+'
      minLength: 1
      maxLength: 256
    MobileDeviceAccessRuleName:
      type: string
      pattern: '[\S\s]+'
      minLength: 1
      maxLength: 64
    MobileDeviceAccessRuleDescription:
      type: string
      pattern: '[\S\s]+'
      minLength: 1
      maxLength: 256
    MobileDeviceAccessRuleEffect:
      type: string
      enum:
        - ALLOW
        - DENY
    DeviceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/DeviceType'
      minItems: 1
      maxItems: 10
    DeviceModelList:
      type: array
      items:
        $ref: '#/components/schemas/DeviceModel'
      minItems: 1
      maxItems: 10
    DeviceOperatingSystemList:
      type: array
      items:
        $ref: '#/components/schemas/DeviceOperatingSystem'
      minItems: 1
      maxItems: 10
    DeviceUserAgentList:
      type: array
      items:
        $ref: '#/components/schemas/DeviceUserAgent'
      minItems: 1
      maxItems: 10
    MobileDeviceAccessRuleId:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 64
    DirectoryId:
      type: string
      pattern: '^d-[0-9a-f]{10}$'
      minLength: 12
      maxLength: 12
    OrganizationName:
      type: string
      pattern: '^(?!d-)([\da-zA-Z]+)([-][\da-zA-Z]+)*'
      minLength: 1
      maxLength: 62
    Domains:
      type: array
      items:
        $ref: '#/components/schemas/Domain'
      minItems: 0
      maxItems: 5
    KmsKeyArn:
      type: string
      pattern: 'arn:aws:kms:[a-z0-9-]*:[a-z0-9-]+:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}'
      minLength: 20
      maxLength: 2048
    ResourceName:
      type: string
      pattern: '[\w\-.]+(@[a-zA-Z0-9.\-]+\.[a-zA-Z0-9-]{2,})?'
      minLength: 1
      maxLength: 20
    ResourceType:
      type: string
      enum:
        - ROOM
        - EQUIPMENT
    UserName:
      type: string
      pattern: '[\w\-.]+(@[a-zA-Z0-9.\-]+\.[a-zA-Z0-9-]{2,})?'
      minLength: 1
      maxLength: 64
    String:
      type: string
      maxLength: 256
    Password:
      type: string
      pattern: '[\u0020-\u00FF]+'
      maxLength: 256
      format: password
    MemberType:
      type: string
      enum:
        - GROUP
        - USER
    Delegate:
      type: object
      required:
        - Id
        - Type
      properties:
        Id:
          $ref: '#/components/schemas/String'
          description: The identifier for the user or group associated as the resource's delegate.
        Type:
          $ref: '#/components/schemas/MemberType'
          description: 'The type of the delegate: user or group.'
      description: 'The name of the attribute, which is one of the values defined in the UserAttribute enumeration.'
    ShortString:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 64
    EntityState:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - DELETED
    Description:
      type: string
      pattern: '[\S\s]*'
      minLength: 0
      maxLength: 1023
    RoleArn:
      type: string
      minLength: 20
      maxLength: 2048
    S3BucketName:
      type: string
      pattern: '[A-Za-z0-9.-]+'
      minLength: 1
      maxLength: 63
    S3ObjectKey:
      type: string
      pattern: '[A-Za-z0-9!_.*''()/-]+'
      minLength: 1
      maxLength: 1023
    Percentage:
      type: integer
      minimum: 0
      maximum: 100
    MailboxExportJobState:
      type: string
      enum:
        - RUNNING
        - COMPLETED
        - FAILED
        - CANCELLED
    MailboxExportErrorInfo:
      type: string
      pattern: '[\S\s]*'
      minLength: 1
      maxLength: 1024
    UserRole:
      type: string
      enum:
        - USER
        - RESOURCE
        - SYSTEM_USER
    DeviceModel:
      type: string
      pattern: '[\u0020-\u00FF]+'
      minLength: 1
      maxLength: 256
    DeviceOperatingSystem:
      type: string
      pattern: '[\u0020-\u00FF]+'
      minLength: 1
      maxLength: 256
    DeviceType:
      type: string
      pattern: '[\u0020-\u00FF]+'
      minLength: 1
      maxLength: 256
    DeviceUserAgent:
      type: string
      pattern: '[\u0020-\u00FF]+'
      minLength: 1
      maxLength: 256
    DomainName:
      type: string
      pattern: '[a-zA-Z0-9.-]+\.[a-zA-Z-]{2,}'
      minLength: 3
      maxLength: 255
    HostedZoneId:
      type: string
      pattern: '[\S\s]*'
      minLength: 1
      maxLength: 32
    Domain:
      type: object
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The fully qualified domain name.
        HostedZoneId:
          $ref: '#/components/schemas/HostedZoneId'
          description: The hosted zone ID for a domain hosted in Route 53. Required when configuring a domain hosted in Route 53.
      description: '<p>The domain to associate with an Amazon WorkMail organization.</p> <p>When you configure a domain hosted in Amazon Route 53 (Route 53), all recommended DNS records are added to the organization when you create it. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/add_domain.html">Adding a domain</a> in the <i>Amazon WorkMail Administrator Guide</i>.</p>'
    FolderName:
      type: string
      enum:
        - INBOX
        - DELETED_ITEMS
        - SENT_ITEMS
        - DRAFTS
        - JUNK_EMAIL
    RetentionAction:
      type: string
      enum:
        - NONE
        - DELETE
        - PERMANENTLY_DELETE
    RetentionPeriod:
      type: integer
      minimum: 1
      maximum: 730
    FolderConfiguration:
      type: object
      required:
        - Name
        - Action
      properties:
        Name:
          $ref: '#/components/schemas/FolderName'
          description: The folder name.
        Action:
          $ref: '#/components/schemas/RetentionAction'
          description: The action to take on the folder contents at the end of the folder configuration period.
        Period:
          $ref: '#/components/schemas/RetentionPeriod'
          description: The period of time at which the folder configuration action is applied.
      description: The configuration applied to an organization's folders by its retention policy.
    FolderConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/FolderConfiguration'
    IpAddress:
      type: string
      pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'
      minLength: 1
      maxLength: 15
    MailboxQuota:
      type: integer
      minimum: 1
    MailboxSize:
      type: number
      format: double
      minimum: 0
    MobileDeviceAccessMatchedRuleList:
      type: array
      items:
        $ref: '#/components/schemas/MobileDeviceAccessMatchedRule'
      minItems: 0
      maxItems: 10
    Group:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the group.
        Email:
          $ref: '#/components/schemas/EmailAddress'
          description: The email of the group.
        Name:
          $ref: '#/components/schemas/GroupName'
          description: The name of the group.
        State:
          $ref: '#/components/schemas/EntityState'
          description: 'The state of the group, which can be ENABLED, DISABLED, or DELETED.'
        EnabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date indicating when the group was enabled for Amazon WorkMail use.
        DisabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date indicating when the group was disabled from Amazon WorkMail use.
      description: The representation of an Amazon WorkMail group.
    Groups:
      type: array
      items:
        $ref: '#/components/schemas/Group'
    IpRange:
      type: string
      pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$'
      minLength: 1
      maxLength: 18
    MailboxExportJob:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/MailboxExportJobId'
          description: The identifier of the mailbox export job.
        EntityId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the user or resource associated with the mailbox.
        Description:
          $ref: '#/components/schemas/Description'
          description: The mailbox export job description.
        S3BucketName:
          $ref: '#/components/schemas/S3BucketName'
          description: The name of the S3 bucket.
        S3Path:
          $ref: '#/components/schemas/S3ObjectKey'
          description: The path to the S3 bucket and file that the mailbox export job exports to.
        EstimatedProgress:
          $ref: '#/components/schemas/Percentage'
          description: 'The estimated progress of the mailbox export job, in percentage points.'
        State:
          $ref: '#/components/schemas/MailboxExportJobState'
          description: The state of the mailbox export job.
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The mailbox export job start timestamp.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The mailbox export job end timestamp.
      description: 'The details of a mailbox export job, including the user or resource ID associated with the mailbox and the S3 bucket that the mailbox contents are exported to.'
    Jobs:
      type: array
      items:
        $ref: '#/components/schemas/MailboxExportJob'
    NextToken:
      type: string
      pattern: '[\S\s]*|[a-zA-Z0-9/+=]{1,1024}'
      minLength: 1
      maxLength: 1024
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Members:
      type: array
      items:
        $ref: '#/components/schemas/Member'
    Permissions:
      type: array
      items:
        $ref: '#/components/schemas/Permission'
    MobileDeviceAccessRulesList:
      type: array
      items:
        $ref: '#/components/schemas/MobileDeviceAccessRule'
      minItems: 0
      maxItems: 10
    OrganizationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationSummary'
    ResourceDelegates:
      type: array
      items:
        $ref: '#/components/schemas/Delegate'
    Resources:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 50
    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'
    Member:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/String'
          description: The identifier of the member.
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the member.
        Type:
          $ref: '#/components/schemas/MemberType'
          description: A member can be a user or group.
        State:
          $ref: '#/components/schemas/EntityState'
          description: 'The state of the member, which can be ENABLED, DISABLED, or DELETED.'
        EnabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date indicating when the member was enabled for Amazon WorkMail use.
        DisabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date indicating when the member was disabled from Amazon WorkMail use.
      description: The representation of a user or group.
    MobileDeviceAccessMatchedRule:
      type: object
      properties:
        MobileDeviceAccessRuleId:
          $ref: '#/components/schemas/MobileDeviceAccessRuleId'
          description: Identifier of the rule that a simulated user matches.
        Name:
          $ref: '#/components/schemas/MobileDeviceAccessRuleName'
          description: Name of a rule that a simulated user matches.
      description: The rule that a simulated user matches.
    MobileDeviceAccessRule:
      type: object
      properties:
        MobileDeviceAccessRuleId:
          $ref: '#/components/schemas/MobileDeviceAccessRuleId'
          description: 'The ID assigned to a mobile access rule. '
        Name:
          $ref: '#/components/schemas/MobileDeviceAccessRuleName'
          description: The name of a mobile access rule.
        Description:
          $ref: '#/components/schemas/MobileDeviceAccessRuleDescription'
          description: The description of a mobile access rule.
        Effect:
          $ref: '#/components/schemas/MobileDeviceAccessRuleEffect'
          description: The effect of the rule when it matches. Allowed values are <code>ALLOW</code> or <code>DENY</code>.
        DeviceTypes:
          $ref: '#/components/schemas/DeviceTypeList'
          description: 'Device types that a rule will match. '
        NotDeviceTypes:
          $ref: '#/components/schemas/DeviceTypeList'
          description: Device types that a rule <b>will not</b> match. All other device types will match.
        DeviceModels:
          $ref: '#/components/schemas/DeviceModelList'
          description: Device models that a rule will match.
        NotDeviceModels:
          $ref: '#/components/schemas/DeviceModelList'
          description: Device models that a rule <b>will not</b> match. All other device models will match.
        DeviceOperatingSystems:
          $ref: '#/components/schemas/DeviceOperatingSystemList'
          description: Device operating systems that a rule will match.
        NotDeviceOperatingSystems:
          $ref: '#/components/schemas/DeviceOperatingSystemList'
          description: Device operating systems that a rule <b>will not</b> match. All other device types will match.
        DeviceUserAgents:
          $ref: '#/components/schemas/DeviceUserAgentList'
          description: Device user agents that a rule will match.
        NotDeviceUserAgents:
          $ref: '#/components/schemas/DeviceUserAgentList'
          description: Device user agents that a rule <b>will not</b> match. All other device user agents will match.
        DateCreated:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time at which an access rule was created.
        DateModified:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time at which an access rule was modified.
      description: A rule that controls access to mobile devices for an Amazon WorkMail group.
    OrganizationSummary:
      type: object
      properties:
        OrganizationId:
          $ref: '#/components/schemas/OrganizationId'
          description: The identifier associated with the organization.
        Alias:
          $ref: '#/components/schemas/OrganizationName'
          description: The alias associated with the organization.
        DefaultMailDomain:
          $ref: '#/components/schemas/DomainName'
          description: The default email domain associated with the organization.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: The error message associated with the organization. It is only present if unexpected behavior has occurred with regards to the organization. It provides insight or solutions regarding unexpected behavior.
        State:
          $ref: '#/components/schemas/String'
          description: The state associated with the organization.
      description: The representation of an organization.
    PermissionValues:
      type: array
      items:
        $ref: '#/components/schemas/PermissionType'
    Permission:
      type: object
      required:
        - GranteeId
        - GranteeType
        - PermissionValues
      properties:
        GranteeId:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: 'The identifier of the user, group, or resource to which the permissions are granted.'
        GranteeType:
          $ref: '#/components/schemas/MemberType'
          description: 'The type of user, group, or resource referred to in GranteeId.'
        PermissionValues:
          $ref: '#/components/schemas/PermissionValues'
          description: 'The permissions granted to the grantee. SEND_AS allows the grantee to send email as the owner of the mailbox (the grantee is not mentioned on these emails). SEND_ON_BEHALF allows the grantee to send email on behalf of the owner of the mailbox (the grantee is not mentioned as the physical sender of these emails). FULL_ACCESS allows the grantee full access to the mailbox, irrespective of other folder-level permissions set on the mailbox.'
      description: 'Permission granted to a user, group, or resource to access a certain aspect of another user, group, or resource mailbox.'
    PermissionType:
      type: string
      enum:
        - FULL_ACCESS
        - SEND_AS
        - SEND_ON_BEHALF
    PolicyDescription:
      type: string
      pattern: '[\w\d\s\S\-!?=,.;:''_]+'
      maxLength: 256
      format: password
    Resource:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the resource.
        Email:
          $ref: '#/components/schemas/EmailAddress'
          description: The email of the resource.
        Name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the resource.
        Type:
          $ref: '#/components/schemas/ResourceType'
          description: 'The type of the resource: equipment or room.'
        State:
          $ref: '#/components/schemas/EntityState'
          description: 'The state of the resource, which can be ENABLED, DISABLED, or DELETED.'
        EnabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date indicating when the resource was enabled for Amazon WorkMail use.
        DisabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date indicating when the resource was disabled from Amazon WorkMail use.
      description: The representation of a resource.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The key of the tag.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The value of the tag.
      description: Describes a tag applied to a resource.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 50
    User:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/WorkMailIdentifier'
          description: The identifier of the user.
        Email:
          $ref: '#/components/schemas/EmailAddress'
          description: The email of the user.
        Name:
          $ref: '#/components/schemas/UserName'
          description: The name of the user.
        DisplayName:
          $ref: '#/components/schemas/String'
          description: The display name of the user.
        State:
          $ref: '#/components/schemas/EntityState'
          description: 'The state of the user, which can be ENABLED, DISABLED, or DELETED.'
        UserRole:
          $ref: '#/components/schemas/UserRole'
          description: The role of the user.
        EnabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date indicating when the user was enabled for Amazon WorkMail use.
        DisabledDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date indicating when the user was disabled from Amazon WorkMail use.
      description: The representation of an Amazon WorkMail user.
security:
  - hmac: []
