openapi: 3.0.0
info:
  version: '2020-07-13'
  x-release: v4
  title: FinSpace Public API
  description: ' The FinSpace APIs let you take actions inside the FinSpace environment. '
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: finspace-data
  x-aws-signingName: finspace-api
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/finspace-data-2020-07-13.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/finspace-api/'
servers:
  - url: 'http://finspace-api.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The FinSpace Data multi-region endpoint
  - url: 'https://finspace-api.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The FinSpace Data multi-region endpoint
  - url: 'http://finspace-api.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The FinSpace Data endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://finspace-api.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The FinSpace Data endpoint for China (Beijing) and China (Ningxia)
paths:
  '/datasets/{datasetId}/changesets':
    post:
      operationId: CreateChangeset
      description: Creates a new changeset in a FinSpace dataset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChangesetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: datasetId
          in: path
          required: true
          description: The unique identifier for the FinSpace dataset in which the changeset will be created.
          schema:
            type: string
            minLength: 1
            maxLength: 26
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - changeType
                - sourceType
                - sourceParams
              properties:
                changeType:
                  description: <p>Option to indicate how a changeset will be applied to a dataset.</p> <ul> <li> <p> <code>REPLACE</code> - Changeset will be considered as a replacement to all prior loaded changesets.</p> </li> <li> <p> <code>APPEND</code> - Changeset will be considered as an addition to the end of all prior loaded changesets.</p> </li> </ul>
                  type: string
                  enum:
                    - REPLACE
                    - APPEND
                    - MODIFY
                sourceType:
                  description: <p>Type of the data source from which the files to create the changeset will be sourced.</p> <ul> <li> <p> <code>S3</code> - Amazon S3.</p> </li> </ul>
                  type: string
                  enum:
                    - S3
                sourceParams:
                  description: Source path from which the files to create the changeset will be sourced.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/stringMapValue'
                formatType:
                  description: Format type of the input files being loaded into the changeset.
                  type: string
                  enum:
                    - CSV
                    - JSON
                    - PARQUET
                    - XML
                formatParams:
                  description: Options that define the structure of the source file(s).
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/stringMapValue'
                tags:
                  description: Metadata tags to apply to this changeset.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/stringMapValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /credentials/programmatic#environmentId:
    get:
      operationId: GetProgrammaticAccessCredentials
      description: Request programmatic credentials to use with Habanero SDK.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProgrammaticAccessCredentialsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: durationInMinutes
          in: query
          required: false
          description: 'The time duration in which the credentials remain valid. '
          schema:
            type: integer
            minimum: 60
            maximum: 720
        - name: environmentId
          in: query
          required: true
          description: The habanero environment identifier.
          schema:
            type: string
            minLength: 1
            maxLength: 26
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /workingLocationV1:
    post:
      operationId: GetWorkingLocation
      description: A temporary Amazon S3 location to copy your files from a source location to stage or use as a scratch space in Habanero notebook.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkingLocationResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                locationType:
                  description: <p>Specify the type of the working location.</p> <ul> <li> <p> <code>SAGEMAKER</code> - Use the Amazon S3 location as a temporary location to store data content when working with FinSpace Notebooks that run on SageMaker studio.</p> </li> <li> <p> <code>INGESTION</code> - Use the Amazon S3 location as a staging location to copy your data content and then use the location with the changeset creation operation.</p> </li> </ul>
                  type: string
                  enum:
                    - INGESTION
                    - SAGEMAKER
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateChangesetResponse:
      type: object
      properties:
        changeset:
          $ref: '#/components/schemas/ChangesetInfo'
          description: Returns the changeset details.
    stringMapValue:
      type: string
    ResourceNotFoundException: {}
    InternalServerException: {}
    ValidationException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    GetProgrammaticAccessCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/Credentials'
          description: Returns the programmatic credentials.
        durationInMinutes:
          $ref: '#/components/schemas/SessionDuration'
          description: Returns the duration in which the credentials will remain valid.
    GetWorkingLocationResponse:
      type: object
      properties:
        s3Uri:
          $ref: '#/components/schemas/stringValueLength1to1024'
          description: Returns the Amazon S3 URI for the working location.
        s3Path:
          $ref: '#/components/schemas/stringValueLength1to1024'
          description: Returns the Amazon S3 Path for the working location.
        s3Bucket:
          $ref: '#/components/schemas/stringValueLength1to63'
          description: Returns the Amazon S3 bucket name for the working location.
    ChangeType:
      type: string
      enum:
        - REPLACE
        - APPEND
        - MODIFY
    IdType:
      type: string
      minLength: 1
      maxLength: 26
    arn:
      type: string
      minLength: 20
      maxLength: 2048
    SourceType:
      type: string
      enum:
        - S3
    stringMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/stringMapValue'
    FormatType:
      type: string
      enum:
        - CSV
        - JSON
        - PARQUET
        - XML
    Timestamp:
      type: string
      format: date-time
    ChangesetStatus:
      type: string
      enum:
        - PENDING
        - FAILED
        - SUCCESS
        - RUNNING
        - STOP_REQUESTED
    ErrorInfo:
      type: object
      properties:
        errorMessage:
          $ref: '#/components/schemas/stringValueMaxLength1000'
          description: The text of the error message.
        errorCategory:
          $ref: '#/components/schemas/ErrorCategory'
          description: <p>The category of the error.</p> <ul> <li> <p> <code>VALIDATION</code> -The inputs to this request are invalid.</p> </li> <li> <p> <code>SERVICE_QUOTA_EXCEEDED</code> - Service quotas have been exceeded. Please contact AWS support to increase quotas.</p> </li> <li> <p> <code>ACCESS_DENIED</code> - Missing required permission to perform this request.</p> </li> <li> <p> <code>RESOURCE_NOT_FOUND</code> - One or more inputs to this request were not found.</p> </li> <li> <p> <code>THROTTLING</code> - The system temporarily lacks sufficient resources to process the request.</p> </li> <li> <p> <code>INTERNAL_SERVICE_EXCEPTION</code> - An internal service error has occurred.</p> </li> <li> <p> <code>CANCELLED</code> - A user recoverable error has occurred.</p> </li> </ul>
      description: Error message.
    stringValue:
      type: string
    ChangesetInfo:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdType'
          description: Unique identifier for a changeset.
        changesetArn:
          $ref: '#/components/schemas/arn'
          description: The ARN identifier of the changeset.
        datasetId:
          $ref: '#/components/schemas/IdType'
          description: The unique identifier for the FinSpace dataset in which the changeset is created.
        changeType:
          $ref: '#/components/schemas/ChangeType'
          description: <p>Change type indicates how a changeset is applied to a dataset.</p> <ul> <li> <p> <code>REPLACE</code> - Changeset is considered as a replacement to all prior loaded changesets.</p> </li> <li> <p> <code>APPEND</code> - Changeset is considered as an addition to the end of all prior loaded changesets.</p> </li> <li> <p> <code>MODIFY</code> - Changeset is considered as a replacement to a specific prior ingested changeset.</p> </li> </ul>
        sourceType:
          $ref: '#/components/schemas/SourceType'
          description: <p>Type of the data source from which the files to create the changeset are sourced.</p> <ul> <li> <p> <code>S3</code> - Amazon S3.</p> </li> </ul>
        sourceParams:
          $ref: '#/components/schemas/stringMap'
          description: Source path from which the files to create the changeset are sourced.
        formatType:
          $ref: '#/components/schemas/FormatType'
          description: Format type of the input files loaded into the changeset.
        formatParams:
          $ref: '#/components/schemas/stringMap'
          description: Structure of the source file(s).
        createTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the changeset was created in FinSpace.
        status:
          $ref: '#/components/schemas/ChangesetStatus'
          description: The status of changeset creation operation.
        errorInfo:
          $ref: '#/components/schemas/ErrorInfo'
          description: The structure with error messages.
        changesetLabels:
          $ref: '#/components/schemas/stringMap'
          description: Tags associated with the changeset.
        updatesChangesetId:
          $ref: '#/components/schemas/stringValue'
          description: Unique identifier of the changeset that is updated.
        updatedByChangesetId:
          $ref: '#/components/schemas/stringValue'
          description: Unique identifier of the changeset that is updated a changeset.
      description: A changeset is unit of data in a dataset.
    CreateChangesetRequest:
      type: object
      required:
        - changeType
        - sourceType
        - sourceParams
      title: CreateChangesetRequest
      properties:
        changeType:
          $ref: '#/components/schemas/ChangeType'
          description: <p>Option to indicate how a changeset will be applied to a dataset.</p> <ul> <li> <p> <code>REPLACE</code> - Changeset will be considered as a replacement to all prior loaded changesets.</p> </li> <li> <p> <code>APPEND</code> - Changeset will be considered as an addition to the end of all prior loaded changesets.</p> </li> </ul>
        sourceType:
          $ref: '#/components/schemas/SourceType'
          description: <p>Type of the data source from which the files to create the changeset will be sourced.</p> <ul> <li> <p> <code>S3</code> - Amazon S3.</p> </li> </ul>
        sourceParams:
          $ref: '#/components/schemas/stringMap'
          description: Source path from which the files to create the changeset will be sourced.
        formatType:
          $ref: '#/components/schemas/FormatType'
          description: Format type of the input files being loaded into the changeset.
        formatParams:
          $ref: '#/components/schemas/stringMap'
          description: Options that define the structure of the source file(s).
        tags:
          $ref: '#/components/schemas/stringMap'
          description: Metadata tags to apply to this changeset.
    stringValueLength1to255:
      type: string
      minLength: 1
      maxLength: 255
    stringValueMaxLength1000:
      type: string
      maxLength: 1000
    Credentials:
      type: object
      properties:
        accessKeyId:
          $ref: '#/components/schemas/stringValueLength1to255'
          description: The access key identifier.
        secretAccessKey:
          $ref: '#/components/schemas/stringValueMaxLength1000'
          description: The access key.
        sessionToken:
          $ref: '#/components/schemas/stringValueMaxLength1000'
          description: The session token.
      description: Set short term API credentials.
    ErrorCategory:
      type: string
      enum:
        - The_inputs_to_this_request_are_invalid
        - Service_limits_have_been_exceeded
        - Missing_required_permission_to_perform_this_request
        - One_or_more_inputs_to_this_request_were_not_found
        - The_system_temporarily_lacks_sufficient_resources_to_process_the_request
        - An_internal_error_has_occurred
        - Cancelled
        - A_user_recoverable_error_has_occurred
    SessionDuration:
      type: integer
      minimum: 60
      maximum: 720
    GetProgrammaticAccessCredentialsRequest:
      type: object
      title: GetProgrammaticAccessCredentialsRequest
      properties: {}
    locationType:
      type: string
      enum:
        - INGESTION
        - SAGEMAKER
    GetWorkingLocationRequest:
      type: object
      title: GetWorkingLocationRequest
      properties:
        locationType:
          $ref: '#/components/schemas/locationType'
          description: <p>Specify the type of the working location.</p> <ul> <li> <p> <code>SAGEMAKER</code> - Use the Amazon S3 location as a temporary location to store data content when working with FinSpace Notebooks that run on SageMaker studio.</p> </li> <li> <p> <code>INGESTION</code> - Use the Amazon S3 location as a staging location to copy your data content and then use the location with the changeset creation operation.</p> </li> </ul>
    stringValueLength1to1024:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 1024
    stringValueLength1to63:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 63
    stringMapKey:
      type: string
security:
  - hmac: []
