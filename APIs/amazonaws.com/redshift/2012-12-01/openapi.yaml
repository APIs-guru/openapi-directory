openapi: 3.0.0
info:
  version: '2012-12-01'
  x-release: v4
  title: Amazon Redshift
  description: '<fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href="https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href="https://docs.aws.amazon.com/redshift/latest/dg/welcome.html">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: redshift
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/redshift-2012-12-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/redshift/'
servers:
  - url: 'http://redshift.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Redshift multi-region endpoint
  - url: 'https://redshift.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Redshift multi-region endpoint
  - url: 'http://redshift.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Redshift endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://redshift.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Redshift endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#Action=AcceptReservedNodeExchange:
    get:
      x-aws-operation-name: AcceptReservedNodeExchange
      operationId: GET_AcceptReservedNodeExchange
      description: 'Exchanges a DC1 Reserved Node for a DC2 Reserved Node with no changes to the configuration (term, payment type, or number of nodes) and no additional costs. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptReservedNodeExchangeOutputMessage'
        '480':
          description: ReservedNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeNotFoundFault'
        '481':
          description: InvalidReservedNodeStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReservedNodeStateFault'
        '482':
          description: ReservedNodeAlreadyMigratedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeAlreadyMigratedFault'
        '483':
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingNotFoundFault'
        '484':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '485':
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceUnavailableFault'
        '486':
          description: ReservedNodeAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeAlreadyExistsFault'
      parameters:
        - name: ReservedNodeId
          in: query
          required: true
          description: A string representing the node identifier of the DC1 Reserved Node to be exchanged.
          schema:
            type: string
            maxLength: 2147483647
        - name: TargetReservedNodeOfferingId
          in: query
          required: true
          description: 'The unique identifier of the DC2 Reserved Node offering to be used for the exchange. You can obtain the value for the parameter by calling <a>GetReservedNodeExchangeOfferings</a> '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AcceptReservedNodeExchange
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AcceptReservedNodeExchange
      operationId: POST_AcceptReservedNodeExchange
      description: 'Exchanges a DC1 Reserved Node for a DC2 Reserved Node with no changes to the configuration (term, payment type, or number of nodes) and no additional costs. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptReservedNodeExchangeOutputMessage'
        '480':
          description: ReservedNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeNotFoundFault'
        '481':
          description: InvalidReservedNodeStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReservedNodeStateFault'
        '482':
          description: ReservedNodeAlreadyMigratedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeAlreadyMigratedFault'
        '483':
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingNotFoundFault'
        '484':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '485':
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceUnavailableFault'
        '486':
          description: ReservedNodeAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeAlreadyExistsFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AcceptReservedNodeExchangeInputMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AcceptReservedNodeExchange
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=AddPartner:
    get:
      x-aws-operation-name: AddPartner
      operationId: GET_AddPartner
      description: 'Adds a partner integration to a cluster. This operation authorizes a partner to push status updates for the specified database. To complete the integration, you also set up the integration on the partner website.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PartnerIntegrationOutputMessage'
        '480':
          description: PartnerNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PartnerNotFoundFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '482':
          description: UnauthorizedPartnerIntegrationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedPartnerIntegrationFault'
      parameters:
        - name: AccountId
          in: query
          required: true
          description: The Amazon Web Services account ID that owns the cluster.
          schema:
            type: string
            pattern: '^[0-9]+$'
            minLength: 12
            maxLength: 12
        - name: ClusterIdentifier
          in: query
          required: true
          description: The cluster identifier of the cluster that receives data from the partner.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-]+$'
            maxLength: 63
        - name: DatabaseName
          in: query
          required: true
          description: The name of the database that receives data from the partner.
          schema:
            type: string
            pattern: '^[\p{L}_][\p{L}\p{N}@$#_]+$'
            maxLength: 127
        - name: PartnerName
          in: query
          required: true
          description: The name of the partner that is authorized to send data.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-_]+$'
            maxLength: 255
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddPartner
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AddPartner
      operationId: POST_AddPartner
      description: 'Adds a partner integration to a cluster. This operation authorizes a partner to push status updates for the specified database. To complete the integration, you also set up the integration on the partner website.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PartnerIntegrationOutputMessage'
        '480':
          description: PartnerNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PartnerNotFoundFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '482':
          description: UnauthorizedPartnerIntegrationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedPartnerIntegrationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PartnerIntegrationInputMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddPartner
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=AssociateDataShareConsumer:
    get:
      x-aws-operation-name: AssociateDataShareConsumer
      operationId: GET_AssociateDataShareConsumer
      description: 'From a datashare consumer account, associates a datashare with the account (AssociateEntireAccount) or the specified namespace (ConsumerArn). If you make this association, the consumer can consume the datashare.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DataShare'
        '480':
          description: InvalidDataShareFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDataShareFault'
        '481':
          description: InvalidNamespaceFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidNamespaceFault'
      parameters:
        - name: DataShareArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the datashare that the consumer is to use with the account or the namespace.
          schema:
            type: string
            maxLength: 2147483647
        - name: AssociateEntireAccount
          in: query
          required: false
          description: A value that specifies whether the datashare is associated with the entire account.
          schema:
            type: boolean
        - name: ConsumerArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the consumer that is associated with the datashare.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AssociateDataShareConsumer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateDataShareConsumer
      operationId: POST_AssociateDataShareConsumer
      description: 'From a datashare consumer account, associates a datashare with the account (AssociateEntireAccount) or the specified namespace (ConsumerArn). If you make this association, the consumer can consume the datashare.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DataShare'
        '480':
          description: InvalidDataShareFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDataShareFault'
        '481':
          description: InvalidNamespaceFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidNamespaceFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateDataShareConsumerMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AssociateDataShareConsumer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=AuthorizeClusterSecurityGroupIngress:
    get:
      x-aws-operation-name: AuthorizeClusterSecurityGroupIngress
      operationId: GET_AuthorizeClusterSecurityGroupIngress
      description: '<p>Adds an inbound (ingress) rule to an Amazon Redshift security group. Depending on whether the application accessing your cluster is running on the Internet or an Amazon EC2 instance, you can authorize inbound access to either a Classless Interdomain Routing (CIDR)/Internet Protocol (IP) range or to an Amazon EC2 security group. You can add as many as 20 ingress rules to an Amazon Redshift security group.</p> <p>If you authorize access to an Amazon EC2 security group, specify <i>EC2SecurityGroupName</i> and <i>EC2SecurityGroupOwnerId</i>. The Amazon EC2 security group and Amazon Redshift cluster must be in the same Amazon Web Services Region. </p> <p>If you authorize access to a CIDR/IP address range, specify <i>CIDRIP</i>. For an overview of CIDR blocks, see the Wikipedia article on <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Classless Inter-Domain Routing</a>. </p> <p>You must also associate the security group with a cluster so that clients running on these IP addresses or the EC2 instance are authorized to connect to the cluster. For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Working with Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeClusterSecurityGroupIngressResult'
        '480':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '481':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
        '483':
          description: AuthorizationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationQuotaExceededFault'
      parameters:
        - name: ClusterSecurityGroupName
          in: query
          required: true
          description: The name of the security group to which the ingress rule is added.
          schema:
            type: string
            maxLength: 2147483647
        - name: CIDRIP
          in: query
          required: false
          description: The IP range to be added the Amazon Redshift security group.
          schema:
            type: string
            maxLength: 2147483647
        - name: EC2SecurityGroupName
          in: query
          required: false
          description: The EC2 security group to be added the Amazon Redshift security group.
          schema:
            type: string
            maxLength: 2147483647
        - name: EC2SecurityGroupOwnerId
          in: query
          required: false
          description: '<p>The Amazon Web Services account number of the owner of the security group specified by the <i>EC2SecurityGroupName</i> parameter. The Amazon Web Services Access Key ID is not an acceptable value. </p> <p>Example: <code>111122223333</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeClusterSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AuthorizeClusterSecurityGroupIngress
      operationId: POST_AuthorizeClusterSecurityGroupIngress
      description: '<p>Adds an inbound (ingress) rule to an Amazon Redshift security group. Depending on whether the application accessing your cluster is running on the Internet or an Amazon EC2 instance, you can authorize inbound access to either a Classless Interdomain Routing (CIDR)/Internet Protocol (IP) range or to an Amazon EC2 security group. You can add as many as 20 ingress rules to an Amazon Redshift security group.</p> <p>If you authorize access to an Amazon EC2 security group, specify <i>EC2SecurityGroupName</i> and <i>EC2SecurityGroupOwnerId</i>. The Amazon EC2 security group and Amazon Redshift cluster must be in the same Amazon Web Services Region. </p> <p>If you authorize access to a CIDR/IP address range, specify <i>CIDRIP</i>. For an overview of CIDR blocks, see the Wikipedia article on <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Classless Inter-Domain Routing</a>. </p> <p>You must also associate the security group with a cluster so that clients running on these IP addresses or the EC2 instance are authorized to connect to the cluster. For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Working with Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeClusterSecurityGroupIngressResult'
        '480':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '481':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
        '483':
          description: AuthorizationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationQuotaExceededFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AuthorizeClusterSecurityGroupIngressMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeClusterSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=AuthorizeDataShare:
    get:
      x-aws-operation-name: AuthorizeDataShare
      operationId: GET_AuthorizeDataShare
      description: 'From a data producer account, authorizes the sharing of a datashare with one or more consumer accounts. To authorize a datashare for a data consumer, the producer account must have the correct access privileges.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DataShare'
        '480':
          description: InvalidDataShareFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDataShareFault'
      parameters:
        - name: DataShareArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the datashare that producers are to authorize sharing for.
          schema:
            type: string
            maxLength: 2147483647
        - name: ConsumerIdentifier
          in: query
          required: true
          description: The identifier of the data consumer that is authorized to access the datashare. This identifier is an AWS account ID.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeDataShare
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AuthorizeDataShare
      operationId: POST_AuthorizeDataShare
      description: 'From a data producer account, authorizes the sharing of a datashare with one or more consumer accounts. To authorize a datashare for a data consumer, the producer account must have the correct access privileges.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DataShare'
        '480':
          description: InvalidDataShareFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDataShareFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AuthorizeDataShareMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeDataShare
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=AuthorizeEndpointAccess:
    get:
      x-aws-operation-name: AuthorizeEndpointAccess
      operationId: GET_AuthorizeEndpointAccess
      description: Grants access to a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAuthorization'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: EndpointAuthorizationsPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAuthorizationsPerClusterLimitExceededFault'
        '482':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '483':
          description: EndpointAuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAuthorizationAlreadyExistsFault'
        '484':
          description: InvalidAuthorizationStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthorizationStateFault'
        '485':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: The cluster identifier of the cluster to grant access to.
          schema:
            type: string
            maxLength: 2147483647
        - name: Account
          in: query
          required: true
          description: The Amazon Web Services account ID to grant access to.
          schema:
            type: string
            maxLength: 2147483647
        - name: VpcIds
          in: query
          required: false
          description: The virtual private cloud (VPC) identifiers to grant access to.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: VpcIdentifier
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeEndpointAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AuthorizeEndpointAccess
      operationId: POST_AuthorizeEndpointAccess
      description: Grants access to a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAuthorization'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: EndpointAuthorizationsPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAuthorizationsPerClusterLimitExceededFault'
        '482':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '483':
          description: EndpointAuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAuthorizationAlreadyExistsFault'
        '484':
          description: InvalidAuthorizationStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthorizationStateFault'
        '485':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AuthorizeEndpointAccessMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeEndpointAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=AuthorizeSnapshotAccess:
    get:
      x-aws-operation-name: AuthorizeSnapshotAccess
      operationId: GET_AuthorizeSnapshotAccess
      description: '<p>Authorizes the specified Amazon Web Services account to restore the specified snapshot.</p> <p> For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeSnapshotAccessResult'
        '480':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '481':
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
        '482':
          description: AuthorizationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationQuotaExceededFault'
        '483':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
        '484':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '485':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
      parameters:
        - name: SnapshotIdentifier
          in: query
          required: true
          description: The identifier of the snapshot the account is authorized to restore.
          schema:
            type: string
            maxLength: 2147483647
        - name: SnapshotClusterIdentifier
          in: query
          required: false
          description: The identifier of the cluster the snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.
          schema:
            type: string
            maxLength: 2147483647
        - name: AccountWithRestoreAccess
          in: query
          required: true
          description: '<p>The identifier of the Amazon Web Services account authorized to restore the specified snapshot.</p> <p>To share a snapshot with Amazon Web Services Support, specify amazon-redshift-support.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeSnapshotAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AuthorizeSnapshotAccess
      operationId: POST_AuthorizeSnapshotAccess
      description: '<p>Authorizes the specified Amazon Web Services account to restore the specified snapshot.</p> <p> For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeSnapshotAccessResult'
        '480':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '481':
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
        '482':
          description: AuthorizationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationQuotaExceededFault'
        '483':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
        '484':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '485':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AuthorizeSnapshotAccessMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeSnapshotAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=BatchDeleteClusterSnapshots:
    get:
      x-aws-operation-name: BatchDeleteClusterSnapshots
      operationId: GET_BatchDeleteClusterSnapshots
      description: Deletes a set of cluster snapshots.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchDeleteClusterSnapshotsResult'
        '480':
          description: BatchDeleteRequestSizeExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchDeleteRequestSizeExceededFault'
      parameters:
        - name: Identifiers
          in: query
          required: true
          description: A list of identifiers for the snapshots that you want to delete.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/DeleteClusterSnapshotMessage'
                - xml:
                    name: DeleteClusterSnapshotMessage
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchDeleteClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: BatchDeleteClusterSnapshots
      operationId: POST_BatchDeleteClusterSnapshots
      description: Deletes a set of cluster snapshots.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchDeleteClusterSnapshotsResult'
        '480':
          description: BatchDeleteRequestSizeExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchDeleteRequestSizeExceededFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchDeleteClusterSnapshotsRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchDeleteClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=BatchModifyClusterSnapshots:
    get:
      x-aws-operation-name: BatchModifyClusterSnapshots
      operationId: GET_BatchModifyClusterSnapshots
      description: Modifies the settings for a set of cluster snapshots.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchModifyClusterSnapshotsOutputMessage'
        '480':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
        '481':
          description: BatchModifyClusterSnapshotsLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchModifyClusterSnapshotsLimitExceededFault'
      parameters:
        - name: SnapshotIdentifierList
          in: query
          required: true
          description: A list of snapshot identifiers you want to modify.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: String
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: '<p>The number of days that a manual snapshot is retained. If you specify the value -1, the manual snapshot is retained indefinitely.</p> <p>The number must be either -1 or an integer between 1 and 3,653.</p> <p>If you decrease the manual snapshot retention period from its current value, existing manual snapshots that fall outside of the new retention period will return an error. If you want to suppress the errors and delete the snapshots, use the force option. </p>'
          schema:
            type: integer
        - name: Force
          in: query
          required: false
          description: 'A boolean value indicating whether to override an exception if the retention period has passed. '
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchModifyClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: BatchModifyClusterSnapshots
      operationId: POST_BatchModifyClusterSnapshots
      description: Modifies the settings for a set of cluster snapshots.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchModifyClusterSnapshotsOutputMessage'
        '480':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
        '481':
          description: BatchModifyClusterSnapshotsLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchModifyClusterSnapshotsLimitExceededFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchModifyClusterSnapshotsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchModifyClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CancelResize:
    get:
      x-aws-operation-name: CancelResize
      operationId: GET_CancelResize
      description: Cancels a resize operation for a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResizeProgressMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: ResizeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResizeNotFoundFault'
        '482':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '483':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The unique identifier for the cluster that you want to cancel a resize operation for.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CancelResize
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CancelResize
      operationId: POST_CancelResize
      description: Cancels a resize operation for a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResizeProgressMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: ResizeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResizeNotFoundFault'
        '482':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '483':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CancelResizeMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CancelResize
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CopyClusterSnapshot:
    get:
      x-aws-operation-name: CopyClusterSnapshot
      operationId: GET_CopyClusterSnapshot
      description: '<p>Copies the specified automated cluster snapshot to a new manual cluster snapshot. The source must be an automated snapshot and it must be in the available state.</p> <p>When you delete a cluster, Amazon Redshift deletes any automated snapshots of the cluster. Also, when the retention period of the snapshot expires, Amazon Redshift automatically deletes it. If you want to keep an automated snapshot for a longer period, you can make a manual copy of the snapshot. Manual snapshots are retained until you delete them.</p> <p> For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyClusterSnapshotResult'
        '480':
          description: ClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotAlreadyExistsFault'
        '481':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '482':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '483':
          description: ClusterSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotQuotaExceededFault'
        '484':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      parameters:
        - name: SourceSnapshotIdentifier
          in: query
          required: true
          description: '<p>The identifier for the source snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier for a valid automated snapshot whose state is <code>available</code>.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: SourceSnapshotClusterIdentifier
          in: query
          required: false
          description: '<p>The identifier of the cluster the source snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier for a valid cluster.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: TargetSnapshotIdentifier
          in: query
          required: true
          description: '<p>The identifier given to the new manual snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank.</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique for the Amazon Web Services account that is making the request.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: '<p>The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely. </p> <p>The value must be either -1 or an integer between 1 and 3,653.</p> <p>The default value is -1.</p>'
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CopyClusterSnapshot
      operationId: POST_CopyClusterSnapshot
      description: '<p>Copies the specified automated cluster snapshot to a new manual cluster snapshot. The source must be an automated snapshot and it must be in the available state.</p> <p>When you delete a cluster, Amazon Redshift deletes any automated snapshots of the cluster. Also, when the retention period of the snapshot expires, Amazon Redshift automatically deletes it. If you want to keep an automated snapshot for a longer period, you can make a manual copy of the snapshot. Manual snapshots are retained until you delete them.</p> <p> For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyClusterSnapshotResult'
        '480':
          description: ClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotAlreadyExistsFault'
        '481':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '482':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '483':
          description: ClusterSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotQuotaExceededFault'
        '484':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CopyClusterSnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateAuthenticationProfile:
    get:
      x-aws-operation-name: CreateAuthenticationProfile
      operationId: GET_CreateAuthenticationProfile
      description: Creates an authentication profile with the specified parameters.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateAuthenticationProfileResult'
        '480':
          description: AuthenticationProfileAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationProfileAlreadyExistsFault'
        '481':
          description: AuthenticationProfileQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationProfileQuotaExceededFault'
        '482':
          description: InvalidAuthenticationProfileRequestFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationProfileRequestFault'
      parameters:
        - name: AuthenticationProfileName
          in: query
          required: true
          description: The name of the authentication profile to be created.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-]+$'
            maxLength: 63
        - name: AuthenticationProfileContent
          in: query
          required: true
          description: The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateAuthenticationProfile
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateAuthenticationProfile
      operationId: POST_CreateAuthenticationProfile
      description: Creates an authentication profile with the specified parameters.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateAuthenticationProfileResult'
        '480':
          description: AuthenticationProfileAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationProfileAlreadyExistsFault'
        '481':
          description: AuthenticationProfileQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationProfileQuotaExceededFault'
        '482':
          description: InvalidAuthenticationProfileRequestFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationProfileRequestFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateAuthenticationProfileMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateAuthenticationProfile
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateCluster:
    get:
      x-aws-operation-name: CreateCluster
      operationId: GET_CreateCluster
      description: '<p>Creates a new cluster with the specified parameters.</p> <p>To create a cluster in Virtual Private Cloud (VPC), you must provide a cluster subnet group name. The cluster subnet group identifies the subnets of your VPC that Amazon Redshift uses when creating the cluster. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClusterResult'
        '480':
          description: ClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterAlreadyExistsFault'
        '481':
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '482':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '483':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '484':
          description: ClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaExceededFault'
        '485':
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesQuotaExceededFault'
        '486':
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesPerClusterLimitExceededFault'
        '487':
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '488':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '489':
          description: InvalidClusterSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSubnetGroupStateFault'
        '490':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '491':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '492':
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
        '493':
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
        '494':
          description: InvalidElasticIpFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidElasticIpFault'
        '495':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '496':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '497':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '498':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
        '499':
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterTrackFault'
        '500':
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleNotFoundFault'
        '501':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      parameters:
        - name: DBName
          in: query
          required: false
          description: '<p>The name of the first database to be created when the cluster is created.</p> <p>To create additional databases after the cluster is created, connect to the cluster with a SQL client and use SQL commands to create a database. For more information, go to <a href="https://docs.aws.amazon.com/redshift/latest/dg/t_creating_database.html">Create a Database</a> in the Amazon Redshift Database Developer Guide. </p> <p>Default: <code>dev</code> </p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64 alphanumeric characters.</p> </li> <li> <p>Must contain only lowercase letters.</p> </li> <li> <p>Cannot be a word that is reserved by the service. A list of reserved words can be found in <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved Words</a> in the Amazon Redshift Database Developer Guide. </p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>A unique identifier for the cluster. You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. The identifier also appears in the Amazon Redshift console.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>Alphabetic characters must be lowercase.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique for all clusters within an Amazon Web Services account.</p> </li> </ul> <p>Example: <code>myexamplecluster</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterType
          in: query
          required: false
          description: '<p>The type of the cluster. When cluster type is specified as</p> <ul> <li> <p> <code>single-node</code>, the <b>NumberOfNodes</b> parameter is not required.</p> </li> <li> <p> <code>multi-node</code>, the <b>NumberOfNodes</b> parameter is required.</p> </li> </ul> <p>Valid Values: <code>multi-node</code> | <code>single-node</code> </p> <p>Default: <code>multi-node</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: NodeType
          in: query
          required: true
          description: '<p>The node type to be provisioned for the cluster. For information about node types, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes"> Working with Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p> <p>Valid Values: <code>ds2.xlarge</code> | <code>ds2.8xlarge</code> | <code>dc1.large</code> | <code>dc1.8xlarge</code> | <code>dc2.large</code> | <code>dc2.8xlarge</code> | <code>ra3.xlplus</code> | <code>ra3.4xlarge</code> | <code>ra3.16xlarge</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: MasterUsername
          in: query
          required: true
          description: '<p>The user name associated with the admin user account for the cluster that is being created.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 - 128 alphanumeric characters. The user name can''t be <code>PUBLIC</code>.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot be a reserved word. A list of reserved words can be found in <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved Words</a> in the Amazon Redshift Database Developer Guide. </p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: MasterUserPassword
          in: query
          required: true
          description: '<p>The password associated with the admin user account for the cluster that is being created.</p> <p>Constraints:</p> <ul> <li> <p>Must be between 8 and 64 characters in length.</p> </li> <li> <p>Must contain at least one uppercase letter.</p> </li> <li> <p>Must contain at least one lowercase letter.</p> </li> <li> <p>Must contain one number.</p> </li> <li> <p>Can be any printable ASCII character (ASCII code 33 to 126) except '' (single quote), " (double quote), \, /, @, or space.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterSecurityGroups
          in: query
          required: false
          description: '<p>A list of security groups to be associated with this cluster.</p> <p>Default: The default cluster security group for Amazon Redshift.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: ClusterSecurityGroupName
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: '<p>A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.</p> <p>Default: The default VPC security group is associated with the cluster.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: VpcSecurityGroupId
        - name: ClusterSubnetGroupName
          in: query
          required: false
          description: <p>The name of a cluster subnet group to be associated with this cluster.</p> <p>If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).</p>
          schema:
            type: string
            maxLength: 2147483647
        - name: AvailabilityZone
          in: query
          required: false
          description: '<p>The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency.</p> <p>Default: A random, system-chosen Availability Zone in the region that is specified by the endpoint.</p> <p>Example: <code>us-east-2d</code> </p> <p>Constraint: The specified Availability Zone must be in the same region as the current endpoint.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: '<p>The weekly time range (in UTC) during which automated cluster maintenance can occur.</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week. For more information about the time blocks for each region, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows">Maintenance Windows</a> in Amazon Redshift Cluster Management Guide.</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Minimum 30-minute window.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterParameterGroupName
          in: query
          required: false
          description: '<p>The name of the parameter group to be associated with this cluster.</p> <p>Default: The default Amazon Redshift cluster parameter group. For information about the default parameter group, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Working with Amazon Redshift Parameter Groups</a> </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: AutomatedSnapshotRetentionPeriod
          in: query
          required: false
          description: '<p>The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with <a>CreateClusterSnapshot</a>. </p> <p>You can''t disable automated snapshots for RA3 node types. Set the automated retention period from 1-35 days.</p> <p>Default: <code>1</code> </p> <p>Constraints: Must be a value from 0 to 35.</p>'
          schema:
            type: integer
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: '<p>The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn''t change the retention period of existing snapshots.</p> <p>The value must be either -1 or an integer between 1 and 3,653.</p>'
          schema:
            type: integer
        - name: Port
          in: query
          required: false
          description: '<p>The port number on which the cluster accepts incoming connections.</p> <p>The cluster is accessible only via the JDBC and ODBC connection strings. Part of the connection string requires the port on which the cluster will listen for incoming connections.</p> <p>Default: <code>5439</code> </p> <p>Valid Values: <code>1150-65535</code> </p>'
          schema:
            type: integer
        - name: ClusterVersion
          in: query
          required: false
          description: '<p>The version of the Amazon Redshift engine software that you want to deploy on the cluster.</p> <p>The version selected runs on all the nodes in the cluster.</p> <p>Constraints: Only version 1.0 is currently available.</p> <p>Example: <code>1.0</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: AllowVersionUpgrade
          in: query
          required: false
          description: '<p>If <code>true</code>, major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster.</p> <p>When a new major version of the Amazon Redshift engine is released, you can request that the service automatically apply upgrades during the maintenance window to the Amazon Redshift engine that is running on your cluster.</p> <p>Default: <code>true</code> </p>'
          schema:
            type: boolean
        - name: NumberOfNodes
          in: query
          required: false
          description: '<p>The number of compute nodes in the cluster. This parameter is required when the <b>ClusterType</b> parameter is specified as <code>multi-node</code>. </p> <p>For information about determining how many nodes you need, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes"> Working with Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p> <p>If you don''t specify this parameter, you get a single-node cluster. When requesting a multi-node cluster, you must specify the number of nodes that you want in the cluster.</p> <p>Default: <code>1</code> </p> <p>Constraints: Value must be at least 1 and no more than 100.</p>'
          schema:
            type: integer
        - name: PubliclyAccessible
          in: query
          required: false
          description: 'If <code>true</code>, the cluster can be accessed from a public network. '
          schema:
            type: boolean
        - name: Encrypted
          in: query
          required: false
          description: '<p>If <code>true</code>, the data in the cluster is encrypted at rest. </p> <p>Default: false</p>'
          schema:
            type: boolean
        - name: HsmClientCertificateIdentifier
          in: query
          required: false
          description: Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.
          schema:
            type: string
            maxLength: 2147483647
        - name: HsmConfigurationIdentifier
          in: query
          required: false
          description: Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
          schema:
            type: string
            maxLength: 2147483647
        - name: ElasticIp
          in: query
          required: false
          description: '<p>The Elastic IP (EIP) address for the cluster.</p> <p>Constraints: The cluster must be provisioned in EC2-VPC and publicly-accessible through an Internet gateway. For more information about provisioning clusters in EC2-VPC, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms">Supported Platforms to Launch Your Cluster</a> in the Amazon Redshift Cluster Management Guide.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: KmsKeyId
          in: query
          required: false
          description: The Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster.
          schema:
            type: string
            maxLength: 2147483647
        - name: EnhancedVpcRouting
          in: query
          required: false
          description: '<p>An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</p> <p>If this option is <code>true</code>, enhanced VPC routing is enabled. </p> <p>Default: false</p>'
          schema:
            type: boolean
        - name: AdditionalInfo
          in: query
          required: false
          description: Reserved.
          schema:
            type: string
            maxLength: 2147483647
        - name: IamRoles
          in: query
          required: false
          description: <p>A list of Identity and Access Management (IAM) roles that can be used by the cluster to access other Amazon Web Services services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. You can supply up to 10 IAM roles in a single request.</p> <p>A cluster can have up to 10 IAM roles associated with it at any time.</p>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: IamRoleArn
        - name: MaintenanceTrackName
          in: query
          required: false
          description: 'An optional parameter for the name of the maintenance track for the cluster. If you don''t provide a maintenance track name, the cluster is assigned to the <code>current</code> track.'
          schema:
            type: string
            maxLength: 2147483647
        - name: SnapshotScheduleIdentifier
          in: query
          required: false
          description: A unique identifier for the snapshot schedule.
          schema:
            type: string
            maxLength: 2147483647
        - name: AvailabilityZoneRelocation
          in: query
          required: false
          description: The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster is created.
          schema:
            type: boolean
        - name: AquaConfigurationStatus
          in: query
          required: false
          description: <p>The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) when it is created. Possible values include the following.</p> <ul> <li> <p>enabled - Use AQUA if it is available for the current Amazon Web Services Region and Amazon Redshift node type.</p> </li> <li> <p>disabled - Don't use AQUA. </p> </li> <li> <p>auto - Amazon Redshift determines whether to use AQUA.</p> </li> </ul>
          schema:
            type: string
            enum:
              - enabled
              - disabled
              - auto
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateCluster
      operationId: POST_CreateCluster
      description: '<p>Creates a new cluster with the specified parameters.</p> <p>To create a cluster in Virtual Private Cloud (VPC), you must provide a cluster subnet group name. The cluster subnet group identifies the subnets of your VPC that Amazon Redshift uses when creating the cluster. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClusterResult'
        '480':
          description: ClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterAlreadyExistsFault'
        '481':
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '482':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '483':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '484':
          description: ClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaExceededFault'
        '485':
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesQuotaExceededFault'
        '486':
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesPerClusterLimitExceededFault'
        '487':
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '488':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '489':
          description: InvalidClusterSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSubnetGroupStateFault'
        '490':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '491':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '492':
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
        '493':
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
        '494':
          description: InvalidElasticIpFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidElasticIpFault'
        '495':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '496':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '497':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '498':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
        '499':
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterTrackFault'
        '500':
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleNotFoundFault'
        '501':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateClusterMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateClusterParameterGroup:
    get:
      x-aws-operation-name: CreateClusterParameterGroup
      operationId: GET_CreateClusterParameterGroup
      description: '<p>Creates an Amazon Redshift parameter group.</p> <p>Creating parameter groups is independent of creating clusters. You can associate a cluster with a parameter group when you create the cluster. You can also associate an existing cluster with a parameter group after the cluster is created by using <a>ModifyCluster</a>. </p> <p>Parameters in the parameter group define specific behavior that applies to the databases you create on the cluster. For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClusterParameterGroupResult'
        '480':
          description: ClusterParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupQuotaExceededFault'
        '481':
          description: ClusterParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupAlreadyExistsFault'
        '482':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '483':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: ParameterGroupName
          in: query
          required: true
          description: '<p>The name of the cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique withing your Amazon Web Services account.</p> </li> </ul> <note> <p>This value is stored as a lower-case string.</p> </note>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ParameterGroupFamily
          in: query
          required: true
          description: '<p>The Amazon Redshift engine version to which the cluster parameter group applies. The cluster engine version determines the set of parameters.</p> <p>To get a list of valid parameter group family names, you can call <a>DescribeClusterParameterGroups</a>. By default, Amazon Redshift returns a list of all the parameter groups that are owned by your Amazon Web Services account, including the default parameter groups for each Amazon Redshift engine version. The parameter group family names associated with the default parameter groups provide you the valid values. For example, a valid family name is "redshift-1.0". </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Description
          in: query
          required: true
          description: A description of the parameter group.
          schema:
            type: string
            maxLength: 2147483647
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateClusterParameterGroup
      operationId: POST_CreateClusterParameterGroup
      description: '<p>Creates an Amazon Redshift parameter group.</p> <p>Creating parameter groups is independent of creating clusters. You can associate a cluster with a parameter group when you create the cluster. You can also associate an existing cluster with a parameter group after the cluster is created by using <a>ModifyCluster</a>. </p> <p>Parameters in the parameter group define specific behavior that applies to the databases you create on the cluster. For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClusterParameterGroupResult'
        '480':
          description: ClusterParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupQuotaExceededFault'
        '481':
          description: ClusterParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupAlreadyExistsFault'
        '482':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '483':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateClusterParameterGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateClusterSecurityGroup:
    get:
      x-aws-operation-name: CreateClusterSecurityGroup
      operationId: GET_CreateClusterSecurityGroup
      description: '<p>Creates a new Amazon Redshift security group. You use security groups to control access to non-VPC clusters.</p> <p> For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClusterSecurityGroupResult'
        '480':
          description: ClusterSecurityGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupAlreadyExistsFault'
        '481':
          description: ClusterSecurityGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupQuotaExceededFault'
        '482':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '483':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: ClusterSecurityGroupName
          in: query
          required: true
          description: '<p>The name for the security group. Amazon Redshift stores the value as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain no more than 255 alphanumeric characters or hyphens.</p> </li> <li> <p>Must not be "Default".</p> </li> <li> <p>Must be unique for all security groups that are created by your Amazon Web Services account.</p> </li> </ul> <p>Example: <code>examplesecuritygroup</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Description
          in: query
          required: true
          description: A description for the security group.
          schema:
            type: string
            maxLength: 2147483647
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateClusterSecurityGroup
      operationId: POST_CreateClusterSecurityGroup
      description: '<p>Creates a new Amazon Redshift security group. You use security groups to control access to non-VPC clusters.</p> <p> For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClusterSecurityGroupResult'
        '480':
          description: ClusterSecurityGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupAlreadyExistsFault'
        '481':
          description: ClusterSecurityGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupQuotaExceededFault'
        '482':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '483':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateClusterSecurityGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateClusterSnapshot:
    get:
      x-aws-operation-name: CreateClusterSnapshot
      operationId: GET_CreateClusterSnapshot
      description: '<p>Creates a manual snapshot of the specified cluster. The cluster must be in the <code>available</code> state. </p> <p> For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClusterSnapshotResult'
        '480':
          description: ClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotAlreadyExistsFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '483':
          description: ClusterSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotQuotaExceededFault'
        '484':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '485':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '486':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      parameters:
        - name: SnapshotIdentifier
          in: query
          required: true
          description: '<p>A unique identifier for the snapshot that you are requesting. This identifier must be unique for all snapshots within the Amazon Web Services account.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterIdentifier
          in: query
          required: true
          description: The cluster identifier for which you want a snapshot.
          schema:
            type: string
            maxLength: 2147483647
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: '<p>The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely. </p> <p>The value must be either -1 or an integer between 1 and 3,653.</p> <p>The default value is -1.</p>'
          schema:
            type: integer
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateClusterSnapshot
      operationId: POST_CreateClusterSnapshot
      description: '<p>Creates a manual snapshot of the specified cluster. The cluster must be in the <code>available</code> state. </p> <p> For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClusterSnapshotResult'
        '480':
          description: ClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotAlreadyExistsFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '483':
          description: ClusterSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotQuotaExceededFault'
        '484':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '485':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '486':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateClusterSnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateClusterSubnetGroup:
    get:
      x-aws-operation-name: CreateClusterSubnetGroup
      operationId: GET_CreateClusterSubnetGroup
      description: '<p>Creates a new Amazon Redshift subnet group. You must provide a list of one or more subnets in your existing Amazon Virtual Private Cloud (Amazon VPC) when creating Amazon Redshift subnet group.</p> <p> For information about subnet groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-cluster-subnet-groups.html">Amazon Redshift Cluster Subnet Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClusterSubnetGroupResult'
        '480':
          description: ClusterSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupAlreadyExistsFault'
        '481':
          description: ClusterSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupQuotaExceededFault'
        '482':
          description: ClusterSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetQuotaExceededFault'
        '483':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '484':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '485':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '486':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '487':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      parameters:
        - name: ClusterSubnetGroupName
          in: query
          required: true
          description: '<p>The name for the subnet group. Amazon Redshift stores the value as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain no more than 255 alphanumeric characters or hyphens.</p> </li> <li> <p>Must not be "Default".</p> </li> <li> <p>Must be unique for all subnet groups that are created by your Amazon Web Services account.</p> </li> </ul> <p>Example: <code>examplesubnetgroup</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Description
          in: query
          required: true
          description: A description for the subnet group.
          schema:
            type: string
            maxLength: 2147483647
        - name: SubnetIds
          in: query
          required: true
          description: An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a single request.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SubnetIdentifier
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateClusterSubnetGroup
      operationId: POST_CreateClusterSubnetGroup
      description: '<p>Creates a new Amazon Redshift subnet group. You must provide a list of one or more subnets in your existing Amazon Virtual Private Cloud (Amazon VPC) when creating Amazon Redshift subnet group.</p> <p> For information about subnet groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-cluster-subnet-groups.html">Amazon Redshift Cluster Subnet Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClusterSubnetGroupResult'
        '480':
          description: ClusterSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupAlreadyExistsFault'
        '481':
          description: ClusterSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupQuotaExceededFault'
        '482':
          description: ClusterSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetQuotaExceededFault'
        '483':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '484':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '485':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '486':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '487':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateClusterSubnetGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateEndpointAccess:
    get:
      x-aws-operation-name: CreateEndpointAccess
      operationId: GET_CreateEndpointAccess
      description: Creates a Redshift-managed VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAccess'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: AccessToClusterDeniedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToClusterDeniedFault'
        '482':
          description: EndpointsPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointsPerClusterLimitExceededFault'
        '483':
          description: EndpointsPerAuthorizationLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointsPerAuthorizationLimitExceededFault'
        '484':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '485':
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '486':
          description: EndpointAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAlreadyExistsFault'
        '487':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '488':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '489':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: The cluster identifier of the cluster to access.
          schema:
            type: string
            maxLength: 2147483647
        - name: ResourceOwner
          in: query
          required: false
          description: The Amazon Web Services account ID of the owner of the cluster. This is only required if the cluster is in another Amazon Web Services account.
          schema:
            type: string
            maxLength: 2147483647
        - name: EndpointName
          in: query
          required: true
          description: '<p>The Redshift-managed VPC endpoint name.</p> <p>An endpoint name must contain 1-30 characters. Valid characters are A-Z, a-z, 0-9, and hyphen(-). The first character must be a letter. The name can''t contain two consecutive hyphens or end with a hyphen.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: SubnetGroupName
          in: query
          required: true
          description: The subnet group from which Amazon Redshift chooses the subnet to deploy the endpoint.
          schema:
            type: string
            maxLength: 2147483647
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: 'The security group that defines the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: VpcSecurityGroupId
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEndpointAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateEndpointAccess
      operationId: POST_CreateEndpointAccess
      description: Creates a Redshift-managed VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAccess'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: AccessToClusterDeniedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToClusterDeniedFault'
        '482':
          description: EndpointsPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointsPerClusterLimitExceededFault'
        '483':
          description: EndpointsPerAuthorizationLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointsPerAuthorizationLimitExceededFault'
        '484':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '485':
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '486':
          description: EndpointAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAlreadyExistsFault'
        '487':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '488':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '489':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateEndpointAccessMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEndpointAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateEventSubscription:
    get:
      x-aws-operation-name: CreateEventSubscription
      operationId: GET_CreateEventSubscription
      description: '<p>Creates an Amazon Redshift event notification subscription. This action requires an ARN (Amazon Resource Name) of an Amazon SNS topic created by either the Amazon Redshift console, the Amazon SNS console, or the Amazon SNS API. To obtain an ARN with Amazon SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the source type, and lists of Amazon Redshift source IDs, event categories, and event severities. Notifications will be sent for all events you want that match those criteria. For example, you can specify source type = cluster, source ID = my-cluster-1 and mycluster2, event categories = Availability, Backup, and severity = ERROR. The subscription will only send notifications for those ERROR events in the Availability and Backup categories for the specified clusters.</p> <p>If you specify both the source type and source IDs, such as source type = cluster and source identifier = my-cluster-1, notifications will be sent for all the cluster events for my-cluster-1. If you specify a source type but do not specify a source identifier, you will receive notice of the events for the objects of that type in your Amazon Web Services account. If you do not specify either the SourceType nor the SourceIdentifier, you will be notified of events generated from all Amazon Redshift sources belonging to your Amazon Web Services account. You must specify a source type if you specify a source ID.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionAlreadyExistFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionAlreadyExistFault'
        '482':
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionEventIdNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionEventIdNotFoundFault'
        '486':
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
        '487':
          description: SubscriptionSeverityNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionSeverityNotFoundFault'
        '488':
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
        '489':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '490':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: '<p>The name of the event subscription to be created.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank.</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: SnsTopicArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the event notifications. The ARN is created by Amazon SNS when you create a topic and subscribe to it.
          schema:
            type: string
            maxLength: 2147483647
        - name: SourceType
          in: query
          required: false
          description: '<p>The type of source that will be generating the events. For example, if you want to be notified of events generated by a cluster, you would set this parameter to cluster. If this value is not specified, events are returned for all Amazon Redshift objects in your Amazon Web Services account. You must specify a source type in order to specify source IDs.</p> <p>Valid values: cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot, and scheduled-action.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: SourceIds
          in: query
          required: false
          description: '<p>A list of one or more identifiers of Amazon Redshift source objects. All of the objects must be of the same type as was specified in the source type parameter. The event subscription will return only events generated by the specified objects. If not specified, then events are returned for all objects within the source type specified.</p> <p>Example: my-cluster-1, my-cluster-2</p> <p>Example: my-snapshot-20131010</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SourceId
        - name: EventCategories
          in: query
          required: false
          description: '<p>Specifies the Amazon Redshift event categories to be published by the event notification subscription.</p> <p>Values: configuration, management, monitoring, security, pending</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: EventCategory
        - name: Severity
          in: query
          required: false
          description: '<p>Specifies the Amazon Redshift event severity to be published by the event notification subscription.</p> <p>Values: ERROR, INFO</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Enabled
          in: query
          required: false
          description: 'A boolean value; set to <code>true</code> to activate the subscription, and set to <code>false</code> to create the subscription but not activate it. '
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateEventSubscription
      operationId: POST_CreateEventSubscription
      description: '<p>Creates an Amazon Redshift event notification subscription. This action requires an ARN (Amazon Resource Name) of an Amazon SNS topic created by either the Amazon Redshift console, the Amazon SNS console, or the Amazon SNS API. To obtain an ARN with Amazon SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the source type, and lists of Amazon Redshift source IDs, event categories, and event severities. Notifications will be sent for all events you want that match those criteria. For example, you can specify source type = cluster, source ID = my-cluster-1 and mycluster2, event categories = Availability, Backup, and severity = ERROR. The subscription will only send notifications for those ERROR events in the Availability and Backup categories for the specified clusters.</p> <p>If you specify both the source type and source IDs, such as source type = cluster and source identifier = my-cluster-1, notifications will be sent for all the cluster events for my-cluster-1. If you specify a source type but do not specify a source identifier, you will receive notice of the events for the objects of that type in your Amazon Web Services account. If you do not specify either the SourceType nor the SourceIdentifier, you will be notified of events generated from all Amazon Redshift sources belonging to your Amazon Web Services account. You must specify a source type if you specify a source ID.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionAlreadyExistFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionAlreadyExistFault'
        '482':
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionEventIdNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionEventIdNotFoundFault'
        '486':
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
        '487':
          description: SubscriptionSeverityNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionSeverityNotFoundFault'
        '488':
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
        '489':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '490':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateEventSubscriptionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateHsmClientCertificate:
    get:
      x-aws-operation-name: CreateHsmClientCertificate
      operationId: GET_CreateHsmClientCertificate
      description: '<p>Creates an HSM client certificate that an Amazon Redshift cluster will use to connect to the client''s HSM in order to store and retrieve the keys used to encrypt the cluster databases.</p> <p>The command returns a public key, which you must store in the HSM. In addition to creating the HSM certificate, you must create an Amazon Redshift HSM configuration that provides a cluster the information needed to store and use encryption keys in the HSM. For more information, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html#working-with-HSM">Hardware Security Modules</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateHsmClientCertificateResult'
        '480':
          description: HsmClientCertificateAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateAlreadyExistsFault'
        '481':
          description: HsmClientCertificateQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateQuotaExceededFault'
        '482':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '483':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: HsmClientCertificateIdentifier
          in: query
          required: true
          description: The identifier to be assigned to the new HSM client certificate that the cluster will use to connect to the HSM to use the database encryption keys.
          schema:
            type: string
            maxLength: 2147483647
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateHsmClientCertificate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateHsmClientCertificate
      operationId: POST_CreateHsmClientCertificate
      description: '<p>Creates an HSM client certificate that an Amazon Redshift cluster will use to connect to the client''s HSM in order to store and retrieve the keys used to encrypt the cluster databases.</p> <p>The command returns a public key, which you must store in the HSM. In addition to creating the HSM certificate, you must create an Amazon Redshift HSM configuration that provides a cluster the information needed to store and use encryption keys in the HSM. For more information, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html#working-with-HSM">Hardware Security Modules</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateHsmClientCertificateResult'
        '480':
          description: HsmClientCertificateAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateAlreadyExistsFault'
        '481':
          description: HsmClientCertificateQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateQuotaExceededFault'
        '482':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '483':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateHsmClientCertificateMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateHsmClientCertificate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateHsmConfiguration:
    get:
      x-aws-operation-name: CreateHsmConfiguration
      operationId: GET_CreateHsmConfiguration
      description: '<p>Creates an HSM configuration that contains the information required by an Amazon Redshift cluster to store and use database encryption keys in a Hardware Security Module (HSM). After creating the HSM configuration, you can specify it as a parameter when creating a cluster. The cluster will then store its encryption keys in the HSM.</p> <p>In addition to creating an HSM configuration, you must also create an HSM client certificate. For more information, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html">Hardware Security Modules</a> in the Amazon Redshift Cluster Management Guide.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateHsmConfigurationResult'
        '480':
          description: HsmConfigurationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationAlreadyExistsFault'
        '481':
          description: HsmConfigurationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationQuotaExceededFault'
        '482':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '483':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: HsmConfigurationIdentifier
          in: query
          required: true
          description: The identifier to be assigned to the new Amazon Redshift HSM configuration.
          schema:
            type: string
            maxLength: 2147483647
        - name: Description
          in: query
          required: true
          description: A text description of the HSM configuration to be created.
          schema:
            type: string
            maxLength: 2147483647
        - name: HsmIpAddress
          in: query
          required: true
          description: The IP address that the Amazon Redshift cluster must use to access the HSM.
          schema:
            type: string
            maxLength: 2147483647
        - name: HsmPartitionName
          in: query
          required: true
          description: The name of the partition in the HSM where the Amazon Redshift clusters will store their database encryption keys.
          schema:
            type: string
            maxLength: 2147483647
        - name: HsmPartitionPassword
          in: query
          required: true
          description: The password required to access the HSM partition.
          schema:
            type: string
            maxLength: 2147483647
        - name: HsmServerPublicCertificate
          in: query
          required: true
          description: 'The HSMs public certificate file. When using Cloud HSM, the file name is server.pem.'
          schema:
            type: string
            maxLength: 2147483647
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateHsmConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateHsmConfiguration
      operationId: POST_CreateHsmConfiguration
      description: '<p>Creates an HSM configuration that contains the information required by an Amazon Redshift cluster to store and use database encryption keys in a Hardware Security Module (HSM). After creating the HSM configuration, you can specify it as a parameter when creating a cluster. The cluster will then store its encryption keys in the HSM.</p> <p>In addition to creating an HSM configuration, you must also create an HSM client certificate. For more information, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html">Hardware Security Modules</a> in the Amazon Redshift Cluster Management Guide.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateHsmConfigurationResult'
        '480':
          description: HsmConfigurationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationAlreadyExistsFault'
        '481':
          description: HsmConfigurationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationQuotaExceededFault'
        '482':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '483':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateHsmConfigurationMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateHsmConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateScheduledAction:
    get:
      x-aws-operation-name: CreateScheduledAction
      operationId: GET_CreateScheduledAction
      description: 'Creates a scheduled action. A scheduled action contains a schedule and an Amazon Redshift API action. For example, you can create a schedule of when to run the <code>ResizeCluster</code> API operation. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledAction'
        '480':
          description: ScheduledActionAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionAlreadyExistsFault'
        '481':
          description: ScheduledActionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionQuotaExceededFault'
        '482':
          description: ScheduledActionTypeUnsupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionTypeUnsupportedFault'
        '483':
          description: InvalidScheduleFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidScheduleFault'
        '484':
          description: InvalidScheduledActionFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidScheduledActionFault'
        '485':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      parameters:
        - name: ScheduledActionName
          in: query
          required: true
          description: 'The name of the scheduled action. The name must be unique within an account. For more information about this parameter, see <a>ScheduledAction</a>. '
          schema:
            type: string
            maxLength: 2147483647
        - name: TargetAction
          in: query
          required: true
          description: 'A JSON format string of the Amazon Redshift API operation with input parameters. For more information about this parameter, see <a>ScheduledAction</a>. '
          schema:
            type: object
            properties:
              ResizeCluster:
                $ref: '#/components/schemas/ResizeClusterMessage'
                description: 'An action that runs a <code>ResizeCluster</code> API operation. '
              PauseCluster:
                $ref: '#/components/schemas/PauseClusterMessage'
                description: 'An action that runs a <code>PauseCluster</code> API operation. '
              ResumeCluster:
                $ref: '#/components/schemas/ResumeClusterMessage'
                description: 'An action that runs a <code>ResumeCluster</code> API operation. '
            description: 'The action type that specifies an Amazon Redshift API operation that is supported by the Amazon Redshift scheduler. '
        - name: Schedule
          in: query
          required: true
          description: 'The schedule in <code>at( )</code> or <code>cron( )</code> format. For more information about this parameter, see <a>ScheduledAction</a>.'
          schema:
            type: string
            maxLength: 2147483647
        - name: IamRole
          in: query
          required: true
          description: 'The IAM role to assume to run the target action. For more information about this parameter, see <a>ScheduledAction</a>. '
          schema:
            type: string
            maxLength: 2147483647
        - name: ScheduledActionDescription
          in: query
          required: false
          description: 'The description of the scheduled action. '
          schema:
            type: string
            maxLength: 2147483647
        - name: StartTime
          in: query
          required: false
          description: 'The start time in UTC of the scheduled action. Before this time, the scheduled action does not trigger. For more information about this parameter, see <a>ScheduledAction</a>.'
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: 'The end time in UTC of the scheduled action. After this time, the scheduled action does not trigger. For more information about this parameter, see <a>ScheduledAction</a>. '
          schema:
            type: string
            format: date-time
        - name: Enable
          in: query
          required: false
          description: 'If true, the schedule is enabled. If false, the scheduled action does not trigger. For more information about <code>state</code> of the scheduled action, see <a>ScheduledAction</a>. '
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateScheduledAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateScheduledAction
      operationId: POST_CreateScheduledAction
      description: 'Creates a scheduled action. A scheduled action contains a schedule and an Amazon Redshift API action. For example, you can create a schedule of when to run the <code>ResizeCluster</code> API operation. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledAction'
        '480':
          description: ScheduledActionAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionAlreadyExistsFault'
        '481':
          description: ScheduledActionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionQuotaExceededFault'
        '482':
          description: ScheduledActionTypeUnsupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionTypeUnsupportedFault'
        '483':
          description: InvalidScheduleFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidScheduleFault'
        '484':
          description: InvalidScheduledActionFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidScheduledActionFault'
        '485':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateScheduledActionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateScheduledAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateSnapshotCopyGrant:
    get:
      x-aws-operation-name: CreateSnapshotCopyGrant
      operationId: GET_CreateSnapshotCopyGrant
      description: '<p>Creates a snapshot copy grant that permits Amazon Redshift to use a customer master key (CMK) from Key Management Service (KMS) to encrypt copied snapshots in a destination region.</p> <p> For more information about managing snapshot copy grants, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSnapshotCopyGrantResult'
        '480':
          description: SnapshotCopyGrantAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantAlreadyExistsFault'
        '481':
          description: SnapshotCopyGrantQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantQuotaExceededFault'
        '482':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '483':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '484':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '485':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      parameters:
        - name: SnapshotCopyGrantName
          in: query
          required: true
          description: '<p>The name of the snapshot copy grant. This name must be unique in the region for the Amazon Web Services account.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>Alphabetic characters must be lowercase.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique for all clusters within an Amazon Web Services account.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: KmsKeyId
          in: query
          required: false
          description: 'The unique identifier of the customer master key (CMK) to which to grant Amazon Redshift permission. If no key is specified, the default key is used.'
          schema:
            type: string
            maxLength: 2147483647
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateSnapshotCopyGrant
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateSnapshotCopyGrant
      operationId: POST_CreateSnapshotCopyGrant
      description: '<p>Creates a snapshot copy grant that permits Amazon Redshift to use a customer master key (CMK) from Key Management Service (KMS) to encrypt copied snapshots in a destination region.</p> <p> For more information about managing snapshot copy grants, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSnapshotCopyGrantResult'
        '480':
          description: SnapshotCopyGrantAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantAlreadyExistsFault'
        '481':
          description: SnapshotCopyGrantQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantQuotaExceededFault'
        '482':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '483':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '484':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '485':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSnapshotCopyGrantMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateSnapshotCopyGrant
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateSnapshotSchedule:
    get:
      x-aws-operation-name: CreateSnapshotSchedule
      operationId: GET_CreateSnapshotSchedule
      description: 'Create a snapshot schedule that can be associated to a cluster and which overrides the default system backup schedule. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotSchedule'
        '480':
          description: SnapshotScheduleAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleAlreadyExistsFault'
        '481':
          description: InvalidScheduleFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidScheduleFault'
        '482':
          description: SnapshotScheduleQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleQuotaExceededFault'
        '483':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '484':
          description: ScheduleDefinitionTypeUnsupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduleDefinitionTypeUnsupportedFault'
        '485':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: ScheduleDefinitions
          in: query
          required: false
          description: 'The definition of the snapshot schedule. The definition is made up of schedule expressions, for example "cron(30 12 *)" or "rate(12 hours)". '
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: ScheduleDefinition
        - name: ScheduleIdentifier
          in: query
          required: false
          description: A unique identifier for a snapshot schedule. Only alphanumeric characters are allowed for the identifier.
          schema:
            type: string
            maxLength: 2147483647
        - name: ScheduleDescription
          in: query
          required: false
          description: The description of the snapshot schedule.
          schema:
            type: string
            maxLength: 2147483647
        - name: Tags
          in: query
          required: false
          description: An optional set of tags you can use to search for the schedule.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: DryRun
          in: query
          required: false
          description: <p/>
          schema:
            type: boolean
        - name: NextInvocations
          in: query
          required: false
          description: <p/>
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateSnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateSnapshotSchedule
      operationId: POST_CreateSnapshotSchedule
      description: 'Create a snapshot schedule that can be associated to a cluster and which overrides the default system backup schedule. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotSchedule'
        '480':
          description: SnapshotScheduleAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleAlreadyExistsFault'
        '481':
          description: InvalidScheduleFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidScheduleFault'
        '482':
          description: SnapshotScheduleQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleQuotaExceededFault'
        '483':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '484':
          description: ScheduleDefinitionTypeUnsupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduleDefinitionTypeUnsupportedFault'
        '485':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSnapshotScheduleMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateSnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateTags:
    get:
      x-aws-operation-name: CreateTags
      operationId: GET_CreateTags
      description: '<p>Adds tags to a cluster.</p> <p>A resource can have up to 50 tags. If you try to create more than 50 tags for a resource, you will receive an error and the attempt will fail.</p> <p>If you specify a key that already exists for the resource, the value for that key will be updated with the new value.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '481':
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
        '482':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '483':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: 'The Amazon Resource Name (ARN) to which you want to add the tag or tags. For example, <code>arn:aws:redshift:us-east-2:123456789:cluster:t1</code>. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Tags
          in: query
          required: true
          description: 'One or more name/value pairs to add as tags to the specified resource. Each tag name is passed in with the parameter <code>Key</code> and the corresponding value is passed in with the parameter <code>Value</code>. The <code>Key</code> and <code>Value</code> parameters are separated by a comma (,). Separate multiple tags with a space. For example, <code>--tags "Key"="owner","Value"="admin" "Key"="environment","Value"="test" "Key"="version","Value"="1.0"</code>. '
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTags
      operationId: POST_CreateTags
      description: '<p>Adds tags to a cluster.</p> <p>A resource can have up to 50 tags. If you try to create more than 50 tags for a resource, you will receive an error and the attempt will fail.</p> <p>If you specify a key that already exists for the resource, the value for that key will be updated with the new value.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '481':
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
        '482':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '483':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTagsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=CreateUsageLimit:
    get:
      x-aws-operation-name: CreateUsageLimit
      operationId: GET_CreateUsageLimit
      description: Creates a usage limit for a specified Amazon Redshift feature on a cluster. The usage limit is identified by the returned usage limit identifier.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UsageLimit'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '483':
          description: UsageLimitAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UsageLimitAlreadyExistsFault'
        '484':
          description: InvalidUsageLimitFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUsageLimitFault'
        '485':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '486':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The identifier of the cluster that you want to limit usage.
          schema:
            type: string
            maxLength: 2147483647
        - name: FeatureType
          in: query
          required: true
          description: The Amazon Redshift feature that you want to limit.
          schema:
            type: string
            enum:
              - spectrum
              - concurrency-scaling
        - name: LimitType
          in: query
          required: true
          description: 'The type of limit. Depending on the feature type, this can be based on a time duration or data size. If <code>FeatureType</code> is <code>spectrum</code>, then <code>LimitType</code> must be <code>data-scanned</code>. If <code>FeatureType</code> is <code>concurrency-scaling</code>, then <code>LimitType</code> must be <code>time</code>. '
          schema:
            type: string
            enum:
              - time
              - data-scanned
        - name: Amount
          in: query
          required: true
          description: 'The limit amount. If time-based, this amount is in minutes. If data-based, this amount is in terabytes (TB). The value must be a positive number. '
          schema:
            type: integer
        - name: Period
          in: query
          required: false
          description: 'The time period that the amount applies to. A <code>weekly</code> period begins on Sunday. The default is <code>monthly</code>. '
          schema:
            type: string
            enum:
              - daily
              - weekly
              - monthly
        - name: BreachAction
          in: query
          required: false
          description: 'The action that Amazon Redshift takes when the limit is reached. The default is log. For more information about this parameter, see <a>UsageLimit</a>.'
          schema:
            type: string
            enum:
              - log
              - emit-metric
              - disable
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateUsageLimit
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateUsageLimit
      operationId: POST_CreateUsageLimit
      description: Creates a usage limit for a specified Amazon Redshift feature on a cluster. The usage limit is identified by the returned usage limit identifier.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UsageLimit'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '483':
          description: UsageLimitAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UsageLimitAlreadyExistsFault'
        '484':
          description: InvalidUsageLimitFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUsageLimitFault'
        '485':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '486':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateUsageLimitMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateUsageLimit
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeauthorizeDataShare:
    get:
      x-aws-operation-name: DeauthorizeDataShare
      operationId: GET_DeauthorizeDataShare
      description: 'From the producer account, removes authorization from the specified datashare. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DataShare'
        '480':
          description: InvalidDataShareFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDataShareFault'
      parameters:
        - name: DataShareArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the datashare to remove authorization from.
          schema:
            type: string
            maxLength: 2147483647
        - name: ConsumerIdentifier
          in: query
          required: true
          description: The identifier of the data consumer that is to have authorization removed from the datashare. This identifier is an AWS account ID.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeauthorizeDataShare
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeauthorizeDataShare
      operationId: POST_DeauthorizeDataShare
      description: 'From the producer account, removes authorization from the specified datashare. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DataShare'
        '480':
          description: InvalidDataShareFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDataShareFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeauthorizeDataShareMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeauthorizeDataShare
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteAuthenticationProfile:
    get:
      x-aws-operation-name: DeleteAuthenticationProfile
      operationId: GET_DeleteAuthenticationProfile
      description: Deletes an authentication profile.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteAuthenticationProfileResult'
        '480':
          description: AuthenticationProfileNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationProfileNotFoundFault'
        '481':
          description: InvalidAuthenticationProfileRequestFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationProfileRequestFault'
      parameters:
        - name: AuthenticationProfileName
          in: query
          required: true
          description: The name of the authentication profile to delete.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-]+$'
            maxLength: 63
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteAuthenticationProfile
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteAuthenticationProfile
      operationId: POST_DeleteAuthenticationProfile
      description: Deletes an authentication profile.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteAuthenticationProfileResult'
        '480':
          description: AuthenticationProfileNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationProfileNotFoundFault'
        '481':
          description: InvalidAuthenticationProfileRequestFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationProfileRequestFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteAuthenticationProfileMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteAuthenticationProfile
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteCluster:
    get:
      x-aws-operation-name: DeleteCluster
      operationId: GET_DeleteCluster
      description: '<p>Deletes a previously provisioned cluster without its final snapshot being created. A successful response from the web service indicates that the request was received correctly. Use <a>DescribeClusters</a> to monitor the status of the deletion. The delete operation cannot be canceled or reverted once submitted. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>If you want to shut down the cluster and retain it for future use, set <i>SkipFinalClusterSnapshot</i> to <code>false</code> and specify a name for <i>FinalClusterSnapshotIdentifier</i>. You can later restore this snapshot to resume using the cluster. If a final cluster snapshot is requested, the status of the cluster will be "final-snapshot" while the snapshot is being taken, then it''s "deleting" once Amazon Redshift begins deleting the cluster. </p> <p> For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteClusterResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: ClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotAlreadyExistsFault'
        '483':
          description: ClusterSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotQuotaExceededFault'
        '484':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>The identifier of the cluster to be deleted.</p> <p>Constraints:</p> <ul> <li> <p>Must contain lowercase characters.</p> </li> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: SkipFinalClusterSnapshot
          in: query
          required: false
          description: '<p>Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If <code>true</code>, a final cluster snapshot is not created. If <code>false</code>, a final cluster snapshot is created before the cluster is deleted. </p> <note> <p>The <i>FinalClusterSnapshotIdentifier</i> parameter must be specified if <i>SkipFinalClusterSnapshot</i> is <code>false</code>.</p> </note> <p>Default: <code>false</code> </p>'
          schema:
            type: boolean
        - name: FinalClusterSnapshotIdentifier
          in: query
          required: false
          description: '<p>The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, <i>SkipFinalClusterSnapshot</i> must be <code>false</code>. </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: FinalClusterSnapshotRetentionPeriod
          in: query
          required: false
          description: '<p>The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely.</p> <p>The value must be either -1 or an integer between 1 and 3,653.</p> <p>The default value is -1.</p>'
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteCluster
      operationId: POST_DeleteCluster
      description: '<p>Deletes a previously provisioned cluster without its final snapshot being created. A successful response from the web service indicates that the request was received correctly. Use <a>DescribeClusters</a> to monitor the status of the deletion. The delete operation cannot be canceled or reverted once submitted. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>If you want to shut down the cluster and retain it for future use, set <i>SkipFinalClusterSnapshot</i> to <code>false</code> and specify a name for <i>FinalClusterSnapshotIdentifier</i>. You can later restore this snapshot to resume using the cluster. If a final cluster snapshot is requested, the status of the cluster will be "final-snapshot" while the snapshot is being taken, then it''s "deleting" once Amazon Redshift begins deleting the cluster. </p> <p> For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteClusterResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: ClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotAlreadyExistsFault'
        '483':
          description: ClusterSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotQuotaExceededFault'
        '484':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteClusterMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteClusterParameterGroup:
    get:
      x-aws-operation-name: DeleteClusterParameterGroup
      operationId: GET_DeleteClusterParameterGroup
      description: <p>Deletes a specified Amazon Redshift parameter group.</p> <note> <p>You cannot delete a parameter group if it is associated with a cluster.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidClusterParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterParameterGroupStateFault'
        '481':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
      parameters:
        - name: ParameterGroupName
          in: query
          required: true
          description: '<p>The name of the parameter group to be deleted.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing cluster parameter group.</p> </li> <li> <p>Cannot delete a default cluster parameter group.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteClusterParameterGroup
      operationId: POST_DeleteClusterParameterGroup
      description: <p>Deletes a specified Amazon Redshift parameter group.</p> <note> <p>You cannot delete a parameter group if it is associated with a cluster.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidClusterParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterParameterGroupStateFault'
        '481':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteClusterParameterGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteClusterSecurityGroup:
    get:
      x-aws-operation-name: DeleteClusterSecurityGroup
      operationId: GET_DeleteClusterSecurityGroup
      description: '<p>Deletes an Amazon Redshift security group.</p> <note> <p>You cannot delete a security group that is associated with any clusters. You cannot delete the default security group.</p> </note> <p> For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '481':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
      parameters:
        - name: ClusterSecurityGroupName
          in: query
          required: true
          description: The name of the cluster security group to be deleted.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteClusterSecurityGroup
      operationId: POST_DeleteClusterSecurityGroup
      description: '<p>Deletes an Amazon Redshift security group.</p> <note> <p>You cannot delete a security group that is associated with any clusters. You cannot delete the default security group.</p> </note> <p> For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '481':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteClusterSecurityGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteClusterSnapshot:
    get:
      x-aws-operation-name: DeleteClusterSnapshot
      operationId: GET_DeleteClusterSnapshot
      description: '<p>Deletes the specified manual snapshot. The snapshot must be in the <code>available</code> state, with no other users authorized to access the snapshot. </p> <p>Unlike automated snapshots, manual snapshots are retained even after you delete your cluster. Amazon Redshift does not delete your manual snapshots. You must delete manual snapshot explicitly to avoid getting charged. If other accounts are authorized to access the snapshot, you must revoke all of the authorizations before you can delete the snapshot.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteClusterSnapshotResult'
        '480':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '481':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
      parameters:
        - name: SnapshotIdentifier
          in: query
          required: true
          description: '<p>The unique identifier of the manual snapshot to be deleted.</p> <p>Constraints: Must be the name of an existing snapshot that is in the <code>available</code>, <code>failed</code>, or <code>cancelled</code> state.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: SnapshotClusterIdentifier
          in: query
          required: false
          description: '<p>The unique identifier of the cluster the snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.</p> <p>Constraints: Must be the name of valid cluster.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteClusterSnapshot
      operationId: POST_DeleteClusterSnapshot
      description: '<p>Deletes the specified manual snapshot. The snapshot must be in the <code>available</code> state, with no other users authorized to access the snapshot. </p> <p>Unlike automated snapshots, manual snapshots are retained even after you delete your cluster. Amazon Redshift does not delete your manual snapshots. You must delete manual snapshot explicitly to avoid getting charged. If other accounts are authorized to access the snapshot, you must revoke all of the authorizations before you can delete the snapshot.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteClusterSnapshotResult'
        '480':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '481':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteClusterSnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteClusterSubnetGroup:
    get:
      x-aws-operation-name: DeleteClusterSubnetGroup
      operationId: GET_DeleteClusterSubnetGroup
      description: Deletes the specified cluster subnet group.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidClusterSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSubnetGroupStateFault'
        '481':
          description: InvalidClusterSubnetStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSubnetStateFault'
        '482':
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
      parameters:
        - name: ClusterSubnetGroupName
          in: query
          required: true
          description: The name of the cluster subnet group name to be deleted.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteClusterSubnetGroup
      operationId: POST_DeleteClusterSubnetGroup
      description: Deletes the specified cluster subnet group.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidClusterSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSubnetGroupStateFault'
        '481':
          description: InvalidClusterSubnetStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSubnetStateFault'
        '482':
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteClusterSubnetGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteEndpointAccess:
    get:
      x-aws-operation-name: DeleteEndpointAccess
      operationId: GET_DeleteEndpointAccess
      description: Deletes a Redshift-managed VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAccess'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidEndpointStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidEndpointStateFault'
        '482':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '483':
          description: EndpointNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointNotFoundFault'
        '484':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      parameters:
        - name: EndpointName
          in: query
          required: true
          description: The Redshift-managed VPC endpoint to delete.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEndpointAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteEndpointAccess
      operationId: POST_DeleteEndpointAccess
      description: Deletes a Redshift-managed VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAccess'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidEndpointStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidEndpointStateFault'
        '482':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '483':
          description: EndpointNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointNotFoundFault'
        '484':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteEndpointAccessMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEndpointAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteEventSubscription:
    get:
      x-aws-operation-name: DeleteEventSubscription
      operationId: GET_DeleteEventSubscription
      description: Deletes an Amazon Redshift event notification subscription.
      responses:
        '200':
          description: Success
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: InvalidSubscriptionStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubscriptionStateFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: The name of the Amazon Redshift event notification subscription to be deleted.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteEventSubscription
      operationId: POST_DeleteEventSubscription
      description: Deletes an Amazon Redshift event notification subscription.
      responses:
        '200':
          description: Success
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: InvalidSubscriptionStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubscriptionStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteEventSubscriptionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteHsmClientCertificate:
    get:
      x-aws-operation-name: DeleteHsmClientCertificate
      operationId: GET_DeleteHsmClientCertificate
      description: Deletes the specified HSM client certificate.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidHsmClientCertificateStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidHsmClientCertificateStateFault'
        '481':
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
      parameters:
        - name: HsmClientCertificateIdentifier
          in: query
          required: true
          description: The identifier of the HSM client certificate to be deleted.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteHsmClientCertificate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteHsmClientCertificate
      operationId: POST_DeleteHsmClientCertificate
      description: Deletes the specified HSM client certificate.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidHsmClientCertificateStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidHsmClientCertificateStateFault'
        '481':
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteHsmClientCertificateMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteHsmClientCertificate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteHsmConfiguration:
    get:
      x-aws-operation-name: DeleteHsmConfiguration
      operationId: GET_DeleteHsmConfiguration
      description: Deletes the specified Amazon Redshift HSM configuration.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidHsmConfigurationStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidHsmConfigurationStateFault'
        '481':
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
      parameters:
        - name: HsmConfigurationIdentifier
          in: query
          required: true
          description: The identifier of the Amazon Redshift HSM configuration to be deleted.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteHsmConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteHsmConfiguration
      operationId: POST_DeleteHsmConfiguration
      description: Deletes the specified Amazon Redshift HSM configuration.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidHsmConfigurationStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidHsmConfigurationStateFault'
        '481':
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteHsmConfigurationMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteHsmConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeletePartner:
    get:
      x-aws-operation-name: DeletePartner
      operationId: GET_DeletePartner
      description: Deletes a partner integration from a cluster. Data can still flow to the cluster until the integration is deleted at the partner's website.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PartnerIntegrationOutputMessage'
        '480':
          description: PartnerNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PartnerNotFoundFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '482':
          description: UnauthorizedPartnerIntegrationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedPartnerIntegrationFault'
      parameters:
        - name: AccountId
          in: query
          required: true
          description: The Amazon Web Services account ID that owns the cluster.
          schema:
            type: string
            pattern: '^[0-9]+$'
            minLength: 12
            maxLength: 12
        - name: ClusterIdentifier
          in: query
          required: true
          description: The cluster identifier of the cluster that receives data from the partner.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-]+$'
            maxLength: 63
        - name: DatabaseName
          in: query
          required: true
          description: The name of the database that receives data from the partner.
          schema:
            type: string
            pattern: '^[\p{L}_][\p{L}\p{N}@$#_]+$'
            maxLength: 127
        - name: PartnerName
          in: query
          required: true
          description: The name of the partner that is authorized to send data.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-_]+$'
            maxLength: 255
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeletePartner
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeletePartner
      operationId: POST_DeletePartner
      description: Deletes a partner integration from a cluster. Data can still flow to the cluster until the integration is deleted at the partner's website.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PartnerIntegrationOutputMessage'
        '480':
          description: PartnerNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PartnerNotFoundFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '482':
          description: UnauthorizedPartnerIntegrationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedPartnerIntegrationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PartnerIntegrationInputMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeletePartner
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteScheduledAction:
    get:
      x-aws-operation-name: DeleteScheduledAction
      operationId: GET_DeleteScheduledAction
      description: 'Deletes a scheduled action. '
      responses:
        '200':
          description: Success
        '480':
          description: ScheduledActionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionNotFoundFault'
        '481':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      parameters:
        - name: ScheduledActionName
          in: query
          required: true
          description: 'The name of the scheduled action to delete. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteScheduledAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteScheduledAction
      operationId: POST_DeleteScheduledAction
      description: 'Deletes a scheduled action. '
      responses:
        '200':
          description: Success
        '480':
          description: ScheduledActionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionNotFoundFault'
        '481':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteScheduledActionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteScheduledAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteSnapshotCopyGrant:
    get:
      x-aws-operation-name: DeleteSnapshotCopyGrant
      operationId: GET_DeleteSnapshotCopyGrant
      description: Deletes the specified snapshot copy grant.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidSnapshotCopyGrantStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSnapshotCopyGrantStateFault'
        '481':
          description: SnapshotCopyGrantNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantNotFoundFault'
      parameters:
        - name: SnapshotCopyGrantName
          in: query
          required: true
          description: The name of the snapshot copy grant to delete.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSnapshotCopyGrant
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteSnapshotCopyGrant
      operationId: POST_DeleteSnapshotCopyGrant
      description: Deletes the specified snapshot copy grant.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidSnapshotCopyGrantStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSnapshotCopyGrantStateFault'
        '481':
          description: SnapshotCopyGrantNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSnapshotCopyGrantMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSnapshotCopyGrant
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteSnapshotSchedule:
    get:
      x-aws-operation-name: DeleteSnapshotSchedule
      operationId: GET_DeleteSnapshotSchedule
      description: Deletes a snapshot schedule.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidClusterSnapshotScheduleStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotScheduleStateFault'
        '481':
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleNotFoundFault'
      parameters:
        - name: ScheduleIdentifier
          in: query
          required: true
          description: A unique identifier of the snapshot schedule to delete.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteSnapshotSchedule
      operationId: POST_DeleteSnapshotSchedule
      description: Deletes a snapshot schedule.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidClusterSnapshotScheduleStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotScheduleStateFault'
        '481':
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSnapshotScheduleMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteTags:
    get:
      x-aws-operation-name: DeleteTags
      operationId: GET_DeleteTags
      description: Deletes tags from a resource. You must provide the ARN of the resource from which you want to delete the tag or tags.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: 'The Amazon Resource Name (ARN) from which you want to remove the tag or tags. For example, <code>arn:aws:redshift:us-east-2:123456789:cluster:t1</code>. '
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: true
          description: The tag key that you want to delete.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTags
      operationId: POST_DeleteTags
      description: Deletes tags from a resource. You must provide the ARN of the resource from which you want to delete the tag or tags.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTagsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DeleteUsageLimit:
    get:
      x-aws-operation-name: DeleteUsageLimit
      operationId: GET_DeleteUsageLimit
      description: Deletes a usage limit from a cluster.
      responses:
        '200':
          description: Success
        '480':
          description: UsageLimitNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UsageLimitNotFoundFault'
        '481':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      parameters:
        - name: UsageLimitId
          in: query
          required: true
          description: The identifier of the usage limit to delete.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteUsageLimit
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteUsageLimit
      operationId: POST_DeleteUsageLimit
      description: Deletes a usage limit from a cluster.
      responses:
        '200':
          description: Success
        '480':
          description: UsageLimitNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UsageLimitNotFoundFault'
        '481':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteUsageLimitMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteUsageLimit
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeAccountAttributes:
    get:
      x-aws-operation-name: DescribeAccountAttributes
      operationId: GET_DescribeAccountAttributes
      description: Returns a list of attributes attached to an account
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountAttributeList'
      parameters:
        - name: AttributeNames
          in: query
          required: false
          description: A list of attribute names.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: AttributeName
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAccountAttributes
      operationId: POST_DescribeAccountAttributes
      description: Returns a list of attributes attached to an account
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountAttributeList'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeAccountAttributesMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeAuthenticationProfiles:
    get:
      x-aws-operation-name: DescribeAuthenticationProfiles
      operationId: GET_DescribeAuthenticationProfiles
      description: Describes an authentication profile.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAuthenticationProfilesResult'
        '480':
          description: AuthenticationProfileNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationProfileNotFoundFault'
        '481':
          description: InvalidAuthenticationProfileRequestFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationProfileRequestFault'
      parameters:
        - name: AuthenticationProfileName
          in: query
          required: false
          description: The name of the authentication profile to describe. If not specified then all authentication profiles owned by the account are listed.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-]+$'
            maxLength: 63
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAuthenticationProfiles
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAuthenticationProfiles
      operationId: POST_DescribeAuthenticationProfiles
      description: Describes an authentication profile.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAuthenticationProfilesResult'
        '480':
          description: AuthenticationProfileNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationProfileNotFoundFault'
        '481':
          description: InvalidAuthenticationProfileRequestFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationProfileRequestFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeAuthenticationProfilesMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAuthenticationProfiles
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeClusterDbRevisions:
    get:
      x-aws-operation-name: DescribeClusterDbRevisions
      operationId: GET_DescribeClusterDbRevisions
      description: Returns an array of <code>ClusterDbRevision</code> objects.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterDbRevisionsMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: A unique identifier for a cluster whose <code>ClusterDbRevisions</code> you are requesting. This parameter is case sensitive. All clusters defined for an account are returned by default.
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in the <code>marker</code> field of the response. You can retrieve the next set of response records by providing the returned <code>marker</code> value in the <code>marker</code> parameter and retrying the request. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: '<p>An optional parameter that specifies the starting point for returning a set of response records. When the results of a <code>DescribeClusterDbRevisions</code> request exceed the value specified in <code>MaxRecords</code>, Amazon Redshift returns a value in the <code>marker</code> field of the response. You can retrieve the next set of response records by providing the returned <code>marker</code> value in the <code>marker</code> parameter and retrying the request. </p> <p>Constraints: You can specify either the <code>ClusterIdentifier</code> parameter, or the <code>marker</code> parameter, but not both.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterDbRevisions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClusterDbRevisions
      operationId: POST_DescribeClusterDbRevisions
      description: Returns an array of <code>ClusterDbRevision</code> objects.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterDbRevisionsMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClusterDbRevisionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterDbRevisions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeClusterParameterGroups:
    get:
      x-aws-operation-name: DescribeClusterParameterGroups
      operationId: GET_DescribeClusterParameterGroups
      description: '<p>Returns a list of Amazon Redshift parameter groups, including parameter groups you created and the default parameter group. For each parameter group, the response includes the parameter group name, description, and parameter group family name. You can optionally specify a name to retrieve the description of a specific parameter group.</p> <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all parameter groups that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all parameter groups that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, parameter groups are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupsMessage'
        '480':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: ParameterGroupName
          in: query
          required: false
          description: 'The name of a specific parameter group for which to return details. By default, details about all parameter groups and the default parameter group are returned.'
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterParameterGroups</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: false
          description: 'A tag key or keys for which you want to return all matching cluster parameter groups that are associated with the specified key or keys. For example, suppose that you have parameter groups that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the parameter groups that have either or both of these tag keys associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: TagValues
          in: query
          required: false
          description: 'A tag value or values for which you want to return all matching cluster parameter groups that are associated with the specified tag value or values. For example, suppose that you have parameter groups that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the parameter groups that have either or both of these tag values associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagValue
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClusterParameterGroups
      operationId: POST_DescribeClusterParameterGroups
      description: '<p>Returns a list of Amazon Redshift parameter groups, including parameter groups you created and the default parameter group. For each parameter group, the response includes the parameter group name, description, and parameter group family name. You can optionally specify a name to retrieve the description of a specific parameter group.</p> <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all parameter groups that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all parameter groups that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, parameter groups are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupsMessage'
        '480':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClusterParameterGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeClusterParameters:
    get:
      x-aws-operation-name: DescribeClusterParameters
      operationId: GET_DescribeClusterParameters
      description: '<p>Returns a detailed list of parameters contained within the specified Amazon Redshift parameter group. For each parameter the response includes information such as parameter name, description, data type, value, whether the parameter value is modifiable, and so on.</p> <p>You can specify <i>source</i> filter to retrieve parameters of only specific type. For example, to retrieve parameters that were modified by a user action such as from <a>ModifyClusterParameterGroup</a>, you can specify <i>source</i> equal to <i>user</i>.</p> <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupDetails'
        '480':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
      parameters:
        - name: ParameterGroupName
          in: query
          required: true
          description: The name of a cluster parameter group for which to return details.
          schema:
            type: string
            maxLength: 2147483647
        - name: Source
          in: query
          required: false
          description: '<p>The parameter types to return. Specify <code>user</code> to show parameters that are different form the default. Similarly, specify <code>engine-default</code> to show parameters that are the same as the default parameter group. </p> <p>Default: All parameter types returned.</p> <p>Valid Values: <code>user</code> | <code>engine-default</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterParameters</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClusterParameters
      operationId: POST_DescribeClusterParameters
      description: '<p>Returns a detailed list of parameters contained within the specified Amazon Redshift parameter group. For each parameter the response includes information such as parameter name, description, data type, value, whether the parameter value is modifiable, and so on.</p> <p>You can specify <i>source</i> filter to retrieve parameters of only specific type. For example, to retrieve parameters that were modified by a user action such as from <a>ModifyClusterParameterGroup</a>, you can specify <i>source</i> equal to <i>user</i>.</p> <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupDetails'
        '480':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClusterParametersMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeClusterSecurityGroups:
    get:
      x-aws-operation-name: DescribeClusterSecurityGroups
      operationId: GET_DescribeClusterSecurityGroups
      description: '<p>Returns information about Amazon Redshift security groups. If the name of a security group is specified, the response will contain only information about only that security group.</p> <p> For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all security groups that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all security groups that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, security groups are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupMessage'
        '480':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: ClusterSecurityGroupName
          in: query
          required: false
          description: '<p>The name of a cluster security group for which you are requesting details. You can specify either the <b>Marker</b> parameter or a <b>ClusterSecurityGroupName</b> parameter, but not both. </p> <p> Example: <code>securitygroup1</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: '<p>An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterSecurityGroups</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. </p> <p>Constraints: You can specify either the <b>ClusterSecurityGroupName</b> parameter or the <b>Marker</b> parameter, but not both. </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: false
          description: 'A tag key or keys for which you want to return all matching cluster security groups that are associated with the specified key or keys. For example, suppose that you have security groups that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the security groups that have either or both of these tag keys associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: TagValues
          in: query
          required: false
          description: 'A tag value or values for which you want to return all matching cluster security groups that are associated with the specified tag value or values. For example, suppose that you have security groups that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the security groups that have either or both of these tag values associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagValue
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterSecurityGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClusterSecurityGroups
      operationId: POST_DescribeClusterSecurityGroups
      description: '<p>Returns information about Amazon Redshift security groups. If the name of a security group is specified, the response will contain only information about only that security group.</p> <p> For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all security groups that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all security groups that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, security groups are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupMessage'
        '480':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClusterSecurityGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterSecurityGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeClusterSnapshots:
    get:
      x-aws-operation-name: DescribeClusterSnapshots
      operationId: GET_DescribeClusterSnapshots
      description: '<p>Returns one or more snapshot objects, which contain metadata about your cluster snapshots. By default, this operation returns information about all snapshots of all clusters that are owned by your Amazon Web Services account. No information is returned for snapshots owned by inactive Amazon Web Services accounts.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all snapshots that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all snapshots that have any combination of those values are returned. Only snapshots that you own are returned in the response; shared snapshots are not returned with the tag key and tag value request parameters.</p> <p>If both tag keys and values are omitted from the request, snapshots are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '482':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: The identifier of the cluster which generated the requested snapshots.
          schema:
            type: string
            maxLength: 2147483647
        - name: SnapshotIdentifier
          in: query
          required: false
          description: The snapshot identifier of the snapshot about which to return information.
          schema:
            type: string
            maxLength: 2147483647
        - name: SnapshotType
          in: query
          required: false
          description: '<p>The type of snapshots for which you are requesting information. By default, snapshots of all types are returned.</p> <p>Valid Values: <code>automated</code> | <code>manual</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: StartTime
          in: query
          required: false
          description: '<p>A value that requests only snapshots created at or after the specified time. The time value is specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: <code>2012-07-16T18:00:00Z</code> </p>'
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: '<p>A time value that requests only snapshots created at or before the specified time. The time value is specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: <code>2012-07-16T18:00:00Z</code> </p>'
          schema:
            type: string
            format: date-time
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterSnapshots</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: OwnerAccount
          in: query
          required: false
          description: 'The Amazon Web Services account used to create or copy the snapshot. Use this field to filter the results to snapshots owned by a particular account. To describe snapshots you own, either specify your Amazon Web Services account, or do not specify the parameter.'
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: false
          description: 'A tag key or keys for which you want to return all matching cluster snapshots that are associated with the specified key or keys. For example, suppose that you have snapshots that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the snapshots that have either or both of these tag keys associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: TagValues
          in: query
          required: false
          description: 'A tag value or values for which you want to return all matching cluster snapshots that are associated with the specified tag value or values. For example, suppose that you have snapshots that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the snapshots that have either or both of these tag values associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagValue
        - name: ClusterExists
          in: query
          required: false
          description: '<p>A value that indicates whether to return snapshots only for an existing cluster. You can perform table-level restore only by using a snapshot of an existing cluster, that is, a cluster that has not been deleted. Values for this parameter work as follows: </p> <ul> <li> <p>If <code>ClusterExists</code> is set to <code>true</code>, <code>ClusterIdentifier</code> is required.</p> </li> <li> <p>If <code>ClusterExists</code> is set to <code>false</code> and <code>ClusterIdentifier</code> isn''t specified, all snapshots associated with deleted clusters (orphaned snapshots) are returned. </p> </li> <li> <p>If <code>ClusterExists</code> is set to <code>false</code> and <code>ClusterIdentifier</code> is specified for a deleted cluster, snapshots associated with that cluster are returned.</p> </li> <li> <p>If <code>ClusterExists</code> is set to <code>false</code> and <code>ClusterIdentifier</code> is specified for an existing cluster, no snapshots are returned. </p> </li> </ul>'
          schema:
            type: boolean
        - name: SortingEntities
          in: query
          required: false
          description: <p/>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SnapshotSortingEntity'
                - xml:
                    name: SnapshotSortingEntity
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClusterSnapshots
      operationId: POST_DescribeClusterSnapshots
      description: '<p>Returns one or more snapshot objects, which contain metadata about your cluster snapshots. By default, this operation returns information about all snapshots of all clusters that are owned by your Amazon Web Services account. No information is returned for snapshots owned by inactive Amazon Web Services accounts.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all snapshots that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all snapshots that have any combination of those values are returned. Only snapshots that you own are returned in the response; shared snapshots are not returned with the tag key and tag value request parameters.</p> <p>If both tag keys and values are omitted from the request, snapshots are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '482':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClusterSnapshotsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeClusterSubnetGroups:
    get:
      x-aws-operation-name: DescribeClusterSubnetGroups
      operationId: GET_DescribeClusterSubnetGroups
      description: '<p>Returns one or more cluster subnet group objects, which contain metadata about your cluster subnet groups. By default, this operation returns information about all cluster subnet groups that are defined in your Amazon Web Services account.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all subnet groups that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all subnet groups that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, subnet groups are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupMessage'
        '480':
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: ClusterSubnetGroupName
          in: query
          required: false
          description: The name of the cluster subnet group for which information is requested.
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterSubnetGroups</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: false
          description: 'A tag key or keys for which you want to return all matching cluster subnet groups that are associated with the specified key or keys. For example, suppose that you have subnet groups that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the subnet groups that have either or both of these tag keys associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: TagValues
          in: query
          required: false
          description: 'A tag value or values for which you want to return all matching cluster subnet groups that are associated with the specified tag value or values. For example, suppose that you have subnet groups that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the subnet groups that have either or both of these tag values associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagValue
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClusterSubnetGroups
      operationId: POST_DescribeClusterSubnetGroups
      description: '<p>Returns one or more cluster subnet group objects, which contain metadata about your cluster subnet groups. By default, this operation returns information about all cluster subnet groups that are defined in your Amazon Web Services account.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all subnet groups that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all subnet groups that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, subnet groups are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupMessage'
        '480':
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClusterSubnetGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeClusterTracks:
    get:
      x-aws-operation-name: DescribeClusterTracks
      operationId: GET_DescribeClusterTracks
      description: Returns a list of all the available maintenance tracks.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrackListMessage'
        '480':
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterTrackFault'
        '481':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      parameters:
        - name: MaintenanceTrackName
          in: query
          required: false
          description: 'The name of the maintenance track. '
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: An integer value for the maximum number of maintenance tracks to return.
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <code>DescribeClusterTracks</code> request exceed the value specified in <code>MaxRecords</code>, Amazon Redshift returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterTracks
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClusterTracks
      operationId: POST_DescribeClusterTracks
      description: Returns a list of all the available maintenance tracks.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrackListMessage'
        '480':
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterTrackFault'
        '481':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClusterTracksMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterTracks
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeClusterVersions:
    get:
      x-aws-operation-name: DescribeClusterVersions
      operationId: GET_DescribeClusterVersions
      description: 'Returns descriptions of the available Amazon Redshift cluster versions. You can call this operation even before creating any clusters to learn more about the Amazon Redshift versions. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterVersionsMessage'
      parameters:
        - name: ClusterVersion
          in: query
          required: false
          description: '<p>The specific cluster version to return.</p> <p>Example: <code>1.0</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterParameterGroupFamily
          in: query
          required: false
          description: '<p>The name of a specific cluster parameter group family to return details for.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterVersions</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClusterVersions
      operationId: POST_DescribeClusterVersions
      description: 'Returns descriptions of the available Amazon Redshift cluster versions. You can call this operation even before creating any clusters to learn more about the Amazon Redshift versions. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterVersionsMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClusterVersionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeClusters:
    get:
      x-aws-operation-name: DescribeClusters
      operationId: GET_DescribeClusters
      description: '<p>Returns properties of provisioned clusters including general cluster properties, cluster database properties, maintenance and backup properties, and security and access properties. This operation supports pagination. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all clusters that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all clusters that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, clusters are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClustersMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: <p>The unique identifier of a cluster whose properties you are requesting. This parameter is case sensitive.</p> <p>The default is that all clusters defined for an account are returned.</p>
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: '<p>An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusters</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. </p> <p>Constraints: You can specify either the <b>ClusterIdentifier</b> parameter or the <b>Marker</b> parameter, but not both. </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: false
          description: 'A tag key or keys for which you want to return all matching clusters that are associated with the specified key or keys. For example, suppose that you have clusters that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the clusters that have either or both of these tag keys associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: TagValues
          in: query
          required: false
          description: 'A tag value or values for which you want to return all matching clusters that are associated with the specified tag value or values. For example, suppose that you have clusters that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the clusters that have either or both of these tag values associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagValue
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClusters
      operationId: POST_DescribeClusters
      description: '<p>Returns properties of provisioned clusters including general cluster properties, cluster database properties, maintenance and backup properties, and security and access properties. This operation supports pagination. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all clusters that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all clusters that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, clusters are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClustersMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClustersMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeDataShares:
    get:
      x-aws-operation-name: DescribeDataShares
      operationId: GET_DescribeDataShares
      description: Shows the status of any inbound or outbound datashares available in the specified account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDataSharesResult'
        '480':
          description: InvalidDataShareFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDataShareFault'
      parameters:
        - name: DataShareArn
          in: query
          required: false
          description: The identifier of the datashare to describe details of.
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: 'The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. '
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeDataShares</a> request exceed the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDataShares
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDataShares
      operationId: POST_DescribeDataShares
      description: Shows the status of any inbound or outbound datashares available in the specified account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDataSharesResult'
        '480':
          description: InvalidDataShareFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDataShareFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDataSharesMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDataShares
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeDataSharesForConsumer:
    get:
      x-aws-operation-name: DescribeDataSharesForConsumer
      operationId: GET_DescribeDataSharesForConsumer
      description: Returns a list of datashares where the account identifier being called is a consumer account identifier.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDataSharesForConsumerResult'
        '480':
          description: InvalidNamespaceFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidNamespaceFault'
      parameters:
        - name: ConsumerArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the consumer that returns in the list of datashares.
          schema:
            type: string
            maxLength: 2147483647
        - name: Status
          in: query
          required: false
          description: 'An identifier giving the status of a datashare in the consumer cluster. If this field is specified, Amazon Redshift returns the list of datashares that have the specified status.'
          schema:
            type: string
            enum:
              - ACTIVE
              - AVAILABLE
        - name: MaxRecords
          in: query
          required: false
          description: 'The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. '
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeDataSharesForConsumer</a> request exceed the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDataSharesForConsumer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDataSharesForConsumer
      operationId: POST_DescribeDataSharesForConsumer
      description: Returns a list of datashares where the account identifier being called is a consumer account identifier.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDataSharesForConsumerResult'
        '480':
          description: InvalidNamespaceFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidNamespaceFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDataSharesForConsumerMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDataSharesForConsumer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeDataSharesForProducer:
    get:
      x-aws-operation-name: DescribeDataSharesForProducer
      operationId: GET_DescribeDataSharesForProducer
      description: Returns a list of datashares when the account identifier being called is a producer account identifier.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDataSharesForProducerResult'
        '480':
          description: InvalidNamespaceFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidNamespaceFault'
      parameters:
        - name: ProducerArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the producer that returns in the list of datashares.
          schema:
            type: string
            maxLength: 2147483647
        - name: Status
          in: query
          required: false
          description: 'An identifier giving the status of a datashare in the producer. If this field is specified, Amazon Redshift returns the list of datashares that have the specified status.'
          schema:
            type: string
            enum:
              - ACTIVE
              - AUTHORIZED
              - PENDING_AUTHORIZATION
              - DEAUTHORIZED
              - REJECTED
        - name: MaxRecords
          in: query
          required: false
          description: 'The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. '
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeDataSharesForProducer</a> request exceed the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDataSharesForProducer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDataSharesForProducer
      operationId: POST_DescribeDataSharesForProducer
      description: Returns a list of datashares when the account identifier being called is a producer account identifier.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDataSharesForProducerResult'
        '480':
          description: InvalidNamespaceFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidNamespaceFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDataSharesForProducerMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDataSharesForProducer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeDefaultClusterParameters:
    get:
      x-aws-operation-name: DescribeDefaultClusterParameters
      operationId: GET_DescribeDefaultClusterParameters
      description: '<p>Returns a list of parameter settings for the specified parameter group family.</p> <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDefaultClusterParametersResult'
      parameters:
        - name: ParameterGroupFamily
          in: query
          required: true
          description: The name of the cluster parameter group family.
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeDefaultClusterParameters</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDefaultClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDefaultClusterParameters
      operationId: POST_DescribeDefaultClusterParameters
      description: '<p>Returns a list of parameter settings for the specified parameter group family.</p> <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDefaultClusterParametersResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDefaultClusterParametersMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDefaultClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeEndpointAccess:
    get:
      x-aws-operation-name: DescribeEndpointAccess
      operationId: GET_DescribeEndpointAccess
      description: Describes a Redshift-managed VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAccessList'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: EndpointNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointNotFoundFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: The cluster identifier associated with the described endpoint.
          schema:
            type: string
            maxLength: 2147483647
        - name: ResourceOwner
          in: query
          required: false
          description: The Amazon Web Services account ID of the owner of the cluster.
          schema:
            type: string
            maxLength: 2147483647
        - name: EndpointName
          in: query
          required: false
          description: The name of the endpoint to be described.
          schema:
            type: string
            maxLength: 2147483647
        - name: VpcId
          in: query
          required: false
          description: The virtual private cloud (VPC) identifier with access to the cluster.
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: 'The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a <code>Marker</code> is included in the response so that the remaining results can be retrieved.'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional pagination token provided by a previous <code>DescribeEndpointAccess</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter.'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEndpointAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEndpointAccess
      operationId: POST_DescribeEndpointAccess
      description: Describes a Redshift-managed VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAccessList'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: EndpointNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEndpointAccessMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEndpointAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeEndpointAuthorization:
    get:
      x-aws-operation-name: DescribeEndpointAuthorization
      operationId: GET_DescribeEndpointAuthorization
      description: Describes an endpoint authorization.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAuthorizationList'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: The cluster identifier of the cluster to access.
          schema:
            type: string
            maxLength: 2147483647
        - name: Account
          in: query
          required: false
          description: 'The AAmazon Web Services account ID of either the cluster owner (grantor) or grantee. If <code>Grantee</code> parameter is true, then the <code>Account</code> value is of the grantor.'
          schema:
            type: string
            maxLength: 2147483647
        - name: Grantee
          in: query
          required: false
          description: 'Indicates whether to check authorization from a grantor or grantee point of view. If true, Amazon Redshift returns endpoint authorizations that you''ve been granted. If false (default), checks authorization from a grantor point of view.'
          schema:
            type: boolean
        - name: MaxRecords
          in: query
          required: false
          description: 'The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a <code>Marker</code> is included in the response so that the remaining results can be retrieved.'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional pagination token provided by a previous <code>DescribeEndpointAuthorization</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter.'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEndpointAuthorization
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEndpointAuthorization
      operationId: POST_DescribeEndpointAuthorization
      description: Describes an endpoint authorization.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAuthorizationList'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEndpointAuthorizationMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEndpointAuthorization
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeEventCategories:
    get:
      x-aws-operation-name: DescribeEventCategories
      operationId: GET_DescribeEventCategories
      description: 'Displays a list of event categories for all event source types, or for a specified source type. For a list of the event categories and source types, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-event-notifications.html">Amazon Redshift Event Notifications</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventCategoriesMessage'
      parameters:
        - name: SourceType
          in: query
          required: false
          description: '<p>The source type, such as cluster or parameter group, to which the described event categories apply.</p> <p>Valid values: cluster, cluster-snapshot, cluster-parameter-group, cluster-security-group, and scheduled-action.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventCategories
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEventCategories
      operationId: POST_DescribeEventCategories
      description: 'Displays a list of event categories for all event source types, or for a specified source type. For a list of the event categories and source types, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-event-notifications.html">Amazon Redshift Event Notifications</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventCategoriesMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventCategoriesMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventCategories
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeEventSubscriptions:
    get:
      x-aws-operation-name: DescribeEventSubscriptions
      operationId: GET_DescribeEventSubscriptions
      description: '<p>Lists descriptions of all the Amazon Redshift event notification subscriptions for a customer account. If you specify a subscription name, lists the description for that subscription.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all event notification subscriptions that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all subscriptions that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, subscriptions are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsMessage'
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: false
          description: The name of the Amazon Redshift event notification subscription to be described.
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a DescribeEventSubscriptions request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: false
          description: 'A tag key or keys for which you want to return all matching event notification subscriptions that are associated with the specified key or keys. For example, suppose that you have subscriptions that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the subscriptions that have either or both of these tag keys associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: TagValues
          in: query
          required: false
          description: 'A tag value or values for which you want to return all matching event notification subscriptions that are associated with the specified tag value or values. For example, suppose that you have subscriptions that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the subscriptions that have either or both of these tag values associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagValue
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventSubscriptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEventSubscriptions
      operationId: POST_DescribeEventSubscriptions
      description: '<p>Lists descriptions of all the Amazon Redshift event notification subscriptions for a customer account. If you specify a subscription name, lists the description for that subscription.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all event notification subscriptions that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all subscriptions that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, subscriptions are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsMessage'
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventSubscriptionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventSubscriptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeEvents:
    get:
      x-aws-operation-name: DescribeEvents
      operationId: GET_DescribeEvents
      description: 'Returns events related to clusters, security groups, snapshots, and parameter groups for the past 14 days. Events specific to a particular cluster, security group, snapshot or parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventsMessage'
      parameters:
        - name: SourceIdentifier
          in: query
          required: false
          description: '<p>The identifier of the event source for which events will be returned. If this parameter is not specified, then all sources are included in the response.</p> <p>Constraints:</p> <p>If <i>SourceIdentifier</i> is supplied, <i>SourceType</i> must also be provided.</p> <ul> <li> <p>Specify a cluster identifier when <i>SourceType</i> is <code>cluster</code>.</p> </li> <li> <p>Specify a cluster security group name when <i>SourceType</i> is <code>cluster-security-group</code>.</p> </li> <li> <p>Specify a cluster parameter group name when <i>SourceType</i> is <code>cluster-parameter-group</code>.</p> </li> <li> <p>Specify a cluster snapshot identifier when <i>SourceType</i> is <code>cluster-snapshot</code>.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: SourceType
          in: query
          required: false
          description: '<p>The event source to retrieve events for. If no value is specified, all events are returned.</p> <p>Constraints:</p> <p>If <i>SourceType</i> is supplied, <i>SourceIdentifier</i> must also be provided.</p> <ul> <li> <p>Specify <code>cluster</code> when <i>SourceIdentifier</i> is a cluster identifier.</p> </li> <li> <p>Specify <code>cluster-security-group</code> when <i>SourceIdentifier</i> is a cluster security group name.</p> </li> <li> <p>Specify <code>cluster-parameter-group</code> when <i>SourceIdentifier</i> is a cluster parameter group name.</p> </li> <li> <p>Specify <code>cluster-snapshot</code> when <i>SourceIdentifier</i> is a cluster snapshot identifier.</p> </li> </ul>'
          schema:
            type: string
            enum:
              - cluster
              - cluster-parameter-group
              - cluster-security-group
              - cluster-snapshot
              - scheduled-action
        - name: StartTime
          in: query
          required: false
          description: '<p>The beginning of the time interval to retrieve events for, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: <code>2009-07-08T18:00Z</code> </p>'
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: '<p>The end of the time interval for which to retrieve events, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: <code>2009-07-08T18:00Z</code> </p>'
          schema:
            type: string
            format: date-time
        - name: Duration
          in: query
          required: false
          description: '<p>The number of minutes prior to the time of the request for which to retrieve events. For example, if the request is sent at 18:00 and you specify a duration of 60, then only events which have occurred after 17:00 will be returned.</p> <p>Default: <code>60</code> </p>'
          schema:
            type: integer
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeEvents</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEvents
      operationId: POST_DescribeEvents
      description: 'Returns events related to clusters, security groups, snapshots, and parameter groups for the past 14 days. Events specific to a particular cluster, security group, snapshot or parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventsMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeHsmClientCertificates:
    get:
      x-aws-operation-name: DescribeHsmClientCertificates
      operationId: GET_DescribeHsmClientCertificates
      description: '<p>Returns information about the specified HSM client certificate. If no certificate ID is specified, returns information about all the HSM certificates owned by your Amazon Web Services account.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all HSM client certificates that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all HSM client certificates that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, HSM client certificates are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateMessage'
        '480':
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: HsmClientCertificateIdentifier
          in: query
          required: false
          description: 'The identifier of a specific HSM client certificate for which you want information. If no identifier is specified, information is returned for all HSM client certificates owned by your Amazon Web Services account.'
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeHsmClientCertificates</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: false
          description: 'A tag key or keys for which you want to return all matching HSM client certificates that are associated with the specified key or keys. For example, suppose that you have HSM client certificates that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the HSM client certificates that have either or both of these tag keys associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: TagValues
          in: query
          required: false
          description: 'A tag value or values for which you want to return all matching HSM client certificates that are associated with the specified tag value or values. For example, suppose that you have HSM client certificates that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the HSM client certificates that have either or both of these tag values associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagValue
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeHsmClientCertificates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeHsmClientCertificates
      operationId: POST_DescribeHsmClientCertificates
      description: '<p>Returns information about the specified HSM client certificate. If no certificate ID is specified, returns information about all the HSM certificates owned by your Amazon Web Services account.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all HSM client certificates that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all HSM client certificates that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, HSM client certificates are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateMessage'
        '480':
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeHsmClientCertificatesMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeHsmClientCertificates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeHsmConfigurations:
    get:
      x-aws-operation-name: DescribeHsmConfigurations
      operationId: GET_DescribeHsmConfigurations
      description: '<p>Returns information about the specified Amazon Redshift HSM configuration. If no configuration ID is specified, returns information about all the HSM configurations owned by your Amazon Web Services account.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all HSM connections that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all HSM connections that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, HSM connections are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationMessage'
        '480':
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: HsmConfigurationIdentifier
          in: query
          required: false
          description: 'The identifier of a specific Amazon Redshift HSM configuration to be described. If no identifier is specified, information is returned for all HSM configurations owned by your Amazon Web Services account.'
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeHsmConfigurations</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: false
          description: 'A tag key or keys for which you want to return all matching HSM configurations that are associated with the specified key or keys. For example, suppose that you have HSM configurations that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the HSM configurations that have either or both of these tag keys associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: TagValues
          in: query
          required: false
          description: 'A tag value or values for which you want to return all matching HSM configurations that are associated with the specified tag value or values. For example, suppose that you have HSM configurations that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the HSM configurations that have either or both of these tag values associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagValue
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeHsmConfigurations
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeHsmConfigurations
      operationId: POST_DescribeHsmConfigurations
      description: '<p>Returns information about the specified Amazon Redshift HSM configuration. If no configuration ID is specified, returns information about all the HSM configurations owned by your Amazon Web Services account.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all HSM connections that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all HSM connections that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, HSM connections are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationMessage'
        '480':
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeHsmConfigurationsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeHsmConfigurations
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeLoggingStatus:
    get:
      x-aws-operation-name: DescribeLoggingStatus
      operationId: GET_DescribeLoggingStatus
      description: 'Describes whether information, such as queries and connection attempts, is being logged for the specified Amazon Redshift cluster.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LoggingStatus'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>The identifier of the cluster from which to get the logging status.</p> <p>Example: <code>examplecluster</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoggingStatus
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeLoggingStatus
      operationId: POST_DescribeLoggingStatus
      description: 'Describes whether information, such as queries and connection attempts, is being logged for the specified Amazon Redshift cluster.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LoggingStatus'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeLoggingStatusMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoggingStatus
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeNodeConfigurationOptions:
    get:
      x-aws-operation-name: DescribeNodeConfigurationOptions
      operationId: GET_DescribeNodeConfigurationOptions
      description: 'Returns properties of possible node configurations such as node type, number of nodes, and disk usage for the specified action type.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeConfigurationOptionsMessage'
        '480':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '481':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '482':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '483':
          description: AccessToSnapshotDeniedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToSnapshotDeniedFault'
      parameters:
        - name: ActionType
          in: query
          required: true
          description: 'The action type to evaluate for possible node configurations. Specify "restore-cluster" to get configuration combinations based on an existing snapshot. Specify "recommend-node-config" to get configuration recommendations based on an existing cluster or snapshot. Specify "resize-cluster" to get configuration combinations for elastic resize based on an existing cluster. '
          schema:
            type: string
            enum:
              - restore-cluster
              - recommend-node-config
              - resize-cluster
        - name: ClusterIdentifier
          in: query
          required: false
          description: The identifier of the cluster to evaluate for possible node configurations.
          schema:
            type: string
            maxLength: 2147483647
        - name: SnapshotIdentifier
          in: query
          required: false
          description: The identifier of the snapshot to evaluate for possible node configurations.
          schema:
            type: string
            maxLength: 2147483647
        - name: OwnerAccount
          in: query
          required: false
          description: 'The Amazon Web Services account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.'
          schema:
            type: string
            maxLength: 2147483647
        - name: Filter
          in: query
          required: false
          description: 'A set of name, operator, and value items to filter the results.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NodeConfigurationOptionsFilter'
                - xml:
                    name: NodeConfigurationOptionsFilter
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeNodeConfigurationOptions</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>500</code> </p> <p>Constraints: minimum 100, maximum 500.</p>'
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeNodeConfigurationOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeNodeConfigurationOptions
      operationId: POST_DescribeNodeConfigurationOptions
      description: 'Returns properties of possible node configurations such as node type, number of nodes, and disk usage for the specified action type.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeConfigurationOptionsMessage'
        '480':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '481':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '482':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '483':
          description: AccessToSnapshotDeniedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToSnapshotDeniedFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeNodeConfigurationOptionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeNodeConfigurationOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeOrderableClusterOptions:
    get:
      x-aws-operation-name: DescribeOrderableClusterOptions
      operationId: GET_DescribeOrderableClusterOptions
      description: 'Returns a list of orderable cluster options. Before you create a new cluster you can use this operation to find what options are available, such as the EC2 Availability Zones (AZ) in the specific Amazon Web Services Region that you can specify, and the node types you can request. The node types differ by available storage, memory, CPU and price. With the cost involved you might want to obtain a list of cluster options in the specific region and specify values when creating a cluster. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OrderableClusterOptionsMessage'
      parameters:
        - name: ClusterVersion
          in: query
          required: false
          description: '<p>The version filter value. Specify this parameter to show only the available offerings matching the specified version.</p> <p>Default: All versions.</p> <p>Constraints: Must be one of the version returned from <a>DescribeClusterVersions</a>.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: NodeType
          in: query
          required: false
          description: The node type filter value. Specify this parameter to show only the available offerings matching the specified node type.
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeOrderableClusterOptions</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOrderableClusterOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeOrderableClusterOptions
      operationId: POST_DescribeOrderableClusterOptions
      description: 'Returns a list of orderable cluster options. Before you create a new cluster you can use this operation to find what options are available, such as the EC2 Availability Zones (AZ) in the specific Amazon Web Services Region that you can specify, and the node types you can request. The node types differ by available storage, memory, CPU and price. With the cost involved you might want to obtain a list of cluster options in the specific region and specify values when creating a cluster. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OrderableClusterOptionsMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeOrderableClusterOptionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOrderableClusterOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribePartners:
    get:
      x-aws-operation-name: DescribePartners
      operationId: GET_DescribePartners
      description: Returns information about the partner integrations defined for a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribePartnersOutputMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: UnauthorizedPartnerIntegrationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedPartnerIntegrationFault'
      parameters:
        - name: AccountId
          in: query
          required: true
          description: The Amazon Web Services account ID that owns the cluster.
          schema:
            type: string
            pattern: '^[0-9]+$'
            minLength: 12
            maxLength: 12
        - name: ClusterIdentifier
          in: query
          required: true
          description: The cluster identifier of the cluster whose partner integration is being described.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-]+$'
            maxLength: 63
        - name: DatabaseName
          in: query
          required: false
          description: 'The name of the database whose partner integration is being described. If database name is not specified, then all databases in the cluster are described.'
          schema:
            type: string
            pattern: '^[\p{L}_][\p{L}\p{N}@$#_]+$'
            maxLength: 127
        - name: PartnerName
          in: query
          required: false
          description: 'The name of the partner that is being described. If partner name is not specified, then all partner integrations are described.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-_]+$'
            maxLength: 255
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribePartners
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribePartners
      operationId: POST_DescribePartners
      description: Returns information about the partner integrations defined for a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribePartnersOutputMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: UnauthorizedPartnerIntegrationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedPartnerIntegrationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribePartnersInputMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribePartners
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeReservedNodeOfferings:
    get:
      x-aws-operation-name: DescribeReservedNodeOfferings
      operationId: GET_DescribeReservedNodeOfferings
      description: '<p>Returns a list of the available reserved node offerings by Amazon Redshift with their descriptions including the node type, the fixed and recurring costs of reserving the node and duration the node will be reserved for you. These descriptions help you determine which reserve node offering you want to purchase. You then use the unique offering ID in you call to <a>PurchaseReservedNodeOffering</a> to reserve one or more nodes for your Amazon Redshift cluster. </p> <p> For more information about reserved node offerings, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html">Purchasing Reserved Nodes</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingsMessage'
        '480':
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingNotFoundFault'
        '481':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '482':
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceUnavailableFault'
      parameters:
        - name: ReservedNodeOfferingId
          in: query
          required: false
          description: The unique identifier for the offering.
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeReservedNodeOfferings</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedNodeOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReservedNodeOfferings
      operationId: POST_DescribeReservedNodeOfferings
      description: '<p>Returns a list of the available reserved node offerings by Amazon Redshift with their descriptions including the node type, the fixed and recurring costs of reserving the node and duration the node will be reserved for you. These descriptions help you determine which reserve node offering you want to purchase. You then use the unique offering ID in you call to <a>PurchaseReservedNodeOffering</a> to reserve one or more nodes for your Amazon Redshift cluster. </p> <p> For more information about reserved node offerings, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html">Purchasing Reserved Nodes</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingsMessage'
        '480':
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingNotFoundFault'
        '481':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '482':
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceUnavailableFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReservedNodeOfferingsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedNodeOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeReservedNodes:
    get:
      x-aws-operation-name: DescribeReservedNodes
      operationId: GET_DescribeReservedNodes
      description: Returns the descriptions of the reserved nodes.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodesMessage'
        '480':
          description: ReservedNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeNotFoundFault'
        '481':
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceUnavailableFault'
      parameters:
        - name: ReservedNodeId
          in: query
          required: false
          description: Identifier for the node reservation.
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeReservedNodes</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedNodes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReservedNodes
      operationId: POST_DescribeReservedNodes
      description: Returns the descriptions of the reserved nodes.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodesMessage'
        '480':
          description: ReservedNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeNotFoundFault'
        '481':
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceUnavailableFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReservedNodesMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedNodes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeResize:
    get:
      x-aws-operation-name: DescribeResize
      operationId: GET_DescribeResize
      description: '<p>Returns information about the last resize operation for the specified cluster. If no resize operation has ever been initiated for the specified cluster, a <code>HTTP 404</code> error is returned. If a resize operation was initiated and completed, the status of the resize remains as <code>SUCCEEDED</code> until the next resize. </p> <p>A resize operation can be requested using <a>ModifyCluster</a> and specifying a different number or type of nodes for the cluster. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResizeProgressMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: ResizeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResizeNotFoundFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>The unique identifier of a cluster whose resize progress you are requesting. This parameter is case-sensitive.</p> <p>By default, resize operations for all clusters defined for an Amazon Web Services account are returned.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeResize
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeResize
      operationId: POST_DescribeResize
      description: '<p>Returns information about the last resize operation for the specified cluster. If no resize operation has ever been initiated for the specified cluster, a <code>HTTP 404</code> error is returned. If a resize operation was initiated and completed, the status of the resize remains as <code>SUCCEEDED</code> until the next resize. </p> <p>A resize operation can be requested using <a>ModifyCluster</a> and specifying a different number or type of nodes for the cluster. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResizeProgressMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: ResizeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResizeNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeResizeMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeResize
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeScheduledActions:
    get:
      x-aws-operation-name: DescribeScheduledActions
      operationId: GET_DescribeScheduledActions
      description: 'Describes properties of scheduled actions. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionsMessage'
        '480':
          description: ScheduledActionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionNotFoundFault'
        '481':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      parameters:
        - name: ScheduledActionName
          in: query
          required: false
          description: 'The name of the scheduled action to retrieve. '
          schema:
            type: string
            maxLength: 2147483647
        - name: TargetActionType
          in: query
          required: false
          description: 'The type of the scheduled actions to retrieve. '
          schema:
            type: string
            enum:
              - ResizeCluster
              - PauseCluster
              - ResumeCluster
        - name: StartTime
          in: query
          required: false
          description: The start time in UTC of the scheduled actions to retrieve. Only active scheduled actions that have invocations after this time are retrieved.
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: The end time in UTC of the scheduled action to retrieve. Only active scheduled actions that have invocations before this time are retrieved.
          schema:
            type: string
            format: date-time
        - name: Active
          in: query
          required: false
          description: 'If true, retrieve only active scheduled actions. If false, retrieve only disabled scheduled actions. '
          schema:
            type: boolean
        - name: Filters
          in: query
          required: false
          description: 'List of scheduled action filters. '
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ScheduledActionFilter'
                - xml:
                    name: ScheduledActionFilter
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeScheduledActions</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeScheduledActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeScheduledActions
      operationId: POST_DescribeScheduledActions
      description: 'Describes properties of scheduled actions. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionsMessage'
        '480':
          description: ScheduledActionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionNotFoundFault'
        '481':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeScheduledActionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeScheduledActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeSnapshotCopyGrants:
    get:
      x-aws-operation-name: DescribeSnapshotCopyGrants
      operationId: GET_DescribeSnapshotCopyGrants
      description: '<p>Returns a list of snapshot copy grants owned by the Amazon Web Services account in the destination region.</p> <p> For more information about managing snapshot copy grants, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantMessage'
        '480':
          description: SnapshotCopyGrantNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: SnapshotCopyGrantName
          in: query
          required: false
          description: The name of the snapshot copy grant.
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: '<p>An optional parameter that specifies the starting point to return a set of response records. When the results of a <code>DescribeSnapshotCopyGrant</code> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. </p> <p>Constraints: You can specify either the <b>SnapshotCopyGrantName</b> parameter or the <b>Marker</b> parameter, but not both. </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: false
          description: 'A tag key or keys for which you want to return all matching resources that are associated with the specified key or keys. For example, suppose that you have resources tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with all resources that have either or both of these tag keys associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: TagValues
          in: query
          required: false
          description: 'A tag value or values for which you want to return all matching resources that are associated with the specified value or values. For example, suppose that you have resources tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with all resources that have either or both of these tag values associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagValue
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSnapshotCopyGrants
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSnapshotCopyGrants
      operationId: POST_DescribeSnapshotCopyGrants
      description: '<p>Returns a list of snapshot copy grants owned by the Amazon Web Services account in the destination region.</p> <p> For more information about managing snapshot copy grants, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantMessage'
        '480':
          description: SnapshotCopyGrantNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSnapshotCopyGrantsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSnapshotCopyGrants
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeSnapshotSchedules:
    get:
      x-aws-operation-name: DescribeSnapshotSchedules
      operationId: GET_DescribeSnapshotSchedules
      description: 'Returns a list of snapshot schedules. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotSchedulesOutputMessage'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: The unique identifier for the cluster whose snapshot schedules you want to view.
          schema:
            type: string
            maxLength: 2147483647
        - name: ScheduleIdentifier
          in: query
          required: false
          description: A unique identifier for a snapshot schedule.
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: false
          description: The key value for a snapshot schedule tag.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: TagValues
          in: query
          required: false
          description: The value corresponding to the key of the snapshot schedule tag.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagValue
        - name: Marker
          in: query
          required: false
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>marker</code> parameter and retrying the command. If the <code>marker</code> field is empty, all response records have been retrieved for the request.'
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: 'The maximum number or response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned <code>marker</code> value.'
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSnapshotSchedules
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSnapshotSchedules
      operationId: POST_DescribeSnapshotSchedules
      description: 'Returns a list of snapshot schedules. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotSchedulesOutputMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSnapshotSchedulesMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSnapshotSchedules
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeStorage:
    get:
      x-aws-operation-name: DescribeStorage
      operationId: GET_DescribeStorage
      description: Returns account level backups storage size and provisional storage.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerStorageMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeStorage
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeStorage
      operationId: POST_DescribeStorage
      description: Returns account level backups storage size and provisional storage.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerStorageMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeStorage
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeTableRestoreStatus:
    get:
      x-aws-operation-name: DescribeTableRestoreStatus
      operationId: GET_DescribeTableRestoreStatus
      description: 'Lists the status of one or more table restore requests made using the <a>RestoreTableFromClusterSnapshot</a> API action. If you don''t specify a value for the <code>TableRestoreRequestId</code> parameter, then <code>DescribeTableRestoreStatus</code> returns the status of all table restore requests ordered by the date and time of the request in ascending order. Otherwise <code>DescribeTableRestoreStatus</code> returns the status of the table specified by <code>TableRestoreRequestId</code>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TableRestoreStatusMessage'
        '480':
          description: TableRestoreNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TableRestoreNotFoundFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: The Amazon Redshift cluster that the table is being restored to.
          schema:
            type: string
            maxLength: 2147483647
        - name: TableRestoreRequestId
          in: query
          required: false
          description: 'The identifier of the table restore request to return status for. If you don''t specify a <code>TableRestoreRequestId</code> value, then <code>DescribeTableRestoreStatus</code> returns the status of all in-progress table restore requests.'
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: 'The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional pagination token provided by a previous <code>DescribeTableRestoreStatus</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter.'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTableRestoreStatus
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTableRestoreStatus
      operationId: POST_DescribeTableRestoreStatus
      description: 'Lists the status of one or more table restore requests made using the <a>RestoreTableFromClusterSnapshot</a> API action. If you don''t specify a value for the <code>TableRestoreRequestId</code> parameter, then <code>DescribeTableRestoreStatus</code> returns the status of all table restore requests ordered by the date and time of the request in ascending order. Otherwise <code>DescribeTableRestoreStatus</code> returns the status of the table specified by <code>TableRestoreRequestId</code>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TableRestoreStatusMessage'
        '480':
          description: TableRestoreNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TableRestoreNotFoundFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTableRestoreStatusMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTableRestoreStatus
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeTags:
    get:
      x-aws-operation-name: DescribeTags
      operationId: GET_DescribeTags
      description: '<p>Returns a list of tags. You can return tags from a specific resource by specifying an ARN, or you can return all tags for a given type of resource, such as clusters, snapshots, and so on.</p> <p>The following are limitations for <code>DescribeTags</code>: </p> <ul> <li> <p>You cannot specify an ARN and a resource-type value together in the same request.</p> </li> <li> <p>You cannot use the <code>MaxRecords</code> and <code>Marker</code> parameters together with the ARN parameter.</p> </li> <li> <p>The <code>MaxRecords</code> parameter can be a range from 10 to 50 results to return in a request.</p> </li> </ul> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all resources that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all resources that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, resources are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TaggedResourceListMessage'
        '480':
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: ResourceName
          in: query
          required: false
          description: 'The Amazon Resource Name (ARN) for which you want to describe the tag or tags. For example, <code>arn:aws:redshift:us-east-2:123456789:cluster:t1</code>. '
          schema:
            type: string
            maxLength: 2147483647
        - name: ResourceType
          in: query
          required: false
          description: '<p>The type of resource with which you want to view tags. Valid resource types are: </p> <ul> <li> <p>Cluster</p> </li> <li> <p>CIDR/IP</p> </li> <li> <p>EC2 security group</p> </li> <li> <p>Snapshot</p> </li> <li> <p>Cluster security group</p> </li> <li> <p>Subnet group</p> </li> <li> <p>HSM connection</p> </li> <li> <p>HSM certificate</p> </li> <li> <p>Parameter group</p> </li> <li> <p>Snapshot copy grant</p> </li> </ul> <p>For more information about Amazon Redshift resource types and constructing ARNs, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-overview.html#redshift-iam-access-control-specify-actions">Specifying Policy Elements: Actions, Effects, Resources, and Principals</a> in the Amazon Redshift Cluster Management Guide. </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: 'The maximum number or response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned <code>marker</code> value. '
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>marker</code> parameter and retrying the command. If the <code>marker</code> field is empty, all response records have been retrieved for the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: false
          description: 'A tag key or keys for which you want to return all matching resources that are associated with the specified key or keys. For example, suppose that you have resources tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with all resources that have either or both of these tag keys associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: TagValues
          in: query
          required: false
          description: 'A tag value or values for which you want to return all matching resources that are associated with the specified value or values. For example, suppose that you have resources tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with all resources that have either or both of these tag values associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagValue
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTags
      operationId: POST_DescribeTags
      description: '<p>Returns a list of tags. You can return tags from a specific resource by specifying an ARN, or you can return all tags for a given type of resource, such as clusters, snapshots, and so on.</p> <p>The following are limitations for <code>DescribeTags</code>: </p> <ul> <li> <p>You cannot specify an ARN and a resource-type value together in the same request.</p> </li> <li> <p>You cannot use the <code>MaxRecords</code> and <code>Marker</code> parameters together with the ARN parameter.</p> </li> <li> <p>The <code>MaxRecords</code> parameter can be a range from 10 to 50 results to return in a request.</p> </li> </ul> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all resources that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all resources that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, resources are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TaggedResourceListMessage'
        '480':
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTagsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DescribeUsageLimits:
    get:
      x-aws-operation-name: DescribeUsageLimits
      operationId: GET_DescribeUsageLimits
      description: '<p>Shows usage limits on a cluster. Results are filtered based on the combination of input usage limit identifier, cluster identifier, and feature type parameters:</p> <ul> <li> <p>If usage limit identifier, cluster identifier, and feature type are not provided, then all usage limit objects for the current account in the current region are returned.</p> </li> <li> <p>If usage limit identifier is provided, then the corresponding usage limit object is returned.</p> </li> <li> <p>If cluster identifier is provided, then all usage limit objects for the specified cluster are returned.</p> </li> <li> <p>If cluster identifier and feature type are provided, then all usage limit objects for the combination of cluster and feature are returned.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UsageLimitList'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      parameters:
        - name: UsageLimitId
          in: query
          required: false
          description: The identifier of the usage limit to describe.
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterIdentifier
          in: query
          required: false
          description: The identifier of the cluster for which you want to describe usage limits.
          schema:
            type: string
            maxLength: 2147483647
        - name: FeatureType
          in: query
          required: false
          description: The feature type for which you want to describe usage limits.
          schema:
            type: string
            enum:
              - spectrum
              - concurrency-scaling
        - name: MaxRecords
          in: query
          required: false
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeUsageLimits</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
          schema:
            type: string
            maxLength: 2147483647
        - name: TagKeys
          in: query
          required: false
          description: 'A tag key or keys for which you want to return all matching usage limit objects that are associated with the specified key or keys. For example, suppose that you have parameter groups that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the usage limit objects have either or both of these tag keys associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagKey
        - name: TagValues
          in: query
          required: false
          description: 'A tag value or values for which you want to return all matching usage limit objects that are associated with the specified tag value or values. For example, suppose that you have parameter groups that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the usage limit objects that have either or both of these tag values associated with them.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: TagValue
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeUsageLimits
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeUsageLimits
      operationId: POST_DescribeUsageLimits
      description: '<p>Shows usage limits on a cluster. Results are filtered based on the combination of input usage limit identifier, cluster identifier, and feature type parameters:</p> <ul> <li> <p>If usage limit identifier, cluster identifier, and feature type are not provided, then all usage limit objects for the current account in the current region are returned.</p> </li> <li> <p>If usage limit identifier is provided, then the corresponding usage limit object is returned.</p> </li> <li> <p>If cluster identifier is provided, then all usage limit objects for the specified cluster are returned.</p> </li> <li> <p>If cluster identifier and feature type are provided, then all usage limit objects for the combination of cluster and feature are returned.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UsageLimitList'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeUsageLimitsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeUsageLimits
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DisableLogging:
    get:
      x-aws-operation-name: DisableLogging
      operationId: GET_DisableLogging
      description: 'Stops logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LoggingStatus'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>The identifier of the cluster on which logging is to be stopped.</p> <p>Example: <code>examplecluster</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisableLogging
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableLogging
      operationId: POST_DisableLogging
      description: 'Stops logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LoggingStatus'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableLoggingMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisableLogging
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DisableSnapshotCopy:
    get:
      x-aws-operation-name: DisableSnapshotCopy
      operationId: GET_DisableSnapshotCopy
      description: '<p>Disables the automatic copying of snapshots from one region to another region for a specified cluster.</p> <p>If your cluster and its snapshots are encrypted using a customer master key (CMK) from Key Management Service, use <a>DeleteSnapshotCopyGrant</a> to delete the grant that grants Amazon Redshift permission to the CMK in the destination region. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableSnapshotCopyResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: SnapshotCopyAlreadyDisabledFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyAlreadyDisabledFault'
        '482':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '483':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>The unique identifier of the source cluster that you want to disable copying of snapshots to a destination region.</p> <p>Constraints: Must be the valid name of an existing cluster that has cross-region snapshot copy enabled.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisableSnapshotCopy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableSnapshotCopy
      operationId: POST_DisableSnapshotCopy
      description: '<p>Disables the automatic copying of snapshots from one region to another region for a specified cluster.</p> <p>If your cluster and its snapshots are encrypted using a customer master key (CMK) from Key Management Service, use <a>DeleteSnapshotCopyGrant</a> to delete the grant that grants Amazon Redshift permission to the CMK in the destination region. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableSnapshotCopyResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: SnapshotCopyAlreadyDisabledFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyAlreadyDisabledFault'
        '482':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '483':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableSnapshotCopyMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisableSnapshotCopy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=DisassociateDataShareConsumer:
    get:
      x-aws-operation-name: DisassociateDataShareConsumer
      operationId: GET_DisassociateDataShareConsumer
      description: 'From a consumer account, remove association for the specified datashare. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DataShare'
        '480':
          description: InvalidDataShareFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDataShareFault'
        '481':
          description: InvalidNamespaceFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidNamespaceFault'
      parameters:
        - name: DataShareArn
          in: query
          required: true
          description: 'The Amazon Resource Name (ARN) of the datashare to remove association for. '
          schema:
            type: string
            maxLength: 2147483647
        - name: DisassociateEntireAccount
          in: query
          required: false
          description: A value that specifies whether association for the datashare is removed from the entire account.
          schema:
            type: boolean
        - name: ConsumerArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the consumer that association for the datashare is removed from.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisassociateDataShareConsumer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateDataShareConsumer
      operationId: POST_DisassociateDataShareConsumer
      description: 'From a consumer account, remove association for the specified datashare. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DataShare'
        '480':
          description: InvalidDataShareFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDataShareFault'
        '481':
          description: InvalidNamespaceFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidNamespaceFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateDataShareConsumerMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisassociateDataShareConsumer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=EnableLogging:
    get:
      x-aws-operation-name: EnableLogging
      operationId: GET_EnableLogging
      description: 'Starts logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LoggingStatus'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: BucketNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BucketNotFoundFault'
        '482':
          description: InsufficientS3BucketPolicyFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientS3BucketPolicyFault'
        '483':
          description: InvalidS3KeyPrefixFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidS3KeyPrefixFault'
        '484':
          description: InvalidS3BucketNameFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidS3BucketNameFault'
        '485':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>The identifier of the cluster on which logging is to be started.</p> <p>Example: <code>examplecluster</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: BucketName
          in: query
          required: true
          description: '<p>The name of an existing S3 bucket where the log files are to be stored.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the same region as the cluster</p> </li> <li> <p>The cluster must have read bucket and put object permissions</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: S3KeyPrefix
          in: query
          required: false
          description: '<p>The prefix applied to the log file names.</p> <p>Constraints:</p> <ul> <li> <p>Cannot exceed 512 characters</p> </li> <li> <p>Cannot contain spaces( ), double quotes ("), single quotes (''), a backslash (\), or control characters. The hexadecimal codes for invalid characters are: </p> <ul> <li> <p>x00 to x20</p> </li> <li> <p>x22</p> </li> <li> <p>x27</p> </li> <li> <p>x5c</p> </li> <li> <p>x7f or larger</p> </li> </ul> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnableLogging
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableLogging
      operationId: POST_EnableLogging
      description: 'Starts logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LoggingStatus'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: BucketNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BucketNotFoundFault'
        '482':
          description: InsufficientS3BucketPolicyFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientS3BucketPolicyFault'
        '483':
          description: InvalidS3KeyPrefixFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidS3KeyPrefixFault'
        '484':
          description: InvalidS3BucketNameFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidS3BucketNameFault'
        '485':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableLoggingMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnableLogging
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=EnableSnapshotCopy:
    get:
      x-aws-operation-name: EnableSnapshotCopy
      operationId: GET_EnableSnapshotCopy
      description: Enables the automatic copy of snapshots from one region to another region for a specified cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableSnapshotCopyResult'
        '480':
          description: IncompatibleOrderableOptions
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IncompatibleOrderableOptions'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '483':
          description: CopyToRegionDisabledFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyToRegionDisabledFault'
        '484':
          description: SnapshotCopyAlreadyEnabledFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyAlreadyEnabledFault'
        '485':
          description: UnknownSnapshotCopyRegionFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnknownSnapshotCopyRegionFault'
        '486':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '487':
          description: SnapshotCopyGrantNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantNotFoundFault'
        '488':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '489':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
        '490':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>The unique identifier of the source cluster to copy snapshots from.</p> <p>Constraints: Must be the valid name of an existing cluster that does not already have cross-region snapshot copy enabled.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: DestinationRegion
          in: query
          required: true
          description: '<p>The destination Amazon Web Services Region that you want to copy snapshots to.</p> <p>Constraints: Must be the name of a valid Amazon Web Services Region. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region">Regions and Endpoints</a> in the Amazon Web Services General Reference. </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: RetentionPeriod
          in: query
          required: false
          description: '<p>The number of days to retain automated snapshots in the destination region after they are copied from the source region.</p> <p>Default: 7.</p> <p>Constraints: Must be at least 1 and no more than 35.</p>'
          schema:
            type: integer
        - name: SnapshotCopyGrantName
          in: query
          required: false
          description: The name of the snapshot copy grant to use when snapshots of an Amazon Web Services KMS-encrypted cluster are copied to the destination region.
          schema:
            type: string
            maxLength: 2147483647
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: '<p>The number of days to retain newly copied snapshots in the destination Amazon Web Services Region after they are copied from the source Amazon Web Services Region. If the value is -1, the manual snapshot is retained indefinitely. </p> <p>The value must be either -1 or an integer between 1 and 3,653.</p>'
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnableSnapshotCopy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableSnapshotCopy
      operationId: POST_EnableSnapshotCopy
      description: Enables the automatic copy of snapshots from one region to another region for a specified cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableSnapshotCopyResult'
        '480':
          description: IncompatibleOrderableOptions
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IncompatibleOrderableOptions'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '483':
          description: CopyToRegionDisabledFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyToRegionDisabledFault'
        '484':
          description: SnapshotCopyAlreadyEnabledFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyAlreadyEnabledFault'
        '485':
          description: UnknownSnapshotCopyRegionFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnknownSnapshotCopyRegionFault'
        '486':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '487':
          description: SnapshotCopyGrantNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantNotFoundFault'
        '488':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '489':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
        '490':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableSnapshotCopyMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnableSnapshotCopy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=GetClusterCredentials:
    get:
      x-aws-operation-name: GetClusterCredentials
      operationId: GET_GetClusterCredentials
      description: '<p>Returns a database user name and temporary password with temporary authorization to log on to an Amazon Redshift database. The action returns the database user name prefixed with <code>IAM:</code> if <code>AutoCreate</code> is <code>False</code> or <code>IAMA:</code> if <code>AutoCreate</code> is <code>True</code>. You can optionally specify one or more database user groups that the user will join at log on. By default, the temporary credentials expire in 900 seconds. You can optionally specify a duration between 900 seconds (15 minutes) and 3600 seconds (60 minutes). For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/generating-user-credentials.html">Using IAM Authentication to Generate Database User Credentials</a> in the Amazon Redshift Cluster Management Guide.</p> <p>The Identity and Access Management (IAM) user or role that runs GetClusterCredentials must have an IAM policy attached that allows access to all necessary actions and resources. For more information about permissions, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html#redshift-policy-resources.getclustercredentials-resources">Resource Policies for GetClusterCredentials</a> in the Amazon Redshift Cluster Management Guide.</p> <p>If the <code>DbGroups</code> parameter is specified, the IAM policy must allow the <code>redshift:JoinGroup</code> action with access to the listed <code>dbgroups</code>. </p> <p>In addition, if the <code>AutoCreate</code> parameter is set to <code>True</code>, then the policy must include the <code>redshift:CreateClusterUser</code> privilege.</p> <p>If the <code>DbName</code> parameter is specified, the IAM policy must allow access to the resource <code>dbname</code> for the specified database name. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      parameters:
        - name: DbUser
          in: query
          required: true
          description: '<p>The name of a database user. If a user name matching <code>DbUser</code> exists in the database, the temporary user credentials have the same permissions as the existing user. If <code>DbUser</code> doesn''t exist in the database and <code>Autocreate</code> is <code>True</code>, a new user is created using the value for <code>DbUser</code> with PUBLIC permissions. If a database user matching the value for <code>DbUser</code> doesn''t exist and <code>Autocreate</code> is <code>False</code>, then the command succeeds but the connection attempt will fail because the user doesn''t exist in the database.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_USER.html">CREATE USER</a> in the Amazon Redshift Database Developer Guide. </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 64 alphanumeric characters or hyphens. The user name can''t be <code>PUBLIC</code>.</p> </li> <li> <p>Must contain only lowercase letters, numbers, underscore, plus sign, period (dot), at symbol (@), or hyphen.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Must not contain a colon ( : ) or slash ( / ). </p> </li> <li> <p>Cannot be a reserved word. A list of reserved words can be found in <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved Words</a> in the Amazon Redshift Database Developer Guide.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: DbName
          in: query
          required: false
          description: '<p>The name of a database that <code>DbUser</code> is authorized to log on to. If <code>DbName</code> is not specified, <code>DbUser</code> can log on to any existing database.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 64 alphanumeric characters or hyphens</p> </li> <li> <p>Must contain only lowercase letters, numbers, underscore, plus sign, period (dot), at symbol (@), or hyphen.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Must not contain a colon ( : ) or slash ( / ). </p> </li> <li> <p>Cannot be a reserved word. A list of reserved words can be found in <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved Words</a> in the Amazon Redshift Database Developer Guide.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterIdentifier
          in: query
          required: true
          description: The unique identifier of the cluster that contains the database for which your are requesting credentials. This parameter is case sensitive.
          schema:
            type: string
            maxLength: 2147483647
        - name: DurationSeconds
          in: query
          required: false
          description: '<p>The number of seconds until the returned temporary password expires.</p> <p>Constraint: minimum 900, maximum 3600.</p> <p>Default: 900</p>'
          schema:
            type: integer
        - name: AutoCreate
          in: query
          required: false
          description: Create a database user with the name specified for the user named in <code>DbUser</code> if one does not exist.
          schema:
            type: boolean
        - name: DbGroups
          in: query
          required: false
          description: '<p>A list of the names of existing database groups that the user named in <code>DbUser</code> will join for the current session, in addition to any group memberships for an existing user. If not specified, a new user is added only to PUBLIC.</p> <p>Database group name constraints</p> <ul> <li> <p>Must be 1 to 64 alphanumeric characters or hyphens</p> </li> <li> <p>Must contain only lowercase letters, numbers, underscore, plus sign, period (dot), at symbol (@), or hyphen.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Must not contain a colon ( : ) or slash ( / ). </p> </li> <li> <p>Cannot be a reserved word. A list of reserved words can be found in <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved Words</a> in the Amazon Redshift Database Developer Guide.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: DbGroup
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetClusterCredentials
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetClusterCredentials
      operationId: POST_GetClusterCredentials
      description: '<p>Returns a database user name and temporary password with temporary authorization to log on to an Amazon Redshift database. The action returns the database user name prefixed with <code>IAM:</code> if <code>AutoCreate</code> is <code>False</code> or <code>IAMA:</code> if <code>AutoCreate</code> is <code>True</code>. You can optionally specify one or more database user groups that the user will join at log on. By default, the temporary credentials expire in 900 seconds. You can optionally specify a duration between 900 seconds (15 minutes) and 3600 seconds (60 minutes). For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/generating-user-credentials.html">Using IAM Authentication to Generate Database User Credentials</a> in the Amazon Redshift Cluster Management Guide.</p> <p>The Identity and Access Management (IAM) user or role that runs GetClusterCredentials must have an IAM policy attached that allows access to all necessary actions and resources. For more information about permissions, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html#redshift-policy-resources.getclustercredentials-resources">Resource Policies for GetClusterCredentials</a> in the Amazon Redshift Cluster Management Guide.</p> <p>If the <code>DbGroups</code> parameter is specified, the IAM policy must allow the <code>redshift:JoinGroup</code> action with access to the listed <code>dbgroups</code>. </p> <p>In addition, if the <code>AutoCreate</code> parameter is set to <code>True</code>, then the policy must include the <code>redshift:CreateClusterUser</code> privilege.</p> <p>If the <code>DbName</code> parameter is specified, the IAM policy must allow access to the resource <code>dbname</code> for the specified database name. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetClusterCredentialsMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetClusterCredentials
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=GetReservedNodeExchangeOfferings:
    get:
      x-aws-operation-name: GetReservedNodeExchangeOfferings
      operationId: GET_GetReservedNodeExchangeOfferings
      description: 'Returns an array of DC2 ReservedNodeOfferings that matches the payment type, term, and usage price of the given DC1 reserved node.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetReservedNodeExchangeOfferingsOutputMessage'
        '480':
          description: ReservedNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeNotFoundFault'
        '481':
          description: InvalidReservedNodeStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReservedNodeStateFault'
        '482':
          description: ReservedNodeAlreadyMigratedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeAlreadyMigratedFault'
        '483':
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingNotFoundFault'
        '484':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '485':
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceUnavailableFault'
      parameters:
        - name: ReservedNodeId
          in: query
          required: true
          description: A string representing the node identifier for the DC1 Reserved Node to be exchanged.
          schema:
            type: string
            maxLength: 2147483647
        - name: MaxRecords
          in: query
          required: false
          description: An integer setting the maximum number of ReservedNodeOfferings to retrieve.
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: A value that indicates the starting point for the next set of ReservedNodeOfferings.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetReservedNodeExchangeOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetReservedNodeExchangeOfferings
      operationId: POST_GetReservedNodeExchangeOfferings
      description: 'Returns an array of DC2 ReservedNodeOfferings that matches the payment type, term, and usage price of the given DC1 reserved node.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetReservedNodeExchangeOfferingsOutputMessage'
        '480':
          description: ReservedNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeNotFoundFault'
        '481':
          description: InvalidReservedNodeStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReservedNodeStateFault'
        '482':
          description: ReservedNodeAlreadyMigratedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeAlreadyMigratedFault'
        '483':
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingNotFoundFault'
        '484':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '485':
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceUnavailableFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetReservedNodeExchangeOfferingsInputMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetReservedNodeExchangeOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyAquaConfiguration:
    get:
      x-aws-operation-name: ModifyAquaConfiguration
      operationId: GET_ModifyAquaConfiguration
      description: 'Modifies whether a cluster can use AQUA (Advanced Query Accelerator). '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyAquaOutputMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The identifier of the cluster to be modified.
          schema:
            type: string
            maxLength: 2147483647
        - name: AquaConfigurationStatus
          in: query
          required: false
          description: <p>The new value of AQUA configuration status. Possible values include the following.</p> <ul> <li> <p>enabled - Use AQUA if it is available for the current Amazon Web Services Region and Amazon Redshift node type.</p> </li> <li> <p>disabled - Don't use AQUA. </p> </li> <li> <p>auto - Amazon Redshift determines whether to use AQUA.</p> </li> </ul>
          schema:
            type: string
            enum:
              - enabled
              - disabled
              - auto
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyAquaConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyAquaConfiguration
      operationId: POST_ModifyAquaConfiguration
      description: 'Modifies whether a cluster can use AQUA (Advanced Query Accelerator). '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyAquaOutputMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyAquaInputMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyAquaConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyAuthenticationProfile:
    get:
      x-aws-operation-name: ModifyAuthenticationProfile
      operationId: GET_ModifyAuthenticationProfile
      description: Modifies an authentication profile.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyAuthenticationProfileResult'
        '480':
          description: AuthenticationProfileNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationProfileNotFoundFault'
        '481':
          description: AuthenticationProfileQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationProfileQuotaExceededFault'
        '482':
          description: InvalidAuthenticationProfileRequestFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationProfileRequestFault'
      parameters:
        - name: AuthenticationProfileName
          in: query
          required: true
          description: The name of the authentication profile to replace.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-]+$'
            maxLength: 63
        - name: AuthenticationProfileContent
          in: query
          required: true
          description: The new content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyAuthenticationProfile
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyAuthenticationProfile
      operationId: POST_ModifyAuthenticationProfile
      description: Modifies an authentication profile.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyAuthenticationProfileResult'
        '480':
          description: AuthenticationProfileNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationProfileNotFoundFault'
        '481':
          description: AuthenticationProfileQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationProfileQuotaExceededFault'
        '482':
          description: InvalidAuthenticationProfileRequestFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationProfileRequestFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyAuthenticationProfileMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyAuthenticationProfile
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyCluster:
    get:
      x-aws-operation-name: ModifyCluster
      operationId: GET_ModifyCluster
      description: '<p>Modifies the settings for a cluster.</p> <p>You can also change node type and the number of nodes to scale up or down the cluster. When resizing a cluster, you must specify both the number of nodes and the node type even if one of the parameters does not change.</p> <p>You can add another security or parameter group, or change the admin user password. Resetting a cluster password or modifying the security groups associated with a cluster do not need a reboot. However, modifying a parameter group requires a reboot for parameters to take effect. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClusterResult'
        '480':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '481':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '482':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '483':
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesQuotaExceededFault'
        '484':
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesPerClusterLimitExceededFault'
        '485':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '486':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '487':
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '488':
          description: UnsupportedOptionFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOptionFault'
        '489':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '490':
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
        '491':
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
        '492':
          description: ClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterAlreadyExistsFault'
        '493':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '494':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
        '495':
          description: InvalidElasticIpFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidElasticIpFault'
        '496':
          description: TableLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TableLimitExceededFault'
        '497':
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterTrackFault'
        '498':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>The unique identifier of the cluster to be modified.</p> <p>Example: <code>examplecluster</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterType
          in: query
          required: false
          description: '<p>The new cluster type.</p> <p>When you submit your cluster resize request, your existing cluster goes into a read-only mode. After Amazon Redshift provisions a new cluster based on your resize requirements, there will be outage for a period while the old cluster is deleted and your connection is switched to the new cluster. You can use <a>DescribeResize</a> to track the progress of the resize request. </p> <p>Valid Values: <code> multi-node | single-node </code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: NodeType
          in: query
          required: false
          description: '<p>The new node type of the cluster. If you specify a new node type, you must also specify the number of nodes parameter.</p> <p> For more information about resizing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/rs-resize-tutorial.html">Resizing Clusters in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>Valid Values: <code>ds2.xlarge</code> | <code>ds2.8xlarge</code> | <code>dc1.large</code> | <code>dc1.8xlarge</code> | <code>dc2.large</code> | <code>dc2.8xlarge</code> | <code>ra3.xlplus</code> | <code>ra3.4xlarge</code> | <code>ra3.16xlarge</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: NumberOfNodes
          in: query
          required: false
          description: '<p>The new number of nodes of the cluster. If you specify a new number of nodes, you must also specify the node type parameter.</p> <p> For more information about resizing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/rs-resize-tutorial.html">Resizing Clusters in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>Valid Values: Integer greater than <code>0</code>.</p>'
          schema:
            type: integer
        - name: ClusterSecurityGroups
          in: query
          required: false
          description: '<p>A list of cluster security groups to be authorized on this cluster. This change is asynchronously applied as soon as possible.</p> <p>Security groups currently associated with the cluster, and not in the list of groups to apply, will be revoked from the cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: ClusterSecurityGroupName
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: A list of virtual private cloud (VPC) security groups to be associated with the cluster. This change is asynchronously applied as soon as possible.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: VpcSecurityGroupId
        - name: MasterUserPassword
          in: query
          required: false
          description: '<p>The new password for the cluster admin user. This change is asynchronously applied as soon as possible. Between the time of the request and the completion of the request, the <code>MasterUserPassword</code> element exists in the <code>PendingModifiedValues</code> element of the operation response. </p> <note> <p>Operations never return the password, so this operation provides a way to regain access to the admin user account for a cluster if the password is lost.</p> </note> <p>Default: Uses existing setting.</p> <p>Constraints:</p> <ul> <li> <p>Must be between 8 and 64 characters in length.</p> </li> <li> <p>Must contain at least one uppercase letter.</p> </li> <li> <p>Must contain at least one lowercase letter.</p> </li> <li> <p>Must contain one number.</p> </li> <li> <p>Can be any printable ASCII character (ASCII code 33 to 126) except '' (single quote), " (double quote), \, /, @, or space.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterParameterGroupName
          in: query
          required: false
          description: '<p>The name of the cluster parameter group to apply to this cluster. This change is applied only after the cluster is rebooted. To reboot a cluster use <a>RebootCluster</a>. </p> <p>Default: Uses existing setting.</p> <p>Constraints: The cluster parameter group must be in the same parameter group family that matches the cluster version.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: AutomatedSnapshotRetentionPeriod
          in: query
          required: false
          description: '<p>The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with <a>CreateClusterSnapshot</a>. </p> <p>If you decrease the automated snapshot retention period from its current value, existing automated snapshots that fall outside of the new retention period will be immediately deleted.</p> <p>You can''t disable automated snapshots for RA3 node types. Set the automated retention period from 1-35 days.</p> <p>Default: Uses existing setting.</p> <p>Constraints: Must be a value from 0 to 35.</p>'
          schema:
            type: integer
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: '<p>The default for number of days that a newly created manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely. This value doesn''t retroactively change the retention periods of existing manual snapshots.</p> <p>The value must be either -1 or an integer between 1 and 3,653.</p> <p>The default value is -1.</p>'
          schema:
            type: integer
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: '<p>The weekly time range (in UTC) during which system maintenance can occur, if necessary. If system maintenance is necessary during the window, it may result in an outage.</p> <p>This maintenance window change is made immediately. If the new maintenance window indicates the current time, there must be at least 120 minutes between the current time and end of the window in order to ensure that pending changes are applied.</p> <p>Default: Uses existing setting.</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi, for example <code>wed:07:30-wed:08:00</code>.</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterVersion
          in: query
          required: false
          description: '<p>The new version number of the Amazon Redshift engine to upgrade to.</p> <p>For major version upgrades, if a non-default cluster parameter group is currently in use, a new cluster parameter group in the cluster parameter group family for the new version must be specified. The new cluster parameter group can be the default for that cluster parameter group family. For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>Example: <code>1.0</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: AllowVersionUpgrade
          in: query
          required: false
          description: '<p>If <code>true</code>, major version upgrades will be applied automatically to the cluster during the maintenance window. </p> <p>Default: <code>false</code> </p>'
          schema:
            type: boolean
        - name: HsmClientCertificateIdentifier
          in: query
          required: false
          description: Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.
          schema:
            type: string
            maxLength: 2147483647
        - name: HsmConfigurationIdentifier
          in: query
          required: false
          description: Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
          schema:
            type: string
            maxLength: 2147483647
        - name: NewClusterIdentifier
          in: query
          required: false
          description: '<p>The new identifier for the cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>Alphabetic characters must be lowercase.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique for all clusters within an Amazon Web Services account.</p> </li> </ul> <p>Example: <code>examplecluster</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: PubliclyAccessible
          in: query
          required: false
          description: 'If <code>true</code>, the cluster can be accessed from a public network. Only clusters in VPCs can be set to be publicly available.'
          schema:
            type: boolean
        - name: ElasticIp
          in: query
          required: false
          description: '<p>The Elastic IP (EIP) address for the cluster.</p> <p>Constraints: The cluster must be provisioned in EC2-VPC and publicly-accessible through an Internet gateway. For more information about provisioning clusters in EC2-VPC, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms">Supported Platforms to Launch Your Cluster</a> in the Amazon Redshift Cluster Management Guide.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: EnhancedVpcRouting
          in: query
          required: false
          description: '<p>An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</p> <p>If this option is <code>true</code>, enhanced VPC routing is enabled. </p> <p>Default: false</p>'
          schema:
            type: boolean
        - name: MaintenanceTrackName
          in: query
          required: false
          description: 'The name for the maintenance track that you want to assign for the cluster. This name change is asynchronous. The new track name stays in the <code>PendingModifiedValues</code> for the cluster until the next maintenance window. When the maintenance track changes, the cluster is switched to the latest cluster release available for the maintenance track. At this point, the maintenance track name is applied.'
          schema:
            type: string
            maxLength: 2147483647
        - name: Encrypted
          in: query
          required: false
          description: '<p>Indicates whether the cluster is encrypted. If the value is encrypted (true) and you provide a value for the <code>KmsKeyId</code> parameter, we encrypt the cluster with the provided <code>KmsKeyId</code>. If you don''t provide a <code>KmsKeyId</code>, we encrypt with the default key. </p> <p>If the value is not encrypted (false), then the cluster is decrypted. </p>'
          schema:
            type: boolean
        - name: KmsKeyId
          in: query
          required: false
          description: The Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster.
          schema:
            type: string
            maxLength: 2147483647
        - name: AvailabilityZoneRelocation
          in: query
          required: false
          description: The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster modification is complete.
          schema:
            type: boolean
        - name: AvailabilityZone
          in: query
          required: false
          description: The option to initiate relocation for an Amazon Redshift cluster to the target Availability Zone.
          schema:
            type: string
            maxLength: 2147483647
        - name: Port
          in: query
          required: false
          description: The option to change the port of an Amazon Redshift cluster.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyCluster
      operationId: POST_ModifyCluster
      description: '<p>Modifies the settings for a cluster.</p> <p>You can also change node type and the number of nodes to scale up or down the cluster. When resizing a cluster, you must specify both the number of nodes and the node type even if one of the parameters does not change.</p> <p>You can add another security or parameter group, or change the admin user password. Resetting a cluster password or modifying the security groups associated with a cluster do not need a reboot. However, modifying a parameter group requires a reboot for parameters to take effect. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClusterResult'
        '480':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '481':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '482':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '483':
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesQuotaExceededFault'
        '484':
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesPerClusterLimitExceededFault'
        '485':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '486':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '487':
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '488':
          description: UnsupportedOptionFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOptionFault'
        '489':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '490':
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
        '491':
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
        '492':
          description: ClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterAlreadyExistsFault'
        '493':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '494':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
        '495':
          description: InvalidElasticIpFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidElasticIpFault'
        '496':
          description: TableLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TableLimitExceededFault'
        '497':
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterTrackFault'
        '498':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyClusterMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyClusterDbRevision:
    get:
      x-aws-operation-name: ModifyClusterDbRevision
      operationId: GET_ModifyClusterDbRevision
      description: Modifies the database revision of a cluster. The database revision is a unique revision of the database running in a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClusterDbRevisionResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: ClusterOnLatestRevisionFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterOnLatestRevisionFault'
        '482':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>The unique identifier of a cluster whose database revision you want to modify. </p> <p>Example: <code>examplecluster</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: RevisionTarget
          in: query
          required: true
          description: The identifier of the database revision. You can retrieve this value from the response to the <a>DescribeClusterDbRevisions</a> request.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterDbRevision
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyClusterDbRevision
      operationId: POST_ModifyClusterDbRevision
      description: Modifies the database revision of a cluster. The database revision is a unique revision of the database running in a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClusterDbRevisionResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: ClusterOnLatestRevisionFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterOnLatestRevisionFault'
        '482':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyClusterDbRevisionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterDbRevision
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyClusterIamRoles:
    get:
      x-aws-operation-name: ModifyClusterIamRoles
      operationId: GET_ModifyClusterIamRoles
      description: <p>Modifies the list of Identity and Access Management (IAM) roles that can be used by the cluster to access other Amazon Web Services services.</p> <p>A cluster can have up to 10 IAM roles associated at any time.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClusterIamRolesResult'
        '480':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The unique identifier of the cluster for which you want to associate or disassociate IAM roles.
          schema:
            type: string
            maxLength: 2147483647
        - name: AddIamRoles
          in: query
          required: false
          description: Zero or more IAM roles to associate with the cluster. The roles must be in their Amazon Resource Name (ARN) format. You can associate up to 10 IAM roles with a single cluster in a single request.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: IamRoleArn
        - name: RemoveIamRoles
          in: query
          required: false
          description: Zero or more IAM roles in ARN format to disassociate from the cluster. You can disassociate up to 10 IAM roles from a single cluster in a single request.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: IamRoleArn
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterIamRoles
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyClusterIamRoles
      operationId: POST_ModifyClusterIamRoles
      description: <p>Modifies the list of Identity and Access Management (IAM) roles that can be used by the cluster to access other Amazon Web Services services.</p> <p>A cluster can have up to 10 IAM roles associated at any time.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClusterIamRolesResult'
        '480':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyClusterIamRolesMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterIamRoles
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyClusterMaintenance:
    get:
      x-aws-operation-name: ModifyClusterMaintenance
      operationId: GET_ModifyClusterMaintenance
      description: Modifies the maintenance settings of a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClusterMaintenanceResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: A unique identifier for the cluster.
          schema:
            type: string
            maxLength: 2147483647
        - name: DeferMaintenance
          in: query
          required: false
          description: 'A boolean indicating whether to enable the deferred maintenance window. '
          schema:
            type: boolean
        - name: DeferMaintenanceIdentifier
          in: query
          required: false
          description: A unique identifier for the deferred maintenance window.
          schema:
            type: string
            maxLength: 2147483647
        - name: DeferMaintenanceStartTime
          in: query
          required: false
          description: A timestamp indicating the start time for the deferred maintenance window.
          schema:
            type: string
            format: date-time
        - name: DeferMaintenanceEndTime
          in: query
          required: false
          description: 'A timestamp indicating end time for the deferred maintenance window. If you specify an end time, you can''t specify a duration.'
          schema:
            type: string
            format: date-time
        - name: DeferMaintenanceDuration
          in: query
          required: false
          description: 'An integer indicating the duration of the maintenance window in days. If you specify a duration, you can''t specify an end time. The duration must be 45 days or less.'
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterMaintenance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyClusterMaintenance
      operationId: POST_ModifyClusterMaintenance
      description: Modifies the maintenance settings of a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClusterMaintenanceResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyClusterMaintenanceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterMaintenance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyClusterParameterGroup:
    get:
      x-aws-operation-name: ModifyClusterParameterGroup
      operationId: GET_ModifyClusterParameterGroup
      description: '<p>Modifies the parameters of a parameter group. For the parameters parameter, it can''t contain ASCII characters.</p> <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNameMessage'
        '480':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '481':
          description: InvalidClusterParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterParameterGroupStateFault'
      parameters:
        - name: ParameterGroupName
          in: query
          required: true
          description: The name of the parameter group to be modified.
          schema:
            type: string
            maxLength: 2147483647
        - name: Parameters
          in: query
          required: true
          description: '<p>An array of parameters to be modified. A maximum of 20 parameters can be modified in a single request.</p> <p>For each parameter to be modified, you must supply at least the parameter name and parameter value; other name-value pairs of the parameter are optional.</p> <p>For the workload management (WLM) configuration, you must supply all the name-value pairs in the wlm_json_configuration parameter.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Parameter'
                - xml:
                    name: Parameter
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyClusterParameterGroup
      operationId: POST_ModifyClusterParameterGroup
      description: '<p>Modifies the parameters of a parameter group. For the parameters parameter, it can''t contain ASCII characters.</p> <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNameMessage'
        '480':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '481':
          description: InvalidClusterParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterParameterGroupStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyClusterParameterGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyClusterSnapshot:
    get:
      x-aws-operation-name: ModifyClusterSnapshot
      operationId: GET_ModifyClusterSnapshot
      description: <p>Modifies the settings for a snapshot.</p> <p>This exanmple modifies the manual retention period setting for a cluster snapshot.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClusterSnapshotResult'
        '480':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '481':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '482':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      parameters:
        - name: SnapshotIdentifier
          in: query
          required: true
          description: The identifier of the snapshot whose setting you want to modify.
          schema:
            type: string
            maxLength: 2147483647
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: '<p>The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely.</p> <p>If the manual snapshot falls outside of the new retention period, you can specify the force option to immediately delete the snapshot.</p> <p>The value must be either -1 or an integer between 1 and 3,653.</p>'
          schema:
            type: integer
        - name: Force
          in: query
          required: false
          description: A Boolean option to override an exception if the retention period has already passed.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyClusterSnapshot
      operationId: POST_ModifyClusterSnapshot
      description: <p>Modifies the settings for a snapshot.</p> <p>This exanmple modifies the manual retention period setting for a cluster snapshot.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClusterSnapshotResult'
        '480':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '481':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '482':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyClusterSnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyClusterSnapshotSchedule:
    get:
      x-aws-operation-name: ModifyClusterSnapshotSchedule
      operationId: GET_ModifyClusterSnapshotSchedule
      description: Modifies a snapshot schedule for a cluster.
      responses:
        '200':
          description: Success
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleNotFoundFault'
        '482':
          description: InvalidClusterSnapshotScheduleStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotScheduleStateFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: 'A unique identifier for the cluster whose snapshot schedule you want to modify. '
          schema:
            type: string
            maxLength: 2147483647
        - name: ScheduleIdentifier
          in: query
          required: false
          description: A unique alphanumeric identifier for the schedule that you want to associate with the cluster.
          schema:
            type: string
            maxLength: 2147483647
        - name: DisassociateSchedule
          in: query
          required: false
          description: A boolean to indicate whether to remove the assoiciation between the cluster and the schedule.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterSnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyClusterSnapshotSchedule
      operationId: POST_ModifyClusterSnapshotSchedule
      description: Modifies a snapshot schedule for a cluster.
      responses:
        '200':
          description: Success
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleNotFoundFault'
        '482':
          description: InvalidClusterSnapshotScheduleStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotScheduleStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyClusterSnapshotScheduleMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterSnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyClusterSubnetGroup:
    get:
      x-aws-operation-name: ModifyClusterSubnetGroup
      operationId: GET_ModifyClusterSubnetGroup
      description: Modifies a cluster subnet group to include the specified list of VPC subnets. The operation replaces the existing list of subnets with the new list of subnets.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClusterSubnetGroupResult'
        '480':
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '481':
          description: ClusterSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetQuotaExceededFault'
        '482':
          description: SubnetAlreadyInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetAlreadyInUse'
        '483':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '484':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '485':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      parameters:
        - name: ClusterSubnetGroupName
          in: query
          required: true
          description: The name of the subnet group to be modified.
          schema:
            type: string
            maxLength: 2147483647
        - name: Description
          in: query
          required: false
          description: A text description of the subnet group to be modified.
          schema:
            type: string
            maxLength: 2147483647
        - name: SubnetIds
          in: query
          required: true
          description: An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a single request.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SubnetIdentifier
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyClusterSubnetGroup
      operationId: POST_ModifyClusterSubnetGroup
      description: Modifies a cluster subnet group to include the specified list of VPC subnets. The operation replaces the existing list of subnets with the new list of subnets.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClusterSubnetGroupResult'
        '480':
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '481':
          description: ClusterSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetQuotaExceededFault'
        '482':
          description: SubnetAlreadyInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetAlreadyInUse'
        '483':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '484':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '485':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyClusterSubnetGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyEndpointAccess:
    get:
      x-aws-operation-name: ModifyEndpointAccess
      operationId: GET_ModifyEndpointAccess
      description: Modifies a Redshift-managed VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAccess'
        '480':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '482':
          description: InvalidEndpointStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidEndpointStateFault'
        '483':
          description: EndpointNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointNotFoundFault'
        '484':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '485':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      parameters:
        - name: EndpointName
          in: query
          required: true
          description: The endpoint to be modified.
          schema:
            type: string
            maxLength: 2147483647
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: The complete list of VPC security groups associated with the endpoint after the endpoint is modified.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: VpcSecurityGroupId
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyEndpointAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyEndpointAccess
      operationId: POST_ModifyEndpointAccess
      description: Modifies a Redshift-managed VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAccess'
        '480':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '482':
          description: InvalidEndpointStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidEndpointStateFault'
        '483':
          description: EndpointNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointNotFoundFault'
        '484':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '485':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyEndpointAccessMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyEndpointAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyEventSubscription:
    get:
      x-aws-operation-name: ModifyEventSubscription
      operationId: GET_ModifyEventSubscription
      description: Modifies an existing Amazon Redshift event notification subscription.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyEventSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
        '482':
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
        '483':
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
        '484':
          description: SubscriptionEventIdNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionEventIdNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
        '486':
          description: SubscriptionSeverityNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionSeverityNotFoundFault'
        '487':
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
        '488':
          description: InvalidSubscriptionStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubscriptionStateFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: The name of the modified Amazon Redshift event notification subscription.
          schema:
            type: string
            maxLength: 2147483647
        - name: SnsTopicArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the SNS topic to be used by the event notification subscription.
          schema:
            type: string
            maxLength: 2147483647
        - name: SourceType
          in: query
          required: false
          description: '<p>The type of source that will be generating the events. For example, if you want to be notified of events generated by a cluster, you would set this parameter to cluster. If this value is not specified, events are returned for all Amazon Redshift objects in your Amazon Web Services account. You must specify a source type in order to specify source IDs.</p> <p>Valid values: cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot, and scheduled-action.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: SourceIds
          in: query
          required: false
          description: '<p>A list of one or more identifiers of Amazon Redshift source objects. All of the objects must be of the same type as was specified in the source type parameter. The event subscription will return only events generated by the specified objects. If not specified, then events are returned for all objects within the source type specified.</p> <p>Example: my-cluster-1, my-cluster-2</p> <p>Example: my-snapshot-20131010</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SourceId
        - name: EventCategories
          in: query
          required: false
          description: '<p>Specifies the Amazon Redshift event categories to be published by the event notification subscription.</p> <p>Values: configuration, management, monitoring, security, pending</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: EventCategory
        - name: Severity
          in: query
          required: false
          description: '<p>Specifies the Amazon Redshift event severity to be published by the event notification subscription.</p> <p>Values: ERROR, INFO</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Enabled
          in: query
          required: false
          description: 'A Boolean value indicating if the subscription is enabled. <code>true</code> indicates the subscription is enabled '
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyEventSubscription
      operationId: POST_ModifyEventSubscription
      description: Modifies an existing Amazon Redshift event notification subscription.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyEventSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
        '482':
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
        '483':
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
        '484':
          description: SubscriptionEventIdNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionEventIdNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
        '486':
          description: SubscriptionSeverityNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionSeverityNotFoundFault'
        '487':
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
        '488':
          description: InvalidSubscriptionStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubscriptionStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyEventSubscriptionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyScheduledAction:
    get:
      x-aws-operation-name: ModifyScheduledAction
      operationId: GET_ModifyScheduledAction
      description: 'Modifies a scheduled action. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledAction'
        '480':
          description: ScheduledActionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionNotFoundFault'
        '481':
          description: ScheduledActionTypeUnsupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionTypeUnsupportedFault'
        '482':
          description: InvalidScheduleFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidScheduleFault'
        '483':
          description: InvalidScheduledActionFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidScheduledActionFault'
        '484':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      parameters:
        - name: ScheduledActionName
          in: query
          required: true
          description: 'The name of the scheduled action to modify. '
          schema:
            type: string
            maxLength: 2147483647
        - name: TargetAction
          in: query
          required: false
          description: 'A modified JSON format of the scheduled action. For more information about this parameter, see <a>ScheduledAction</a>. '
          schema:
            type: object
            properties:
              ResizeCluster:
                $ref: '#/components/schemas/ResizeClusterMessage'
                description: 'An action that runs a <code>ResizeCluster</code> API operation. '
              PauseCluster:
                $ref: '#/components/schemas/PauseClusterMessage'
                description: 'An action that runs a <code>PauseCluster</code> API operation. '
              ResumeCluster:
                $ref: '#/components/schemas/ResumeClusterMessage'
                description: 'An action that runs a <code>ResumeCluster</code> API operation. '
            description: 'The action type that specifies an Amazon Redshift API operation that is supported by the Amazon Redshift scheduler. '
        - name: Schedule
          in: query
          required: false
          description: 'A modified schedule in either <code>at( )</code> or <code>cron( )</code> format. For more information about this parameter, see <a>ScheduledAction</a>.'
          schema:
            type: string
            maxLength: 2147483647
        - name: IamRole
          in: query
          required: false
          description: 'A different IAM role to assume to run the target action. For more information about this parameter, see <a>ScheduledAction</a>.'
          schema:
            type: string
            maxLength: 2147483647
        - name: ScheduledActionDescription
          in: query
          required: false
          description: 'A modified description of the scheduled action. '
          schema:
            type: string
            maxLength: 2147483647
        - name: StartTime
          in: query
          required: false
          description: 'A modified start time of the scheduled action. For more information about this parameter, see <a>ScheduledAction</a>. '
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: 'A modified end time of the scheduled action. For more information about this parameter, see <a>ScheduledAction</a>. '
          schema:
            type: string
            format: date-time
        - name: Enable
          in: query
          required: false
          description: 'A modified enable flag of the scheduled action. If true, the scheduled action is active. If false, the scheduled action is disabled. '
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyScheduledAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyScheduledAction
      operationId: POST_ModifyScheduledAction
      description: 'Modifies a scheduled action. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledAction'
        '480':
          description: ScheduledActionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionNotFoundFault'
        '481':
          description: ScheduledActionTypeUnsupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduledActionTypeUnsupportedFault'
        '482':
          description: InvalidScheduleFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidScheduleFault'
        '483':
          description: InvalidScheduledActionFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidScheduledActionFault'
        '484':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyScheduledActionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyScheduledAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifySnapshotCopyRetentionPeriod:
    get:
      x-aws-operation-name: ModifySnapshotCopyRetentionPeriod
      operationId: GET_ModifySnapshotCopyRetentionPeriod
      description: 'Modifies the number of days to retain snapshots in the destination Amazon Web Services Region after they are copied from the source Amazon Web Services Region. By default, this operation only changes the retention period of copied automated snapshots. The retention periods for both new and existing copied automated snapshots are updated with the new retention period. You can set the manual option to change only the retention periods of copied manual snapshots. If you set this option, only newly copied manual snapshots have the new retention period. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifySnapshotCopyRetentionPeriodResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: SnapshotCopyDisabledFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyDisabledFault'
        '482':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '483':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '484':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>The unique identifier of the cluster for which you want to change the retention period for either automated or manual snapshots that are copied to a destination Amazon Web Services Region.</p> <p>Constraints: Must be the valid name of an existing cluster that has cross-region snapshot copy enabled.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: RetentionPeriod
          in: query
          required: true
          description: '<p>The number of days to retain automated snapshots in the destination Amazon Web Services Region after they are copied from the source Amazon Web Services Region.</p> <p>By default, this only changes the retention period of copied automated snapshots. </p> <p>If you decrease the retention period for automated snapshots that are copied to a destination Amazon Web Services Region, Amazon Redshift deletes any existing automated snapshots that were copied to the destination Amazon Web Services Region and that fall outside of the new retention period.</p> <p>Constraints: Must be at least 1 and no more than 35 for automated snapshots. </p> <p>If you specify the <code>manual</code> option, only newly copied manual snapshots will have the new retention period. </p> <p>If you specify the value of -1 newly copied manual snapshots are retained indefinitely.</p> <p>Constraints: The number of days must be either -1 or an integer between 1 and 3,653 for manual snapshots.</p>'
          schema:
            type: integer
        - name: Manual
          in: query
          required: false
          description: Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifySnapshotCopyRetentionPeriod
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifySnapshotCopyRetentionPeriod
      operationId: POST_ModifySnapshotCopyRetentionPeriod
      description: 'Modifies the number of days to retain snapshots in the destination Amazon Web Services Region after they are copied from the source Amazon Web Services Region. By default, this operation only changes the retention period of copied automated snapshots. The retention periods for both new and existing copied automated snapshots are updated with the new retention period. You can set the manual option to change only the retention periods of copied manual snapshots. If you set this option, only newly copied manual snapshots have the new retention period. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifySnapshotCopyRetentionPeriodResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: SnapshotCopyDisabledFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotCopyDisabledFault'
        '482':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '483':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '484':
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRetentionPeriodFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifySnapshotCopyRetentionPeriodMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifySnapshotCopyRetentionPeriod
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifySnapshotSchedule:
    get:
      x-aws-operation-name: ModifySnapshotSchedule
      operationId: GET_ModifySnapshotSchedule
      description: Modifies a snapshot schedule. Any schedule associated with a cluster is modified asynchronously.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotSchedule'
        '480':
          description: InvalidScheduleFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidScheduleFault'
        '481':
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleNotFoundFault'
        '482':
          description: SnapshotScheduleUpdateInProgressFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleUpdateInProgressFault'
      parameters:
        - name: ScheduleIdentifier
          in: query
          required: true
          description: A unique alphanumeric identifier of the schedule to modify.
          schema:
            type: string
            maxLength: 2147483647
        - name: ScheduleDefinitions
          in: query
          required: true
          description: 'An updated list of schedule definitions. A schedule definition is made up of schedule expressions, for example, "cron(30 12 *)" or "rate(12 hours)".'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: ScheduleDefinition
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifySnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifySnapshotSchedule
      operationId: POST_ModifySnapshotSchedule
      description: Modifies a snapshot schedule. Any schedule associated with a cluster is modified asynchronously.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotSchedule'
        '480':
          description: InvalidScheduleFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidScheduleFault'
        '481':
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleNotFoundFault'
        '482':
          description: SnapshotScheduleUpdateInProgressFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleUpdateInProgressFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifySnapshotScheduleMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifySnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ModifyUsageLimit:
    get:
      x-aws-operation-name: ModifyUsageLimit
      operationId: GET_ModifyUsageLimit
      description: Modifies a usage limit in a cluster. You can't modify the feature type or period of a usage limit.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UsageLimit'
        '480':
          description: InvalidUsageLimitFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUsageLimitFault'
        '481':
          description: UsageLimitNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UsageLimitNotFoundFault'
        '482':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      parameters:
        - name: UsageLimitId
          in: query
          required: true
          description: The identifier of the usage limit to modify.
          schema:
            type: string
            maxLength: 2147483647
        - name: Amount
          in: query
          required: false
          description: 'The new limit amount. For more information about this parameter, see <a>UsageLimit</a>. '
          schema:
            type: integer
        - name: BreachAction
          in: query
          required: false
          description: 'The new action that Amazon Redshift takes when the limit is reached. For more information about this parameter, see <a>UsageLimit</a>. '
          schema:
            type: string
            enum:
              - log
              - emit-metric
              - disable
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyUsageLimit
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyUsageLimit
      operationId: POST_ModifyUsageLimit
      description: Modifies a usage limit in a cluster. You can't modify the feature type or period of a usage limit.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UsageLimit'
        '480':
          description: InvalidUsageLimitFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUsageLimitFault'
        '481':
          description: UsageLimitNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UsageLimitNotFoundFault'
        '482':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyUsageLimitMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyUsageLimit
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=PauseCluster:
    get:
      x-aws-operation-name: PauseCluster
      operationId: GET_PauseCluster
      description: Pauses a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PauseClusterResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The identifier of the cluster to be paused.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PauseCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PauseCluster
      operationId: POST_PauseCluster
      description: Pauses a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PauseClusterResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PauseClusterMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PauseCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=PurchaseReservedNodeOffering:
    get:
      x-aws-operation-name: PurchaseReservedNodeOffering
      operationId: GET_PurchaseReservedNodeOffering
      description: '<p>Allows you to purchase reserved nodes. Amazon Redshift offers a predefined set of reserved node offerings. You can purchase one or more of the offerings. You can call the <a>DescribeReservedNodeOfferings</a> API to obtain the available reserved node offerings. You can call this API by providing a specific reserved node offering and the number of nodes you want to reserve. </p> <p> For more information about reserved node offerings, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html">Purchasing Reserved Nodes</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseReservedNodeOfferingResult'
        '480':
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingNotFoundFault'
        '481':
          description: ReservedNodeAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeAlreadyExistsFault'
        '482':
          description: ReservedNodeQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeQuotaExceededFault'
        '483':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      parameters:
        - name: ReservedNodeOfferingId
          in: query
          required: true
          description: The unique identifier of the reserved node offering you want to purchase.
          schema:
            type: string
            maxLength: 2147483647
        - name: NodeCount
          in: query
          required: false
          description: '<p>The number of reserved nodes that you want to purchase.</p> <p>Default: <code>1</code> </p>'
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PurchaseReservedNodeOffering
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PurchaseReservedNodeOffering
      operationId: POST_PurchaseReservedNodeOffering
      description: '<p>Allows you to purchase reserved nodes. Amazon Redshift offers a predefined set of reserved node offerings. You can purchase one or more of the offerings. You can call the <a>DescribeReservedNodeOfferings</a> API to obtain the available reserved node offerings. You can call this API by providing a specific reserved node offering and the number of nodes you want to reserve. </p> <p> For more information about reserved node offerings, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html">Purchasing Reserved Nodes</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseReservedNodeOfferingResult'
        '480':
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingNotFoundFault'
        '481':
          description: ReservedNodeAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeAlreadyExistsFault'
        '482':
          description: ReservedNodeQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedNodeQuotaExceededFault'
        '483':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PurchaseReservedNodeOfferingMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PurchaseReservedNodeOffering
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=RebootCluster:
    get:
      x-aws-operation-name: RebootCluster
      operationId: GET_RebootCluster
      description: 'Reboots a cluster. This action is taken as soon as possible. It results in a momentary outage to the cluster, during which the cluster status is set to <code>rebooting</code>. A cluster event is created when the reboot is completed. Any pending cluster modifications (see <a>ModifyCluster</a>) are applied at this reboot. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebootClusterResult'
        '480':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The cluster identifier.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RebootCluster
      operationId: POST_RebootCluster
      description: 'Reboots a cluster. This action is taken as soon as possible. It results in a momentary outage to the cluster, during which the cluster status is set to <code>rebooting</code>. A cluster event is created when the reboot is completed. Any pending cluster modifications (see <a>ModifyCluster</a>) are applied at this reboot. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebootClusterResult'
        '480':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RebootClusterMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=RejectDataShare:
    get:
      x-aws-operation-name: RejectDataShare
      operationId: GET_RejectDataShare
      description: 'From the consumer account, rejects the specified datashare.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DataShare'
        '480':
          description: InvalidDataShareFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDataShareFault'
      parameters:
        - name: DataShareArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the datashare to reject.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RejectDataShare
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RejectDataShare
      operationId: POST_RejectDataShare
      description: 'From the consumer account, rejects the specified datashare.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DataShare'
        '480':
          description: InvalidDataShareFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDataShareFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RejectDataShareMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RejectDataShare
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ResetClusterParameterGroup:
    get:
      x-aws-operation-name: ResetClusterParameterGroup
      operationId: GET_ResetClusterParameterGroup
      description: 'Sets one or more parameters of the specified parameter group to their default values and sets the source values of the parameters to "engine-default". To reset the entire parameter group specify the <i>ResetAllParameters</i> parameter. For parameter changes to take effect you must reboot any associated clusters. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNameMessage'
        '480':
          description: InvalidClusterParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterParameterGroupStateFault'
        '481':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
      parameters:
        - name: ParameterGroupName
          in: query
          required: true
          description: The name of the cluster parameter group to be reset.
          schema:
            type: string
            maxLength: 2147483647
        - name: ResetAllParameters
          in: query
          required: false
          description: '<p>If <code>true</code>, all parameters in the specified parameter group will be reset to their default values. </p> <p>Default: <code>true</code> </p>'
          schema:
            type: boolean
        - name: Parameters
          in: query
          required: false
          description: '<p>An array of names of parameters to be reset. If <i>ResetAllParameters</i> option is not used, then at least one parameter name must be supplied. </p> <p>Constraints: A maximum of 20 parameters can be reset in a single request.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Parameter'
                - xml:
                    name: Parameter
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResetClusterParameterGroup
      operationId: POST_ResetClusterParameterGroup
      description: 'Sets one or more parameters of the specified parameter group to their default values and sets the source values of the parameters to "engine-default". To reset the entire parameter group specify the <i>ResetAllParameters</i> parameter. For parameter changes to take effect you must reboot any associated clusters. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNameMessage'
        '480':
          description: InvalidClusterParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterParameterGroupStateFault'
        '481':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetClusterParameterGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ResizeCluster:
    get:
      x-aws-operation-name: ResizeCluster
      operationId: GET_ResizeCluster
      description: '<p>Changes the size of the cluster. You can change the cluster''s type, or change the number or type of nodes. The default behavior is to use the elastic resize method. With an elastic resize, your cluster is available for read and write operations more quickly than with the classic resize method. </p> <p>Elastic resize operations have the following restrictions:</p> <ul> <li> <p>You can only resize clusters of the following types:</p> <ul> <li> <p>dc1.large (if your cluster is in a VPC)</p> </li> <li> <p>dc1.8xlarge (if your cluster is in a VPC)</p> </li> <li> <p>dc2.large</p> </li> <li> <p>dc2.8xlarge</p> </li> <li> <p>ds2.xlarge</p> </li> <li> <p>ds2.8xlarge</p> </li> <li> <p>ra3.xlplus</p> </li> <li> <p>ra3.4xlarge</p> </li> <li> <p>ra3.16xlarge</p> </li> </ul> </li> <li> <p>The type of nodes that you add must match the node type for the cluster.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResizeClusterResult'
        '480':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '482':
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesQuotaExceededFault'
        '483':
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesPerClusterLimitExceededFault'
        '484':
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '485':
          description: UnsupportedOptionFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOptionFault'
        '486':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '487':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '488':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The unique identifier for the cluster to resize.
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterType
          in: query
          required: false
          description: The new cluster type for the specified cluster.
          schema:
            type: string
            maxLength: 2147483647
        - name: NodeType
          in: query
          required: false
          description: 'The new node type for the nodes you are adding. If not specified, the cluster''s current node type is used.'
          schema:
            type: string
            maxLength: 2147483647
        - name: NumberOfNodes
          in: query
          required: false
          description: 'The new number of nodes for the cluster. If not specified, the cluster''s current number of nodes is used.'
          schema:
            type: integer
        - name: Classic
          in: query
          required: false
          description: 'A boolean value indicating whether the resize operation is using the classic resize process. If you don''t provide this parameter or set the value to <code>false</code>, the resize type is elastic. '
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResizeCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResizeCluster
      operationId: POST_ResizeCluster
      description: '<p>Changes the size of the cluster. You can change the cluster''s type, or change the number or type of nodes. The default behavior is to use the elastic resize method. With an elastic resize, your cluster is available for read and write operations more quickly than with the classic resize method. </p> <p>Elastic resize operations have the following restrictions:</p> <ul> <li> <p>You can only resize clusters of the following types:</p> <ul> <li> <p>dc1.large (if your cluster is in a VPC)</p> </li> <li> <p>dc1.8xlarge (if your cluster is in a VPC)</p> </li> <li> <p>dc2.large</p> </li> <li> <p>dc2.8xlarge</p> </li> <li> <p>ds2.xlarge</p> </li> <li> <p>ds2.8xlarge</p> </li> <li> <p>ra3.xlplus</p> </li> <li> <p>ra3.4xlarge</p> </li> <li> <p>ra3.16xlarge</p> </li> </ul> </li> <li> <p>The type of nodes that you add must match the node type for the cluster.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResizeClusterResult'
        '480':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '482':
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesQuotaExceededFault'
        '483':
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesPerClusterLimitExceededFault'
        '484':
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '485':
          description: UnsupportedOptionFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOptionFault'
        '486':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '487':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '488':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResizeClusterMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResizeCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=RestoreFromClusterSnapshot:
    get:
      x-aws-operation-name: RestoreFromClusterSnapshot
      operationId: GET_RestoreFromClusterSnapshot
      description: '<p>Creates a new cluster from a snapshot. By default, Amazon Redshift creates the resulting cluster with the same configuration as the original cluster from which the snapshot was created, except that the new cluster is created with the default cluster security and parameter groups. After Amazon Redshift creates the cluster, you can use the <a>ModifyCluster</a> API to associate a different security group and different parameter group with the restored cluster. If you are using a DS node type, you can also choose to change to another DS node type of the same size during restore.</p> <p>If you restore a cluster into a VPC, you must provide a cluster subnet group where you want the cluster restored.</p> <p> For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreFromClusterSnapshotResult'
        '480':
          description: AccessToSnapshotDeniedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToSnapshotDeniedFault'
        '481':
          description: ClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterAlreadyExistsFault'
        '482':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '483':
          description: ClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaExceededFault'
        '484':
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '485':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '486':
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
        '487':
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesQuotaExceededFault'
        '488':
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesPerClusterLimitExceededFault'
        '489':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '490':
          description: InvalidClusterSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSubnetGroupStateFault'
        '491':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '492':
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '493':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '494':
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
        '495':
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
        '496':
          description: InvalidElasticIpFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidElasticIpFault'
        '497':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '498':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '499':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '500':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
        '501':
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterTrackFault'
        '502':
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleNotFoundFault'
        '503':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '504':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>The identifier of the cluster that will be created from restoring the snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>Alphabetic characters must be lowercase.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique for all clusters within an Amazon Web Services account.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: SnapshotIdentifier
          in: query
          required: true
          description: '<p>The name of the snapshot from which to create the new cluster. This parameter isn''t case sensitive.</p> <p>Example: <code>my-snapshot-id</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: SnapshotClusterIdentifier
          in: query
          required: false
          description: The name of the cluster the source snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.
          schema:
            type: string
            maxLength: 2147483647
        - name: Port
          in: query
          required: false
          description: '<p>The port number on which the cluster accepts connections.</p> <p>Default: The same port as the original cluster.</p> <p>Constraints: Must be between <code>1115</code> and <code>65535</code>.</p>'
          schema:
            type: integer
        - name: AvailabilityZone
          in: query
          required: false
          description: '<p>The Amazon EC2 Availability Zone in which to restore the cluster.</p> <p>Default: A random, system-chosen Availability Zone.</p> <p>Example: <code>us-east-2a</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: AllowVersionUpgrade
          in: query
          required: false
          description: '<p>If <code>true</code>, major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. </p> <p>Default: <code>true</code> </p>'
          schema:
            type: boolean
        - name: ClusterSubnetGroupName
          in: query
          required: false
          description: '<p>The name of the subnet group where you want to cluster restored.</p> <p>A snapshot of cluster in VPC can be restored only in VPC. Therefore, you must provide subnet group name where you want the cluster restored.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: PubliclyAccessible
          in: query
          required: false
          description: 'If <code>true</code>, the cluster can be accessed from a public network. '
          schema:
            type: boolean
        - name: OwnerAccount
          in: query
          required: false
          description: 'The Amazon Web Services account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.'
          schema:
            type: string
            maxLength: 2147483647
        - name: HsmClientCertificateIdentifier
          in: query
          required: false
          description: Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.
          schema:
            type: string
            maxLength: 2147483647
        - name: HsmConfigurationIdentifier
          in: query
          required: false
          description: Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
          schema:
            type: string
            maxLength: 2147483647
        - name: ElasticIp
          in: query
          required: false
          description: The elastic IP (EIP) address for the cluster.
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterParameterGroupName
          in: query
          required: false
          description: '<p>The name of the parameter group to be associated with this cluster.</p> <p>Default: The default Amazon Redshift cluster parameter group. For information about the default parameter group, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Working with Amazon Redshift Parameter Groups</a>.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
          schema:
            type: string
            maxLength: 2147483647
        - name: ClusterSecurityGroups
          in: query
          required: false
          description: '<p>A list of security groups to be associated with this cluster.</p> <p>Default: The default cluster security group for Amazon Redshift.</p> <p>Cluster security groups only apply to clusters outside of VPCs.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: ClusterSecurityGroupName
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: '<p>A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.</p> <p>Default: The default VPC security group is associated with the cluster.</p> <p>VPC security groups only apply to clusters in VPCs.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: VpcSecurityGroupId
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: '<p>The weekly time range (in UTC) during which automated cluster maintenance can occur.</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> Default: The value selected for the cluster from which the snapshot was taken. For more information about the time blocks for each region, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows">Maintenance Windows</a> in Amazon Redshift Cluster Management Guide. </p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Minimum 30-minute window.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: AutomatedSnapshotRetentionPeriod
          in: query
          required: false
          description: '<p>The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with <a>CreateClusterSnapshot</a>. </p> <p>You can''t disable automated snapshots for RA3 node types. Set the automated retention period from 1-35 days.</p> <p>Default: The value selected for the cluster from which the snapshot was taken.</p> <p>Constraints: Must be a value from 0 to 35.</p>'
          schema:
            type: integer
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: '<p>The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn''t change the retention period of existing snapshots.</p> <p>The value must be either -1 or an integer between 1 and 3,653.</p>'
          schema:
            type: integer
        - name: KmsKeyId
          in: query
          required: false
          description: The Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster that you restore from a shared snapshot.
          schema:
            type: string
            maxLength: 2147483647
        - name: NodeType
          in: query
          required: false
          description: '<p>The node type that the restored cluster will be provisioned with.</p> <p>Default: The node type of the cluster from which the snapshot was taken. You can modify this if you are using any DS node type. In that case, you can choose to restore into another DS node type of the same size. For example, you can restore ds1.8xlarge into ds2.8xlarge, or ds1.xlarge into ds2.xlarge. If you have a DC instance type, you must restore into that same instance type and size. In other words, you can only restore a dc1.large instance type into another dc1.large instance type or dc2.large instance type. You can''t restore dc1.8xlarge to dc2.8xlarge. First restore to a dc1.8xlarge cluster, then resize to a dc2.8large cluster. For more information about node types, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-about-clusters-and-nodes"> About Clusters and Nodes</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: EnhancedVpcRouting
          in: query
          required: false
          description: '<p>An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</p> <p>If this option is <code>true</code>, enhanced VPC routing is enabled. </p> <p>Default: false</p>'
          schema:
            type: boolean
        - name: AdditionalInfo
          in: query
          required: false
          description: Reserved.
          schema:
            type: string
            maxLength: 2147483647
        - name: IamRoles
          in: query
          required: false
          description: <p>A list of Identity and Access Management (IAM) roles that can be used by the cluster to access other Amazon Web Services services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. You can supply up to 10 IAM roles in a single request.</p> <p>A cluster can have up to 10 IAM roles associated at any time.</p>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: IamRoleArn
        - name: MaintenanceTrackName
          in: query
          required: false
          description: 'The name of the maintenance track for the restored cluster. When you take a snapshot, the snapshot inherits the <code>MaintenanceTrack</code> value from the cluster. The snapshot might be on a different track than the cluster that was the source for the snapshot. For example, suppose that you take a snapshot of a cluster that is on the current track and then change the cluster to be on the trailing track. In this case, the snapshot and the source cluster are on different tracks.'
          schema:
            type: string
            maxLength: 2147483647
        - name: SnapshotScheduleIdentifier
          in: query
          required: false
          description: A unique identifier for the snapshot schedule.
          schema:
            type: string
            maxLength: 2147483647
        - name: NumberOfNodes
          in: query
          required: false
          description: The number of nodes specified when provisioning the restored cluster.
          schema:
            type: integer
        - name: AvailabilityZoneRelocation
          in: query
          required: false
          description: The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster is restored.
          schema:
            type: boolean
        - name: AquaConfigurationStatus
          in: query
          required: false
          description: <p>The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored. Possible values include the following.</p> <ul> <li> <p>enabled - Use AQUA if it is available for the current Amazon Web Services Region and Amazon Redshift node type.</p> </li> <li> <p>disabled - Don't use AQUA. </p> </li> <li> <p>auto - Amazon Redshift determines whether to use AQUA.</p> </li> </ul>
          schema:
            type: string
            enum:
              - enabled
              - disabled
              - auto
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreFromClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RestoreFromClusterSnapshot
      operationId: POST_RestoreFromClusterSnapshot
      description: '<p>Creates a new cluster from a snapshot. By default, Amazon Redshift creates the resulting cluster with the same configuration as the original cluster from which the snapshot was created, except that the new cluster is created with the default cluster security and parameter groups. After Amazon Redshift creates the cluster, you can use the <a>ModifyCluster</a> API to associate a different security group and different parameter group with the restored cluster. If you are using a DS node type, you can also choose to change to another DS node type of the same size during restore.</p> <p>If you restore a cluster into a VPC, you must provide a cluster subnet group where you want the cluster restored.</p> <p> For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreFromClusterSnapshotResult'
        '480':
          description: AccessToSnapshotDeniedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToSnapshotDeniedFault'
        '481':
          description: ClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterAlreadyExistsFault'
        '482':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '483':
          description: ClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaExceededFault'
        '484':
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '485':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '486':
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
        '487':
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesQuotaExceededFault'
        '488':
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberOfNodesPerClusterLimitExceededFault'
        '489':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '490':
          description: InvalidClusterSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSubnetGroupStateFault'
        '491':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '492':
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '493':
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '494':
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
        '495':
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
        '496':
          description: InvalidElasticIpFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidElasticIpFault'
        '497':
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '498':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '499':
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '500':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
        '501':
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterTrackFault'
        '502':
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotScheduleNotFoundFault'
        '503':
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '504':
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreFromClusterSnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreFromClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=RestoreTableFromClusterSnapshot:
    get:
      x-aws-operation-name: RestoreTableFromClusterSnapshot
      operationId: GET_RestoreTableFromClusterSnapshot
      description: '<p>Creates a new table from a table in an Amazon Redshift cluster snapshot. You must create the new table within the Amazon Redshift cluster that the snapshot was taken from.</p> <p>You cannot use <code>RestoreTableFromClusterSnapshot</code> to restore a table with the same name as an existing table in an Amazon Redshift cluster. That is, you cannot overwrite an existing table in a cluster with a restored table. If you want to replace your original table with a new, restored table, then rename or drop your original table before you call <code>RestoreTableFromClusterSnapshot</code>. When you have renamed your original table, then you can pass the original name of the table as the <code>NewTableName</code> parameter value in the call to <code>RestoreTableFromClusterSnapshot</code>. This way, you can replace the original table with the table created from the snapshot.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreTableFromClusterSnapshotResult'
        '480':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '481':
          description: InProgressTableRestoreQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InProgressTableRestoreQuotaExceededFault'
        '482':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '483':
          description: InvalidTableRestoreArgumentFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTableRestoreArgumentFault'
        '484':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '485':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '486':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The identifier of the Amazon Redshift cluster to restore the table to.
          schema:
            type: string
            maxLength: 2147483647
        - name: SnapshotIdentifier
          in: query
          required: true
          description: The identifier of the snapshot to restore the table from. This snapshot must have been created from the Amazon Redshift cluster specified by the <code>ClusterIdentifier</code> parameter.
          schema:
            type: string
            maxLength: 2147483647
        - name: SourceDatabaseName
          in: query
          required: true
          description: The name of the source database that contains the table to restore from.
          schema:
            type: string
            maxLength: 2147483647
        - name: SourceSchemaName
          in: query
          required: false
          description: 'The name of the source schema that contains the table to restore from. If you do not specify a <code>SourceSchemaName</code> value, the default is <code>public</code>.'
          schema:
            type: string
            maxLength: 2147483647
        - name: SourceTableName
          in: query
          required: true
          description: The name of the source table to restore from.
          schema:
            type: string
            maxLength: 2147483647
        - name: TargetDatabaseName
          in: query
          required: false
          description: The name of the database to restore the table to.
          schema:
            type: string
            maxLength: 2147483647
        - name: TargetSchemaName
          in: query
          required: false
          description: The name of the schema to restore the table to.
          schema:
            type: string
            maxLength: 2147483647
        - name: NewTableName
          in: query
          required: true
          description: The name of the table to create as a result of the current request.
          schema:
            type: string
            maxLength: 2147483647
        - name: EnableCaseSensitiveIdentifier
          in: query
          required: false
          description: 'Indicates whether name identifiers for database, schema, and table are case sensitive. If <code>true</code>, the names are case sensitive. If <code>false</code> (default), the names are not case sensitive.'
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreTableFromClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RestoreTableFromClusterSnapshot
      operationId: POST_RestoreTableFromClusterSnapshot
      description: '<p>Creates a new table from a table in an Amazon Redshift cluster snapshot. You must create the new table within the Amazon Redshift cluster that the snapshot was taken from.</p> <p>You cannot use <code>RestoreTableFromClusterSnapshot</code> to restore a table with the same name as an existing table in an Amazon Redshift cluster. That is, you cannot overwrite an existing table in a cluster with a restored table. If you want to replace your original table with a new, restored table, then rename or drop your original table before you call <code>RestoreTableFromClusterSnapshot</code>. When you have renamed your original table, then you can pass the original name of the table as the <code>NewTableName</code> parameter value in the call to <code>RestoreTableFromClusterSnapshot</code>. This way, you can replace the original table with the table created from the snapshot.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreTableFromClusterSnapshotResult'
        '480':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '481':
          description: InProgressTableRestoreQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InProgressTableRestoreQuotaExceededFault'
        '482':
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '483':
          description: InvalidTableRestoreArgumentFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTableRestoreArgumentFault'
        '484':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '485':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '486':
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreTableFromClusterSnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreTableFromClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=ResumeCluster:
    get:
      x-aws-operation-name: ResumeCluster
      operationId: GET_ResumeCluster
      description: Resumes a paused cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResumeClusterResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The identifier of the cluster to be resumed.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResumeCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResumeCluster
      operationId: POST_ResumeCluster
      description: Resumes a paused cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResumeClusterResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResumeClusterMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResumeCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=RevokeClusterSecurityGroupIngress:
    get:
      x-aws-operation-name: RevokeClusterSecurityGroupIngress
      operationId: GET_RevokeClusterSecurityGroupIngress
      description: 'Revokes an ingress rule in an Amazon Redshift security group for a previously authorized IP range or Amazon EC2 security group. To add an ingress rule, see <a>AuthorizeClusterSecurityGroupIngress</a>. For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeClusterSecurityGroupIngressResult'
        '480':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '482':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
      parameters:
        - name: ClusterSecurityGroupName
          in: query
          required: true
          description: The name of the security Group from which to revoke the ingress rule.
          schema:
            type: string
            maxLength: 2147483647
        - name: CIDRIP
          in: query
          required: false
          description: 'The IP range for which to revoke access. This range must be a valid Classless Inter-Domain Routing (CIDR) block of IP addresses. If <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code> and <code>EC2SecurityGroupOwnerId</code> cannot be provided. '
          schema:
            type: string
            maxLength: 2147483647
        - name: EC2SecurityGroupName
          in: query
          required: false
          description: 'The name of the EC2 Security Group whose access is to be revoked. If <code>EC2SecurityGroupName</code> is specified, <code>EC2SecurityGroupOwnerId</code> must also be provided and <code>CIDRIP</code> cannot be provided. '
          schema:
            type: string
            maxLength: 2147483647
        - name: EC2SecurityGroupOwnerId
          in: query
          required: false
          description: '<p>The Amazon Web Services account number of the owner of the security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID is not an acceptable value. If <code>EC2SecurityGroupOwnerId</code> is specified, <code>EC2SecurityGroupName</code> must also be provided. and <code>CIDRIP</code> cannot be provided. </p> <p>Example: <code>111122223333</code> </p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeClusterSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RevokeClusterSecurityGroupIngress
      operationId: POST_RevokeClusterSecurityGroupIngress
      description: 'Revokes an ingress rule in an Amazon Redshift security group for a previously authorized IP range or Amazon EC2 security group. To add an ingress rule, see <a>AuthorizeClusterSecurityGroupIngress</a>. For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeClusterSecurityGroupIngressResult'
        '480':
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '482':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RevokeClusterSecurityGroupIngressMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeClusterSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=RevokeEndpointAccess:
    get:
      x-aws-operation-name: RevokeEndpointAccess
      operationId: GET_RevokeEndpointAccess
      description: Revokes access to a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAuthorization'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidEndpointStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidEndpointStateFault'
        '482':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '483':
          description: EndpointNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointNotFoundFault'
        '484':
          description: EndpointAuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAuthorizationNotFoundFault'
        '485':
          description: InvalidAuthorizationStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthorizationStateFault'
        '486':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: The cluster to revoke access from.
          schema:
            type: string
            maxLength: 2147483647
        - name: Account
          in: query
          required: false
          description: The Amazon Web Services account ID whose access is to be revoked.
          schema:
            type: string
            maxLength: 2147483647
        - name: VpcIds
          in: query
          required: false
          description: The virtual private cloud (VPC) identifiers for which access is to be revoked.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: VpcIdentifier
        - name: Force
          in: query
          required: false
          description: 'Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted.'
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeEndpointAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RevokeEndpointAccess
      operationId: POST_RevokeEndpointAccess
      description: Revokes access to a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAuthorization'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidEndpointStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidEndpointStateFault'
        '482':
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '483':
          description: EndpointNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointNotFoundFault'
        '484':
          description: EndpointAuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointAuthorizationNotFoundFault'
        '485':
          description: InvalidAuthorizationStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthorizationStateFault'
        '486':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RevokeEndpointAccessMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeEndpointAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=RevokeSnapshotAccess:
    get:
      x-aws-operation-name: RevokeSnapshotAccess
      operationId: GET_RevokeSnapshotAccess
      description: '<p>Removes the ability of the specified Amazon Web Services account to restore the specified snapshot. If the account is currently restoring the snapshot, the restore will run to completion.</p> <p> For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeSnapshotAccessResult'
        '480':
          description: AccessToSnapshotDeniedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToSnapshotDeniedFault'
        '481':
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '482':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
      parameters:
        - name: SnapshotIdentifier
          in: query
          required: true
          description: The identifier of the snapshot that the account can no longer access.
          schema:
            type: string
            maxLength: 2147483647
        - name: SnapshotClusterIdentifier
          in: query
          required: false
          description: The identifier of the cluster the snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.
          schema:
            type: string
            maxLength: 2147483647
        - name: AccountWithRestoreAccess
          in: query
          required: true
          description: The identifier of the Amazon Web Services account that can no longer restore the specified snapshot.
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeSnapshotAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RevokeSnapshotAccess
      operationId: POST_RevokeSnapshotAccess
      description: '<p>Removes the ability of the specified Amazon Web Services account to restore the specified snapshot. If the account is currently restoring the snapshot, the restore will run to completion.</p> <p> For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeSnapshotAccessResult'
        '480':
          description: AccessToSnapshotDeniedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToSnapshotDeniedFault'
        '481':
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '482':
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RevokeSnapshotAccessMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeSnapshotAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=RotateEncryptionKey:
    get:
      x-aws-operation-name: RotateEncryptionKey
      operationId: GET_RotateEncryptionKey
      description: Rotates the encryption keys for a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RotateEncryptionKeyResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: '<p>The unique identifier of the cluster that you want to rotate the encryption keys for.</p> <p>Constraints: Must be the name of valid cluster that has encryption enabled.</p>'
          schema:
            type: string
            maxLength: 2147483647
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RotateEncryptionKey
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RotateEncryptionKey
      operationId: POST_RotateEncryptionKey
      description: Rotates the encryption keys for a cluster.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RotateEncryptionKeyResult'
        '480':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RotateEncryptionKeyMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RotateEncryptionKey
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
  /#Action=UpdatePartnerStatus:
    get:
      x-aws-operation-name: UpdatePartnerStatus
      operationId: GET_UpdatePartnerStatus
      description: Updates the status of a partner integration.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PartnerIntegrationOutputMessage'
        '480':
          description: PartnerNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PartnerNotFoundFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '482':
          description: UnauthorizedPartnerIntegrationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedPartnerIntegrationFault'
      parameters:
        - name: AccountId
          in: query
          required: true
          description: The Amazon Web Services account ID that owns the cluster.
          schema:
            type: string
            pattern: '^[0-9]+$'
            minLength: 12
            maxLength: 12
        - name: ClusterIdentifier
          in: query
          required: true
          description: The cluster identifier of the cluster whose partner integration status is being updated.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-]+$'
            maxLength: 63
        - name: DatabaseName
          in: query
          required: true
          description: The name of the database whose partner integration status is being updated.
          schema:
            type: string
            pattern: '^[\p{L}_][\p{L}\p{N}@$#_]+$'
            maxLength: 127
        - name: PartnerName
          in: query
          required: true
          description: The name of the partner whose integration status is being updated.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-_]+$'
            maxLength: 255
        - name: Status
          in: query
          required: true
          description: The value of the updated status.
          schema:
            type: string
            enum:
              - Active
              - Inactive
              - RuntimeFailure
              - ConnectionFailure
        - name: StatusMessage
          in: query
          required: false
          description: The status message provided by the partner.
          schema:
            type: string
            pattern: '^[\x20-\x7E]+$'
            maxLength: 262144
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdatePartnerStatus
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdatePartnerStatus
      operationId: POST_UpdatePartnerStatus
      description: Updates the status of a partner integration.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PartnerIntegrationOutputMessage'
        '480':
          description: PartnerNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PartnerNotFoundFault'
        '481':
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '482':
          description: UnauthorizedPartnerIntegrationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedPartnerIntegrationFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdatePartnerStatusInputMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdatePartnerStatus
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2012-12-01'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptReservedNodeExchangeOutputMessage:
      type: object
      properties:
        ExchangedReservedNode:
          $ref: '#/components/schemas/ReservedNode'
          description: <p/>
    ReservedNodeNotFoundFault: {}
    InvalidReservedNodeStateFault: {}
    ReservedNodeAlreadyMigratedFault: {}
    ReservedNodeOfferingNotFoundFault: {}
    UnsupportedOperationFault: {}
    DependentServiceUnavailableFault: {}
    ReservedNodeAlreadyExistsFault: {}
    PartnerIntegrationOutputMessage:
      type: object
      properties:
        DatabaseName:
          $ref: '#/components/schemas/PartnerIntegrationDatabaseName'
          description: The name of the database that receives data from the partner.
        PartnerName:
          $ref: '#/components/schemas/PartnerIntegrationPartnerName'
          description: The name of the partner that is authorized to send data.
    PartnerNotFoundFault: {}
    ClusterNotFoundFault: {}
    UnauthorizedPartnerIntegrationFault: {}
    DataShare:
      type: object
      properties:
        DataShareArn:
          $ref: '#/components/schemas/String'
          description: 'An Amazon Resource Name (ARN) that references the datashare that is owned by a specific namespace of the producer cluster. A datashare ARN is in the <code>arn:aws:redshift:{region}:{account-id}:{datashare}:{namespace-guid}/{datashare-name}</code> format.'
        ProducerArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the producer.
        AllowPubliclyAccessibleConsumers:
          $ref: '#/components/schemas/Boolean'
          description: A value that specifies whether the datashare can be shared to a publicly accessible cluster.
        DataShareAssociations:
          $ref: '#/components/schemas/DataShareAssociationList'
          description: A value that specifies when the datashare has an association between a producer and data consumers.
    InvalidDataShareFault: {}
    InvalidNamespaceFault: {}
    AuthorizeClusterSecurityGroupIngressResult:
      type: object
      properties:
        ClusterSecurityGroup:
          $ref: '#/components/schemas/ClusterSecurityGroup'
    ClusterSecurityGroupNotFoundFault: {}
    InvalidClusterSecurityGroupStateFault: {}
    AuthorizationAlreadyExistsFault: {}
    AuthorizationQuotaExceededFault: {}
    EndpointAuthorization:
      type: object
      properties:
        Grantor:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID of the cluster owner.
        Grantee:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID of the grantee of the cluster.
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The cluster identifier.
        AuthorizeTime:
          $ref: '#/components/schemas/TStamp'
          description: The time (UTC) when the authorization was created.
        ClusterStatus:
          $ref: '#/components/schemas/String'
          description: The status of the cluster.
        Status:
          $ref: '#/components/schemas/AuthorizationStatus'
          description: The status of the authorization action.
        AllowedAllVPCs:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether all VPCs in the grantee account are allowed access to the cluster.
        AllowedVPCs:
          $ref: '#/components/schemas/VpcIdentifierList'
          description: The VPCs allowed access to the cluster.
        EndpointCount:
          $ref: '#/components/schemas/Integer'
          description: The number of Redshift-managed VPC endpoints created for the authorization.
      description: Describes an endpoint authorization for authorizing Redshift-managed VPC endpoint access to a cluster across Amazon Web Services accounts.
    String:
      type: string
      maxLength: 2147483647
    EndpointAuthorizationsPerClusterLimitExceededFault: {}
    EndpointAuthorizationAlreadyExistsFault: {}
    InvalidAuthorizationStateFault: {}
    InvalidClusterStateFault: {}
    AuthorizeSnapshotAccessResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    ClusterSnapshotNotFoundFault: {}
    DependentServiceRequestThrottlingFault: {}
    InvalidClusterSnapshotStateFault: {}
    LimitExceededFault: {}
    BatchDeleteClusterSnapshotsResult:
      type: object
      properties:
        Resources:
          $ref: '#/components/schemas/SnapshotIdentifierList'
          description: 'A list of the snapshot identifiers that were deleted. '
        Errors:
          $ref: '#/components/schemas/BatchSnapshotOperationErrorList'
          description: A list of any errors returned.
    DeleteClusterSnapshotMessage:
      type: object
      required:
        - SnapshotIdentifier
      title: DeleteClusterSnapshotMessage
      properties:
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The unique identifier of the manual snapshot to be deleted.</p> <p>Constraints: Must be the name of an existing snapshot that is in the <code>available</code>, <code>failed</code>, or <code>cancelled</code> state.</p>'
        SnapshotClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The unique identifier of the cluster the snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.</p> <p>Constraints: Must be the name of valid cluster.</p>'
      description: <p/>
    BatchDeleteRequestSizeExceededFault: {}
    BatchModifyClusterSnapshotsOutputMessage:
      type: object
      properties:
        Resources:
          $ref: '#/components/schemas/SnapshotIdentifierList'
          description: A list of the snapshots that were modified.
        Errors:
          $ref: '#/components/schemas/BatchSnapshotOperationErrors'
          description: A list of any errors returned.
    InvalidRetentionPeriodFault: {}
    BatchModifyClusterSnapshotsLimitExceededFault: {}
    ResizeProgressMessage:
      type: object
      properties:
        TargetNodeType:
          $ref: '#/components/schemas/String'
          description: The node type that the cluster will have after the resize operation is complete.
        TargetNumberOfNodes:
          $ref: '#/components/schemas/IntegerOptional'
          description: The number of nodes that the cluster will have after the resize operation is complete.
        TargetClusterType:
          $ref: '#/components/schemas/String'
          description: '<p>The cluster type after the resize operation is complete.</p> <p>Valid Values: <code>multi-node</code> | <code>single-node</code> </p>'
        Status:
          $ref: '#/components/schemas/String'
          description: '<p>The status of the resize operation.</p> <p>Valid Values: <code>NONE</code> | <code>IN_PROGRESS</code> | <code>FAILED</code> | <code>SUCCEEDED</code> | <code>CANCELLING</code> </p>'
        ImportTablesCompleted:
          $ref: '#/components/schemas/ImportTablesCompleted'
          description: '<p>The names of tables that have been completely imported .</p> <p>Valid Values: List of table names.</p>'
        ImportTablesInProgress:
          $ref: '#/components/schemas/ImportTablesInProgress'
          description: '<p>The names of tables that are being currently imported.</p> <p>Valid Values: List of table names.</p>'
        ImportTablesNotStarted:
          $ref: '#/components/schemas/ImportTablesNotStarted'
          description: '<p>The names of tables that have not been yet imported.</p> <p>Valid Values: List of table names</p>'
        AvgResizeRateInMegaBytesPerSecond:
          $ref: '#/components/schemas/DoubleOptional'
          description: 'The average rate of the resize operation over the last few minutes, measured in megabytes per second. After the resize operation completes, this value shows the average rate of the entire resize operation.'
        TotalResizeDataInMegaBytes:
          $ref: '#/components/schemas/LongOptional'
          description: 'The estimated total amount of data, in megabytes, on the cluster before the resize operation began.'
        ProgressInMegaBytes:
          $ref: '#/components/schemas/LongOptional'
          description: 'While the resize operation is in progress, this value shows the current amount of data, in megabytes, that has been processed so far. When the resize operation is complete, this value shows the total amount of data, in megabytes, on the cluster, which may be more or less than TotalResizeDataInMegaBytes (the estimated total amount of data before resize).'
        ElapsedTimeInSeconds:
          $ref: '#/components/schemas/LongOptional'
          description: 'The amount of seconds that have elapsed since the resize operation began. After the resize operation completes, this value shows the total actual time, in seconds, for the resize operation.'
        EstimatedTimeToCompletionInSeconds:
          $ref: '#/components/schemas/LongOptional'
          description: 'The estimated time remaining, in seconds, until the resize operation is complete. This value is calculated based on the average resize rate and the estimated amount of data remaining to be processed. Once the resize operation is complete, this value will be 0.'
        ResizeType:
          $ref: '#/components/schemas/String'
          description: 'An enum with possible values of <code>ClassicResize</code> and <code>ElasticResize</code>. These values describe the type of resize operation being performed. '
        Message:
          $ref: '#/components/schemas/String'
          description: An optional string to provide additional details about the resize action.
        TargetEncryptionType:
          $ref: '#/components/schemas/String'
          description: <p>The type of encryption for the cluster after the resize is complete.</p> <p>Possible values are <code>KMS</code> and <code>None</code>. </p>
        DataTransferProgressPercent:
          $ref: '#/components/schemas/DoubleOptional'
          description: The percent of data transferred from source cluster to target cluster.
      description: Describes the result of a cluster resize operation.
    ResizeNotFoundFault: {}
    CopyClusterSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    ClusterSnapshotAlreadyExistsFault: {}
    ClusterSnapshotQuotaExceededFault: {}
    CreateAuthenticationProfileResult:
      type: object
      properties:
        AuthenticationProfileName:
          $ref: '#/components/schemas/AuthenticationProfileNameString'
          description: The name of the authentication profile that was created.
        AuthenticationProfileContent:
          $ref: '#/components/schemas/String'
          description: The content of the authentication profile in JSON format.
    AuthenticationProfileAlreadyExistsFault: {}
    AuthenticationProfileQuotaExceededFault: {}
    InvalidAuthenticationProfileRequestFault: {}
    CreateClusterResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/String'
          description: 'The key, or name, for the resource tag.'
        Value:
          $ref: '#/components/schemas/String'
          description: The value for the resource tag.
      description: A tag consisting of a name/value pair for a resource.
    ClusterAlreadyExistsFault: {}
    InsufficientClusterCapacityFault: {}
    ClusterParameterGroupNotFoundFault: {}
    ClusterQuotaExceededFault: {}
    NumberOfNodesQuotaExceededFault: {}
    NumberOfNodesPerClusterLimitExceededFault: {}
    ClusterSubnetGroupNotFoundFault: {}
    InvalidVPCNetworkStateFault: {}
    InvalidClusterSubnetGroupStateFault: {}
    InvalidSubnet: {}
    UnauthorizedOperation: {}
    HsmClientCertificateNotFoundFault: {}
    HsmConfigurationNotFoundFault: {}
    InvalidElasticIpFault: {}
    TagLimitExceededFault: {}
    InvalidTagFault: {}
    InvalidClusterTrackFault: {}
    SnapshotScheduleNotFoundFault: {}
    CreateClusterParameterGroupResult:
      type: object
      properties:
        ClusterParameterGroup:
          $ref: '#/components/schemas/ClusterParameterGroup'
    ClusterParameterGroupQuotaExceededFault: {}
    ClusterParameterGroupAlreadyExistsFault: {}
    CreateClusterSecurityGroupResult:
      type: object
      properties:
        ClusterSecurityGroup:
          $ref: '#/components/schemas/ClusterSecurityGroup'
    ClusterSecurityGroupAlreadyExistsFault: {}
    ClusterSecurityGroupQuotaExceededFault: {}
    CreateClusterSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    CreateClusterSubnetGroupResult:
      type: object
      properties:
        ClusterSubnetGroup:
          $ref: '#/components/schemas/ClusterSubnetGroup'
    ClusterSubnetGroupAlreadyExistsFault: {}
    ClusterSubnetGroupQuotaExceededFault: {}
    ClusterSubnetQuotaExceededFault: {}
    EndpointAccess:
      type: object
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The cluster identifier of the cluster associated with the endpoint.
        ResourceOwner:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID of the owner of the cluster.
        SubnetGroupName:
          $ref: '#/components/schemas/String'
          description: The subnet group name where Amazon Redshift chooses to deploy the endpoint.
        EndpointStatus:
          $ref: '#/components/schemas/String'
          description: The status of the endpoint.
        EndpointName:
          $ref: '#/components/schemas/String'
          description: The name of the endpoint.
        EndpointCreateTime:
          $ref: '#/components/schemas/TStamp'
          description: The time (UTC) that the endpoint was created.
        Port:
          $ref: '#/components/schemas/Integer'
          description: The port number on which the cluster accepts incoming connections.
        Address:
          $ref: '#/components/schemas/String'
          description: The DNS address of the endpoint.
        VpcSecurityGroups:
          $ref: '#/components/schemas/VpcSecurityGroupMembershipList'
          description: The security groups associated with the endpoint.
        VpcEndpoint:
          $ref: '#/components/schemas/VpcEndpoint'
      description: Describes a Redshift-managed VPC endpoint.
    AccessToClusterDeniedFault: {}
    EndpointsPerClusterLimitExceededFault: {}
    EndpointsPerAuthorizationLimitExceededFault: {}
    EndpointAlreadyExistsFault: {}
    CreateEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    EventSubscriptionQuotaExceededFault: {}
    SubscriptionAlreadyExistFault: {}
    SNSInvalidTopicFault: {}
    SNSNoAuthorizationFault: {}
    SNSTopicArnNotFoundFault: {}
    SubscriptionEventIdNotFoundFault: {}
    SubscriptionCategoryNotFoundFault: {}
    SubscriptionSeverityNotFoundFault: {}
    SourceNotFoundFault: {}
    CreateHsmClientCertificateResult:
      type: object
      properties:
        HsmClientCertificate:
          $ref: '#/components/schemas/HsmClientCertificate'
    HsmClientCertificateAlreadyExistsFault: {}
    HsmClientCertificateQuotaExceededFault: {}
    CreateHsmConfigurationResult:
      type: object
      properties:
        HsmConfiguration:
          $ref: '#/components/schemas/HsmConfiguration'
    HsmConfigurationAlreadyExistsFault: {}
    HsmConfigurationQuotaExceededFault: {}
    ScheduledAction:
      type: object
      properties:
        ScheduledActionName:
          $ref: '#/components/schemas/String'
          description: 'The name of the scheduled action. '
        TargetAction:
          $ref: '#/components/schemas/ScheduledActionType'
          description: '<p>A JSON format string of the Amazon Redshift API operation with input parameters. </p> <p>"<code>{\"ResizeCluster\":{\"NodeType\":\"ds2.8xlarge\",\"ClusterIdentifier\":\"my-test-cluster\",\"NumberOfNodes\":3}}</code>". </p>'
        Schedule:
          $ref: '#/components/schemas/String'
          description: '<p>The schedule for a one-time (at format) or recurring (cron format) scheduled action. Schedule invocations must be separated by at least one hour.</p> <p>Format of at expressions is "<code>at(yyyy-mm-ddThh:mm:ss)</code>". For example, "<code>at(2016-03-04T17:27:00)</code>".</p> <p>Format of cron expressions is "<code>cron(Minutes Hours Day-of-month Month Day-of-week Year)</code>". For example, "<code>cron(0 10 ? * MON *)</code>". For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions">Cron Expressions</a> in the <i>Amazon CloudWatch Events User Guide</i>.</p>'
        IamRole:
          $ref: '#/components/schemas/String'
          description: 'The IAM role to assume to run the scheduled action. This IAM role must have permission to run the Amazon Redshift API operation in the scheduled action. This IAM role must allow the Amazon Redshift scheduler (Principal scheduler.redshift.amazonaws.com) to assume permissions on your behalf. For more information about the IAM role to use with the Amazon Redshift scheduler, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html">Using Identity-Based Policies for Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
        ScheduledActionDescription:
          $ref: '#/components/schemas/String'
          description: 'The description of the scheduled action. '
        State:
          $ref: '#/components/schemas/ScheduledActionState'
          description: 'The state of the scheduled action. For example, <code>DISABLED</code>. '
        NextInvocations:
          $ref: '#/components/schemas/ScheduledActionTimeList'
          description: 'List of times when the scheduled action will run. '
        StartTime:
          $ref: '#/components/schemas/TStamp'
          description: 'The start time in UTC when the schedule is active. Before this time, the scheduled action does not trigger. '
        EndTime:
          $ref: '#/components/schemas/TStamp'
          description: 'The end time in UTC when the schedule is no longer active. After this time, the scheduled action does not trigger. '
      description: 'Describes a scheduled action. You can use a scheduled action to trigger some Amazon Redshift API operations on a schedule. For information about which API operations can be scheduled, see <a>ScheduledActionType</a>. '
    ResizeClusterMessage:
      type: object
      required:
        - ClusterIdentifier
      title: ResizeClusterMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The unique identifier for the cluster to resize.
        ClusterType:
          $ref: '#/components/schemas/String'
          description: The new cluster type for the specified cluster.
        NodeType:
          $ref: '#/components/schemas/String'
          description: 'The new node type for the nodes you are adding. If not specified, the cluster''s current node type is used.'
        NumberOfNodes:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The new number of nodes for the cluster. If not specified, the cluster''s current number of nodes is used.'
        Classic:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'A boolean value indicating whether the resize operation is using the classic resize process. If you don''t provide this parameter or set the value to <code>false</code>, the resize type is elastic. '
      description: 'Describes a resize cluster operation. For example, a scheduled action to run the <code>ResizeCluster</code> API operation. '
    PauseClusterMessage:
      type: object
      required:
        - ClusterIdentifier
      title: PauseClusterMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the cluster to be paused.
      description: 'Describes a pause cluster operation. For example, a scheduled action to run the <code>PauseCluster</code> API operation. '
    ResumeClusterMessage:
      type: object
      required:
        - ClusterIdentifier
      title: ResumeClusterMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the cluster to be resumed.
      description: 'Describes a resume cluster operation. For example, a scheduled action to run the <code>ResumeCluster</code> API operation. '
    ScheduledActionAlreadyExistsFault: {}
    ScheduledActionQuotaExceededFault: {}
    ScheduledActionTypeUnsupportedFault: {}
    InvalidScheduleFault: {}
    InvalidScheduledActionFault: {}
    CreateSnapshotCopyGrantResult:
      type: object
      properties:
        SnapshotCopyGrant:
          $ref: '#/components/schemas/SnapshotCopyGrant'
    SnapshotCopyGrantAlreadyExistsFault: {}
    SnapshotCopyGrantQuotaExceededFault: {}
    SnapshotSchedule:
      type: object
      properties:
        ScheduleDefinitions:
          $ref: '#/components/schemas/ScheduleDefinitionList'
          description: A list of ScheduleDefinitions.
        ScheduleIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the schedule.
        ScheduleDescription:
          $ref: '#/components/schemas/String'
          description: The description of the schedule.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: An optional set of tags describing the schedule.
        NextInvocations:
          $ref: '#/components/schemas/ScheduledSnapshotTimeList'
          description: <p/>
        AssociatedClusterCount:
          $ref: '#/components/schemas/IntegerOptional'
          description: The number of clusters associated with the schedule.
        AssociatedClusters:
          $ref: '#/components/schemas/AssociatedClusterList'
          description: A list of clusters associated with the schedule. A maximum of 100 clusters is returned.
      description: 'Describes a snapshot schedule. You can set a regular interval for creating snapshots of a cluster. You can also schedule snapshots for specific dates. '
    SnapshotScheduleAlreadyExistsFault: {}
    SnapshotScheduleQuotaExceededFault: {}
    ScheduleDefinitionTypeUnsupportedFault: {}
    ResourceNotFoundFault: {}
    UsageLimit:
      type: object
      properties:
        UsageLimitId:
          $ref: '#/components/schemas/String'
          description: The identifier of the usage limit.
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the cluster with a usage limit.
        FeatureType:
          $ref: '#/components/schemas/UsageLimitFeatureType'
          description: The Amazon Redshift feature to which the limit applies.
        LimitType:
          $ref: '#/components/schemas/UsageLimitLimitType'
          description: 'The type of limit. Depending on the feature type, this can be based on a time duration or data size.'
        Amount:
          $ref: '#/components/schemas/Long'
          description: 'The limit amount. If time-based, this amount is in minutes. If data-based, this amount is in terabytes (TB).'
        Period:
          $ref: '#/components/schemas/UsageLimitPeriod'
          description: 'The time period that the amount applies to. A <code>weekly</code> period begins on Sunday. The default is <code>monthly</code>. '
        BreachAction:
          $ref: '#/components/schemas/UsageLimitBreachAction'
          description: '<p>The action that Amazon Redshift takes when the limit is reached. Possible values are: </p> <ul> <li> <p> <b>log</b> - To log an event in a system table. The default is log.</p> </li> <li> <p> <b>emit-metric</b> - To emit CloudWatch metrics.</p> </li> <li> <p> <b>disable</b> - To disable the feature until the next usage period begins.</p> </li> </ul>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag instances.
      description: 'Describes a usage limit object for a cluster. '
    UsageLimitAlreadyExistsFault: {}
    InvalidUsageLimitFault: {}
    DeleteAuthenticationProfileResult:
      type: object
      properties:
        AuthenticationProfileName:
          $ref: '#/components/schemas/AuthenticationProfileNameString'
          description: The name of the authentication profile that was deleted.
    AuthenticationProfileNotFoundFault: {}
    DeleteClusterResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    InvalidClusterParameterGroupStateFault: {}
    DeleteClusterSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    InvalidClusterSubnetStateFault: {}
    InvalidEndpointStateFault: {}
    EndpointNotFoundFault: {}
    SubscriptionNotFoundFault: {}
    InvalidSubscriptionStateFault: {}
    InvalidHsmClientCertificateStateFault: {}
    InvalidHsmConfigurationStateFault: {}
    ScheduledActionNotFoundFault: {}
    InvalidSnapshotCopyGrantStateFault: {}
    SnapshotCopyGrantNotFoundFault: {}
    InvalidClusterSnapshotScheduleStateFault: {}
    UsageLimitNotFoundFault: {}
    AccountAttributeList:
      type: object
      properties:
        AccountAttributes:
          $ref: '#/components/schemas/AttributeList'
          description: A list of attributes assigned to an account.
    DescribeAuthenticationProfilesResult:
      type: object
      properties:
        AuthenticationProfiles:
          $ref: '#/components/schemas/AuthenticationProfileList'
          description: The list of authentication profiles.
    ClusterDbRevisionsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A string representing the starting point for the next set of revisions. If a value is returned in a response, you can retrieve the next set of revisions by providing the value in the <code>marker</code> parameter and retrying the command. If the <code>marker</code> field is empty, all revisions have already been returned.'
        ClusterDbRevisions:
          $ref: '#/components/schemas/ClusterDbRevisionsList'
          description: A list of revisions.
    ClusterParameterGroupsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        ParameterGroups:
          $ref: '#/components/schemas/ParameterGroupList'
          description: 'A list of <a>ClusterParameterGroup</a> instances. Each instance describes one cluster parameter group. '
      description: 'Contains the output from the <a>DescribeClusterParameterGroups</a> action. '
    ClusterParameterGroupDetails:
      type: object
      properties:
        Parameters:
          $ref: '#/components/schemas/ParametersList'
          description: 'A list of <a>Parameter</a> instances. Each instance lists the parameters of one cluster parameter group. '
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
      description: 'Contains the output from the <a>DescribeClusterParameters</a> action. '
    ClusterSecurityGroupMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        ClusterSecurityGroups:
          $ref: '#/components/schemas/ClusterSecurityGroups'
          description: 'A list of <a>ClusterSecurityGroup</a> instances. '
      description: <p/>
    SnapshotMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        Snapshots:
          $ref: '#/components/schemas/SnapshotList'
          description: 'A list of <a>Snapshot</a> instances. '
      description: 'Contains the output from the <a>DescribeClusterSnapshots</a> action. '
    SnapshotSortingEntity:
      type: object
      required:
        - Attribute
      properties:
        Attribute:
          $ref: '#/components/schemas/SnapshotAttributeToSortBy'
          description: The category for sorting the snapshots.
        SortOrder:
          $ref: '#/components/schemas/SortByOrder'
          description: The order for listing the attributes.
      description: Describes a sorting entity
    ClusterSubnetGroupMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        ClusterSubnetGroups:
          $ref: '#/components/schemas/ClusterSubnetGroups'
          description: 'A list of <a>ClusterSubnetGroup</a> instances. '
      description: 'Contains the output from the <a>DescribeClusterSubnetGroups</a> action. '
    TrackListMessage:
      type: object
      properties:
        MaintenanceTracks:
          $ref: '#/components/schemas/TrackList'
          description: 'A list of maintenance tracks output by the <code>DescribeClusterTracks</code> operation. '
        Marker:
          $ref: '#/components/schemas/String'
          description: The starting point to return a set of response tracklist records. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request.
    ClusterVersionsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        ClusterVersions:
          $ref: '#/components/schemas/ClusterVersionList'
          description: 'A list of <code>Version</code> elements. '
      description: 'Contains the output from the <a>DescribeClusterVersions</a> action. '
    ClustersMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        Clusters:
          $ref: '#/components/schemas/ClusterList'
          description: 'A list of <code>Cluster</code> objects, where each object describes one cluster. '
      description: 'Contains the output from the <a>DescribeClusters</a> action. '
    DescribeDataSharesResult:
      type: object
      properties:
        DataShares:
          $ref: '#/components/schemas/DataShareList'
          description: The results returned from describing datashares.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeDataShares</a> request exceed the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
    DescribeDataSharesForConsumerResult:
      type: object
      properties:
        DataShares:
          $ref: '#/components/schemas/DataShareList'
          description: Shows the results of datashares available for consumers.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeDataSharesForConsumer</a> request exceed the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
    DescribeDataSharesForProducerResult:
      type: object
      properties:
        DataShares:
          $ref: '#/components/schemas/DataShareList'
          description: Shows the results of datashares available for producers.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeDataSharesForProducer</a> request exceed the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
    DescribeDefaultClusterParametersResult:
      type: object
      properties:
        DefaultClusterParameters:
          $ref: '#/components/schemas/DefaultClusterParameters'
    EndpointAccessList:
      type: object
      properties:
        EndpointAccessList:
          $ref: '#/components/schemas/EndpointAccesses'
          description: The list of endpoints with access to the cluster.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional pagination token provided by a previous <code>DescribeEndpointAccess</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter.'
    EndpointAuthorizationList:
      type: object
      properties:
        EndpointAuthorizationList:
          $ref: '#/components/schemas/EndpointAuthorizations'
          description: The authorizations to an endpoint.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional pagination token provided by a previous <code>DescribeEndpointAuthorization</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter.'
    EventCategoriesMessage:
      type: object
      properties:
        EventCategoriesMapList:
          $ref: '#/components/schemas/EventCategoriesMapList'
          description: A list of event categories descriptions.
      description: <p/>
    EventSubscriptionsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        EventSubscriptionsList:
          $ref: '#/components/schemas/EventSubscriptionsList'
          description: A list of event subscriptions.
      description: <p/>
    EventsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        Events:
          $ref: '#/components/schemas/EventList'
          description: 'A list of <code>Event</code> instances. '
      description: <p/>
    HsmClientCertificateMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        HsmClientCertificates:
          $ref: '#/components/schemas/HsmClientCertificateList'
          description: A list of the identifiers for one or more HSM client certificates used by Amazon Redshift clusters to store and retrieve database encryption keys in an HSM.
      description: <p/>
    HsmConfigurationMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        HsmConfigurations:
          $ref: '#/components/schemas/HsmConfigurationList'
          description: A list of <code>HsmConfiguration</code> objects.
      description: <p/>
    LoggingStatus:
      type: object
      properties:
        LoggingEnabled:
          $ref: '#/components/schemas/Boolean'
          description: ' <code>true</code> if logging is on, <code>false</code> if logging is off.'
        BucketName:
          $ref: '#/components/schemas/String'
          description: The name of the S3 bucket where the log files are stored.
        S3KeyPrefix:
          $ref: '#/components/schemas/String'
          description: The prefix applied to the log file names.
        LastSuccessfulDeliveryTime:
          $ref: '#/components/schemas/TStamp'
          description: The last time that logs were delivered.
        LastFailureTime:
          $ref: '#/components/schemas/TStamp'
          description: The last time when logs failed to be delivered.
        LastFailureMessage:
          $ref: '#/components/schemas/String'
          description: The message indicating that logs failed to be delivered.
      description: Describes the status of logging for a cluster.
    NodeConfigurationOptionsMessage:
      type: object
      properties:
        NodeConfigurationOptionList:
          $ref: '#/components/schemas/NodeConfigurationOptionList'
          description: A list of valid node configurations.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
    NodeConfigurationOptionsFilter:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/NodeConfigurationOptionsFilterName'
          description: The name of the element to filter.
        Operator:
          $ref: '#/components/schemas/OperatorType'
          description: 'The filter operator. If filter Name is NodeType only the ''in'' operator is supported. Provide one value to evaluate for ''eq'', ''lt'', ''le'', ''gt'', and ''ge''. Provide two values to evaluate for ''between''. Provide a list of values for ''in''.'
        Values:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - xml:
                name: Value
              description: 'List of values. Compare Name using Operator to Values. If filter Name is NumberOfNodes, then values can range from 0 to 200. If filter Name is EstimatedDiskUtilizationPercent, then values can range from 0 to 100. For example, filter NumberOfNodes (name) GT (operator) 3 (values).'
      description: A set of elements to filter the returned node configurations.
    AccessToSnapshotDeniedFault: {}
    OrderableClusterOptionsMessage:
      type: object
      properties:
        OrderableClusterOptions:
          $ref: '#/components/schemas/OrderableClusterOptionsList'
          description: An <code>OrderableClusterOption</code> structure containing information about orderable options for the cluster.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
      description: 'Contains the output from the <a>DescribeOrderableClusterOptions</a> action. '
    DescribePartnersOutputMessage:
      type: object
      properties:
        PartnerIntegrationInfoList:
          $ref: '#/components/schemas/PartnerIntegrationInfoList'
          description: A list of partner integrations.
    ReservedNodeOfferingsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        ReservedNodeOfferings:
          $ref: '#/components/schemas/ReservedNodeOfferingList'
          description: A list of <code>ReservedNodeOffering</code> objects.
      description: <p/>
    ReservedNodesMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        ReservedNodes:
          $ref: '#/components/schemas/ReservedNodeList'
          description: The list of <code>ReservedNode</code> objects.
      description: <p/>
    ScheduledActionsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeScheduledActions</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
        ScheduledActions:
          $ref: '#/components/schemas/ScheduledActionList'
          description: 'List of retrieved scheduled actions. '
    ScheduledActionFilter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: '#/components/schemas/ScheduledActionFilterName'
          description: 'The type of element to filter. '
        Values:
          $ref: '#/components/schemas/ValueStringList'
          description: 'List of values. Compare if the value (of type defined by <code>Name</code>) equals an item in the list of scheduled actions. '
      description: 'A set of elements to filter the returned scheduled actions. '
    SnapshotCopyGrantMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: '<p>An optional parameter that specifies the starting point to return a set of response records. When the results of a <code>DescribeSnapshotCopyGrant</code> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. </p> <p>Constraints: You can specify either the <b>SnapshotCopyGrantName</b> parameter or the <b>Marker</b> parameter, but not both. </p>'
        SnapshotCopyGrants:
          $ref: '#/components/schemas/SnapshotCopyGrantList'
          description: The list of <code>SnapshotCopyGrant</code> objects.
      description: <p/>
    DescribeSnapshotSchedulesOutputMessage:
      type: object
      properties:
        SnapshotSchedules:
          $ref: '#/components/schemas/SnapshotScheduleList'
          description: A list of SnapshotSchedules.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>marker</code> parameter and retrying the command. If the <code>marker</code> field is empty, all response records have been retrieved for the request.'
    CustomerStorageMessage:
      type: object
      properties:
        TotalBackupSizeInMegaBytes:
          $ref: '#/components/schemas/Double'
          description: The total amount of storage currently used for snapshots.
        TotalProvisionedStorageInMegaBytes:
          $ref: '#/components/schemas/Double'
          description: The total amount of storage currently provisioned.
    TableRestoreStatusMessage:
      type: object
      properties:
        TableRestoreStatusDetails:
          $ref: '#/components/schemas/TableRestoreStatusList'
          description: A list of status details for one or more table restore requests.
        Marker:
          $ref: '#/components/schemas/String'
          description: A pagination token that can be used in a subsequent <a>DescribeTableRestoreStatus</a> request.
      description: <p/>
    TableRestoreNotFoundFault: {}
    TaggedResourceListMessage:
      type: object
      properties:
        TaggedResources:
          $ref: '#/components/schemas/TaggedResourceList'
          description: A list of tags with their associated resources.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
      description: <p/>
    UsageLimitList:
      type: object
      properties:
        UsageLimits:
          $ref: '#/components/schemas/UsageLimits'
          description: 'Contains the output from the <a>DescribeUsageLimits</a> action. '
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
    DisableSnapshotCopyResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    SnapshotCopyAlreadyDisabledFault: {}
    BucketNotFoundFault: {}
    InsufficientS3BucketPolicyFault: {}
    InvalidS3KeyPrefixFault: {}
    InvalidS3BucketNameFault: {}
    EnableSnapshotCopyResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    IncompatibleOrderableOptions: {}
    CopyToRegionDisabledFault: {}
    SnapshotCopyAlreadyEnabledFault: {}
    UnknownSnapshotCopyRegionFault: {}
    ClusterCredentials:
      type: object
      properties:
        DbUser:
          $ref: '#/components/schemas/String'
          description: 'A database user name that is authorized to log on to the database <code>DbName</code> using the password <code>DbPassword</code>. If the specified DbUser exists in the database, the new user name has the same database privileges as the the user named in DbUser. By default, the user is added to PUBLIC. If the <code>DbGroups</code> parameter is specifed, <code>DbUser</code> is added to the listed groups for any sessions created using these credentials.'
        DbPassword:
          $ref: '#/components/schemas/SensitiveString'
          description: 'A temporary password that authorizes the user name returned by <code>DbUser</code> to log on to the database <code>DbName</code>. '
        Expiration:
          $ref: '#/components/schemas/TStamp'
          description: The date and time the password in <code>DbPassword</code> expires.
      description: 'Temporary credentials with authorization to log on to an Amazon Redshift database. '
    GetReservedNodeExchangeOfferingsOutputMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point for returning a set of response records. When the results of a <code>GetReservedNodeExchangeOfferings</code> request exceed the value specified in MaxRecords, Amazon Redshift returns a value in the marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the marker parameter and retrying the request. '
        ReservedNodeOfferings:
          $ref: '#/components/schemas/ReservedNodeOfferingList'
          description: Returns an array of <a>ReservedNodeOffering</a> objects.
    ModifyAquaOutputMessage:
      type: object
      properties:
        AquaConfiguration:
          $ref: '#/components/schemas/AquaConfiguration'
          description: 'The updated AQUA configuration of the cluster. '
    ModifyAuthenticationProfileResult:
      type: object
      properties:
        AuthenticationProfileName:
          $ref: '#/components/schemas/AuthenticationProfileNameString'
          description: The name of the authentication profile that was replaced.
        AuthenticationProfileContent:
          $ref: '#/components/schemas/String'
          description: The updated content of the authentication profile in JSON format.
    ModifyClusterResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    UnsupportedOptionFault: {}
    TableLimitExceededFault: {}
    ModifyClusterDbRevisionResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    ClusterOnLatestRevisionFault: {}
    ModifyClusterIamRolesResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    ModifyClusterMaintenanceResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    ClusterParameterGroupNameMessage:
      type: object
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cluster parameter group.
        ParameterGroupStatus:
          $ref: '#/components/schemas/String'
          description: 'The status of the parameter group. For example, if you made a change to a parameter group name-value pair, then the change could be pending a reboot of an associated cluster.'
      description: <p/>
    Parameter:
      type: object
      properties:
        ParameterName:
          $ref: '#/components/schemas/String'
          description: The name of the parameter.
        ParameterValue:
          $ref: '#/components/schemas/String'
          description: 'The value of the parameter. If <code>ParameterName</code> is <code>wlm_json_configuration</code>, then the maximum size of <code>ParameterValue</code> is 8000 characters.'
        Description:
          $ref: '#/components/schemas/String'
          description: A description of the parameter.
        Source:
          $ref: '#/components/schemas/String'
          description: 'The source of the parameter value, such as "engine-default" or "user".'
        DataType:
          $ref: '#/components/schemas/String'
          description: The data type of the parameter.
        AllowedValues:
          $ref: '#/components/schemas/String'
          description: The valid range of values for the parameter.
        ApplyType:
          $ref: '#/components/schemas/ParameterApplyType'
          description: 'Specifies how to apply the WLM configuration parameter. Some properties can be applied dynamically, while other properties require that any associated clusters be rebooted for the configuration changes to be applied. For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.'
        IsModifiable:
          $ref: '#/components/schemas/Boolean'
          description: 'If <code>true</code>, the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. '
        MinimumEngineVersion:
          $ref: '#/components/schemas/String'
          description: The earliest engine version to which the parameter can apply.
      description: Describes a parameter in a cluster parameter group.
    ModifyClusterSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    ModifyClusterSubnetGroupResult:
      type: object
      properties:
        ClusterSubnetGroup:
          $ref: '#/components/schemas/ClusterSubnetGroup'
    SubnetAlreadyInUse: {}
    ModifyEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    ModifySnapshotCopyRetentionPeriodResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    SnapshotCopyDisabledFault: {}
    SnapshotScheduleUpdateInProgressFault: {}
    PauseClusterResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    PurchaseReservedNodeOfferingResult:
      type: object
      properties:
        ReservedNode:
          $ref: '#/components/schemas/ReservedNode'
    ReservedNodeQuotaExceededFault: {}
    RebootClusterResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    ResizeClusterResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    RestoreFromClusterSnapshotResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    InvalidRestoreFault: {}
    RestoreTableFromClusterSnapshotResult:
      type: object
      properties:
        TableRestoreStatus:
          $ref: '#/components/schemas/TableRestoreStatus'
    InProgressTableRestoreQuotaExceededFault: {}
    InvalidTableRestoreArgumentFault: {}
    ResumeClusterResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    RevokeClusterSecurityGroupIngressResult:
      type: object
      properties:
        ClusterSecurityGroup:
          $ref: '#/components/schemas/ClusterSecurityGroup'
    AuthorizationNotFoundFault: {}
    EndpointAuthorizationNotFoundFault: {}
    RevokeSnapshotAccessResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    RotateEncryptionKeyResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    AcceptReservedNodeExchangeInputMessage:
      type: object
      required:
        - ReservedNodeId
        - TargetReservedNodeOfferingId
      title: AcceptReservedNodeExchangeInputMessage
      properties:
        ReservedNodeId:
          $ref: '#/components/schemas/String'
          description: A string representing the node identifier of the DC1 Reserved Node to be exchanged.
        TargetReservedNodeOfferingId:
          $ref: '#/components/schemas/String'
          description: 'The unique identifier of the DC2 Reserved Node offering to be used for the exchange. You can obtain the value for the parameter by calling <a>GetReservedNodeExchangeOfferings</a> '
    ReservedNode:
      type: object
      properties:
        ReservedNodeId:
          $ref: '#/components/schemas/String'
          description: The unique identifier for the reservation.
        ReservedNodeOfferingId:
          $ref: '#/components/schemas/String'
          description: The identifier for the reserved node offering.
        NodeType:
          $ref: '#/components/schemas/String'
          description: The node type of the reserved node.
        StartTime:
          $ref: '#/components/schemas/TStamp'
          description: The time the reservation started. You purchase a reserved node offering for a duration. This is the start time of that duration.
        Duration:
          $ref: '#/components/schemas/Integer'
          description: The duration of the node reservation in seconds.
        FixedPrice:
          $ref: '#/components/schemas/Double'
          description: The fixed cost Amazon Redshift charges you for this reserved node.
        UsagePrice:
          $ref: '#/components/schemas/Double'
          description: The hourly rate Amazon Redshift charges you for this reserved node.
        CurrencyCode:
          $ref: '#/components/schemas/String'
          description: The currency code for the reserved cluster.
        NodeCount:
          $ref: '#/components/schemas/Integer'
          description: The number of reserved compute nodes.
        State:
          $ref: '#/components/schemas/String'
          description: '<p>The state of the reserved compute node.</p> <p>Possible Values:</p> <ul> <li> <p>pending-payment-This reserved node has recently been purchased, and the sale has been approved, but payment has not yet been confirmed.</p> </li> <li> <p>active-This reserved node is owned by the caller and is available for use.</p> </li> <li> <p>payment-failed-Payment failed for the purchase attempt.</p> </li> <li> <p>retired-The reserved node is no longer available. </p> </li> <li> <p>exchanging-The owner is exchanging the reserved node for another reserved node.</p> </li> </ul>'
        OfferingType:
          $ref: '#/components/schemas/String'
          description: 'The anticipated utilization of the reserved node, as defined in the reserved node offering.'
        RecurringCharges:
          $ref: '#/components/schemas/RecurringChargeList'
          description: The recurring charges for the reserved node.
        ReservedNodeOfferingType:
          $ref: '#/components/schemas/ReservedNodeOfferingType'
          description: <p/>
      description: 'Describes a reserved node. You can call the <a>DescribeReservedNodeOfferings</a> API to obtain the available reserved node offerings. '
    AttributeValueList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AttributeValueTarget'
          - xml:
              name: AttributeValueTarget
    AccountAttribute:
      type: object
      properties:
        AttributeName:
          $ref: '#/components/schemas/String'
          description: The name of the attribute.
        AttributeValues:
          $ref: '#/components/schemas/AttributeValueList'
          description: A list of attribute values.
      description: 'A name value pair that describes an aspect of an account. '
    AttributeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AccountAttribute'
          - xml:
              name: AccountAttribute
    AccountWithRestoreAccess:
      type: object
      properties:
        AccountId:
          $ref: '#/components/schemas/String'
          description: The identifier of an Amazon Web Services account authorized to restore a snapshot.
        AccountAlias:
          $ref: '#/components/schemas/String'
          description: 'The identifier of an Amazon Web Services support account authorized to restore a snapshot. For Amazon Web Services Support, the identifier is <code>amazon-redshift-support</code>. '
      description: Describes an Amazon Web Services account authorized to restore a snapshot.
    AccountsWithRestoreAccessList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AccountWithRestoreAccess'
          - xml:
              name: AccountWithRestoreAccess
    ActionType:
      type: string
      enum:
        - restore-cluster
        - recommend-node-config
        - resize-cluster
    AquaStatus:
      type: string
      enum:
        - enabled
        - disabled
        - applying
    AquaConfigurationStatus:
      type: string
      enum:
        - enabled
        - disabled
        - auto
    AquaConfiguration:
      type: object
      properties:
        AquaStatus:
          $ref: '#/components/schemas/AquaStatus'
          description: <p>The value indicates the status of AQUA on the cluster. Possible values include the following.</p> <ul> <li> <p>enabled - AQUA is enabled.</p> </li> <li> <p>disabled - AQUA is not enabled. </p> </li> <li> <p>applying - AQUA status is being applied. </p> </li> </ul>
        AquaConfigurationStatus:
          $ref: '#/components/schemas/AquaConfigurationStatus'
          description: <p>The value represents how the cluster is configured to use AQUA. Possible values include the following.</p> <ul> <li> <p>enabled - Use AQUA if it is available for the current Amazon Web Services Region and Amazon Redshift node type.</p> </li> <li> <p>disabled - Don't use AQUA. </p> </li> <li> <p>auto - Amazon Redshift determines whether to use AQUA.</p> </li> </ul>
      description: The AQUA (Advanced Query Accelerator) configuration of the cluster.
    BooleanOptional:
      type: boolean
    AssociateDataShareConsumerMessage:
      type: object
      required:
        - DataShareArn
      title: AssociateDataShareConsumerMessage
      properties:
        DataShareArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the datashare that the consumer is to use with the account or the namespace.
        AssociateEntireAccount:
          $ref: '#/components/schemas/BooleanOptional'
          description: A value that specifies whether the datashare is associated with the entire account.
        ConsumerArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the consumer that is associated with the datashare.
    ClusterAssociatedToSchedule:
      type: object
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: <p/>
        ScheduleAssociationState:
          $ref: '#/components/schemas/ScheduleState'
          description: <p/>
      description: <p/>
    AssociatedClusterList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClusterAssociatedToSchedule'
          - xml:
              name: ClusterAssociatedToSchedule
    AttributeNameList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: AttributeName
    AttributeValueTarget:
      type: object
      properties:
        AttributeValue:
          $ref: '#/components/schemas/String'
          description: The value of the attribute.
      description: Describes an attribute value.
    AuthenticationProfileNameString:
      type: string
      pattern: '^[a-zA-Z0-9\-]+$'
      maxLength: 63
    AuthenticationProfile:
      type: object
      properties:
        AuthenticationProfileName:
          $ref: '#/components/schemas/AuthenticationProfileNameString'
          description: The name of the authentication profile.
        AuthenticationProfileContent:
          $ref: '#/components/schemas/String'
          description: The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
      description: Describes an authentication profile.
    AuthenticationProfileList:
      type: array
      items:
        $ref: '#/components/schemas/AuthenticationProfile'
    AuthorizationStatus:
      type: string
      enum:
        - Authorized
        - Revoking
    AuthorizeClusterSecurityGroupIngressMessage:
      type: object
      required:
        - ClusterSecurityGroupName
      title: AuthorizeClusterSecurityGroupIngressMessage
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the security group to which the ingress rule is added.
        CIDRIP:
          $ref: '#/components/schemas/String'
          description: The IP range to be added the Amazon Redshift security group.
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The EC2 security group to be added the Amazon Redshift security group.
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
          description: '<p>The Amazon Web Services account number of the owner of the security group specified by the <i>EC2SecurityGroupName</i> parameter. The Amazon Web Services Access Key ID is not an acceptable value. </p> <p>Example: <code>111122223333</code> </p>'
      description: <p/>
    ClusterSecurityGroup:
      type: object
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cluster security group to which the operation was applied.
        Description:
          $ref: '#/components/schemas/String'
          description: A description of the security group.
        EC2SecurityGroups:
          $ref: '#/components/schemas/EC2SecurityGroupList'
          description: A list of EC2 security groups that are permitted to access clusters associated with this cluster security group.
        IPRanges:
          $ref: '#/components/schemas/IPRangeList'
          description: A list of IP ranges (CIDR blocks) that are permitted to access clusters associated with this cluster security group.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags for the cluster security group.
      description: Describes a security group.
    AuthorizeDataShareMessage:
      type: object
      required:
        - DataShareArn
        - ConsumerIdentifier
      title: AuthorizeDataShareMessage
      properties:
        DataShareArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the datashare that producers are to authorize sharing for.
        ConsumerIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the data consumer that is authorized to access the datashare. This identifier is an AWS account ID.
    VpcIdentifierList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: VpcIdentifier
    AuthorizeEndpointAccessMessage:
      type: object
      required:
        - Account
      title: AuthorizeEndpointAccessMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The cluster identifier of the cluster to grant access to.
        Account:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID to grant access to.
        VpcIds:
          $ref: '#/components/schemas/VpcIdentifierList'
          description: The virtual private cloud (VPC) identifiers to grant access to.
    AuthorizeSnapshotAccessMessage:
      type: object
      required:
        - SnapshotIdentifier
        - AccountWithRestoreAccess
      title: AuthorizeSnapshotAccessMessage
      properties:
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the snapshot the account is authorized to restore.
        SnapshotClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the cluster the snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.
        AccountWithRestoreAccess:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier of the Amazon Web Services account authorized to restore the specified snapshot.</p> <p>To share a snapshot with Amazon Web Services Support, specify amazon-redshift-support.</p>'
      description: <p/>
    Snapshot:
      type: object
      properties:
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: The snapshot identifier that is provided in the request.
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the cluster for which the snapshot was taken.
        SnapshotCreateTime:
          $ref: '#/components/schemas/TStamp'
          description: The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy of the cluster data as of this exact time.
        Status:
          $ref: '#/components/schemas/String'
          description: '<p>The snapshot status. The value of the status depends on the API operation used: </p> <ul> <li> <p> <a>CreateClusterSnapshot</a> and <a>CopyClusterSnapshot</a> returns status as "creating". </p> </li> <li> <p> <a>DescribeClusterSnapshots</a> returns status as "creating", "available", "final snapshot", or "failed".</p> </li> <li> <p> <a>DeleteClusterSnapshot</a> returns status as "deleted".</p> </li> </ul>'
        Port:
          $ref: '#/components/schemas/Integer'
          description: The port that the cluster is listening on.
        AvailabilityZone:
          $ref: '#/components/schemas/String'
          description: The Availability Zone in which the cluster was created.
        ClusterCreateTime:
          $ref: '#/components/schemas/TStamp'
          description: The time (UTC) when the cluster was originally created.
        MasterUsername:
          $ref: '#/components/schemas/String'
          description: The admin user name for the cluster.
        ClusterVersion:
          $ref: '#/components/schemas/String'
          description: The version ID of the Amazon Redshift engine that is running on the cluster.
        EngineFullVersion:
          $ref: '#/components/schemas/String'
          description: 'The cluster version of the cluster used to create the snapshot. For example, 1.0.15503. '
        SnapshotType:
          $ref: '#/components/schemas/String'
          description: 'The snapshot type. Snapshots created using <a>CreateClusterSnapshot</a> and <a>CopyClusterSnapshot</a> are of type "manual". '
        NodeType:
          $ref: '#/components/schemas/String'
          description: The node type of the nodes in the cluster.
        NumberOfNodes:
          $ref: '#/components/schemas/Integer'
          description: The number of nodes in the cluster.
        DBName:
          $ref: '#/components/schemas/String'
          description: The name of the database that was created when the cluster was created.
        VpcId:
          $ref: '#/components/schemas/String'
          description: 'The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise, this field is not in the output.'
        Encrypted:
          $ref: '#/components/schemas/Boolean'
          description: 'If <code>true</code>, the data in the snapshot is encrypted at rest.'
        KmsKeyId:
          $ref: '#/components/schemas/String'
          description: The Key Management Service (KMS) key ID of the encryption key that was used to encrypt data in the cluster from which the snapshot was taken.
        EncryptedWithHSM:
          $ref: '#/components/schemas/Boolean'
          description: A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the source cluster. <code>true</code> indicates that the data is encrypted using HSM keys.
        AccountsWithRestoreAccess:
          $ref: '#/components/schemas/AccountsWithRestoreAccessList'
          description: 'A list of the Amazon Web Services accounts authorized to restore the snapshot. Returns <code>null</code> if no accounts are authorized. Visible only to the snapshot owner. '
        OwnerAccount:
          $ref: '#/components/schemas/String'
          description: 'For manual snapshots, the Amazon Web Services account used to create or copy the snapshot. For automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions, such as sharing a manual snapshot.'
        TotalBackupSizeInMegaBytes:
          $ref: '#/components/schemas/Double'
          description: The size of the complete set of backup data that would be used to restore the cluster.
        ActualIncrementalBackupSizeInMegaBytes:
          $ref: '#/components/schemas/Double'
          description: The size of the incremental backup.
        BackupProgressInMegaBytes:
          $ref: '#/components/schemas/Double'
          description: The number of megabytes that have been transferred to the snapshot backup.
        CurrentBackupRateInMegaBytesPerSecond:
          $ref: '#/components/schemas/Double'
          description: 'The number of megabytes per second being transferred to the snapshot backup. Returns <code>0</code> for a completed backup. '
        EstimatedSecondsToCompletion:
          $ref: '#/components/schemas/Long'
          description: 'The estimate of the time remaining before the snapshot backup will complete. Returns <code>0</code> for a completed backup. '
        ElapsedTimeInSeconds:
          $ref: '#/components/schemas/Long'
          description: 'The amount of time an in-progress snapshot backup has been running, or the amount of time it took a completed backup to finish.'
        SourceRegion:
          $ref: '#/components/schemas/String'
          description: The source region from which the snapshot was copied.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags for the cluster snapshot.
        RestorableNodeTypes:
          $ref: '#/components/schemas/RestorableNodeTypeList'
          description: The list of node types that this cluster snapshot is able to restore into.
        EnhancedVpcRouting:
          $ref: '#/components/schemas/Boolean'
          description: '<p>An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</p> <p>If this option is <code>true</code>, enhanced VPC routing is enabled. </p> <p>Default: false</p>'
        MaintenanceTrackName:
          $ref: '#/components/schemas/String'
          description: The name of the maintenance track for the snapshot.
        ManualSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely. </p> <p>The value must be either -1 or an integer between 1 and 3,653.</p>'
        ManualSnapshotRemainingDays:
          $ref: '#/components/schemas/IntegerOptional'
          description: The number of days until a manual snapshot will pass its retention period.
        SnapshotRetentionStartTime:
          $ref: '#/components/schemas/TStamp'
          description: A timestamp representing the start of the retention period for the snapshot.
      description: Describes a snapshot.
    SupportedPlatformsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SupportedPlatform'
          - xml:
              name: SupportedPlatform
    AvailabilityZone:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the availability zone.
        SupportedPlatforms:
          $ref: '#/components/schemas/SupportedPlatformsList'
          description: <p/>
      description: Describes an availability zone.
    AvailabilityZoneList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          - xml:
              name: AvailabilityZone
    DeleteClusterSnapshotMessageList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DeleteClusterSnapshotMessage'
          - xml:
              name: DeleteClusterSnapshotMessage
    BatchDeleteClusterSnapshotsRequest:
      type: object
      required:
        - Identifiers
      title: BatchDeleteClusterSnapshotsRequest
      properties:
        Identifiers:
          $ref: '#/components/schemas/DeleteClusterSnapshotMessageList'
          description: A list of identifiers for the snapshots that you want to delete.
    SnapshotIdentifierList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: String
    BatchSnapshotOperationErrorList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SnapshotErrorMessage'
          - xml:
              name: SnapshotErrorMessage
    IntegerOptional:
      type: integer
    Boolean:
      type: boolean
    BatchModifyClusterSnapshotsMessage:
      type: object
      required:
        - SnapshotIdentifierList
      title: BatchModifyClusterSnapshotsMessage
      properties:
        SnapshotIdentifierList:
          $ref: '#/components/schemas/SnapshotIdentifierList'
          description: A list of snapshot identifiers you want to modify.
        ManualSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days that a manual snapshot is retained. If you specify the value -1, the manual snapshot is retained indefinitely.</p> <p>The number must be either -1 or an integer between 1 and 3,653.</p> <p>If you decrease the manual snapshot retention period from its current value, existing manual snapshots that fall outside of the new retention period will return an error. If you want to suppress the errors and delete the snapshots, use the force option. </p>'
        Force:
          $ref: '#/components/schemas/Boolean'
          description: 'A boolean value indicating whether to override an exception if the retention period has passed. '
    BatchSnapshotOperationErrors:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SnapshotErrorMessage'
          - xml:
              name: SnapshotErrorMessage
    SnapshotErrorMessage:
      type: object
      properties:
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the snapshot returning the error.
        SnapshotClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the cluster.
        FailureCode:
          $ref: '#/components/schemas/String'
          description: The failure code for the error.
        FailureReason:
          $ref: '#/components/schemas/String'
          description: The text message describing the error.
      description: Describes the errors returned by a snapshot.
    CancelResizeMessage:
      type: object
      required:
        - ClusterIdentifier
      title: CancelResizeMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The unique identifier for the cluster that you want to cancel a resize operation for.
    Endpoint:
      type: object
      properties:
        Address:
          $ref: '#/components/schemas/String'
          description: The DNS address of the Cluster.
        Port:
          $ref: '#/components/schemas/Integer'
          description: The port that the database engine is listening on.
        VpcEndpoints:
          $ref: '#/components/schemas/VpcEndpointsList'
          description: Describes a connection endpoint.
      description: Describes a connection endpoint.
    TStamp:
      type: string
      format: date-time
    Integer:
      type: integer
    ClusterSecurityGroupMembershipList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClusterSecurityGroupMembership'
          - xml:
              name: ClusterSecurityGroup
    VpcSecurityGroupMembershipList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupMembership'
          - xml:
              name: VpcSecurityGroup
    ClusterParameterGroupStatusList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClusterParameterGroupStatus'
          - xml:
              name: ClusterParameterGroup
    PendingModifiedValues:
      type: object
      properties:
        MasterUserPassword:
          $ref: '#/components/schemas/String'
          description: The pending or in-progress change of the admin user password for the cluster.
        NodeType:
          $ref: '#/components/schemas/String'
          description: The pending or in-progress change of the cluster's node type.
        NumberOfNodes:
          $ref: '#/components/schemas/IntegerOptional'
          description: The pending or in-progress change of the number of nodes in the cluster.
        ClusterType:
          $ref: '#/components/schemas/String'
          description: The pending or in-progress change of the cluster type.
        ClusterVersion:
          $ref: '#/components/schemas/String'
          description: The pending or in-progress change of the service version.
        AutomatedSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: The pending or in-progress change of the automated snapshot retention period.
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The pending or in-progress change of the new identifier for the cluster.
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
          description: The pending or in-progress change of the ability to connect to the cluster from the public network.
        EnhancedVpcRouting:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</p> <p>If this option is <code>true</code>, enhanced VPC routing is enabled. </p> <p>Default: false</p>'
        MaintenanceTrackName:
          $ref: '#/components/schemas/String'
          description: The name of the maintenance track that the cluster will change to during the next maintenance window.
        EncryptionType:
          $ref: '#/components/schemas/String'
          description: 'The encryption type for a cluster. Possible values are: KMS and None. '
      description: Describes cluster attributes that are in a pending state. A change to one or more the attributes was requested and is in progress or will be applied.
    RestoreStatus:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
          description: 'The status of the restore action. Returns starting, restoring, completed, or failed.'
        CurrentRestoreRateInMegaBytesPerSecond:
          $ref: '#/components/schemas/Double'
          description: 'The number of megabytes per second being transferred from the backup storage. Returns the average rate for a completed backup. This field is only updated when you restore to DC2 and DS2 node types. '
        SnapshotSizeInMegaBytes:
          $ref: '#/components/schemas/Long'
          description: 'The size of the set of snapshot data used to restore the cluster. This field is only updated when you restore to DC2 and DS2 node types. '
        ProgressInMegaBytes:
          $ref: '#/components/schemas/Long'
          description: 'The number of megabytes that have been transferred from snapshot storage. This field is only updated when you restore to DC2 and DS2 node types. '
        ElapsedTimeInSeconds:
          $ref: '#/components/schemas/Long'
          description: 'The amount of time an in-progress restore has been running, or the amount of time it took a completed restore to finish. This field is only updated when you restore to DC2 and DS2 node types. '
        EstimatedTimeToCompletionInSeconds:
          $ref: '#/components/schemas/Long'
          description: 'The estimate of the time remaining before the restore will complete. Returns 0 for a completed restore. This field is only updated when you restore to DC2 and DS2 node types. '
      description: Describes the status of a cluster restore action. Returns null if the cluster was not created by restoring a snapshot.
    DataTransferProgress:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
          description: Describes the status of the cluster. While the transfer is in progress the status is <code>transferringdata</code>.
        CurrentRateInMegaBytesPerSecond:
          $ref: '#/components/schemas/DoubleOptional'
          description: Describes the data transfer rate in MB's per second.
        TotalDataInMegaBytes:
          $ref: '#/components/schemas/Long'
          description: Describes the total amount of data to be transfered in megabytes.
        DataTransferredInMegaBytes:
          $ref: '#/components/schemas/Long'
          description: Describes the total amount of data that has been transfered in MB's.
        EstimatedTimeToCompletionInSeconds:
          $ref: '#/components/schemas/LongOptional'
          description: Describes the estimated number of seconds remaining to complete the transfer.
        ElapsedTimeInSeconds:
          $ref: '#/components/schemas/LongOptional'
          description: Describes the number of seconds that have elapsed during the data transfer.
      description: Describes the status of a cluster while it is in the process of resizing with an incremental resize.
    HsmStatus:
      type: object
      properties:
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
          description: Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
          description: Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
        Status:
          $ref: '#/components/schemas/String'
          description: '<p>Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes specified in a modify cluster command.</p> <p>Values: active, applying</p>'
      description: Describes the status of changes to HSM settings.
    ClusterSnapshotCopyStatus:
      type: object
      properties:
        DestinationRegion:
          $ref: '#/components/schemas/String'
          description: The destination region that snapshots are automatically copied to when cross-region snapshot copy is enabled.
        RetentionPeriod:
          $ref: '#/components/schemas/Long'
          description: The number of days that automated snapshots are retained in the destination region after they are copied from a source region.
        ManualSnapshotRetentionPeriod:
          $ref: '#/components/schemas/Integer'
          description: '<p>The number of days that automated snapshots are retained in the destination region after they are copied from a source region. If the value is -1, the manual snapshot is retained indefinitely. </p> <p>The value must be either -1 or an integer between 1 and 3,653.</p>'
        SnapshotCopyGrantName:
          $ref: '#/components/schemas/String'
          description: The name of the snapshot copy grant.
      description: Returns the destination region and retention period that are configured for cross-region snapshot copy.
    ClusterNodesList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterNode'
    ElasticIpStatus:
      type: object
      properties:
        ElasticIp:
          $ref: '#/components/schemas/String'
          description: The elastic IP (EIP) address for the cluster.
        Status:
          $ref: '#/components/schemas/String'
          description: The status of the elastic IP (EIP) address.
      description: Describes the status of the elastic IP (EIP) address.
    TagList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Tag'
          - xml:
              name: Tag
    ClusterIamRoleList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClusterIamRole'
          - xml:
              name: ClusterIamRole
    PendingActionsList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    DeferredMaintenanceWindowsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DeferredMaintenanceWindow'
          - xml:
              name: DeferredMaintenanceWindow
    ScheduleState:
      type: string
      enum:
        - MODIFYING
        - ACTIVE
        - FAILED
    ResizeInfo:
      type: object
      properties:
        ResizeType:
          $ref: '#/components/schemas/String'
          description: Returns the value <code>ClassicResize</code>.
        AllowCancelResize:
          $ref: '#/components/schemas/Boolean'
          description: A boolean value indicating if the resize operation can be cancelled.
      description: Describes a resize operation.
    LongOptional:
      type: integer
    Cluster:
      type: object
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The unique identifier of the cluster.
        NodeType:
          $ref: '#/components/schemas/String'
          description: The node type for the nodes in the cluster.
        ClusterStatus:
          $ref: '#/components/schemas/String'
          description: '<p> The current state of the cluster. Possible values are the following:</p> <ul> <li> <p> <code>available</code> </p> </li> <li> <p> <code>available, prep-for-resize</code> </p> </li> <li> <p> <code>available, resize-cleanup</code> </p> </li> <li> <p> <code>cancelling-resize</code> </p> </li> <li> <p> <code>creating</code> </p> </li> <li> <p> <code>deleting</code> </p> </li> <li> <p> <code>final-snapshot</code> </p> </li> <li> <p> <code>hardware-failure</code> </p> </li> <li> <p> <code>incompatible-hsm</code> </p> </li> <li> <p> <code>incompatible-network</code> </p> </li> <li> <p> <code>incompatible-parameters</code> </p> </li> <li> <p> <code>incompatible-restore</code> </p> </li> <li> <p> <code>modifying</code> </p> </li> <li> <p> <code>paused</code> </p> </li> <li> <p> <code>rebooting</code> </p> </li> <li> <p> <code>renaming</code> </p> </li> <li> <p> <code>resizing</code> </p> </li> <li> <p> <code>rotating-keys</code> </p> </li> <li> <p> <code>storage-full</code> </p> </li> <li> <p> <code>updating-hsm</code> </p> </li> </ul>'
        ClusterAvailabilityStatus:
          $ref: '#/components/schemas/String'
          description: '<p>The availability status of the cluster for queries. Possible values are the following:</p> <ul> <li> <p>Available - The cluster is available for queries. </p> </li> <li> <p>Unavailable - The cluster is not available for queries.</p> </li> <li> <p>Maintenance - The cluster is intermittently available for queries due to maintenance activities.</p> </li> <li> <p>Modifying - The cluster is intermittently available for queries due to changes that modify the cluster.</p> </li> <li> <p>Failed - The cluster failed and is not available for queries.</p> </li> </ul>'
        ModifyStatus:
          $ref: '#/components/schemas/String'
          description: 'The status of a modify operation, if any, initiated for the cluster.'
        MasterUsername:
          $ref: '#/components/schemas/String'
          description: 'The admin user name for the cluster. This name is used to connect to the database that is specified in the <b>DBName</b> parameter. '
        DBName:
          $ref: '#/components/schemas/String'
          description: 'The name of the initial database that was created when the cluster was created. This same name is returned for the life of the cluster. If an initial database was not specified, a database named <code>dev</code>dev was created by default. '
        Endpoint:
          $ref: '#/components/schemas/Endpoint'
          description: The connection endpoint.
        ClusterCreateTime:
          $ref: '#/components/schemas/TStamp'
          description: The date and time that the cluster was created.
        AutomatedSnapshotRetentionPeriod:
          $ref: '#/components/schemas/Integer'
          description: The number of days that automatic cluster snapshots are retained.
        ManualSnapshotRetentionPeriod:
          $ref: '#/components/schemas/Integer'
          description: '<p>The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn''t change the retention period of existing snapshots.</p> <p>The value must be either -1 or an integer between 1 and 3,653.</p>'
        ClusterSecurityGroups:
          $ref: '#/components/schemas/ClusterSecurityGroupMembershipList'
          description: '<p>A list of cluster security group that are associated with the cluster. Each security group is represented by an element that contains <code>ClusterSecurityGroup.Name</code> and <code>ClusterSecurityGroup.Status</code> subelements. </p> <p>Cluster security groups are used when the cluster is not created in an Amazon Virtual Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by the <b>VpcSecurityGroups</b> parameter. </p>'
        VpcSecurityGroups:
          $ref: '#/components/schemas/VpcSecurityGroupMembershipList'
          description: A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with the cluster. This parameter is returned only if the cluster is in a VPC.
        ClusterParameterGroups:
          $ref: '#/components/schemas/ClusterParameterGroupStatusList'
          description: The list of cluster parameter groups that are associated with this cluster. Each parameter group in the list is returned with its status.
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the subnet group that is associated with the cluster. This parameter is valid only when the cluster is in a VPC.
        VpcId:
          $ref: '#/components/schemas/String'
          description: 'The identifier of the VPC the cluster is in, if the cluster is in a VPC.'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
          description: The name of the Availability Zone in which the cluster is located.
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
          description: 'The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance can occur.'
        PendingModifiedValues:
          $ref: '#/components/schemas/PendingModifiedValues'
          description: 'A value that, if present, indicates that changes to the cluster are pending. Specific pending changes are identified by subelements.'
        ClusterVersion:
          $ref: '#/components/schemas/String'
          description: The version ID of the Amazon Redshift engine that is running on the cluster.
        AllowVersionUpgrade:
          $ref: '#/components/schemas/Boolean'
          description: 'A boolean value that, if <code>true</code>, indicates that major version upgrades will be applied automatically to the cluster during the maintenance window. '
        NumberOfNodes:
          $ref: '#/components/schemas/Integer'
          description: The number of compute nodes in the cluster.
        PubliclyAccessible:
          $ref: '#/components/schemas/Boolean'
          description: 'A boolean value that, if <code>true</code>, indicates that the cluster can be accessed from a public network.'
        Encrypted:
          $ref: '#/components/schemas/Boolean'
          description: 'A boolean value that, if <code>true</code>, indicates that data in the cluster is encrypted at rest.'
        RestoreStatus:
          $ref: '#/components/schemas/RestoreStatus'
          description: A value that describes the status of a cluster restore action. This parameter returns null if the cluster was not created by restoring a snapshot.
        DataTransferProgress:
          $ref: '#/components/schemas/DataTransferProgress'
          description: <p/>
        HsmStatus:
          $ref: '#/components/schemas/HsmStatus'
          description: '<p>A value that reports whether the Amazon Redshift cluster has finished applying any hardware security module (HSM) settings changes specified in a modify cluster command.</p> <p>Values: active, applying</p>'
        ClusterSnapshotCopyStatus:
          $ref: '#/components/schemas/ClusterSnapshotCopyStatus'
          description: A value that returns the destination region and retention period that are configured for cross-region snapshot copy.
        ClusterPublicKey:
          $ref: '#/components/schemas/String'
          description: The public key for the cluster.
        ClusterNodes:
          $ref: '#/components/schemas/ClusterNodesList'
          description: The nodes in the cluster.
        ElasticIpStatus:
          $ref: '#/components/schemas/ElasticIpStatus'
          description: The status of the elastic IP (EIP) address.
        ClusterRevisionNumber:
          $ref: '#/components/schemas/String'
          description: The specific revision number of the database in the cluster.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags for the cluster.
        KmsKeyId:
          $ref: '#/components/schemas/String'
          description: The Key Management Service (KMS) key ID of the encryption key used to encrypt data in the cluster.
        EnhancedVpcRouting:
          $ref: '#/components/schemas/Boolean'
          description: '<p>An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</p> <p>If this option is <code>true</code>, enhanced VPC routing is enabled. </p> <p>Default: false</p>'
        IamRoles:
          $ref: '#/components/schemas/ClusterIamRoleList'
          description: A list of Identity and Access Management (IAM) roles that can be used by the cluster to access other Amazon Web Services services.
        PendingActions:
          $ref: '#/components/schemas/PendingActionsList'
          description: Cluster operations that are waiting to be started.
        MaintenanceTrackName:
          $ref: '#/components/schemas/String'
          description: The name of the maintenance track for the cluster.
        ElasticResizeNumberOfNodeOptions:
          $ref: '#/components/schemas/String'
          description: 'The number of nodes that you can resize the cluster to with the elastic resize method. '
        DeferredMaintenanceWindows:
          $ref: '#/components/schemas/DeferredMaintenanceWindowsList'
          description: Describes a group of <code>DeferredMaintenanceWindow</code> objects.
        SnapshotScheduleIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the cluster snapshot schedule.
        SnapshotScheduleState:
          $ref: '#/components/schemas/ScheduleState'
          description: The current state of the cluster snapshot schedule.
        ExpectedNextSnapshotScheduleTime:
          $ref: '#/components/schemas/TStamp'
          description: 'The date and time when the next snapshot is expected to be taken for clusters with a valid snapshot schedule and backups enabled. '
        ExpectedNextSnapshotScheduleTimeStatus:
          $ref: '#/components/schemas/String'
          description: '<p> The status of next expected snapshot for clusters having a valid snapshot schedule and backups enabled. Possible values are the following:</p> <ul> <li> <p>OnTrack - The next snapshot is expected to be taken on time. </p> </li> <li> <p>Pending - The next snapshot is pending to be taken. </p> </li> </ul>'
        NextMaintenanceWindowStartTime:
          $ref: '#/components/schemas/TStamp'
          description: The date and time in UTC when system maintenance can begin.
        ResizeInfo:
          $ref: '#/components/schemas/ResizeInfo'
          description: '<p>Returns the following:</p> <ul> <li> <p>AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.</p> </li> <li> <p>ResizeType: Returns ClassicResize</p> </li> </ul>'
        AvailabilityZoneRelocationStatus:
          $ref: '#/components/schemas/String'
          description: Describes the status of the Availability Zone relocation operation.
        ClusterNamespaceArn:
          $ref: '#/components/schemas/String'
          description: The namespace Amazon Resource Name (ARN) of the cluster.
        TotalStorageCapacityInMegaBytes:
          $ref: '#/components/schemas/LongOptional'
          description: 'The total storage capacity of the cluster in megabytes. '
        AquaConfiguration:
          $ref: '#/components/schemas/AquaConfiguration'
          description: The AQUA (Advanced Query Accelerator) configuration of the cluster.
      description: Describes a cluster.
    SensitiveString:
      type: string
      format: password
    RevisionTargetsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RevisionTarget'
          - xml:
              name: RevisionTarget
    ClusterDbRevision:
      type: object
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The unique identifier of the cluster.
        CurrentDatabaseRevision:
          $ref: '#/components/schemas/String'
          description: A string representing the current cluster version.
        DatabaseRevisionReleaseDate:
          $ref: '#/components/schemas/TStamp'
          description: The date on which the database revision was released.
        RevisionTargets:
          $ref: '#/components/schemas/RevisionTargetsList'
          description: 'A list of <code>RevisionTarget</code> objects, where each object describes the database revision that a cluster can be updated to.'
      description: Describes a <code>ClusterDbRevision</code>.
    ClusterDbRevisionsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClusterDbRevision'
          - xml:
              name: ClusterDbRevision
    ClusterIamRole:
      type: object
      properties:
        IamRoleArn:
          $ref: '#/components/schemas/String'
          description: 'The Amazon Resource Name (ARN) of the IAM role, for example, <code>arn:aws:iam::123456789012:role/RedshiftCopyUnload</code>. '
        ApplyStatus:
          $ref: '#/components/schemas/String'
          description: '<p>A value that describes the status of the IAM role''s association with an Amazon Redshift cluster.</p> <p>The following are possible statuses and descriptions.</p> <ul> <li> <p> <code>in-sync</code>: The role is available for use by the cluster.</p> </li> <li> <p> <code>adding</code>: The role is in the process of being associated with the cluster.</p> </li> <li> <p> <code>removing</code>: The role is in the process of being disassociated with the cluster.</p> </li> </ul>'
      description: An Identity and Access Management (IAM) role that can be used by the associated Amazon Redshift cluster to access other Amazon Web Services services.
    ClusterList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Cluster'
          - xml:
              name: Cluster
    ClusterNode:
      type: object
      properties:
        NodeRole:
          $ref: '#/components/schemas/String'
          description: Whether the node is a leader node or a compute node.
        PrivateIPAddress:
          $ref: '#/components/schemas/String'
          description: The private IP address of a node within a cluster.
        PublicIPAddress:
          $ref: '#/components/schemas/String'
          description: The public IP address of a node within a cluster.
      description: The identifier of a node in a cluster.
    ClusterParameterGroup:
      type: object
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cluster parameter group.
        ParameterGroupFamily:
          $ref: '#/components/schemas/String'
          description: The name of the cluster parameter group family that this cluster parameter group is compatible with.
        Description:
          $ref: '#/components/schemas/String'
          description: The description of the parameter group.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags for the cluster parameter group.
      description: Describes a parameter group.
    ParametersList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Parameter'
          - xml:
              name: Parameter
    ClusterParameterStatusList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterParameterStatus'
    ClusterParameterGroupStatus:
      type: object
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cluster parameter group.
        ParameterApplyStatus:
          $ref: '#/components/schemas/String'
          description: The status of parameter updates.
        ClusterParameterStatusList:
          $ref: '#/components/schemas/ClusterParameterStatusList'
          description: '<p>The list of parameter statuses.</p> <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      description: Describes the status of a parameter group.
    ParameterGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClusterParameterGroup'
          - xml:
              name: ClusterParameterGroup
    ClusterParameterStatus:
      type: object
      properties:
        ParameterName:
          $ref: '#/components/schemas/String'
          description: The name of the parameter.
        ParameterApplyStatus:
          $ref: '#/components/schemas/String'
          description: '<p>The status of the parameter that indicates whether the parameter is in sync with the database, waiting for a cluster reboot, or encountered an error when being applied.</p> <p>The following are possible statuses and descriptions.</p> <ul> <li> <p> <code>in-sync</code>: The parameter value is in sync with the database.</p> </li> <li> <p> <code>pending-reboot</code>: The parameter value will be applied after the cluster reboots.</p> </li> <li> <p> <code>applying</code>: The parameter value is being applied to the database.</p> </li> <li> <p> <code>invalid-parameter</code>: Cannot apply the parameter value because it has an invalid value or syntax.</p> </li> <li> <p> <code>apply-deferred</code>: The parameter contains static property changes. The changes are deferred until the cluster reboots.</p> </li> <li> <p> <code>apply-error</code>: Cannot connect to the cluster. The parameter change will be applied after the cluster reboots.</p> </li> <li> <p> <code>unknown-error</code>: Cannot apply the parameter change right now. The change will be applied after the cluster reboots.</p> </li> </ul>'
        ParameterApplyErrorDescription:
          $ref: '#/components/schemas/String'
          description: The error that prevented the parameter from being applied to the database.
      description: Describes the status of a parameter group.
    EC2SecurityGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EC2SecurityGroup'
          - xml:
              name: EC2SecurityGroup
    IPRangeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IPRange'
          - xml:
              name: IPRange
    ClusterSecurityGroupMembership:
      type: object
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cluster security group.
        Status:
          $ref: '#/components/schemas/String'
          description: The status of the cluster security group.
      description: Describes a cluster security group.
    ClusterSecurityGroups:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClusterSecurityGroup'
          - xml:
              name: ClusterSecurityGroup
    ClusterSecurityGroupNameList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: ClusterSecurityGroupName
    Long:
      type: integer
    SubnetList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Subnet'
          - xml:
              name: Subnet
    ClusterSubnetGroup:
      type: object
      properties:
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cluster subnet group.
        Description:
          $ref: '#/components/schemas/String'
          description: The description of the cluster subnet group.
        VpcId:
          $ref: '#/components/schemas/String'
          description: The VPC ID of the cluster subnet group.
        SubnetGroupStatus:
          $ref: '#/components/schemas/String'
          description: 'The status of the cluster subnet group. Possible values are <code>Complete</code>, <code>Incomplete</code> and <code>Invalid</code>. '
        Subnets:
          $ref: '#/components/schemas/SubnetList'
          description: 'A list of the VPC <a>Subnet</a> elements. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags for the cluster subnet group.
      description: Describes a subnet group.
    ClusterSubnetGroups:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClusterSubnetGroup'
          - xml:
              name: ClusterSubnetGroup
    ClusterVersion:
      type: object
      properties:
        ClusterVersion:
          $ref: '#/components/schemas/String'
          description: The version number used by the cluster.
        ClusterParameterGroupFamily:
          $ref: '#/components/schemas/String'
          description: The name of the cluster parameter group family for the cluster.
        Description:
          $ref: '#/components/schemas/String'
          description: The description of the cluster version.
      description: 'Describes a cluster version, including the parameter group family and description of the version.'
    ClusterVersionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClusterVersion'
          - xml:
              name: ClusterVersion
    CopyClusterSnapshotMessage:
      type: object
      required:
        - SourceSnapshotIdentifier
        - TargetSnapshotIdentifier
      title: CopyClusterSnapshotMessage
      properties:
        SourceSnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier for the source snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier for a valid automated snapshot whose state is <code>available</code>.</p> </li> </ul>'
        SourceSnapshotClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier of the cluster the source snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier for a valid cluster.</p> </li> </ul>'
        TargetSnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier given to the new manual snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank.</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique for the Amazon Web Services account that is making the request.</p> </li> </ul>'
        ManualSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely. </p> <p>The value must be either -1 or an integer between 1 and 3,653.</p> <p>The default value is -1.</p>'
      description: <p/>
    CreateAuthenticationProfileMessage:
      type: object
      required:
        - AuthenticationProfileName
        - AuthenticationProfileContent
      title: CreateAuthenticationProfileMessage
      properties:
        AuthenticationProfileName:
          $ref: '#/components/schemas/AuthenticationProfileNameString'
          description: The name of the authentication profile to be created.
        AuthenticationProfileContent:
          $ref: '#/components/schemas/String'
          description: The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
    VpcSecurityGroupIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: VpcSecurityGroupId
    IamRoleArnList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: IamRoleArn
    CreateClusterMessage:
      type: object
      required:
        - ClusterIdentifier
        - NodeType
        - MasterUsername
        - MasterUserPassword
      title: CreateClusterMessage
      properties:
        DBName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the first database to be created when the cluster is created.</p> <p>To create additional databases after the cluster is created, connect to the cluster with a SQL client and use SQL commands to create a database. For more information, go to <a href="https://docs.aws.amazon.com/redshift/latest/dg/t_creating_database.html">Create a Database</a> in the Amazon Redshift Database Developer Guide. </p> <p>Default: <code>dev</code> </p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64 alphanumeric characters.</p> </li> <li> <p>Must contain only lowercase letters.</p> </li> <li> <p>Cannot be a word that is reserved by the service. A list of reserved words can be found in <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved Words</a> in the Amazon Redshift Database Developer Guide. </p> </li> </ul>'
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>A unique identifier for the cluster. You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. The identifier also appears in the Amazon Redshift console.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>Alphabetic characters must be lowercase.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique for all clusters within an Amazon Web Services account.</p> </li> </ul> <p>Example: <code>myexamplecluster</code> </p>'
        ClusterType:
          $ref: '#/components/schemas/String'
          description: '<p>The type of the cluster. When cluster type is specified as</p> <ul> <li> <p> <code>single-node</code>, the <b>NumberOfNodes</b> parameter is not required.</p> </li> <li> <p> <code>multi-node</code>, the <b>NumberOfNodes</b> parameter is required.</p> </li> </ul> <p>Valid Values: <code>multi-node</code> | <code>single-node</code> </p> <p>Default: <code>multi-node</code> </p>'
        NodeType:
          $ref: '#/components/schemas/String'
          description: '<p>The node type to be provisioned for the cluster. For information about node types, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes"> Working with Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p> <p>Valid Values: <code>ds2.xlarge</code> | <code>ds2.8xlarge</code> | <code>dc1.large</code> | <code>dc1.8xlarge</code> | <code>dc2.large</code> | <code>dc2.8xlarge</code> | <code>ra3.xlplus</code> | <code>ra3.4xlarge</code> | <code>ra3.16xlarge</code> </p>'
        MasterUsername:
          $ref: '#/components/schemas/String'
          description: '<p>The user name associated with the admin user account for the cluster that is being created.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 - 128 alphanumeric characters. The user name can''t be <code>PUBLIC</code>.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot be a reserved word. A list of reserved words can be found in <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved Words</a> in the Amazon Redshift Database Developer Guide. </p> </li> </ul>'
        MasterUserPassword:
          $ref: '#/components/schemas/String'
          description: '<p>The password associated with the admin user account for the cluster that is being created.</p> <p>Constraints:</p> <ul> <li> <p>Must be between 8 and 64 characters in length.</p> </li> <li> <p>Must contain at least one uppercase letter.</p> </li> <li> <p>Must contain at least one lowercase letter.</p> </li> <li> <p>Must contain one number.</p> </li> <li> <p>Can be any printable ASCII character (ASCII code 33 to 126) except '' (single quote), " (double quote), \, /, @, or space.</p> </li> </ul>'
        ClusterSecurityGroups:
          $ref: '#/components/schemas/ClusterSecurityGroupNameList'
          description: '<p>A list of security groups to be associated with this cluster.</p> <p>Default: The default cluster security group for Amazon Redshift.</p>'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
          description: '<p>A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.</p> <p>Default: The default VPC security group is associated with the cluster.</p>'
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: <p>The name of a cluster subnet group to be associated with this cluster.</p> <p>If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).</p>
        AvailabilityZone:
          $ref: '#/components/schemas/String'
          description: '<p>The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency.</p> <p>Default: A random, system-chosen Availability Zone in the region that is specified by the endpoint.</p> <p>Example: <code>us-east-2d</code> </p> <p>Constraint: The specified Availability Zone must be in the same region as the current endpoint.</p>'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
          description: '<p>The weekly time range (in UTC) during which automated cluster maintenance can occur.</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week. For more information about the time blocks for each region, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows">Maintenance Windows</a> in Amazon Redshift Cluster Management Guide.</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Minimum 30-minute window.</p>'
        ClusterParameterGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the parameter group to be associated with this cluster.</p> <p>Default: The default Amazon Redshift cluster parameter group. For information about the default parameter group, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Working with Amazon Redshift Parameter Groups</a> </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
        AutomatedSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with <a>CreateClusterSnapshot</a>. </p> <p>You can''t disable automated snapshots for RA3 node types. Set the automated retention period from 1-35 days.</p> <p>Default: <code>1</code> </p> <p>Constraints: Must be a value from 0 to 35.</p>'
        ManualSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn''t change the retention period of existing snapshots.</p> <p>The value must be either -1 or an integer between 1 and 3,653.</p>'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The port number on which the cluster accepts incoming connections.</p> <p>The cluster is accessible only via the JDBC and ODBC connection strings. Part of the connection string requires the port on which the cluster will listen for incoming connections.</p> <p>Default: <code>5439</code> </p> <p>Valid Values: <code>1150-65535</code> </p>'
        ClusterVersion:
          $ref: '#/components/schemas/String'
          description: '<p>The version of the Amazon Redshift engine software that you want to deploy on the cluster.</p> <p>The version selected runs on all the nodes in the cluster.</p> <p>Constraints: Only version 1.0 is currently available.</p> <p>Example: <code>1.0</code> </p>'
        AllowVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>If <code>true</code>, major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster.</p> <p>When a new major version of the Amazon Redshift engine is released, you can request that the service automatically apply upgrades during the maintenance window to the Amazon Redshift engine that is running on your cluster.</p> <p>Default: <code>true</code> </p>'
        NumberOfNodes:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of compute nodes in the cluster. This parameter is required when the <b>ClusterType</b> parameter is specified as <code>multi-node</code>. </p> <p>For information about determining how many nodes you need, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes"> Working with Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p> <p>If you don''t specify this parameter, you get a single-node cluster. When requesting a multi-node cluster, you must specify the number of nodes that you want in the cluster.</p> <p>Default: <code>1</code> </p> <p>Constraints: Value must be at least 1 and no more than 100.</p>'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'If <code>true</code>, the cluster can be accessed from a public network. '
        Encrypted:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>If <code>true</code>, the data in the cluster is encrypted at rest. </p> <p>Default: false</p>'
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
          description: Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
          description: Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
        ElasticIp:
          $ref: '#/components/schemas/String'
          description: '<p>The Elastic IP (EIP) address for the cluster.</p> <p>Constraints: The cluster must be provisioned in EC2-VPC and publicly-accessible through an Internet gateway. For more information about provisioning clusters in EC2-VPC, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms">Supported Platforms to Launch Your Cluster</a> in the Amazon Redshift Cluster Management Guide.</p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag instances.
        KmsKeyId:
          $ref: '#/components/schemas/String'
          description: The Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster.
        EnhancedVpcRouting:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</p> <p>If this option is <code>true</code>, enhanced VPC routing is enabled. </p> <p>Default: false</p>'
        AdditionalInfo:
          $ref: '#/components/schemas/String'
          description: Reserved.
        IamRoles:
          $ref: '#/components/schemas/IamRoleArnList'
          description: <p>A list of Identity and Access Management (IAM) roles that can be used by the cluster to access other Amazon Web Services services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. You can supply up to 10 IAM roles in a single request.</p> <p>A cluster can have up to 10 IAM roles associated with it at any time.</p>
        MaintenanceTrackName:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter for the name of the maintenance track for the cluster. If you don''t provide a maintenance track name, the cluster is assigned to the <code>current</code> track.'
        SnapshotScheduleIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the snapshot schedule.
        AvailabilityZoneRelocation:
          $ref: '#/components/schemas/BooleanOptional'
          description: The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster is created.
        AquaConfigurationStatus:
          $ref: '#/components/schemas/AquaConfigurationStatus'
          description: <p>The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) when it is created. Possible values include the following.</p> <ul> <li> <p>enabled - Use AQUA if it is available for the current Amazon Web Services Region and Amazon Redshift node type.</p> </li> <li> <p>disabled - Don't use AQUA. </p> </li> <li> <p>auto - Amazon Redshift determines whether to use AQUA.</p> </li> </ul>
      description: <p/>
    CreateClusterParameterGroupMessage:
      type: object
      required:
        - ParameterGroupName
        - ParameterGroupFamily
        - Description
      title: CreateClusterParameterGroupMessage
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique withing your Amazon Web Services account.</p> </li> </ul> <note> <p>This value is stored as a lower-case string.</p> </note>'
        ParameterGroupFamily:
          $ref: '#/components/schemas/String'
          description: '<p>The Amazon Redshift engine version to which the cluster parameter group applies. The cluster engine version determines the set of parameters.</p> <p>To get a list of valid parameter group family names, you can call <a>DescribeClusterParameterGroups</a>. By default, Amazon Redshift returns a list of all the parameter groups that are owned by your Amazon Web Services account, including the default parameter groups for each Amazon Redshift engine version. The parameter group family names associated with the default parameter groups provide you the valid values. For example, a valid family name is "redshift-1.0". </p>'
        Description:
          $ref: '#/components/schemas/String'
          description: A description of the parameter group.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag instances.
      description: <p/>
    CreateClusterSecurityGroupMessage:
      type: object
      required:
        - ClusterSecurityGroupName
        - Description
      title: CreateClusterSecurityGroupMessage
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name for the security group. Amazon Redshift stores the value as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain no more than 255 alphanumeric characters or hyphens.</p> </li> <li> <p>Must not be "Default".</p> </li> <li> <p>Must be unique for all security groups that are created by your Amazon Web Services account.</p> </li> </ul> <p>Example: <code>examplesecuritygroup</code> </p>'
        Description:
          $ref: '#/components/schemas/String'
          description: A description for the security group.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag instances.
      description: <p/>
    CreateClusterSnapshotMessage:
      type: object
      required:
        - SnapshotIdentifier
        - ClusterIdentifier
      title: CreateClusterSnapshotMessage
      properties:
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>A unique identifier for the snapshot that you are requesting. This identifier must be unique for all snapshots within the Amazon Web Services account.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p>'
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The cluster identifier for which you want a snapshot.
        ManualSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely. </p> <p>The value must be either -1 or an integer between 1 and 3,653.</p> <p>The default value is -1.</p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag instances.
      description: <p/>
    SubnetIdentifierList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: SubnetIdentifier
    CreateClusterSubnetGroupMessage:
      type: object
      required:
        - ClusterSubnetGroupName
        - Description
        - SubnetIds
      title: CreateClusterSubnetGroupMessage
      properties:
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name for the subnet group. Amazon Redshift stores the value as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain no more than 255 alphanumeric characters or hyphens.</p> </li> <li> <p>Must not be "Default".</p> </li> <li> <p>Must be unique for all subnet groups that are created by your Amazon Web Services account.</p> </li> </ul> <p>Example: <code>examplesubnetgroup</code> </p>'
        Description:
          $ref: '#/components/schemas/String'
          description: A description for the subnet group.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdentifierList'
          description: An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a single request.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag instances.
      description: <p/>
    CreateEndpointAccessMessage:
      type: object
      required:
        - EndpointName
        - SubnetGroupName
      title: CreateEndpointAccessMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The cluster identifier of the cluster to access.
        ResourceOwner:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID of the owner of the cluster. This is only required if the cluster is in another Amazon Web Services account.
        EndpointName:
          $ref: '#/components/schemas/String'
          description: '<p>The Redshift-managed VPC endpoint name.</p> <p>An endpoint name must contain 1-30 characters. Valid characters are A-Z, a-z, 0-9, and hyphen(-). The first character must be a letter. The name can''t contain two consecutive hyphens or end with a hyphen.</p>'
        SubnetGroupName:
          $ref: '#/components/schemas/String'
          description: The subnet group from which Amazon Redshift chooses the subnet to deploy the endpoint.
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
          description: 'The security group that defines the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint.'
    SourceIdsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: SourceId
    EventCategoriesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: EventCategory
    CreateEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
        - SnsTopicArn
      title: CreateEventSubscriptionMessage
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the event subscription to be created.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank.</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
        SnsTopicArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the event notifications. The ARN is created by Amazon SNS when you create a topic and subscribe to it.
        SourceType:
          $ref: '#/components/schemas/String'
          description: '<p>The type of source that will be generating the events. For example, if you want to be notified of events generated by a cluster, you would set this parameter to cluster. If this value is not specified, events are returned for all Amazon Redshift objects in your Amazon Web Services account. You must specify a source type in order to specify source IDs.</p> <p>Valid values: cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot, and scheduled-action.</p>'
        SourceIds:
          $ref: '#/components/schemas/SourceIdsList'
          description: '<p>A list of one or more identifiers of Amazon Redshift source objects. All of the objects must be of the same type as was specified in the source type parameter. The event subscription will return only events generated by the specified objects. If not specified, then events are returned for all objects within the source type specified.</p> <p>Example: my-cluster-1, my-cluster-2</p> <p>Example: my-snapshot-20131010</p>'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
          description: '<p>Specifies the Amazon Redshift event categories to be published by the event notification subscription.</p> <p>Values: configuration, management, monitoring, security, pending</p>'
        Severity:
          $ref: '#/components/schemas/String'
          description: '<p>Specifies the Amazon Redshift event severity to be published by the event notification subscription.</p> <p>Values: ERROR, INFO</p>'
        Enabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'A boolean value; set to <code>true</code> to activate the subscription, and set to <code>false</code> to create the subscription but not activate it. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag instances.
      description: <p/>
    EventSubscription:
      type: object
      properties:
        CustomerAwsId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services account associated with the Amazon Redshift event notification subscription.
        CustSubscriptionId:
          $ref: '#/components/schemas/String'
          description: The name of the Amazon Redshift event notification subscription.
        SnsTopicArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Amazon SNS topic used by the event notification subscription.
        Status:
          $ref: '#/components/schemas/String'
          description: '<p>The status of the Amazon Redshift event notification subscription.</p> <p>Constraints:</p> <ul> <li> <p>Can be one of the following: active | no-permission | topic-not-exist</p> </li> <li> <p>The status "no-permission" indicates that Amazon Redshift no longer has permission to post to the Amazon SNS topic. The status "topic-not-exist" indicates that the topic was deleted after the subscription was created.</p> </li> </ul>'
        SubscriptionCreationTime:
          $ref: '#/components/schemas/TStamp'
          description: The date and time the Amazon Redshift event notification subscription was created.
        SourceType:
          $ref: '#/components/schemas/String'
          description: 'The source type of the events returned by the Amazon Redshift event notification, such as cluster, cluster-snapshot, cluster-parameter-group, cluster-security-group, or scheduled-action. '
        SourceIdsList:
          $ref: '#/components/schemas/SourceIdsList'
          description: A list of the sources that publish events to the Amazon Redshift event notification subscription.
        EventCategoriesList:
          $ref: '#/components/schemas/EventCategoriesList'
          description: '<p>The list of Amazon Redshift event categories specified in the event notification subscription.</p> <p>Values: Configuration, Management, Monitoring, Security, Pending</p>'
        Severity:
          $ref: '#/components/schemas/String'
          description: '<p>The event severity specified in the Amazon Redshift event notification subscription.</p> <p>Values: ERROR, INFO</p>'
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: A boolean value indicating whether the subscription is enabled; <code>true</code> indicates that the subscription is enabled.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags for the event subscription.
      description: Describes event subscriptions.
    CreateHsmClientCertificateMessage:
      type: object
      required:
        - HsmClientCertificateIdentifier
      title: CreateHsmClientCertificateMessage
      properties:
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier to be assigned to the new HSM client certificate that the cluster will use to connect to the HSM to use the database encryption keys.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag instances.
      description: <p/>
    HsmClientCertificate:
      type: object
      properties:
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the HSM client certificate.
        HsmClientCertificatePublicKey:
          $ref: '#/components/schemas/String'
          description: The public key that the Amazon Redshift cluster will use to connect to the HSM. You must register the public key in the HSM.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags for the HSM client certificate.
      description: 'Returns information about an HSM client certificate. The certificate is stored in a secure Hardware Storage Module (HSM), and used by the Amazon Redshift cluster to encrypt data files.'
    CreateHsmConfigurationMessage:
      type: object
      required:
        - HsmConfigurationIdentifier
        - Description
        - HsmIpAddress
        - HsmPartitionName
        - HsmPartitionPassword
        - HsmServerPublicCertificate
      title: CreateHsmConfigurationMessage
      properties:
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier to be assigned to the new Amazon Redshift HSM configuration.
        Description:
          $ref: '#/components/schemas/String'
          description: A text description of the HSM configuration to be created.
        HsmIpAddress:
          $ref: '#/components/schemas/String'
          description: The IP address that the Amazon Redshift cluster must use to access the HSM.
        HsmPartitionName:
          $ref: '#/components/schemas/String'
          description: The name of the partition in the HSM where the Amazon Redshift clusters will store their database encryption keys.
        HsmPartitionPassword:
          $ref: '#/components/schemas/String'
          description: The password required to access the HSM partition.
        HsmServerPublicCertificate:
          $ref: '#/components/schemas/String'
          description: 'The HSMs public certificate file. When using Cloud HSM, the file name is server.pem.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag instances.
      description: <p/>
    HsmConfiguration:
      type: object
      properties:
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
          description: The name of the Amazon Redshift HSM configuration.
        Description:
          $ref: '#/components/schemas/String'
          description: A text description of the HSM configuration.
        HsmIpAddress:
          $ref: '#/components/schemas/String'
          description: The IP address that the Amazon Redshift cluster must use to access the HSM.
        HsmPartitionName:
          $ref: '#/components/schemas/String'
          description: The name of the partition in the HSM where the Amazon Redshift clusters will store their database encryption keys.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags for the HSM configuration.
      description: 'Returns information about an HSM configuration, which is an object that describes to Amazon Redshift clusters the information they require to connect to an HSM where they can store database encryption keys.'
    ScheduledActionType:
      type: object
      properties:
        ResizeCluster:
          $ref: '#/components/schemas/ResizeClusterMessage'
          description: 'An action that runs a <code>ResizeCluster</code> API operation. '
        PauseCluster:
          $ref: '#/components/schemas/PauseClusterMessage'
          description: 'An action that runs a <code>PauseCluster</code> API operation. '
        ResumeCluster:
          $ref: '#/components/schemas/ResumeClusterMessage'
          description: 'An action that runs a <code>ResumeCluster</code> API operation. '
      description: 'The action type that specifies an Amazon Redshift API operation that is supported by the Amazon Redshift scheduler. '
    CreateScheduledActionMessage:
      type: object
      required:
        - ScheduledActionName
        - TargetAction
        - Schedule
        - IamRole
      title: CreateScheduledActionMessage
      properties:
        ScheduledActionName:
          $ref: '#/components/schemas/String'
          description: 'The name of the scheduled action. The name must be unique within an account. For more information about this parameter, see <a>ScheduledAction</a>. '
        TargetAction:
          $ref: '#/components/schemas/ScheduledActionType'
          description: 'A JSON format string of the Amazon Redshift API operation with input parameters. For more information about this parameter, see <a>ScheduledAction</a>. '
        Schedule:
          $ref: '#/components/schemas/String'
          description: 'The schedule in <code>at( )</code> or <code>cron( )</code> format. For more information about this parameter, see <a>ScheduledAction</a>.'
        IamRole:
          $ref: '#/components/schemas/String'
          description: 'The IAM role to assume to run the target action. For more information about this parameter, see <a>ScheduledAction</a>. '
        ScheduledActionDescription:
          $ref: '#/components/schemas/String'
          description: 'The description of the scheduled action. '
        StartTime:
          $ref: '#/components/schemas/TStamp'
          description: 'The start time in UTC of the scheduled action. Before this time, the scheduled action does not trigger. For more information about this parameter, see <a>ScheduledAction</a>.'
        EndTime:
          $ref: '#/components/schemas/TStamp'
          description: 'The end time in UTC of the scheduled action. After this time, the scheduled action does not trigger. For more information about this parameter, see <a>ScheduledAction</a>. '
        Enable:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'If true, the schedule is enabled. If false, the scheduled action does not trigger. For more information about <code>state</code> of the scheduled action, see <a>ScheduledAction</a>. '
    CreateSnapshotCopyGrantMessage:
      type: object
      required:
        - SnapshotCopyGrantName
      title: CreateSnapshotCopyGrantMessage
      properties:
        SnapshotCopyGrantName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the snapshot copy grant. This name must be unique in the region for the Amazon Web Services account.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>Alphabetic characters must be lowercase.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique for all clusters within an Amazon Web Services account.</p> </li> </ul>'
        KmsKeyId:
          $ref: '#/components/schemas/String'
          description: 'The unique identifier of the customer master key (CMK) to which to grant Amazon Redshift permission. If no key is specified, the default key is used.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag instances.
      description: The result of the <code>CreateSnapshotCopyGrant</code> action.
    SnapshotCopyGrant:
      type: object
      properties:
        SnapshotCopyGrantName:
          $ref: '#/components/schemas/String'
          description: The name of the snapshot copy grant.
        KmsKeyId:
          $ref: '#/components/schemas/String'
          description: The unique identifier of the customer master key (CMK) in Amazon Web Services KMS to which Amazon Redshift is granted permission.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag instances.
      description: '<p>The snapshot copy grant that grants Amazon Redshift permission to encrypt copied snapshots with the specified customer master key (CMK) from Amazon Web Services KMS in the destination region.</p> <p> For more information about managing snapshot copy grants, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>'
    ScheduleDefinitionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: ScheduleDefinition
    CreateSnapshotScheduleMessage:
      type: object
      title: CreateSnapshotScheduleMessage
      properties:
        ScheduleDefinitions:
          $ref: '#/components/schemas/ScheduleDefinitionList'
          description: 'The definition of the snapshot schedule. The definition is made up of schedule expressions, for example "cron(30 12 *)" or "rate(12 hours)". '
        ScheduleIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier for a snapshot schedule. Only alphanumeric characters are allowed for the identifier.
        ScheduleDescription:
          $ref: '#/components/schemas/String'
          description: The description of the snapshot schedule.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: An optional set of tags you can use to search for the schedule.
        DryRun:
          $ref: '#/components/schemas/BooleanOptional'
          description: <p/>
        NextInvocations:
          $ref: '#/components/schemas/IntegerOptional'
          description: <p/>
    CreateTagsMessage:
      type: object
      required:
        - ResourceName
        - Tags
      title: CreateTagsMessage
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
          description: 'The Amazon Resource Name (ARN) to which you want to add the tag or tags. For example, <code>arn:aws:redshift:us-east-2:123456789:cluster:t1</code>. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'One or more name/value pairs to add as tags to the specified resource. Each tag name is passed in with the parameter <code>Key</code> and the corresponding value is passed in with the parameter <code>Value</code>. The <code>Key</code> and <code>Value</code> parameters are separated by a comma (,). Separate multiple tags with a space. For example, <code>--tags "Key"="owner","Value"="admin" "Key"="environment","Value"="test" "Key"="version","Value"="1.0"</code>. '
      description: 'Contains the output from the <code>CreateTags</code> action. '
    UsageLimitFeatureType:
      type: string
      enum:
        - spectrum
        - concurrency-scaling
    UsageLimitLimitType:
      type: string
      enum:
        - time
        - data-scanned
    UsageLimitPeriod:
      type: string
      enum:
        - daily
        - weekly
        - monthly
    UsageLimitBreachAction:
      type: string
      enum:
        - log
        - emit-metric
        - disable
    CreateUsageLimitMessage:
      type: object
      required:
        - ClusterIdentifier
        - FeatureType
        - LimitType
        - Amount
      title: CreateUsageLimitMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the cluster that you want to limit usage.
        FeatureType:
          $ref: '#/components/schemas/UsageLimitFeatureType'
          description: The Amazon Redshift feature that you want to limit.
        LimitType:
          $ref: '#/components/schemas/UsageLimitLimitType'
          description: 'The type of limit. Depending on the feature type, this can be based on a time duration or data size. If <code>FeatureType</code> is <code>spectrum</code>, then <code>LimitType</code> must be <code>data-scanned</code>. If <code>FeatureType</code> is <code>concurrency-scaling</code>, then <code>LimitType</code> must be <code>time</code>. '
        Amount:
          $ref: '#/components/schemas/Long'
          description: 'The limit amount. If time-based, this amount is in minutes. If data-based, this amount is in terabytes (TB). The value must be a positive number. '
        Period:
          $ref: '#/components/schemas/UsageLimitPeriod'
          description: 'The time period that the amount applies to. A <code>weekly</code> period begins on Sunday. The default is <code>monthly</code>. '
        BreachAction:
          $ref: '#/components/schemas/UsageLimitBreachAction'
          description: 'The action that Amazon Redshift takes when the limit is reached. The default is log. For more information about this parameter, see <a>UsageLimit</a>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag instances.
    Double:
      type: number
      format: double
    DataShareAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/DataShareAssociation'
    DataShareStatus:
      type: string
      enum:
        - ACTIVE
        - PENDING_AUTHORIZATION
        - AUTHORIZED
        - DEAUTHORIZED
        - REJECTED
        - AVAILABLE
    DataShareAssociation:
      type: object
      properties:
        ConsumerIdentifier:
          $ref: '#/components/schemas/String'
          description: The name of the consumer accounts that have an association with a producer datashare.
        Status:
          $ref: '#/components/schemas/DataShareStatus'
          description: The status of the datashare that is associated.
        CreatedDate:
          $ref: '#/components/schemas/TStamp'
          description: The creation date of the datashare that is associated.
        StatusChangeDate:
          $ref: '#/components/schemas/TStamp'
          description: The status change data of the datashare that is associated.
      description: 'The association of a datashare from a producer account with a data consumer. '
    DataShareList:
      type: array
      items:
        $ref: '#/components/schemas/DataShare'
    DataShareStatusForConsumer:
      type: string
      enum:
        - ACTIVE
        - AVAILABLE
    DataShareStatusForProducer:
      type: string
      enum:
        - ACTIVE
        - AUTHORIZED
        - PENDING_AUTHORIZATION
        - DEAUTHORIZED
        - REJECTED
    DoubleOptional:
      type: number
      format: double
    DbGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: DbGroup
    DeauthorizeDataShareMessage:
      type: object
      required:
        - DataShareArn
        - ConsumerIdentifier
      title: DeauthorizeDataShareMessage
      properties:
        DataShareArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the datashare to remove authorization from.
        ConsumerIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the data consumer that is to have authorization removed from the datashare. This identifier is an AWS account ID.
    DefaultClusterParameters:
      type: object
      properties:
        ParameterGroupFamily:
          $ref: '#/components/schemas/String'
          description: The name of the cluster parameter group family to which the engine default parameters apply.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. '
        Parameters:
          $ref: '#/components/schemas/ParametersList'
          description: The list of cluster default parameters.
      description: Describes the default cluster parameters for a parameter group family.
    DeferredMaintenanceWindow:
      type: object
      properties:
        DeferMaintenanceIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the maintenance window.
        DeferMaintenanceStartTime:
          $ref: '#/components/schemas/TStamp'
          description: ' A timestamp for the beginning of the time period when we defer maintenance.'
        DeferMaintenanceEndTime:
          $ref: '#/components/schemas/TStamp'
          description: ' A timestamp for the end of the time period when we defer maintenance.'
      description: Describes a deferred maintenance window
    DeleteAuthenticationProfileMessage:
      type: object
      required:
        - AuthenticationProfileName
      title: DeleteAuthenticationProfileMessage
      properties:
        AuthenticationProfileName:
          $ref: '#/components/schemas/AuthenticationProfileNameString'
          description: The name of the authentication profile to delete.
    DeleteClusterMessage:
      type: object
      required:
        - ClusterIdentifier
      title: DeleteClusterMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier of the cluster to be deleted.</p> <p>Constraints:</p> <ul> <li> <p>Must contain lowercase characters.</p> </li> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
        SkipFinalClusterSnapshot:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If <code>true</code>, a final cluster snapshot is not created. If <code>false</code>, a final cluster snapshot is created before the cluster is deleted. </p> <note> <p>The <i>FinalClusterSnapshotIdentifier</i> parameter must be specified if <i>SkipFinalClusterSnapshot</i> is <code>false</code>.</p> </note> <p>Default: <code>false</code> </p>'
        FinalClusterSnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, <i>SkipFinalClusterSnapshot</i> must be <code>false</code>. </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
        FinalClusterSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely.</p> <p>The value must be either -1 or an integer between 1 and 3,653.</p> <p>The default value is -1.</p>'
      description: <p/>
    DeleteClusterParameterGroupMessage:
      type: object
      required:
        - ParameterGroupName
      title: DeleteClusterParameterGroupMessage
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the parameter group to be deleted.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing cluster parameter group.</p> </li> <li> <p>Cannot delete a default cluster parameter group.</p> </li> </ul>'
      description: <p/>
    DeleteClusterSecurityGroupMessage:
      type: object
      required:
        - ClusterSecurityGroupName
      title: DeleteClusterSecurityGroupMessage
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cluster security group to be deleted.
      description: <p/>
    DeleteClusterSubnetGroupMessage:
      type: object
      required:
        - ClusterSubnetGroupName
      title: DeleteClusterSubnetGroupMessage
      properties:
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cluster subnet group name to be deleted.
      description: <p/>
    DeleteEndpointAccessMessage:
      type: object
      required:
        - EndpointName
      title: DeleteEndpointAccessMessage
      properties:
        EndpointName:
          $ref: '#/components/schemas/String'
          description: The Redshift-managed VPC endpoint to delete.
    DeleteEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
      title: DeleteEventSubscriptionMessage
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
          description: The name of the Amazon Redshift event notification subscription to be deleted.
      description: <p/>
    DeleteHsmClientCertificateMessage:
      type: object
      required:
        - HsmClientCertificateIdentifier
      title: DeleteHsmClientCertificateMessage
      properties:
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the HSM client certificate to be deleted.
      description: <p/>
    DeleteHsmConfigurationMessage:
      type: object
      required:
        - HsmConfigurationIdentifier
      title: DeleteHsmConfigurationMessage
      properties:
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the Amazon Redshift HSM configuration to be deleted.
      description: <p/>
    DeleteScheduledActionMessage:
      type: object
      required:
        - ScheduledActionName
      title: DeleteScheduledActionMessage
      properties:
        ScheduledActionName:
          $ref: '#/components/schemas/String'
          description: 'The name of the scheduled action to delete. '
    DeleteSnapshotCopyGrantMessage:
      type: object
      required:
        - SnapshotCopyGrantName
      title: DeleteSnapshotCopyGrantMessage
      properties:
        SnapshotCopyGrantName:
          $ref: '#/components/schemas/String'
          description: The name of the snapshot copy grant to delete.
      description: The result of the <code>DeleteSnapshotCopyGrant</code> action.
    DeleteSnapshotScheduleMessage:
      type: object
      required:
        - ScheduleIdentifier
      title: DeleteSnapshotScheduleMessage
      properties:
        ScheduleIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier of the snapshot schedule to delete.
    TagKeyList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: TagKey
    DeleteTagsMessage:
      type: object
      required:
        - ResourceName
        - TagKeys
      title: DeleteTagsMessage
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
          description: 'The Amazon Resource Name (ARN) from which you want to remove the tag or tags. For example, <code>arn:aws:redshift:us-east-2:123456789:cluster:t1</code>. '
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: The tag key that you want to delete.
      description: 'Contains the output from the <code>DeleteTags</code> action. '
    DeleteUsageLimitMessage:
      type: object
      required:
        - UsageLimitId
      title: DeleteUsageLimitMessage
      properties:
        UsageLimitId:
          $ref: '#/components/schemas/String'
          description: The identifier of the usage limit to delete.
    DescribeAccountAttributesMessage:
      type: object
      title: DescribeAccountAttributesMessage
      properties:
        AttributeNames:
          $ref: '#/components/schemas/AttributeNameList'
          description: A list of attribute names.
    DescribeAuthenticationProfilesMessage:
      type: object
      title: DescribeAuthenticationProfilesMessage
      properties:
        AuthenticationProfileName:
          $ref: '#/components/schemas/AuthenticationProfileNameString'
          description: The name of the authentication profile to describe. If not specified then all authentication profiles owned by the account are listed.
    DescribeClusterDbRevisionsMessage:
      type: object
      title: DescribeClusterDbRevisionsMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier for a cluster whose <code>ClusterDbRevisions</code> you are requesting. This parameter is case sensitive. All clusters defined for an account are returned by default.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in the <code>marker</code> field of the response. You can retrieve the next set of response records by providing the returned <code>marker</code> value in the <code>marker</code> parameter and retrying the request. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: '<p>An optional parameter that specifies the starting point for returning a set of response records. When the results of a <code>DescribeClusterDbRevisions</code> request exceed the value specified in <code>MaxRecords</code>, Amazon Redshift returns a value in the <code>marker</code> field of the response. You can retrieve the next set of response records by providing the returned <code>marker</code> value in the <code>marker</code> parameter and retrying the request. </p> <p>Constraints: You can specify either the <code>ClusterIdentifier</code> parameter, or the <code>marker</code> parameter, but not both.</p>'
    TagValueList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: TagValue
    DescribeClusterParameterGroupsMessage:
      type: object
      title: DescribeClusterParameterGroupsMessage
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
          description: 'The name of a specific parameter group for which to return details. By default, details about all parameter groups and the default parameter group are returned.'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterParameterGroups</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'A tag key or keys for which you want to return all matching cluster parameter groups that are associated with the specified key or keys. For example, suppose that you have parameter groups that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the parameter groups that have either or both of these tag keys associated with them.'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
          description: 'A tag value or values for which you want to return all matching cluster parameter groups that are associated with the specified tag value or values. For example, suppose that you have parameter groups that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the parameter groups that have either or both of these tag values associated with them.'
      description: <p/>
    DescribeClusterParametersMessage:
      type: object
      required:
        - ParameterGroupName
      title: DescribeClusterParametersMessage
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of a cluster parameter group for which to return details.
        Source:
          $ref: '#/components/schemas/String'
          description: '<p>The parameter types to return. Specify <code>user</code> to show parameters that are different form the default. Similarly, specify <code>engine-default</code> to show parameters that are the same as the default parameter group. </p> <p>Default: All parameter types returned.</p> <p>Valid Values: <code>user</code> | <code>engine-default</code> </p>'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterParameters</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
      description: <p/>
    DescribeClusterSecurityGroupsMessage:
      type: object
      title: DescribeClusterSecurityGroupsMessage
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of a cluster security group for which you are requesting details. You can specify either the <b>Marker</b> parameter or a <b>ClusterSecurityGroupName</b> parameter, but not both. </p> <p> Example: <code>securitygroup1</code> </p>'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: '<p>An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterSecurityGroups</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. </p> <p>Constraints: You can specify either the <b>ClusterSecurityGroupName</b> parameter or the <b>Marker</b> parameter, but not both. </p>'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'A tag key or keys for which you want to return all matching cluster security groups that are associated with the specified key or keys. For example, suppose that you have security groups that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the security groups that have either or both of these tag keys associated with them.'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
          description: 'A tag value or values for which you want to return all matching cluster security groups that are associated with the specified tag value or values. For example, suppose that you have security groups that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the security groups that have either or both of these tag values associated with them.'
      description: <p/>
    SnapshotSortingEntityList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SnapshotSortingEntity'
          - xml:
              name: SnapshotSortingEntity
    DescribeClusterSnapshotsMessage:
      type: object
      title: DescribeClusterSnapshotsMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the cluster which generated the requested snapshots.
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: The snapshot identifier of the snapshot about which to return information.
        SnapshotType:
          $ref: '#/components/schemas/String'
          description: '<p>The type of snapshots for which you are requesting information. By default, snapshots of all types are returned.</p> <p>Valid Values: <code>automated</code> | <code>manual</code> </p>'
        StartTime:
          $ref: '#/components/schemas/TStamp'
          description: '<p>A value that requests only snapshots created at or after the specified time. The time value is specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: <code>2012-07-16T18:00:00Z</code> </p>'
        EndTime:
          $ref: '#/components/schemas/TStamp'
          description: '<p>A time value that requests only snapshots created at or before the specified time. The time value is specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: <code>2012-07-16T18:00:00Z</code> </p>'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterSnapshots</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
        OwnerAccount:
          $ref: '#/components/schemas/String'
          description: 'The Amazon Web Services account used to create or copy the snapshot. Use this field to filter the results to snapshots owned by a particular account. To describe snapshots you own, either specify your Amazon Web Services account, or do not specify the parameter.'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'A tag key or keys for which you want to return all matching cluster snapshots that are associated with the specified key or keys. For example, suppose that you have snapshots that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the snapshots that have either or both of these tag keys associated with them.'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
          description: 'A tag value or values for which you want to return all matching cluster snapshots that are associated with the specified tag value or values. For example, suppose that you have snapshots that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the snapshots that have either or both of these tag values associated with them.'
        ClusterExists:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>A value that indicates whether to return snapshots only for an existing cluster. You can perform table-level restore only by using a snapshot of an existing cluster, that is, a cluster that has not been deleted. Values for this parameter work as follows: </p> <ul> <li> <p>If <code>ClusterExists</code> is set to <code>true</code>, <code>ClusterIdentifier</code> is required.</p> </li> <li> <p>If <code>ClusterExists</code> is set to <code>false</code> and <code>ClusterIdentifier</code> isn''t specified, all snapshots associated with deleted clusters (orphaned snapshots) are returned. </p> </li> <li> <p>If <code>ClusterExists</code> is set to <code>false</code> and <code>ClusterIdentifier</code> is specified for a deleted cluster, snapshots associated with that cluster are returned.</p> </li> <li> <p>If <code>ClusterExists</code> is set to <code>false</code> and <code>ClusterIdentifier</code> is specified for an existing cluster, no snapshots are returned. </p> </li> </ul>'
        SortingEntities:
          $ref: '#/components/schemas/SnapshotSortingEntityList'
          description: <p/>
      description: <p/>
    DescribeClusterSubnetGroupsMessage:
      type: object
      title: DescribeClusterSubnetGroupsMessage
      properties:
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cluster subnet group for which information is requested.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterSubnetGroups</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'A tag key or keys for which you want to return all matching cluster subnet groups that are associated with the specified key or keys. For example, suppose that you have subnet groups that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the subnet groups that have either or both of these tag keys associated with them.'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
          description: 'A tag value or values for which you want to return all matching cluster subnet groups that are associated with the specified tag value or values. For example, suppose that you have subnet groups that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the subnet groups that have either or both of these tag values associated with them.'
      description: <p/>
    DescribeClusterTracksMessage:
      type: object
      title: DescribeClusterTracksMessage
      properties:
        MaintenanceTrackName:
          $ref: '#/components/schemas/String'
          description: 'The name of the maintenance track. '
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: An integer value for the maximum number of maintenance tracks to return.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <code>DescribeClusterTracks</code> request exceed the value specified in <code>MaxRecords</code>, Amazon Redshift returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
    DescribeClusterVersionsMessage:
      type: object
      title: DescribeClusterVersionsMessage
      properties:
        ClusterVersion:
          $ref: '#/components/schemas/String'
          description: '<p>The specific cluster version to return.</p> <p>Example: <code>1.0</code> </p>'
        ClusterParameterGroupFamily:
          $ref: '#/components/schemas/String'
          description: '<p>The name of a specific cluster parameter group family to return details for.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterVersions</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
      description: <p/>
    DescribeClustersMessage:
      type: object
      title: DescribeClustersMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: <p>The unique identifier of a cluster whose properties you are requesting. This parameter is case sensitive.</p> <p>The default is that all clusters defined for an account are returned.</p>
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: '<p>An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusters</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. </p> <p>Constraints: You can specify either the <b>ClusterIdentifier</b> parameter or the <b>Marker</b> parameter, but not both. </p>'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'A tag key or keys for which you want to return all matching clusters that are associated with the specified key or keys. For example, suppose that you have clusters that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the clusters that have either or both of these tag keys associated with them.'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
          description: 'A tag value or values for which you want to return all matching clusters that are associated with the specified tag value or values. For example, suppose that you have clusters that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the clusters that have either or both of these tag values associated with them.'
      description: <p/>
    DescribeDataSharesForConsumerMessage:
      type: object
      title: DescribeDataSharesForConsumerMessage
      properties:
        ConsumerArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the consumer that returns in the list of datashares.
        Status:
          $ref: '#/components/schemas/DataShareStatusForConsumer'
          description: 'An identifier giving the status of a datashare in the consumer cluster. If this field is specified, Amazon Redshift returns the list of datashares that have the specified status.'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. '
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeDataSharesForConsumer</a> request exceed the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
    DescribeDataSharesForProducerMessage:
      type: object
      title: DescribeDataSharesForProducerMessage
      properties:
        ProducerArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the producer that returns in the list of datashares.
        Status:
          $ref: '#/components/schemas/DataShareStatusForProducer'
          description: 'An identifier giving the status of a datashare in the producer. If this field is specified, Amazon Redshift returns the list of datashares that have the specified status.'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. '
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeDataSharesForProducer</a> request exceed the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
    DescribeDataSharesMessage:
      type: object
      title: DescribeDataSharesMessage
      properties:
        DataShareArn:
          $ref: '#/components/schemas/String'
          description: The identifier of the datashare to describe details of.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. '
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeDataShares</a> request exceed the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
    DescribeDefaultClusterParametersMessage:
      type: object
      required:
        - ParameterGroupFamily
      title: DescribeDefaultClusterParametersMessage
      properties:
        ParameterGroupFamily:
          $ref: '#/components/schemas/String'
          description: The name of the cluster parameter group family.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeDefaultClusterParameters</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
      description: <p/>
    DescribeEndpointAccessMessage:
      type: object
      title: DescribeEndpointAccessMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The cluster identifier associated with the described endpoint.
        ResourceOwner:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID of the owner of the cluster.
        EndpointName:
          $ref: '#/components/schemas/String'
          description: The name of the endpoint to be described.
        VpcId:
          $ref: '#/components/schemas/String'
          description: The virtual private cloud (VPC) identifier with access to the cluster.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a <code>Marker</code> is included in the response so that the remaining results can be retrieved.'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional pagination token provided by a previous <code>DescribeEndpointAccess</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter.'
    DescribeEndpointAuthorizationMessage:
      type: object
      title: DescribeEndpointAuthorizationMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The cluster identifier of the cluster to access.
        Account:
          $ref: '#/components/schemas/String'
          description: 'The AAmazon Web Services account ID of either the cluster owner (grantor) or grantee. If <code>Grantee</code> parameter is true, then the <code>Account</code> value is of the grantor.'
        Grantee:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'Indicates whether to check authorization from a grantor or grantee point of view. If true, Amazon Redshift returns endpoint authorizations that you''ve been granted. If false (default), checks authorization from a grantor point of view.'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a <code>Marker</code> is included in the response so that the remaining results can be retrieved.'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional pagination token provided by a previous <code>DescribeEndpointAuthorization</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter.'
    DescribeEventCategoriesMessage:
      type: object
      title: DescribeEventCategoriesMessage
      properties:
        SourceType:
          $ref: '#/components/schemas/String'
          description: '<p>The source type, such as cluster or parameter group, to which the described event categories apply.</p> <p>Valid values: cluster, cluster-snapshot, cluster-parameter-group, cluster-security-group, and scheduled-action.</p>'
      description: <p/>
    DescribeEventSubscriptionsMessage:
      type: object
      title: DescribeEventSubscriptionsMessage
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
          description: The name of the Amazon Redshift event notification subscription to be described.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a DescribeEventSubscriptions request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'A tag key or keys for which you want to return all matching event notification subscriptions that are associated with the specified key or keys. For example, suppose that you have subscriptions that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the subscriptions that have either or both of these tag keys associated with them.'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
          description: 'A tag value or values for which you want to return all matching event notification subscriptions that are associated with the specified tag value or values. For example, suppose that you have subscriptions that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the subscriptions that have either or both of these tag values associated with them.'
      description: <p/>
    SourceType:
      type: string
      enum:
        - cluster
        - cluster-parameter-group
        - cluster-security-group
        - cluster-snapshot
        - scheduled-action
    DescribeEventsMessage:
      type: object
      title: DescribeEventsMessage
      properties:
        SourceIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier of the event source for which events will be returned. If this parameter is not specified, then all sources are included in the response.</p> <p>Constraints:</p> <p>If <i>SourceIdentifier</i> is supplied, <i>SourceType</i> must also be provided.</p> <ul> <li> <p>Specify a cluster identifier when <i>SourceType</i> is <code>cluster</code>.</p> </li> <li> <p>Specify a cluster security group name when <i>SourceType</i> is <code>cluster-security-group</code>.</p> </li> <li> <p>Specify a cluster parameter group name when <i>SourceType</i> is <code>cluster-parameter-group</code>.</p> </li> <li> <p>Specify a cluster snapshot identifier when <i>SourceType</i> is <code>cluster-snapshot</code>.</p> </li> </ul>'
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: '<p>The event source to retrieve events for. If no value is specified, all events are returned.</p> <p>Constraints:</p> <p>If <i>SourceType</i> is supplied, <i>SourceIdentifier</i> must also be provided.</p> <ul> <li> <p>Specify <code>cluster</code> when <i>SourceIdentifier</i> is a cluster identifier.</p> </li> <li> <p>Specify <code>cluster-security-group</code> when <i>SourceIdentifier</i> is a cluster security group name.</p> </li> <li> <p>Specify <code>cluster-parameter-group</code> when <i>SourceIdentifier</i> is a cluster parameter group name.</p> </li> <li> <p>Specify <code>cluster-snapshot</code> when <i>SourceIdentifier</i> is a cluster snapshot identifier.</p> </li> </ul>'
        StartTime:
          $ref: '#/components/schemas/TStamp'
          description: '<p>The beginning of the time interval to retrieve events for, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: <code>2009-07-08T18:00Z</code> </p>'
        EndTime:
          $ref: '#/components/schemas/TStamp'
          description: '<p>The end of the time interval for which to retrieve events, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: <code>2009-07-08T18:00Z</code> </p>'
        Duration:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of minutes prior to the time of the request for which to retrieve events. For example, if the request is sent at 18:00 and you specify a duration of 60, then only events which have occurred after 17:00 will be returned.</p> <p>Default: <code>60</code> </p>'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeEvents</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
      description: <p/>
    DescribeHsmClientCertificatesMessage:
      type: object
      title: DescribeHsmClientCertificatesMessage
      properties:
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
          description: 'The identifier of a specific HSM client certificate for which you want information. If no identifier is specified, information is returned for all HSM client certificates owned by your Amazon Web Services account.'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeHsmClientCertificates</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'A tag key or keys for which you want to return all matching HSM client certificates that are associated with the specified key or keys. For example, suppose that you have HSM client certificates that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the HSM client certificates that have either or both of these tag keys associated with them.'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
          description: 'A tag value or values for which you want to return all matching HSM client certificates that are associated with the specified tag value or values. For example, suppose that you have HSM client certificates that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the HSM client certificates that have either or both of these tag values associated with them.'
      description: <p/>
    DescribeHsmConfigurationsMessage:
      type: object
      title: DescribeHsmConfigurationsMessage
      properties:
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
          description: 'The identifier of a specific Amazon Redshift HSM configuration to be described. If no identifier is specified, information is returned for all HSM configurations owned by your Amazon Web Services account.'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeHsmConfigurations</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'A tag key or keys for which you want to return all matching HSM configurations that are associated with the specified key or keys. For example, suppose that you have HSM configurations that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the HSM configurations that have either or both of these tag keys associated with them.'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
          description: 'A tag value or values for which you want to return all matching HSM configurations that are associated with the specified tag value or values. For example, suppose that you have HSM configurations that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the HSM configurations that have either or both of these tag values associated with them.'
      description: <p/>
    DescribeLoggingStatusMessage:
      type: object
      required:
        - ClusterIdentifier
      title: DescribeLoggingStatusMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier of the cluster from which to get the logging status.</p> <p>Example: <code>examplecluster</code> </p>'
      description: <p/>
    NodeConfigurationOptionsFilterList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NodeConfigurationOptionsFilter'
          - xml:
              name: NodeConfigurationOptionsFilter
    DescribeNodeConfigurationOptionsMessage:
      type: object
      required:
        - ActionType
      title: DescribeNodeConfigurationOptionsMessage
      properties:
        ActionType:
          $ref: '#/components/schemas/ActionType'
          description: 'The action type to evaluate for possible node configurations. Specify "restore-cluster" to get configuration combinations based on an existing snapshot. Specify "recommend-node-config" to get configuration recommendations based on an existing cluster or snapshot. Specify "resize-cluster" to get configuration combinations for elastic resize based on an existing cluster. '
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the cluster to evaluate for possible node configurations.
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the snapshot to evaluate for possible node configurations.
        OwnerAccount:
          $ref: '#/components/schemas/String'
          description: 'The Amazon Web Services account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.'
        Filters:
          allOf:
            - $ref: '#/components/schemas/NodeConfigurationOptionsFilterList'
            - xml:
                name: Filter
              description: 'A set of name, operator, and value items to filter the results.'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeNodeConfigurationOptions</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>500</code> </p> <p>Constraints: minimum 100, maximum 500.</p>'
    DescribeOrderableClusterOptionsMessage:
      type: object
      title: DescribeOrderableClusterOptionsMessage
      properties:
        ClusterVersion:
          $ref: '#/components/schemas/String'
          description: '<p>The version filter value. Specify this parameter to show only the available offerings matching the specified version.</p> <p>Default: All versions.</p> <p>Constraints: Must be one of the version returned from <a>DescribeClusterVersions</a>.</p>'
        NodeType:
          $ref: '#/components/schemas/String'
          description: The node type filter value. Specify this parameter to show only the available offerings matching the specified node type.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeOrderableClusterOptions</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
      description: <p/>
    PartnerIntegrationAccountId:
      type: string
      pattern: '^[0-9]+$'
      minLength: 12
      maxLength: 12
    PartnerIntegrationClusterIdentifier:
      type: string
      pattern: '^[a-zA-Z0-9\-]+$'
      maxLength: 63
    PartnerIntegrationDatabaseName:
      type: string
      pattern: '^[\p{L}_][\p{L}\p{N}@$#_]+$'
      maxLength: 127
    PartnerIntegrationPartnerName:
      type: string
      pattern: '^[a-zA-Z0-9\-_]+$'
      maxLength: 255
    DescribePartnersInputMessage:
      type: object
      required:
        - AccountId
        - ClusterIdentifier
      title: DescribePartnersInputMessage
      properties:
        AccountId:
          $ref: '#/components/schemas/PartnerIntegrationAccountId'
          description: The Amazon Web Services account ID that owns the cluster.
        ClusterIdentifier:
          $ref: '#/components/schemas/PartnerIntegrationClusterIdentifier'
          description: The cluster identifier of the cluster whose partner integration is being described.
        DatabaseName:
          $ref: '#/components/schemas/PartnerIntegrationDatabaseName'
          description: 'The name of the database whose partner integration is being described. If database name is not specified, then all databases in the cluster are described.'
        PartnerName:
          $ref: '#/components/schemas/PartnerIntegrationPartnerName'
          description: 'The name of the partner that is being described. If partner name is not specified, then all partner integrations are described.'
    PartnerIntegrationInfoList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PartnerIntegrationInfo'
          - xml:
              name: PartnerIntegrationInfo
    DescribeReservedNodeOfferingsMessage:
      type: object
      title: DescribeReservedNodeOfferingsMessage
      properties:
        ReservedNodeOfferingId:
          $ref: '#/components/schemas/String'
          description: The unique identifier for the offering.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeReservedNodeOfferings</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
      description: <p/>
    DescribeReservedNodesMessage:
      type: object
      title: DescribeReservedNodesMessage
      properties:
        ReservedNodeId:
          $ref: '#/components/schemas/String'
          description: Identifier for the node reservation.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeReservedNodes</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
      description: <p/>
    DescribeResizeMessage:
      type: object
      required:
        - ClusterIdentifier
      title: DescribeResizeMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The unique identifier of a cluster whose resize progress you are requesting. This parameter is case-sensitive.</p> <p>By default, resize operations for all clusters defined for an Amazon Web Services account are returned.</p>'
      description: <p/>
    ScheduledActionTypeValues:
      type: string
      enum:
        - ResizeCluster
        - PauseCluster
        - ResumeCluster
    ScheduledActionFilterList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ScheduledActionFilter'
          - xml:
              name: ScheduledActionFilter
    DescribeScheduledActionsMessage:
      type: object
      title: DescribeScheduledActionsMessage
      properties:
        ScheduledActionName:
          $ref: '#/components/schemas/String'
          description: 'The name of the scheduled action to retrieve. '
        TargetActionType:
          $ref: '#/components/schemas/ScheduledActionTypeValues'
          description: 'The type of the scheduled actions to retrieve. '
        StartTime:
          $ref: '#/components/schemas/TStamp'
          description: The start time in UTC of the scheduled actions to retrieve. Only active scheduled actions that have invocations after this time are retrieved.
        EndTime:
          $ref: '#/components/schemas/TStamp'
          description: The end time in UTC of the scheduled action to retrieve. Only active scheduled actions that have invocations before this time are retrieved.
        Active:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'If true, retrieve only active scheduled actions. If false, retrieve only disabled scheduled actions. '
        Filters:
          $ref: '#/components/schemas/ScheduledActionFilterList'
          description: 'List of scheduled action filters. '
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeScheduledActions</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
    DescribeSnapshotCopyGrantsMessage:
      type: object
      title: DescribeSnapshotCopyGrantsMessage
      properties:
        SnapshotCopyGrantName:
          $ref: '#/components/schemas/String'
          description: The name of the snapshot copy grant.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: '<p>An optional parameter that specifies the starting point to return a set of response records. When the results of a <code>DescribeSnapshotCopyGrant</code> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. </p> <p>Constraints: You can specify either the <b>SnapshotCopyGrantName</b> parameter or the <b>Marker</b> parameter, but not both. </p>'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'A tag key or keys for which you want to return all matching resources that are associated with the specified key or keys. For example, suppose that you have resources tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with all resources that have either or both of these tag keys associated with them.'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
          description: 'A tag value or values for which you want to return all matching resources that are associated with the specified value or values. For example, suppose that you have resources tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with all resources that have either or both of these tag values associated with them.'
      description: The result of the <code>DescribeSnapshotCopyGrants</code> action.
    DescribeSnapshotSchedulesMessage:
      type: object
      title: DescribeSnapshotSchedulesMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The unique identifier for the cluster whose snapshot schedules you want to view.
        ScheduleIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier for a snapshot schedule.
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: The key value for a snapshot schedule tag.
        TagValues:
          $ref: '#/components/schemas/TagValueList'
          description: The value corresponding to the key of the snapshot schedule tag.
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>marker</code> parameter and retrying the command. If the <code>marker</code> field is empty, all response records have been retrieved for the request.'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The maximum number or response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned <code>marker</code> value.'
    SnapshotScheduleList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SnapshotSchedule'
          - xml:
              name: SnapshotSchedule
    DescribeTableRestoreStatusMessage:
      type: object
      title: DescribeTableRestoreStatusMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The Amazon Redshift cluster that the table is being restored to.
        TableRestoreRequestId:
          $ref: '#/components/schemas/String'
          description: 'The identifier of the table restore request to return status for. If you don''t specify a <code>TableRestoreRequestId</code> value, then <code>DescribeTableRestoreStatus</code> returns the status of all in-progress table restore requests.'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional pagination token provided by a previous <code>DescribeTableRestoreStatus</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter.'
      description: <p/>
    DescribeTagsMessage:
      type: object
      title: DescribeTagsMessage
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
          description: 'The Amazon Resource Name (ARN) for which you want to describe the tag or tags. For example, <code>arn:aws:redshift:us-east-2:123456789:cluster:t1</code>. '
        ResourceType:
          $ref: '#/components/schemas/String'
          description: '<p>The type of resource with which you want to view tags. Valid resource types are: </p> <ul> <li> <p>Cluster</p> </li> <li> <p>CIDR/IP</p> </li> <li> <p>EC2 security group</p> </li> <li> <p>Snapshot</p> </li> <li> <p>Cluster security group</p> </li> <li> <p>Subnet group</p> </li> <li> <p>HSM connection</p> </li> <li> <p>HSM certificate</p> </li> <li> <p>Parameter group</p> </li> <li> <p>Snapshot copy grant</p> </li> </ul> <p>For more information about Amazon Redshift resource types and constructing ARNs, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-overview.html#redshift-iam-access-control-specify-actions">Specifying Policy Elements: Actions, Effects, Resources, and Principals</a> in the Amazon Redshift Cluster Management Guide. </p>'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'The maximum number or response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned <code>marker</code> value. '
        Marker:
          $ref: '#/components/schemas/String'
          description: 'A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>marker</code> parameter and retrying the command. If the <code>marker</code> field is empty, all response records have been retrieved for the request. '
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'A tag key or keys for which you want to return all matching resources that are associated with the specified key or keys. For example, suppose that you have resources tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with all resources that have either or both of these tag keys associated with them.'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
          description: 'A tag value or values for which you want to return all matching resources that are associated with the specified value or values. For example, suppose that you have resources tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with all resources that have either or both of these tag values associated with them.'
      description: <p/>
    DescribeUsageLimitsMessage:
      type: object
      title: DescribeUsageLimitsMessage
      properties:
        UsageLimitId:
          $ref: '#/components/schemas/String'
          description: The identifier of the usage limit to describe.
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the cluster for which you want to describe usage limits.
        FeatureType:
          $ref: '#/components/schemas/UsageLimitFeatureType'
          description: The feature type for which you want to describe usage limits.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>'
        Marker:
          $ref: '#/components/schemas/String'
          description: 'An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeUsageLimits</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. '
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'A tag key or keys for which you want to return all matching usage limit objects that are associated with the specified key or keys. For example, suppose that you have parameter groups that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the usage limit objects have either or both of these tag keys associated with them.'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
          description: 'A tag value or values for which you want to return all matching usage limit objects that are associated with the specified tag value or values. For example, suppose that you have parameter groups that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the usage limit objects that have either or both of these tag values associated with them.'
    DisableLoggingMessage:
      type: object
      required:
        - ClusterIdentifier
      title: DisableLoggingMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier of the cluster on which logging is to be stopped.</p> <p>Example: <code>examplecluster</code> </p>'
      description: <p/>
    DisableSnapshotCopyMessage:
      type: object
      required:
        - ClusterIdentifier
      title: DisableSnapshotCopyMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The unique identifier of the source cluster that you want to disable copying of snapshots to a destination region.</p> <p>Constraints: Must be the valid name of an existing cluster that has cross-region snapshot copy enabled.</p>'
      description: <p/>
    DisassociateDataShareConsumerMessage:
      type: object
      required:
        - DataShareArn
      title: DisassociateDataShareConsumerMessage
      properties:
        DataShareArn:
          $ref: '#/components/schemas/String'
          description: 'The Amazon Resource Name (ARN) of the datashare to remove association for. '
        DisassociateEntireAccount:
          $ref: '#/components/schemas/BooleanOptional'
          description: A value that specifies whether association for the datashare is removed from the entire account.
        ConsumerArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the consumer that association for the datashare is removed from.
    EC2SecurityGroup:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
          description: The status of the EC2 security group.
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the EC2 Security Group.
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
          description: 'The Amazon Web Services account ID of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> field. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags for the EC2 security group.
      description: Describes an Amazon EC2 security group.
    UpdateTarget:
      type: object
      properties:
        MaintenanceTrackName:
          $ref: '#/components/schemas/String'
          description: The name of the new maintenance track.
        DatabaseVersion:
          $ref: '#/components/schemas/String'
          description: The cluster version for the new maintenance track.
        SupportedOperations:
          $ref: '#/components/schemas/SupportedOperationList'
          description: A list of operations supported by the maintenance track.
      description: A maintenance track that you can switch the current track to.
    EligibleTracksToUpdateList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/UpdateTarget'
          - xml:
              name: UpdateTarget
    EnableLoggingMessage:
      type: object
      required:
        - ClusterIdentifier
        - BucketName
      title: EnableLoggingMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier of the cluster on which logging is to be started.</p> <p>Example: <code>examplecluster</code> </p>'
        BucketName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of an existing S3 bucket where the log files are to be stored.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the same region as the cluster</p> </li> <li> <p>The cluster must have read bucket and put object permissions</p> </li> </ul>'
        S3KeyPrefix:
          $ref: '#/components/schemas/String'
          description: '<p>The prefix applied to the log file names.</p> <p>Constraints:</p> <ul> <li> <p>Cannot exceed 512 characters</p> </li> <li> <p>Cannot contain spaces( ), double quotes ("), single quotes (''), a backslash (\), or control characters. The hexadecimal codes for invalid characters are: </p> <ul> <li> <p>x00 to x20</p> </li> <li> <p>x22</p> </li> <li> <p>x27</p> </li> <li> <p>x5c</p> </li> <li> <p>x7f or larger</p> </li> </ul> </li> </ul>'
      description: <p/>
    EnableSnapshotCopyMessage:
      type: object
      required:
        - ClusterIdentifier
        - DestinationRegion
      title: EnableSnapshotCopyMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The unique identifier of the source cluster to copy snapshots from.</p> <p>Constraints: Must be the valid name of an existing cluster that does not already have cross-region snapshot copy enabled.</p>'
        DestinationRegion:
          $ref: '#/components/schemas/String'
          description: '<p>The destination Amazon Web Services Region that you want to copy snapshots to.</p> <p>Constraints: Must be the name of a valid Amazon Web Services Region. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region">Regions and Endpoints</a> in the Amazon Web Services General Reference. </p>'
        RetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days to retain automated snapshots in the destination region after they are copied from the source region.</p> <p>Default: 7.</p> <p>Constraints: Must be at least 1 and no more than 35.</p>'
        SnapshotCopyGrantName:
          $ref: '#/components/schemas/String'
          description: The name of the snapshot copy grant to use when snapshots of an Amazon Web Services KMS-encrypted cluster are copied to the destination region.
        ManualSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days to retain newly copied snapshots in the destination Amazon Web Services Region after they are copied from the source Amazon Web Services Region. If the value is -1, the manual snapshot is retained indefinitely. </p> <p>The value must be either -1 or an integer between 1 and 3,653.</p>'
      description: <p/>
    VpcEndpointsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcEndpoint'
          - xml:
              name: VpcEndpoint
    VpcEndpoint:
      type: object
      properties:
        VpcEndpointId:
          $ref: '#/components/schemas/String'
          description: The connection endpoint ID for connecting an Amazon Redshift cluster through the proxy.
        VpcId:
          $ref: '#/components/schemas/String'
          description: 'The VPC identifier that the endpoint is associated. '
        NetworkInterfaces:
          $ref: '#/components/schemas/NetworkInterfaceList'
          description: 'One or more network interfaces of the endpoint. Also known as an interface endpoint. '
      description: The connection endpoint for connecting to an Amazon Redshift cluster through the proxy.
    EndpointAccesses:
      type: array
      items:
        $ref: '#/components/schemas/EndpointAccess'
    EndpointAuthorizations:
      type: array
      items:
        $ref: '#/components/schemas/EndpointAuthorization'
    Event:
      type: object
      properties:
        SourceIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier for the source of the event.
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: The source type for this event.
        Message:
          $ref: '#/components/schemas/String'
          description: The text of this event.
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
          description: '<p>A list of the event categories.</p> <p>Values: Configuration, Management, Monitoring, Security, Pending</p>'
        Severity:
          $ref: '#/components/schemas/String'
          description: '<p>The severity of the event.</p> <p>Values: ERROR, INFO</p>'
        Date:
          $ref: '#/components/schemas/TStamp'
          description: The date and time of the event.
        EventId:
          $ref: '#/components/schemas/String'
          description: The identifier of the event.
      description: Describes an event.
    EventInfoMapList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EventInfoMap'
          - xml:
              name: EventInfoMap
    EventCategoriesMap:
      type: object
      properties:
        SourceType:
          $ref: '#/components/schemas/String'
          description: 'The source type, such as cluster or cluster-snapshot, that the returned categories belong to.'
        Events:
          $ref: '#/components/schemas/EventInfoMapList'
          description: The events in the event category.
      description: Describes event categories.
    EventCategoriesMapList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EventCategoriesMap'
          - xml:
              name: EventCategoriesMap
    EventInfoMap:
      type: object
      properties:
        EventId:
          $ref: '#/components/schemas/String'
          description: The identifier of an Amazon Redshift event.
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
          description: The category of an Amazon Redshift event.
        EventDescription:
          $ref: '#/components/schemas/String'
          description: The description of an Amazon Redshift event.
        Severity:
          $ref: '#/components/schemas/String'
          description: '<p>The severity of the event.</p> <p>Values: ERROR, INFO</p>'
      description: Describes event information.
    EventList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Event'
          - xml:
              name: Event
    EventSubscriptionsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EventSubscription'
          - xml:
              name: EventSubscription
    GetClusterCredentialsMessage:
      type: object
      required:
        - DbUser
        - ClusterIdentifier
      title: GetClusterCredentialsMessage
      properties:
        DbUser:
          $ref: '#/components/schemas/String'
          description: '<p>The name of a database user. If a user name matching <code>DbUser</code> exists in the database, the temporary user credentials have the same permissions as the existing user. If <code>DbUser</code> doesn''t exist in the database and <code>Autocreate</code> is <code>True</code>, a new user is created using the value for <code>DbUser</code> with PUBLIC permissions. If a database user matching the value for <code>DbUser</code> doesn''t exist and <code>Autocreate</code> is <code>False</code>, then the command succeeds but the connection attempt will fail because the user doesn''t exist in the database.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_USER.html">CREATE USER</a> in the Amazon Redshift Database Developer Guide. </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 64 alphanumeric characters or hyphens. The user name can''t be <code>PUBLIC</code>.</p> </li> <li> <p>Must contain only lowercase letters, numbers, underscore, plus sign, period (dot), at symbol (@), or hyphen.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Must not contain a colon ( : ) or slash ( / ). </p> </li> <li> <p>Cannot be a reserved word. A list of reserved words can be found in <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved Words</a> in the Amazon Redshift Database Developer Guide.</p> </li> </ul>'
        DbName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of a database that <code>DbUser</code> is authorized to log on to. If <code>DbName</code> is not specified, <code>DbUser</code> can log on to any existing database.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 64 alphanumeric characters or hyphens</p> </li> <li> <p>Must contain only lowercase letters, numbers, underscore, plus sign, period (dot), at symbol (@), or hyphen.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Must not contain a colon ( : ) or slash ( / ). </p> </li> <li> <p>Cannot be a reserved word. A list of reserved words can be found in <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved Words</a> in the Amazon Redshift Database Developer Guide.</p> </li> </ul>'
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The unique identifier of the cluster that contains the database for which your are requesting credentials. This parameter is case sensitive.
        DurationSeconds:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of seconds until the returned temporary password expires.</p> <p>Constraint: minimum 900, maximum 3600.</p> <p>Default: 900</p>'
        AutoCreate:
          $ref: '#/components/schemas/BooleanOptional'
          description: Create a database user with the name specified for the user named in <code>DbUser</code> if one does not exist.
        DbGroups:
          $ref: '#/components/schemas/DbGroupList'
          description: '<p>A list of the names of existing database groups that the user named in <code>DbUser</code> will join for the current session, in addition to any group memberships for an existing user. If not specified, a new user is added only to PUBLIC.</p> <p>Database group name constraints</p> <ul> <li> <p>Must be 1 to 64 alphanumeric characters or hyphens</p> </li> <li> <p>Must contain only lowercase letters, numbers, underscore, plus sign, period (dot), at symbol (@), or hyphen.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Must not contain a colon ( : ) or slash ( / ). </p> </li> <li> <p>Cannot be a reserved word. A list of reserved words can be found in <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved Words</a> in the Amazon Redshift Database Developer Guide.</p> </li> </ul>'
      description: The request parameters to get cluster credentials.
    GetReservedNodeExchangeOfferingsInputMessage:
      type: object
      required:
        - ReservedNodeId
      title: GetReservedNodeExchangeOfferingsInputMessage
      properties:
        ReservedNodeId:
          $ref: '#/components/schemas/String'
          description: A string representing the node identifier for the DC1 Reserved Node to be exchanged.
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
          description: An integer setting the maximum number of ReservedNodeOfferings to retrieve.
        Marker:
          $ref: '#/components/schemas/String'
          description: A value that indicates the starting point for the next set of ReservedNodeOfferings.
      description: <p/>
    ReservedNodeOfferingList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedNodeOffering'
          - xml:
              name: ReservedNodeOffering
    HsmClientCertificateList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/HsmClientCertificate'
          - xml:
              name: HsmClientCertificate
    HsmConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/HsmConfiguration'
          - xml:
              name: HsmConfiguration
    IPRange:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
          description: 'The status of the IP range, for example, "authorized".'
        CIDRIP:
          $ref: '#/components/schemas/String'
          description: The IP range in Classless Inter-Domain Routing (CIDR) notation.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags for the IP range.
      description: Describes an IP range used in a security group.
    ImportTablesCompleted:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ImportTablesInProgress:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ImportTablesNotStarted:
      type: array
      items:
        $ref: '#/components/schemas/String'
    MaintenanceTrack:
      type: object
      properties:
        MaintenanceTrackName:
          $ref: '#/components/schemas/String'
          description: The name of the maintenance track. Possible values are <code>current</code> and <code>trailing</code>.
        DatabaseVersion:
          $ref: '#/components/schemas/String'
          description: The version number for the cluster release.
        UpdateTargets:
          $ref: '#/components/schemas/EligibleTracksToUpdateList'
          description: 'An array of <a>UpdateTarget</a> objects to update with the maintenance track. '
      description: 'Defines a maintenance track that determines which Amazon Redshift version to apply during a maintenance window. If the value for <code>MaintenanceTrack</code> is <code>current</code>, the cluster is updated to the most recently certified maintenance release. If the value is <code>trailing</code>, the cluster is updated to the previously certified maintenance release. '
    Mode:
      type: string
      enum:
        - standard
        - high-performance
    ModifyAquaInputMessage:
      type: object
      required:
        - ClusterIdentifier
      title: ModifyAquaInputMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the cluster to be modified.
        AquaConfigurationStatus:
          $ref: '#/components/schemas/AquaConfigurationStatus'
          description: <p>The new value of AQUA configuration status. Possible values include the following.</p> <ul> <li> <p>enabled - Use AQUA if it is available for the current Amazon Web Services Region and Amazon Redshift node type.</p> </li> <li> <p>disabled - Don't use AQUA. </p> </li> <li> <p>auto - Amazon Redshift determines whether to use AQUA.</p> </li> </ul>
    ModifyAuthenticationProfileMessage:
      type: object
      required:
        - AuthenticationProfileName
        - AuthenticationProfileContent
      title: ModifyAuthenticationProfileMessage
      properties:
        AuthenticationProfileName:
          $ref: '#/components/schemas/AuthenticationProfileNameString'
          description: The name of the authentication profile to replace.
        AuthenticationProfileContent:
          $ref: '#/components/schemas/String'
          description: The new content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
    ModifyClusterDbRevisionMessage:
      type: object
      required:
        - ClusterIdentifier
        - RevisionTarget
      title: ModifyClusterDbRevisionMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The unique identifier of a cluster whose database revision you want to modify. </p> <p>Example: <code>examplecluster</code> </p>'
        RevisionTarget:
          $ref: '#/components/schemas/String'
          description: The identifier of the database revision. You can retrieve this value from the response to the <a>DescribeClusterDbRevisions</a> request.
    ModifyClusterIamRolesMessage:
      type: object
      required:
        - ClusterIdentifier
      title: ModifyClusterIamRolesMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The unique identifier of the cluster for which you want to associate or disassociate IAM roles.
        AddIamRoles:
          $ref: '#/components/schemas/IamRoleArnList'
          description: Zero or more IAM roles to associate with the cluster. The roles must be in their Amazon Resource Name (ARN) format. You can associate up to 10 IAM roles with a single cluster in a single request.
        RemoveIamRoles:
          $ref: '#/components/schemas/IamRoleArnList'
          description: Zero or more IAM roles in ARN format to disassociate from the cluster. You can disassociate up to 10 IAM roles from a single cluster in a single request.
      description: <p/>
    ModifyClusterMaintenanceMessage:
      type: object
      required:
        - ClusterIdentifier
      title: ModifyClusterMaintenanceMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the cluster.
        DeferMaintenance:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'A boolean indicating whether to enable the deferred maintenance window. '
        DeferMaintenanceIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the deferred maintenance window.
        DeferMaintenanceStartTime:
          $ref: '#/components/schemas/TStamp'
          description: A timestamp indicating the start time for the deferred maintenance window.
        DeferMaintenanceEndTime:
          $ref: '#/components/schemas/TStamp'
          description: 'A timestamp indicating end time for the deferred maintenance window. If you specify an end time, you can''t specify a duration.'
        DeferMaintenanceDuration:
          $ref: '#/components/schemas/IntegerOptional'
          description: 'An integer indicating the duration of the maintenance window in days. If you specify a duration, you can''t specify an end time. The duration must be 45 days or less.'
    ModifyClusterMessage:
      type: object
      required:
        - ClusterIdentifier
      title: ModifyClusterMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The unique identifier of the cluster to be modified.</p> <p>Example: <code>examplecluster</code> </p>'
        ClusterType:
          $ref: '#/components/schemas/String'
          description: '<p>The new cluster type.</p> <p>When you submit your cluster resize request, your existing cluster goes into a read-only mode. After Amazon Redshift provisions a new cluster based on your resize requirements, there will be outage for a period while the old cluster is deleted and your connection is switched to the new cluster. You can use <a>DescribeResize</a> to track the progress of the resize request. </p> <p>Valid Values: <code> multi-node | single-node </code> </p>'
        NodeType:
          $ref: '#/components/schemas/String'
          description: '<p>The new node type of the cluster. If you specify a new node type, you must also specify the number of nodes parameter.</p> <p> For more information about resizing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/rs-resize-tutorial.html">Resizing Clusters in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>Valid Values: <code>ds2.xlarge</code> | <code>ds2.8xlarge</code> | <code>dc1.large</code> | <code>dc1.8xlarge</code> | <code>dc2.large</code> | <code>dc2.8xlarge</code> | <code>ra3.xlplus</code> | <code>ra3.4xlarge</code> | <code>ra3.16xlarge</code> </p>'
        NumberOfNodes:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The new number of nodes of the cluster. If you specify a new number of nodes, you must also specify the node type parameter.</p> <p> For more information about resizing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/rs-resize-tutorial.html">Resizing Clusters in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>Valid Values: Integer greater than <code>0</code>.</p>'
        ClusterSecurityGroups:
          $ref: '#/components/schemas/ClusterSecurityGroupNameList'
          description: '<p>A list of cluster security groups to be authorized on this cluster. This change is asynchronously applied as soon as possible.</p> <p>Security groups currently associated with the cluster, and not in the list of groups to apply, will be revoked from the cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
          description: A list of virtual private cloud (VPC) security groups to be associated with the cluster. This change is asynchronously applied as soon as possible.
        MasterUserPassword:
          $ref: '#/components/schemas/String'
          description: '<p>The new password for the cluster admin user. This change is asynchronously applied as soon as possible. Between the time of the request and the completion of the request, the <code>MasterUserPassword</code> element exists in the <code>PendingModifiedValues</code> element of the operation response. </p> <note> <p>Operations never return the password, so this operation provides a way to regain access to the admin user account for a cluster if the password is lost.</p> </note> <p>Default: Uses existing setting.</p> <p>Constraints:</p> <ul> <li> <p>Must be between 8 and 64 characters in length.</p> </li> <li> <p>Must contain at least one uppercase letter.</p> </li> <li> <p>Must contain at least one lowercase letter.</p> </li> <li> <p>Must contain one number.</p> </li> <li> <p>Can be any printable ASCII character (ASCII code 33 to 126) except '' (single quote), " (double quote), \, /, @, or space.</p> </li> </ul>'
        ClusterParameterGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the cluster parameter group to apply to this cluster. This change is applied only after the cluster is rebooted. To reboot a cluster use <a>RebootCluster</a>. </p> <p>Default: Uses existing setting.</p> <p>Constraints: The cluster parameter group must be in the same parameter group family that matches the cluster version.</p>'
        AutomatedSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with <a>CreateClusterSnapshot</a>. </p> <p>If you decrease the automated snapshot retention period from its current value, existing automated snapshots that fall outside of the new retention period will be immediately deleted.</p> <p>You can''t disable automated snapshots for RA3 node types. Set the automated retention period from 1-35 days.</p> <p>Default: Uses existing setting.</p> <p>Constraints: Must be a value from 0 to 35.</p>'
        ManualSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The default for number of days that a newly created manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely. This value doesn''t retroactively change the retention periods of existing manual snapshots.</p> <p>The value must be either -1 or an integer between 1 and 3,653.</p> <p>The default value is -1.</p>'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
          description: '<p>The weekly time range (in UTC) during which system maintenance can occur, if necessary. If system maintenance is necessary during the window, it may result in an outage.</p> <p>This maintenance window change is made immediately. If the new maintenance window indicates the current time, there must be at least 120 minutes between the current time and end of the window in order to ensure that pending changes are applied.</p> <p>Default: Uses existing setting.</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi, for example <code>wed:07:30-wed:08:00</code>.</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes.</p>'
        ClusterVersion:
          $ref: '#/components/schemas/String'
          description: '<p>The new version number of the Amazon Redshift engine to upgrade to.</p> <p>For major version upgrades, if a non-default cluster parameter group is currently in use, a new cluster parameter group in the cluster parameter group family for the new version must be specified. The new cluster parameter group can be the default for that cluster parameter group family. For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>Example: <code>1.0</code> </p>'
        AllowVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>If <code>true</code>, major version upgrades will be applied automatically to the cluster during the maintenance window. </p> <p>Default: <code>false</code> </p>'
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
          description: Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
          description: Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
        NewClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The new identifier for the cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>Alphabetic characters must be lowercase.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique for all clusters within an Amazon Web Services account.</p> </li> </ul> <p>Example: <code>examplecluster</code> </p>'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'If <code>true</code>, the cluster can be accessed from a public network. Only clusters in VPCs can be set to be publicly available.'
        ElasticIp:
          $ref: '#/components/schemas/String'
          description: '<p>The Elastic IP (EIP) address for the cluster.</p> <p>Constraints: The cluster must be provisioned in EC2-VPC and publicly-accessible through an Internet gateway. For more information about provisioning clusters in EC2-VPC, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms">Supported Platforms to Launch Your Cluster</a> in the Amazon Redshift Cluster Management Guide.</p>'
        EnhancedVpcRouting:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</p> <p>If this option is <code>true</code>, enhanced VPC routing is enabled. </p> <p>Default: false</p>'
        MaintenanceTrackName:
          $ref: '#/components/schemas/String'
          description: 'The name for the maintenance track that you want to assign for the cluster. This name change is asynchronous. The new track name stays in the <code>PendingModifiedValues</code> for the cluster until the next maintenance window. When the maintenance track changes, the cluster is switched to the latest cluster release available for the maintenance track. At this point, the maintenance track name is applied.'
        Encrypted:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>Indicates whether the cluster is encrypted. If the value is encrypted (true) and you provide a value for the <code>KmsKeyId</code> parameter, we encrypt the cluster with the provided <code>KmsKeyId</code>. If you don''t provide a <code>KmsKeyId</code>, we encrypt with the default key. </p> <p>If the value is not encrypted (false), then the cluster is decrypted. </p>'
        KmsKeyId:
          $ref: '#/components/schemas/String'
          description: The Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster.
        AvailabilityZoneRelocation:
          $ref: '#/components/schemas/BooleanOptional'
          description: The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster modification is complete.
        AvailabilityZone:
          $ref: '#/components/schemas/String'
          description: The option to initiate relocation for an Amazon Redshift cluster to the target Availability Zone.
        Port:
          $ref: '#/components/schemas/IntegerOptional'
          description: The option to change the port of an Amazon Redshift cluster.
      description: <p/>
    ModifyClusterParameterGroupMessage:
      type: object
      required:
        - ParameterGroupName
        - Parameters
      title: ModifyClusterParameterGroupMessage
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the parameter group to be modified.
        Parameters:
          $ref: '#/components/schemas/ParametersList'
          description: '<p>An array of parameters to be modified. A maximum of 20 parameters can be modified in a single request.</p> <p>For each parameter to be modified, you must supply at least the parameter name and parameter value; other name-value pairs of the parameter are optional.</p> <p>For the workload management (WLM) configuration, you must supply all the name-value pairs in the wlm_json_configuration parameter.</p>'
      description: 'Describes a modify cluster parameter group operation. '
    ModifyClusterSnapshotMessage:
      type: object
      required:
        - SnapshotIdentifier
      title: ModifyClusterSnapshotMessage
      properties:
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the snapshot whose setting you want to modify.
        ManualSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely.</p> <p>If the manual snapshot falls outside of the new retention period, you can specify the force option to immediately delete the snapshot.</p> <p>The value must be either -1 or an integer between 1 and 3,653.</p>'
        Force:
          $ref: '#/components/schemas/Boolean'
          description: A Boolean option to override an exception if the retention period has already passed.
    ModifyClusterSnapshotScheduleMessage:
      type: object
      required:
        - ClusterIdentifier
      title: ModifyClusterSnapshotScheduleMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: 'A unique identifier for the cluster whose snapshot schedule you want to modify. '
        ScheduleIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique alphanumeric identifier for the schedule that you want to associate with the cluster.
        DisassociateSchedule:
          $ref: '#/components/schemas/BooleanOptional'
          description: A boolean to indicate whether to remove the assoiciation between the cluster and the schedule.
    ModifyClusterSubnetGroupMessage:
      type: object
      required:
        - ClusterSubnetGroupName
        - SubnetIds
      title: ModifyClusterSubnetGroupMessage
      properties:
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the subnet group to be modified.
        Description:
          $ref: '#/components/schemas/String'
          description: A text description of the subnet group to be modified.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdentifierList'
          description: An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a single request.
      description: <p/>
    ModifyEndpointAccessMessage:
      type: object
      required:
        - EndpointName
      title: ModifyEndpointAccessMessage
      properties:
        EndpointName:
          $ref: '#/components/schemas/String'
          description: The endpoint to be modified.
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
          description: The complete list of VPC security groups associated with the endpoint after the endpoint is modified.
    ModifyEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
      title: ModifyEventSubscriptionMessage
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
          description: The name of the modified Amazon Redshift event notification subscription.
        SnsTopicArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the SNS topic to be used by the event notification subscription.
        SourceType:
          $ref: '#/components/schemas/String'
          description: '<p>The type of source that will be generating the events. For example, if you want to be notified of events generated by a cluster, you would set this parameter to cluster. If this value is not specified, events are returned for all Amazon Redshift objects in your Amazon Web Services account. You must specify a source type in order to specify source IDs.</p> <p>Valid values: cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot, and scheduled-action.</p>'
        SourceIds:
          $ref: '#/components/schemas/SourceIdsList'
          description: '<p>A list of one or more identifiers of Amazon Redshift source objects. All of the objects must be of the same type as was specified in the source type parameter. The event subscription will return only events generated by the specified objects. If not specified, then events are returned for all objects within the source type specified.</p> <p>Example: my-cluster-1, my-cluster-2</p> <p>Example: my-snapshot-20131010</p>'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
          description: '<p>Specifies the Amazon Redshift event categories to be published by the event notification subscription.</p> <p>Values: configuration, management, monitoring, security, pending</p>'
        Severity:
          $ref: '#/components/schemas/String'
          description: '<p>Specifies the Amazon Redshift event severity to be published by the event notification subscription.</p> <p>Values: ERROR, INFO</p>'
        Enabled:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'A Boolean value indicating if the subscription is enabled. <code>true</code> indicates the subscription is enabled '
      description: <p/>
    ModifyScheduledActionMessage:
      type: object
      required:
        - ScheduledActionName
      title: ModifyScheduledActionMessage
      properties:
        ScheduledActionName:
          $ref: '#/components/schemas/String'
          description: 'The name of the scheduled action to modify. '
        TargetAction:
          $ref: '#/components/schemas/ScheduledActionType'
          description: 'A modified JSON format of the scheduled action. For more information about this parameter, see <a>ScheduledAction</a>. '
        Schedule:
          $ref: '#/components/schemas/String'
          description: 'A modified schedule in either <code>at( )</code> or <code>cron( )</code> format. For more information about this parameter, see <a>ScheduledAction</a>.'
        IamRole:
          $ref: '#/components/schemas/String'
          description: 'A different IAM role to assume to run the target action. For more information about this parameter, see <a>ScheduledAction</a>.'
        ScheduledActionDescription:
          $ref: '#/components/schemas/String'
          description: 'A modified description of the scheduled action. '
        StartTime:
          $ref: '#/components/schemas/TStamp'
          description: 'A modified start time of the scheduled action. For more information about this parameter, see <a>ScheduledAction</a>. '
        EndTime:
          $ref: '#/components/schemas/TStamp'
          description: 'A modified end time of the scheduled action. For more information about this parameter, see <a>ScheduledAction</a>. '
        Enable:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'A modified enable flag of the scheduled action. If true, the scheduled action is active. If false, the scheduled action is disabled. '
    ModifySnapshotCopyRetentionPeriodMessage:
      type: object
      required:
        - ClusterIdentifier
        - RetentionPeriod
      title: ModifySnapshotCopyRetentionPeriodMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The unique identifier of the cluster for which you want to change the retention period for either automated or manual snapshots that are copied to a destination Amazon Web Services Region.</p> <p>Constraints: Must be the valid name of an existing cluster that has cross-region snapshot copy enabled.</p>'
        RetentionPeriod:
          $ref: '#/components/schemas/Integer'
          description: '<p>The number of days to retain automated snapshots in the destination Amazon Web Services Region after they are copied from the source Amazon Web Services Region.</p> <p>By default, this only changes the retention period of copied automated snapshots. </p> <p>If you decrease the retention period for automated snapshots that are copied to a destination Amazon Web Services Region, Amazon Redshift deletes any existing automated snapshots that were copied to the destination Amazon Web Services Region and that fall outside of the new retention period.</p> <p>Constraints: Must be at least 1 and no more than 35 for automated snapshots. </p> <p>If you specify the <code>manual</code> option, only newly copied manual snapshots will have the new retention period. </p> <p>If you specify the value of -1 newly copied manual snapshots are retained indefinitely.</p> <p>Constraints: The number of days must be either -1 or an integer between 1 and 3,653 for manual snapshots.</p>'
        Manual:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots.
      description: <p/>
    ModifySnapshotScheduleMessage:
      type: object
      required:
        - ScheduleIdentifier
        - ScheduleDefinitions
      title: ModifySnapshotScheduleMessage
      properties:
        ScheduleIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique alphanumeric identifier of the schedule to modify.
        ScheduleDefinitions:
          $ref: '#/components/schemas/ScheduleDefinitionList'
          description: 'An updated list of schedule definitions. A schedule definition is made up of schedule expressions, for example, "cron(30 12 *)" or "rate(12 hours)".'
    ModifyUsageLimitMessage:
      type: object
      required:
        - UsageLimitId
      title: ModifyUsageLimitMessage
      properties:
        UsageLimitId:
          $ref: '#/components/schemas/String'
          description: The identifier of the usage limit to modify.
        Amount:
          $ref: '#/components/schemas/LongOptional'
          description: 'The new limit amount. For more information about this parameter, see <a>UsageLimit</a>. '
        BreachAction:
          $ref: '#/components/schemas/UsageLimitBreachAction'
          description: 'The new action that Amazon Redshift takes when the limit is reached. For more information about this parameter, see <a>UsageLimit</a>. '
    NetworkInterface:
      type: object
      properties:
        NetworkInterfaceId:
          $ref: '#/components/schemas/String'
          description: 'The network interface identifier. '
        SubnetId:
          $ref: '#/components/schemas/String'
          description: 'The subnet identifier. '
        PrivateIpAddress:
          $ref: '#/components/schemas/String'
          description: 'The IPv4 address of the network interface within the subnet. '
        AvailabilityZone:
          $ref: '#/components/schemas/String'
          description: 'The Availability Zone. '
      description: 'Describes a network interface. '
    NetworkInterfaceList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInterface'
          - xml:
              name: NetworkInterface
    NodeConfigurationOption:
      type: object
      properties:
        NodeType:
          $ref: '#/components/schemas/String'
          description: 'The node type, such as, "ds2.8xlarge".'
        NumberOfNodes:
          $ref: '#/components/schemas/Integer'
          description: The number of nodes.
        EstimatedDiskUtilizationPercent:
          $ref: '#/components/schemas/DoubleOptional'
          description: The estimated disk utilizaton percentage.
        Mode:
          $ref: '#/components/schemas/Mode'
          description: The category of the node configuration recommendation.
      description: A list of node configurations.
    NodeConfigurationOptionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NodeConfigurationOption'
          - xml:
              name: NodeConfigurationOption
    NodeConfigurationOptionsFilterName:
      type: string
      enum:
        - NodeType
        - NumberOfNodes
        - EstimatedDiskUtilizationPercent
        - Mode
    OperatorType:
      type: string
      enum:
        - eq
        - lt
        - gt
        - le
        - ge
        - in
        - between
    ValueStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    OrderableClusterOption:
      type: object
      properties:
        ClusterVersion:
          $ref: '#/components/schemas/String'
          description: The version of the orderable cluster.
        ClusterType:
          $ref: '#/components/schemas/String'
          description: 'The cluster type, for example <code>multi-node</code>. '
        NodeType:
          $ref: '#/components/schemas/String'
          description: The node type for the orderable cluster.
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZoneList'
          description: A list of availability zones for the orderable cluster.
      description: Describes an orderable cluster option.
    OrderableClusterOptionsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OrderableClusterOption'
          - xml:
              name: OrderableClusterOption
    ParameterApplyType:
      type: string
      enum:
        - static
        - dynamic
    PartnerIntegrationStatus:
      type: string
      enum:
        - Active
        - Inactive
        - RuntimeFailure
        - ConnectionFailure
    PartnerIntegrationStatusMessage:
      type: string
      pattern: '^[\x20-\x7E]+$'
      maxLength: 262144
    PartnerIntegrationInfo:
      type: object
      properties:
        DatabaseName:
          $ref: '#/components/schemas/PartnerIntegrationDatabaseName'
          description: The name of the database that receives data from a partner.
        PartnerName:
          $ref: '#/components/schemas/PartnerIntegrationPartnerName'
          description: The name of the partner.
        Status:
          $ref: '#/components/schemas/PartnerIntegrationStatus'
          description: The partner integration status.
        StatusMessage:
          $ref: '#/components/schemas/PartnerIntegrationStatusMessage'
          description: The status message provided by the partner.
        CreatedAt:
          $ref: '#/components/schemas/TStamp'
          description: The date (UTC) that the partner integration was created.
        UpdatedAt:
          $ref: '#/components/schemas/TStamp'
          description: The date (UTC) that the partner integration status was last updated by the partner.
      description: Describes a partner integration.
    PartnerIntegrationInputMessage:
      type: object
      required:
        - AccountId
        - ClusterIdentifier
        - DatabaseName
        - PartnerName
      title: PartnerIntegrationInputMessage
      properties:
        AccountId:
          $ref: '#/components/schemas/PartnerIntegrationAccountId'
          description: The Amazon Web Services account ID that owns the cluster.
        ClusterIdentifier:
          $ref: '#/components/schemas/PartnerIntegrationClusterIdentifier'
          description: The cluster identifier of the cluster that receives data from the partner.
        DatabaseName:
          $ref: '#/components/schemas/PartnerIntegrationDatabaseName'
          description: The name of the database that receives data from the partner.
        PartnerName:
          $ref: '#/components/schemas/PartnerIntegrationPartnerName'
          description: The name of the partner that is authorized to send data.
    PurchaseReservedNodeOfferingMessage:
      type: object
      required:
        - ReservedNodeOfferingId
      title: PurchaseReservedNodeOfferingMessage
      properties:
        ReservedNodeOfferingId:
          $ref: '#/components/schemas/String'
          description: The unique identifier of the reserved node offering you want to purchase.
        NodeCount:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of reserved nodes that you want to purchase.</p> <p>Default: <code>1</code> </p>'
      description: <p/>
    RebootClusterMessage:
      type: object
      required:
        - ClusterIdentifier
      title: RebootClusterMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The cluster identifier.
      description: <p/>
    RecurringCharge:
      type: object
      properties:
        RecurringChargeAmount:
          $ref: '#/components/schemas/Double'
          description: The amount charged per the period of time specified by the recurring charge frequency.
        RecurringChargeFrequency:
          $ref: '#/components/schemas/String'
          description: The frequency at which the recurring charge amount is applied.
      description: Describes a recurring charge.
    RecurringChargeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RecurringCharge'
          - xml:
              name: RecurringCharge
    RejectDataShareMessage:
      type: object
      required:
        - DataShareArn
      title: RejectDataShareMessage
      properties:
        DataShareArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the datashare to reject.
    ReservedNodeOfferingType:
      type: string
      enum:
        - Regular
        - Upgradable
    ReservedNodeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedNode'
          - xml:
              name: ReservedNode
    ReservedNodeOffering:
      type: object
      properties:
        ReservedNodeOfferingId:
          $ref: '#/components/schemas/String'
          description: The offering identifier.
        NodeType:
          $ref: '#/components/schemas/String'
          description: The node type offered by the reserved node offering.
        Duration:
          $ref: '#/components/schemas/Integer'
          description: 'The duration, in seconds, for which the offering will reserve the node.'
        FixedPrice:
          $ref: '#/components/schemas/Double'
          description: The upfront fixed charge you will pay to purchase the specific reserved node offering.
        UsagePrice:
          $ref: '#/components/schemas/Double'
          description: The rate you are charged for each hour the cluster that is using the offering is running.
        CurrencyCode:
          $ref: '#/components/schemas/String'
          description: The currency code for the compute nodes offering.
        OfferingType:
          $ref: '#/components/schemas/String'
          description: 'The anticipated utilization of the reserved node, as defined in the reserved node offering.'
        RecurringCharges:
          $ref: '#/components/schemas/RecurringChargeList'
          description: The charge to your account regardless of whether you are creating any clusters using the node offering. Recurring charges are only in effect for heavy-utilization reserved nodes.
        ReservedNodeOfferingType:
          $ref: '#/components/schemas/ReservedNodeOfferingType'
          description: <p/>
      description: Describes a reserved node offering.
    ResetClusterParameterGroupMessage:
      type: object
      required:
        - ParameterGroupName
      title: ResetClusterParameterGroupMessage
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the cluster parameter group to be reset.
        ResetAllParameters:
          $ref: '#/components/schemas/Boolean'
          description: '<p>If <code>true</code>, all parameters in the specified parameter group will be reset to their default values. </p> <p>Default: <code>true</code> </p>'
        Parameters:
          $ref: '#/components/schemas/ParametersList'
          description: '<p>An array of names of parameters to be reset. If <i>ResetAllParameters</i> option is not used, then at least one parameter name must be supplied. </p> <p>Constraints: A maximum of 20 parameters can be reset in a single request.</p>'
      description: <p/>
    RestorableNodeTypeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: NodeType
    RestoreFromClusterSnapshotMessage:
      type: object
      required:
        - ClusterIdentifier
        - SnapshotIdentifier
      title: RestoreFromClusterSnapshotMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The identifier of the cluster that will be created from restoring the snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>Alphabetic characters must be lowercase.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique for all clusters within an Amazon Web Services account.</p> </li> </ul>'
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the snapshot from which to create the new cluster. This parameter isn''t case sensitive.</p> <p>Example: <code>my-snapshot-id</code> </p>'
        SnapshotClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The name of the cluster the source snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.
        Port:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The port number on which the cluster accepts connections.</p> <p>Default: The same port as the original cluster.</p> <p>Constraints: Must be between <code>1115</code> and <code>65535</code>.</p>'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
          description: '<p>The Amazon EC2 Availability Zone in which to restore the cluster.</p> <p>Default: A random, system-chosen Availability Zone.</p> <p>Example: <code>us-east-2a</code> </p>'
        AllowVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>If <code>true</code>, major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. </p> <p>Default: <code>true</code> </p>'
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the subnet group where you want to cluster restored.</p> <p>A snapshot of cluster in VPC can be restored only in VPC. Therefore, you must provide subnet group name where you want the cluster restored.</p>'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'If <code>true</code>, the cluster can be accessed from a public network. '
        OwnerAccount:
          $ref: '#/components/schemas/String'
          description: 'The Amazon Web Services account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.'
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
          description: Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
          description: Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
        ElasticIp:
          $ref: '#/components/schemas/String'
          description: The elastic IP (EIP) address for the cluster.
        ClusterParameterGroupName:
          $ref: '#/components/schemas/String'
          description: '<p>The name of the parameter group to be associated with this cluster.</p> <p>Default: The default Amazon Redshift cluster parameter group. For information about the default parameter group, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Working with Amazon Redshift Parameter Groups</a>.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
        ClusterSecurityGroups:
          $ref: '#/components/schemas/ClusterSecurityGroupNameList'
          description: '<p>A list of security groups to be associated with this cluster.</p> <p>Default: The default cluster security group for Amazon Redshift.</p> <p>Cluster security groups only apply to clusters outside of VPCs.</p>'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
          description: '<p>A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.</p> <p>Default: The default VPC security group is associated with the cluster.</p> <p>VPC security groups only apply to clusters in VPCs.</p>'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
          description: '<p>The weekly time range (in UTC) during which automated cluster maintenance can occur.</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> Default: The value selected for the cluster from which the snapshot was taken. For more information about the time blocks for each region, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows">Maintenance Windows</a> in Amazon Redshift Cluster Management Guide. </p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Minimum 30-minute window.</p>'
        AutomatedSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with <a>CreateClusterSnapshot</a>. </p> <p>You can''t disable automated snapshots for RA3 node types. Set the automated retention period from 1-35 days.</p> <p>Default: The value selected for the cluster from which the snapshot was taken.</p> <p>Constraints: Must be a value from 0 to 35.</p>'
        ManualSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
          description: '<p>The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn''t change the retention period of existing snapshots.</p> <p>The value must be either -1 or an integer between 1 and 3,653.</p>'
        KmsKeyId:
          $ref: '#/components/schemas/String'
          description: The Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster that you restore from a shared snapshot.
        NodeType:
          $ref: '#/components/schemas/String'
          description: '<p>The node type that the restored cluster will be provisioned with.</p> <p>Default: The node type of the cluster from which the snapshot was taken. You can modify this if you are using any DS node type. In that case, you can choose to restore into another DS node type of the same size. For example, you can restore ds1.8xlarge into ds2.8xlarge, or ds1.xlarge into ds2.xlarge. If you have a DC instance type, you must restore into that same instance type and size. In other words, you can only restore a dc1.large instance type into another dc1.large instance type or dc2.large instance type. You can''t restore dc1.8xlarge to dc2.8xlarge. First restore to a dc1.8xlarge cluster, then resize to a dc2.8large cluster. For more information about node types, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-about-clusters-and-nodes"> About Clusters and Nodes</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>'
        EnhancedVpcRouting:
          $ref: '#/components/schemas/BooleanOptional'
          description: '<p>An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</p> <p>If this option is <code>true</code>, enhanced VPC routing is enabled. </p> <p>Default: false</p>'
        AdditionalInfo:
          $ref: '#/components/schemas/String'
          description: Reserved.
        IamRoles:
          $ref: '#/components/schemas/IamRoleArnList'
          description: <p>A list of Identity and Access Management (IAM) roles that can be used by the cluster to access other Amazon Web Services services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. You can supply up to 10 IAM roles in a single request.</p> <p>A cluster can have up to 10 IAM roles associated at any time.</p>
        MaintenanceTrackName:
          $ref: '#/components/schemas/String'
          description: 'The name of the maintenance track for the restored cluster. When you take a snapshot, the snapshot inherits the <code>MaintenanceTrack</code> value from the cluster. The snapshot might be on a different track than the cluster that was the source for the snapshot. For example, suppose that you take a snapshot of a cluster that is on the current track and then change the cluster to be on the trailing track. In this case, the snapshot and the source cluster are on different tracks.'
        SnapshotScheduleIdentifier:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the snapshot schedule.
        NumberOfNodes:
          $ref: '#/components/schemas/IntegerOptional'
          description: The number of nodes specified when provisioning the restored cluster.
        AvailabilityZoneRelocation:
          $ref: '#/components/schemas/BooleanOptional'
          description: The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster is restored.
        AquaConfigurationStatus:
          $ref: '#/components/schemas/AquaConfigurationStatus'
          description: <p>The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored. Possible values include the following.</p> <ul> <li> <p>enabled - Use AQUA if it is available for the current Amazon Web Services Region and Amazon Redshift node type.</p> </li> <li> <p>disabled - Don't use AQUA. </p> </li> <li> <p>auto - Amazon Redshift determines whether to use AQUA.</p> </li> </ul>
      description: <p/>
    RestoreTableFromClusterSnapshotMessage:
      type: object
      required:
        - ClusterIdentifier
        - SnapshotIdentifier
        - SourceDatabaseName
        - SourceTableName
        - NewTableName
      title: RestoreTableFromClusterSnapshotMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the Amazon Redshift cluster to restore the table to.
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the snapshot to restore the table from. This snapshot must have been created from the Amazon Redshift cluster specified by the <code>ClusterIdentifier</code> parameter.
        SourceDatabaseName:
          $ref: '#/components/schemas/String'
          description: The name of the source database that contains the table to restore from.
        SourceSchemaName:
          $ref: '#/components/schemas/String'
          description: 'The name of the source schema that contains the table to restore from. If you do not specify a <code>SourceSchemaName</code> value, the default is <code>public</code>.'
        SourceTableName:
          $ref: '#/components/schemas/String'
          description: The name of the source table to restore from.
        TargetDatabaseName:
          $ref: '#/components/schemas/String'
          description: The name of the database to restore the table to.
        TargetSchemaName:
          $ref: '#/components/schemas/String'
          description: The name of the schema to restore the table to.
        NewTableName:
          $ref: '#/components/schemas/String'
          description: The name of the table to create as a result of the current request.
        EnableCaseSensitiveIdentifier:
          $ref: '#/components/schemas/BooleanOptional'
          description: 'Indicates whether name identifiers for database, schema, and table are case sensitive. If <code>true</code>, the names are case sensitive. If <code>false</code> (default), the names are not case sensitive.'
      description: <p/>
    TableRestoreStatus:
      type: object
      properties:
        TableRestoreRequestId:
          $ref: '#/components/schemas/String'
          description: The unique identifier for the table restore request.
        Status:
          $ref: '#/components/schemas/TableRestoreStatusType'
          description: '<p>A value that describes the current state of the table restore request.</p> <p>Valid Values: <code>SUCCEEDED</code>, <code>FAILED</code>, <code>CANCELED</code>, <code>PENDING</code>, <code>IN_PROGRESS</code> </p>'
        Message:
          $ref: '#/components/schemas/String'
          description: 'A description of the status of the table restore request. Status values include <code>SUCCEEDED</code>, <code>FAILED</code>, <code>CANCELED</code>, <code>PENDING</code>, <code>IN_PROGRESS</code>.'
        RequestTime:
          $ref: '#/components/schemas/TStamp'
          description: 'The time that the table restore request was made, in Universal Coordinated Time (UTC).'
        ProgressInMegaBytes:
          $ref: '#/components/schemas/LongOptional'
          description: 'The amount of data restored to the new table so far, in megabytes (MB).'
        TotalDataInMegaBytes:
          $ref: '#/components/schemas/LongOptional'
          description: 'The total amount of data to restore to the new table, in megabytes (MB).'
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the Amazon Redshift cluster that the table is being restored to.
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the snapshot that the table is being restored from.
        SourceDatabaseName:
          $ref: '#/components/schemas/String'
          description: The name of the source database that contains the table being restored.
        SourceSchemaName:
          $ref: '#/components/schemas/String'
          description: The name of the source schema that contains the table being restored.
        SourceTableName:
          $ref: '#/components/schemas/String'
          description: The name of the source table being restored.
        TargetDatabaseName:
          $ref: '#/components/schemas/String'
          description: The name of the database to restore the table to.
        TargetSchemaName:
          $ref: '#/components/schemas/String'
          description: The name of the schema to restore the table to.
        NewTableName:
          $ref: '#/components/schemas/String'
          description: The name of the table to create as a result of the table restore request.
      description: Describes the status of a <a>RestoreTableFromClusterSnapshot</a> operation.
    RevisionTarget:
      type: object
      properties:
        DatabaseRevision:
          $ref: '#/components/schemas/String'
          description: A unique string that identifies the version to update the cluster to. You can use this value in <a>ModifyClusterDbRevision</a>.
        Description:
          $ref: '#/components/schemas/String'
          description: A string that describes the changes and features that will be applied to the cluster when it is updated to the corresponding <a>ClusterDbRevision</a>.
        DatabaseRevisionReleaseDate:
          $ref: '#/components/schemas/TStamp'
          description: The date on which the database revision was released.
      description: Describes a <code>RevisionTarget</code>.
    RevokeClusterSecurityGroupIngressMessage:
      type: object
      required:
        - ClusterSecurityGroupName
      title: RevokeClusterSecurityGroupIngressMessage
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the security Group from which to revoke the ingress rule.
        CIDRIP:
          $ref: '#/components/schemas/String'
          description: 'The IP range for which to revoke access. This range must be a valid Classless Inter-Domain Routing (CIDR) block of IP addresses. If <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code> and <code>EC2SecurityGroupOwnerId</code> cannot be provided. '
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
          description: 'The name of the EC2 Security Group whose access is to be revoked. If <code>EC2SecurityGroupName</code> is specified, <code>EC2SecurityGroupOwnerId</code> must also be provided and <code>CIDRIP</code> cannot be provided. '
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
          description: '<p>The Amazon Web Services account number of the owner of the security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID is not an acceptable value. If <code>EC2SecurityGroupOwnerId</code> is specified, <code>EC2SecurityGroupName</code> must also be provided. and <code>CIDRIP</code> cannot be provided. </p> <p>Example: <code>111122223333</code> </p>'
      description: <p/>
    RevokeEndpointAccessMessage:
      type: object
      title: RevokeEndpointAccessMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The cluster to revoke access from.
        Account:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID whose access is to be revoked.
        VpcIds:
          $ref: '#/components/schemas/VpcIdentifierList'
          description: The virtual private cloud (VPC) identifiers for which access is to be revoked.
        Force:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted.'
    RevokeSnapshotAccessMessage:
      type: object
      required:
        - SnapshotIdentifier
        - AccountWithRestoreAccess
      title: RevokeSnapshotAccessMessage
      properties:
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the snapshot that the account can no longer access.
        SnapshotClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the cluster the snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.
        AccountWithRestoreAccess:
          $ref: '#/components/schemas/String'
          description: The identifier of the Amazon Web Services account that can no longer restore the specified snapshot.
      description: <p/>
    RotateEncryptionKeyMessage:
      type: object
      required:
        - ClusterIdentifier
      title: RotateEncryptionKeyMessage
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
          description: '<p>The unique identifier of the cluster that you want to rotate the encryption keys for.</p> <p>Constraints: Must be the name of valid cluster that has encryption enabled.</p>'
      description: <p/>
    ScheduledActionState:
      type: string
      enum:
        - ACTIVE
        - DISABLED
    ScheduledActionTimeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TStamp'
          - xml:
              name: ScheduledActionTime
    ScheduledActionFilterName:
      type: string
      enum:
        - cluster-identifier
        - iam-role
    ScheduledActionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ScheduledAction'
          - xml:
              name: ScheduledAction
    ScheduledSnapshotTimeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TStamp'
          - xml:
              name: SnapshotTime
    SnapshotAttributeToSortBy:
      type: string
      enum:
        - SOURCE_TYPE
        - TOTAL_SIZE
        - CREATE_TIME
    SnapshotCopyGrantList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SnapshotCopyGrant'
          - xml:
              name: SnapshotCopyGrant
    SnapshotList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Snapshot'
          - xml:
              name: Snapshot
    SortByOrder:
      type: string
      enum:
        - ASC
        - DESC
    Subnet:
      type: object
      properties:
        SubnetIdentifier:
          $ref: '#/components/schemas/String'
          description: The identifier of the subnet.
        SubnetAvailabilityZone:
          $ref: '#/components/schemas/AvailabilityZone'
          description: <p/>
        SubnetStatus:
          $ref: '#/components/schemas/String'
          description: The status of the subnet.
      description: Describes a subnet.
    SupportedOperation:
      type: object
      properties:
        OperationName:
          $ref: '#/components/schemas/String'
          description: A list of the supported operations.
      description: Describes the operations that are allowed on a maintenance track.
    SupportedOperationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SupportedOperation'
          - xml:
              name: SupportedOperation
    SupportedPlatform:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: <p/>
      description: A list of supported platforms for orderable clusters.
    TableRestoreStatusType:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
        - CANCELED
    TableRestoreStatusList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TableRestoreStatus'
          - xml:
              name: TableRestoreStatus
    TaggedResource:
      type: object
      properties:
        Tag:
          $ref: '#/components/schemas/Tag'
          description: The tag for the resource.
        ResourceName:
          $ref: '#/components/schemas/String'
          description: 'The Amazon Resource Name (ARN) with which the tag is associated, for example: <code>arn:aws:redshift:us-east-2:123456789:cluster:t1</code>.'
        ResourceType:
          $ref: '#/components/schemas/String'
          description: '<p>The type of resource with which the tag is associated. Valid resource types are: </p> <ul> <li> <p>Cluster</p> </li> <li> <p>CIDR/IP</p> </li> <li> <p>EC2 security group</p> </li> <li> <p>Snapshot</p> </li> <li> <p>Cluster security group</p> </li> <li> <p>Subnet group</p> </li> <li> <p>HSM connection</p> </li> <li> <p>HSM certificate</p> </li> <li> <p>Parameter group</p> </li> </ul> <p>For more information about Amazon Redshift resource types and constructing ARNs, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-overview.html#redshift-iam-access-control-specify-actions">Constructing an Amazon Redshift Amazon Resource Name (ARN)</a> in the Amazon Redshift Cluster Management Guide. </p>'
      description: A tag and its associated resource.
    TaggedResourceList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TaggedResource'
          - xml:
              name: TaggedResource
    TrackList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/MaintenanceTrack'
          - xml:
              name: MaintenanceTrack
    UpdatePartnerStatusInputMessage:
      type: object
      required:
        - AccountId
        - ClusterIdentifier
        - DatabaseName
        - PartnerName
        - Status
      title: UpdatePartnerStatusInputMessage
      properties:
        AccountId:
          $ref: '#/components/schemas/PartnerIntegrationAccountId'
          description: The Amazon Web Services account ID that owns the cluster.
        ClusterIdentifier:
          $ref: '#/components/schemas/PartnerIntegrationClusterIdentifier'
          description: The cluster identifier of the cluster whose partner integration status is being updated.
        DatabaseName:
          $ref: '#/components/schemas/PartnerIntegrationDatabaseName'
          description: The name of the database whose partner integration status is being updated.
        PartnerName:
          $ref: '#/components/schemas/PartnerIntegrationPartnerName'
          description: The name of the partner whose integration status is being updated.
        Status:
          $ref: '#/components/schemas/PartnerIntegrationStatus'
          description: The value of the updated status.
        StatusMessage:
          $ref: '#/components/schemas/PartnerIntegrationStatusMessage'
          description: The status message provided by the partner.
    UsageLimits:
      type: array
      items:
        $ref: '#/components/schemas/UsageLimit'
    VpcSecurityGroupMembership:
      type: object
      properties:
        VpcSecurityGroupId:
          $ref: '#/components/schemas/String'
          description: The identifier of the VPC security group.
        Status:
          $ref: '#/components/schemas/String'
          description: The status of the VPC security group.
      description: Describes the members of a VPC security group.
security:
  - hmac: []
