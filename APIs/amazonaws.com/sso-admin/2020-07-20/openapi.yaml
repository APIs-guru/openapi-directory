openapi: 3.0.0
info:
  version: '2020-07-20'
  x-release: v4
  title: AWS Single Sign-On Admin
  description: '<p>Amazon Web Services Single Sign On (SSO) is a cloud SSO service that makes it easy to centrally manage SSO access to multiple Amazon Web Services accounts and business applications. This guide provides information on SSO operations which could be used for access management of Amazon Web Services accounts. For information about Amazon Web Services SSO features, see the <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html">Amazon Web Services Single Sign-On User Guide</a>.</p> <p>Many operations in the SSO APIs rely on identifiers for users and groups, known as principals. For more information about how to work with principals and principal IDs in Amazon Web Services SSO, see the <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/welcome.html">Amazon Web Services SSO Identity Store API Reference</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: sso-admin
  x-aws-signingName: sso
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sso-admin-2020-07-20.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/sso/'
servers:
  - url: 'http://sso.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The SSO Admin multi-region endpoint
  - url: 'https://sso.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The SSO Admin multi-region endpoint
  - url: 'http://sso.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SSO Admin endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://sso.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SSO Admin endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=SWBExternalService.AttachManagedPolicyToPermissionSet:
    post:
      operationId: AttachManagedPolicyToPermissionSet
      description: '<p>Attaches an IAM managed policy ARN to a permission set.</p> <note> <p>If the permission set is already referenced by one or more account assignments, you will need to call <code> <a>ProvisionPermissionSet</a> </code> after this operation. Calling <code>ProvisionPermissionSet</code> applies the corresponding IAM policy updates to all assigned accounts.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachManagedPolicyToPermissionSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachManagedPolicyToPermissionSetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.AttachManagedPolicyToPermissionSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.CreateAccountAssignment:
    post:
      operationId: CreateAccountAssignment
      description: '<p>Assigns access to a principal for a specified Amazon Web Services account using a specified permission set.</p> <note> <p>The term <i>principal</i> here refers to a user or group that is defined in Amazon Web Services SSO.</p> </note> <note> <p>As part of a successful <code>CreateAccountAssignment</code> call, the specified permission set will automatically be provisioned to the account in the form of an IAM policy. That policy is attached to the SSO-created IAM role. If the permission set is subsequently updated, the corresponding IAM policies attached to roles in your accounts will not be updated automatically. In this case, you must call <code> <a>ProvisionPermissionSet</a> </code> to make these updates.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountAssignmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountAssignmentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.CreateAccountAssignment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.CreateInstanceAccessControlAttributeConfiguration:
    post:
      operationId: CreateInstanceAccessControlAttributeConfiguration
      description: 'Enables the attributes-based access control (ABAC) feature for the specified Amazon Web Services SSO instance. You can also specify new attributes to add to your ABAC configuration during the enabling process. For more information about ABAC, see <a href="/singlesignon/latest/userguide/abac.html">Attribute-Based Access Control</a> in the <i>Amazon Web Services SSO User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInstanceAccessControlAttributeConfigurationResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstanceAccessControlAttributeConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.CreateInstanceAccessControlAttributeConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.CreatePermissionSet:
    post:
      operationId: CreatePermissionSet
      description: '<p>Creates a permission set within a specified SSO instance.</p> <note> <p>To grant users and groups access to Amazon Web Services account resources, use <code> <a>CreateAccountAssignment</a> </code>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePermissionSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionSetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.CreatePermissionSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.DeleteAccountAssignment:
    post:
      operationId: DeleteAccountAssignment
      description: Deletes a principal's access from a specified Amazon Web Services account using a specified permission set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountAssignmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAccountAssignmentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.DeleteAccountAssignment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.DeleteInlinePolicyFromPermissionSet:
    post:
      operationId: DeleteInlinePolicyFromPermissionSet
      description: Deletes the inline policy from a specified permission set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInlinePolicyFromPermissionSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteInlinePolicyFromPermissionSetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.DeleteInlinePolicyFromPermissionSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.DeleteInstanceAccessControlAttributeConfiguration:
    post:
      operationId: DeleteInstanceAccessControlAttributeConfiguration
      description: 'Disables the attributes-based access control (ABAC) feature for the specified Amazon Web Services SSO instance and deletes all of the attribute mappings that have been configured. Once deleted, any attributes that are received from an identity source and any custom attributes you have previously configured will not be passed. For more information about ABAC, see <a href="/singlesignon/latest/userguide/abac.html">Attribute-Based Access Control</a> in the <i>Amazon Web Services SSO User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInstanceAccessControlAttributeConfigurationResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteInstanceAccessControlAttributeConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.DeleteInstanceAccessControlAttributeConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.DeletePermissionSet:
    post:
      operationId: DeletePermissionSet
      description: Deletes the specified permission set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePermissionSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePermissionSetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.DeletePermissionSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.DescribeAccountAssignmentCreationStatus:
    post:
      operationId: DescribeAccountAssignmentCreationStatus
      description: Describes the status of the assignment creation request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccountAssignmentCreationStatusResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAccountAssignmentCreationStatusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.DescribeAccountAssignmentCreationStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.DescribeAccountAssignmentDeletionStatus:
    post:
      operationId: DescribeAccountAssignmentDeletionStatus
      description: Describes the status of the assignment deletion request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccountAssignmentDeletionStatusResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAccountAssignmentDeletionStatusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.DescribeAccountAssignmentDeletionStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.DescribeInstanceAccessControlAttributeConfiguration:
    post:
      operationId: DescribeInstanceAccessControlAttributeConfiguration
      description: 'Returns the list of Amazon Web Services SSO identity store attributes that have been configured to work with attributes-based access control (ABAC) for the specified Amazon Web Services SSO instance. This will not return attributes configured and sent by an external identity provider. For more information about ABAC, see <a href="/singlesignon/latest/userguide/abac.html">Attribute-Based Access Control</a> in the <i>Amazon Web Services SSO User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstanceAccessControlAttributeConfigurationResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInstanceAccessControlAttributeConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.DescribeInstanceAccessControlAttributeConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.DescribePermissionSet:
    post:
      operationId: DescribePermissionSet
      description: Gets the details of the permission set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePermissionSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePermissionSetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.DescribePermissionSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.DescribePermissionSetProvisioningStatus:
    post:
      operationId: DescribePermissionSetProvisioningStatus
      description: Describes the status for the given permission set provisioning request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePermissionSetProvisioningStatusResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePermissionSetProvisioningStatusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.DescribePermissionSetProvisioningStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.DetachManagedPolicyFromPermissionSet:
    post:
      operationId: DetachManagedPolicyFromPermissionSet
      description: Detaches the attached IAM managed policy ARN from the specified permission set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachManagedPolicyFromPermissionSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachManagedPolicyFromPermissionSetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.DetachManagedPolicyFromPermissionSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.GetInlinePolicyForPermissionSet:
    post:
      operationId: GetInlinePolicyForPermissionSet
      description: Obtains the inline policy assigned to the permission set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInlinePolicyForPermissionSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInlinePolicyForPermissionSetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.GetInlinePolicyForPermissionSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.ListAccountAssignmentCreationStatus:
    post:
      operationId: ListAccountAssignmentCreationStatus
      description: Lists the status of the Amazon Web Services account assignment creation requests for a specified SSO instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountAssignmentCreationStatusResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccountAssignmentCreationStatusRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.ListAccountAssignmentCreationStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.ListAccountAssignmentDeletionStatus:
    post:
      operationId: ListAccountAssignmentDeletionStatus
      description: Lists the status of the Amazon Web Services account assignment deletion requests for a specified SSO instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountAssignmentDeletionStatusResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccountAssignmentDeletionStatusRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.ListAccountAssignmentDeletionStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.ListAccountAssignments:
    post:
      operationId: ListAccountAssignments
      description: Lists the assignee of the specified Amazon Web Services account with the specified permission set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountAssignmentsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccountAssignmentsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.ListAccountAssignments
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.ListAccountsForProvisionedPermissionSet:
    post:
      operationId: ListAccountsForProvisionedPermissionSet
      description: Lists all the Amazon Web Services accounts where the specified permission set is provisioned.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountsForProvisionedPermissionSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccountsForProvisionedPermissionSetRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.ListAccountsForProvisionedPermissionSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.ListInstances:
    post:
      operationId: ListInstances
      description: Lists the SSO instances that the caller has access to.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInstancesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.ListInstances
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.ListManagedPoliciesInPermissionSet:
    post:
      operationId: ListManagedPoliciesInPermissionSet
      description: Lists the IAM managed policy that is attached to a specified permission set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListManagedPoliciesInPermissionSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListManagedPoliciesInPermissionSetRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.ListManagedPoliciesInPermissionSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.ListPermissionSetProvisioningStatus:
    post:
      operationId: ListPermissionSetProvisioningStatus
      description: Lists the status of the permission set provisioning requests for a specified SSO instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionSetProvisioningStatusResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPermissionSetProvisioningStatusRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.ListPermissionSetProvisioningStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.ListPermissionSets:
    post:
      operationId: ListPermissionSets
      description: Lists the <a>PermissionSet</a>s in an SSO instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionSetsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPermissionSetsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.ListPermissionSets
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.ListPermissionSetsProvisionedToAccount:
    post:
      operationId: ListPermissionSetsProvisionedToAccount
      description: Lists all the permission sets that are provisioned to a specified Amazon Web Services account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionSetsProvisionedToAccountResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPermissionSetsProvisionedToAccountRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.ListPermissionSetsProvisionedToAccount
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Lists the tags that are attached to a specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.ProvisionPermissionSet:
    post:
      operationId: ProvisionPermissionSet
      description: The process by which a specified permission set is provisioned to the specified target.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionPermissionSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionPermissionSetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.ProvisionPermissionSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.PutInlinePolicyToPermissionSet:
    post:
      operationId: PutInlinePolicyToPermissionSet
      description: '<p>Attaches an IAM inline policy to a permission set.</p> <note> <p>If the permission set is already referenced by one or more account assignments, you will need to call <code> <a>ProvisionPermissionSet</a> </code> after this action to apply the corresponding IAM policy updates to all assigned accounts.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutInlinePolicyToPermissionSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutInlinePolicyToPermissionSetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.PutInlinePolicyToPermissionSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.TagResource:
    post:
      operationId: TagResource
      description: Associates a set of tags with a specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.UntagResource:
    post:
      operationId: UntagResource
      description: Disassociates a set of tags from a specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.UpdateInstanceAccessControlAttributeConfiguration:
    post:
      operationId: UpdateInstanceAccessControlAttributeConfiguration
      description: 'Updates the Amazon Web Services SSO identity store attributes that you can use with the Amazon Web Services SSO instance for attributes-based access control (ABAC). When using an external identity provider as an identity source, you can pass attributes through the SAML assertion as an alternative to configuring attributes from the Amazon Web Services SSO identity store. If a SAML assertion passes any of these attributes, Amazon Web Services SSO replaces the attribute value with the value from the Amazon Web Services SSO identity store. For more information about ABAC, see <a href="/singlesignon/latest/userguide/abac.html">Attribute-Based Access Control</a> in the <i>Amazon Web Services SSO User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInstanceAccessControlAttributeConfigurationResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstanceAccessControlAttributeConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.UpdateInstanceAccessControlAttributeConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SWBExternalService.UpdatePermissionSet:
    post:
      operationId: UpdatePermissionSet
      description: Updates an existing permission set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePermissionSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionSetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SWBExternalService.UpdatePermissionSet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AttachManagedPolicyToPermissionSetResponse:
      type: object
      properties: {}
    AttachManagedPolicyToPermissionSetRequest:
      type: object
      required:
        - InstanceArn
        - PermissionSetArn
        - ManagedPolicyArn
      title: AttachManagedPolicyToPermissionSetRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the <a>PermissionSet</a> that the managed policy should be attached to.
        ManagedPolicyArn:
          $ref: '#/components/schemas/ManagedPolicyArn'
          description: The IAM managed policy ARN to be attached to a permission set.
    ResourceNotFoundException: {}
    InternalServerException: {}
    ServiceQuotaExceededException: {}
    ThrottlingException: {}
    ValidationException: {}
    AccessDeniedException: {}
    ConflictException: {}
    CreateAccountAssignmentResponse:
      type: object
      properties:
        AccountAssignmentCreationStatus:
          $ref: '#/components/schemas/AccountAssignmentOperationStatus'
          description: The status object for the account assignment creation operation.
    CreateAccountAssignmentRequest:
      type: object
      required:
        - InstanceArn
        - TargetId
        - TargetType
        - PermissionSetArn
        - PrincipalType
        - PrincipalId
      title: CreateAccountAssignmentRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        TargetId:
          $ref: '#/components/schemas/TargetId'
          description: 'TargetID is an Amazon Web Services account identifier, typically a 10-12 digit string (For example, 123456789012).'
        TargetType:
          $ref: '#/components/schemas/TargetType'
          description: The entity type for which the assignment will be created.
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the permission set that the admin wants to grant the principal access to.
        PrincipalType:
          $ref: '#/components/schemas/PrincipalType'
          description: The entity type for which the assignment will be created.
        PrincipalId:
          $ref: '#/components/schemas/PrincipalId'
          description: 'An identifier for an object in Amazon Web Services SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in Amazon Web Services SSO, see the <a href="/singlesignon/latest/IdentityStoreAPIReference/welcome.html">Amazon Web Services SSO Identity Store API Reference</a>.'
    CreateInstanceAccessControlAttributeConfigurationResponse:
      type: object
      properties: {}
    CreateInstanceAccessControlAttributeConfigurationRequest:
      type: object
      required:
        - InstanceArn
        - InstanceAccessControlAttributeConfiguration
      title: CreateInstanceAccessControlAttributeConfigurationRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: The ARN of the SSO instance under which the operation will be executed.
        InstanceAccessControlAttributeConfiguration:
          $ref: '#/components/schemas/InstanceAccessControlAttributeConfiguration'
          description: 'Specifies the Amazon Web Services SSO identity store attributes to add to your ABAC configuration. When using an external identity provider as an identity source, you can pass attributes through the SAML assertion. Doing so provides an alternative to configuring attributes from the Amazon Web Services SSO identity store. If a SAML assertion passes any of these attributes, Amazon Web Services SSO will replace the attribute value with the value from the Amazon Web Services SSO identity store.'
    CreatePermissionSetResponse:
      type: object
      properties:
        PermissionSet:
          $ref: '#/components/schemas/PermissionSet'
          description: Defines the level of access on an Amazon Web Services account.
    CreatePermissionSetRequest:
      type: object
      required:
        - Name
        - InstanceArn
      title: CreatePermissionSetRequest
      properties:
        Name:
          $ref: '#/components/schemas/PermissionSetName'
          description: The name of the <a>PermissionSet</a>.
        Description:
          $ref: '#/components/schemas/PermissionSetDescription'
          description: The description of the <a>PermissionSet</a>.
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        SessionDuration:
          $ref: '#/components/schemas/Duration'
          description: The length of time that the application user sessions are valid in the ISO-8601 standard.
        RelayState:
          $ref: '#/components/schemas/RelayState'
          description: Used to redirect users within the application during the federation authentication process.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags to attach to the new <a>PermissionSet</a>.
    DeleteAccountAssignmentResponse:
      type: object
      properties:
        AccountAssignmentDeletionStatus:
          $ref: '#/components/schemas/AccountAssignmentOperationStatus'
          description: The status object for the account assignment deletion operation.
    DeleteAccountAssignmentRequest:
      type: object
      required:
        - InstanceArn
        - TargetId
        - TargetType
        - PermissionSetArn
        - PrincipalType
        - PrincipalId
      title: DeleteAccountAssignmentRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        TargetId:
          $ref: '#/components/schemas/TargetId'
          description: 'TargetID is an Amazon Web Services account identifier, typically a 10-12 digit string (For example, 123456789012).'
        TargetType:
          $ref: '#/components/schemas/TargetType'
          description: The entity type for which the assignment will be deleted.
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the permission set that will be used to remove access.
        PrincipalType:
          $ref: '#/components/schemas/PrincipalType'
          description: The entity type for which the assignment will be deleted.
        PrincipalId:
          $ref: '#/components/schemas/PrincipalId'
          description: 'An identifier for an object in Amazon Web Services SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in Amazon Web Services SSO, see the <a href="/singlesignon/latest/IdentityStoreAPIReference/welcome.html">Amazon Web Services SSO Identity Store API Reference</a>.'
    DeleteInlinePolicyFromPermissionSetResponse:
      type: object
      properties: {}
    DeleteInlinePolicyFromPermissionSetRequest:
      type: object
      required:
        - InstanceArn
        - PermissionSetArn
      title: DeleteInlinePolicyFromPermissionSetRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the permission set that will be used to remove access.
    DeleteInstanceAccessControlAttributeConfigurationResponse:
      type: object
      properties: {}
    DeleteInstanceAccessControlAttributeConfigurationRequest:
      type: object
      required:
        - InstanceArn
      title: DeleteInstanceAccessControlAttributeConfigurationRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: The ARN of the SSO instance under which the operation will be executed.
    DeletePermissionSetResponse:
      type: object
      properties: {}
    DeletePermissionSetRequest:
      type: object
      required:
        - InstanceArn
        - PermissionSetArn
      title: DeletePermissionSetRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the permission set that should be deleted.
    DescribeAccountAssignmentCreationStatusResponse:
      type: object
      properties:
        AccountAssignmentCreationStatus:
          $ref: '#/components/schemas/AccountAssignmentOperationStatus'
          description: The status object for the account assignment creation operation.
    DescribeAccountAssignmentCreationStatusRequest:
      type: object
      required:
        - InstanceArn
        - AccountAssignmentCreationRequestId
      title: DescribeAccountAssignmentCreationStatusRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        AccountAssignmentCreationRequestId:
          $ref: '#/components/schemas/UUId'
          description: The identifier that is used to track the request operation progress.
    DescribeAccountAssignmentDeletionStatusResponse:
      type: object
      properties:
        AccountAssignmentDeletionStatus:
          $ref: '#/components/schemas/AccountAssignmentOperationStatus'
          description: The status object for the account assignment deletion operation.
    DescribeAccountAssignmentDeletionStatusRequest:
      type: object
      required:
        - InstanceArn
        - AccountAssignmentDeletionRequestId
      title: DescribeAccountAssignmentDeletionStatusRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        AccountAssignmentDeletionRequestId:
          $ref: '#/components/schemas/UUId'
          description: The identifier that is used to track the request operation progress.
    DescribeInstanceAccessControlAttributeConfigurationResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/InstanceAccessControlAttributeConfigurationStatus'
          description: The status of the attribute configuration process.
        StatusReason:
          $ref: '#/components/schemas/InstanceAccessControlAttributeConfigurationStatusReason'
          description: Provides more details about the current status of the specified attribute.
        InstanceAccessControlAttributeConfiguration:
          $ref: '#/components/schemas/InstanceAccessControlAttributeConfiguration'
          description: Gets the list of Amazon Web Services SSO identity store attributes that have been added to your ABAC configuration.
    DescribeInstanceAccessControlAttributeConfigurationRequest:
      type: object
      required:
        - InstanceArn
      title: DescribeInstanceAccessControlAttributeConfigurationRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: The ARN of the SSO instance under which the operation will be executed.
    DescribePermissionSetResponse:
      type: object
      properties:
        PermissionSet:
          $ref: '#/components/schemas/PermissionSet'
          description: Describes the level of access on an Amazon Web Services account.
    DescribePermissionSetRequest:
      type: object
      required:
        - InstanceArn
        - PermissionSetArn
      title: DescribePermissionSetRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the permission set.
    DescribePermissionSetProvisioningStatusResponse:
      type: object
      properties:
        PermissionSetProvisioningStatus:
          $ref: '#/components/schemas/PermissionSetProvisioningStatus'
          description: The status object for the permission set provisioning operation.
    DescribePermissionSetProvisioningStatusRequest:
      type: object
      required:
        - InstanceArn
        - ProvisionPermissionSetRequestId
      title: DescribePermissionSetProvisioningStatusRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        ProvisionPermissionSetRequestId:
          $ref: '#/components/schemas/UUId'
          description: The identifier that is provided by the <a>ProvisionPermissionSet</a> call to retrieve the current status of the provisioning workflow.
    DetachManagedPolicyFromPermissionSetResponse:
      type: object
      properties: {}
    DetachManagedPolicyFromPermissionSetRequest:
      type: object
      required:
        - InstanceArn
        - PermissionSetArn
        - ManagedPolicyArn
      title: DetachManagedPolicyFromPermissionSetRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the <a>PermissionSet</a> from which the policy should be detached.
        ManagedPolicyArn:
          $ref: '#/components/schemas/ManagedPolicyArn'
          description: The IAM managed policy ARN to be attached to a permission set.
    GetInlinePolicyForPermissionSetResponse:
      type: object
      properties:
        InlinePolicy:
          $ref: '#/components/schemas/PermissionSetPolicyDocument'
          description: The IAM inline policy that is attached to the permission set.
    GetInlinePolicyForPermissionSetRequest:
      type: object
      required:
        - InstanceArn
        - PermissionSetArn
      title: GetInlinePolicyForPermissionSetRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the permission set.
    ListAccountAssignmentCreationStatusResponse:
      type: object
      properties:
        AccountAssignmentsCreationStatus:
          $ref: '#/components/schemas/AccountAssignmentOperationStatusList'
          description: The status object for the account assignment creation operation.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListAccountAssignmentCreationStatusRequest:
      type: object
      required:
        - InstanceArn
      title: ListAccountAssignmentCreationStatusRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to display for the assignment.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
        Filter:
          $ref: '#/components/schemas/OperationStatusFilter'
          description: Filters results based on the passed attribute value.
    ListAccountAssignmentDeletionStatusResponse:
      type: object
      properties:
        AccountAssignmentsDeletionStatus:
          $ref: '#/components/schemas/AccountAssignmentOperationStatusList'
          description: The status object for the account assignment deletion operation.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListAccountAssignmentDeletionStatusRequest:
      type: object
      required:
        - InstanceArn
      title: ListAccountAssignmentDeletionStatusRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to display for the assignment.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
        Filter:
          $ref: '#/components/schemas/OperationStatusFilter'
          description: Filters results based on the passed attribute value.
    ListAccountAssignmentsResponse:
      type: object
      properties:
        AccountAssignments:
          $ref: '#/components/schemas/AccountAssignmentList'
          description: The list of assignments that match the input Amazon Web Services account and permission set.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListAccountAssignmentsRequest:
      type: object
      required:
        - InstanceArn
        - AccountId
        - PermissionSetArn
      title: ListAccountAssignmentsRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        AccountId:
          $ref: '#/components/schemas/TargetId'
          description: The identifier of the Amazon Web Services account from which to list the assignments.
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the permission set from which to list assignments.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to display for the assignment.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListAccountsForProvisionedPermissionSetResponse:
      type: object
      properties:
        AccountIds:
          $ref: '#/components/schemas/AccountList'
          description: The list of Amazon Web Services <code>AccountIds</code>.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListAccountsForProvisionedPermissionSetRequest:
      type: object
      required:
        - InstanceArn
        - PermissionSetArn
      title: ListAccountsForProvisionedPermissionSetRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the <a>PermissionSet</a> from which the associated Amazon Web Services accounts will be listed.
        ProvisioningStatus:
          $ref: '#/components/schemas/ProvisioningStatus'
          description: The permission set provisioning status for an Amazon Web Services account.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to display for the <a>PermissionSet</a>.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListInstancesResponse:
      type: object
      properties:
        Instances:
          $ref: '#/components/schemas/InstanceList'
          description: Lists the SSO instances that the caller has access to.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListInstancesRequest:
      type: object
      title: ListInstancesRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to display for the instance.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListManagedPoliciesInPermissionSetResponse:
      type: object
      properties:
        AttachedManagedPolicies:
          $ref: '#/components/schemas/AttachedManagedPolicyList'
          description: The array of the <a>AttachedManagedPolicy</a> data type object.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListManagedPoliciesInPermissionSetRequest:
      type: object
      required:
        - InstanceArn
        - PermissionSetArn
      title: ListManagedPoliciesInPermissionSetRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the <a>PermissionSet</a> whose managed policies will be listed.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to display for the <a>PermissionSet</a>.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListPermissionSetProvisioningStatusResponse:
      type: object
      properties:
        PermissionSetsProvisioningStatus:
          $ref: '#/components/schemas/PermissionSetProvisioningStatusList'
          description: The status object for the permission set provisioning operation.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListPermissionSetProvisioningStatusRequest:
      type: object
      required:
        - InstanceArn
      title: ListPermissionSetProvisioningStatusRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to display for the assignment.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
        Filter:
          $ref: '#/components/schemas/OperationStatusFilter'
          description: Filters results based on the passed attribute value.
    ListPermissionSetsResponse:
      type: object
      properties:
        PermissionSets:
          $ref: '#/components/schemas/PermissionSetList'
          description: Defines the level of access on an Amazon Web Services account.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListPermissionSetsRequest:
      type: object
      required:
        - InstanceArn
      title: ListPermissionSetsRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to display for the assignment.
    ListPermissionSetsProvisionedToAccountResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
        PermissionSets:
          $ref: '#/components/schemas/PermissionSetList'
          description: Defines the level of access that an Amazon Web Services account has.
    ListPermissionSetsProvisionedToAccountRequest:
      type: object
      required:
        - InstanceArn
        - AccountId
      title: ListPermissionSetsProvisionedToAccountRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The identifier of the Amazon Web Services account from which to list the assignments.
        ProvisioningStatus:
          $ref: '#/components/schemas/ProvisioningStatus'
          description: The status object for the permission set provisioning operation.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to display for the assignment.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A set of key-value pairs that are used to manage the resource.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ListTagsForResourceRequest:
      type: object
      required:
        - InstanceArn
        - ResourceArn
      title: ListTagsForResourceRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        ResourceArn:
          $ref: '#/components/schemas/GeneralArn'
          description: The ARN of the resource with the tags to be listed.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.
    ProvisionPermissionSetResponse:
      type: object
      properties:
        PermissionSetProvisioningStatus:
          $ref: '#/components/schemas/PermissionSetProvisioningStatus'
          description: The status object for the permission set provisioning operation.
    ProvisionPermissionSetRequest:
      type: object
      required:
        - InstanceArn
        - PermissionSetArn
        - TargetType
      title: ProvisionPermissionSetRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the permission set.
        TargetId:
          $ref: '#/components/schemas/TargetId'
          description: 'TargetID is an Amazon Web Services account identifier, typically a 10-12 digit string (For example, 123456789012).'
        TargetType:
          $ref: '#/components/schemas/ProvisionTargetType'
          description: The entity type for which the assignment will be created.
    PutInlinePolicyToPermissionSetResponse:
      type: object
      properties: {}
    PutInlinePolicyToPermissionSetRequest:
      type: object
      required:
        - InstanceArn
        - PermissionSetArn
        - InlinePolicy
      title: PutInlinePolicyToPermissionSetRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the permission set.
        InlinePolicy:
          $ref: '#/components/schemas/PermissionSetPolicyDocument'
          description: The IAM inline policy to attach to a <a>PermissionSet</a>.
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - InstanceArn
        - ResourceArn
        - Tags
      title: TagResourceRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        ResourceArn:
          $ref: '#/components/schemas/GeneralArn'
          description: The ARN of the resource with the tags to be listed.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A set of key-value pairs that are used to manage the resource.
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - InstanceArn
        - ResourceArn
        - TagKeys
      title: UntagResourceRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        ResourceArn:
          $ref: '#/components/schemas/GeneralArn'
          description: The ARN of the resource with the tags to be listed.
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: The keys of tags that are attached to the resource.
    UpdateInstanceAccessControlAttributeConfigurationResponse:
      type: object
      properties: {}
    UpdateInstanceAccessControlAttributeConfigurationRequest:
      type: object
      required:
        - InstanceArn
        - InstanceAccessControlAttributeConfiguration
      title: UpdateInstanceAccessControlAttributeConfigurationRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: The ARN of the SSO instance under which the operation will be executed.
        InstanceAccessControlAttributeConfiguration:
          $ref: '#/components/schemas/InstanceAccessControlAttributeConfiguration'
          description: Updates the attributes for your ABAC configuration.
    UpdatePermissionSetResponse:
      type: object
      properties: {}
    UpdatePermissionSetRequest:
      type: object
      required:
        - InstanceArn
        - PermissionSetArn
      title: UpdatePermissionSetRequest
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: The ARN of the permission set.
        Description:
          $ref: '#/components/schemas/PermissionSetDescription'
          description: The description of the <a>PermissionSet</a>.
        SessionDuration:
          $ref: '#/components/schemas/Duration'
          description: The length of time that the application user sessions are valid for in the ISO-8601 standard.
        RelayState:
          $ref: '#/components/schemas/RelayState'
          description: Used to redirect users within the application during the federation authentication process.
    AccessControlAttributeKey:
      type: string
      pattern: '[\p{L}\p{Z}\p{N}_.:\/=+\-@]+'
      minLength: 1
      maxLength: 128
    AccessControlAttributeValue:
      type: object
      required:
        - Source
      properties:
        Source:
          $ref: '#/components/schemas/AccessControlAttributeValueSourceList'
          description: The identity source to use when mapping a specified attribute to Amazon Web Services SSO.
      description: The value used for mapping a specified attribute to an identity source.
    AccessControlAttribute:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/AccessControlAttributeKey'
          description: The name of the attribute associated with your identities in your identity source. This is used to map a specified attribute in your identity source with an attribute in Amazon Web Services SSO.
        Value:
          $ref: '#/components/schemas/AccessControlAttributeValue'
          description: The value used for mapping a specified attribute to an identity source.
      description: 'These are Amazon Web Services SSO identity store attributes that you can configure for use in attributes-based access control (ABAC). You can create permissions policies that determine who can access your Amazon Web Services resources based upon the configured attribute values. When you enable ABAC and specify <code>AccessControlAttributes</code>, Amazon Web Services SSO passes the attribute values of the authenticated user into IAM for use in policy evaluation.'
    AccessControlAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/AccessControlAttribute'
      minItems: 0
      maxItems: 50
    AccessControlAttributeValueSourceList:
      type: array
      items:
        $ref: '#/components/schemas/AccessControlAttributeValueSource'
      minItems: 1
      maxItems: 1
    AccessControlAttributeValueSource:
      type: string
      pattern: '[\p{L}\p{Z}\p{N}_.:\/=+\-@\[\]\{\}\$\\"]*'
      minLength: 0
      maxLength: 256
    AccountId:
      type: string
      pattern: '\d{12}'
    PermissionSetArn:
      type: string
      pattern: 'arn:aws:sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}'
      minLength: 10
      maxLength: 1224
    PrincipalType:
      type: string
      enum:
        - USER
        - GROUP
    PrincipalId:
      type: string
      pattern: '^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$'
      minLength: 1
      maxLength: 47
    AccountAssignment:
      type: object
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The identifier of the Amazon Web Services account.
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: 'The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PrincipalType:
          $ref: '#/components/schemas/PrincipalType'
          description: The entity type for which the assignment will be created.
        PrincipalId:
          $ref: '#/components/schemas/PrincipalId'
          description: 'An identifier for an object in Amazon Web Services SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in Amazon Web Services SSO, see the <a href="/singlesignon/latest/IdentityStoreAPIReference/welcome.html">Amazon Web Services SSO Identity Store API Reference</a>.'
      description: <p>The assignment that indicates a principal's limited access to a specified Amazon Web Services account with a specified permission set.</p> <note> <p>The term <i>principal</i> here refers to a user or group that is defined in Amazon Web Services SSO.</p> </note>
    AccountAssignmentList:
      type: array
      items:
        $ref: '#/components/schemas/AccountAssignment'
    StatusValues:
      type: string
      enum:
        - IN_PROGRESS
        - FAILED
        - SUCCEEDED
    UUId:
      type: string
      pattern: '\b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b'
    Reason:
      type: string
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
    TargetId:
      type: string
      pattern: '\d{12}'
    TargetType:
      type: string
      enum:
        - AWS_ACCOUNT
    Date:
      type: string
      format: date-time
    AccountAssignmentOperationStatus:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusValues'
          description: The status of the permission set provisioning process.
        RequestId:
          $ref: '#/components/schemas/UUId'
          description: The identifier for tracking the request operation that is generated by the universally unique identifier (UUID) workflow.
        FailureReason:
          $ref: '#/components/schemas/Reason'
          description: The message that contains an error or exception in case of an operation failure.
        TargetId:
          $ref: '#/components/schemas/TargetId'
          description: 'TargetID is an Amazon Web Services account identifier, typically a 10-12 digit string (For example, 123456789012).'
        TargetType:
          $ref: '#/components/schemas/TargetType'
          description: The entity type for which the assignment will be created.
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: 'The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        PrincipalType:
          $ref: '#/components/schemas/PrincipalType'
          description: The entity type for which the assignment will be created.
        PrincipalId:
          $ref: '#/components/schemas/PrincipalId'
          description: 'An identifier for an object in Amazon Web Services SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in Amazon Web Services SSO, see the <a href="/singlesignon/latest/IdentityStoreAPIReference/welcome.html">Amazon Web Services SSO Identity Store API Reference</a>.'
        CreatedDate:
          $ref: '#/components/schemas/Date'
          description: The date that the permission set was created.
      description: The status of the creation or deletion operation of an assignment that a principal needs to access an account.
    AccountAssignmentOperationStatusMetadata:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusValues'
          description: The status of the permission set provisioning process.
        RequestId:
          $ref: '#/components/schemas/UUId'
          description: The identifier for tracking the request operation that is generated by the universally unique identifier (UUID) workflow.
        CreatedDate:
          $ref: '#/components/schemas/Date'
          description: The date that the permission set was created.
      description: Provides information about the <a>AccountAssignment</a> creation request.
    AccountAssignmentOperationStatusList:
      type: array
      items:
        $ref: '#/components/schemas/AccountAssignmentOperationStatusMetadata'
    AccountList:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    InstanceArn:
      type: string
      pattern: 'arn:aws:sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}'
      minLength: 10
      maxLength: 1224
    ManagedPolicyArn:
      type: string
      minLength: 20
      maxLength: 2048
    Name:
      type: string
      minLength: 1
      maxLength: 100
    AttachedManagedPolicy:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the IAM managed policy.
        Arn:
          $ref: '#/components/schemas/ManagedPolicyArn'
          description: 'The ARN of the IAM managed policy. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
      description: A structure that stores the details of the IAM managed policy.
    AttachedManagedPolicyList:
      type: array
      items:
        $ref: '#/components/schemas/AttachedManagedPolicy'
    InstanceAccessControlAttributeConfiguration:
      type: object
      required:
        - AccessControlAttributes
      properties:
        AccessControlAttributes:
          $ref: '#/components/schemas/AccessControlAttributeList'
          description: Lists the attributes that are configured for ABAC in the specified Amazon Web Services SSO instance.
      description: Specifies the attributes to add to your attribute-based access control (ABAC) configuration.
    PermissionSetName:
      type: string
      pattern: '[\w+=,.@-]+'
      minLength: 1
      maxLength: 32
    PermissionSetDescription:
      type: string
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
      minLength: 1
      maxLength: 700
    Duration:
      type: string
      pattern: '^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$'
      minLength: 1
      maxLength: 100
    RelayState:
      type: string
      pattern: '[a-zA-Z0-9&$@#\\\/%?=~\-_''"|!:,.;*+\[\]\ \(\)\{\}]+'
      minLength: 1
      maxLength: 240
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 50
    PermissionSet:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/PermissionSetName'
          description: The name of the permission set.
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: 'The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        Description:
          $ref: '#/components/schemas/PermissionSetDescription'
          description: The description of the <a>PermissionSet</a>.
        CreatedDate:
          $ref: '#/components/schemas/Date'
          description: The date that the permission set was created.
        SessionDuration:
          $ref: '#/components/schemas/Duration'
          description: The length of time that the application user sessions are valid for in the ISO-8601 standard.
        RelayState:
          $ref: '#/components/schemas/RelayState'
          description: Used to redirect users within the application during the federation authentication process.
      description: An entity that contains IAM policies.
    InstanceAccessControlAttributeConfigurationStatus:
      type: string
      enum:
        - ENABLED
        - CREATION_IN_PROGRESS
        - CREATION_FAILED
    InstanceAccessControlAttributeConfigurationStatusReason:
      type: string
    PermissionSetProvisioningStatus:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusValues'
          description: The status of the permission set provisioning process.
        RequestId:
          $ref: '#/components/schemas/UUId'
          description: The identifier for tracking the request operation that is generated by the universally unique identifier (UUID) workflow.
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The identifier of the Amazon Web Services account from which to list the assignments.
        PermissionSetArn:
          $ref: '#/components/schemas/PermissionSetArn'
          description: 'The ARN of the permission set that is being provisioned. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        FailureReason:
          $ref: '#/components/schemas/Reason'
          description: The message that contains an error or exception in case of an operation failure.
        CreatedDate:
          $ref: '#/components/schemas/Date'
          description: The date that the permission set was created.
      description: A structure that is used to provide the status of the provisioning operation for a specified permission set.
    GeneralArn:
      type: string
      pattern: 'arn:aws:sso:([a-zA-Z0-9-]+)?:(\d{12})?:[a-zA-Z0-9-]+/[a-zA-Z0-9-/.]+'
      minLength: 10
      maxLength: 2048
    PermissionSetPolicyDocument:
      type: string
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      minLength: 1
      maxLength: 10240
      format: password
    Id:
      type: string
      pattern: '^[a-zA-Z0-9-]*'
      minLength: 1
      maxLength: 64
    InstanceMetadata:
      type: object
      properties:
        InstanceArn:
          $ref: '#/components/schemas/InstanceArn'
          description: 'The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.'
        IdentityStoreId:
          $ref: '#/components/schemas/Id'
          description: The identifier of the identity store that is connected to the SSO instance.
      description: Provides information about the SSO instance.
    InstanceList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceMetadata'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Token:
      type: string
      pattern: '^[-a-zA-Z0-9+=/_]*'
      maxLength: 2048
    OperationStatusFilter:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusValues'
          description: Filters the list operations result based on the status attribute.
      description: Filters he operation status list based on the passed attribute value.
    ProvisioningStatus:
      type: string
      enum:
        - LATEST_PERMISSION_SET_PROVISIONED
        - LATEST_PERMISSION_SET_NOT_PROVISIONED
    PermissionSetProvisioningStatusList:
      type: array
      items:
        $ref: '#/components/schemas/PermissionSetProvisioningStatusMetadata'
    PermissionSetList:
      type: array
      items:
        $ref: '#/components/schemas/PermissionSetArn'
    PermissionSetProvisioningStatusMetadata:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusValues'
          description: The status of the permission set provisioning process.
        RequestId:
          $ref: '#/components/schemas/UUId'
          description: The identifier for tracking the request operation that is generated by the universally unique identifier (UUID) workflow.
        CreatedDate:
          $ref: '#/components/schemas/Date'
          description: The date that the permission set was created.
      description: Provides information about the permission set provisioning status.
    ProvisionTargetType:
      type: string
      enum:
        - AWS_ACCOUNT
        - ALL_PROVISIONED_ACCOUNTS
    TagKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The key for the tag.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The value of the tag.
      description: A set of key-value pairs that are used to manage the resource. Tags can only be applied to permission sets and cannot be applied to corresponding roles that Amazon Web Services SSO creates in Amazon Web Services accounts.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
security:
  - hmac: []
