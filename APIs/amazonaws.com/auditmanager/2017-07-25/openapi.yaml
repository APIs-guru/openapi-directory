openapi: 3.0.0
info:
  version: '2017-07-25'
  x-release: v4
  title: AWS Audit Manager
  description: '<p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continuously audit your Amazon Web Services usage, and assess the effectiveness of your controls to better manage risk and simplify compliance.</p> <p>Audit Manager provides pre-built frameworks that structure and automate assessments for a given compliance standard. Frameworks include a pre-built collection of controls with descriptions and testing procedures, which are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with unique requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you''re new to Audit Manager, we recommend that you review the <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html"> Audit Manager User Guide</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: auditmanager
  x-aws-signingName: auditmanager
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/auditmanager-2017-07-25.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/auditmanager/'
servers:
  - url: 'http://auditmanager.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Audit Manager multi-region endpoint
  - url: 'https://auditmanager.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Audit Manager multi-region endpoint
  - url: 'http://auditmanager.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Audit Manager endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://auditmanager.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Audit Manager endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/assessments/{assessmentId}/associateToAssessmentReport':
    put:
      operationId: AssociateAssessmentReportEvidenceFolder
      description: ' Associates an evidence folder to the specified assessment report in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateAssessmentReportEvidenceFolderResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - evidenceFolderId
              properties:
                evidenceFolderId:
                  description: ' The identifier for the folder in which evidence is stored. '
                  type: string
                  pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
                  minLength: 36
                  maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/batchAssociateToAssessmentReport':
    put:
      operationId: BatchAssociateAssessmentReportEvidence
      description: ' Associates a list of evidence to an assessment report in an Audit Manager assessment. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAssociateAssessmentReportEvidenceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The unique identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - evidenceFolderId
                - evidenceIds
              properties:
                evidenceFolderId:
                  description: ' The identifier for the folder in which the evidence is stored. '
                  type: string
                  pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
                  minLength: 36
                  maxLength: 36
                evidenceIds:
                  description: ' The list of evidence identifiers. '
                  type: array
                  items:
                    $ref: '#/components/schemas/UUID'
                  minItems: 0
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/delegations':
    post:
      operationId: BatchCreateDelegationByAssessment
      description: ' Create a batch of delegations for a specified assessment in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateDelegationByAssessmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - createDelegationRequests
              properties:
                createDelegationRequests:
                  description: ' The API request to batch create delegations in Audit Manager. '
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateDelegationRequest'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: BatchDeleteDelegationByAssessment
      description: ' Deletes the delegations in the specified Audit Manager assessment. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteDelegationByAssessmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - delegationIds
              properties:
                delegationIds:
                  description: ' The identifiers for the specified delegations. '
                  type: array
                  items:
                    $ref: '#/components/schemas/UUID'
                  minItems: 1
                  maxItems: 50
  '/assessments/{assessmentId}/batchDisassociateFromAssessmentReport':
    put:
      operationId: BatchDisassociateAssessmentReportEvidence
      description: ' Disassociates a list of evidence from the specified assessment report in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDisassociateAssessmentReportEvidenceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - evidenceFolderId
                - evidenceIds
              properties:
                evidenceFolderId:
                  description: ' The identifier for the folder in which evidence is stored. '
                  type: string
                  pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
                  minLength: 36
                  maxLength: 36
                evidenceIds:
                  description: ' The list of evidence identifiers. '
                  type: array
                  items:
                    $ref: '#/components/schemas/UUID'
                  minItems: 0
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/controlSets/{controlSetId}/controls/{controlId}/evidence':
    post:
      operationId: BatchImportEvidenceToAssessmentControl
      description: ' Uploads one or more pieces of evidence to the specified control in the assessment in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchImportEvidenceToAssessmentControlResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: ' The identifier for the specified control set. '
          schema:
            type: string
            pattern: '^[\w\W\s\S]*$'
            minLength: 1
            maxLength: 300
        - name: controlId
          in: path
          required: true
          description: ' The identifier for the specified control. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - manualEvidence
              properties:
                manualEvidence:
                  description: ' The list of manual evidence objects. '
                  type: array
                  items:
                    $ref: '#/components/schemas/ManualEvidence'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /assessments:
    post:
      operationId: CreateAssessment
      description: ' Creates an assessment in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssessmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - assessmentReportsDestination
                - scope
                - roles
                - frameworkId
              properties:
                name:
                  description: ' The name of the assessment to be created. '
                  type: string
                  pattern: '^[^\\]*$'
                  minLength: 1
                  maxLength: 300
                description:
                  description: ' The optional description of the assessment to be created. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 1000
                assessmentReportsDestination:
                  description: ' The location in which Audit Manager saves assessment reports for the given assessment. '
                  type: object
                  properties:
                    destinationType:
                      $ref: '#/components/schemas/AssessmentReportDestinationType'
                      description: ' The destination type, such as Amazon S3. '
                    destination:
                      $ref: '#/components/schemas/S3Url'
                      description: ' The destination of the assessment report. '
                scope:
                  description: ' The wrapper that contains the accounts and services in scope for the assessment. '
                  type: object
                  properties:
                    awsAccounts:
                      $ref: '#/components/schemas/AWSAccounts'
                      description: ' The accounts included in the scope of the assessment. '
                    awsServices:
                      $ref: '#/components/schemas/AWSServices'
                      description: ' The Amazon Web Services services included in the scope of the assessment. '
                roles:
                  description: ' The list of roles for the specified assessment. '
                  type: array
                  items:
                    $ref: '#/components/schemas/Role'
                frameworkId:
                  description: ' The identifier for the specified framework. '
                  type: string
                  pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
                  minLength: 36
                  maxLength: 36
                tags:
                  description: ' The tags associated with the assessment. '
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListAssessments
      description: ' Returns a list of current and past assessments from Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssessmentsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: ' The pagination token used to fetch the next set of results. '
          schema:
            type: string
            pattern: '^[A-Za-z0-9+\/=]*$'
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: ' Represents the maximum number of results per page, or per API request call. '
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
  /assessmentFrameworks:
    post:
      operationId: CreateAssessmentFramework
      description: ' Creates a custom framework in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssessmentFrameworkResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - controlSets
              properties:
                name:
                  description: ' The name of the new custom framework. '
                  type: string
                  pattern: '^[^\\]*$'
                  minLength: 1
                  maxLength: 300
                description:
                  description: ' An optional description for the new custom framework. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  minLength: 1
                  maxLength: 1000
                complianceType:
                  description: ' The compliance type that the new custom framework supports, such as CIS or HIPAA. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 100
                controlSets:
                  description: ' The control sets to be associated with the framework. '
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateAssessmentFrameworkControlSet'
                  minItems: 1
                tags:
                  description: ' The tags associated with the framework. '
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/reports':
    post:
      operationId: CreateAssessmentReport
      description: ' Creates an assessment report for the specified assessment. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssessmentReportResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  description: ' The name of the new assessment report. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_\.]+$'
                  minLength: 1
                  maxLength: 300
                description:
                  description: ' The description of the assessment report. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /controls:
    post:
      operationId: CreateControl
      description: ' Creates a new custom control in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateControlResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - controlMappingSources
              properties:
                name:
                  description: ' The name of the control. '
                  type: string
                  pattern: '^[^\\]*$'
                  minLength: 1
                  maxLength: 300
                description:
                  description: ' The description of the control. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 1000
                testingInformation:
                  description: ' The steps to follow to determine if the control has been satisfied. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 1000
                actionPlanTitle:
                  description: ' The title of the action plan for remediating the control. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 300
                actionPlanInstructions:
                  description: ' The recommended actions to carry out if the control is not fulfilled. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 1000
                controlMappingSources:
                  description: ' The data mapping sources for the specified control. '
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateControlMappingSource'
                  minItems: 1
                tags:
                  description: ' The tags associated with the control. '
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}':
    delete:
      operationId: DeleteAssessment
      description: ' Deletes an assessment in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssessmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAssessment
      description: ' Returns an assessment from Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssessmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdateAssessment
      description: ' Edits an Audit Manager assessment. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAssessmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - scope
              properties:
                assessmentName:
                  description: ' The name of the specified assessment to be updated. '
                  type: string
                  pattern: '^[^\\]*$'
                  minLength: 1
                  maxLength: 300
                assessmentDescription:
                  description: ' The description of the specified assessment. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 1000
                scope:
                  description: ' The wrapper that contains the accounts and services in scope for the assessment. '
                  type: object
                  properties:
                    awsAccounts:
                      $ref: '#/components/schemas/AWSAccounts'
                      description: ' The accounts included in the scope of the assessment. '
                    awsServices:
                      $ref: '#/components/schemas/AWSServices'
                      description: ' The Amazon Web Services services included in the scope of the assessment. '
                assessmentReportsDestination:
                  description: ' The location in which Audit Manager saves assessment reports for the given assessment. '
                  type: object
                  properties:
                    destinationType:
                      $ref: '#/components/schemas/AssessmentReportDestinationType'
                      description: ' The destination type, such as Amazon S3. '
                    destination:
                      $ref: '#/components/schemas/S3Url'
                      description: ' The destination of the assessment report. '
                roles:
                  description: ' The list of roles for the specified assessment. '
                  type: array
                  items:
                    $ref: '#/components/schemas/Role'
  '/assessmentFrameworks/{frameworkId}':
    delete:
      operationId: DeleteAssessmentFramework
      description: ' Deletes a custom framework in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssessmentFrameworkResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: frameworkId
          in: path
          required: true
          description: ' The identifier for the specified framework. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAssessmentFramework
      description: ' Returns a framework from Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssessmentFrameworkResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: frameworkId
          in: path
          required: true
          description: ' The identifier for the specified framework. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdateAssessmentFramework
      description: ' Updates a custom framework in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAssessmentFrameworkResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: frameworkId
          in: path
          required: true
          description: ' The identifier for the specified framework. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - controlSets
              properties:
                name:
                  description: ' The name of the framework to be updated. '
                  type: string
                  pattern: '^[^\\]*$'
                  minLength: 1
                  maxLength: 300
                description:
                  description: ' The description of the framework that is to be updated. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  minLength: 1
                  maxLength: 1000
                complianceType:
                  description: ' The compliance type that the new custom framework supports, such as CIS or HIPAA. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 100
                controlSets:
                  description: ' The control sets associated with the framework. '
                  type: array
                  items:
                    $ref: '#/components/schemas/UpdateAssessmentFrameworkControlSet'
  '/assessments/{assessmentId}/reports/{assessmentReportId}':
    delete:
      operationId: DeleteAssessmentReport
      description: ' Deletes an assessment report from an assessment in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssessmentReportResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: assessmentReportId
          in: path
          required: true
          description: ' The unique identifier for the assessment report. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/controls/{controlId}':
    delete:
      operationId: DeleteControl
      description: ' Deletes a custom control in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteControlResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: controlId
          in: path
          required: true
          description: ' The identifier for the specified control. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetControl
      description: ' Returns a control from Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetControlResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: controlId
          in: path
          required: true
          description: ' The identifier for the specified control. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdateControl
      description: ' Updates a custom control in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateControlResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: controlId
          in: path
          required: true
          description: ' The identifier for the specified control. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - controlMappingSources
              properties:
                name:
                  description: ' The name of the control to be updated. '
                  type: string
                  pattern: '^[^\\]*$'
                  minLength: 1
                  maxLength: 300
                description:
                  description: ' The optional description of the control. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 1000
                testingInformation:
                  description: ' The steps that to follow to determine if the control has been satisfied. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 1000
                actionPlanTitle:
                  description: ' The title of the action plan for remediating the control. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 300
                actionPlanInstructions:
                  description: ' The recommended actions to carry out if the control is not fulfilled. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 1000
                controlMappingSources:
                  description: ' The data mapping sources for the specified control. '
                  type: array
                  items:
                    $ref: '#/components/schemas/ControlMappingSource'
                  minItems: 1
  /account/deregisterAccount:
    post:
      operationId: DeregisterAccount
      description: ' Deregisters an account in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterAccountResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /account/deregisterOrganizationAdminAccount:
    post:
      operationId: DeregisterOrganizationAdminAccount
      description: '<p>Removes the specified member account as a delegated administrator for Audit Manager. </p> <important> <p>When you remove a delegated administrator from your Audit Manager settings, or when you deregister a delegated administrator from Organizations, you continue to have access to the evidence that you previously collected under that account. However, Audit Manager will stop collecting and attaching evidence to that delegated administrator account moving forward.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterOrganizationAdminAccountResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                adminAccountId:
                  description: ' The identifier for the specified administrator account. '
                  type: string
                  pattern: '^[0-9]{12}$'
                  minLength: 12
                  maxLength: 12
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/disassociateFromAssessmentReport':
    put:
      operationId: DisassociateAssessmentReportEvidenceFolder
      description: ' Disassociates an evidence folder from the specified assessment report in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateAssessmentReportEvidenceFolderResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - evidenceFolderId
              properties:
                evidenceFolderId:
                  description: ' The identifier for the folder in which evidence is stored. '
                  type: string
                  pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
                  minLength: 36
                  maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /account/status:
    get:
      operationId: GetAccountStatus
      description: ' Returns the registration status of an account in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountStatusResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/reports/{assessmentReportId}/url':
    get:
      operationId: GetAssessmentReportUrl
      description: ' Returns the URL of a specified assessment report in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssessmentReportUrlResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: assessmentReportId
          in: path
          required: true
          description: ' The identifier for the assessment report. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/changelogs':
    get:
      operationId: GetChangeLogs
      description: ' Returns a list of changelogs from Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChangeLogsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: query
          required: false
          description: ' The identifier for the specified control set. '
          schema:
            type: string
            pattern: '^[\w\W\s\S]*$'
            minLength: 1
            maxLength: 300
        - name: controlId
          in: query
          required: false
          description: ' The identifier for the specified control. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: ' The pagination token used to fetch the next set of results. '
          schema:
            type: string
            pattern: '^[A-Za-z0-9+\/=]*$'
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: ' Represents the maximum number of results per page, or per API request call. '
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /delegations:
    get:
      operationId: GetDelegations
      description: ' Returns a list of delegations from an audit owner to a delegate. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDelegationsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: ' The pagination token used to fetch the next set of results. '
          schema:
            type: string
            pattern: '^[A-Za-z0-9+\/=]*$'
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: ' Represents the maximum number of results per page, or per API request call. '
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}/evidence/{evidenceId}':
    get:
      operationId: GetEvidence
      description: ' Returns evidence from Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEvidenceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: ' The identifier for the specified control set. '
          schema:
            type: string
            pattern: '^[\w\W\s\S]*$'
            minLength: 1
            maxLength: 300
        - name: evidenceFolderId
          in: path
          required: true
          description: ' The identifier for the folder in which the evidence is stored. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: evidenceId
          in: path
          required: true
          description: ' The identifier for the evidence. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}/evidence':
    get:
      operationId: GetEvidenceByEvidenceFolder
      description: ' Returns all evidence from a specified evidence folder in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEvidenceByEvidenceFolderResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: ' The identifier for the control set. '
          schema:
            type: string
            pattern: '^[\w\W\s\S]*$'
            minLength: 1
            maxLength: 300
        - name: evidenceFolderId
          in: path
          required: true
          description: ' The unique identifier for the folder in which the evidence is stored. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: ' The pagination token used to fetch the next set of results. '
          schema:
            type: string
            pattern: '^[A-Za-z0-9+\/=]*$'
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: ' Represents the maximum number of results per page, or per API request call. '
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}':
    get:
      operationId: GetEvidenceFolder
      description: ' Returns an evidence folder from the specified assessment in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEvidenceFolderResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: ' The identifier for the specified control set. '
          schema:
            type: string
            pattern: '^[\w\W\s\S]*$'
            minLength: 1
            maxLength: 300
        - name: evidenceFolderId
          in: path
          required: true
          description: ' The identifier for the folder in which the evidence is stored. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/evidenceFolders':
    get:
      operationId: GetEvidenceFoldersByAssessment
      description: ' Returns the evidence folders from a specified assessment in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEvidenceFoldersByAssessmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: ' The pagination token used to fetch the next set of results. '
          schema:
            type: string
            pattern: '^[A-Za-z0-9+\/=]*$'
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: ' Represents the maximum number of results per page, or per API request call. '
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/evidenceFolders-by-assessment-control/{controlSetId}/{controlId}':
    get:
      operationId: GetEvidenceFoldersByAssessmentControl
      description: ' Returns a list of evidence folders associated with a specified control of an assessment in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEvidenceFoldersByAssessmentControlResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: ' The identifier for the specified control set. '
          schema:
            type: string
            pattern: '^[\w\W\s\S]*$'
            minLength: 1
            maxLength: 300
        - name: controlId
          in: path
          required: true
          description: ' The identifier for the specified control. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: ' The pagination token used to fetch the next set of results. '
          schema:
            type: string
            pattern: '^[A-Za-z0-9+\/=]*$'
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: ' Represents the maximum number of results per page, or per API request call. '
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /account/organizationAdminAccount:
    get:
      operationId: GetOrganizationAdminAccount
      description: ' Returns the name of the delegated Amazon Web Services administrator account for the organization. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrganizationAdminAccountResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /services:
    get:
      operationId: GetServicesInScope
      description: ' Returns a list of the in-scope Amazon Web Services services for the specified assessment. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServicesInScopeResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/settings/{attribute}':
    get:
      operationId: GetSettings
      description: ' Returns the settings for the specified account. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSettingsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: attribute
          in: path
          required: true
          description: ' The list of <code>SettingAttribute</code> enum values. '
          schema:
            type: string
            enum:
              - ALL
              - IS_AWS_ORG_ENABLED
              - SNS_TOPIC
              - DEFAULT_ASSESSMENT_REPORTS_DESTINATION
              - DEFAULT_PROCESS_OWNERS
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /assessmentFrameworks#frameworkType:
    get:
      operationId: ListAssessmentFrameworks
      description: ' Returns a list of the frameworks available in the Audit Manager framework library. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssessmentFrameworksResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: frameworkType
          in: query
          required: true
          description: ' The type of framework, such as standard or custom. '
          schema:
            type: string
            enum:
              - Standard
              - Custom
        - name: nextToken
          in: query
          required: false
          description: ' The pagination token used to fetch the next set of results. '
          schema:
            type: string
            pattern: '^[A-Za-z0-9+\/=]*$'
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: ' Represents the maximum number of results per page, or per API request call. '
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /assessmentReports:
    get:
      operationId: ListAssessmentReports
      description: ' Returns a list of assessment reports created in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssessmentReportsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: ' The pagination token used to fetch the next set of results. '
          schema:
            type: string
            pattern: '^[A-Za-z0-9+\/=]*$'
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: ' Represents the maximum number of results per page, or per API request call. '
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /controls#controlType:
    get:
      operationId: ListControls
      description: ' Returns a list of controls from Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListControlsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: controlType
          in: query
          required: true
          description: ' The type of control, such as standard or custom. '
          schema:
            type: string
            enum:
              - Standard
              - Custom
        - name: nextToken
          in: query
          required: false
          description: ' The pagination token used to fetch the next set of results. '
          schema:
            type: string
            pattern: '^[A-Za-z0-9+\/=]*$'
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: ' Represents the maximum number of results per page, or per API request call. '
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /dataSourceKeywords#source:
    get:
      operationId: ListKeywordsForDataSource
      description: ' Returns a list of keywords that pre-mapped to the specified control data source. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKeywordsForDataSourceResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: source
          in: query
          required: true
          description: ' The control mapping data source to which the keywords apply. '
          schema:
            type: string
            enum:
              - AWS_Cloudtrail
              - AWS_Config
              - AWS_Security_Hub
              - AWS_API_Call
              - MANUAL
        - name: nextToken
          in: query
          required: false
          description: ' The pagination token used to fetch the next set of results. '
          schema:
            type: string
            pattern: '^[A-Za-z0-9+\/=]*$'
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: ' Represents the maximum number of results per page, or per API request call. '
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /notifications:
    get:
      operationId: ListNotifications
      description: ' Returns a list of all Audit Manager notifications. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotificationsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: ' The pagination token used to fetch the next set of results. '
          schema:
            type: string
            pattern: '^[A-Za-z0-9+\/=]*$'
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: ' Represents the maximum number of results per page, or per API request call. '
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: ' Returns a list of tags for the specified resource in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: ' The Amazon Resource Name (ARN) of the specified resource. '
          schema:
            type: string
            pattern: '^arn:.*:auditmanager:.*'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: ' Tags the specified resource in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: ' The Amazon Resource Name (ARN) of the specified resource. '
          schema:
            type: string
            pattern: '^arn:.*:auditmanager:.*'
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: ' The tags to be associated with the resource. '
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  /account/registerAccount:
    post:
      operationId: RegisterAccount
      description: ' Enables Audit Manager for the specified account. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterAccountResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                kmsKey:
                  description: ' The KMS key details. '
                  type: string
                  pattern: '^arn:.*:kms:.*|DEFAULT'
                  minLength: 7
                  maxLength: 2048
                delegatedAdminAccount:
                  description: ' The delegated administrator account for Audit Manager. '
                  type: string
                  pattern: '^[0-9]{12}$'
                  minLength: 12
                  maxLength: 12
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /account/registerOrganizationAdminAccount:
    post:
      operationId: RegisterOrganizationAdminAccount
      description: ' Enables an account within the organization as the delegated administrator for Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterOrganizationAdminAccountResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - adminAccountId
              properties:
                adminAccountId:
                  description: ' The identifier for the specified delegated administrator account. '
                  type: string
                  pattern: '^[0-9]{12}$'
                  minLength: 12
                  maxLength: 12
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: ' Removes a tag from a resource in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: ' The Amazon Resource Name (ARN) of the specified resource. '
          schema:
            type: string
            pattern: '^arn:.*:auditmanager:.*'
            minLength: 20
            maxLength: 2048
        - name: tagKeys
          in: query
          required: true
          description: ' The name or key of the tag. '
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/controlSets/{controlSetId}/controls/{controlId}':
    put:
      operationId: UpdateAssessmentControl
      description: ' Updates a control within an assessment in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAssessmentControlResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: ' The identifier for the specified control set. '
          schema:
            type: string
            pattern: '^[\w\W\s\S]*$'
            minLength: 1
            maxLength: 300
        - name: controlId
          in: path
          required: true
          description: ' The identifier for the specified control. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                controlStatus:
                  description: ' The status of the specified control. '
                  type: string
                  enum:
                    - UNDER_REVIEW
                    - REVIEWED
                    - INACTIVE
                commentBody:
                  description: ' The comment body text for the specified control. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 500
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/controlSets/{controlSetId}/status':
    put:
      operationId: UpdateAssessmentControlSetStatus
      description: ' Updates the status of a control set in an Audit Manager assessment. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAssessmentControlSetStatusResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: ' The identifier for the specified control set. '
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
                - comment
              properties:
                status:
                  description: ' The status of the control set that is being updated. '
                  type: string
                  enum:
                    - ACTIVE
                    - UNDER_REVIEW
                    - REVIEWED
                comment:
                  description: ' The comment related to the status update. '
                  type: string
                  pattern: '^[\w\W\s\S]*$'
                  maxLength: 350
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/assessments/{assessmentId}/status':
    put:
      operationId: UpdateAssessmentStatus
      description: ' Updates the status of an assessment in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAssessmentStatusResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: ' The identifier for the specified assessment. '
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  description: ' The current status of the specified assessment. '
                  type: string
                  enum:
                    - ACTIVE
                    - INACTIVE
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /settings:
    put:
      operationId: UpdateSettings
      description: ' Updates Audit Manager settings for the current user account. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSettingsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                snsTopic:
                  description: ' The Amazon Simple Notification Service (Amazon SNS) topic to which Audit Manager sends notifications. '
                  type: string
                  pattern: '^arn:.*:sns:.*'
                  minLength: 20
                  maxLength: 2048
                defaultAssessmentReportsDestination:
                  description: ' The location in which Audit Manager saves assessment reports for the given assessment. '
                  type: object
                  properties:
                    destinationType:
                      $ref: '#/components/schemas/AssessmentReportDestinationType'
                      description: ' The destination type, such as Amazon S3. '
                    destination:
                      $ref: '#/components/schemas/S3Url'
                      description: ' The destination of the assessment report. '
                defaultProcessOwners:
                  description: ' A list of the default audit owners. '
                  type: array
                  items:
                    $ref: '#/components/schemas/Role'
                kmsKey:
                  description: ' The KMS key details. '
                  type: string
                  pattern: '^arn:.*:kms:.*|DEFAULT'
                  minLength: 7
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /assessmentReports/integrity:
    post:
      operationId: ValidateAssessmentReportIntegrity
      description: ' Validates the integrity of an assessment report in Audit Manager. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateAssessmentReportIntegrityResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - s3RelativePath
              properties:
                s3RelativePath:
                  description: ' The relative path of the specified Amazon S3 bucket in which the assessment report is stored. '
                  type: string
                  pattern: '^(S|s)3:\/\/[a-zA-Z0-9\-\.\(\)\''\*\_\!\/]+$'
                  minLength: 1
                  maxLength: 1024
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateAssessmentReportEvidenceFolderResponse:
      type: object
      properties: {}
    ValidationException: {}
    AccessDeniedException: {}
    InternalServerException: {}
    ResourceNotFoundException: {}
    BatchAssociateAssessmentReportEvidenceResponse:
      type: object
      properties:
        evidenceIds:
          $ref: '#/components/schemas/EvidenceIds'
          description: ' The identifier for the evidence. '
        errors:
          $ref: '#/components/schemas/AssessmentReportEvidenceErrors'
          description: ' A list of errors returned by the <code>BatchAssociateAssessmentReportEvidence</code> API. '
    UUID:
      type: string
      pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
      minLength: 36
      maxLength: 36
    BatchCreateDelegationByAssessmentResponse:
      type: object
      properties:
        delegations:
          $ref: '#/components/schemas/Delegations'
          description: ' The delegations associated with the assessment. '
        errors:
          $ref: '#/components/schemas/BatchCreateDelegationByAssessmentErrors'
          description: ' A list of errors returned by the <code>BatchCreateDelegationByAssessment</code> API. '
    CreateDelegationRequest:
      type: object
      properties:
        comment:
          $ref: '#/components/schemas/DelegationComment'
          description: ' A comment related to the delegation request. '
        controlSetId:
          $ref: '#/components/schemas/ControlSetId'
          description: ' The unique identifier for the control set. '
        roleArn:
          $ref: '#/components/schemas/IamArn'
          description: ' The Amazon Resource Name (ARN) of the IAM role. '
        roleType:
          $ref: '#/components/schemas/RoleType'
          description: '<p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>'
      description: ' A collection of attributes used to create a delegation for an assessment in Audit Manager. '
    BatchDeleteDelegationByAssessmentResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/BatchDeleteDelegationByAssessmentErrors'
          description: ' A list of errors returned by the <code>BatchDeleteDelegationByAssessment</code> API. '
    BatchDisassociateAssessmentReportEvidenceResponse:
      type: object
      properties:
        evidenceIds:
          $ref: '#/components/schemas/EvidenceIds'
          description: ' The identifier for the evidence. '
        errors:
          $ref: '#/components/schemas/AssessmentReportEvidenceErrors'
          description: ' A list of errors returned by the <code>BatchDisassociateAssessmentReportEvidence</code> API. '
    BatchImportEvidenceToAssessmentControlResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/BatchImportEvidenceToAssessmentControlErrors'
          description: ' A list of errors returned by the <code>BatchImportEvidenceToAssessmentControl</code> API. '
    ManualEvidence:
      type: object
      properties:
        s3ResourcePath:
          $ref: '#/components/schemas/S3Url'
          description: ' The Amazon S3 URL that points to a manual evidence object. '
      description: ' Evidence that is uploaded to Audit Manager manually. '
    CreateAssessmentResponse:
      type: object
      properties:
        assessment:
          $ref: '#/components/schemas/Assessment'
    AssessmentReportDestinationType:
      type: string
      enum:
        - S3
    S3Url:
      type: string
      pattern: '^(S|s)3:\/\/[a-zA-Z0-9\-\.\(\)\''\*\_\!\/]+$'
      minLength: 1
      maxLength: 1024
    AWSAccounts:
      type: array
      items:
        $ref: '#/components/schemas/AWSAccount'
    AWSServices:
      type: array
      items:
        $ref: '#/components/schemas/AWSService'
    Role:
      type: object
      properties:
        roleType:
          $ref: '#/components/schemas/RoleType'
          description: '<p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>'
        roleArn:
          $ref: '#/components/schemas/IamArn'
          description: ' The Amazon Resource Name (ARN) of the IAM role. '
      description: ' The wrapper that contains the Audit Manager role information of the current user, such as the role type and IAM Amazon Resource Name (ARN). '
    TagValue:
      type: string
      pattern: '.{0,255}'
      minLength: 0
      maxLength: 256
    CreateAssessmentFrameworkResponse:
      type: object
      properties:
        framework:
          $ref: '#/components/schemas/Framework'
          description: ' The name of the new framework returned by the <code>CreateAssessmentFramework</code> API. '
    CreateAssessmentFrameworkControlSet:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/ControlSetName'
          description: ' The name of the specified control set. '
        controls:
          $ref: '#/components/schemas/CreateAssessmentFrameworkControls'
          description: ' The list of controls within the control set. This does not contain the control set ID. '
      description: ' A <code>controlSet</code> entity that represents a collection of controls in Audit Manager. This does not contain the control set ID. '
    CreateAssessmentReportResponse:
      type: object
      properties:
        assessmentReport:
          $ref: '#/components/schemas/AssessmentReport'
          description: ' The new assessment report returned by the <code>CreateAssessmentReport</code> API. '
    CreateControlResponse:
      type: object
      properties:
        control:
          $ref: '#/components/schemas/Control'
          description: ' The new control returned by the <code>CreateControl</code> API. '
    CreateControlMappingSource:
      type: object
      properties:
        sourceName:
          $ref: '#/components/schemas/SourceName'
          description: ' The name of the control mapping data source. '
        sourceDescription:
          $ref: '#/components/schemas/SourceDescription'
          description: ' The description of the data source that determines from where Audit Manager collects evidence for the control. '
        sourceSetUpOption:
          $ref: '#/components/schemas/SourceSetUpOption'
          description: ' The setup option for the data source, which reflects if the evidence collection is automated or manual. '
        sourceType:
          $ref: '#/components/schemas/SourceType'
          description: ' Specifies one of the five types of data sources for evidence collection. '
        sourceKeyword:
          $ref: '#/components/schemas/SourceKeyword'
        sourceFrequency:
          $ref: '#/components/schemas/SourceFrequency'
          description: ' The frequency of evidence collection for the specified control mapping source. '
        troubleshootingText:
          $ref: '#/components/schemas/TroubleshootingText'
          description: ' The instructions for troubleshooting the specified control. '
      description: ' Control mapping fields that represent the source for evidence collection, along with related parameters and metadata. This does not contain <code>mappingID</code>. '
    DeleteAssessmentResponse:
      type: object
      properties: {}
    DeleteAssessmentFrameworkResponse:
      type: object
      properties: {}
    DeleteAssessmentReportResponse:
      type: object
      properties: {}
    DeleteControlResponse:
      type: object
      properties: {}
    DeregisterAccountResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/AccountStatus'
          description: ' The registration status of the account. '
    DeregisterOrganizationAdminAccountResponse:
      type: object
      properties: {}
    DisassociateAssessmentReportEvidenceFolderResponse:
      type: object
      properties: {}
    GetAccountStatusResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/AccountStatus'
          description: ' The status of the specified account. '
    GetAssessmentResponse:
      type: object
      properties:
        assessment:
          $ref: '#/components/schemas/Assessment'
        userRole:
          $ref: '#/components/schemas/Role'
    GetAssessmentFrameworkResponse:
      type: object
      properties:
        framework:
          $ref: '#/components/schemas/Framework'
          description: ' The framework returned by the <code>GetAssessmentFramework</code> API. '
    GetAssessmentReportUrlResponse:
      type: object
      properties:
        preSignedUrl:
          $ref: '#/components/schemas/URL'
    GetChangeLogsResponse:
      type: object
      properties:
        changeLogs:
          $ref: '#/components/schemas/ChangeLogs'
          description: ' The list of user activity for the control. '
        nextToken:
          $ref: '#/components/schemas/Token'
          description: ' The pagination token used to fetch the next set of results. '
    GetControlResponse:
      type: object
      properties:
        control:
          $ref: '#/components/schemas/Control'
          description: ' The name of the control returned by the <code>GetControl</code> API. '
    GetDelegationsResponse:
      type: object
      properties:
        delegations:
          $ref: '#/components/schemas/DelegationMetadataList'
          description: ' The list of delegations returned by the <code>GetDelegations</code> API. '
        nextToken:
          $ref: '#/components/schemas/Token'
          description: ' The pagination token used to fetch the next set of results. '
    GetEvidenceResponse:
      type: object
      properties:
        evidence:
          $ref: '#/components/schemas/Evidence'
          description: ' The evidence returned by the <code>GetEvidenceResponse</code> API. '
    GetEvidenceByEvidenceFolderResponse:
      type: object
      properties:
        evidence:
          $ref: '#/components/schemas/EvidenceList'
          description: ' The list of evidence returned by the <code>GetEvidenceByEvidenceFolder</code> API. '
        nextToken:
          $ref: '#/components/schemas/Token'
          description: ' The pagination token used to fetch the next set of results. '
    GetEvidenceFolderResponse:
      type: object
      properties:
        evidenceFolder:
          $ref: '#/components/schemas/AssessmentEvidenceFolder'
          description: ' The folder in which evidence is stored. '
    GetEvidenceFoldersByAssessmentResponse:
      type: object
      properties:
        evidenceFolders:
          $ref: '#/components/schemas/AssessmentEvidenceFolders'
          description: ' The list of evidence folders returned by the <code>GetEvidenceFoldersByAssessment</code> API. '
        nextToken:
          $ref: '#/components/schemas/Token'
          description: ' The pagination token used to fetch the next set of results. '
    GetEvidenceFoldersByAssessmentControlResponse:
      type: object
      properties:
        evidenceFolders:
          $ref: '#/components/schemas/AssessmentEvidenceFolders'
          description: ' The list of evidence folders returned by the <code>GetEvidenceFoldersByAssessmentControl</code> API. '
        nextToken:
          $ref: '#/components/schemas/Token'
          description: ' The pagination token used to fetch the next set of results. '
    GetOrganizationAdminAccountResponse:
      type: object
      properties:
        adminAccountId:
          $ref: '#/components/schemas/AccountId'
          description: ' The identifier for the specified administrator account. '
        organizationId:
          $ref: '#/components/schemas/organizationId'
          description: ' The identifier for the specified organization. '
    GetServicesInScopeResponse:
      type: object
      properties:
        serviceMetadata:
          $ref: '#/components/schemas/ServiceMetadataList'
          description: ' The metadata associated with the Amazon Web Service. '
    GetSettingsResponse:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/Settings'
          description: ' The settings object that holds all supported Audit Manager settings. '
    ListAssessmentFrameworksResponse:
      type: object
      properties:
        frameworkMetadataList:
          $ref: '#/components/schemas/FrameworkMetadataList'
          description: ' The list of metadata objects for the specified framework. '
        nextToken:
          $ref: '#/components/schemas/Token'
          description: ' The pagination token used to fetch the next set of results. '
    ListAssessmentReportsResponse:
      type: object
      properties:
        assessmentReports:
          $ref: '#/components/schemas/AssessmentReportsMetadata'
          description: ' The list of assessment reports returned by the <code>ListAssessmentReports</code> API. '
        nextToken:
          $ref: '#/components/schemas/Token'
          description: ' The pagination token used to fetch the next set of results. '
    ListAssessmentsResponse:
      type: object
      properties:
        assessmentMetadata:
          $ref: '#/components/schemas/ListAssessmentMetadata'
          description: ' The metadata associated with the assessment. '
        nextToken:
          $ref: '#/components/schemas/Token'
          description: ' The pagination token used to fetch the next set of results. '
    ListControlsResponse:
      type: object
      properties:
        controlMetadataList:
          $ref: '#/components/schemas/ControlMetadataList'
          description: ' The list of control metadata objects returned by the <code>ListControls</code> API. '
        nextToken:
          $ref: '#/components/schemas/Token'
          description: ' The pagination token used to fetch the next set of results. '
    ListKeywordsForDataSourceResponse:
      type: object
      properties:
        keywords:
          $ref: '#/components/schemas/Keywords'
          description: ' The list of keywords for the specified event mapping source. '
        nextToken:
          $ref: '#/components/schemas/Token'
          description: ' The pagination token used to fetch the next set of results. '
    ListNotificationsResponse:
      type: object
      properties:
        notifications:
          $ref: '#/components/schemas/Notifications'
          description: ' The returned list of notifications. '
        nextToken:
          $ref: '#/components/schemas/Token'
          description: ' The pagination token used to fetch the next set of results. '
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/TagMap'
          description: ' The list of tags returned by the <code>ListTagsForResource</code> API. '
    RegisterAccountResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/AccountStatus'
          description: ' The status of the account registration request. '
    RegisterOrganizationAdminAccountResponse:
      type: object
      properties:
        adminAccountId:
          $ref: '#/components/schemas/AccountId'
          description: ' The identifier for the specified delegated administrator account. '
        organizationId:
          $ref: '#/components/schemas/organizationId'
          description: ' The identifier for the specified organization. '
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
      minLength: 1
      maxLength: 128
    UpdateAssessmentResponse:
      type: object
      properties:
        assessment:
          $ref: '#/components/schemas/Assessment'
          description: ' The response object (name of the updated assessment) for the <code>UpdateAssessmentRequest</code> API. '
    UpdateAssessmentControlResponse:
      type: object
      properties:
        control:
          $ref: '#/components/schemas/AssessmentControl'
          description: ' The name of the updated control set returned by the <code>UpdateAssessmentControl</code> API. '
    UpdateAssessmentControlSetStatusResponse:
      type: object
      properties:
        controlSet:
          $ref: '#/components/schemas/AssessmentControlSet'
          description: ' The name of the updated control set returned by the <code>UpdateAssessmentControlSetStatus</code> API. '
    UpdateAssessmentFrameworkResponse:
      type: object
      properties:
        framework:
          $ref: '#/components/schemas/Framework'
          description: ' The name of the specified framework. '
    UpdateAssessmentFrameworkControlSet:
      type: object
      required:
        - name
      properties:
        id:
          $ref: '#/components/schemas/ControlSetName'
          description: ' The unique identifier for the control set. '
        name:
          $ref: '#/components/schemas/ControlSetName'
          description: ' The name of the control set. '
        controls:
          $ref: '#/components/schemas/CreateAssessmentFrameworkControls'
          description: ' The list of controls contained within the control set. '
      description: ' A <code>controlSet</code> entity that represents a collection of controls in Audit Manager. This does not contain the control set ID. '
    UpdateAssessmentStatusResponse:
      type: object
      properties:
        assessment:
          $ref: '#/components/schemas/Assessment'
          description: ' The name of the updated assessment returned by the <code>UpdateAssessmentStatus</code> API. '
    UpdateControlResponse:
      type: object
      properties:
        control:
          $ref: '#/components/schemas/Control'
          description: ' The name of the updated control set returned by the <code>UpdateControl</code> API. '
    ControlMappingSource:
      type: object
      properties:
        sourceId:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the specified source. '
        sourceName:
          $ref: '#/components/schemas/SourceName'
          description: ' The name of the specified source. '
        sourceDescription:
          $ref: '#/components/schemas/SourceDescription'
          description: ' The description of the specified source. '
        sourceSetUpOption:
          $ref: '#/components/schemas/SourceSetUpOption'
          description: ' The setup option for the data source, which reflects if the evidence collection is automated or manual. '
        sourceType:
          $ref: '#/components/schemas/SourceType'
          description: ' Specifies one of the five types of data sources for evidence collection. '
        sourceKeyword:
          $ref: '#/components/schemas/SourceKeyword'
        sourceFrequency:
          $ref: '#/components/schemas/SourceFrequency'
          description: ' The frequency of evidence collection for the specified control mapping source. '
        troubleshootingText:
          $ref: '#/components/schemas/TroubleshootingText'
          description: ' The instructions for troubleshooting the specified control. '
      description: ' The data source that determines from where Audit Manager collects evidence for the control. '
    UpdateSettingsResponse:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/Settings'
          description: ' The current list of settings. '
    ValidateAssessmentReportIntegrityResponse:
      type: object
      properties:
        signatureValid:
          $ref: '#/components/schemas/Boolean'
          description: ' Specifies whether the signature key is valid. '
        signatureAlgorithm:
          $ref: '#/components/schemas/String'
          description: ' The signature algorithm used to code sign the assessment report file. '
        signatureDateTime:
          $ref: '#/components/schemas/String'
          description: ' The date and time signature that specifies when the assessment report was created. '
        signatureKeyId:
          $ref: '#/components/schemas/String'
          description: ' The unique identifier for the validation signature key. '
        validationErrors:
          $ref: '#/components/schemas/ValidationErrors'
          description: ' Represents any errors that occurred when validating the assessment report. '
    AccountId:
      type: string
      pattern: '^[0-9]{12}$'
      minLength: 12
      maxLength: 12
    EmailAddress:
      type: string
      pattern: ^.*@.*$
      minLength: 1
      maxLength: 320
    AccountName:
      type: string
      pattern: '^[\u0020-\u007E]+$'
      minLength: 1
      maxLength: 50
    AWSAccount:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AccountId'
          description: ' The identifier for the specified account. '
        emailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: ' The email address associated with the specified account. '
        name:
          $ref: '#/components/schemas/AccountName'
          description: ' The name of the specified account. '
      description: ' The wrapper of account details, such as account ID, email address, and so on. '
    AWSServiceName:
      type: string
      pattern: '^[a-zA-Z0-9-\s().]+$'
      minLength: 1
      maxLength: 40
    AWSService:
      type: object
      properties:
        serviceName:
          $ref: '#/components/schemas/AWSServiceName'
          description: ' The name of the Amazon Web Service. '
      description: ' An Amazon Web Service such as Amazon S3, CloudTrail, and so on. '
    AccountStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - PENDING_ACTIVATION
    ActionEnum:
      type: string
      enum:
        - CREATE
        - UPDATE_METADATA
        - ACTIVE
        - INACTIVE
        - DELETE
        - UNDER_REVIEW
        - REVIEWED
        - IMPORT_EVIDENCE
    ActionPlanInstructions:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 1000
    ActionPlanTitle:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 300
    AuditManagerArn:
      type: string
      pattern: '^arn:.*:auditmanager:.*'
      minLength: 20
      maxLength: 2048
    AssessmentMetadata:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/AssessmentName'
          description: ' The name of the assessment. '
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the assessment. '
        description:
          $ref: '#/components/schemas/AssessmentDescription'
          description: ' The description of the assessment. '
        complianceType:
          $ref: '#/components/schemas/ComplianceType'
          description: ' The name of a compliance standard related to the assessment, such as PCI-DSS. '
        status:
          $ref: '#/components/schemas/AssessmentStatus'
          description: ' The overall status of the assessment. '
        assessmentReportsDestination:
          $ref: '#/components/schemas/AssessmentReportsDestination'
          description: ' The destination in which evidence reports are stored for the specified assessment. '
        scope:
          $ref: '#/components/schemas/Scope'
          description: ' The wrapper of accounts and services in scope for the assessment. '
        roles:
          $ref: '#/components/schemas/Roles'
          description: ' The roles associated with the assessment. '
        delegations:
          $ref: '#/components/schemas/Delegations'
          description: ' The delegations associated with the assessment. '
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the assessment was created. '
        lastUpdated:
          $ref: '#/components/schemas/Timestamp'
          description: ' The time of the most recent update. '
      description: ' The metadata associated with the specified assessment. '
    AssessmentFramework:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the framework. '
        arn:
          $ref: '#/components/schemas/AuditManagerArn'
          description: ' The Amazon Resource Name (ARN) of the specified framework. '
        metadata:
          $ref: '#/components/schemas/FrameworkMetadata'
        controlSets:
          $ref: '#/components/schemas/AssessmentControlSets'
          description: ' The control sets associated with the framework. '
      description: ' The file used to structure and automate Audit Manager assessments for a given compliance standard. '
    TagMap:
      type: object
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    Assessment:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AuditManagerArn'
          description: ' The Amazon Resource Name (ARN) of the assessment. '
        awsAccount:
          $ref: '#/components/schemas/AWSAccount'
          description: ' The account associated with the assessment. '
        metadata:
          $ref: '#/components/schemas/AssessmentMetadata'
          description: ' The metadata for the specified assessment. '
        framework:
          $ref: '#/components/schemas/AssessmentFramework'
          description: ' The framework from which the assessment was created. '
        tags:
          $ref: '#/components/schemas/TagMap'
          description: ' The tags associated with the assessment. '
      description: ' An entity that defines the scope of audit evidence collected by Audit Manager. An Audit Manager assessment is an implementation of an Audit Manager framework. '
    ControlName:
      type: string
      pattern: '^[^\\]*$'
      minLength: 1
      maxLength: 300
    ControlDescription:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 1000
    ControlStatus:
      type: string
      enum:
        - UNDER_REVIEW
        - REVIEWED
        - INACTIVE
    ControlResponse:
      type: string
      enum:
        - MANUAL
        - AUTOMATE
        - DEFER
        - IGNORE
    ControlComments:
      type: array
      items:
        $ref: '#/components/schemas/ControlComment'
    EvidenceSources:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    Integer:
      type: integer
    AssessmentControl:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the specified control. '
        name:
          $ref: '#/components/schemas/ControlName'
          description: ' The name of the specified control. '
        description:
          $ref: '#/components/schemas/ControlDescription'
          description: ' The description of the specified control. '
        status:
          $ref: '#/components/schemas/ControlStatus'
          description: ' The status of the specified control. '
        response:
          $ref: '#/components/schemas/ControlResponse'
          description: ' The response of the specified control. '
        comments:
          $ref: '#/components/schemas/ControlComments'
          description: ' The list of comments attached to the specified control. '
        evidenceSources:
          $ref: '#/components/schemas/EvidenceSources'
          description: ' The list of data sources for the specified evidence. '
        evidenceCount:
          $ref: '#/components/schemas/Integer'
          description: ' The amount of evidence generated for the control. '
        assessmentReportEvidenceCount:
          $ref: '#/components/schemas/Integer'
          description: ' The amount of evidence in the assessment report. '
      description: ' The control entity that represents a standard or custom control used in an Audit Manager assessment. '
    ControlSetId:
      type: string
      pattern: '^[\w\W\s\S]*$'
      minLength: 1
      maxLength: 300
    NonEmptyString:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 2048
    ControlSetStatus:
      type: string
      enum:
        - ACTIVE
        - UNDER_REVIEW
        - REVIEWED
    Roles:
      type: array
      items:
        $ref: '#/components/schemas/Role'
    AssessmentControls:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentControl'
    Delegations:
      type: array
      items:
        $ref: '#/components/schemas/Delegation'
    AssessmentControlSet:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ControlSetId'
          description: ' The identifier of the control set in the assessment. This is the control set name in a plain string format. '
        description:
          $ref: '#/components/schemas/NonEmptyString'
          description: ' The description for the control set. '
        status:
          $ref: '#/components/schemas/ControlSetStatus'
          description: ' Specifies the current status of the control set. '
        roles:
          $ref: '#/components/schemas/Roles'
          description: ' The roles associated with the control set. '
        controls:
          $ref: '#/components/schemas/AssessmentControls'
          description: ' The list of controls contained with the control set. '
        delegations:
          $ref: '#/components/schemas/Delegations'
          description: ' The delegations associated with the control set. '
        systemEvidenceCount:
          $ref: '#/components/schemas/Integer'
          description: ' The total number of evidence objects retrieved automatically for the control set. '
        manualEvidenceCount:
          $ref: '#/components/schemas/Integer'
          description: ' The total number of evidence objects uploaded manually to the control set. '
      description: ' Represents a set of controls in an Audit Manager assessment. '
    AssessmentControlSets:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentControlSet'
    AssessmentDescription:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 1000
    AssessmentEvidenceFolderName:
      type: string
      pattern: '^[\w\W\s\S]*$'
      minLength: 1
      maxLength: 300
    Timestamp:
      type: string
      format: date-time
    String:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 2048
    AssessmentEvidenceFolder:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/AssessmentEvidenceFolderName'
          description: ' The name of the specified evidence folder. '
        date:
          $ref: '#/components/schemas/Timestamp'
          description: ' The date when the first evidence was added to the evidence folder. '
        assessmentId:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the specified assessment. '
        controlSetId:
          $ref: '#/components/schemas/ControlSetId'
          description: ' The identifier for the control set. '
        controlId:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the specified control. '
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the folder in which evidence is stored. '
        dataSource:
          $ref: '#/components/schemas/String'
          description: ' The Amazon Web Service from which the evidence was collected. '
        author:
          $ref: '#/components/schemas/String'
          description: ' The name of the user who created the evidence folder. '
        totalEvidence:
          $ref: '#/components/schemas/Integer'
          description: ' The total amount of evidence in the evidence folder. '
        assessmentReportSelectionCount:
          $ref: '#/components/schemas/Integer'
          description: ' The total count of evidence included in the assessment report. '
        controlName:
          $ref: '#/components/schemas/ControlName'
          description: ' The name of the control. '
        evidenceResourcesIncludedCount:
          $ref: '#/components/schemas/Integer'
          description: ' The amount of evidence included in the evidence folder. '
        evidenceByTypeConfigurationDataCount:
          $ref: '#/components/schemas/Integer'
          description: ' The number of evidence that falls under the configuration data category. This evidence is collected from configuration snapshots of other Amazon Web Services services such as Amazon EC2, Amazon S3, or IAM. '
        evidenceByTypeManualCount:
          $ref: '#/components/schemas/Integer'
          description: ' The number of evidence that falls under the manual category. This evidence is imported manually. '
        evidenceByTypeComplianceCheckCount:
          $ref: '#/components/schemas/Integer'
          description: ' The number of evidence that falls under the compliance check category. This evidence is collected from Config or Security Hub. '
        evidenceByTypeComplianceCheckIssuesCount:
          $ref: '#/components/schemas/Integer'
          description: ' The total number of issues that were reported directly from Security Hub, Config, or both. '
        evidenceByTypeUserActivityCount:
          $ref: '#/components/schemas/Integer'
          description: ' The number of evidence that falls under the user activity category. This evidence is collected from CloudTrail logs. '
        evidenceAwsServiceSourceCount:
          $ref: '#/components/schemas/Integer'
          description: ' The total number of Amazon Web Services resources assessed to generate the evidence. '
      description: ' The folder in which Audit Manager stores evidence for an assessment. '
    AssessmentEvidenceFolders:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentEvidenceFolder'
    FrameworkMetadata:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/AssessmentName'
          description: ' The name of the framework. '
        description:
          $ref: '#/components/schemas/AssessmentFrameworkDescription'
          description: ' The description of the framework. '
        logo:
          $ref: '#/components/schemas/Filename'
          description: ' The logo associated with the framework. '
        complianceType:
          $ref: '#/components/schemas/ComplianceType'
          description: ' The compliance standard associated with the framework, such as PCI-DSS or HIPAA. '
      description: ' The metadata of a framework, such as the name, ID, description, and so on. '
    AssessmentFrameworkDescription:
      type: string
      pattern: '^[\w\W\s\S]*$'
      minLength: 1
      maxLength: 200
    FrameworkType:
      type: string
      enum:
        - Standard
        - Custom
    FrameworkName:
      type: string
      pattern: '^[^\\]*$'
      minLength: 1
      maxLength: 300
    FrameworkDescription:
      type: string
      pattern: '^[\w\W\s\S]*$'
      minLength: 1
      maxLength: 1000
    Filename:
      type: string
      pattern: '^[\w,\s-]+\.[A-Za-z]+$'
      minLength: 1
      maxLength: 255
    ComplianceType:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 100
    ControlsCount:
      type: integer
    ControlSetsCount:
      type: integer
    AssessmentFrameworkMetadata:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AuditManagerArn'
          description: ' The Amazon Resource Name (ARN) of the framework. '
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identified for the specified framework. '
        type:
          $ref: '#/components/schemas/FrameworkType'
          description: ' The framework type, such as standard or custom. '
        name:
          $ref: '#/components/schemas/FrameworkName'
          description: ' The name of the specified framework. '
        description:
          $ref: '#/components/schemas/FrameworkDescription'
          description: ' The description of the specified framework. '
        logo:
          $ref: '#/components/schemas/Filename'
          description: ' The logo associated with the framework. '
        complianceType:
          $ref: '#/components/schemas/ComplianceType'
          description: ' The compliance type that the new custom framework supports, such as CIS or HIPAA. '
        controlsCount:
          $ref: '#/components/schemas/ControlsCount'
          description: ' The number of controls associated with the specified framework. '
        controlSetsCount:
          $ref: '#/components/schemas/ControlSetsCount'
          description: ' The number of control sets associated with the specified framework. '
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the framework was created. '
        lastUpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the framework was most recently updated. '
      description: ' The metadata associated with a standard or custom framework. '
    AssessmentName:
      type: string
      pattern: '^[^\\]*$'
      minLength: 1
      maxLength: 300
    AssessmentStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    AssessmentReportsDestination:
      type: object
      properties:
        destinationType:
          $ref: '#/components/schemas/AssessmentReportDestinationType'
          description: ' The destination type, such as Amazon S3. '
        destination:
          $ref: '#/components/schemas/S3Url'
          description: ' The destination of the assessment report. '
      description: ' The location in which Audit Manager saves assessment reports for the given assessment. '
    Scope:
      type: object
      properties:
        awsAccounts:
          $ref: '#/components/schemas/AWSAccounts'
          description: ' The accounts included in the scope of the assessment. '
        awsServices:
          $ref: '#/components/schemas/AWSServices'
          description: ' The Amazon Web Services services included in the scope of the assessment. '
      description: ' The wrapper that contains the accounts and services in scope for the assessment. '
    AssessmentMetadataItem:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/AssessmentName'
          description: ' The name of the assessment. '
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the assessment. '
        complianceType:
          $ref: '#/components/schemas/ComplianceType'
          description: ' The name of the compliance standard related to the assessment, such as PCI-DSS. '
        status:
          $ref: '#/components/schemas/AssessmentStatus'
          description: ' The current status of the assessment. '
        roles:
          $ref: '#/components/schemas/Roles'
          description: ' The roles associated with the assessment. '
        delegations:
          $ref: '#/components/schemas/Delegations'
          description: ' The delegations associated with the assessment. '
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the assessment was created. '
        lastUpdated:
          $ref: '#/components/schemas/Timestamp'
          description: ' The time of the most recent update. '
      description: ' A metadata object associated with an assessment in Audit Manager. '
    AssessmentReportName:
      type: string
      pattern: '^[a-zA-Z0-9-_\.]+$'
      minLength: 1
      maxLength: 300
    AssessmentReportDescription:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 1000
    Username:
      type: string
      pattern: '^[a-zA-Z0-9-_()\s\+=,.@]+$'
      minLength: 1
      maxLength: 128
    AssessmentReportStatus:
      type: string
      enum:
        - COMPLETE
        - IN_PROGRESS
        - FAILED
    AssessmentReport:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the specified assessment report. '
        name:
          $ref: '#/components/schemas/AssessmentReportName'
          description: ' The name given to the assessment report. '
        description:
          $ref: '#/components/schemas/AssessmentReportDescription'
          description: ' The description of the specified assessment report. '
        awsAccountId:
          $ref: '#/components/schemas/AccountId'
          description: ' The identifier for the specified account. '
        assessmentId:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the specified assessment. '
        assessmentName:
          $ref: '#/components/schemas/AssessmentName'
          description: ' The name of the associated assessment. '
        author:
          $ref: '#/components/schemas/Username'
          description: ' The name of the user who created the assessment report. '
        status:
          $ref: '#/components/schemas/AssessmentReportStatus'
          description: ' The current status of the specified assessment report. '
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the assessment report was created. '
      description: ' A finalized document generated from an Audit Manager assessment. These reports summarize the relevant evidence collected for your audit, and link to the relevant evidence folders which are named and organized according to the controls specified in your assessment. '
    ErrorCode:
      type: string
      pattern: '[0-9]{3}'
      minLength: 3
      maxLength: 3
    ErrorMessage:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 300
    AssessmentReportEvidenceError:
      type: object
      properties:
        evidenceId:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the evidence. '
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: ' The error code returned by the <code>AssessmentReportEvidence</code> API. '
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: ' The error message returned by the <code>AssessmentReportEvidence</code> API. '
      description: ' An error entity for the <code>AssessmentReportEvidence</code> API. This is used to provide more meaningful errors than a simple string message. '
    AssessmentReportEvidenceErrors:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentReportEvidenceError'
    AssessmentReportMetadata:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the assessment report. '
        name:
          $ref: '#/components/schemas/AssessmentReportName'
          description: ' The name of the assessment report. '
        description:
          $ref: '#/components/schemas/AssessmentReportDescription'
          description: ' The description of the specified assessment report. '
        assessmentId:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the associated assessment. '
        assessmentName:
          $ref: '#/components/schemas/AssessmentName'
          description: 'The name of the associated assessment. '
        author:
          $ref: '#/components/schemas/Username'
          description: ' The name of the user who created the assessment report. '
        status:
          $ref: '#/components/schemas/AssessmentReportStatus'
          description: ' The current status of the assessment report. '
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the assessment report was created. '
      description: ' The metadata objects associated with the specified assessment report. '
    AssessmentReportsMetadata:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentReportMetadata'
    AssociateAssessmentReportEvidenceFolderRequest:
      type: object
      required:
        - evidenceFolderId
      title: AssociateAssessmentReportEvidenceFolderRequest
      properties:
        evidenceFolderId:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the folder in which evidence is stored. '
    EvidenceIds:
      type: array
      items:
        $ref: '#/components/schemas/UUID'
      minItems: 0
      maxItems: 50
    BatchAssociateAssessmentReportEvidenceRequest:
      type: object
      required:
        - evidenceFolderId
        - evidenceIds
      title: BatchAssociateAssessmentReportEvidenceRequest
      properties:
        evidenceFolderId:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the folder in which the evidence is stored. '
        evidenceIds:
          $ref: '#/components/schemas/EvidenceIds'
          description: ' The list of evidence identifiers. '
    BatchCreateDelegationByAssessmentError:
      type: object
      properties:
        createDelegationRequest:
          $ref: '#/components/schemas/CreateDelegationRequest'
          description: ' The API request to batch create delegations in Audit Manager. '
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: ' The error code returned by the <code>BatchCreateDelegationByAssessment</code> API. '
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: ' The error message returned by the <code>BatchCreateDelegationByAssessment</code> API. '
      description: ' An error entity for the <code>BatchCreateDelegationByAssessment</code> API. This is used to provide more meaningful errors than a simple string message. '
    BatchCreateDelegationByAssessmentErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchCreateDelegationByAssessmentError'
    CreateDelegationRequests:
      type: array
      items:
        $ref: '#/components/schemas/CreateDelegationRequest'
      minItems: 1
      maxItems: 50
    BatchCreateDelegationByAssessmentRequest:
      type: object
      required:
        - createDelegationRequests
      title: BatchCreateDelegationByAssessmentRequest
      properties:
        createDelegationRequests:
          $ref: '#/components/schemas/CreateDelegationRequests'
          description: ' The API request to batch create delegations in Audit Manager. '
    BatchDeleteDelegationByAssessmentError:
      type: object
      properties:
        delegationId:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the specified delegation. '
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: ' The error code returned by the <code>BatchDeleteDelegationByAssessment</code> API. '
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: ' The error message returned by the <code>BatchDeleteDelegationByAssessment</code> API. '
      description: ' An error entity for the <code>BatchDeleteDelegationByAssessment</code> API. This is used to provide more meaningful errors than a simple string message. '
    BatchDeleteDelegationByAssessmentErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchDeleteDelegationByAssessmentError'
    DelegationIds:
      type: array
      items:
        $ref: '#/components/schemas/UUID'
      minItems: 1
      maxItems: 50
    BatchDeleteDelegationByAssessmentRequest:
      type: object
      required:
        - delegationIds
      title: BatchDeleteDelegationByAssessmentRequest
      properties:
        delegationIds:
          $ref: '#/components/schemas/DelegationIds'
          description: ' The identifiers for the specified delegations. '
    BatchDisassociateAssessmentReportEvidenceRequest:
      type: object
      required:
        - evidenceFolderId
        - evidenceIds
      title: BatchDisassociateAssessmentReportEvidenceRequest
      properties:
        evidenceFolderId:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the folder in which evidence is stored. '
        evidenceIds:
          $ref: '#/components/schemas/EvidenceIds'
          description: ' The list of evidence identifiers. '
    BatchImportEvidenceToAssessmentControlError:
      type: object
      properties:
        manualEvidence:
          $ref: '#/components/schemas/ManualEvidence'
          description: ' Manual evidence that cannot be collected automatically by Audit Manager. '
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: ' The error code returned by the <code>BatchImportEvidenceToAssessmentControl</code> API. '
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: ' The error message returned by the <code>BatchImportEvidenceToAssessmentControl</code> API. '
      description: ' An error entity for the <code>BatchImportEvidenceToAssessmentControl</code> API. This is used to provide more meaningful errors than a simple string message. '
    BatchImportEvidenceToAssessmentControlErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchImportEvidenceToAssessmentControlError'
    ManualEvidenceList:
      type: array
      items:
        $ref: '#/components/schemas/ManualEvidence'
      minItems: 1
      maxItems: 50
    BatchImportEvidenceToAssessmentControlRequest:
      type: object
      required:
        - manualEvidence
      title: BatchImportEvidenceToAssessmentControlRequest
      properties:
        manualEvidence:
          $ref: '#/components/schemas/ManualEvidenceList'
          description: ' The list of manual evidence objects. '
    Boolean:
      type: boolean
    ObjectTypeEnum:
      type: string
      enum:
        - ASSESSMENT
        - CONTROL_SET
        - CONTROL
        - DELEGATION
        - ASSESSMENT_REPORT
    IamArn:
      type: string
      pattern: '^arn:.*:iam:.*'
      minLength: 20
      maxLength: 2048
    ChangeLog:
      type: object
      properties:
        objectType:
          $ref: '#/components/schemas/ObjectTypeEnum'
          description: ' The changelog object type, such as an assessment, control, or control set. '
        objectName:
          $ref: '#/components/schemas/NonEmptyString'
          description: ' The name of the changelog object. '
        action:
          $ref: '#/components/schemas/ActionEnum'
          description: ' The action performed. '
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: ' The time of creation for the changelog object. '
        createdBy:
          $ref: '#/components/schemas/IamArn'
          description: ' The IAM user or role that performed the action. '
      description: ' The record of a change within Audit Manager, such as a modified assessment, a delegated control set, and so on. '
    ChangeLogs:
      type: array
      items:
        $ref: '#/components/schemas/ChangeLog'
    ControlType:
      type: string
      enum:
        - Standard
        - Custom
    TestingInformation:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 1000
    ControlSources:
      type: string
      pattern: '^[a-zA-Z_0-9-\s.,]+$'
      minLength: 1
      maxLength: 100
    ControlMappingSources:
      type: array
      items:
        $ref: '#/components/schemas/ControlMappingSource'
      minItems: 1
    CreatedBy:
      type: string
      pattern: '^[a-zA-Z0-9\s-_()\[\]]+$'
      minLength: 1
      maxLength: 100
    LastUpdatedBy:
      type: string
      pattern: '^[a-zA-Z0-9\s-_()\[\]]+$'
      minLength: 1
      maxLength: 100
    Control:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AuditManagerArn'
          description: ' The Amazon Resource Name (ARN) of the specified control. '
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the control. '
        type:
          $ref: '#/components/schemas/ControlType'
          description: ' The type of control, such as custom or standard. '
        name:
          $ref: '#/components/schemas/ControlName'
          description: ' The name of the specified control. '
        description:
          $ref: '#/components/schemas/ControlDescription'
          description: ' The description of the specified control. '
        testingInformation:
          $ref: '#/components/schemas/TestingInformation'
          description: ' The steps to follow to determine if the control has been satisfied. '
        actionPlanTitle:
          $ref: '#/components/schemas/ActionPlanTitle'
          description: ' The title of the action plan for remediating the control. '
        actionPlanInstructions:
          $ref: '#/components/schemas/ActionPlanInstructions'
          description: ' The recommended actions to carry out if the control is not fulfilled. '
        controlSources:
          $ref: '#/components/schemas/ControlSources'
          description: ' The data source that determines from where Audit Manager collects evidence for the control. '
        controlMappingSources:
          $ref: '#/components/schemas/ControlMappingSources'
          description: ' The data mapping sources for the specified control. '
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the control was created. '
        lastUpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the control was most recently updated. '
        createdBy:
          $ref: '#/components/schemas/CreatedBy'
          description: ' The IAM user or role that created the control. '
        lastUpdatedBy:
          $ref: '#/components/schemas/LastUpdatedBy'
          description: ' The IAM user or role that most recently updated the control. '
        tags:
          $ref: '#/components/schemas/TagMap'
          description: ' The tags associated with the control. '
      description: ' A control in Audit Manager. '
    ControlCommentBody:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 500
    ControlComment:
      type: object
      properties:
        authorName:
          $ref: '#/components/schemas/Username'
          description: ' The name of the user who authored the comment. '
        commentBody:
          $ref: '#/components/schemas/ControlCommentBody'
          description: ' The body text of a control comment. '
        postedDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The time when the comment was posted. '
      description: ' A comment posted by a user on a control. This includes the author''s name, the comment text, and a timestamp. '
    SourceName:
      type: string
      minLength: 1
      maxLength: 100
    SourceDescription:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 1000
    SourceSetUpOption:
      type: string
      enum:
        - System_Controls_Mapping
        - Procedural_Controls_Mapping
    SourceType:
      type: string
      enum:
        - AWS_Cloudtrail
        - AWS_Config
        - AWS_Security_Hub
        - AWS_API_Call
        - MANUAL
    SourceKeyword:
      type: object
      properties:
        keywordInputType:
          $ref: '#/components/schemas/KeywordInputType'
          description: ' The method of input for the specified keyword. '
        keywordValue:
          $ref: '#/components/schemas/KeywordValue'
          description: ' The value of the keyword used to search CloudTrail logs, Config rules, Security Hub checks, and Amazon Web Services API names when mapping a control data source. '
      description: ' The keyword to search for in CloudTrail logs, Config rules, Security Hub checks, and Amazon Web Services API names. '
    SourceFrequency:
      type: string
      enum:
        - DAILY
        - WEEKLY
        - MONTHLY
    TroubleshootingText:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 1000
    ControlMetadata:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AuditManagerArn'
          description: ' The Amazon Resource Name (ARN) of the specified control. '
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the specified control. '
        name:
          $ref: '#/components/schemas/ControlName'
          description: ' The name of the specified control. '
        controlSources:
          $ref: '#/components/schemas/ControlSources'
          description: ' The data source that determines from where Audit Manager collects evidence for the control. '
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the control was created. '
        lastUpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the control was most recently updated. '
      description: ' The metadata associated with the specified standard or custom control. '
    ControlMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/ControlMetadata'
    ControlSetName:
      type: string
      pattern: '^[^\_]*$'
      minLength: 1
      maxLength: 300
    Controls:
      type: array
      items:
        $ref: '#/components/schemas/Control'
      minItems: 1
    ControlSet:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier of the control set in the assessment. This is the control set name in a plain string format. '
        name:
          $ref: '#/components/schemas/ControlSetName'
          description: ' The name of the control set. '
        controls:
          $ref: '#/components/schemas/Controls'
          description: ' The list of controls within the control set. '
      description: ' A set of controls in Audit Manager. '
    ControlSets:
      type: array
      items:
        $ref: '#/components/schemas/ControlSet'
      minItems: 1
    CreateAssessmentFrameworkControl:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier of the control. '
      description: ' Control entity attributes that uniquely identify an existing control to be added to a framework in Audit Manager. '
    CreateAssessmentFrameworkControls:
      type: array
      items:
        $ref: '#/components/schemas/CreateAssessmentFrameworkControl'
      minItems: 1
    CreateAssessmentFrameworkControlSets:
      type: array
      items:
        $ref: '#/components/schemas/CreateAssessmentFrameworkControlSet'
      minItems: 1
    CreateAssessmentFrameworkRequest:
      type: object
      required:
        - name
        - controlSets
      title: CreateAssessmentFrameworkRequest
      properties:
        name:
          $ref: '#/components/schemas/FrameworkName'
          description: ' The name of the new custom framework. '
        description:
          $ref: '#/components/schemas/FrameworkDescription'
          description: ' An optional description for the new custom framework. '
        complianceType:
          $ref: '#/components/schemas/ComplianceType'
          description: ' The compliance type that the new custom framework supports, such as CIS or HIPAA. '
        controlSets:
          $ref: '#/components/schemas/CreateAssessmentFrameworkControlSets'
          description: ' The control sets to be associated with the framework. '
        tags:
          $ref: '#/components/schemas/TagMap'
          description: ' The tags associated with the framework. '
    Framework:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AuditManagerArn'
          description: ' The Amazon Resource Name (ARN) of the specified framework. '
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the specified framework. '
        name:
          $ref: '#/components/schemas/FrameworkName'
          description: ' The name of the specified framework. '
        type:
          $ref: '#/components/schemas/FrameworkType'
          description: ' The framework type, such as custom or standard. '
        complianceType:
          $ref: '#/components/schemas/ComplianceType'
          description: ' The compliance type that the new custom framework supports, such as CIS or HIPAA. '
        description:
          $ref: '#/components/schemas/FrameworkDescription'
          description: ' The description of the specified framework. '
        logo:
          $ref: '#/components/schemas/Filename'
          description: ' The logo associated with the framework. '
        controlSources:
          $ref: '#/components/schemas/ControlSources'
          description: ' The sources from which Audit Manager collects evidence for the control. '
        controlSets:
          $ref: '#/components/schemas/ControlSets'
          description: ' The control sets associated with the framework. '
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the framework was created. '
        lastUpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the framework was most recently updated. '
        createdBy:
          $ref: '#/components/schemas/CreatedBy'
          description: ' The IAM user or role that created the framework. '
        lastUpdatedBy:
          $ref: '#/components/schemas/LastUpdatedBy'
          description: ' The IAM user or role that most recently updated the framework. '
        tags:
          $ref: '#/components/schemas/TagMap'
          description: ' The tags associated with the framework. '
      description: ' The file used to structure and automate Audit Manager assessments for a given compliance standard. '
    CreateAssessmentReportRequest:
      type: object
      required:
        - name
      title: CreateAssessmentReportRequest
      properties:
        name:
          $ref: '#/components/schemas/AssessmentReportName'
          description: ' The name of the new assessment report. '
        description:
          $ref: '#/components/schemas/AssessmentReportDescription'
          description: ' The description of the assessment report. '
    CreateAssessmentRequest:
      type: object
      required:
        - name
        - assessmentReportsDestination
        - scope
        - roles
        - frameworkId
      title: CreateAssessmentRequest
      properties:
        name:
          $ref: '#/components/schemas/AssessmentName'
          description: ' The name of the assessment to be created. '
        description:
          $ref: '#/components/schemas/AssessmentDescription'
          description: ' The optional description of the assessment to be created. '
        assessmentReportsDestination:
          $ref: '#/components/schemas/AssessmentReportsDestination'
          description: ' The assessment report storage destination for the specified assessment that is being created. '
        scope:
          $ref: '#/components/schemas/Scope'
        roles:
          $ref: '#/components/schemas/Roles'
          description: ' The list of roles for the specified assessment. '
        frameworkId:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the specified framework. '
        tags:
          $ref: '#/components/schemas/TagMap'
          description: ' The tags associated with the assessment. '
    CreateControlMappingSources:
      type: array
      items:
        $ref: '#/components/schemas/CreateControlMappingSource'
      minItems: 1
    CreateControlRequest:
      type: object
      required:
        - name
        - controlMappingSources
      title: CreateControlRequest
      properties:
        name:
          $ref: '#/components/schemas/ControlName'
          description: ' The name of the control. '
        description:
          $ref: '#/components/schemas/ControlDescription'
          description: ' The description of the control. '
        testingInformation:
          $ref: '#/components/schemas/TestingInformation'
          description: ' The steps to follow to determine if the control has been satisfied. '
        actionPlanTitle:
          $ref: '#/components/schemas/ActionPlanTitle'
          description: ' The title of the action plan for remediating the control. '
        actionPlanInstructions:
          $ref: '#/components/schemas/ActionPlanInstructions'
          description: ' The recommended actions to carry out if the control is not fulfilled. '
        controlMappingSources:
          $ref: '#/components/schemas/CreateControlMappingSources'
          description: ' The data mapping sources for the specified control. '
        tags:
          $ref: '#/components/schemas/TagMap'
          description: ' The tags associated with the control. '
    DelegationComment:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 350
    RoleType:
      type: string
      enum:
        - PROCESS_OWNER
        - RESOURCE_OWNER
    DelegationStatus:
      type: string
      enum:
        - IN_PROGRESS
        - UNDER_REVIEW
        - COMPLETE
    Delegation:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the delegation. '
        assessmentName:
          $ref: '#/components/schemas/AssessmentName'
          description: ' The name of the associated assessment. '
        assessmentId:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the associated assessment. '
        status:
          $ref: '#/components/schemas/DelegationStatus'
          description: ' The status of the delegation. '
        roleArn:
          $ref: '#/components/schemas/IamArn'
          description: ' The Amazon Resource Name (ARN) of the IAM role. '
        roleType:
          $ref: '#/components/schemas/RoleType'
          description: '<p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>'
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the delegation was created. '
        lastUpdated:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the delegation was last updated. '
        controlSetId:
          $ref: '#/components/schemas/ControlSetId'
          description: ' The identifier for the associated control set. '
        comment:
          $ref: '#/components/schemas/DelegationComment'
          description: ' The comment related to the delegation. '
        createdBy:
          $ref: '#/components/schemas/CreatedBy'
          description: ' The IAM user or role that created the delegation. '
      description: ' The assignment of a control set to a delegate for review. '
    DelegationMetadata:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the delegation. '
        assessmentName:
          $ref: '#/components/schemas/AssessmentName'
          description: ' The name of the associated assessment. '
        assessmentId:
          $ref: '#/components/schemas/UUID'
          description: ' The unique identifier for the specified assessment. '
        status:
          $ref: '#/components/schemas/DelegationStatus'
          description: ' The current status of the delgation. '
        roleArn:
          $ref: '#/components/schemas/IamArn'
          description: ' The Amazon Resource Name (ARN) of the IAM role. '
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' Specifies when the delegation was created. '
        controlSetName:
          $ref: '#/components/schemas/NonEmptyString'
          description: ' Specifies the name of the control set delegated for review. '
      description: ' The metadata associated with the specified delegation. '
    DelegationMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/DelegationMetadata'
    DeleteAssessmentFrameworkRequest:
      type: object
      title: DeleteAssessmentFrameworkRequest
      properties: {}
    DeleteAssessmentReportRequest:
      type: object
      title: DeleteAssessmentReportRequest
      properties: {}
    DeleteAssessmentRequest:
      type: object
      title: DeleteAssessmentRequest
      properties: {}
    DeleteControlRequest:
      type: object
      title: DeleteControlRequest
      properties: {}
    DeregisterAccountRequest:
      type: object
      title: DeregisterAccountRequest
      properties: {}
    DeregisterOrganizationAdminAccountRequest:
      type: object
      title: DeregisterOrganizationAdminAccountRequest
      properties:
        adminAccountId:
          $ref: '#/components/schemas/AccountId'
          description: ' The identifier for the specified administrator account. '
    DisassociateAssessmentReportEvidenceFolderRequest:
      type: object
      required:
        - evidenceFolderId
      title: DisassociateAssessmentReportEvidenceFolderRequest
      properties:
        evidenceFolderId:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the folder in which evidence is stored. '
    EventName:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 100
    Resources:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    EvidenceAttributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EvidenceAttributeValue'
    Evidence:
      type: object
      properties:
        dataSource:
          $ref: '#/components/schemas/String'
          description: ' The data source from which the specified evidence was collected. '
        evidenceAwsAccountId:
          $ref: '#/components/schemas/AccountId'
          description: ' The identifier for the specified account. '
        time:
          $ref: '#/components/schemas/Timestamp'
          description: ' The timestamp that represents when the evidence was collected. '
        eventSource:
          $ref: '#/components/schemas/AWSServiceName'
          description: ' The Amazon Web Service from which the evidence is collected. '
        eventName:
          $ref: '#/components/schemas/EventName'
          description: ' The name of the specified evidence event. '
        evidenceByType:
          $ref: '#/components/schemas/String'
          description: ' The type of automated evidence. '
        resourcesIncluded:
          $ref: '#/components/schemas/Resources'
          description: ' The list of resources assessed to generate the evidence. '
        attributes:
          $ref: '#/components/schemas/EvidenceAttributes'
          description: ' The names and values used by the evidence event, including an attribute name (such as <code>allowUsersToChangePassword</code>) and value (such as <code>true</code> or <code>false</code>). '
        iamId:
          $ref: '#/components/schemas/IamArn'
          description: ' The unique identifier for the IAM user or role associated with the evidence. '
        complianceCheck:
          $ref: '#/components/schemas/String'
          description: ' The evaluation status for evidence that falls under the compliance check category. For evidence collected from Security Hub, a <i>Pass</i> or <i>Fail</i> result is shown. For evidence collected from Config, a <i>Compliant</i> or <i>Noncompliant</i> result is shown. '
        awsOrganization:
          $ref: '#/components/schemas/String'
          description: ' The account from which the evidence is collected, and its organization path. '
        awsAccountId:
          $ref: '#/components/schemas/AccountId'
          description: ' The identifier for the specified account. '
        evidenceFolderId:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the folder in which the evidence is stored. '
        id:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the evidence. '
        assessmentReportSelection:
          $ref: '#/components/schemas/String'
          description: ' Specifies whether the evidence is included in the assessment report. '
      description: ' A record that contains the information needed to demonstrate compliance with the requirements specified by a control. Examples of evidence include change activity triggered by a user, or a system configuration snapshot. '
    EvidenceAttributeKey:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 100
    EvidenceAttributeValue:
      type: string
      pattern: '^[\w\W\s\S]*$'
      maxLength: 200
    EvidenceList:
      type: array
      items:
        $ref: '#/components/schemas/Evidence'
    FrameworkMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentFrameworkMetadata'
    GenericArn:
      type: string
      pattern: '^arn:.*'
      minLength: 20
      maxLength: 2048
    GetAccountStatusRequest:
      type: object
      title: GetAccountStatusRequest
      properties: {}
    GetAssessmentFrameworkRequest:
      type: object
      title: GetAssessmentFrameworkRequest
      properties: {}
    GetAssessmentReportUrlRequest:
      type: object
      title: GetAssessmentReportUrlRequest
      properties: {}
    URL:
      type: object
      properties:
        hyperlinkName:
          $ref: '#/components/schemas/HyperlinkName'
          description: ' The name or word used as a hyperlink to the URL. '
        link:
          $ref: '#/components/schemas/UrlLink'
          description: ' The unique identifier for the internet resource. '
      description: ' A uniform resource locator, used as a unique identifier to locate a resource on the internet. '
    GetAssessmentRequest:
      type: object
      title: GetAssessmentRequest
      properties: {}
    Token:
      type: string
      pattern: '^[A-Za-z0-9+\/=]*$'
      minLength: 1
      maxLength: 1000
    MaxResults:
      type: integer
      description: Max results in the page.
      minimum: 1
      maximum: 1000
    GetChangeLogsRequest:
      type: object
      title: GetChangeLogsRequest
      properties: {}
    GetControlRequest:
      type: object
      title: GetControlRequest
      properties: {}
    GetDelegationsRequest:
      type: object
      title: GetDelegationsRequest
      properties: {}
    GetEvidenceByEvidenceFolderRequest:
      type: object
      title: GetEvidenceByEvidenceFolderRequest
      properties: {}
    GetEvidenceFolderRequest:
      type: object
      title: GetEvidenceFolderRequest
      properties: {}
    GetEvidenceFoldersByAssessmentControlRequest:
      type: object
      title: GetEvidenceFoldersByAssessmentControlRequest
      properties: {}
    GetEvidenceFoldersByAssessmentRequest:
      type: object
      title: GetEvidenceFoldersByAssessmentRequest
      properties: {}
    GetEvidenceRequest:
      type: object
      title: GetEvidenceRequest
      properties: {}
    GetOrganizationAdminAccountRequest:
      type: object
      title: GetOrganizationAdminAccountRequest
      properties: {}
    organizationId:
      type: string
      pattern: 'o-[a-z0-9]{10,32}'
      minLength: 12
      maxLength: 34
    GetServicesInScopeRequest:
      type: object
      title: GetServicesInScopeRequest
      properties: {}
    ServiceMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceMetadata'
    SettingAttribute:
      type: string
      enum:
        - ALL
        - IS_AWS_ORG_ENABLED
        - SNS_TOPIC
        - DEFAULT_ASSESSMENT_REPORTS_DESTINATION
        - DEFAULT_PROCESS_OWNERS
    GetSettingsRequest:
      type: object
      title: GetSettingsRequest
      properties: {}
    Settings:
      type: object
      properties:
        isAwsOrgEnabled:
          $ref: '#/components/schemas/Boolean'
          description: ' Specifies whether Organizations is enabled. '
        snsTopic:
          $ref: '#/components/schemas/SNSTopic'
          description: ' The designated Amazon Simple Notification Service (Amazon SNS) topic. '
        defaultAssessmentReportsDestination:
          $ref: '#/components/schemas/AssessmentReportsDestination'
          description: ' The default storage destination for assessment reports. '
        defaultProcessOwners:
          $ref: '#/components/schemas/Roles'
          description: ' The designated default audit owners. '
        kmsKey:
          $ref: '#/components/schemas/KmsKey'
          description: ' The KMS key details. '
      description: ' The settings object that holds all supported Audit Manager settings. '
    HyperlinkName:
      type: string
      pattern: '^[\w\W\s\S]*$'
      minLength: 1
      maxLength: 200
    KeywordInputType:
      type: string
      enum:
        - SELECT_FROM_LIST
    KeywordValue:
      type: string
      pattern: '^[a-zA-Z_0-9-\s().]+$'
      minLength: 1
      maxLength: 100
    Keywords:
      type: array
      items:
        $ref: '#/components/schemas/KeywordValue'
    KmsKey:
      type: string
      pattern: '^arn:.*:kms:.*|DEFAULT'
      minLength: 7
      maxLength: 2048
    ListAssessmentFrameworksRequest:
      type: object
      title: ListAssessmentFrameworksRequest
      properties: {}
    ListAssessmentMetadata:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentMetadataItem'
    ListAssessmentReportsRequest:
      type: object
      title: ListAssessmentReportsRequest
      properties: {}
    ListAssessmentsRequest:
      type: object
      title: ListAssessmentsRequest
      properties: {}
    ListControlsRequest:
      type: object
      title: ListControlsRequest
      properties: {}
    ListKeywordsForDataSourceRequest:
      type: object
      title: ListKeywordsForDataSourceRequest
      properties: {}
    ListNotificationsRequest:
      type: object
      title: ListNotificationsRequest
      properties: {}
    Notifications:
      type: array
      items:
        $ref: '#/components/schemas/Notification'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    TimestampUUID:
      type: string
      pattern: '^[0-9]{10,13}_[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
      minLength: 47
      maxLength: 50
    Notification:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TimestampUUID'
          description: ' The unique identifier for the notification. '
        assessmentId:
          $ref: '#/components/schemas/UUID'
          description: ' The identifier for the specified assessment. '
        assessmentName:
          $ref: '#/components/schemas/AssessmentName'
          description: ' The name of the related assessment. '
        controlSetId:
          $ref: '#/components/schemas/ControlSetId'
          description: ' The identifier for the specified control set. '
        controlSetName:
          $ref: '#/components/schemas/NonEmptyString'
          description: ' Specifies the name of the control set that the notification is about. '
        description:
          $ref: '#/components/schemas/NonEmptyString'
          description: ' The description of the notification. '
        eventTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' The time when the notification was sent. '
        source:
          $ref: '#/components/schemas/NonEmptyString'
          description: ' The sender of the notification. '
      description: ' The notification used to inform a user of an update in Audit Manager. For example, this includes the notification that is sent when a control set is delegated for review. '
    RegisterAccountRequest:
      type: object
      title: RegisterAccountRequest
      properties:
        kmsKey:
          $ref: '#/components/schemas/KmsKey'
          description: ' The KMS key details. '
        delegatedAdminAccount:
          $ref: '#/components/schemas/AccountId'
          description: ' The delegated administrator account for Audit Manager. '
    RegisterOrganizationAdminAccountRequest:
      type: object
      required:
        - adminAccountId
      title: RegisterOrganizationAdminAccountRequest
      properties:
        adminAccountId:
          $ref: '#/components/schemas/AccountId'
          description: ' The identifier for the specified delegated administrator account. '
    Resource:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/GenericArn'
          description: ' The Amazon Resource Name (ARN) for the specified resource. '
        value:
          $ref: '#/components/schemas/String'
          description: ' The value of the specified resource. '
      description: ' A system asset that is evaluated in an Audit Manager assessment. '
    SNSTopic:
      type: string
      pattern: '^[a-zA-Z0-9-_\(\)\[\]]+$'
      minLength: 1
      maxLength: 255
    ServiceMetadata:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/AWSServiceName'
          description: ' The name of the Amazon Web Service. '
        displayName:
          $ref: '#/components/schemas/NonEmptyString'
          description: ' The display name of the Amazon Web Service. '
        description:
          $ref: '#/components/schemas/NonEmptyString'
          description: ' The description of the specified Amazon Web Service. '
        category:
          $ref: '#/components/schemas/NonEmptyString'
          description: ' The category in which the Amazon Web Service belongs, such as compute, storage, database, and so on. '
      description: ' The metadata associated with the specified Amazon Web Service. '
    SnsArn:
      type: string
      pattern: '^arn:.*:sns:.*'
      minLength: 20
      maxLength: 2048
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          $ref: '#/components/schemas/TagMap'
          description: ' The tags to be associated with the resource. '
    UrlLink:
      type: string
      pattern: '^(https?:\/\/)?(www\.)?[a-zA-Z0-9-_]+([\.]+[a-zA-Z]+)+[\/\w]*$'
      minLength: 1
      maxLength: 8192
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateAssessmentControlRequest:
      type: object
      title: UpdateAssessmentControlRequest
      properties:
        controlStatus:
          $ref: '#/components/schemas/ControlStatus'
          description: ' The status of the specified control. '
        commentBody:
          $ref: '#/components/schemas/ControlCommentBody'
          description: ' The comment body text for the specified control. '
    UpdateAssessmentControlSetStatusRequest:
      type: object
      required:
        - status
        - comment
      title: UpdateAssessmentControlSetStatusRequest
      properties:
        status:
          $ref: '#/components/schemas/ControlSetStatus'
          description: ' The status of the control set that is being updated. '
        comment:
          $ref: '#/components/schemas/DelegationComment'
          description: ' The comment related to the status update. '
    UpdateAssessmentFrameworkControlSets:
      type: array
      items:
        $ref: '#/components/schemas/UpdateAssessmentFrameworkControlSet'
    UpdateAssessmentFrameworkRequest:
      type: object
      required:
        - name
        - controlSets
      title: UpdateAssessmentFrameworkRequest
      properties:
        name:
          $ref: '#/components/schemas/FrameworkName'
          description: ' The name of the framework to be updated. '
        description:
          $ref: '#/components/schemas/FrameworkDescription'
          description: ' The description of the framework that is to be updated. '
        complianceType:
          $ref: '#/components/schemas/ComplianceType'
          description: ' The compliance type that the new custom framework supports, such as CIS or HIPAA. '
        controlSets:
          $ref: '#/components/schemas/UpdateAssessmentFrameworkControlSets'
          description: ' The control sets associated with the framework. '
    UpdateAssessmentRequest:
      type: object
      required:
        - scope
      title: UpdateAssessmentRequest
      properties:
        assessmentName:
          $ref: '#/components/schemas/AssessmentName'
          description: ' The name of the specified assessment to be updated. '
        assessmentDescription:
          $ref: '#/components/schemas/AssessmentDescription'
          description: ' The description of the specified assessment. '
        scope:
          $ref: '#/components/schemas/Scope'
          description: ' The scope of the specified assessment. '
        assessmentReportsDestination:
          $ref: '#/components/schemas/AssessmentReportsDestination'
          description: ' The assessment report storage destination for the specified assessment that is being updated. '
        roles:
          $ref: '#/components/schemas/Roles'
          description: ' The list of roles for the specified assessment. '
    UpdateAssessmentStatusRequest:
      type: object
      required:
        - status
      title: UpdateAssessmentStatusRequest
      properties:
        status:
          $ref: '#/components/schemas/AssessmentStatus'
          description: ' The current status of the specified assessment. '
    UpdateControlRequest:
      type: object
      required:
        - name
        - controlMappingSources
      title: UpdateControlRequest
      properties:
        name:
          $ref: '#/components/schemas/ControlName'
          description: ' The name of the control to be updated. '
        description:
          $ref: '#/components/schemas/ControlDescription'
          description: ' The optional description of the control. '
        testingInformation:
          $ref: '#/components/schemas/TestingInformation'
          description: ' The steps that to follow to determine if the control has been satisfied. '
        actionPlanTitle:
          $ref: '#/components/schemas/ActionPlanTitle'
          description: ' The title of the action plan for remediating the control. '
        actionPlanInstructions:
          $ref: '#/components/schemas/ActionPlanInstructions'
          description: ' The recommended actions to carry out if the control is not fulfilled. '
        controlMappingSources:
          $ref: '#/components/schemas/ControlMappingSources'
          description: ' The data mapping sources for the specified control. '
    UpdateSettingsRequest:
      type: object
      title: UpdateSettingsRequest
      properties:
        snsTopic:
          $ref: '#/components/schemas/SnsArn'
          description: ' The Amazon Simple Notification Service (Amazon SNS) topic to which Audit Manager sends notifications. '
        defaultAssessmentReportsDestination:
          $ref: '#/components/schemas/AssessmentReportsDestination'
          description: ' The default storage destination for assessment reports. '
        defaultProcessOwners:
          $ref: '#/components/schemas/Roles'
          description: ' A list of the default audit owners. '
        kmsKey:
          $ref: '#/components/schemas/KmsKey'
          description: ' The KMS key details. '
    ValidateAssessmentReportIntegrityRequest:
      type: object
      required:
        - s3RelativePath
      title: ValidateAssessmentReportIntegrityRequest
      properties:
        s3RelativePath:
          $ref: '#/components/schemas/S3Url'
          description: ' The relative path of the specified Amazon S3 bucket in which the assessment report is stored. '
    ValidationErrors:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
security:
  - hmac: []
