openapi: 3.0.0
info:
  version: '2013-01-01'
  x-release: v4
  title: Amazon CloudSearch
  description: '<fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region" target="_blank">Regions and Endpoints</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: cloudsearch
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cloudsearch-2013-01-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/cloudsearch/'
servers:
  - url: 'http://cloudsearch.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon CloudSearch multi-region endpoint
  - url: 'https://cloudsearch.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon CloudSearch multi-region endpoint
  - url: 'http://cloudsearch.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon CloudSearch endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://cloudsearch.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon CloudSearch endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#Action=BuildSuggesters:
    get:
      x-aws-operation-name: BuildSuggesters
      operationId: GET_BuildSuggesters
      description: 'Indexes the search suggestions. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html#configuring-suggesters">Configuring Suggesters</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BuildSuggestersResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BuildSuggesters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: BuildSuggesters
      operationId: POST_BuildSuggesters
      description: 'Indexes the search suggestions. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html#configuring-suggesters">Configuring Suggesters</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BuildSuggestersResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/BuildSuggestersRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BuildSuggesters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=CreateDomain:
    get:
      x-aws-operation-name: CreateDomain
      operationId: GET_CreateDomain
      description: 'Creates a new search domain. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/creating-domains.html" target="_blank">Creating a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDomainResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceAlreadyExistsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '484':
          description: ValidationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: 'A name for the domain you are creating. Allowed characters are a-z (lower-case letters), 0-9, and hyphen (-). Domain names must start with a letter or number and be at least 3 and no more than 28 characters long.'
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDomain
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDomain
      operationId: POST_CreateDomain
      description: 'Creates a new search domain. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/creating-domains.html" target="_blank">Creating a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDomainResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceAlreadyExistsException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '484':
          description: ValidationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDomain
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DefineAnalysisScheme:
    get:
      x-aws-operation-name: DefineAnalysisScheme
      operationId: GET_DefineAnalysisScheme
      description: 'Configures an analysis scheme that can be applied to a <code>text</code> or <code>text-array</code> field to define language-specific text processing options. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html" target="_blank">Configuring Analysis Schemes</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefineAnalysisSchemeResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: AnalysisScheme
          in: query
          required: true
          description: ''
          schema:
            type: object
            required:
              - AnalysisSchemeName
              - AnalysisSchemeLanguage
            properties:
              AnalysisSchemeName:
                $ref: '#/components/schemas/StandardName'
              AnalysisSchemeLanguage:
                $ref: '#/components/schemas/AnalysisSchemeLanguage'
              AnalysisOptions:
                $ref: '#/components/schemas/AnalysisOptions'
            description: 'Configuration information for an analysis scheme. Each analysis scheme has a unique name and specifies the language of the text to be processed. The following options can be configured for an analysis scheme: <code>Synonyms</code>, <code>Stopwords</code>, <code>StemmingDictionary</code>, <code>JapaneseTokenizationDictionary</code> and <code>AlgorithmicStemming</code>.'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DefineAnalysisScheme
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DefineAnalysisScheme
      operationId: POST_DefineAnalysisScheme
      description: 'Configures an analysis scheme that can be applied to a <code>text</code> or <code>text-array</code> field to define language-specific text processing options. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html" target="_blank">Configuring Analysis Schemes</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefineAnalysisSchemeResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DefineAnalysisSchemeRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DefineAnalysisScheme
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DefineExpression:
    get:
      x-aws-operation-name: DefineExpression
      operationId: GET_DefineExpression
      description: 'Configures an <code><a>Expression</a></code> for the search domain. Used to create new expressions and modify existing ones. If the expression exists, the new configuration replaces the old one. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefineExpressionResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: Expression
          in: query
          required: true
          description: ''
          schema:
            type: object
            required:
              - ExpressionName
              - ExpressionValue
            properties:
              ExpressionName:
                $ref: '#/components/schemas/StandardName'
              ExpressionValue:
                $ref: '#/components/schemas/ExpressionValue'
            description: 'A named expression that can be evaluated at search time. Can be used to sort the search results, define other expressions, or return computed information in the search results. '
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DefineExpression
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DefineExpression
      operationId: POST_DefineExpression
      description: 'Configures an <code><a>Expression</a></code> for the search domain. Used to create new expressions and modify existing ones. If the expression exists, the new configuration replaces the old one. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefineExpressionResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DefineExpressionRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DefineExpression
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DefineIndexField:
    get:
      x-aws-operation-name: DefineIndexField
      operationId: GET_DefineIndexField
      description: 'Configures an <code><a>IndexField</a></code> for the search domain. Used to create new fields and modify existing ones. You must specify the name of the domain you are configuring and an index field configuration. The index field configuration specifies a unique name, the index field type, and the options you want to configure for the field. The options you can specify depend on the <code><a>IndexFieldType</a></code>. If the field exists, the new configuration replaces the old one. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html" target="_blank">Configuring Index Fields</a> in the <i>Amazon CloudSearch Developer Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefineIndexFieldResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: IndexField
          in: query
          required: true
          description: 'The index field and field options you want to configure. '
          schema:
            type: object
            required:
              - IndexFieldName
              - IndexFieldType
            properties:
              IndexFieldName:
                $ref: '#/components/schemas/DynamicFieldName'
                description: '<p>A string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field''s name defines a pattern that begins or ends with a wildcard. Any document fields that don''t map to a regular index field but do match a dynamic field''s pattern are configured with the dynamic field''s indexing options. </p> <p>Regular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported. </p> <p>The name <code>score</code> is reserved and cannot be used as a field name. To reference a document''s ID, you can use the name <code>_id</code>. </p>'
              IndexFieldType:
                $ref: '#/components/schemas/IndexFieldType'
              IntOptions:
                $ref: '#/components/schemas/IntOptions'
              DoubleOptions:
                $ref: '#/components/schemas/DoubleOptions'
              LiteralOptions:
                $ref: '#/components/schemas/LiteralOptions'
              TextOptions:
                $ref: '#/components/schemas/TextOptions'
              DateOptions:
                $ref: '#/components/schemas/DateOptions'
              LatLonOptions:
                $ref: '#/components/schemas/LatLonOptions'
              IntArrayOptions:
                $ref: '#/components/schemas/IntArrayOptions'
              DoubleArrayOptions:
                $ref: '#/components/schemas/DoubleArrayOptions'
              LiteralArrayOptions:
                $ref: '#/components/schemas/LiteralArrayOptions'
              TextArrayOptions:
                $ref: '#/components/schemas/TextArrayOptions'
              DateArrayOptions:
                $ref: '#/components/schemas/DateArrayOptions'
            description: 'Configuration information for a field in the index, including its name, type, and options. The supported options depend on the <code><a>IndexFieldType</a></code>.'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DefineIndexField
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DefineIndexField
      operationId: POST_DefineIndexField
      description: 'Configures an <code><a>IndexField</a></code> for the search domain. Used to create new fields and modify existing ones. You must specify the name of the domain you are configuring and an index field configuration. The index field configuration specifies a unique name, the index field type, and the options you want to configure for the field. The options you can specify depend on the <code><a>IndexFieldType</a></code>. If the field exists, the new configuration replaces the old one. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html" target="_blank">Configuring Index Fields</a> in the <i>Amazon CloudSearch Developer Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefineIndexFieldResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DefineIndexFieldRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DefineIndexField
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DefineSuggester:
    get:
      x-aws-operation-name: DefineSuggester
      operationId: GET_DefineSuggester
      description: 'Configures a suggester for a domain. A suggester enables you to display possible matches before users finish typing their queries. When you configure a suggester, you must specify the name of the text field you want to search for possible matches and a unique name for the suggester. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html" target="_blank">Getting Search Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefineSuggesterResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: Suggester
          in: query
          required: true
          description: ''
          schema:
            type: object
            required:
              - SuggesterName
              - DocumentSuggesterOptions
            properties:
              SuggesterName:
                $ref: '#/components/schemas/StandardName'
              DocumentSuggesterOptions:
                $ref: '#/components/schemas/DocumentSuggesterOptions'
            description: 'Configuration information for a search suggester. Each suggester has a unique name and specifies the text field you want to use for suggestions. The following options can be configured for a suggester: <code>FuzzyMatching</code>, <code>SortExpression</code>. '
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DefineSuggester
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DefineSuggester
      operationId: POST_DefineSuggester
      description: 'Configures a suggester for a domain. A suggester enables you to display possible matches before users finish typing their queries. When you configure a suggester, you must specify the name of the text field you want to search for possible matches and a unique name for the suggester. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html" target="_blank">Getting Search Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefineSuggesterResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DefineSuggesterRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DefineSuggester
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DeleteAnalysisScheme:
    get:
      x-aws-operation-name: DeleteAnalysisScheme
      operationId: GET_DeleteAnalysisScheme
      description: 'Deletes an analysis scheme. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html" target="_blank">Configuring Analysis Schemes</a> in the <i>Amazon CloudSearch Developer Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteAnalysisSchemeResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: AnalysisSchemeName
          in: query
          required: true
          description: The name of the analysis scheme you want to delete.
          schema:
            type: string
            pattern: '[a-z][a-z0-9_]*'
            description: 'Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).'
            minLength: 1
            maxLength: 64
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteAnalysisScheme
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteAnalysisScheme
      operationId: POST_DeleteAnalysisScheme
      description: 'Deletes an analysis scheme. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html" target="_blank">Configuring Analysis Schemes</a> in the <i>Amazon CloudSearch Developer Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteAnalysisSchemeResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteAnalysisSchemeRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteAnalysisScheme
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DeleteDomain:
    get:
      x-aws-operation-name: DeleteDomain
      operationId: GET_DeleteDomain
      description: 'Permanently deletes a search domain and all of its data. Once a domain has been deleted, it cannot be recovered. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/deleting-domains.html" target="_blank">Deleting a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDomainResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: The name of the domain you want to permanently delete.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDomain
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDomain
      operationId: POST_DeleteDomain
      description: 'Permanently deletes a search domain and all of its data. Once a domain has been deleted, it cannot be recovered. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/deleting-domains.html" target="_blank">Deleting a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDomainResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDomainRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDomain
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DeleteExpression:
    get:
      x-aws-operation-name: DeleteExpression
      operationId: GET_DeleteExpression
      description: 'Removes an <code><a>Expression</a></code> from the search domain. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteExpressionResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: ExpressionName
          in: query
          required: true
          description: The name of the <code><a>Expression</a></code> to delete.
          schema:
            type: string
            pattern: '[a-z][a-z0-9_]*'
            description: 'Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).'
            minLength: 1
            maxLength: 64
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteExpression
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteExpression
      operationId: POST_DeleteExpression
      description: 'Removes an <code><a>Expression</a></code> from the search domain. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteExpressionResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteExpressionRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteExpression
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DeleteIndexField:
    get:
      x-aws-operation-name: DeleteIndexField
      operationId: GET_DeleteIndexField
      description: 'Removes an <code><a>IndexField</a></code> from the search domain. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html" target="_blank">Configuring Index Fields</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteIndexFieldResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: IndexFieldName
          in: query
          required: true
          description: The name of the index field your want to remove from the domain's indexing options.
          schema:
            type: string
            pattern: '([a-z][a-z0-9_]*\*?|\*[a-z0-9_]*)'
            minLength: 1
            maxLength: 64
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteIndexField
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteIndexField
      operationId: POST_DeleteIndexField
      description: 'Removes an <code><a>IndexField</a></code> from the search domain. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html" target="_blank">Configuring Index Fields</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteIndexFieldResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteIndexFieldRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteIndexField
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DeleteSuggester:
    get:
      x-aws-operation-name: DeleteSuggester
      operationId: GET_DeleteSuggester
      description: 'Deletes a suggester. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html" target="_blank">Getting Search Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteSuggesterResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: SuggesterName
          in: query
          required: true
          description: Specifies the name of the suggester you want to delete.
          schema:
            type: string
            pattern: '[a-z][a-z0-9_]*'
            description: 'Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).'
            minLength: 1
            maxLength: 64
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSuggester
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteSuggester
      operationId: POST_DeleteSuggester
      description: 'Deletes a suggester. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html" target="_blank">Getting Search Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteSuggesterResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSuggesterRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSuggester
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DescribeAnalysisSchemes:
    get:
      x-aws-operation-name: DescribeAnalysisSchemes
      operationId: GET_DescribeAnalysisSchemes
      description: 'Gets the analysis schemes configured for a domain. An analysis scheme defines language-specific text processing options for a <code>text</code> field. Can be limited to specific analysis schemes by name. By default, shows all analysis schemes and includes any pending changes to the configuration. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html" target="_blank">Configuring Analysis Schemes</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAnalysisSchemesResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: The name of the domain you want to describe.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: AnalysisSchemeNames
          in: query
          required: false
          description: The analysis schemes you want to describe.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StandardName'
        - name: Deployed
          in: query
          required: false
          description: Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAnalysisSchemes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAnalysisSchemes
      operationId: POST_DescribeAnalysisSchemes
      description: 'Gets the analysis schemes configured for a domain. An analysis scheme defines language-specific text processing options for a <code>text</code> field. Can be limited to specific analysis schemes by name. By default, shows all analysis schemes and includes any pending changes to the configuration. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html" target="_blank">Configuring Analysis Schemes</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAnalysisSchemesResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeAnalysisSchemesRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAnalysisSchemes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DescribeAvailabilityOptions:
    get:
      x-aws-operation-name: DescribeAvailabilityOptions
      operationId: GET_DescribeAvailabilityOptions
      description: 'Gets the availability options configured for a domain. By default, shows the configuration with any pending changes. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-availability-options.html" target="_blank">Configuring Availability Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAvailabilityOptionsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: DisabledOperationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: The name of the domain you want to describe.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: Deployed
          in: query
          required: false
          description: Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAvailabilityOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAvailabilityOptions
      operationId: POST_DescribeAvailabilityOptions
      description: 'Gets the availability options configured for a domain. By default, shows the configuration with any pending changes. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-availability-options.html" target="_blank">Configuring Availability Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAvailabilityOptionsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: DisabledOperationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeAvailabilityOptionsRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAvailabilityOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DescribeDomainEndpointOptions:
    get:
      x-aws-operation-name: DescribeDomainEndpointOptions
      operationId: GET_DescribeDomainEndpointOptions
      description: 'Returns the domain''s endpoint options, specifically whether all requests to the domain must arrive over HTTPS. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-domain-endpoint-options.html" target="_blank">Configuring Domain Endpoint Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDomainEndpointOptionsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: DisabledOperationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: A string that represents the name of a domain.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: Deployed
          in: query
          required: false
          description: 'Whether to retrieve the latest configuration (which might be in a Processing state) or the current, active configuration. Defaults to <code>false</code>.'
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDomainEndpointOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDomainEndpointOptions
      operationId: POST_DescribeDomainEndpointOptions
      description: 'Returns the domain''s endpoint options, specifically whether all requests to the domain must arrive over HTTPS. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-domain-endpoint-options.html" target="_blank">Configuring Domain Endpoint Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDomainEndpointOptionsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: DisabledOperationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDomainEndpointOptionsRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDomainEndpointOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DescribeDomains:
    get:
      x-aws-operation-name: DescribeDomains
      operationId: GET_DescribeDomains
      description: 'Gets information about the search domains owned by this account. Can be limited to specific domains. Shows all domains by default. To get the number of searchable documents in a domain, use the console or submit a <code>matchall</code> request to your domain''s search endpoint: <code>q=matchall&amp;amp;q.parser=structured&amp;amp;size=0</code>. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-domain-info.html" target="_blank">Getting Information about a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDomainsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: DomainNames
          in: query
          required: false
          description: The names of the domains you want to include in the response.
          schema:
            type: array
            description: A list of domain names.
            items:
              $ref: '#/components/schemas/DomainName'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDomains
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDomains
      operationId: POST_DescribeDomains
      description: 'Gets information about the search domains owned by this account. Can be limited to specific domains. Shows all domains by default. To get the number of searchable documents in a domain, use the console or submit a <code>matchall</code> request to your domain''s search endpoint: <code>q=matchall&amp;amp;q.parser=structured&amp;amp;size=0</code>. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-domain-info.html" target="_blank">Getting Information about a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDomainsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDomainsRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDomains
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DescribeExpressions:
    get:
      x-aws-operation-name: DescribeExpressions
      operationId: GET_DescribeExpressions
      description: 'Gets the expressions configured for the search domain. Can be limited to specific expressions by name. By default, shows all expressions and includes any pending changes to the configuration. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeExpressionsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: The name of the domain you want to describe.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: ExpressionNames
          in: query
          required: false
          description: 'Limits the <code><a>DescribeExpressions</a></code> response to the specified expressions. If not specified, all expressions are shown.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StandardName'
        - name: Deployed
          in: query
          required: false
          description: Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeExpressions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeExpressions
      operationId: POST_DescribeExpressions
      description: 'Gets the expressions configured for the search domain. Can be limited to specific expressions by name. By default, shows all expressions and includes any pending changes to the configuration. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeExpressionsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeExpressionsRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeExpressions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DescribeIndexFields:
    get:
      x-aws-operation-name: DescribeIndexFields
      operationId: GET_DescribeIndexFields
      description: 'Gets information about the index fields configured for the search domain. Can be limited to specific fields by name. By default, shows all fields and includes any pending changes to the configuration. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-domain-info.html" target="_blank">Getting Domain Information</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIndexFieldsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: The name of the domain you want to describe.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: FieldNames
          in: query
          required: false
          description: 'A list of the index fields you want to describe. If not specified, information is returned for all configured index fields.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DynamicFieldName'
        - name: Deployed
          in: query
          required: false
          description: Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeIndexFields
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeIndexFields
      operationId: POST_DescribeIndexFields
      description: 'Gets information about the index fields configured for the search domain. Can be limited to specific fields by name. By default, shows all fields and includes any pending changes to the configuration. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-domain-info.html" target="_blank">Getting Domain Information</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIndexFieldsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeIndexFieldsRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeIndexFields
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DescribeScalingParameters:
    get:
      x-aws-operation-name: DescribeScalingParameters
      operationId: GET_DescribeScalingParameters
      description: 'Gets the scaling parameters configured for a domain. A domain''s scaling parameters specify the desired search instance type and replication count. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-scaling-options.html" target="_blank">Configuring Scaling Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeScalingParametersResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeScalingParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeScalingParameters
      operationId: POST_DescribeScalingParameters
      description: 'Gets the scaling parameters configured for a domain. A domain''s scaling parameters specify the desired search instance type and replication count. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-scaling-options.html" target="_blank">Configuring Scaling Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeScalingParametersResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeScalingParametersRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeScalingParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DescribeServiceAccessPolicies:
    get:
      x-aws-operation-name: DescribeServiceAccessPolicies
      operationId: GET_DescribeServiceAccessPolicies
      description: 'Gets information about the access policies that control access to the domain''s document and search endpoints. By default, shows the configuration with any pending changes. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html" target="_blank">Configuring Access for a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeServiceAccessPoliciesResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: The name of the domain you want to describe.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: Deployed
          in: query
          required: false
          description: Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeServiceAccessPolicies
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeServiceAccessPolicies
      operationId: POST_DescribeServiceAccessPolicies
      description: 'Gets information about the access policies that control access to the domain''s document and search endpoints. By default, shows the configuration with any pending changes. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html" target="_blank">Configuring Access for a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeServiceAccessPoliciesResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeServiceAccessPoliciesRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeServiceAccessPolicies
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=DescribeSuggesters:
    get:
      x-aws-operation-name: DescribeSuggesters
      operationId: GET_DescribeSuggesters
      description: 'Gets the suggesters configured for a domain. A suggester enables you to display possible matches before users finish typing their queries. Can be limited to specific suggesters by name. By default, shows all suggesters and includes any pending changes to the configuration. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html" target="_blank">Getting Search Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSuggestersResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: The name of the domain you want to describe.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: SuggesterNames
          in: query
          required: false
          description: The suggesters you want to describe.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StandardName'
        - name: Deployed
          in: query
          required: false
          description: Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSuggesters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSuggesters
      operationId: POST_DescribeSuggesters
      description: 'Gets the suggesters configured for a domain. A suggester enables you to display possible matches before users finish typing their queries. Can be limited to specific suggesters by name. By default, shows all suggesters and includes any pending changes to the configuration. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html" target="_blank">Getting Search Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSuggestersResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSuggestersRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSuggesters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=IndexDocuments:
    get:
      x-aws-operation-name: IndexDocuments
      operationId: GET_IndexDocuments
      description: Tells the search domain to start indexing its documents using the latest indexing options. This operation must be invoked to activate options whose <a>OptionStatus</a> is <code>RequiresIndexDocuments</code>.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IndexDocumentsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - IndexDocuments
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: IndexDocuments
      operationId: POST_IndexDocuments
      description: Tells the search domain to start indexing its documents using the latest indexing options. This operation must be invoked to activate options whose <a>OptionStatus</a> is <code>RequiresIndexDocuments</code>.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IndexDocumentsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/IndexDocumentsRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - IndexDocuments
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=ListDomainNames:
    get:
      x-aws-operation-name: ListDomainNames
      operationId: GET_ListDomainNames
      description: Lists all search domains owned by an account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListDomainNamesResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListDomainNames
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListDomainNames
      operationId: POST_ListDomainNames
      description: Lists all search domains owned by an account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListDomainNamesResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListDomainNames
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=UpdateAvailabilityOptions:
    get:
      x-aws-operation-name: UpdateAvailabilityOptions
      operationId: GET_UpdateAvailabilityOptions
      description: 'Configures the availability options for a domain. Enabling the Multi-AZ option expands an Amazon CloudSearch domain to an additional Availability Zone in the same Region to increase fault tolerance in the event of a service disruption. Changes to the Multi-AZ option can take about half an hour to become active. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-availability-options.html" target="_blank">Configuring Availability Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateAvailabilityOptionsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: DisabledOperationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '486':
          description: ValidationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: MultiAZ
          in: query
          required: true
          description: 'You expand an existing search domain to a second Availability Zone by setting the Multi-AZ option to true. Similarly, you can turn off the Multi-AZ option to downgrade the domain to a single Availability Zone by setting the Multi-AZ option to <code>false</code>. '
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateAvailabilityOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdateAvailabilityOptions
      operationId: POST_UpdateAvailabilityOptions
      description: 'Configures the availability options for a domain. Enabling the Multi-AZ option expands an Amazon CloudSearch domain to an additional Availability Zone in the same Region to increase fault tolerance in the event of a service disruption. Changes to the Multi-AZ option can take about half an hour to become active. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-availability-options.html" target="_blank">Configuring Availability Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateAvailabilityOptionsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: DisabledOperationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '486':
          description: ValidationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateAvailabilityOptionsRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateAvailabilityOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=UpdateDomainEndpointOptions:
    get:
      x-aws-operation-name: UpdateDomainEndpointOptions
      operationId: GET_UpdateDomainEndpointOptions
      description: 'Updates the domain''s endpoint options, specifically whether all requests to the domain must arrive over HTTPS. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-domain-endpoint-options.html" target="_blank">Configuring Domain Endpoint Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateDomainEndpointOptionsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: DisabledOperationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '486':
          description: ValidationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: A string that represents the name of a domain.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: DomainEndpointOptions
          in: query
          required: true
          description: 'Whether to require that all requests to the domain arrive over HTTPS. We recommend Policy-Min-TLS-1-2-2019-07 for TLSSecurityPolicy. For compatibility with older clients, the default is Policy-Min-TLS-1-0-2019-07. '
          schema:
            type: object
            properties:
              EnforceHTTPS:
                $ref: '#/components/schemas/Boolean'
                description: Whether the domain is HTTPS only enabled.
              TLSSecurityPolicy:
                $ref: '#/components/schemas/TLSSecurityPolicy'
                description: The minimum required TLS version
            description: The domain's endpoint options.
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateDomainEndpointOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdateDomainEndpointOptions
      operationId: POST_UpdateDomainEndpointOptions
      description: 'Updates the domain''s endpoint options, specifically whether all requests to the domain must arrive over HTTPS. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-domain-endpoint-options.html" target="_blank">Configuring Domain Endpoint Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateDomainEndpointOptionsResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: DisabledOperationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '486':
          description: ValidationException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateDomainEndpointOptionsRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateDomainEndpointOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=UpdateScalingParameters:
    get:
      x-aws-operation-name: UpdateScalingParameters
      operationId: GET_UpdateScalingParameters
      description: 'Configures scaling parameters for a domain. A domain''s scaling parameters specify the desired search instance type and replication count. Amazon CloudSearch will still automatically scale your domain based on the volume of data and traffic, but not below the desired instance type and replication count. If the Multi-AZ option is enabled, these values control the resources used per Availability Zone. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-scaling-options.html" target="_blank">Configuring Scaling Options</a> in the <i>Amazon CloudSearch Developer Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateScalingParametersResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: ScalingParameters
          in: query
          required: true
          description: ''
          schema:
            type: object
            properties:
              DesiredInstanceType:
                $ref: '#/components/schemas/PartitionInstanceType'
                description: 'The instance type that you want to preconfigure for your domain. For example, <code>search.m1.small</code>.'
              DesiredReplicationCount:
                $ref: '#/components/schemas/UIntValue'
                description: The number of replicas you want to preconfigure for each index partition.
              DesiredPartitionCount:
                $ref: '#/components/schemas/UIntValue'
                description: The number of partitions you want to preconfigure for your domain. Only valid when you select <code>m2.2xlarge</code> as the desired instance type.
            description: The desired instance type and desired number of replicas of each index partition.
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateScalingParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdateScalingParameters
      operationId: POST_UpdateScalingParameters
      description: 'Configures scaling parameters for a domain. A domain''s scaling parameters specify the desired search instance type and replication count. Amazon CloudSearch will still automatically scale your domain based on the volume of data and traffic, but not below the desired instance type and replication count. If the Multi-AZ option is enabled, these values control the resources used per Availability Zone. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-scaling-options.html" target="_blank">Configuring Scaling Options</a> in the <i>Amazon CloudSearch Developer Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateScalingParametersResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateScalingParametersRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateScalingParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
  /#Action=UpdateServiceAccessPolicies:
    get:
      x-aws-operation-name: UpdateServiceAccessPolicies
      operationId: GET_UpdateServiceAccessPolicies
      description: 'Configures the access rules that control access to the domain''s document and search endpoints. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html" target="_blank"> Configuring Access for an Amazon CloudSearch Domain</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateServiceAccessPoliciesResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
      parameters:
        - name: DomainName
          in: query
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: AccessPolicies
          in: query
          required: true
          description: 'The access rules you want to configure. These rules replace any existing rules. '
          schema:
            type: string
            description: 'Access rules for a domain''s document or search service endpoints. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html" target="_blank">Configuring Access for a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>. The maximum size of a policy document is 100 KB.'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateServiceAccessPolicies
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdateServiceAccessPolicies
      operationId: POST_UpdateServiceAccessPolicies
      description: 'Configures the access rules that control access to the domain''s document and search endpoints. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html" target="_blank"> Configuring Access for an Amazon CloudSearch Domain</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateServiceAccessPoliciesResponse'
        '480':
          description: BaseException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InvalidTypeException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateServiceAccessPoliciesRequest'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateServiceAccessPolicies
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-01-01'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BuildSuggestersResponse:
      type: object
      properties:
        FieldNames:
          $ref: '#/components/schemas/FieldNameList'
      description: The result of a <code>BuildSuggester</code> request. Contains a list of the fields used for suggestions.
    BaseException: {}
    InternalException: {}
    ResourceNotFoundException: {}
    CreateDomainResponse:
      type: object
      properties:
        DomainStatus:
          $ref: '#/components/schemas/DomainStatus'
      description: The result of a <code>CreateDomainRequest</code>. Contains the status of a newly created domain.
    LimitExceededException: {}
    ResourceAlreadyExistsException: {}
    ValidationException: {}
    DefineAnalysisSchemeResponse:
      type: object
      required:
        - AnalysisScheme
      properties:
        AnalysisScheme:
          $ref: '#/components/schemas/AnalysisSchemeStatus'
      description: The result of a <code><a>DefineAnalysisScheme</a></code> request. Contains the status of the newly-configured analysis scheme.
    StandardName:
      type: string
      pattern: '[a-z][a-z0-9_]*'
      description: 'Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).'
      minLength: 1
      maxLength: 64
    AnalysisSchemeLanguage:
      type: string
      enum:
        - ar
        - bg
        - ca
        - cs
        - da
        - de
        - el
        - en
        - es
        - eu
        - fa
        - fi
        - fr
        - ga
        - gl
        - he
        - hi
        - hu
        - hy
        - id
        - it
        - ja
        - ko
        - lv
        - mul
        - nl
        - 'no'
        - pt
        - ro
        - ru
        - sv
        - th
        - tr
        - zh-Hans
        - zh-Hant
      description: 'An <a href="http://tools.ietf.org/html/rfc4646" target="_blank">IETF RFC 4646</a> language code or <code>mul</code> for multiple languages.'
    AnalysisOptions:
      type: object
      properties:
        Synonyms:
          $ref: '#/components/schemas/String'
          description: 'A JSON object that defines synonym groups and aliases. A synonym group is an array of arrays, where each sub-array is a group of terms where each term in the group is considered a synonym of every other term in the group. The aliases value is an object that contains a collection of string:value pairs where the string specifies a term and the array of values specifies each of the aliases for that term. An alias is considered a synonym of the specified term, but the term is not considered a synonym of the alias. For more information about specifying synonyms, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html#synonyms">Synonyms</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
        Stopwords:
          $ref: '#/components/schemas/String'
          description: 'A JSON array of terms to ignore during indexing and searching. For example, <code>["a", "an", "the", "of"]</code>. The stopwords dictionary must explicitly list each word you want to ignore. Wildcards and regular expressions are not supported. '
        StemmingDictionary:
          $ref: '#/components/schemas/String'
          description: 'A JSON object that contains a collection of string:value pairs that each map a term to its stem. For example, <code>{"term1": "stem1", "term2": "stem2", "term3": "stem3"}</code>. The stemming dictionary is applied in addition to any algorithmic stemming. This enables you to override the results of the algorithmic stemming to correct specific cases of overstemming or understemming. The maximum size of a stemming dictionary is 500 KB.'
        JapaneseTokenizationDictionary:
          $ref: '#/components/schemas/String'
          description: 'A JSON array that contains a collection of terms, tokens, readings and part of speech for Japanese Tokenizaiton. The Japanese tokenization dictionary enables you to override the default tokenization for selected terms. This is only valid for Japanese language fields.'
        AlgorithmicStemming:
          $ref: '#/components/schemas/AlgorithmicStemming'
          description: 'The level of algorithmic stemming to perform: <code>none</code>, <code>minimal</code>, <code>light</code>, or <code>full</code>. The available levels vary depending on the language. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/text-processing.html#text-processing-settings" target="_blank">Language Specific Text Processing Settings</a> in the <i>Amazon CloudSearch Developer Guide</i> '
      description: 'Synonyms, stopwords, and stemming options for an analysis scheme. Includes tokenization dictionary for Japanese.'
    InvalidTypeException: {}
    DefineExpressionResponse:
      type: object
      required:
        - Expression
      properties:
        Expression:
          $ref: '#/components/schemas/ExpressionStatus'
      description: The result of a <code>DefineExpression</code> request. Contains the status of the newly-configured expression.
    ExpressionValue:
      type: string
      description: 'The expression to evaluate for sorting while processing a search request. The <code>Expression</code> syntax is based on JavaScript expressions. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
      minLength: 1
      maxLength: 10240
    DefineIndexFieldResponse:
      type: object
      required:
        - IndexField
      properties:
        IndexField:
          $ref: '#/components/schemas/IndexFieldStatus'
      description: The result of a <code><a>DefineIndexField</a></code> request. Contains the status of the newly-configured index field.
    DynamicFieldName:
      type: string
      pattern: '([a-z][a-z0-9_]*\*?|\*[a-z0-9_]*)'
      minLength: 1
      maxLength: 64
    IndexFieldType:
      type: string
      enum:
        - int
        - double
        - literal
        - text
        - date
        - latlon
        - int-array
        - double-array
        - literal-array
        - text-array
        - date-array
      description: 'The type of field. The valid options for a field depend on the field type. For more information about the supported field types, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html" target="_blank">Configuring Index Fields</a> in the <i>Amazon CloudSearch Developer Guide</i>.'
    IntOptions:
      type: object
      properties:
        DefaultValue:
          $ref: '#/components/schemas/Long'
          description: A value to use for the field if the field isn't specified for a document. This can be important if you are using the field in an expression and that field is not present in every document.
        SourceField:
          $ref: '#/components/schemas/FieldName'
          description: 'The name of the source field to map to the field. '
        FacetEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether facet information can be returned for the field.
        SearchEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field are searchable.
        ReturnEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field can be returned in the search results.
        SortEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the field can be used to sort the search results.
      description: Options for a 64-bit signed integer field. Present if <code>IndexFieldType</code> specifies the field is of type <code>int</code>. All options are enabled by default.
    DoubleOptions:
      type: object
      properties:
        DefaultValue:
          $ref: '#/components/schemas/Double'
          description: A value to use for the field if the field isn't specified for a document. This can be important if you are using the field in an expression and that field is not present in every document.
        SourceField:
          $ref: '#/components/schemas/FieldName'
          description: 'The name of the source field to map to the field. '
        FacetEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether facet information can be returned for the field.
        SearchEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field are searchable.
        ReturnEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field can be returned in the search results.
        SortEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the field can be used to sort the search results.
      description: Options for a double-precision 64-bit floating point field. Present if <code>IndexFieldType</code> specifies the field is of type <code>double</code>. All options are enabled by default.
    LiteralOptions:
      type: object
      properties:
        DefaultValue:
          $ref: '#/components/schemas/FieldValue'
          description: A value to use for the field if the field isn't specified for a document.
        SourceField:
          $ref: '#/components/schemas/FieldName'
        FacetEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether facet information can be returned for the field.
        SearchEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field are searchable.
        ReturnEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field can be returned in the search results.
        SortEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the field can be used to sort the search results.
      description: Options for literal field. Present if <code>IndexFieldType</code> specifies the field is of type <code>literal</code>. All options are enabled by default.
    TextOptions:
      type: object
      properties:
        DefaultValue:
          $ref: '#/components/schemas/FieldValue'
          description: A value to use for the field if the field isn't specified for a document.
        SourceField:
          $ref: '#/components/schemas/FieldName'
        ReturnEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field can be returned in the search results.
        SortEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the field can be used to sort the search results.
        HighlightEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether highlights can be returned for the field.
        AnalysisScheme:
          $ref: '#/components/schemas/Word'
          description: The name of an analysis scheme for a <code>text</code> field.
      description: Options for text field. Present if <code>IndexFieldType</code> specifies the field is of type <code>text</code>. A <code>text</code> field is always searchable. All options are enabled by default.
    DateOptions:
      type: object
      properties:
        DefaultValue:
          $ref: '#/components/schemas/FieldValue'
          description: A value to use for the field if the field isn't specified for a document.
        SourceField:
          $ref: '#/components/schemas/FieldName'
        FacetEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether facet information can be returned for the field.
        SearchEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field are searchable.
        ReturnEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field can be returned in the search results.
        SortEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the field can be used to sort the search results.
      description: 'Options for a date field. Dates and times are specified in UTC (Coordinated Universal Time) according to IETF RFC3339: yyyy-mm-ddT00:00:00Z. Present if <code>IndexFieldType</code> specifies the field is of type <code>date</code>. All options are enabled by default.'
    LatLonOptions:
      type: object
      properties:
        DefaultValue:
          $ref: '#/components/schemas/FieldValue'
          description: A value to use for the field if the field isn't specified for a document.
        SourceField:
          $ref: '#/components/schemas/FieldName'
        FacetEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether facet information can be returned for the field.
        SearchEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field are searchable.
        ReturnEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field can be returned in the search results.
        SortEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the field can be used to sort the search results.
      description: Options for a latlon field. A latlon field contains a location stored as a latitude and longitude value pair. Present if <code>IndexFieldType</code> specifies the field is of type <code>latlon</code>. All options are enabled by default.
    IntArrayOptions:
      type: object
      properties:
        DefaultValue:
          $ref: '#/components/schemas/Long'
          description: A value to use for the field if the field isn't specified for a document.
        SourceFields:
          $ref: '#/components/schemas/FieldNameCommaList'
          description: 'A list of source fields to map to the field. '
        FacetEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether facet information can be returned for the field.
        SearchEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field are searchable.
        ReturnEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field can be returned in the search results.
      description: Options for a field that contains an array of 64-bit signed integers. Present if <code>IndexFieldType</code> specifies the field is of type <code>int-array</code>. All options are enabled by default.
    DoubleArrayOptions:
      type: object
      properties:
        DefaultValue:
          $ref: '#/components/schemas/Double'
          description: A value to use for the field if the field isn't specified for a document.
        SourceFields:
          $ref: '#/components/schemas/FieldNameCommaList'
          description: 'A list of source fields to map to the field. '
        FacetEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether facet information can be returned for the field.
        SearchEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field are searchable.
        ReturnEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field can be returned in the search results.
      description: Options for a field that contains an array of double-precision 64-bit floating point values. Present if <code>IndexFieldType</code> specifies the field is of type <code>double-array</code>. All options are enabled by default.
    LiteralArrayOptions:
      type: object
      properties:
        DefaultValue:
          $ref: '#/components/schemas/FieldValue'
          description: A value to use for the field if the field isn't specified for a document.
        SourceFields:
          $ref: '#/components/schemas/FieldNameCommaList'
          description: 'A list of source fields to map to the field. '
        FacetEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether facet information can be returned for the field.
        SearchEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field are searchable.
        ReturnEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field can be returned in the search results.
      description: Options for a field that contains an array of literal strings. Present if <code>IndexFieldType</code> specifies the field is of type <code>literal-array</code>. All options are enabled by default.
    TextArrayOptions:
      type: object
      properties:
        DefaultValue:
          $ref: '#/components/schemas/FieldValue'
          description: A value to use for the field if the field isn't specified for a document.
        SourceFields:
          $ref: '#/components/schemas/FieldNameCommaList'
          description: 'A list of source fields to map to the field. '
        ReturnEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field can be returned in the search results.
        HighlightEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether highlights can be returned for the field.
        AnalysisScheme:
          $ref: '#/components/schemas/Word'
          description: The name of an analysis scheme for a <code>text-array</code> field.
      description: Options for a field that contains an array of text strings. Present if <code>IndexFieldType</code> specifies the field is of type <code>text-array</code>. A <code>text-array</code> field is always searchable. All options are enabled by default.
    DateArrayOptions:
      type: object
      properties:
        DefaultValue:
          $ref: '#/components/schemas/FieldValue'
          description: A value to use for the field if the field isn't specified for a document.
        SourceFields:
          $ref: '#/components/schemas/FieldNameCommaList'
          description: 'A list of source fields to map to the field. '
        FacetEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether facet information can be returned for the field.
        SearchEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field are searchable.
        ReturnEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Whether the contents of the field can be returned in the search results.
      description: Options for a field that contains an array of dates. Present if <code>IndexFieldType</code> specifies the field is of type <code>date-array</code>. All options are enabled by default.
    DefineSuggesterResponse:
      type: object
      required:
        - Suggester
      properties:
        Suggester:
          $ref: '#/components/schemas/SuggesterStatus'
      description: The result of a <code>DefineSuggester</code> request. Contains the status of the newly-configured suggester.
    DocumentSuggesterOptions:
      type: object
      required:
        - SourceField
      properties:
        SourceField:
          $ref: '#/components/schemas/FieldName'
          description: 'The name of the index field you want to use for suggestions. '
        FuzzyMatching:
          $ref: '#/components/schemas/SuggesterFuzzyMatching'
          description: 'The level of fuzziness allowed when suggesting matches for a string: <code>none</code>, <code>low</code>, or <code>high</code>. With none, the specified string is treated as an exact prefix. With low, suggestions must differ from the specified string by no more than one character. With high, suggestions can differ by up to two characters. The default is none. '
        SortExpression:
          $ref: '#/components/schemas/String'
          description: 'An expression that computes a score for each suggestion to control how they are sorted. The scores are rounded to the nearest integer, with a floor of 0 and a ceiling of 2^31-1. A document''s relevance score is not computed for suggestions, so sort expressions cannot reference the <code>_score</code> value. To sort suggestions using a numeric field or existing expression, simply specify the name of the field or expression. If no expression is configured for the suggester, the suggestions are sorted with the closest matches listed first.'
      description: Options for a search suggester.
    DeleteAnalysisSchemeResponse:
      type: object
      required:
        - AnalysisScheme
      properties:
        AnalysisScheme:
          $ref: '#/components/schemas/AnalysisSchemeStatus'
          description: The status of the analysis scheme being deleted.
      description: The result of a <code>DeleteAnalysisScheme</code> request. Contains the status of the deleted analysis scheme.
    DeleteDomainResponse:
      type: object
      properties:
        DomainStatus:
          $ref: '#/components/schemas/DomainStatus'
      description: 'The result of a <code>DeleteDomain</code> request. Contains the status of a newly deleted domain, or no status if the domain has already been completely deleted.'
    DeleteExpressionResponse:
      type: object
      required:
        - Expression
      properties:
        Expression:
          $ref: '#/components/schemas/ExpressionStatus'
          description: The status of the expression being deleted.
      description: The result of a <code><a>DeleteExpression</a></code> request. Specifies the expression being deleted.
    DeleteIndexFieldResponse:
      type: object
      required:
        - IndexField
      properties:
        IndexField:
          $ref: '#/components/schemas/IndexFieldStatus'
          description: The status of the index field being deleted.
      description: The result of a <code><a>DeleteIndexField</a></code> request.
    DeleteSuggesterResponse:
      type: object
      required:
        - Suggester
      properties:
        Suggester:
          $ref: '#/components/schemas/SuggesterStatus'
          description: The status of the suggester being deleted.
      description: The result of a <code>DeleteSuggester</code> request. Contains the status of the deleted suggester.
    DescribeAnalysisSchemesResponse:
      type: object
      required:
        - AnalysisSchemes
      properties:
        AnalysisSchemes:
          $ref: '#/components/schemas/AnalysisSchemeStatusList'
          description: The analysis scheme descriptions.
      description: The result of a <code>DescribeAnalysisSchemes</code> request. Contains the analysis schemes configured for the domain specified in the request.
    DescribeAvailabilityOptionsResponse:
      type: object
      properties:
        AvailabilityOptions:
          $ref: '#/components/schemas/AvailabilityOptionsStatus'
          description: 'The availability options configured for the domain. Indicates whether Multi-AZ is enabled for the domain. '
      description: 'The result of a <code>DescribeAvailabilityOptions</code> request. Indicates whether or not the Multi-AZ option is enabled for the domain specified in the request. '
    DisabledOperationException: {}
    DescribeDomainEndpointOptionsResponse:
      type: object
      properties:
        DomainEndpointOptions:
          $ref: '#/components/schemas/DomainEndpointOptionsStatus'
          description: The status and configuration of a search domain's endpoint options.
      description: 'The result of a <code>DescribeDomainEndpointOptions</code> request. Contains the status and configuration of a search domain''s endpoint options. '
    DescribeDomainsResponse:
      type: object
      required:
        - DomainStatusList
      properties:
        DomainStatusList:
          $ref: '#/components/schemas/DomainStatusList'
      description: The result of a <code>DescribeDomains</code> request. Contains the status of the domains specified in the request or all domains owned by the account.
    DomainName:
      type: string
      pattern: '[a-z][a-z0-9\-]+'
      description: 'A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
      minLength: 3
      maxLength: 28
    DescribeExpressionsResponse:
      type: object
      required:
        - Expressions
      properties:
        Expressions:
          $ref: '#/components/schemas/ExpressionStatusList'
          description: The expressions configured for the domain.
      description: The result of a <code>DescribeExpressions</code> request. Contains the expressions configured for the domain specified in the request.
    DescribeIndexFieldsResponse:
      type: object
      required:
        - IndexFields
      properties:
        IndexFields:
          $ref: '#/components/schemas/IndexFieldStatusList'
          description: The index fields configured for the domain.
      description: The result of a <code>DescribeIndexFields</code> request. Contains the index fields configured for the domain specified in the request.
    DescribeScalingParametersResponse:
      type: object
      required:
        - ScalingParameters
      properties:
        ScalingParameters:
          $ref: '#/components/schemas/ScalingParametersStatus'
      description: The result of a <code>DescribeScalingParameters</code> request. Contains the scaling parameters configured for the domain specified in the request.
    DescribeServiceAccessPoliciesResponse:
      type: object
      required:
        - AccessPolicies
      properties:
        AccessPolicies:
          $ref: '#/components/schemas/AccessPoliciesStatus'
          description: The access rules configured for the domain specified in the request.
      description: The result of a <code>DescribeServiceAccessPolicies</code> request.
    DescribeSuggestersResponse:
      type: object
      required:
        - Suggesters
      properties:
        Suggesters:
          $ref: '#/components/schemas/SuggesterStatusList'
          description: The suggesters configured for the domain specified in the request.
      description: The result of a <code>DescribeSuggesters</code> request.
    IndexDocumentsResponse:
      type: object
      properties:
        FieldNames:
          $ref: '#/components/schemas/FieldNameList'
          description: The names of the fields that are currently being indexed.
      description: 'The result of an <code>IndexDocuments</code> request. Contains the status of the indexing operation, including the fields being indexed.'
    ListDomainNamesResponse:
      type: object
      properties:
        DomainNames:
          $ref: '#/components/schemas/DomainNameMap'
          description: The names of the search domains owned by an account.
      description: The result of a <code>ListDomainNames</code> request. Contains a list of the domains owned by an account.
    UpdateAvailabilityOptionsResponse:
      type: object
      properties:
        AvailabilityOptions:
          $ref: '#/components/schemas/AvailabilityOptionsStatus'
          description: 'The newly-configured availability options. Indicates whether Multi-AZ is enabled for the domain. '
      description: 'The result of a <code>UpdateAvailabilityOptions</code> request. Contains the status of the domain''s availability options. '
    UpdateDomainEndpointOptionsResponse:
      type: object
      properties:
        DomainEndpointOptions:
          $ref: '#/components/schemas/DomainEndpointOptionsStatus'
          description: The newly-configured domain endpoint options.
      description: 'The result of a <code>UpdateDomainEndpointOptions</code> request. Contains the configuration and status of the domain''s endpoint options. '
    Boolean:
      type: boolean
    TLSSecurityPolicy:
      type: string
      enum:
        - Policy-Min-TLS-1-0-2019-07
        - Policy-Min-TLS-1-2-2019-07
      description: The minimum required TLS version.
    UpdateScalingParametersResponse:
      type: object
      required:
        - ScalingParameters
      properties:
        ScalingParameters:
          $ref: '#/components/schemas/ScalingParametersStatus'
      description: The result of a <code>UpdateScalingParameters</code> request. Contains the status of the newly-configured scaling parameters.
    PartitionInstanceType:
      type: string
      enum:
        - search.m1.small
        - search.m1.large
        - search.m2.xlarge
        - search.m2.2xlarge
        - search.m3.medium
        - search.m3.large
        - search.m3.xlarge
        - search.m3.2xlarge
        - search.small
        - search.medium
        - search.large
        - search.xlarge
        - search.2xlarge
        - search.previousgeneration.small
        - search.previousgeneration.large
        - search.previousgeneration.xlarge
        - search.previousgeneration.2xlarge
      description: The instance type (such as <code>search.m1.small</code>) on which an index partition is hosted.
    UIntValue:
      type: integer
      minimum: 0
    UpdateServiceAccessPoliciesResponse:
      type: object
      required:
        - AccessPolicies
      properties:
        AccessPolicies:
          $ref: '#/components/schemas/AccessPoliciesStatus'
          description: The access rules configured for the domain.
      description: The result of an <code>UpdateServiceAccessPolicies</code> request. Contains the new access policies.
    APIVersion:
      type: string
      description: 'The Amazon CloudSearch API version for a domain: 2011-02-01 or 2013-01-01.'
    ARN:
      type: string
      description: 'The Amazon Resource Name (ARN) of the search domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.'
    PolicyDocument:
      type: string
      description: 'Access rules for a domain''s document or search service endpoints. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html" target="_blank">Configuring Access for a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>. The maximum size of a policy document is 100 KB.'
    OptionStatus:
      type: object
      required:
        - CreationDate
        - UpdateDate
        - State
      properties:
        CreationDate:
          $ref: '#/components/schemas/UpdateTimestamp'
          description: A timestamp for when this option was created.
        UpdateDate:
          $ref: '#/components/schemas/UpdateTimestamp'
          description: A timestamp for when this option was last updated.
        UpdateVersion:
          $ref: '#/components/schemas/UIntValue'
          description: A unique integer that indicates when this option was last updated.
        State:
          $ref: '#/components/schemas/OptionState'
          description: '<p>The state of processing a change to an option. Possible values:</p><ul> <li><code>RequiresIndexDocuments</code>: the option''s latest value will not be deployed until <a>IndexDocuments</a> has been called and indexing is complete.</li> <li><code>Processing</code>: the option''s latest value is in the process of being activated. </li> <li><code>Active</code>: the option''s latest value is completely deployed.</li> <li><code>FailedToValidate</code>: the option value is not compatible with the domain''s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.</li> </ul>'
        PendingDeletion:
          $ref: '#/components/schemas/Boolean'
          description: Indicates that the option will be deleted once processing is complete.
      description: The status of domain configuration option.
    AccessPoliciesStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/PolicyDocument'
        Status:
          $ref: '#/components/schemas/OptionStatus'
      description: 'The configured access rules for the domain''s document and search endpoints, and the current status of those rules.'
    AlgorithmicStemming:
      type: string
      enum:
        - none
        - minimal
        - light
        - full
    String:
      type: string
    AnalysisScheme:
      type: object
      required:
        - AnalysisSchemeName
        - AnalysisSchemeLanguage
      properties:
        AnalysisSchemeName:
          $ref: '#/components/schemas/StandardName'
        AnalysisSchemeLanguage:
          $ref: '#/components/schemas/AnalysisSchemeLanguage'
        AnalysisOptions:
          $ref: '#/components/schemas/AnalysisOptions'
      description: 'Configuration information for an analysis scheme. Each analysis scheme has a unique name and specifies the language of the text to be processed. The following options can be configured for an analysis scheme: <code>Synonyms</code>, <code>Stopwords</code>, <code>StemmingDictionary</code>, <code>JapaneseTokenizationDictionary</code> and <code>AlgorithmicStemming</code>.'
    AnalysisSchemeStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/AnalysisScheme'
        Status:
          $ref: '#/components/schemas/OptionStatus'
      description: The status and configuration of an <code>AnalysisScheme</code>.
    AnalysisSchemeStatusList:
      type: array
      description: A list of the analysis schemes configured for a domain.
      items:
        $ref: '#/components/schemas/AnalysisSchemeStatus'
    MultiAZ:
      type: boolean
    AvailabilityOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/MultiAZ'
          description: The availability options configured for the domain.
        Status:
          $ref: '#/components/schemas/OptionStatus'
      description: The status and configuration of the domain's availability options.
    BuildSuggestersRequest:
      type: object
      required:
        - DomainName
      title: BuildSuggestersRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
      description: Container for the parameters to the <code><a>BuildSuggester</a></code> operation. Specifies the name of the domain you want to update.
    FieldNameList:
      type: array
      description: A list of field names.
      items:
        $ref: '#/components/schemas/FieldName'
    CreateDomainRequest:
      type: object
      required:
        - DomainName
      title: CreateDomainRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: 'A name for the domain you are creating. Allowed characters are a-z (lower-case letters), 0-9, and hyphen (-). Domain names must start with a letter or number and be at least 3 and no more than 28 characters long.'
      description: Container for the parameters to the <code><a>CreateDomain</a></code> operation. Specifies a name for the new search domain.
    DomainStatus:
      type: object
      required:
        - DomainId
        - DomainName
        - RequiresIndexDocuments
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
        DomainName:
          $ref: '#/components/schemas/DomainName'
        ARN:
          $ref: '#/components/schemas/ARN'
        Created:
          $ref: '#/components/schemas/Boolean'
          description: True if the search domain is created. It can take several minutes to initialize a domain when <a>CreateDomain</a> is called. Newly created search domains are returned from <a>DescribeDomains</a> with a false value for Created until domain creation is complete.
        Deleted:
          $ref: '#/components/schemas/Boolean'
          description: True if the search domain has been deleted. The system must clean up resources dedicated to the search domain when <a>DeleteDomain</a> is called. Newly deleted search domains are returned from <a>DescribeDomains</a> with a true value for IsDeleted for several minutes until resource cleanup is complete.
        DocService:
          $ref: '#/components/schemas/ServiceEndpoint'
          description: The service endpoint for updating documents in a search domain.
        SearchService:
          $ref: '#/components/schemas/ServiceEndpoint'
          description: The service endpoint for requesting search results from a search domain.
        RequiresIndexDocuments:
          $ref: '#/components/schemas/Boolean'
          description: True if <a>IndexDocuments</a> needs to be called to activate the current domain configuration.
        Processing:
          $ref: '#/components/schemas/Boolean'
          description: True if processing is being done to activate the current domain configuration.
        SearchInstanceType:
          $ref: '#/components/schemas/SearchInstanceType'
          description: The instance type that is being used to process search requests.
        SearchPartitionCount:
          $ref: '#/components/schemas/PartitionCount'
          description: The number of partitions across which the search index is spread.
        SearchInstanceCount:
          $ref: '#/components/schemas/InstanceCount'
          description: The number of search instances that are available to process search requests.
        Limits:
          $ref: '#/components/schemas/Limits'
      description: The current status of the search domain.
    FieldValue:
      type: string
      description: The value of a field attribute.
      minLength: 0
      maxLength: 1024
    FieldNameCommaList:
      type: string
      pattern: '\s*[a-z*][a-z0-9_]*\*?\s*(,\s*[a-z*][a-z0-9_]*\*?\s*)*'
    FieldName:
      type: string
      pattern: '[a-z][a-z0-9_]*'
      description: '<p>A string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field''s name defines a pattern that begins or ends with a wildcard. Any document fields that don''t map to a regular index field but do match a dynamic field''s pattern are configured with the dynamic field''s indexing options. </p> <p>Regular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported. </p> <p>The name <code>score</code> is reserved and cannot be used as a field name. To reference a document''s ID, you can use the name <code>_id</code>. </p>'
      minLength: 1
      maxLength: 64
    DefineAnalysisSchemeRequest:
      type: object
      required:
        - DomainName
        - AnalysisScheme
      title: DefineAnalysisSchemeRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        AnalysisScheme:
          $ref: '#/components/schemas/AnalysisScheme'
      description: Container for the parameters to the <code><a>DefineAnalysisScheme</a></code> operation. Specifies the name of the domain you want to update and the analysis scheme configuration.
    Expression:
      type: object
      required:
        - ExpressionName
        - ExpressionValue
      properties:
        ExpressionName:
          $ref: '#/components/schemas/StandardName'
        ExpressionValue:
          $ref: '#/components/schemas/ExpressionValue'
      description: 'A named expression that can be evaluated at search time. Can be used to sort the search results, define other expressions, or return computed information in the search results. '
    DefineExpressionRequest:
      type: object
      required:
        - DomainName
        - Expression
      title: DefineExpressionRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        Expression:
          $ref: '#/components/schemas/Expression'
      description: Container for the parameters to the <code><a>DefineExpression</a></code> operation. Specifies the name of the domain you want to update and the expression you want to configure.
    ExpressionStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/Expression'
          description: The expression that is evaluated for sorting while processing a search request.
        Status:
          $ref: '#/components/schemas/OptionStatus'
      description: The value of an <code>Expression</code> and its current status.
    IndexField:
      type: object
      required:
        - IndexFieldName
        - IndexFieldType
      properties:
        IndexFieldName:
          $ref: '#/components/schemas/DynamicFieldName'
          description: '<p>A string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field''s name defines a pattern that begins or ends with a wildcard. Any document fields that don''t map to a regular index field but do match a dynamic field''s pattern are configured with the dynamic field''s indexing options. </p> <p>Regular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported. </p> <p>The name <code>score</code> is reserved and cannot be used as a field name. To reference a document''s ID, you can use the name <code>_id</code>. </p>'
        IndexFieldType:
          $ref: '#/components/schemas/IndexFieldType'
        IntOptions:
          $ref: '#/components/schemas/IntOptions'
        DoubleOptions:
          $ref: '#/components/schemas/DoubleOptions'
        LiteralOptions:
          $ref: '#/components/schemas/LiteralOptions'
        TextOptions:
          $ref: '#/components/schemas/TextOptions'
        DateOptions:
          $ref: '#/components/schemas/DateOptions'
        LatLonOptions:
          $ref: '#/components/schemas/LatLonOptions'
        IntArrayOptions:
          $ref: '#/components/schemas/IntArrayOptions'
        DoubleArrayOptions:
          $ref: '#/components/schemas/DoubleArrayOptions'
        LiteralArrayOptions:
          $ref: '#/components/schemas/LiteralArrayOptions'
        TextArrayOptions:
          $ref: '#/components/schemas/TextArrayOptions'
        DateArrayOptions:
          $ref: '#/components/schemas/DateArrayOptions'
      description: 'Configuration information for a field in the index, including its name, type, and options. The supported options depend on the <code><a>IndexFieldType</a></code>.'
    DefineIndexFieldRequest:
      type: object
      required:
        - DomainName
        - IndexField
      title: DefineIndexFieldRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        IndexField:
          $ref: '#/components/schemas/IndexField'
          description: 'The index field and field options you want to configure. '
      description: Container for the parameters to the <code><a>DefineIndexField</a></code> operation. Specifies the name of the domain you want to update and the index field configuration.
    IndexFieldStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/IndexField'
        Status:
          $ref: '#/components/schemas/OptionStatus'
      description: The value of an <code>IndexField</code> and its current status.
    Suggester:
      type: object
      required:
        - SuggesterName
        - DocumentSuggesterOptions
      properties:
        SuggesterName:
          $ref: '#/components/schemas/StandardName'
        DocumentSuggesterOptions:
          $ref: '#/components/schemas/DocumentSuggesterOptions'
      description: 'Configuration information for a search suggester. Each suggester has a unique name and specifies the text field you want to use for suggestions. The following options can be configured for a suggester: <code>FuzzyMatching</code>, <code>SortExpression</code>. '
    DefineSuggesterRequest:
      type: object
      required:
        - DomainName
        - Suggester
      title: DefineSuggesterRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        Suggester:
          $ref: '#/components/schemas/Suggester'
      description: Container for the parameters to the <code><a>DefineSuggester</a></code> operation. Specifies the name of the domain you want to update and the suggester configuration.
    SuggesterStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/Suggester'
        Status:
          $ref: '#/components/schemas/OptionStatus'
      description: The value of a <code>Suggester</code> and its current status.
    DeleteAnalysisSchemeRequest:
      type: object
      required:
        - DomainName
        - AnalysisSchemeName
      title: DeleteAnalysisSchemeRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        AnalysisSchemeName:
          $ref: '#/components/schemas/StandardName'
          description: The name of the analysis scheme you want to delete.
      description: 'Container for the parameters to the <code><a>DeleteAnalysisScheme</a></code> operation. Specifies the name of the domain you want to update and the analysis scheme you want to delete. '
    DeleteDomainRequest:
      type: object
      required:
        - DomainName
      title: DeleteDomainRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain you want to permanently delete.
      description: Container for the parameters to the <code><a>DeleteDomain</a></code> operation. Specifies the name of the domain you want to delete.
    DeleteExpressionRequest:
      type: object
      required:
        - DomainName
        - ExpressionName
      title: DeleteExpressionRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        ExpressionName:
          $ref: '#/components/schemas/StandardName'
          description: The name of the <code><a>Expression</a></code> to delete.
      description: Container for the parameters to the <code><a>DeleteExpression</a></code> operation. Specifies the name of the domain you want to update and the name of the expression you want to delete.
    DeleteIndexFieldRequest:
      type: object
      required:
        - DomainName
        - IndexFieldName
      title: DeleteIndexFieldRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        IndexFieldName:
          $ref: '#/components/schemas/DynamicFieldName'
          description: The name of the index field your want to remove from the domain's indexing options.
      description: Container for the parameters to the <code><a>DeleteIndexField</a></code> operation. Specifies the name of the domain you want to update and the name of the index field you want to delete.
    DeleteSuggesterRequest:
      type: object
      required:
        - DomainName
        - SuggesterName
      title: DeleteSuggesterRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        SuggesterName:
          $ref: '#/components/schemas/StandardName'
          description: Specifies the name of the suggester you want to delete.
      description: Container for the parameters to the <code><a>DeleteSuggester</a></code> operation. Specifies the name of the domain you want to update and name of the suggester you want to delete.
    StandardNameList:
      type: array
      items:
        $ref: '#/components/schemas/StandardName'
    DescribeAnalysisSchemesRequest:
      type: object
      required:
        - DomainName
      title: DescribeAnalysisSchemesRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain you want to describe.
        AnalysisSchemeNames:
          $ref: '#/components/schemas/StandardNameList'
          description: The analysis schemes you want to describe.
        Deployed:
          $ref: '#/components/schemas/Boolean'
          description: Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
      description: 'Container for the parameters to the <code><a>DescribeAnalysisSchemes</a></code> operation. Specifies the name of the domain you want to describe. To limit the response to particular analysis schemes, specify the names of the analysis schemes you want to describe. To show the active configuration and exclude any pending changes, set the <code>Deployed</code> option to <code>true</code>. '
    DescribeAvailabilityOptionsRequest:
      type: object
      required:
        - DomainName
      title: DescribeAvailabilityOptionsRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain you want to describe.
        Deployed:
          $ref: '#/components/schemas/Boolean'
          description: Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
      description: 'Container for the parameters to the <code><a>DescribeAvailabilityOptions</a></code> operation. Specifies the name of the domain you want to describe. To show the active configuration and exclude any pending changes, set the Deployed option to <code>true</code>.'
    DescribeDomainEndpointOptionsRequest:
      type: object
      required:
        - DomainName
      title: DescribeDomainEndpointOptionsRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: A string that represents the name of a domain.
        Deployed:
          $ref: '#/components/schemas/Boolean'
          description: 'Whether to retrieve the latest configuration (which might be in a Processing state) or the current, active configuration. Defaults to <code>false</code>.'
      description: 'Container for the parameters to the <code><a>DescribeDomainEndpointOptions</a></code> operation. Specify the name of the domain you want to describe. To show the active configuration and exclude any pending changes, set the Deployed option to <code>true</code>.'
    DomainEndpointOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/DomainEndpointOptions'
          description: The domain endpoint options configured for the domain.
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: The status of the configured domain endpoint options.
      description: The configuration and status of the domain's endpoint options.
    DomainNameList:
      type: array
      description: A list of domain names.
      items:
        $ref: '#/components/schemas/DomainName'
    DescribeDomainsRequest:
      type: object
      title: DescribeDomainsRequest
      properties:
        DomainNames:
          $ref: '#/components/schemas/DomainNameList'
          description: The names of the domains you want to include in the response.
      description: 'Container for the parameters to the <code><a>DescribeDomains</a></code> operation. By default shows the status of all domains. To restrict the response to particular domains, specify the names of the domains you want to describe.'
    DomainStatusList:
      type: array
      description: A list that contains the status of each requested domain.
      items:
        $ref: '#/components/schemas/DomainStatus'
    DescribeExpressionsRequest:
      type: object
      required:
        - DomainName
      title: DescribeExpressionsRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain you want to describe.
        ExpressionNames:
          $ref: '#/components/schemas/StandardNameList'
          description: 'Limits the <code><a>DescribeExpressions</a></code> response to the specified expressions. If not specified, all expressions are shown.'
        Deployed:
          $ref: '#/components/schemas/Boolean'
          description: Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
      description: 'Container for the parameters to the <code><a>DescribeDomains</a></code> operation. Specifies the name of the domain you want to describe. To restrict the response to particular expressions, specify the names of the expressions you want to describe. To show the active configuration and exclude any pending changes, set the <code>Deployed</code> option to <code>true</code>.'
    ExpressionStatusList:
      type: array
      description: Contains the status of multiple expressions.
      items:
        $ref: '#/components/schemas/ExpressionStatus'
    DynamicFieldNameList:
      type: array
      items:
        $ref: '#/components/schemas/DynamicFieldName'
    DescribeIndexFieldsRequest:
      type: object
      required:
        - DomainName
      title: DescribeIndexFieldsRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain you want to describe.
        FieldNames:
          $ref: '#/components/schemas/DynamicFieldNameList'
          description: 'A list of the index fields you want to describe. If not specified, information is returned for all configured index fields.'
        Deployed:
          $ref: '#/components/schemas/Boolean'
          description: Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
      description: 'Container for the parameters to the <code><a>DescribeIndexFields</a></code> operation. Specifies the name of the domain you want to describe. To restrict the response to particular index fields, specify the names of the index fields you want to describe. To show the active configuration and exclude any pending changes, set the <code>Deployed</code> option to <code>true</code>.'
    IndexFieldStatusList:
      type: array
      description: Contains the status of multiple index fields.
      items:
        $ref: '#/components/schemas/IndexFieldStatus'
    DescribeScalingParametersRequest:
      type: object
      required:
        - DomainName
      title: DescribeScalingParametersRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
      description: 'Container for the parameters to the <code><a>DescribeScalingParameters</a></code> operation. Specifies the name of the domain you want to describe. '
    ScalingParametersStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/ScalingParameters'
        Status:
          $ref: '#/components/schemas/OptionStatus'
      description: 'The status and configuration of a search domain''s scaling parameters. '
    DescribeServiceAccessPoliciesRequest:
      type: object
      required:
        - DomainName
      title: DescribeServiceAccessPoliciesRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain you want to describe.
        Deployed:
          $ref: '#/components/schemas/Boolean'
          description: Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
      description: 'Container for the parameters to the <code><a>DescribeServiceAccessPolicies</a></code> operation. Specifies the name of the domain you want to describe. To show the active configuration and exclude any pending changes, set the <code>Deployed</code> option to <code>true</code>.'
    DescribeSuggestersRequest:
      type: object
      required:
        - DomainName
      title: DescribeSuggestersRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain you want to describe.
        SuggesterNames:
          $ref: '#/components/schemas/StandardNameList'
          description: The suggesters you want to describe.
        Deployed:
          $ref: '#/components/schemas/Boolean'
          description: Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
      description: 'Container for the parameters to the <code><a>DescribeSuggester</a></code> operation. Specifies the name of the domain you want to describe. To restrict the response to particular suggesters, specify the names of the suggesters you want to describe. To show the active configuration and exclude any pending changes, set the <code>Deployed</code> option to <code>true</code>.'
    SuggesterStatusList:
      type: array
      description: Contains the status of multiple suggesters.
      items:
        $ref: '#/components/schemas/SuggesterStatus'
    SuggesterFuzzyMatching:
      type: string
      enum:
        - none
        - low
        - high
    DomainEndpointOptions:
      type: object
      properties:
        EnforceHTTPS:
          $ref: '#/components/schemas/Boolean'
          description: Whether the domain is HTTPS only enabled.
        TLSSecurityPolicy:
          $ref: '#/components/schemas/TLSSecurityPolicy'
          description: The minimum required TLS version
      description: The domain's endpoint options.
    DomainId:
      type: string
      description: An internally generated unique identifier for a domain.
      minLength: 1
      maxLength: 64
    DomainNameMap:
      type: object
      description: A collection of domain names.
      additionalProperties:
        $ref: '#/components/schemas/APIVersion'
    ServiceEndpoint:
      type: object
      properties:
        Endpoint:
          $ref: '#/components/schemas/ServiceUrl'
      description: The endpoint to which service requests can be submitted.
    SearchInstanceType:
      type: string
      description: The instance type (such as <code>search.m1.small</code>) that is being used to process search requests.
    PartitionCount:
      type: integer
      description: The number of partitions used to hold the domain's index.
      minimum: 1
    InstanceCount:
      type: integer
      minimum: 1
    Limits:
      type: object
      required:
        - MaximumReplicationCount
        - MaximumPartitionCount
      properties:
        MaximumReplicationCount:
          $ref: '#/components/schemas/MaximumReplicationCount'
        MaximumPartitionCount:
          $ref: '#/components/schemas/MaximumPartitionCount'
    Double:
      type: number
      format: double
    IndexDocumentsRequest:
      type: object
      required:
        - DomainName
      title: IndexDocumentsRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
      description: Container for the parameters to the <code><a>IndexDocuments</a></code> operation. Specifies the name of the domain you want to re-index.
    Long:
      type: integer
    MaximumReplicationCount:
      type: integer
      minimum: 1
    MaximumPartitionCount:
      type: integer
      minimum: 1
    OptionState:
      type: string
      enum:
        - RequiresIndexDocuments
        - Processing
        - Active
        - FailedToValidate
      description: '<p>The state of processing a change to an option. One of:</p> <ul> <li>RequiresIndexDocuments: The option''s latest value will not be deployed until <a>IndexDocuments</a> has been called and indexing is complete.</li> <li>Processing: The option''s latest value is in the process of being activated.</li> <li>Active: The option''s latest value is fully deployed. </li> <li>FailedToValidate: The option value is not compatible with the domain''s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.</li> </ul>'
    UpdateTimestamp:
      type: string
      format: date-time
    ScalingParameters:
      type: object
      properties:
        DesiredInstanceType:
          $ref: '#/components/schemas/PartitionInstanceType'
          description: 'The instance type that you want to preconfigure for your domain. For example, <code>search.m1.small</code>.'
        DesiredReplicationCount:
          $ref: '#/components/schemas/UIntValue'
          description: The number of replicas you want to preconfigure for each index partition.
        DesiredPartitionCount:
          $ref: '#/components/schemas/UIntValue'
          description: The number of partitions you want to preconfigure for your domain. Only valid when you select <code>m2.2xlarge</code> as the desired instance type.
      description: The desired instance type and desired number of replicas of each index partition.
    ServiceUrl:
      type: string
      description: 'The endpoint to which service requests can be submitted. For example, <code>search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com</code> or <code>doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com</code>.'
    Word:
      type: string
      pattern: '[\S]+'
    UpdateAvailabilityOptionsRequest:
      type: object
      required:
        - DomainName
        - MultiAZ
      title: UpdateAvailabilityOptionsRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        MultiAZ:
          $ref: '#/components/schemas/Boolean'
          description: 'You expand an existing search domain to a second Availability Zone by setting the Multi-AZ option to true. Similarly, you can turn off the Multi-AZ option to downgrade the domain to a single Availability Zone by setting the Multi-AZ option to <code>false</code>. '
      description: Container for the parameters to the <code><a>UpdateAvailabilityOptions</a></code> operation. Specifies the name of the domain you want to update and the Multi-AZ availability option.
    UpdateDomainEndpointOptionsRequest:
      type: object
      required:
        - DomainName
        - DomainEndpointOptions
      title: UpdateDomainEndpointOptionsRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: A string that represents the name of a domain.
        DomainEndpointOptions:
          $ref: '#/components/schemas/DomainEndpointOptions'
          description: 'Whether to require that all requests to the domain arrive over HTTPS. We recommend Policy-Min-TLS-1-2-2019-07 for TLSSecurityPolicy. For compatibility with older clients, the default is Policy-Min-TLS-1-0-2019-07. '
      description: Container for the parameters to the <code><a>UpdateDomainEndpointOptions</a></code> operation. Specifies the name of the domain you want to update and the domain endpoint options.
    UpdateScalingParametersRequest:
      type: object
      required:
        - DomainName
        - ScalingParameters
      title: UpdateScalingParametersRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        ScalingParameters:
          $ref: '#/components/schemas/ScalingParameters'
      description: Container for the parameters to the <code><a>UpdateScalingParameters</a></code> operation. Specifies the name of the domain you want to update and the scaling parameters you want to configure.
    UpdateServiceAccessPoliciesRequest:
      type: object
      required:
        - DomainName
        - AccessPolicies
      title: UpdateServiceAccessPoliciesRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        AccessPolicies:
          $ref: '#/components/schemas/PolicyDocument'
          description: 'The access rules you want to configure. These rules replace any existing rules. '
      description: Container for the parameters to the <code><a>UpdateServiceAccessPolicies</a></code> operation. Specifies the name of the domain you want to update and the access rules you want to configure.
security:
  - hmac: []
