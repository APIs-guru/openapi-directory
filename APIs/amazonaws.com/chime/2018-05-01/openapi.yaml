openapi: 3.0.0
info:
  version: '2018-05-01'
  x-release: v4
  title: Amazon Chime
  description: '<p>The Amazon Chime API (application programming interface) is designed for developers to perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice Connectors. This guide provides detailed information about the Amazon Chime API, including operations, types, inputs and outputs, and error codes. It also includes some server-side API actions to use with the Amazon Chime SDK. For more information about the Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html"> Using the Amazon Chime SDK </a> in the <i>Amazon Chime Developer Guide</i>.</p> <p>You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls. We recommend using an AWS SDK or the AWS CLI. Each API operation includes links to information about using it with a language-specific AWS SDK or the AWS CLI.</p> <dl> <dt>Using an AWS SDK</dt> <dd> <p> You don''t need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the <a href="http://aws.amazon.com/developer/">AWS Developer Center</a>. </p> </dd> <dt>Using the AWS CLI</dt> <dd> <p>Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/installing.html">Installing the AWS Command Line Interface</a> in the <i>AWS Command Line Interface User Guide</i>. For a list of available Amazon Chime commands, see the <a href="https://docs.aws.amazon.com/cli/latest/reference/chime/index.html">Amazon Chime commands</a> in the <i>AWS CLI Command Reference</i>. </p> </dd> <dt>Using REST APIs</dt> <dd> <p>If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports signature version 4. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>When making REST API calls, use the service name <code>chime</code> and REST endpoint <code>https://service.chime.aws.amazon.com</code>.</p> </dd> </dl> <p>Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see <a href="https://docs.aws.amazon.com/chime/latest/ag/security-iam.html">Identity and Access Management for Amazon Chime</a> in the <i>Amazon Chime Administration Guide</i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: chime
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/chime-2018-05-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/chime/'
servers:
  - url: 'http://service.chime.aws.amazon.com'
    variables: {}
    description: The general Amazon Chime multi-region endpoint
  - url: 'https://service.chime.aws.amazon.com'
    variables: {}
    description: The general Amazon Chime multi-region endpoint
  - url: 'http://chime.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Chime endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://chime.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Chime endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/accounts/{accountId}/users/{userId}#operation=associate-phone-number':
    post:
      operationId: AssociatePhoneNumberWithUser
      description: Associates a phone number with the specified Amazon Chime user.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatePhoneNumberWithUserResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
        - name: userId
          in: path
          required: true
          description: The user ID.
          schema:
            type: string
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - associate-phone-number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - E164PhoneNumber
              properties:
                E164PhoneNumber:
                  description: 'The phone number, in E.164 format.'
                  type: string
                  pattern: '^\+?[1-9]\d{1,14}$'
                  format: password
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/voice-connectors/{voiceConnectorId}#operation=associate-phone-numbers':
    post:
      operationId: AssociatePhoneNumbersWithVoiceConnector
      description: Associates phone numbers with the specified Amazon Chime Voice Connector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatePhoneNumbersWithVoiceConnectorResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - associate-phone-numbers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - E164PhoneNumbers
              properties:
                E164PhoneNumbers:
                  description: 'List of phone numbers, in E.164 format.'
                  type: array
                  items:
                    $ref: '#/components/schemas/E164PhoneNumber'
                ForceAssociate:
                  description: 'If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/voice-connector-groups/{voiceConnectorGroupId}#operation=associate-phone-numbers':
    post:
      operationId: AssociatePhoneNumbersWithVoiceConnectorGroup
      description: Associates phone numbers with the specified Amazon Chime Voice Connector group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatePhoneNumbersWithVoiceConnectorGroupResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorGroupId
          in: path
          required: true
          description: The Amazon Chime Voice Connector group ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - associate-phone-numbers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - E164PhoneNumbers
              properties:
                E164PhoneNumbers:
                  description: 'List of phone numbers, in E.164 format.'
                  type: array
                  items:
                    $ref: '#/components/schemas/E164PhoneNumber'
                ForceAssociate:
                  description: 'If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}#operation=associate-signin-delegate-groups':
    post:
      operationId: AssociateSigninDelegateGroupsWithAccount
      description: Associates the specified sign-in delegate groups with the specified Amazon Chime account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateSigninDelegateGroupsWithAccountResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - associate-signin-delegate-groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SigninDelegateGroups
              properties:
                SigninDelegateGroups:
                  description: The sign-in delegate groups.
                  type: array
                  items:
                    $ref: '#/components/schemas/SigninDelegateGroup'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/meetings/{meetingId}/attendees#operation=batch-create':
    post:
      operationId: BatchCreateAttendee
      description: ' Creates up to 100 new attendees for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. '
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateAttendeeResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - batch-create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Attendees
              properties:
                Attendees:
                  description: The request containing the attendees to create.
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateAttendeeRequestItem'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/memberships#operation=batch-create':
    post:
      operationId: BatchCreateChannelMembership
      description: Adds a specified number of users to a channel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateChannelMembershipResponse'
        '480':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '481':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel to which you're adding users.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - batch-create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MemberArns
              properties:
                Type:
                  description: 'The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.'
                  type: string
                  enum:
                    - DEFAULT
                    - HIDDEN
                MemberArns:
                  description: The ARNs of the members you want to add to the channel.
                  type: array
                  items:
                    $ref: '#/components/schemas/ChimeArn'
                  minItems: 1
                  maxItems: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}/rooms/{roomId}/memberships#operation=batch-create':
    post:
      operationId: BatchCreateRoomMembership
      description: Adds up to 50 members to a chat room in an Amazon Chime Enterprise account. Members can be users or bots. The member role designates whether the member is a chat room administrator or a general chat room member.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateRoomMembershipResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: roomId
          in: path
          required: true
          description: The room ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - batch-create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MembershipItemList
              properties:
                MembershipItemList:
                  description: The list of membership items.
                  type: array
                  items:
                    $ref: '#/components/schemas/MembershipItem'
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /phone-numbers#operation=batch-delete:
    post:
      operationId: BatchDeletePhoneNumber
      description: <p> Moves phone numbers into the <b>Deletion queue</b>. Phone numbers must be disassociated from any users or Amazon Chime Voice Connectors before they can be deleted. </p> <p> Phone numbers remain in the <b>Deletion queue</b> for 7 days before they are deleted permanently. </p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeletePhoneNumberResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - batch-delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PhoneNumberIds
              properties:
                PhoneNumberIds:
                  description: List of phone number IDs.
                  type: array
                  items:
                    $ref: '#/components/schemas/String'
                  minItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}/users#operation=suspend':
    post:
      operationId: BatchSuspendUser
      description: '<p>Suspends up to 50 users from a <code>Team</code> or <code>EnterpriseLWA</code> Amazon Chime account. For more information about different account types, see <a href="https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p>Users suspended from a <code>Team</code> account are disassociated from the account,but they can continue to use Amazon Chime as free users. To remove the suspension from suspended <code>Team</code> account users, invite them to the <code>Team</code> account again. You can use the <a>InviteUsers</a> action to do so.</p> <p>Users suspended from an <code>EnterpriseLWA</code> account are immediately signed out of Amazon Chime and can no longer sign in. To remove the suspension from suspended <code>EnterpriseLWA</code> account users, use the <a>BatchUnsuspendUser</a> action.</p> <p> To sign out users without suspending them, use the <a>LogoutUser</a> action. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSuspendUserResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - suspend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - UserIdList
              properties:
                UserIdList:
                  description: The request containing the user IDs to suspend.
                  type: array
                  items:
                    $ref: '#/components/schemas/NonEmptyString'
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}/users#operation=unsuspend':
    post:
      operationId: BatchUnsuspendUser
      description: '<p>Removes the suspension from up to 50 previously suspended users for the specified Amazon Chime <code>EnterpriseLWA</code> account. Only users on <code>EnterpriseLWA</code> accounts can be unsuspended using this action. For more information about different account types, see <a href="https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html"> Managing Your Amazon Chime Accounts </a> in the account types, in the <i>Amazon Chime Administration Guide</i>. </p> <p> Previously suspended users who are unsuspended using this action are returned to <code>Registered</code> status. Users who are not previously suspended are ignored. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUnsuspendUserResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - unsuspend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - UserIdList
              properties:
                UserIdList:
                  description: The request containing the user IDs to unsuspend.
                  type: array
                  items:
                    $ref: '#/components/schemas/NonEmptyString'
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /phone-numbers#operation=batch-update:
    post:
      operationId: BatchUpdatePhoneNumber
      description: '<p>Updates phone number product types or calling names. You can update one attribute at a time for each <code>UpdatePhoneNumberRequestItem</code>. For example, you can update the product type or the calling name.</p> <p>For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.</p> <p>Updates to outbound calling names can take up to 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdatePhoneNumberResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - batch-update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - UpdatePhoneNumberRequestItems
              properties:
                UpdatePhoneNumberRequestItems:
                  description: The request containing the phone number IDs and product types or calling names to update.
                  type: array
                  items:
                    $ref: '#/components/schemas/UpdatePhoneNumberRequestItem'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}/users':
    post:
      operationId: BatchUpdateUser
      description: 'Updates user details within the <a>UpdateUserRequestItem</a> object for up to 20 users for the specified Amazon Chime account. Currently, only <code>LicenseType</code> updates are supported for this action.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateUserResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - UpdateUserRequestItems
              properties:
                UpdateUserRequestItems:
                  description: The request containing the user IDs and details to update.
                  type: array
                  items:
                    $ref: '#/components/schemas/UpdateUserRequestItem'
                  maxItems: 20
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListUsers
      description: Lists the users that belong to the specified Amazon Chime account. You can specify an email address to list only the user that the email address belongs to.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: user-email
          in: query
          required: false
          description: Optional. The user email address used to filter results. Maximum 1.
          schema:
            type: string
            pattern: .+@.+\..+
            format: password
        - name: user-type
          in: query
          required: false
          description: The user type.
          schema:
            type: string
            enum:
              - PrivateUser
              - SharedDevice
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call. Defaults to 100.
          schema:
            type: integer
            minimum: 1
            maximum: 200
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /accounts:
    post:
      operationId: CreateAccount
      description: 'Creates an Amazon Chime account under the administrator''s AWS account. Only <code>Team</code> account types are currently supported for this action. For more information about different account types, see <a href="https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the Amazon Chime account.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListAccounts
      description: 'Lists the Amazon Chime accounts under the administrator''s AWS account. You can filter accounts by account name prefix. To find out which Amazon Chime account a user belongs to, you can filter by the user''s email address, which returns one account result.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: name
          in: query
          required: false
          description: Amazon Chime account name prefix with which to filter results.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
        - name: user-email
          in: query
          required: false
          description: User email address with which to filter results.
          schema:
            type: string
            pattern: .+@.+\..+
            format: password
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call. Defaults to 100.
          schema:
            type: integer
            minimum: 1
            maximum: 200
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /app-instances:
    post:
      operationId: CreateAppInstance
      description: Creates an Amazon Chime SDK messaging <code>AppInstance</code> under an AWS account. Only SDK messaging customers use this API. <code>CreateAppInstance</code> supports idempotency behavior as described in the AWS API Standard.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppInstanceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - ClientRequestToken
              properties:
                Name:
                  description: The name of the <code>AppInstance</code>.
                  type: string
                  pattern: '[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*'
                  minLength: 1
                  maxLength: 256
                  format: password
                Metadata:
                  description: The metadata of the <code>AppInstance</code>. Limited to a 1KB string in UTF-8.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 1024
                  format: password
                ClientRequestToken:
                  description: The <code>ClientRequestToken</code> of the <code>AppInstance</code>.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 2
                  maxLength: 64
                  format: password
                Tags:
                  description: Tags assigned to the <code>AppInstanceUser</code>.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListAppInstances
      description: Lists all Amazon Chime <code>AppInstance</code>s created under a single AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppInstancesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: max-results
          in: query
          required: false
          description: The maximum number of <code>AppInstance</code>s that you want to return.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API requests until you reach the maximum number of <code>AppInstance</code>s.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/app-instances/{appInstanceArn}/admins':
    post:
      operationId: CreateAppInstanceAdmin
      description: <p>Promotes an <code>AppInstanceUser</code> to an <code>AppInstanceAdmin</code>. The promoted user can perform the following actions. </p> <ul> <li> <p> <code>ChannelModerator</code> actions across all channels in the <code>AppInstance</code>.</p> </li> <li> <p> <code>DeleteChannelMessage</code> actions.</p> </li> </ul> <p>Only an <code>AppInstanceUser</code> can be promoted to an <code>AppInstanceAdmin</code> role.</p>
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppInstanceAdminResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AppInstanceAdminArn
              properties:
                AppInstanceAdminArn:
                  description: The ARN of the administrator of the current <code>AppInstance</code>.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListAppInstanceAdmins
      description: Returns a list of the administrators in the <code>AppInstance</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppInstanceAdminsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of administrators that you want to return.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token returned from previous API requests until the number of administrators is reached.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /app-instance-users:
    post:
      operationId: CreateAppInstanceUser
      description: Creates a user under an Amazon Chime <code>AppInstance</code>. The request consists of a unique <code>appInstanceUserId</code> and <code>Name</code> for that user.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppInstanceUserResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AppInstanceArn
                - AppInstanceUserId
                - Name
                - ClientRequestToken
              properties:
                AppInstanceArn:
                  description: The ARN of the <code>AppInstance</code> request.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
                AppInstanceUserId:
                  description: The user ID of the <code>AppInstance</code>.
                  type: string
                  pattern: '[A-Za-z0-9]([A-Za-z0-9\:\-\_\.\@]{0,62}[A-Za-z0-9])?'
                  minLength: 1
                  maxLength: 64
                  format: password
                Name:
                  description: The user's name.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 100
                  format: password
                Metadata:
                  description: The request's metadata. Limited to a 1KB string in UTF-8.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 1024
                  format: password
                ClientRequestToken:
                  description: The token assigned to the user requesting an <code>AppInstance</code>.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 2
                  maxLength: 64
                  format: password
                Tags:
                  description: Tags assigned to the <code>AppInstanceUser</code>.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/meetings/{meetingId}/attendees':
    post:
      operationId: CreateAttendee
      description: ' Creates a new attendee for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. '
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAttendeeResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ExternalUserId
              properties:
                ExternalUserId:
                  description: The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.
                  type: string
                  minLength: 2
                  maxLength: 64
                  format: password
                Tags:
                  description: The tag key-value pairs.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListAttendees
      description: ' Lists the attendees for the specified Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttendeesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/accounts/{accountId}/bots':
    post:
      operationId: CreateBot
      description: Creates a bot for an Amazon Chime Enterprise account.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBotResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '487':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DisplayName
              properties:
                DisplayName:
                  description: The bot display name.
                  type: string
                  format: password
                Domain:
                  description: The domain of the Amazon Chime Enterprise account.
                  type: string
                  pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListBots
      description: Lists the bots associated with the administrator's Amazon Chime Enterprise account ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBotsResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call. The default is 10.
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /channels:
    post:
      operationId: CreateChannel
      description: '<p>Creates a channel to which you can add users and send messages.</p> <p> <b>Restriction</b>: You can''t change a channel''s privacy.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AppInstanceArn
                - Name
                - ClientRequestToken
              properties:
                AppInstanceArn:
                  description: The ARN of the channel request.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
                Name:
                  description: The name of the channel.
                  type: string
                  pattern: '[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*'
                  minLength: 1
                  maxLength: 256
                  format: password
                Mode:
                  description: 'The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators, moderators, and channel members can add themselves and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels.'
                  type: string
                  enum:
                    - UNRESTRICTED
                    - RESTRICTED
                Privacy:
                  description: 'The channel''s privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private channels aren''t discoverable by users outside the channel. Public channels are discoverable by anyone in the <code>AppInstance</code>.'
                  type: string
                  enum:
                    - PUBLIC
                    - PRIVATE
                Metadata:
                  description: The metadata of the creation request. Limited to 1KB and UTF-8.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 1024
                  format: password
                ClientRequestToken:
                  description: The client token for the request. An <code>Idempotency</code> token.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 2
                  maxLength: 64
                  format: password
                Tags:
                  description: The tags for the creation request.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/bans':
    post:
      operationId: CreateChannelBan
      description: '<p>Permanently bans a member from a channel. Moderators can''t add banned members to a channel. To undo a ban, you first have to <code>DeleteChannelBan</code>, and then <code>CreateChannelMembership</code>. Bans are cleaned up when you delete users or channels.</p> <p>If you ban a user who is already part of a channel, that user is automatically kicked from the channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelBanResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the ban request.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MemberArn
              properties:
                MemberArn:
                  description: The ARN of the member being banned.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListChannelBans
      description: <p>Lists all the users banned from a particular channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelBansResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of bans that you want returned.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested bans are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/channels/{channelArn}/memberships':
    post:
      operationId: CreateChannelMembership
      description: '<p>Adds a user to a channel. The <code>InvitedBy</code> response field is derived from the request header. A channel member can:</p> <ul> <li> <p>List messages</p> </li> <li> <p>Send messages</p> </li> <li> <p>Receive messages</p> </li> <li> <p>Edit their own messages</p> </li> <li> <p>Leave the channel</p> </li> </ul> <p>Privacy settings impact this action as follows:</p> <ul> <li> <p>Public Channels: You do not need to be a member to list messages, but you must be a member to send messages.</p> </li> <li> <p>Private Channels: You must be a member to list or send messages.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelMembershipResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel to which you're adding users.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MemberArn
                - Type
              properties:
                MemberArn:
                  description: The ARN of the member you want to add to the channel.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
                Type:
                  description: 'The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.'
                  type: string
                  enum:
                    - DEFAULT
                    - HIDDEN
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListChannelMemberships
      description: <p>Lists all channel memberships in a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelMembershipsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The maximum number of channel memberships that you want returned.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: type
          in: query
          required: false
          description: 'The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned.'
          schema:
            type: string
            enum:
              - DEFAULT
              - HIDDEN
        - name: max-results
          in: query
          required: false
          description: The maximum number of channel memberships that you want returned.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested channel memberships are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/channels/{channelArn}/moderators':
    post:
      operationId: CreateChannelModerator
      description: '<p>Creates a new <code>ChannelModerator</code>. A channel moderator can:</p> <ul> <li> <p>Add and remove other members of the channel.</p> </li> <li> <p>Add and remove other moderators of the channel.</p> </li> <li> <p>Add and remove user bans for the channel.</p> </li> <li> <p>Redact messages in the channel.</p> </li> <li> <p>List messages in the channel.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelModeratorResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ChannelModeratorArn
              properties:
                ChannelModeratorArn:
                  description: The ARN of the moderator.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListChannelModerators
      description: <p>Lists all the moderators for a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelModeratorsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of moderators that you want returned.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested moderators are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /media-capture-pipelines:
    post:
      operationId: CreateMediaCapturePipeline
      description: Creates a media capture pipeline.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMediaCapturePipelineResponse'
        '480':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SourceType
                - SourceArn
                - SinkType
                - SinkArn
              properties:
                SourceType:
                  description: Source type from which the media artifacts will be captured. A Chime SDK Meeting is the only supported source.
                  type: string
                  enum:
                    - ChimeSdkMeeting
                SourceArn:
                  description: ARN of the source from which the media artifacts are captured.
                  type: string
                  pattern: '^arn[\/\:\-\_\.a-zA-Z0-9]+$'
                  minLength: 1
                  maxLength: 1024
                  format: password
                SinkType:
                  description: 'Destination type to which the media artifacts are saved. You must use an S3 bucket. '
                  type: string
                  enum:
                    - S3Bucket
                SinkArn:
                  description: The ARN of the sink type.
                  type: string
                  pattern: '^arn[\/\:\-\_\.a-zA-Z0-9]+$'
                  minLength: 1
                  maxLength: 1024
                  format: password
                ClientRequestToken:
                  description: The token assigned to the client making the pipeline request.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 2
                  maxLength: 64
                  format: password
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListMediaCapturePipelines
      description: Returns a list of media capture pipelines.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMediaCapturePipelinesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: next-token
          in: query
          required: false
          description: The token used to retrieve the next page of results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. Valid Range: 1 - 99.'
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /meetings:
    post:
      operationId: CreateMeeting
      description: ' Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees. For more information about specifying media Regions, see <a href="https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html">Amazon Chime SDK Media Regions</a> in the <i>Amazon Chime Developer Guide</i> . For more information about the Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i> . '
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMeetingResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ClientRequestToken
              properties:
                ClientRequestToken:
                  description: The unique identifier for the client request. Use a different token for different meetings.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 2
                  maxLength: 64
                  format: password
                ExternalMeetingId:
                  description: The external meeting ID.
                  type: string
                  minLength: 2
                  maxLength: 64
                  format: password
                MeetingHostId:
                  description: Reserved.
                  type: string
                  minLength: 2
                  maxLength: 64
                  format: password
                MediaRegion:
                  description: '<p> The Region in which to create the meeting. Default: <code>us-east-1</code>. </p> <p> Available values: <code>af-south-1</code> , <code>ap-northeast-1</code> , <code>ap-northeast-2</code> , <code>ap-south-1</code> , <code>ap-southeast-1</code> , <code>ap-southeast-2</code> , <code>ca-central-1</code> , <code>eu-central-1</code> , <code>eu-north-1</code> , <code>eu-south-1</code> , <code>eu-west-1</code> , <code>eu-west-2</code> , <code>eu-west-3</code> , <code>sa-east-1</code> , <code>us-east-1</code> , <code>us-east-2</code> , <code>us-west-1</code> , <code>us-west-2</code> . </p>'
                  type: string
                Tags:
                  description: The tag key-value pairs.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 50
                NotificationsConfiguration:
                  description: ' The resource target configurations for receiving Amazon Chime SDK meeting and attendee event notifications. The Amazon Chime SDK supports resource targets located in the US East (N. Virginia) AWS Region (<code>us-east-1</code>). '
                  type: object
                  properties:
                    SnsTopicArn:
                      $ref: '#/components/schemas/Arn'
                      description: The SNS topic ARN.
                    SqsQueueArn:
                      $ref: '#/components/schemas/Arn'
                      description: The SQS queue ARN.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListMeetings
      description: ' Lists up to 100 active Amazon Chime SDK meetings. For more information about the Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMeetingsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/meetings/{meetingId}/dial-outs':
    post:
      operationId: CreateMeetingDialOut
      description: '<p>Uses the join token and call metadata in a meeting request (From number, To number, and so forth) to initiate an outbound call to a public switched telephone network (PSTN) and join them into a Chime meeting. Also ensures that the From number belongs to the customer.</p> <p>To play welcome audio or implement an interactive voice response (IVR), use the <code>CreateSipMediaApplicationCall</code> action with the corresponding SIP media application ID.</p>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMeetingDialOutResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FromPhoneNumber
                - ToPhoneNumber
                - JoinToken
              properties:
                FromPhoneNumber:
                  description: Phone number used as the caller ID when the remote party receives a call.
                  type: string
                  pattern: '^\+?[1-9]\d{1,14}$'
                  format: password
                ToPhoneNumber:
                  description: Phone number called when inviting someone to a meeting.
                  type: string
                  pattern: '^\+?[1-9]\d{1,14}$'
                  format: password
                JoinToken:
                  description: 'Token used by the Amazon Chime SDK attendee. Call the <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html">CreateAttendee</a> action to get a join token.'
                  type: string
                  pattern: '^[a-zA-Z0-9+/]+$'
                  minLength: 2
                  maxLength: 2048
                  format: password
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /meetings#operation=create-attendees:
    post:
      operationId: CreateMeetingWithAttendees
      description: ' Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees. For more information about specifying media Regions, see <a href="https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html">Amazon Chime SDK Media Regions</a> in the <i>Amazon Chime Developer Guide</i> . For more information about the Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i> . '
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMeetingWithAttendeesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - create-attendees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ClientRequestToken
              properties:
                ClientRequestToken:
                  description: The unique identifier for the client request. Use a different token for different meetings.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 2
                  maxLength: 64
                  format: password
                ExternalMeetingId:
                  description: The external meeting ID.
                  type: string
                  minLength: 2
                  maxLength: 64
                  format: password
                MeetingHostId:
                  description: Reserved.
                  type: string
                  minLength: 2
                  maxLength: 64
                  format: password
                MediaRegion:
                  description: '<p> The Region in which to create the meeting. Default: <code>us-east-1</code> . </p> <p> Available values: <code>af-south-1</code> , <code>ap-northeast-1</code> , <code>ap-northeast-2</code> , <code>ap-south-1</code> , <code>ap-southeast-1</code> , <code>ap-southeast-2</code> , <code>ca-central-1</code> , <code>eu-central-1</code> , <code>eu-north-1</code> , <code>eu-south-1</code> , <code>eu-west-1</code> , <code>eu-west-2</code> , <code>eu-west-3</code> , <code>sa-east-1</code> , <code>us-east-1</code> , <code>us-east-2</code> , <code>us-west-1</code> , <code>us-west-2</code> . </p>'
                  type: string
                Tags:
                  description: The tag key-value pairs.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 50
                NotificationsConfiguration:
                  description: ' The resource target configurations for receiving Amazon Chime SDK meeting and attendee event notifications. The Amazon Chime SDK supports resource targets located in the US East (N. Virginia) AWS Region (<code>us-east-1</code>). '
                  type: object
                  properties:
                    SnsTopicArn:
                      $ref: '#/components/schemas/Arn'
                      description: The SNS topic ARN.
                    SqsQueueArn:
                      $ref: '#/components/schemas/Arn'
                      description: The SQS queue ARN.
                Attendees:
                  description: The request containing the attendees to create.
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateAttendeeRequestItem'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /phone-number-orders:
    post:
      operationId: CreatePhoneNumberOrder
      description: 'Creates an order for phone numbers to be provisioned. For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePhoneNumberOrderResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ProductType
                - E164PhoneNumbers
              properties:
                ProductType:
                  description: The phone number product type.
                  type: string
                  enum:
                    - BusinessCalling
                    - VoiceConnector
                    - SipMediaApplicationDialIn
                E164PhoneNumbers:
                  description: 'List of phone numbers, in E.164 format.'
                  type: array
                  items:
                    $ref: '#/components/schemas/E164PhoneNumber'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListPhoneNumberOrders
      description: Lists the phone number orders for the administrator's Amazon Chime account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPhoneNumberOrdersResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/voice-connectors/{voiceConnectorId}/proxy-sessions':
    post:
      operationId: CreateProxySession
      description: Creates a proxy session on the specified Amazon Chime Voice Connector for the specified participant phone numbers.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProxySessionResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime voice connector ID.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ParticipantPhoneNumbers
                - Capabilities
              properties:
                ParticipantPhoneNumbers:
                  description: The participant phone numbers.
                  type: array
                  items:
                    $ref: '#/components/schemas/E164PhoneNumber'
                  minItems: 2
                  maxItems: 2
                Name:
                  description: The name of the proxy session.
                  type: string
                  pattern: '^$|^[a-zA-Z0-9 ]{0,30}$'
                  format: password
                ExpiryMinutes:
                  description: The number of minutes allowed for the proxy session.
                  type: integer
                  minimum: 1
                Capabilities:
                  description: The proxy session capabilities.
                  type: array
                  items:
                    $ref: '#/components/schemas/Capability'
                NumberSelectionBehavior:
                  description: 'The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.'
                  type: string
                  enum:
                    - PreferSticky
                    - AvoidSticky
                GeoMatchLevel:
                  description: The preference for matching the country or area code of the proxy phone number with that of the first participant.
                  type: string
                  enum:
                    - Country
                    - AreaCode
                GeoMatchParams:
                  description: The country and area code for a proxy phone number in a proxy phone session.
                  type: object
                  properties:
                    Country:
                      $ref: '#/components/schemas/Country'
                      description: The country.
                    AreaCode:
                      $ref: '#/components/schemas/AreaCode'
                      description: The area code.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListProxySessions
      description: Lists the proxy sessions for the specified Amazon Chime Voice Connector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProxySessionsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime voice connector ID.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 128
        - name: status
          in: query
          required: false
          description: The proxy session status.
          schema:
            type: string
            enum:
              - Open
              - InProgress
              - Closed
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
            maxLength: 65535
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/accounts/{accountId}/rooms':
    post:
      operationId: CreateRoom
      description: Creates a chat room for the specified Amazon Chime Enterprise account.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoomResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The room name.
                  type: string
                  format: password
                ClientRequestToken:
                  description: The idempotency token for the request.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 2
                  maxLength: 64
                  format: password
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListRooms
      description: 'Lists the room details for the specified Amazon Chime Enterprise account. Optionally, filter the results by a member ID (user ID or bot ID) to see a list of rooms that the member belongs to.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoomsResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: member-id
          in: query
          required: false
          description: The member ID (user ID or bot ID).
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/accounts/{accountId}/rooms/{roomId}/memberships':
    post:
      operationId: CreateRoomMembership
      description: Adds a member to a chat room in an Amazon Chime Enterprise account. A member can be either a user or a bot. The member role designates whether the member is a chat room administrator or a general chat room member.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoomMembershipResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '487':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '488':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: roomId
          in: path
          required: true
          description: The room ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MemberId
              properties:
                MemberId:
                  description: The Amazon Chime member ID (user ID or bot ID).
                  type: string
                  pattern: .*\S.*
                Role:
                  description: The role of the member.
                  type: string
                  enum:
                    - Administrator
                    - Member
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListRoomMemberships
      description: 'Lists the membership details for the specified room in an Amazon Chime Enterprise account, such as the members'' IDs, email addresses, and names.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoomMembershipsResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: roomId
          in: path
          required: true
          description: The room ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /sip-media-applications:
    post:
      operationId: CreateSipMediaApplication
      description: Creates a SIP media application.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSipMediaApplicationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '487':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '488':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AwsRegion
                - Name
                - Endpoints
              properties:
                AwsRegion:
                  description: The AWS Region assigned to the SIP media application.
                  type: string
                Name:
                  description: The SIP media application name.
                  type: string
                  minLength: 1
                  maxLength: 256
                Endpoints:
                  description: 'List of endpoints (Lambda Amazon Resource Names) specified for the SIP media application. Currently, only one endpoint is supported.'
                  type: array
                  items:
                    $ref: '#/components/schemas/SipMediaApplicationEndpoint'
                  minItems: 1
                  maxItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListSipMediaApplications
      description: Lists the SIP media applications under the administrator's AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSipMediaApplicationsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call. Defaults to 100.
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
            maxLength: 65535
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/sip-media-applications/{sipMediaApplicationId}/calls':
    post:
      operationId: CreateSipMediaApplicationCall
      description: 'Creates an outbound call to a phone number from the phone number specified in the request, and it invokes the endpoint of the specified <code>sipMediaApplicationId</code>.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSipMediaApplicationCallResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: sipMediaApplicationId
          in: path
          required: true
          description: The ID of the SIP media application.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FromPhoneNumber
                - ToPhoneNumber
              properties:
                FromPhoneNumber:
                  description: The phone number that a user calls from. This is a phone number in your Amazon Chime phone number inventory.
                  type: string
                  pattern: '^\+?[1-9]\d{1,14}$'
                  format: password
                ToPhoneNumber:
                  description: The phone number that the service should call.
                  type: string
                  pattern: '^\+?[1-9]\d{1,14}$'
                  format: password
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /sip-rules:
    post:
      operationId: CreateSipRule
      description: Creates a SIP rule which can be used to run a SIP media application as a target for a specific trigger type.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSipRuleResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '487':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '488':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - TriggerType
                - TriggerValue
                - TargetApplications
              properties:
                Name:
                  description: The name of the SIP rule.
                  type: string
                  minLength: 1
                  maxLength: 256
                TriggerType:
                  description: 'The type of trigger assigned to the SIP rule in <code>TriggerValue</code>, currently <code>RequestUriHostname</code> or <code>ToPhoneNumber</code>.'
                  type: string
                  enum:
                    - ToPhoneNumber
                    - RequestUriHostname
                TriggerValue:
                  description: 'If <code>TriggerType</code> is <code>RequestUriHostname</code>, the value can be the outbound host name of an Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code>, the value can be a customer-owned phone number in the E164 format. The <code>SipMediaApplication</code> specified in the <code>SipRule</code> is triggered if the request URI in an incoming SIP request matches the <code>RequestUriHostname</code>, or if the <code>To</code> header in the incoming SIP request matches the <code>ToPhoneNumber</code> value.'
                  type: string
                  pattern: .*\S.*
                Disabled:
                  description: Enables or disables a rule. You must disable rules before you can delete them.
                  type: boolean
                TargetApplications:
                  description: List of SIP media applications with priority and AWS Region. Only one SIP application per AWS Region can be used.
                  type: array
                  items:
                    $ref: '#/components/schemas/SipRuleTargetApplication'
                  minItems: 1
                  maxItems: 25
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListSipRules
      description: Lists the SIP rules under the administrator's AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSipRulesResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: sip-media-application
          in: query
          required: false
          description: The SIP media application ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call. Defaults to 100.
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
            maxLength: 65535
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/accounts/{accountId}/users#operation=create':
    post:
      operationId: CreateUser
      description: Creates a user under the specified Amazon Chime account.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Username:
                  description: The user name.
                  type: string
                Email:
                  description: The user's email address.
                  type: string
                  pattern: .+@.+\..+
                  format: password
                UserType:
                  description: The user type.
                  type: string
                  enum:
                    - PrivateUser
                    - SharedDevice
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /voice-connectors:
    post:
      operationId: CreateVoiceConnector
      description: '<p>Creates an Amazon Chime Voice Connector under the administrator''s AWS account. You can choose to create an Amazon Chime Voice Connector in a specific AWS Region.</p> <p> Enabling <a>CreateVoiceConnectorRequest$RequireEncryption</a> configures your Amazon Chime Voice Connector to use TLS transport for SIP signaling and Secure RTP (SRTP) for media. Inbound calls use TLS transport, and unencrypted outbound calls are blocked. </p>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVoiceConnectorResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - RequireEncryption
              properties:
                Name:
                  description: The name of the Amazon Chime Voice Connector.
                  type: string
                  minLength: 1
                  maxLength: 256
                AwsRegion:
                  description: ' The AWS Region in which the Amazon Chime Voice Connector is created. Default value: <code>us-east-1</code> . '
                  type: string
                  enum:
                    - us-east-1
                    - us-west-2
                RequireEncryption:
                  description: 'When enabled, requires encryption for the Amazon Chime Voice Connector.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListVoiceConnectors
      description: Lists the Amazon Chime Voice Connectors for the administrator's AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVoiceConnectorsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /voice-connector-groups:
    post:
      operationId: CreateVoiceConnectorGroup
      description: <p>Creates an Amazon Chime Voice Connector group under the administrator's AWS account. You can associate Amazon Chime Voice Connectors with the Amazon Chime Voice Connector group by including <code>VoiceConnectorItems</code> in the request.</p> <p>You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.</p>
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVoiceConnectorGroupResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the Amazon Chime Voice Connector group.
                  type: string
                  minLength: 1
                  maxLength: 256
                VoiceConnectorItems:
                  description: The Amazon Chime Voice Connectors to route inbound calls to.
                  type: array
                  items:
                    $ref: '#/components/schemas/VoiceConnectorItem'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListVoiceConnectorGroups
      description: Lists the Amazon Chime Voice Connector groups for the administrator's AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVoiceConnectorGroupsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/accounts/{accountId}':
    delete:
      operationId: DeleteAccount
      description: '<p>Deletes the specified Amazon Chime account. You must suspend all users before deleting <code>Team</code> account. You can use the <a>BatchSuspendUser</a> action to dodo.</p> <p>For <code>EnterpriseLWA</code> and <code>EnterpriseAD</code> accounts, you must release the claimed domains for your Amazon Chime account before deletion. As soon as you release the domain, all users under that account are suspended.</p> <p>Deleted accounts appear in your <code>Disabled</code> accounts list for 90 days. To restore deleted account from your <code>Disabled</code> accounts list, you must contact AWS Support.</p> <p>After 90 days, deleted accounts are permanently removed from your <code>Disabled</code> accounts list.</p>'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAccount
      description: 'Retrieves details for the specified Amazon Chime account, such as account type and supported licenses.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
    post:
      operationId: UpdateAccount
      description: 'Updates account details for the specified Amazon Chime account. Currently, only account name and default license updates are supported for this action.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The new name for the specified Amazon Chime account.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 100
                DefaultLicense:
                  description: The default license applied when you add users to an Amazon Chime account.
                  type: string
                  enum:
                    - Basic
                    - Plus
                    - Pro
                    - ProTrial
  '/app-instances/{appInstanceArn}':
    delete:
      operationId: DeleteAppInstance
      description: Deletes an <code>AppInstance</code> and all associated data asynchronously.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeAppInstance
      description: Returns the full details of an <code>AppInstance</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppInstanceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    put:
      operationId: UpdateAppInstance
      description: Updates <code>AppInstance</code> metadata.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppInstanceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name that you want to change.
                  type: string
                  pattern: '[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*'
                  minLength: 1
                  maxLength: 256
                  format: password
                Metadata:
                  description: The metadata that you want to change.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 1024
                  format: password
  '/app-instances/{appInstanceArn}/admins/{appInstanceAdminArn}':
    delete:
      operationId: DeleteAppInstanceAdmin
      description: Demotes an <code>AppInstanceAdmin</code> to an <code>AppInstanceUser</code>. This action does not delete the user.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceAdminArn
          in: path
          required: true
          description: The ARN of the <code>AppInstance</code>'s administrator.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeAppInstanceAdmin
      description: Returns the full details of an <code>AppInstanceAdmin</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppInstanceAdminResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceAdminArn
          in: path
          required: true
          description: The ARN of the <code>AppInstanceAdmin</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
  '/app-instances/{appInstanceArn}/streaming-configurations':
    delete:
      operationId: DeleteAppInstanceStreamingConfigurations
      description: Deletes the streaming configurations of an <code>AppInstance</code>.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the streaming configurations being deleted.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAppInstanceStreamingConfigurations
      description: Gets the streaming settings for an <code>AppInstance</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppInstanceStreamingConfigurationsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    put:
      operationId: PutAppInstanceStreamingConfigurations
      description: The data streaming configurations of an <code>AppInstance</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppInstanceStreamingConfigurationsResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AppInstanceStreamingConfigurations
              properties:
                AppInstanceStreamingConfigurations:
                  description: The streaming configurations set for an <code>AppInstance</code>.
                  type: array
                  items:
                    $ref: '#/components/schemas/AppInstanceStreamingConfiguration'
                  minItems: 1
                  maxItems: 2
  '/app-instance-users/{appInstanceUserArn}':
    delete:
      operationId: DeleteAppInstanceUser
      description: Deletes an <code>AppInstanceUser</code>.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceUserArn
          in: path
          required: true
          description: The ARN of the user request being deleted.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeAppInstanceUser
      description: Returns the full details of an <code>AppInstanceUser</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppInstanceUserResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceUserArn
          in: path
          required: true
          description: The ARN of the <code>AppInstanceUser</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    put:
      operationId: UpdateAppInstanceUser
      description: Updates the details of an <code>AppInstanceUser</code>. You can update names and metadata.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppInstanceUserResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceUserArn
          in: path
          required: true
          description: The ARN of the <code>AppInstanceUser</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the <code>AppInstanceUser</code>.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 100
                  format: password
                Metadata:
                  description: The metadata of the <code>AppInstanceUser</code>.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 1024
                  format: password
  '/meetings/{meetingId}/attendees/{attendeeId}':
    delete:
      operationId: DeleteAttendee
      description: 'Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their <code>JoinToken</code>. Attendees are automatically deleted when a Amazon Chime SDK meeting is deleted. For more information about the Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.'
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: attendeeId
          in: path
          required: true
          description: The Amazon Chime SDK attendee ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAttendee
      description: ' Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID. For more information about the Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i> . '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAttendeeResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: attendeeId
          in: path
          required: true
          description: The Amazon Chime SDK attendee ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
  '/channels/{channelArn}':
    delete:
      operationId: DeleteChannel
      description: <p>Immediately makes a channel and its memberships inaccessible and marks them for deletion. This is an irreversible process.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel being deleted.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeChannel
      description: <p>Returns the full details of a channel in an Amazon Chime <code>AppInstance</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    put:
      operationId: UpdateChannel
      description: '<p>Update a channel''s attributes.</p> <p> <b>Restriction</b>: You can''t change a channel''s privacy. </p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - Mode
              properties:
                Name:
                  description: The name of the channel.
                  type: string
                  pattern: '[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*'
                  minLength: 1
                  maxLength: 256
                  format: password
                Mode:
                  description: The mode of the update request.
                  type: string
                  enum:
                    - UNRESTRICTED
                    - RESTRICTED
                Metadata:
                  description: The metadata for the update request.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 1024
                  format: password
  '/channels/{channelArn}/bans/{memberArn}':
    delete:
      operationId: DeleteChannelBan
      description: <p>Removes a user from a channel's ban list.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel from which the <code>AppInstanceUser</code> was banned.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: memberArn
          in: path
          required: true
          description: The ARN of the <code>AppInstanceUser</code> that you want to reinstate.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeChannelBan
      description: <p>Returns the full details of a channel ban.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelBanResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel from which the user is banned.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: memberArn
          in: path
          required: true
          description: The ARN of the member being banned.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
  '/channels/{channelArn}/memberships/{memberArn}':
    delete:
      operationId: DeleteChannelMembership
      description: <p>Removes a member from a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel from which you want to remove the user.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: memberArn
          in: path
          required: true
          description: The ARN of the member that you're removing from the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeChannelMembership
      description: <p>Returns the full details of a user's channel membership.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelMembershipResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: memberArn
          in: path
          required: true
          description: The ARN of the member.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
  '/channels/{channelArn}/messages/{messageId}':
    delete:
      operationId: DeleteChannelMessage
      description: <p>Deletes a channel message. Only admins can perform this action. Deletion makes messages inaccessible immediately. A background process deletes any revisions created by <code>UpdateChannelMessage</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: messageId
          in: path
          required: true
          description: The ID of the message being deleted.
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetChannelMessage
      description: <p>Gets the full details of a channel message.</p> <note> <p>The x-amz-chime-bearer request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelMessageResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: messageId
          in: path
          required: true
          description: The ID of the message.
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    put:
      operationId: UpdateChannelMessage
      description: <p>Updates the content of a message.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelMessageResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: messageId
          in: path
          required: true
          description: The ID string of the message being updated.
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Content:
                  description: The content of the message being updated.
                  type: string
                  pattern: '[\s\S]*'
                  minLength: 0
                  maxLength: 4096
                  format: password
                Metadata:
                  description: The metadata of the message being updated.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 1024
                  format: password
  '/channels/{channelArn}/moderators/{channelModeratorArn}':
    delete:
      operationId: DeleteChannelModerator
      description: <p>Deletes a channel moderator.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: channelModeratorArn
          in: path
          required: true
          description: The ARN of the moderator being deleted.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeChannelModerator
      description: <p>Returns the full details of a single ChannelModerator.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelModeratorResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: channelModeratorArn
          in: path
          required: true
          description: The ARN of the channel moderator.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
  '/accounts/{accountId}/bots/{botId}/events-configuration':
    delete:
      operationId: DeleteEventsConfiguration
      description: Deletes the events configuration that allows a bot to receive outgoing events.
      responses:
        '204':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: botId
          in: path
          required: true
          description: The bot ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetEventsConfiguration
      description: 'Gets details for an events configuration that allows a bot to receive outgoing events, such as an HTTPS endpoint or Lambda function ARN.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventsConfigurationResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: botId
          in: path
          required: true
          description: The bot ID.
          schema:
            type: string
            pattern: .*\S.*
    put:
      operationId: PutEventsConfiguration
      description: 'Creates an events configuration that allows a bot to receive outgoing events sent by Amazon Chime. Choose either an HTTPS endpoint or a Lambda function ARN. For more information, see <a>Bot</a>.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEventsConfigurationResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: botId
          in: path
          required: true
          description: The bot ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OutboundEventsHTTPSEndpoint:
                  description: HTTPS endpoint that allows the bot to receive outgoing events.
                  type: string
                  format: password
                LambdaFunctionArn:
                  description: Lambda function ARN that allows the bot to receive outgoing events.
                  type: string
                  format: password
  '/media-capture-pipelines/{mediaPipelineId}':
    delete:
      operationId: DeleteMediaCapturePipeline
      description: Deletes the media capture pipeline.
      responses:
        '204':
          description: Success
        '480':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: mediaPipelineId
          in: path
          required: true
          description: 'The ID of the media capture pipeline being deleted. '
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetMediaCapturePipeline
      description: Gets an existing media capture pipeline.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMediaCapturePipelineResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: mediaPipelineId
          in: path
          required: true
          description: The ID of the pipeline that you want to get.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
  '/meetings/{meetingId}':
    delete:
      operationId: DeleteMeeting
      description: 'Deletes the specified Amazon Chime SDK meeting. The operation deletes all attendees, disconnects all clients, and prevents new clients from joining the meeting. For more information about the Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.'
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetMeeting
      description: ' Gets the Amazon Chime SDK meeting details for the specified meeting ID. For more information about the Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i> . '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMeetingResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
  '/phone-numbers/{phoneNumberId}':
    delete:
      operationId: DeletePhoneNumber
      description: <p>Moves the specified phone number into the <b>Deletion queue</b>. A phone number must be disassociated from any users or Amazon Chime Voice Connectors before it can be deleted.</p> <p>Deleted phone numbers remain in the <b>Deletion queue</b> for 7 days before they are deleted permanently.</p>
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: phoneNumberId
          in: path
          required: true
          description: The phone number ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetPhoneNumber
      description: 'Retrieves details for the specified phone number ID, such as associations, capabilities, and product type.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPhoneNumberResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: phoneNumberId
          in: path
          required: true
          description: The phone number ID.
          schema:
            type: string
    post:
      operationId: UpdatePhoneNumber
      description: '<p>Updates phone number details, such as product type or calling name, for the specified phone number ID. You can update one phone number detail at a time. For example, you can update either the product type or the calling name in one action.</p> <p>For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.</p> <p>Updates to outbound calling names can take 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePhoneNumberResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: phoneNumberId
          in: path
          required: true
          description: The phone number ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ProductType:
                  description: The product type.
                  type: string
                  enum:
                    - BusinessCalling
                    - VoiceConnector
                    - SipMediaApplicationDialIn
                CallingName:
                  description: The outbound calling name associated with the phone number.
                  type: string
                  pattern: '^$|^[a-zA-Z0-9 ]{2,15}$'
                  format: password
  '/voice-connectors/{voiceConnectorId}/proxy-sessions/{proxySessionId}':
    delete:
      operationId: DeleteProxySession
      description: Deletes the specified proxy session from the specified Amazon Chime Voice Connector.
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime voice connector ID.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 128
        - name: proxySessionId
          in: path
          required: true
          description: The proxy session ID.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetProxySession
      description: Gets the specified proxy session details for the specified Amazon Chime Voice Connector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProxySessionResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime voice connector ID.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 128
        - name: proxySessionId
          in: path
          required: true
          description: The proxy session ID.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 128
    post:
      operationId: UpdateProxySession
      description: 'Updates the specified proxy session details, such as voice or SMS capabilities.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProxySessionResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime voice connector ID.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 128
        - name: proxySessionId
          in: path
          required: true
          description: The proxy session ID.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Capabilities
              properties:
                Capabilities:
                  description: The proxy session capabilities.
                  type: array
                  items:
                    $ref: '#/components/schemas/Capability'
                ExpiryMinutes:
                  description: The number of minutes allowed for the proxy session.
                  type: integer
                  minimum: 1
  '/accounts/{accountId}/rooms/{roomId}':
    delete:
      operationId: DeleteRoom
      description: Deletes a chat room in an Amazon Chime Enterprise account.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: roomId
          in: path
          required: true
          description: The chat room ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetRoom
      description: 'Retrieves room details, such as the room name, for a room in an Amazon Chime Enterprise account.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoomResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: roomId
          in: path
          required: true
          description: The room ID.
          schema:
            type: string
            pattern: .*\S.*
    post:
      operationId: UpdateRoom
      description: 'Updates room details, such as the room name, for a room in an Amazon Chime Enterprise account.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRoomResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: roomId
          in: path
          required: true
          description: The room ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The room name.
                  type: string
                  format: password
  '/accounts/{accountId}/rooms/{roomId}/memberships/{memberId}':
    delete:
      operationId: DeleteRoomMembership
      description: Removes a member from a chat room in an Amazon Chime Enterprise account.
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: roomId
          in: path
          required: true
          description: The room ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: memberId
          in: path
          required: true
          description: The member ID (user ID or bot ID).
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateRoomMembership
      description: 'Updates room membership details, such as the member role, for a room in an Amazon Chime Enterprise account. The member role designates whether the member is a chat room administrator or a general chat room member. The member role can be updated only for user IDs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRoomMembershipResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: roomId
          in: path
          required: true
          description: The room ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: memberId
          in: path
          required: true
          description: The member ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Role:
                  description: The role of the member.
                  type: string
                  enum:
                    - Administrator
                    - Member
  '/sip-media-applications/{sipMediaApplicationId}':
    delete:
      operationId: DeleteSipMediaApplication
      description: Deletes a SIP media application.
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: sipMediaApplicationId
          in: path
          required: true
          description: The SIP media application ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetSipMediaApplication
      description: 'Retrieves the information for a SIP media application, including name, AWS Region, and endpoints.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSipMediaApplicationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: sipMediaApplicationId
          in: path
          required: true
          description: The SIP media application ID.
          schema:
            type: string
            pattern: .*\S.*
    put:
      operationId: UpdateSipMediaApplication
      description: Updates the details of the specified SIP media application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSipMediaApplicationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: sipMediaApplicationId
          in: path
          required: true
          description: The SIP media application ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The new name for the specified SIP media application.
                  type: string
                  minLength: 1
                  maxLength: 256
                Endpoints:
                  description: The new set of endpoints for the specified SIP media application.
                  type: array
                  items:
                    $ref: '#/components/schemas/SipMediaApplicationEndpoint'
                  minItems: 1
                  maxItems: 1
  '/sip-rules/{sipRuleId}':
    delete:
      operationId: DeleteSipRule
      description: Deletes a SIP rule. You must disable a SIP rule before you can delete it.
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: sipRuleId
          in: path
          required: true
          description: The SIP rule ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetSipRule
      description: 'Retrieves the details of a SIP rule, such as the rule ID, name, triggers, and target endpoints.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSipRuleResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: sipRuleId
          in: path
          required: true
          description: The SIP rule ID.
          schema:
            type: string
            pattern: .*\S.*
    put:
      operationId: UpdateSipRule
      description: Updates the details of the specified SIP rule.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSipRuleResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '487':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '488':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: sipRuleId
          in: path
          required: true
          description: The SIP rule ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The new name for the specified SIP rule.
                  type: string
                  minLength: 1
                  maxLength: 256
                Disabled:
                  description: The new value specified to indicate whether the rule is disabled.
                  type: boolean
                TargetApplications:
                  description: The new value of the list of target applications.
                  type: array
                  items:
                    $ref: '#/components/schemas/SipRuleTargetApplication'
                  minItems: 1
                  maxItems: 25
  '/voice-connectors/{voiceConnectorId}':
    delete:
      operationId: DeleteVoiceConnector
      description: Deletes the specified Amazon Chime Voice Connector. Any phone numbers associated with the Amazon Chime Voice Connector must be disassociated from it before it can be deleted.
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetVoiceConnector
      description: 'Retrieves details for the specified Amazon Chime Voice Connector, such as timestamps,name, outbound host, and encryption requirements.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceConnectorResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    put:
      operationId: UpdateVoiceConnector
      description: Updates details for the specified Amazon Chime Voice Connector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVoiceConnectorResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - RequireEncryption
              properties:
                Name:
                  description: The name of the Amazon Chime Voice Connector.
                  type: string
                  minLength: 1
                  maxLength: 256
                RequireEncryption:
                  description: 'When enabled, requires encryption for the Amazon Chime Voice Connector.'
                  type: boolean
  '/voice-connectors/{voiceConnectorId}/emergency-calling-configuration':
    delete:
      operationId: DeleteVoiceConnectorEmergencyCallingConfiguration
      description: Deletes the emergency calling configuration details from the specified Amazon Chime Voice Connector.
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetVoiceConnectorEmergencyCallingConfiguration
      description: Gets the emergency calling configuration details for the specified Amazon Chime Voice Connector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceConnectorEmergencyCallingConfigurationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    put:
      operationId: PutVoiceConnectorEmergencyCallingConfiguration
      description: 'Puts emergency calling configuration details to the specified Amazon Chime Voice Connector, such as emergency phone numbers and calling countries. Origination and termination settings must be enabled for the Amazon Chime Voice Connector before emergency calling can be configured.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutVoiceConnectorEmergencyCallingConfigurationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - EmergencyCallingConfiguration
              properties:
                EmergencyCallingConfiguration:
                  description: The emergency calling configuration details associated with an Amazon Chime Voice Connector.
                  type: object
                  properties:
                    DNIS:
                      $ref: '#/components/schemas/DNISEmergencyCallingConfigurationList'
                      description: The Dialed Number Identification Service (DNIS) emergency calling configuration details.
  '/voice-connector-groups/{voiceConnectorGroupId}':
    delete:
      operationId: DeleteVoiceConnectorGroup
      description: Deletes the specified Amazon Chime Voice Connector group. Any <code>VoiceConnectorItems</code> and phone numbers associated with the group must be removed before it can be deleted.
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorGroupId
          in: path
          required: true
          description: The Amazon Chime Voice Connector group ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetVoiceConnectorGroup
      description: ' Retrieves details for the specified Amazon Chime Voice Connector group, such as timestamps,name, and associated <code>VoiceConnectorItems</code>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceConnectorGroupResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorGroupId
          in: path
          required: true
          description: The Amazon Chime Voice Connector group ID.
          schema:
            type: string
            pattern: .*\S.*
    put:
      operationId: UpdateVoiceConnectorGroup
      description: 'Updates details of the specified Amazon Chime Voice Connector group, such as the name and Amazon Chime Voice Connector priority ranking.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVoiceConnectorGroupResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorGroupId
          in: path
          required: true
          description: The Amazon Chime Voice Connector group ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - VoiceConnectorItems
              properties:
                Name:
                  description: The name of the Amazon Chime Voice Connector group.
                  type: string
                  minLength: 1
                  maxLength: 256
                VoiceConnectorItems:
                  description: The <code>VoiceConnectorItems</code> to associate with the group.
                  type: array
                  items:
                    $ref: '#/components/schemas/VoiceConnectorItem'
  '/voice-connectors/{voiceConnectorId}/origination':
    delete:
      operationId: DeleteVoiceConnectorOrigination
      description: '<p>Deletes the origination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the origination settings.</p> </note>'
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetVoiceConnectorOrigination
      description: Retrieves origination setting details for the specified Amazon Chime Voice Connector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceConnectorOriginationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    put:
      operationId: PutVoiceConnectorOrigination
      description: '<p>Adds origination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off origination settings.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutVoiceConnectorOriginationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Origination
              properties:
                Origination:
                  description: Origination settings enable your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector.
                  type: object
                  properties:
                    Routes:
                      $ref: '#/components/schemas/OriginationRouteList'
                      description: 'The call distribution properties defined for your SIP hosts. Valid range: Minimum value of 1. Maximum value of 20.'
                    Disabled:
                      $ref: '#/components/schemas/Boolean'
                      description: 'When origination settings are disabled, inbound calls are not enabled for your Amazon Chime Voice Connector.'
  '/voice-connectors/{voiceConnectorId}/programmable-numbers/proxy':
    delete:
      operationId: DeleteVoiceConnectorProxy
      description: Deletes the proxy configuration from the specified Amazon Chime Voice Connector.
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetVoiceConnectorProxy
      description: Gets the proxy configuration details for the specified Amazon Chime Voice Connector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceConnectorProxyResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime voice connector ID.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 128
    put:
      operationId: PutVoiceConnectorProxy
      description: Puts the specified proxy configuration to the specified Amazon Chime Voice Connector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutVoiceConnectorProxyResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime voice connector ID.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DefaultSessionExpiryMinutes
                - PhoneNumberPoolCountries
              properties:
                DefaultSessionExpiryMinutes:
                  description: The default number of minutes allowed for proxy sessions.
                  type: integer
                PhoneNumberPoolCountries:
                  description: The countries for proxy phone numbers to be selected from.
                  type: array
                  items:
                    $ref: '#/components/schemas/Country'
                  minItems: 1
                  maxItems: 100
                FallBackPhoneNumber:
                  description: The phone number to route calls to after a proxy session expires.
                  type: string
                  pattern: '^\+?[1-9]\d{1,14}$'
                  format: password
                Disabled:
                  description: 'When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector.'
                  type: boolean
  '/voice-connectors/{voiceConnectorId}/streaming-configuration':
    delete:
      operationId: DeleteVoiceConnectorStreamingConfiguration
      description: Deletes the streaming configuration for the specified Amazon Chime Voice Connector.
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetVoiceConnectorStreamingConfiguration
      description: 'Retrieves the streaming configuration details for the specified Amazon Chime Voice Connector. Shows whether media streaming is enabled for sending to Amazon Kinesis. It also shows the retention period, in hours, for the Amazon Kinesis data.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceConnectorStreamingConfigurationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    put:
      operationId: PutVoiceConnectorStreamingConfiguration
      description: 'Adds a streaming configuration for the specified Amazon Chime Voice Connector. The streaming configuration specifies whether media streaming is enabled for sending to Indonesians. It also sets the retention period, in hours, for the Amazon Kinesis data.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutVoiceConnectorStreamingConfigurationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StreamingConfiguration
              properties:
                StreamingConfiguration:
                  description: 'The streaming configuration associated with an Amazon Chime Voice Connector. Specifies whether media streaming is enabled for sending to Amazon Kinesis, and shows the retention period for the Amazon Kinesis data, in hours.'
                  type: object
                  properties:
                    DataRetentionInHours:
                      $ref: '#/components/schemas/DataRetentionInHours'
                      description: 'The retention period, in hours, for the Amazon Kinesis data.'
                    Disabled:
                      $ref: '#/components/schemas/Boolean'
                      description: 'When true, media streaming to Amazon Kinesis is turned off.'
                    StreamingNotificationTargets:
                      $ref: '#/components/schemas/StreamingNotificationTargetList'
                      description: The streaming notification targets.
  '/voice-connectors/{voiceConnectorId}/termination':
    delete:
      operationId: DeleteVoiceConnectorTermination
      description: '<p>Deletes the termination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the termination settings.</p> </note>'
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetVoiceConnectorTermination
      description: Retrieves termination setting details for the specified Amazon Chime Voice Connector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceConnectorTerminationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    put:
      operationId: PutVoiceConnectorTermination
      description: '<p>Adds termination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off termination settings.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutVoiceConnectorTerminationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Termination
              properties:
                Termination:
                  description: Termination settings enable your SIP hosts to make outbound calls using your Amazon Chime Voice Connector.
                  type: object
                  properties:
                    CpsLimit:
                      $ref: '#/components/schemas/CpsLimit'
                      description: The limit on calls per second. Max value based on account service quota. Default value of 1.
                    DefaultPhoneNumber:
                      $ref: '#/components/schemas/E164PhoneNumber'
                      description: The default caller ID phone number.
                    CallingRegions:
                      $ref: '#/components/schemas/CallingRegionList'
                      description: 'The countries to which calls are allowed, in ISO 3166-1 alpha-2 format. Required.'
                    CidrAllowedList:
                      $ref: '#/components/schemas/StringList'
                      description: 'The IP addresses allowed to make calls, in CIDR format. Required.'
                    Disabled:
                      $ref: '#/components/schemas/Boolean'
                      description: 'When termination settings are disabled, outbound calls can not be made.'
  '/voice-connectors/{voiceConnectorId}/termination/credentials#operation=delete':
    post:
      operationId: DeleteVoiceConnectorTerminationCredentials
      description: Deletes the specified SIP credentials used by your equipment to authenticate during call termination.
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Usernames
              properties:
                Usernames:
                  description: 'The RFC2617 compliant username associated with the SIP credentials, in US-ASCII format.'
                  type: array
                  items:
                    $ref: '#/components/schemas/SensitiveString'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}#scope=app-instance-user-membership&app-instance-user-arn':
    get:
      operationId: DescribeChannelMembershipForAppInstanceUser
      description: <p> Returns the details of a channel based on the membership of the specified <code>AppInstanceUser</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelMembershipForAppInstanceUserResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel to which the user belongs.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: app-instance-user-arn
          in: query
          required: true
          description: The ARN of the user in a channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: scope
          in: query
          required: true
          schema:
            type: string
            enum:
              - app-instance-user-membership
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}#scope=app-instance-user-moderated-channel&app-instance-user-arn':
    get:
      operationId: DescribeChannelModeratedByAppInstanceUser
      description: <p>Returns the full details of a channel moderated by the specified <code>AppInstanceUser</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelModeratedByAppInstanceUserResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the moderated channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: app-instance-user-arn
          in: query
          required: true
          description: The ARN of the <code>AppInstanceUser</code> in the moderated channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: scope
          in: query
          required: true
          schema:
            type: string
            enum:
              - app-instance-user-moderated-channel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}/users/{userId}#operation=disassociate-phone-number':
    post:
      operationId: DisassociatePhoneNumberFromUser
      description: Disassociates the primary provisioned phone number from the specified Amazon Chime user.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociatePhoneNumberFromUserResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
        - name: userId
          in: path
          required: true
          description: The user ID.
          schema:
            type: string
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - disassociate-phone-number
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/voice-connectors/{voiceConnectorId}#operation=disassociate-phone-numbers':
    post:
      operationId: DisassociatePhoneNumbersFromVoiceConnector
      description: Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociatePhoneNumbersFromVoiceConnectorResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - disassociate-phone-numbers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - E164PhoneNumbers
              properties:
                E164PhoneNumbers:
                  description: 'List of phone numbers, in E.164 format.'
                  type: array
                  items:
                    $ref: '#/components/schemas/E164PhoneNumber'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/voice-connector-groups/{voiceConnectorGroupId}#operation=disassociate-phone-numbers':
    post:
      operationId: DisassociatePhoneNumbersFromVoiceConnectorGroup
      description: Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociatePhoneNumbersFromVoiceConnectorGroupResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorGroupId
          in: path
          required: true
          description: The Amazon Chime Voice Connector group ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - disassociate-phone-numbers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - E164PhoneNumbers
              properties:
                E164PhoneNumbers:
                  description: 'List of phone numbers, in E.164 format.'
                  type: array
                  items:
                    $ref: '#/components/schemas/E164PhoneNumber'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}#operation=disassociate-signin-delegate-groups':
    post:
      operationId: DisassociateSigninDelegateGroupsFromAccount
      description: Disassociates the specified sign-in delegate groups from the specified Amazon Chime account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateSigninDelegateGroupsFromAccountResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - disassociate-signin-delegate-groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - GroupNames
              properties:
                GroupNames:
                  description: The sign-in delegate group names.
                  type: array
                  items:
                    $ref: '#/components/schemas/String'
                  minItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}/settings':
    get:
      operationId: GetAccountSettings
      description: 'Retrieves account settings for the specified Amazon Chime account ID, such as remote control and dialout settings. For more information about these settings, see <a href="https://docs.aws.amazon.com/chime/latest/ag/policies.html">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountSettingsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateAccountSettings
      description: 'Updates the settings for the specified Amazon Chime account. You can update settings for remote control of shared screens, or for the dial-out option. For more information about these settings, see <a href="https://docs.aws.amazon.com/chime/latest/ag/policies.html">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountSettingsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountSettings
              properties:
                AccountSettings:
                  description: 'Settings related to the Amazon Chime account. This includes settings that start or stop remote control of shared screens, or start or stop the dial-out option in the Amazon Chime web application. For more information about these settings, see <a href="https://docs.aws.amazon.com/chime/latest/ag/policies.html">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.'
                  type: object
                  properties:
                    DisableRemoteControl:
                      $ref: '#/components/schemas/Boolean'
                      description: Setting that stops or starts remote control of shared screens during meetings.
                    EnableDialOut:
                      $ref: '#/components/schemas/Boolean'
                      description: 'Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href="https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html">Join a Meeting without the Amazon Chime App</a>.'
  '/app-instances/{appInstanceArn}/retention-settings':
    get:
      operationId: GetAppInstanceRetentionSettings
      description: Gets the retention settings for an <code>AppInstance</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppInstanceRetentionSettingsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutAppInstanceRetentionSettings
      description: Sets the amount of time in days that a given <code>AppInstance</code> retains data.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppInstanceRetentionSettingsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AppInstanceRetentionSettings
              properties:
                AppInstanceRetentionSettings:
                  description: The details of the data-retention settings for an <code>AppInstance</code>.
                  type: object
                  properties:
                    ChannelRetentionSettings:
                      $ref: '#/components/schemas/ChannelRetentionSettings'
                      description: The length of time in days to retain the messages in a channel.
  '/accounts/{accountId}/bots/{botId}':
    get:
      operationId: GetBot
      description: 'Retrieves details for the specified bot, such as bot email address, bot type, status, and display name.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBotResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '486':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: botId
          in: path
          required: true
          description: The bot ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateBot
      description: 'Updates the status of the specified bot, such as starting or stopping the bot from running in your Amazon Chime Enterprise account.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBotResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: botId
          in: path
          required: true
          description: The bot ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Disabled:
                  description: 'When true, stops the specified bot from running in your account.'
                  type: boolean
  /settings:
    get:
      operationId: GetGlobalSettings
      description: 'Retrieves global settings for the administrator''s AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGlobalSettingsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateGlobalSettings
      description: 'Updates global settings for the administrator''s AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.'
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - BusinessCalling
                - VoiceConnector
              properties:
                BusinessCalling:
                  description: The Amazon Chime Business Calling settings for the administrator's AWS account. Includes any Amazon S3 buckets designated for storing call detail records.
                  type: object
                  properties:
                    CdrBucket:
                      $ref: '#/components/schemas/String'
                      description: The Amazon S3 bucket designated for call detail record storage.
                VoiceConnector:
                  description: The Amazon Chime Voice Connector settings. Includes any Amazon S3 buckets designated for storing call detail records.
                  type: object
                  properties:
                    CdrBucket:
                      $ref: '#/components/schemas/String'
                      description: The Amazon S3 bucket designated for call detail record storage.
  /endpoints/messaging-session:
    get:
      operationId: GetMessagingSessionEndpoint
      description: The details of the endpoint for the messaging session.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagingSessionEndpointResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/phone-number-orders/{phoneNumberOrderId}':
    get:
      operationId: GetPhoneNumberOrder
      description: 'Retrieves details for the specified phone number order, such as the order creation timestamp, phone numbers in E.164 format, product type, and order status.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPhoneNumberOrderResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: phoneNumberOrderId
          in: path
          required: true
          description: The ID for the phone number order.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /settings/phone-number:
    get:
      operationId: GetPhoneNumberSettings
      description: 'Retrieves the phone number settings for the administrator''s AWS account, such as the default outbound calling name.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPhoneNumberSettingsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdatePhoneNumberSettings
      description: 'Updates the phone number settings for the administrator''s AWS account, such as the default outbound calling name. You can update the default outbound calling name once every seven days. Outbound calling names can take up to 72 hours to update.'
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - CallingName
              properties:
                CallingName:
                  description: The default outbound calling name for the account.
                  type: string
                  pattern: '^$|^[a-zA-Z0-9 ]{2,15}$'
                  format: password
  '/accounts/{accountId}/retention-settings':
    get:
      operationId: GetRetentionSettings
      description: ' Gets the retention settings for the specified Amazon Chime Enterprise account. For more information about retention settings, see <a href="https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html">Managing Chat Retention Policies</a> in the <i>Amazon Chime Administration Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRetentionSettingsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutRetentionSettings
      description: '<p> Puts retention settings for the specified Amazon Chime Enterprise account. We recommend using AWS CloudTrail to monitor usage of this API for your account. For more information, see <a href="https://docs.aws.amazon.com/chime/latest/ag/cloudtrail.html">Logging Amazon Chime API Calls with AWS CloudTrail</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p> To turn off existing retention settings, remove the number of days from the corresponding <b>RetentionDays</b> field in the <b>RetentionSettings</b> object. For more information about retention settings, see <a href="https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html">Managing Chat Retention Policies</a> in the <i>Amazon Chime Administration Guide</i>.</p>'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRetentionSettingsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - RetentionSettings
              properties:
                RetentionSettings:
                  description: The retention settings for an Amazon Chime Enterprise account that determine how long to retain items such as chat-room messages and chat-conversation messages.
                  type: object
                  properties:
                    RoomRetentionSettings:
                      $ref: '#/components/schemas/RoomRetentionSettings'
                      description: The chat room retention settings.
                    ConversationRetentionSettings:
                      $ref: '#/components/schemas/ConversationRetentionSettings'
                      description: The chat conversation retention settings.
  '/sip-media-applications/{sipMediaApplicationId}/logging-configuration':
    get:
      operationId: GetSipMediaApplicationLoggingConfiguration
      description: Returns the logging configuration for the specified SIP media application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSipMediaApplicationLoggingConfigurationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: sipMediaApplicationId
          in: path
          required: true
          description: The SIP media application ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutSipMediaApplicationLoggingConfiguration
      description: Updates the logging configuration for the specified SIP media application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSipMediaApplicationLoggingConfigurationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: sipMediaApplicationId
          in: path
          required: true
          description: The SIP media application ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SipMediaApplicationLoggingConfiguration:
                  description: Logging configuration of the SIP media application.
                  type: object
                  properties:
                    EnableSipMediaApplicationMessageLogs:
                      $ref: '#/components/schemas/Boolean'
                      description: Enables application message logs for the SIP media application.
  '/accounts/{accountId}/users/{userId}':
    get:
      operationId: GetUser
      description: '<p>Retrieves details for the specified user ID, such as primary email address, license type,and personal meeting PIN.</p> <p> To retrieve user details with an email address instead of a user ID, use the <a>ListUsers</a> action, and then filter by email address. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: userId
          in: path
          required: true
          description: The user ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateUser
      description: 'Updates user details for a specified user ID. Currently, only <code>LicenseType</code> updates are supported for this action.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: userId
          in: path
          required: true
          description: The user ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LicenseType:
                  description: The user license type to update. This must be a supported license type for the Amazon Chime account that the user belongs to.
                  type: string
                  enum:
                    - Basic
                    - Plus
                    - Pro
                    - ProTrial
                UserType:
                  description: The user type.
                  type: string
                  enum:
                    - PrivateUser
                    - SharedDevice
                AlexaForBusinessMetadata:
                  description: 'The Alexa for Business metadata associated with an Amazon Chime user, used to integrate Alexa for Business with a device.'
                  type: object
                  properties:
                    IsAlexaForBusinessEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: Starts or stops Alexa for Business.
                    AlexaForBusinessRoomArn:
                      $ref: '#/components/schemas/SensitiveString'
                      description: The ARN of the room resource.
  '/accounts/{accountId}/users/{userId}/settings':
    get:
      operationId: GetUserSettings
      description: 'Retrieves settings for the specified user ID, such as any associated phone number settings.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserSettingsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
        - name: userId
          in: path
          required: true
          description: The user ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateUserSettings
      description: 'Updates the settings for the specified user, such as phone number settings.'
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
        - name: userId
          in: path
          required: true
          description: The user ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - UserSettings
              properties:
                UserSettings:
                  description: 'Settings associated with an Amazon Chime user, including inbound and outbound calling and text messaging.'
                  type: object
                  properties:
                    Telephony:
                      $ref: '#/components/schemas/TelephonySettings'
                      description: The telephony settings associated with the user.
  '/voice-connectors/{voiceConnectorId}/logging-configuration':
    get:
      operationId: GetVoiceConnectorLoggingConfiguration
      description: Retrieves the logging configuration details for the specified Amazon Chime Voice Connector. Shows whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceConnectorLoggingConfigurationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutVoiceConnectorLoggingConfiguration
      description: Adds a logging configuration for the specified Amazon Chime Voice Connector. The logging configuration specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutVoiceConnectorLoggingConfigurationResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LoggingConfiguration
              properties:
                LoggingConfiguration:
                  description: The logging configuration associated with an Amazon Chime Voice Connector. Specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.
                  type: object
                  properties:
                    EnableSIPLogs:
                      $ref: '#/components/schemas/Boolean'
                      description: 'When true, enables SIP message logs for sending to Amazon CloudWatch Logs.'
  '/voice-connectors/{voiceConnectorId}/termination/health':
    get:
      operationId: GetVoiceConnectorTerminationHealth
      description: Retrieves information about the last time a SIP <code>OPTIONS</code> ping was received from your SIP infrastructure for the specified Amazon Chime Voice Connector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceConnectorTerminationHealthResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}/users#operation=add':
    post:
      operationId: InviteUsers
      description: 'Sends email to a maximum of 50 users, inviting them to the specified Amazon Chime <code>Team</code> account. Only <code>Team</code> account types are currently supported for this action.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteUsersResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - add
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - UserEmailList
              properties:
                UserEmailList:
                  description: The user email addresses to which to send the email invitation.
                  type: array
                  items:
                    $ref: '#/components/schemas/EmailAddress'
                  maxItems: 50
                UserType:
                  description: The user type.
                  type: string
                  enum:
                    - PrivateUser
                    - SharedDevice
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /app-instance-users#app-instance-arn:
    get:
      operationId: ListAppInstanceUsers
      description: 'List all <code>AppInstanceUsers</code> created under a single <code>AppInstance</code>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppInstanceUsersResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: app-instance-arn
          in: query
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of requests that you want returned.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested users are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/meetings/{meetingId}/attendees/{attendeeId}/tags':
    get:
      operationId: ListAttendeeTags
      description: Lists the tags applied to an Amazon Chime SDK attendee resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttendeeTagsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: attendeeId
          in: path
          required: true
          description: The Amazon Chime SDK attendee ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /channels#scope=app-instance-user-memberships:
    get:
      operationId: ListChannelMembershipsForAppInstanceUser
      description: <p> Lists all channels that a particular <code>AppInstanceUser</code> is a part of. Only an <code>AppInstanceAdmin</code> can call the API with a user ARN that is not their own. </p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelMembershipsForAppInstanceUserResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: app-instance-user-arn
          in: query
          required: false
          description: The ARN of the <code>AppInstanceUser</code>s
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of users that you want returned.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token returned from previous API requests until the number of channel memberships is reached.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: scope
          in: query
          required: true
          schema:
            type: string
            enum:
              - app-instance-user-memberships
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/messages':
    get:
      operationId: ListChannelMessages
      description: '<p>List all the messages in a channel. Returns a paginated list of <code>ChannelMessages</code>. By default, sorted by creation timestamp in descending order.</p> <note> <p>Redacted messages appear in the results as empty, since they are only redacted, not deleted. Deleted messages do not appear in the results. This action always returns the latest version of an edited message.</p> <p>Also, the x-amz-chime-bearer request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelMessagesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: sort-order
          in: query
          required: false
          description: 'The order in which you want messages sorted. Default is Descending, based on time created.'
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - name: not-before
          in: query
          required: false
          description: The initial or starting time stamp for your requested messages.
          schema:
            type: string
            format: date-time
        - name: not-after
          in: query
          required: false
          description: The final or ending time stamp for your requested messages.
          schema:
            type: string
            format: date-time
        - name: max-results
          in: query
          required: false
          description: The maximum number of messages that you want returned.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested messages are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: SendChannelMessage
      description: '<p>Sends a message to a particular channel that the member is a part of.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> <p>Also, <code>STANDARD</code> messages can contain 4KB of data and the 1KB of metadata. <code>CONTROL</code> messages can contain 30 bytes of data and no metadata.</p> </note>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendChannelMessageResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Content
                - Type
                - Persistence
                - ClientRequestToken
              properties:
                Content:
                  description: The content of the message.
                  type: string
                  pattern: '[\s\S]*'
                  minLength: 1
                  format: password
                Type:
                  description: 'The type of message, <code>STANDARD</code> or <code>CONTROL</code>.'
                  type: string
                  enum:
                    - STANDARD
                    - CONTROL
                Persistence:
                  description: Boolean that controls whether the message is persisted on the back end. Required.
                  type: string
                  enum:
                    - PERSISTENT
                    - NON_PERSISTENT
                Metadata:
                  description: The optional metadata for each message.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 1024
                  format: password
                ClientRequestToken:
                  description: The <code>Idempotency</code> token for each client request.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 2
                  maxLength: 64
                  format: password
  /channels#app-instance-arn:
    get:
      operationId: ListChannels
      description: <p>Lists all Channels created under a single Chime App as a paginated list. You can specify filters to narrow results.</p> <p class="title"> <b>Functionality &amp; restrictions</b> </p> <ul> <li> <p>Use privacy = <code>PUBLIC</code> to retrieve all public channels in the account.</p> </li> <li> <p>Only an <code>AppInstanceAdmin</code> can set privacy = <code>PRIVATE</code> to list the private channels in an account.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: app-instance-arn
          in: query
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: privacy
          in: query
          required: false
          description: 'The privacy setting. <code>PUBLIC</code> retrieves all the public channels. <code>PRIVATE</code> retrieves private channels. Only an <code>AppInstanceAdmin</code> can retrieve private channels. '
          schema:
            type: string
            enum:
              - PUBLIC
              - PRIVATE
        - name: max-results
          in: query
          required: false
          description: The maximum number of channels that you want to return.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested channels are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /channels#scope=app-instance-user-moderated-channels:
    get:
      operationId: ListChannelsModeratedByAppInstanceUser
      description: <p>A list of the channels moderated by an <code>AppInstanceUser</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsModeratedByAppInstanceUserResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: app-instance-user-arn
          in: query
          required: false
          description: The ARN of the user in the moderated channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of channels in the request.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token returned from previous API requests until the number of channels moderated by the user is reached.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: scope
          in: query
          required: true
          schema:
            type: string
            enum:
              - app-instance-user-moderated-channels
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/meetings/{meetingId}/tags':
    get:
      operationId: ListMeetingTags
      description: Lists the tags applied to an Amazon Chime SDK meeting resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMeetingTagsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /phone-numbers:
    get:
      operationId: ListPhoneNumbers
      description: 'Lists the phone numbers for the specified Amazon Chime account, Amazon Chime user, Amazon Chime Voice Connector, or Amazon Chime Voice Connector group.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPhoneNumbersResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: status
          in: query
          required: false
          description: The phone number status.
          schema:
            type: string
            enum:
              - AcquireInProgress
              - AcquireFailed
              - Unassigned
              - Assigned
              - ReleaseInProgress
              - DeleteInProgress
              - ReleaseFailed
              - DeleteFailed
        - name: product-type
          in: query
          required: false
          description: The phone number product type.
          schema:
            type: string
            enum:
              - BusinessCalling
              - VoiceConnector
              - SipMediaApplicationDialIn
        - name: filter-name
          in: query
          required: false
          description: The filter to use to limit the number of results.
          schema:
            type: string
            enum:
              - AccountId
              - UserId
              - VoiceConnectorId
              - VoiceConnectorGroupId
              - SipRuleId
        - name: filter-value
          in: query
          required: false
          description: The value to use for the filter.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 99
        - name: next-token
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /phone-number-countries#product-type:
    get:
      operationId: ListSupportedPhoneNumberCountries
      description: Lists supported phone number countries.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSupportedPhoneNumberCountriesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: product-type
          in: query
          required: true
          description: The phone number product type.
          schema:
            type: string
            enum:
              - BusinessCalling
              - VoiceConnector
              - SipMediaApplicationDialIn
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tags#arn:
    get:
      operationId: ListTagsForResource
      description: Lists the tags applied to an Amazon Chime SDK meeting resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: arn
          in: query
          required: true
          description: The resource ARN.
          schema:
            type: string
            pattern: '^arn[\/\:\-\_\.a-zA-Z0-9]+$'
            minLength: 1
            maxLength: 1024
            format: password
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/voice-connectors/{voiceConnectorId}/termination/credentials':
    get:
      operationId: ListVoiceConnectorTerminationCredentials
      description: Lists the SIP credentials for the specified Amazon Chime Voice Connector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVoiceConnectorTerminationCredentialsResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}/users/{userId}#operation=logout':
    post:
      operationId: LogoutUser
      description: Logs out the specified user from all of the devices they are currently logged into.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutUserResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: userId
          in: path
          required: true
          description: The user ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - logout
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/voice-connectors/{voiceConnectorId}/termination/credentials#operation=put':
    post:
      operationId: PutVoiceConnectorTerminationCredentials
      description: Adds termination SIP credentials for the specified Amazon Chime Voice Connector.
      responses:
        '204':
          description: Success
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: voiceConnectorId
          in: path
          required: true
          description: The Amazon Chime Voice Connector ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - put
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Credentials:
                  description: The termination SIP credentials.
                  type: array
                  items:
                    $ref: '#/components/schemas/Credential'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/messages/{messageId}#operation=redact':
    post:
      operationId: RedactChannelMessage
      description: '<p>Redacts message content, but not metadata. The message exists in the back end, but the action returns null content, and the state shows as redacted.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedactChannelMessageResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel containing the messages that you want to redact.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: messageId
          in: path
          required: true
          description: The ID of the message being redacted.
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - redact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}/conversations/{conversationId}/messages/{messageId}#operation=redact':
    post:
      operationId: RedactConversationMessage
      description: Redacts the specified message from the specified Amazon Chime conversation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedactConversationMessageResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: conversationId
          in: path
          required: true
          description: The conversation ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: messageId
          in: path
          required: true
          description: The message ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - redact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}/rooms/{roomId}/messages/{messageId}#operation=redact':
    post:
      operationId: RedactRoomMessage
      description: Redacts the specified message from the specified Amazon Chime channel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedactRoomMessageResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: roomId
          in: path
          required: true
          description: The room ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: messageId
          in: path
          required: true
          description: The message ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - redact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}/bots/{botId}#operation=regenerate-security-token':
    post:
      operationId: RegenerateSecurityToken
      description: Regenerates the security token for a bot.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegenerateSecurityTokenResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: botId
          in: path
          required: true
          description: The bot ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - regenerate-security-token
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{accountId}/users/{userId}#operation=reset-personal-pin':
    post:
      operationId: ResetPersonalPIN
      description: Resets the personal meeting PIN for the specified user on an Amazon Chime account. Returns the <a>User</a> object with the updated personal meeting PIN.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPersonalPINResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: accountId
          in: path
          required: true
          description: The Amazon Chime account ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: userId
          in: path
          required: true
          description: The user ID.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - reset-personal-pin
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/phone-numbers/{phoneNumberId}#operation=restore':
    post:
      operationId: RestorePhoneNumber
      description: Moves a phone number from the <b>Deletion queue</b> back into the phone number <b>Inventory</b>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePhoneNumberResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: phoneNumberId
          in: path
          required: true
          description: The phone number.
          schema:
            type: string
            pattern: .*\S.*
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - restore
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /search#type=phone-numbers:
    get:
      operationId: SearchAvailablePhoneNumbers
      description: 'Searches for phone numbers that can be ordered. For US numbers, provide at least one of the following search filters: <code>AreaCode</code>, <code>City</code>, <code>State</code>, or <code>TollFreePrefix</code>. If you provide <code>City</code>, you must also provide <code>State</code>. Numbers outside the US only support the <code>PhoneNumberType</code> filter, which you must use.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAvailablePhoneNumbersResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: area-code
          in: query
          required: false
          description: The area code used to filter results. Only applies to the US.
          schema:
            type: string
        - name: city
          in: query
          required: false
          description: The city used to filter results. Only applies to the US.
          schema:
            type: string
        - name: country
          in: query
          required: false
          description: 'The country used to filter results. Defaults to the US Format: ISO 3166-1 alpha-2.'
          schema:
            type: string
            pattern: '[A-Z]{2}'
        - name: state
          in: query
          required: false
          description: The state used to filter results. Required only if you provide <code>City</code>. Only applies to the US.
          schema:
            type: string
        - name: toll-free-prefix
          in: query
          required: false
          description: The toll-free prefix that you use to filter results. Only applies to the US.
          schema:
            type: string
            pattern: ^8(00|33|44|55|66|77|88)$
            minLength: 3
            maxLength: 3
        - name: phone-number-type
          in: query
          required: false
          description: The phone number type used to filter results. Required for non-US numbers.
          schema:
            type: string
            enum:
              - Local
              - TollFree
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: next-token
          in: query
          required: false
          description: The token used to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - phone-numbers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/meetings/{meetingId}/transcription#operation=start':
    post:
      operationId: StartMeetingTranscription
      description: 'Start transcription for the specified <code>meetingId</code>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMeetingTranscriptionResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '486':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '487':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '488':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The unique ID of the meeting being transcribed.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - start
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TranscriptionConfiguration
              properties:
                TranscriptionConfiguration:
                  description: The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or <code>EngineTranscribeMedicalSettings</code>.
                  type: object
                  properties:
                    EngineTranscribeSettings:
                      $ref: '#/components/schemas/EngineTranscribeSettings'
                      description: The transcription configuration settings passed to Amazon Transcribe.
                    EngineTranscribeMedicalSettings:
                      $ref: '#/components/schemas/EngineTranscribeMedicalSettings'
                      description: The transcription configuration settings passed to Amazon Transcribe.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/meetings/{meetingId}/transcription#operation=stop':
    post:
      operationId: StopMeetingTranscription
      description: Stops transcription for the specified <code>meetingId</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopMeetingTranscriptionResponse'
        '480':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The unique ID of the meeting for which you stop transcription.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - stop
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/meetings/{meetingId}/attendees/{attendeeId}/tags#operation=add':
    post:
      operationId: TagAttendee
      description: Applies the specified tags to the specified Amazon Chime SDK attendee.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: attendeeId
          in: path
          required: true
          description: The Amazon Chime SDK attendee ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - add
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The tag key-value pairs.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/meetings/{meetingId}/tags#operation=add':
    post:
      operationId: TagMeeting
      description: Applies the specified tags to the specified Amazon Chime SDK meeting.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - add
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The tag key-value pairs.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tags#operation=tag-resource:
    post:
      operationId: TagResource
      description: Applies the specified tags to the specified Amazon Chime SDK meeting resource.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - tag-resource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceARN
                - Tags
              properties:
                ResourceARN:
                  description: The resource ARN.
                  type: string
                  pattern: '^arn[\/\:\-\_\.a-zA-Z0-9]+$'
                  minLength: 1
                  maxLength: 1024
                  format: password
                Tags:
                  description: The tag key-value pairs.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/meetings/{meetingId}/attendees/{attendeeId}/tags#operation=delete':
    post:
      operationId: UntagAttendee
      description: Untags the specified tags from the specified Amazon Chime SDK attendee.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: attendeeId
          in: path
          required: true
          description: The Amazon Chime SDK attendee ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TagKeys
              properties:
                TagKeys:
                  description: The tag keys.
                  type: array
                  items:
                    $ref: '#/components/schemas/TagKey'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/meetings/{meetingId}/tags#operation=delete':
    post:
      operationId: UntagMeeting
      description: Untags the specified tags from the specified Amazon Chime SDK meeting.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: meetingId
          in: path
          required: true
          description: The Amazon Chime SDK meeting ID.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TagKeys
              properties:
                TagKeys:
                  description: The tag keys.
                  type: array
                  items:
                    $ref: '#/components/schemas/TagKey'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tags#operation=untag-resource:
    post:
      operationId: UntagResource
      description: Untags the specified tags from the specified Amazon Chime SDK meeting resource.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - untag-resource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceARN
                - TagKeys
              properties:
                ResourceARN:
                  description: The resource ARN.
                  type: string
                  pattern: '^arn[\/\:\-\_\.a-zA-Z0-9]+$'
                  minLength: 1
                  maxLength: 1024
                  format: password
                TagKeys:
                  description: The tag keys.
                  type: array
                  items:
                    $ref: '#/components/schemas/TagKey'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/readMarker':
    put:
      operationId: UpdateChannelReadMarker
      description: <p>The details of the time when a user last read messages in a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelReadMarkerResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/sip-media-applications/{sipMediaApplicationId}/calls/{transactionId}':
    post:
      operationId: UpdateSipMediaApplicationCall
      description: 'Allows you to trigger a Lambda function at any time while a call is active, and replace the current actions with new actions returned by the invocation.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSipMediaApplicationCallResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: sipMediaApplicationId
          in: path
          required: true
          description: The ID of the SIP media application handling the call.
          schema:
            type: string
            pattern: .*\S.*
        - name: transactionId
          in: path
          required: true
          description: The ID of the call transaction.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Arguments
              properties:
                Arguments:
                  description: Arguments made available to the Lambda function as part of the <code>CALL_UPDATE_REQUESTED</code> event. Can contain 0-20 key-value pairs.
                  type: object
                  minProperties: 0
                  maxProperties: 20
                  additionalProperties:
                    $ref: '#/components/schemas/SensitiveString'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociatePhoneNumberWithUserResponse:
      type: object
      properties: {}
    UnauthorizedClientException: {}
    NotFoundException: {}
    ForbiddenException: {}
    BadRequestException: {}
    AccessDeniedException: {}
    ThrottledClientException: {}
    ServiceUnavailableException: {}
    ServiceFailureException: {}
    AssociatePhoneNumbersWithVoiceConnectorResponse:
      type: object
      properties:
        PhoneNumberErrors:
          $ref: '#/components/schemas/PhoneNumberErrorList'
          description: 'If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.'
    E164PhoneNumber:
      type: string
      pattern: '^\+?[1-9]\d{1,14}$'
      format: password
    AssociatePhoneNumbersWithVoiceConnectorGroupResponse:
      type: object
      properties:
        PhoneNumberErrors:
          $ref: '#/components/schemas/PhoneNumberErrorList'
          description: 'If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.'
    AssociateSigninDelegateGroupsWithAccountResponse:
      type: object
      properties: {}
    SigninDelegateGroup:
      type: object
      properties:
        GroupName:
          $ref: '#/components/schemas/NonEmptyString'
          description: The group name.
      description: An Active Directory (AD) group whose members are granted permission to act as delegates.
    BatchCreateAttendeeResponse:
      type: object
      properties:
        Attendees:
          $ref: '#/components/schemas/AttendeeList'
          description: 'The attendee information, including attendees IDs and join tokens.'
        Errors:
          $ref: '#/components/schemas/BatchCreateAttendeeErrorList'
          description: 'If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages.'
    CreateAttendeeRequestItem:
      type: object
      required:
        - ExternalUserId
      properties:
        ExternalUserId:
          $ref: '#/components/schemas/ExternalUserIdType'
          description: The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.
        Tags:
          $ref: '#/components/schemas/AttendeeTagList'
          description: The tag key-value pairs.
      description: 'The Amazon Chime SDK attendee fields to create, used with the BatchCreateAttendee action.'
    ResourceLimitExceededException: {}
    BatchCreateChannelMembershipResponse:
      type: object
      properties:
        BatchChannelMemberships:
          $ref: '#/components/schemas/BatchChannelMemberships'
          description: The list of channel memberships in the response.
        Errors:
          $ref: '#/components/schemas/BatchCreateChannelMembershipErrors'
          description: 'If the action fails for one or more of the memberships in the request, a list of the memberships is returned, along with error codes and error messages.'
    ChimeArn:
      type: string
      pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
      minLength: 5
      maxLength: 1600
    BatchCreateRoomMembershipResponse:
      type: object
      properties:
        Errors:
          $ref: '#/components/schemas/MemberErrorList'
          description: 'If the action fails for one or more of the member IDs in the request, a list of the member IDs is returned, along with error codes and error messages.'
    MembershipItem:
      type: object
      properties:
        MemberId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The member ID.
        Role:
          $ref: '#/components/schemas/RoomMembershipRole'
          description: The member role.
      description: 'Membership details, such as member ID and member role.'
    BatchDeletePhoneNumberResponse:
      type: object
      properties:
        PhoneNumberErrors:
          $ref: '#/components/schemas/PhoneNumberErrorList'
          description: 'If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.'
    String:
      type: string
    BatchSuspendUserResponse:
      type: object
      properties:
        UserErrors:
          $ref: '#/components/schemas/UserErrorList'
          description: 'If the <a>BatchSuspendUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages.'
    NonEmptyString:
      type: string
      pattern: .*\S.*
    BatchUnsuspendUserResponse:
      type: object
      properties:
        UserErrors:
          $ref: '#/components/schemas/UserErrorList'
          description: 'If the <a>BatchUnsuspendUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages.'
    BatchUpdatePhoneNumberResponse:
      type: object
      properties:
        PhoneNumberErrors:
          $ref: '#/components/schemas/PhoneNumberErrorList'
          description: 'If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.'
    UpdatePhoneNumberRequestItem:
      type: object
      required:
        - PhoneNumberId
      properties:
        PhoneNumberId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The phone number ID to update.
        ProductType:
          $ref: '#/components/schemas/PhoneNumberProductType'
          description: The product type to update.
        CallingName:
          $ref: '#/components/schemas/CallingName'
          description: The outbound calling name to update.
      description: 'The phone number ID, product type, or calling name fields to update, used with the <a>BatchUpdatePhoneNumber</a> and <a>UpdatePhoneNumber</a> actions.'
    BatchUpdateUserResponse:
      type: object
      properties:
        UserErrors:
          $ref: '#/components/schemas/UserErrorList'
          description: 'If the <a>BatchUpdateUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages.'
    UpdateUserRequestItem:
      type: object
      required:
        - UserId
      properties:
        UserId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The user ID.
        LicenseType:
          $ref: '#/components/schemas/License'
          description: The user license type.
        UserType:
          $ref: '#/components/schemas/UserType'
          description: The user type.
        AlexaForBusinessMetadata:
          $ref: '#/components/schemas/AlexaForBusinessMetadata'
          description: The Alexa for Business metadata.
      description: 'The user ID and user fields to update, used with the <a>BatchUpdateUser</a> action.'
    CreateAccountResponse:
      type: object
      properties:
        Account:
          $ref: '#/components/schemas/Account'
          description: The Amazon Chime account details.
    CreateAppInstanceResponse:
      type: object
      properties:
        AppInstanceArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The Amazon Resource Number (ARN) of the <code>AppInstance</code>.
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The key of the tag.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The value of the tag.
      description: Describes a tag applied to a resource.
    ConflictException: {}
    CreateAppInstanceAdminResponse:
      type: object
      properties:
        AppInstanceAdmin:
          $ref: '#/components/schemas/Identity'
          description: The name and ARN of the admin for the <code>AppInstance</code>.
        AppInstanceArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the of the admin for the <code>AppInstance</code>.
    CreateAppInstanceUserResponse:
      type: object
      properties:
        AppInstanceUserArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The user's ARN.
    CreateAttendeeResponse:
      type: object
      properties:
        Attendee:
          $ref: '#/components/schemas/Attendee'
          description: 'The attendee information, including attendee ID and join token.'
    CreateBotResponse:
      type: object
      properties:
        Bot:
          $ref: '#/components/schemas/Bot'
          description: The bot details.
    CreateChannelResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
    CreateChannelBanResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the response to the ban request.
        Member:
          $ref: '#/components/schemas/Identity'
          description: The <code>ChannelArn</code> and <code>BannedIdentity</code> of the member in the ban response.
    CreateChannelMembershipResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        Member:
          $ref: '#/components/schemas/Identity'
          description: The ARN and metadata of the member being added.
    CreateChannelModeratorResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        ChannelModerator:
          $ref: '#/components/schemas/Identity'
          description: The ARNs of the channel and the moderator.
    CreateMediaCapturePipelineResponse:
      type: object
      properties:
        MediaCapturePipeline:
          $ref: '#/components/schemas/MediaCapturePipeline'
          description: 'A media capture pipeline object, the ID, source type, source ARN, sink type, and sink ARN of a media capture pipeline object.'
    CreateMeetingResponse:
      type: object
      properties:
        Meeting:
          $ref: '#/components/schemas/Meeting'
          description: ' The meeting information, including the meeting ID and <code>MediaPlacement</code> . '
    Arn:
      type: string
      pattern: '^arn[\/\:\-\_\.a-zA-Z0-9]+$'
      minLength: 1
      maxLength: 1024
      format: password
    CreateMeetingDialOutResponse:
      type: object
      properties:
        TransactionId:
          $ref: '#/components/schemas/GuidString'
          description: Unique ID that tracks API calls.
    CreateMeetingWithAttendeesResponse:
      type: object
      properties:
        Meeting:
          $ref: '#/components/schemas/Meeting'
        Attendees:
          $ref: '#/components/schemas/AttendeeList'
          description: 'The attendee information, including attendees IDs and join tokens.'
        Errors:
          $ref: '#/components/schemas/BatchCreateAttendeeErrorList'
          description: 'If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages.'
    CreatePhoneNumberOrderResponse:
      type: object
      properties:
        PhoneNumberOrder:
          $ref: '#/components/schemas/PhoneNumberOrder'
          description: The phone number order details.
    CreateProxySessionResponse:
      type: object
      properties:
        ProxySession:
          $ref: '#/components/schemas/ProxySession'
          description: The proxy session details.
    Capability:
      type: string
      enum:
        - Voice
        - SMS
    Country:
      type: string
      pattern: '^$|^[A-Z]{2,2}$'
    AreaCode:
      type: string
      pattern: '^$|^[0-9]{3,3}$'
    CreateRoomResponse:
      type: object
      properties:
        Room:
          $ref: '#/components/schemas/Room'
          description: The room details.
    CreateRoomMembershipResponse:
      type: object
      properties:
        RoomMembership:
          $ref: '#/components/schemas/RoomMembership'
          description: The room membership details.
    CreateSipMediaApplicationResponse:
      type: object
      properties:
        SipMediaApplication:
          $ref: '#/components/schemas/SipMediaApplication'
          description: The SIP media application details.
    SipMediaApplicationEndpoint:
      type: object
      properties:
        LambdaArn:
          $ref: '#/components/schemas/FunctionArn'
          description: Valid Amazon Resource Name (ARN) of the Lambda function. The function must be created in the same AWS Region as the SIP media application.
      description: The endpoint assigned to the SIP media application.
    CreateSipMediaApplicationCallResponse:
      type: object
      properties:
        SipMediaApplicationCall:
          $ref: '#/components/schemas/SipMediaApplicationCall'
          description: The actual call.
    CreateSipRuleResponse:
      type: object
      properties:
        SipRule:
          $ref: '#/components/schemas/SipRule'
          description: 'Returns the SIP rule information, including the rule ID, triggers, and target applications.'
    SipRuleTargetApplication:
      type: object
      properties:
        SipMediaApplicationId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The SIP media application ID.
        Priority:
          $ref: '#/components/schemas/SipApplicationPriority'
          description: Priority of the SIP media application in the target list.
        AwsRegion:
          $ref: '#/components/schemas/String'
          description: The AWS Region of the target application.
      description: 'Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.'
    CreateUserResponse:
      type: object
      properties:
        User:
          $ref: '#/components/schemas/User'
    CreateVoiceConnectorResponse:
      type: object
      properties:
        VoiceConnector:
          $ref: '#/components/schemas/VoiceConnector'
          description: The Amazon Chime Voice Connector details.
    CreateVoiceConnectorGroupResponse:
      type: object
      properties:
        VoiceConnectorGroup:
          $ref: '#/components/schemas/VoiceConnectorGroup'
          description: The Amazon Chime Voice Connector group details.
    VoiceConnectorItem:
      type: object
      required:
        - VoiceConnectorId
        - Priority
      properties:
        VoiceConnectorId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Chime Voice Connector ID.
        Priority:
          $ref: '#/components/schemas/VoiceConnectorItemPriority'
          description: 'The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first.'
      description: 'For Amazon Chime Voice Connector groups, the Amazon Chime Voice Connectors to which to route inbound calls. Includes priority configuration settings. Limit: 3 <code>VoiceConnectorItems</code> per Amazon Chime Voice Connector group.'
    DeleteAccountResponse:
      type: object
      properties: {}
    UnprocessableEntityException: {}
    SensitiveString:
      type: string
      format: password
    DescribeAppInstanceResponse:
      type: object
      properties:
        AppInstance:
          $ref: '#/components/schemas/AppInstance'
          description: 'The ARN, metadata, created and last-updated timestamps, and the name of the <code>AppInstance</code>. All timestamps use epoch milliseconds.'
    DescribeAppInstanceAdminResponse:
      type: object
      properties:
        AppInstanceAdmin:
          $ref: '#/components/schemas/AppInstanceAdmin'
          description: 'The ARN and name of the <code>AppInstanceUser</code>, the ARN of the <code>AppInstance</code>, and the created and last-updated timestamps. All timestamps use epoch milliseconds.'
    DescribeAppInstanceUserResponse:
      type: object
      properties:
        AppInstanceUser:
          $ref: '#/components/schemas/AppInstanceUser'
          description: The name of the <code>AppInstanceUser</code>.
    DescribeChannelResponse:
      type: object
      properties:
        Channel:
          $ref: '#/components/schemas/Channel'
          description: The channel details.
    DescribeChannelBanResponse:
      type: object
      properties:
        ChannelBan:
          $ref: '#/components/schemas/ChannelBan'
          description: The details of the ban.
    DescribeChannelMembershipResponse:
      type: object
      properties:
        ChannelMembership:
          $ref: '#/components/schemas/ChannelMembership'
          description: The details of the membership.
    DescribeChannelMembershipForAppInstanceUserResponse:
      type: object
      properties:
        ChannelMembership:
          $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummary'
          description: The channel to which a user belongs.
    DescribeChannelModeratedByAppInstanceUserResponse:
      type: object
      properties:
        Channel:
          $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummary'
          description: The moderated channel.
    DescribeChannelModeratorResponse:
      type: object
      properties:
        ChannelModerator:
          $ref: '#/components/schemas/ChannelModerator'
          description: The details of the channel moderator.
    DisassociatePhoneNumberFromUserResponse:
      type: object
      properties: {}
    DisassociatePhoneNumbersFromVoiceConnectorResponse:
      type: object
      properties:
        PhoneNumberErrors:
          $ref: '#/components/schemas/PhoneNumberErrorList'
          description: 'If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.'
    DisassociatePhoneNumbersFromVoiceConnectorGroupResponse:
      type: object
      properties:
        PhoneNumberErrors:
          $ref: '#/components/schemas/PhoneNumberErrorList'
          description: 'If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.'
    DisassociateSigninDelegateGroupsFromAccountResponse:
      type: object
      properties: {}
    GetAccountResponse:
      type: object
      properties:
        Account:
          $ref: '#/components/schemas/Account'
          description: The Amazon Chime account details.
    GetAccountSettingsResponse:
      type: object
      properties:
        AccountSettings:
          $ref: '#/components/schemas/AccountSettings'
          description: The Amazon Chime account settings.
    GetAppInstanceRetentionSettingsResponse:
      type: object
      properties:
        AppInstanceRetentionSettings:
          $ref: '#/components/schemas/AppInstanceRetentionSettings'
          description: The retention settings for the <code>AppInstance</code>.
        InitiateDeletionTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp representing the time at which the specified items are retained, in Epoch Seconds.'
    GetAppInstanceStreamingConfigurationsResponse:
      type: object
      properties:
        AppInstanceStreamingConfigurations:
          $ref: '#/components/schemas/AppInstanceStreamingConfigurationList'
          description: The streaming settings.
    GetAttendeeResponse:
      type: object
      properties:
        Attendee:
          $ref: '#/components/schemas/Attendee'
          description: The Amazon Chime SDK attendee information.
    GetBotResponse:
      type: object
      properties:
        Bot:
          $ref: '#/components/schemas/Bot'
          description: The chat bot details.
    GetChannelMessageResponse:
      type: object
      properties:
        ChannelMessage:
          $ref: '#/components/schemas/ChannelMessage'
          description: The details of and content in the message.
    GetEventsConfigurationResponse:
      type: object
      properties:
        EventsConfiguration:
          $ref: '#/components/schemas/EventsConfiguration'
          description: The events configuration details.
    GetGlobalSettingsResponse:
      type: object
      properties:
        BusinessCalling:
          $ref: '#/components/schemas/BusinessCallingSettings'
          description: The Amazon Chime Business Calling settings.
        VoiceConnector:
          $ref: '#/components/schemas/VoiceConnectorSettings'
          description: The Amazon Chime Voice Connector settings.
    GetMediaCapturePipelineResponse:
      type: object
      properties:
        MediaCapturePipeline:
          $ref: '#/components/schemas/MediaCapturePipeline'
          description: The media capture pipeline object.
    GetMeetingResponse:
      type: object
      properties:
        Meeting:
          $ref: '#/components/schemas/Meeting'
          description: The Amazon Chime SDK meeting information.
    GetMessagingSessionEndpointResponse:
      type: object
      properties:
        Endpoint:
          $ref: '#/components/schemas/MessagingSessionEndpoint'
          description: The endpoint returned in the response.
    GetPhoneNumberResponse:
      type: object
      properties:
        PhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
          description: The phone number details.
    GetPhoneNumberOrderResponse:
      type: object
      properties:
        PhoneNumberOrder:
          $ref: '#/components/schemas/PhoneNumberOrder'
          description: The phone number order details.
    GetPhoneNumberSettingsResponse:
      type: object
      properties:
        CallingName:
          $ref: '#/components/schemas/CallingName'
          description: The default outbound calling name for the account.
        CallingNameUpdatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The updated outbound calling name timestamp, in ISO 8601 format.'
    GetProxySessionResponse:
      type: object
      properties:
        ProxySession:
          $ref: '#/components/schemas/ProxySession'
          description: The proxy session details.
    GetRetentionSettingsResponse:
      type: object
      properties:
        RetentionSettings:
          $ref: '#/components/schemas/RetentionSettings'
          description: The retention settings.
        InitiateDeletionTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The timestamp representing the time at which the specified items are permanently deleted, in ISO 8601 format.'
    GetRoomResponse:
      type: object
      properties:
        Room:
          $ref: '#/components/schemas/Room'
          description: The room details.
    GetSipMediaApplicationResponse:
      type: object
      properties:
        SipMediaApplication:
          $ref: '#/components/schemas/SipMediaApplication'
          description: The SIP media application details.
    GetSipMediaApplicationLoggingConfigurationResponse:
      type: object
      properties:
        SipMediaApplicationLoggingConfiguration:
          $ref: '#/components/schemas/SipMediaApplicationLoggingConfiguration'
          description: The actual logging configuration.
    GetSipRuleResponse:
      type: object
      properties:
        SipRule:
          $ref: '#/components/schemas/SipRule'
          description: The SIP rule details.
    GetUserResponse:
      type: object
      properties:
        User:
          $ref: '#/components/schemas/User'
          description: The user details.
    GetUserSettingsResponse:
      type: object
      properties:
        UserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: The user settings.
    GetVoiceConnectorResponse:
      type: object
      properties:
        VoiceConnector:
          $ref: '#/components/schemas/VoiceConnector'
          description: The Amazon Chime Voice Connector details.
    GetVoiceConnectorEmergencyCallingConfigurationResponse:
      type: object
      properties:
        EmergencyCallingConfiguration:
          $ref: '#/components/schemas/EmergencyCallingConfiguration'
          description: The emergency calling configuration details.
    GetVoiceConnectorGroupResponse:
      type: object
      properties:
        VoiceConnectorGroup:
          $ref: '#/components/schemas/VoiceConnectorGroup'
          description: The Amazon Chime Voice Connector group details.
    GetVoiceConnectorLoggingConfigurationResponse:
      type: object
      properties:
        LoggingConfiguration:
          $ref: '#/components/schemas/LoggingConfiguration'
          description: The logging configuration details.
    GetVoiceConnectorOriginationResponse:
      type: object
      properties:
        Origination:
          $ref: '#/components/schemas/Origination'
          description: The origination setting details.
    GetVoiceConnectorProxyResponse:
      type: object
      properties:
        Proxy:
          $ref: '#/components/schemas/Proxy'
          description: The proxy configuration details.
    GetVoiceConnectorStreamingConfigurationResponse:
      type: object
      properties:
        StreamingConfiguration:
          $ref: '#/components/schemas/StreamingConfiguration'
          description: The streaming configuration details.
    GetVoiceConnectorTerminationResponse:
      type: object
      properties:
        Termination:
          $ref: '#/components/schemas/Termination'
          description: The termination setting details.
    GetVoiceConnectorTerminationHealthResponse:
      type: object
      properties:
        TerminationHealth:
          $ref: '#/components/schemas/TerminationHealth'
          description: The termination health details.
    InviteUsersResponse:
      type: object
      properties:
        Invites:
          $ref: '#/components/schemas/InviteList'
          description: The email invitation details.
    EmailAddress:
      type: string
      pattern: .+@.+\..+
      format: password
    ListAccountsResponse:
      type: object
      properties:
        Accounts:
          $ref: '#/components/schemas/AccountList'
          description: List of Amazon Chime accounts and account details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The token to use to retrieve the next page of results.
    ListAppInstanceAdminsResponse:
      type: object
      properties:
        AppInstanceArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the <code>AppInstance</code>.
        AppInstanceAdmins:
          $ref: '#/components/schemas/AppInstanceAdminList'
          description: The information for each administrator.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token returned from previous API requests until the number of administrators is reached.
    ListAppInstanceUsersResponse:
      type: object
      properties:
        AppInstanceArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the <code>AppInstance</code>.
        AppInstanceUsers:
          $ref: '#/components/schemas/AppInstanceUserList'
          description: The information for each requested <code>AppInstanceUser</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested users are returned.
    ListAppInstancesResponse:
      type: object
      properties:
        AppInstances:
          $ref: '#/components/schemas/AppInstanceList'
          description: The information for each <code>AppInstance</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API requests until the maximum number of <code>AppInstance</code>s is reached.
    ListAttendeeTagsResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag key-value pairs.
    ListAttendeesResponse:
      type: object
      properties:
        Attendees:
          $ref: '#/components/schemas/AttendeeList'
          description: The Amazon Chime SDK attendee information.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The token to use to retrieve the next page of results.
    ListBotsResponse:
      type: object
      properties:
        Bots:
          $ref: '#/components/schemas/BotList'
          description: List of bots and bot details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The token to use to retrieve the next page of results.
    ListChannelBansResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested bans are returned.
        ChannelBans:
          $ref: '#/components/schemas/ChannelBanSummaryList'
          description: The information for each requested ban.
    ListChannelMembershipsResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        ChannelMemberships:
          $ref: '#/components/schemas/ChannelMembershipSummaryList'
          description: The information for the requested channel memberships.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested channel memberships are returned.
    ListChannelMembershipsForAppInstanceUserResponse:
      type: object
      properties:
        ChannelMemberships:
          $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummaryList'
          description: The token passed by previous API calls until all requested users are returned.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested users are returned.
    ListChannelMessagesResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel containing the requested messages.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested messages are returned.
        ChannelMessages:
          $ref: '#/components/schemas/ChannelMessageSummaryList'
          description: 'The information about, and content of, each requested message.'
    ListChannelModeratorsResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested moderators are returned.
        ChannelModerators:
          $ref: '#/components/schemas/ChannelModeratorSummaryList'
          description: The information about and names of each moderator.
    ListChannelsResponse:
      type: object
      properties:
        Channels:
          $ref: '#/components/schemas/ChannelSummaryList'
          description: The information about each channel.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token returned from previous API requests until the number of channels is reached.
    ListChannelsModeratedByAppInstanceUserResponse:
      type: object
      properties:
        Channels:
          $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummaryList'
          description: The moderated channels in the request.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token returned from previous API requests until the number of channels moderated by the user is reached.
    ListMediaCapturePipelinesResponse:
      type: object
      properties:
        MediaCapturePipelines:
          $ref: '#/components/schemas/MediaCapturePipelineList'
          description: The media capture pipeline objects in the list.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token used to retrieve the next page of results. '
    ListMeetingTagsResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag key-value pairs.
    ListMeetingsResponse:
      type: object
      properties:
        Meetings:
          $ref: '#/components/schemas/MeetingList'
          description: The Amazon Chime SDK meeting information.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The token to use to retrieve the next page of results.
    ListPhoneNumberOrdersResponse:
      type: object
      properties:
        PhoneNumberOrders:
          $ref: '#/components/schemas/PhoneNumberOrderList'
          description: The phone number order details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The token to use to retrieve the next page of results.
    ListPhoneNumbersResponse:
      type: object
      properties:
        PhoneNumbers:
          $ref: '#/components/schemas/PhoneNumberList'
          description: The phone number details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The token to use to retrieve the next page of results.
    ListProxySessionsResponse:
      type: object
      properties:
        ProxySessions:
          $ref: '#/components/schemas/ProxySessions'
          description: The proxy session details.
        NextToken:
          $ref: '#/components/schemas/NextTokenString'
          description: The token to use to retrieve the next page of results.
    ListRoomMembershipsResponse:
      type: object
      properties:
        RoomMemberships:
          $ref: '#/components/schemas/RoomMembershipList'
          description: The room membership details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The token to use to retrieve the next page of results.
    ListRoomsResponse:
      type: object
      properties:
        Rooms:
          $ref: '#/components/schemas/RoomList'
          description: The room details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The token to use to retrieve the next page of results.
    ListSipMediaApplicationsResponse:
      type: object
      properties:
        SipMediaApplications:
          $ref: '#/components/schemas/SipMediaApplicationList'
          description: List of SIP media applications and application details.
        NextToken:
          $ref: '#/components/schemas/NextTokenString'
          description: The token to use to retrieve the next page of results.
    ListSipRulesResponse:
      type: object
      properties:
        SipRules:
          $ref: '#/components/schemas/SipRuleList'
          description: List of SIP rules and rule details.
        NextToken:
          $ref: '#/components/schemas/NextTokenString'
          description: The token to use to retrieve the next page of results.
    ListSupportedPhoneNumberCountriesResponse:
      type: object
      properties:
        PhoneNumberCountries:
          $ref: '#/components/schemas/PhoneNumberCountriesList'
          description: The supported phone number countries.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag-key value pairs.
    ListUsersResponse:
      type: object
      properties:
        Users:
          $ref: '#/components/schemas/UserList'
          description: List of users and user details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The token to use to retrieve the next page of results.
    ListVoiceConnectorGroupsResponse:
      type: object
      properties:
        VoiceConnectorGroups:
          $ref: '#/components/schemas/VoiceConnectorGroupList'
          description: The details of the Amazon Chime Voice Connector groups.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The token to use to retrieve the next page of results.
    ListVoiceConnectorTerminationCredentialsResponse:
      type: object
      properties:
        Usernames:
          $ref: '#/components/schemas/SensitiveStringList'
          description: A list of user names.
    ListVoiceConnectorsResponse:
      type: object
      properties:
        VoiceConnectors:
          $ref: '#/components/schemas/VoiceConnectorList'
          description: The details of the Amazon Chime Voice Connectors.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The token to use to retrieve the next page of results.
    LogoutUserResponse:
      type: object
      properties: {}
    PutAppInstanceRetentionSettingsResponse:
      type: object
      properties:
        AppInstanceRetentionSettings:
          $ref: '#/components/schemas/AppInstanceRetentionSettings'
          description: 'The time in days to retain data. Data type: number.'
        InitiateDeletionTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the API deletes data.
    ChannelRetentionSettings:
      type: object
      properties:
        RetentionDays:
          $ref: '#/components/schemas/RetentionDays'
          description: The time in days to retain the messages in a channel.
      description: The details of the retention settings for a channel.
    PutAppInstanceStreamingConfigurationsResponse:
      type: object
      properties:
        AppInstanceStreamingConfigurations:
          $ref: '#/components/schemas/AppInstanceStreamingConfigurationList'
          description: The streaming configurations of an <code>AppInstance</code>.
    AppInstanceStreamingConfiguration:
      type: object
      required:
        - AppInstanceDataType
        - ResourceArn
      properties:
        AppInstanceDataType:
          $ref: '#/components/schemas/AppInstanceDataType'
          description: The type of data to be streamed.
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The resource ARN.
      description: The details of the streaming configuration of an <code>AppInstance</code>.
    PutEventsConfigurationResponse:
      type: object
      properties:
        EventsConfiguration:
          $ref: '#/components/schemas/EventsConfiguration'
    PutRetentionSettingsResponse:
      type: object
      properties:
        RetentionSettings:
          $ref: '#/components/schemas/RetentionSettings'
          description: The retention settings.
        InitiateDeletionTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The timestamp representing the time at which the specified items are permanently deleted, in ISO 8601 format.'
    RoomRetentionSettings:
      type: object
      properties:
        RetentionDays:
          $ref: '#/components/schemas/RetentionDays'
          description: The number of days for which to retain chat-room messages.
      description: The retention settings that determine how long to retain chat-room messages for an Amazon Chime Enterprise account.
    ConversationRetentionSettings:
      type: object
      properties:
        RetentionDays:
          $ref: '#/components/schemas/RetentionDays'
          description: The number of days for which to retain conversation messages.
      description: The retention settings that determine how long to retain conversation messages for an Amazon Chime Enterprise account.
    PutSipMediaApplicationLoggingConfigurationResponse:
      type: object
      properties:
        SipMediaApplicationLoggingConfiguration:
          $ref: '#/components/schemas/SipMediaApplicationLoggingConfiguration'
    Boolean:
      type: boolean
    PutVoiceConnectorEmergencyCallingConfigurationResponse:
      type: object
      properties:
        EmergencyCallingConfiguration:
          $ref: '#/components/schemas/EmergencyCallingConfiguration'
          description: The emergency calling configuration details.
    DNISEmergencyCallingConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/DNISEmergencyCallingConfiguration'
    PutVoiceConnectorLoggingConfigurationResponse:
      type: object
      properties:
        LoggingConfiguration:
          $ref: '#/components/schemas/LoggingConfiguration'
          description: The updated logging configuration details.
    PutVoiceConnectorOriginationResponse:
      type: object
      properties:
        Origination:
          $ref: '#/components/schemas/Origination'
          description: The updated origination setting details.
    OriginationRouteList:
      type: array
      items:
        $ref: '#/components/schemas/OriginationRoute'
    PutVoiceConnectorProxyResponse:
      type: object
      properties:
        Proxy:
          $ref: '#/components/schemas/Proxy'
          description: The proxy configuration details.
    PutVoiceConnectorStreamingConfigurationResponse:
      type: object
      properties:
        StreamingConfiguration:
          $ref: '#/components/schemas/StreamingConfiguration'
          description: The updated streaming configuration details.
    DataRetentionInHours:
      type: integer
      minimum: 0
    StreamingNotificationTargetList:
      type: array
      items:
        $ref: '#/components/schemas/StreamingNotificationTarget'
      minItems: 1
      maxItems: 3
    PutVoiceConnectorTerminationResponse:
      type: object
      properties:
        Termination:
          $ref: '#/components/schemas/Termination'
          description: The updated termination setting details.
    CpsLimit:
      type: integer
      minimum: 1
    CallingRegionList:
      type: array
      items:
        $ref: '#/components/schemas/CallingRegion'
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Credential:
      type: object
      properties:
        Username:
          $ref: '#/components/schemas/SensitiveString'
          description: 'The RFC2617 compliant user name associated with the SIP credentials, in US-ASCII format.'
        Password:
          $ref: '#/components/schemas/SensitiveString'
          description: 'The RFC2617 compliant password associated with the SIP credentials, in US-ASCII format.'
      description: The SIP credentials used to authenticate requests to your Amazon Chime Voice Connector.
    RedactChannelMessageResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel containing the messages that you want to redact.
        MessageId:
          $ref: '#/components/schemas/MessageId'
          description: The ID of the message being redacted.
    RedactConversationMessageResponse:
      type: object
      properties: {}
    RedactRoomMessageResponse:
      type: object
      properties: {}
    RegenerateSecurityTokenResponse:
      type: object
      properties:
        Bot:
          $ref: '#/components/schemas/Bot'
    ResetPersonalPINResponse:
      type: object
      properties:
        User:
          $ref: '#/components/schemas/User'
          description: The user details and new personal meeting PIN.
    RestorePhoneNumberResponse:
      type: object
      properties:
        PhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
          description: The phone number details.
    SearchAvailablePhoneNumbersResponse:
      type: object
      properties:
        E164PhoneNumbers:
          $ref: '#/components/schemas/E164PhoneNumberList'
          description: 'List of phone numbers, in E.164 format.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: The token used to retrieve the next page of search results.
    SendChannelMessageResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MessageId:
          $ref: '#/components/schemas/MessageId'
          description: The ID string assigned to each message.
    StartMeetingTranscriptionResponse:
      type: object
      properties: {}
    EngineTranscribeSettings:
      type: object
      required:
        - LanguageCode
      properties:
        LanguageCode:
          $ref: '#/components/schemas/TranscribeLanguageCode'
          description: The language code specified for the Amazon Transcribe engine.
        VocabularyFilterMethod:
          $ref: '#/components/schemas/TranscribeVocabularyFilterMethod'
          description: The filtering method passed to Amazon Transcribe.
        VocabularyFilterName:
          $ref: '#/components/schemas/String'
          description: The name of the vocabulary filter passed to Amazon Transcribe.
        VocabularyName:
          $ref: '#/components/schemas/String'
          description: The name of the vocabulary passed to Amazon Transcribe.
        Region:
          $ref: '#/components/schemas/TranscribeRegion'
          description: 'The AWS Region passed to Amazon Transcribe. If you don''t specify a Region, Amazon Chime uses the meeting''s Region.'
      description: Settings specific to the Amazon Transcribe engine.
    EngineTranscribeMedicalSettings:
      type: object
      required:
        - LanguageCode
        - Specialty
        - Type
      properties:
        LanguageCode:
          $ref: '#/components/schemas/TranscribeMedicalLanguageCode'
          description: The language code specified for the Amazon Transcribe Medical engine.
        Specialty:
          $ref: '#/components/schemas/TranscribeMedicalSpecialty'
          description: The specialty specified for the Amazon Transcribe Medical engine.
        Type:
          $ref: '#/components/schemas/TranscribeMedicalType'
          description: The type of transcription.
        VocabularyName:
          $ref: '#/components/schemas/String'
          description: The name of the vocabulary passed to Amazon Transcribe Medical.
        Region:
          $ref: '#/components/schemas/TranscribeMedicalRegion'
          description: 'The AWS Region passed to Amazon Transcribe Medical. If you don''t specify a Region, Amazon Chime uses the meeting''s Region.'
      description: Settings specific to the Amazon Transcribe Medical engine.
    StopMeetingTranscriptionResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
      format: password
    UpdateAccountResponse:
      type: object
      properties:
        Account:
          $ref: '#/components/schemas/Account'
          description: The updated Amazon Chime account details.
    UpdateAccountSettingsResponse:
      type: object
      properties: {}
    UpdateAppInstanceResponse:
      type: object
      properties:
        AppInstanceArn:
          $ref: '#/components/schemas/ChimeArn'
          description: 'The ARN of the <code>AppInstance</code>. '
    UpdateAppInstanceUserResponse:
      type: object
      properties:
        AppInstanceUserArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the <code>AppInstanceUser</code>.
    UpdateBotResponse:
      type: object
      properties:
        Bot:
          $ref: '#/components/schemas/Bot'
          description: The updated bot details.
    UpdateChannelResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
    UpdateChannelMessageResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MessageId:
          $ref: '#/components/schemas/MessageId'
          description: The ID string of the message being updated.
    UpdateChannelReadMarkerResponse:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
    UpdatePhoneNumberResponse:
      type: object
      properties:
        PhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
          description: The updated phone number details.
    UpdateProxySessionResponse:
      type: object
      properties:
        ProxySession:
          $ref: '#/components/schemas/ProxySession'
          description: The proxy session details.
    UpdateRoomResponse:
      type: object
      properties:
        Room:
          $ref: '#/components/schemas/Room'
          description: The room details.
    UpdateRoomMembershipResponse:
      type: object
      properties:
        RoomMembership:
          $ref: '#/components/schemas/RoomMembership'
          description: The room membership details.
    UpdateSipMediaApplicationResponse:
      type: object
      properties:
        SipMediaApplication:
          $ref: '#/components/schemas/SipMediaApplication'
          description: The updated SIP media application details.
    UpdateSipMediaApplicationCallResponse:
      type: object
      properties:
        SipMediaApplicationCall:
          $ref: '#/components/schemas/SipMediaApplicationCall'
    UpdateSipRuleResponse:
      type: object
      properties:
        SipRule:
          $ref: '#/components/schemas/SipRule'
          description: Updated SIP rule details.
    UpdateUserResponse:
      type: object
      properties:
        User:
          $ref: '#/components/schemas/User'
          description: The updated user details.
    TelephonySettings:
      type: object
      required:
        - InboundCalling
        - OutboundCalling
        - SMS
      properties:
        InboundCalling:
          $ref: '#/components/schemas/Boolean'
          description: Allows or denies inbound calling.
        OutboundCalling:
          $ref: '#/components/schemas/Boolean'
          description: Allows or denies outbound calling.
        SMS:
          $ref: '#/components/schemas/Boolean'
          description: Allows or denies SMS messaging.
      description: 'Settings that allow management of telephony permissions for an Amazon Chime user, such as inbound and outbound calling and text messaging.'
    UpdateVoiceConnectorResponse:
      type: object
      properties:
        VoiceConnector:
          $ref: '#/components/schemas/VoiceConnector'
          description: The updated Amazon Chime Voice Connector details.
    UpdateVoiceConnectorGroupResponse:
      type: object
      properties:
        VoiceConnectorGroup:
          $ref: '#/components/schemas/VoiceConnectorGroup'
          description: The updated Amazon Chime Voice Connector group details.
    AccountType:
      type: string
      enum:
        - Team
        - EnterpriseDirectory
        - EnterpriseLWA
        - EnterpriseOIDC
    Iso8601Timestamp:
      type: string
      format: date-time
    License:
      type: string
      enum:
        - Basic
        - Plus
        - Pro
        - ProTrial
    LicenseList:
      type: array
      items:
        $ref: '#/components/schemas/License'
    AccountStatus:
      type: string
      enum:
        - Suspended
        - Active
    SigninDelegateGroupList:
      type: array
      items:
        $ref: '#/components/schemas/SigninDelegateGroup'
    Account:
      type: object
      required:
        - AwsAccountId
        - AccountId
        - Name
      properties:
        AwsAccountId:
          $ref: '#/components/schemas/String'
          description: The AWS account ID.
        AccountId:
          $ref: '#/components/schemas/String'
          description: The Amazon Chime account ID.
        Name:
          $ref: '#/components/schemas/String'
          description: The Amazon Chime account name.
        AccountType:
          $ref: '#/components/schemas/AccountType'
          description: 'The Amazon Chime account type. For more information about different account types, see <a href="https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.'
        CreatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The Amazon Chime account creation timestamp, in ISO 8601 format.'
        DefaultLicense:
          $ref: '#/components/schemas/License'
          description: The default license for the Amazon Chime account.
        SupportedLicenses:
          $ref: '#/components/schemas/LicenseList'
          description: Supported licenses for the Amazon Chime account.
        AccountStatus:
          $ref: '#/components/schemas/AccountStatus'
          description: The status of the account.
        SigninDelegateGroups:
          $ref: '#/components/schemas/SigninDelegateGroupList'
          description: The sign-in delegate groups associated with the account.
      description: The Amazon Chime account details. An AWS account can have multiple Amazon Chime accounts.
    AccountList:
      type: array
      items:
        $ref: '#/components/schemas/Account'
    AccountName:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 100
    AccountSettings:
      type: object
      properties:
        DisableRemoteControl:
          $ref: '#/components/schemas/Boolean'
          description: Setting that stops or starts remote control of shared screens during meetings.
        EnableDialOut:
          $ref: '#/components/schemas/Boolean'
          description: 'Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href="https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html">Join a Meeting without the Amazon Chime App</a>.'
      description: 'Settings related to the Amazon Chime account. This includes settings that start or stop remote control of shared screens, or start or stop the dial-out option in the Amazon Chime web application. For more information about these settings, see <a href="https://docs.aws.amazon.com/chime/latest/ag/policies.html">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.'
    AlexaForBusinessMetadata:
      type: object
      properties:
        IsAlexaForBusinessEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Starts or stops Alexa for Business.
        AlexaForBusinessRoomArn:
          $ref: '#/components/schemas/SensitiveString'
          description: The ARN of the room resource.
      description: 'The Alexa for Business metadata associated with an Amazon Chime user, used to integrate Alexa for Business with a device.'
    Alpha2CountryCode:
      type: string
      pattern: '[A-Z]{2}'
    NonEmptyResourceName:
      type: string
      pattern: '[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*'
      minLength: 1
      maxLength: 256
      format: password
    Metadata:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1024
      format: password
    Timestamp:
      type: string
      format: date-time
    AppInstance:
      type: object
      properties:
        AppInstanceArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the messaging instance.
        Name:
          $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of an <code>AppInstance</code>.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The metadata of an <code>AppInstance</code>.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which an <code>AppInstance</code> was created. In epoch milliseconds.
        LastUpdatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time an <code>AppInstance</code> was last updated. In epoch milliseconds.
      description: 'The details of an <code>AppInstance</code>, an instance of an Amazon Chime SDK messaging application.'
    Identity:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN in an Identity.
        Name:
          $ref: '#/components/schemas/ResourceName'
          description: The name in an Identity.
      description: The details of a user.
    AppInstanceAdmin:
      type: object
      properties:
        Admin:
          $ref: '#/components/schemas/Identity'
          description: The <code>AppInstanceAdmin</code> data.
        AppInstanceArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the <code>AppInstance</code> for which the user is an administrator.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which an administrator was created.
      description: The details of an <code>AppInstanceAdmin</code>.
    AppInstanceAdminSummary:
      type: object
      properties:
        Admin:
          $ref: '#/components/schemas/Identity'
          description: The details of the <code>AppInstanceAdmin</code>.
      description: Summary of the details of an <code>AppInstanceAdmin</code>.
    AppInstanceAdminList:
      type: array
      items:
        $ref: '#/components/schemas/AppInstanceAdminSummary'
    AppInstanceDataType:
      type: string
      enum:
        - Channel
        - ChannelMessage
    AppInstanceSummary:
      type: object
      properties:
        AppInstanceArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The <code>AppInstance</code> ARN.
        Name:
          $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the <code>AppInstance</code>.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The metadata of the <code>AppInstance</code>.
      description: Summary of the data for an <code>AppInstance</code>.
    AppInstanceList:
      type: array
      items:
        $ref: '#/components/schemas/AppInstanceSummary'
    AppInstanceRetentionSettings:
      type: object
      properties:
        ChannelRetentionSettings:
          $ref: '#/components/schemas/ChannelRetentionSettings'
          description: The length of time in days to retain the messages in a channel.
      description: The details of the data-retention settings for an <code>AppInstance</code>.
    AppInstanceStreamingConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/AppInstanceStreamingConfiguration'
      minItems: 1
      maxItems: 2
    UserName:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 100
      format: password
    AppInstanceUser:
      type: object
      properties:
        AppInstanceUserArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the <code>AppInstanceUser</code>.
        Name:
          $ref: '#/components/schemas/UserName'
          description: The name of the <code>AppInstanceUser</code>.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the <code>AppInstanceUser</code> was created.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The metadata of the <code>AppInstanceUser</code>.
        LastUpdatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the <code>AppInstanceUser</code> was last updated.
      description: The details of an <code>AppInstanceUser</code>.
    AppInstanceUserSummary:
      type: object
      properties:
        AppInstanceUserArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the <code>AppInstanceUser</code>.
        Name:
          $ref: '#/components/schemas/UserName'
          description: The name of an <code>AppInstanceUser</code>.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The metadata of the <code>AppInstanceUser</code>.
      description: Summary of the details of an <code>AppInstanceUser</code>.
    AppInstanceUserList:
      type: array
      items:
        $ref: '#/components/schemas/AppInstanceUserSummary'
    ChannelMembershipType:
      type: string
      enum:
        - DEFAULT
        - HIDDEN
    AppInstanceUserMembershipSummary:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ChannelMembershipType'
          description: The type of <code>ChannelMembership</code>.
        ReadMarkerTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which a message was last read.
      description: Summary of the membership details of an <code>AppInstanceUser</code>.
    AssociatePhoneNumberWithUserRequest:
      type: object
      required:
        - E164PhoneNumber
      title: AssociatePhoneNumberWithUserRequest
      properties:
        E164PhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: 'The phone number, in E.164 format.'
    E164PhoneNumberList:
      type: array
      items:
        $ref: '#/components/schemas/E164PhoneNumber'
    NullableBoolean:
      type: boolean
    AssociatePhoneNumbersWithVoiceConnectorGroupRequest:
      type: object
      required:
        - E164PhoneNumbers
      title: AssociatePhoneNumbersWithVoiceConnectorGroupRequest
      properties:
        E164PhoneNumbers:
          $ref: '#/components/schemas/E164PhoneNumberList'
          description: 'List of phone numbers, in E.164 format.'
        ForceAssociate:
          $ref: '#/components/schemas/NullableBoolean'
          description: 'If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.'
    PhoneNumberErrorList:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberError'
    AssociatePhoneNumbersWithVoiceConnectorRequest:
      type: object
      required:
        - E164PhoneNumbers
      title: AssociatePhoneNumbersWithVoiceConnectorRequest
      properties:
        E164PhoneNumbers:
          $ref: '#/components/schemas/E164PhoneNumberList'
          description: 'List of phone numbers, in E.164 format.'
        ForceAssociate:
          $ref: '#/components/schemas/NullableBoolean'
          description: 'If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.'
    AssociateSigninDelegateGroupsWithAccountRequest:
      type: object
      required:
        - SigninDelegateGroups
      title: AssociateSigninDelegateGroupsWithAccountRequest
      properties:
        SigninDelegateGroups:
          $ref: '#/components/schemas/SigninDelegateGroupList'
          description: The sign-in delegate groups.
    ExternalUserIdType:
      type: string
      minLength: 2
      maxLength: 64
      format: password
    GuidString:
      type: string
      pattern: '[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}'
    JoinTokenString:
      type: string
      pattern: '^[a-zA-Z0-9+/]+$'
      minLength: 2
      maxLength: 2048
      format: password
    Attendee:
      type: object
      properties:
        ExternalUserId:
          $ref: '#/components/schemas/ExternalUserIdType'
          description: The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.
        AttendeeId:
          $ref: '#/components/schemas/GuidString'
          description: The Amazon Chime SDK attendee ID.
        JoinToken:
          $ref: '#/components/schemas/JoinTokenString'
          description: The join token used by the Amazon Chime SDK attendee.
      description: '<p> An Amazon Chime SDK meeting attendee. Includes a unique <code>AttendeeId</code> and <code>JoinToken</code> . The <code>JoinToken</code> allows a client to authenticate and join as the specified attendee. The <code>JoinToken</code> expires when the meeting ends or when <a>DeleteAttendee</a> is called. After that, the attendee is unable to join the meeting. </p> <p>We recommend securely transferring each <code>JoinToken</code> from your server application to the client so that no other client has access to the token except for the one authorized to represent the attendee.</p>'
    AttendeeList:
      type: array
      items:
        $ref: '#/components/schemas/Attendee'
    AttendeeTagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 10
    AttendeeTagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 1
      maxItems: 10
    Members:
      type: array
      items:
        $ref: '#/components/schemas/Identity'
    BatchChannelMemberships:
      type: object
      properties:
        InvitedBy:
          $ref: '#/components/schemas/Identity'
          description: The identifier of the member who invited another member.
        Type:
          $ref: '#/components/schemas/ChannelMembershipType'
          description: The membership types set for the channel users.
        Members:
          $ref: '#/components/schemas/Members'
          description: The users successfully added to the request.
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel to which you're adding users.
      description: 'The membership information, including member ARNs, the channel ARN, and membership types.'
    CreateAttendeeError:
      type: object
      properties:
        ExternalUserId:
          $ref: '#/components/schemas/ExternalUserIdType'
          description: The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.
        ErrorCode:
          $ref: '#/components/schemas/String'
          description: The error code.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: The error message.
      description: 'The list of errors returned when errors are encountered during the BatchCreateAttendee and CreateAttendee actions. This includes external user IDs, error codes, and error messages.'
    BatchCreateAttendeeErrorList:
      type: array
      items:
        $ref: '#/components/schemas/CreateAttendeeError'
    CreateAttendeeRequestItemList:
      type: array
      items:
        $ref: '#/components/schemas/CreateAttendeeRequestItem'
    BatchCreateAttendeeRequest:
      type: object
      required:
        - Attendees
      title: BatchCreateAttendeeRequest
      properties:
        Attendees:
          $ref: '#/components/schemas/CreateAttendeeRequestItemList'
          description: The request containing the attendees to create.
    ErrorCode:
      type: string
      enum:
        - BadRequest
        - Conflict
        - Forbidden
        - NotFound
        - PreconditionFailed
        - ResourceLimitExceeded
        - ServiceFailure
        - AccessDenied
        - ServiceUnavailable
        - Throttled
        - Throttling
        - Unauthorized
        - Unprocessable
        - VoiceConnectorGroupAssociationsExist
        - PhoneNumberAssociationsExist
    BatchCreateChannelMembershipError:
      type: object
      properties:
        MemberArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the member that the service couldn't add.
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: The error code.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: The error message.
      description: 'A list of failed member ARNs, error codes, and error messages.'
    BatchCreateChannelMembershipErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchCreateChannelMembershipError'
    MemberArns:
      type: array
      items:
        $ref: '#/components/schemas/ChimeArn'
      minItems: 1
      maxItems: 100
    BatchCreateChannelMembershipRequest:
      type: object
      required:
        - MemberArns
      title: BatchCreateChannelMembershipRequest
      properties:
        Type:
          $ref: '#/components/schemas/ChannelMembershipType'
          description: 'The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.'
        MemberArns:
          $ref: '#/components/schemas/MemberArns'
          description: The ARNs of the members you want to add to the channel.
    MembershipItemList:
      type: array
      items:
        $ref: '#/components/schemas/MembershipItem'
      maxItems: 50
    BatchCreateRoomMembershipRequest:
      type: object
      required:
        - MembershipItemList
      title: BatchCreateRoomMembershipRequest
      properties:
        MembershipItemList:
          $ref: '#/components/schemas/MembershipItemList'
          description: The list of membership items.
    MemberErrorList:
      type: array
      items:
        $ref: '#/components/schemas/MemberError'
    NonEmptyStringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
      minItems: 1
    BatchDeletePhoneNumberRequest:
      type: object
      required:
        - PhoneNumberIds
      title: BatchDeletePhoneNumberRequest
      properties:
        PhoneNumberIds:
          $ref: '#/components/schemas/NonEmptyStringList'
          description: List of phone number IDs.
    UserIdList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
      maxItems: 50
    BatchSuspendUserRequest:
      type: object
      required:
        - UserIdList
      title: BatchSuspendUserRequest
      properties:
        UserIdList:
          $ref: '#/components/schemas/UserIdList'
          description: The request containing the user IDs to suspend.
    UserErrorList:
      type: array
      items:
        $ref: '#/components/schemas/UserError'
    BatchUnsuspendUserRequest:
      type: object
      required:
        - UserIdList
      title: BatchUnsuspendUserRequest
      properties:
        UserIdList:
          $ref: '#/components/schemas/UserIdList'
          description: The request containing the user IDs to unsuspend.
    UpdatePhoneNumberRequestItemList:
      type: array
      items:
        $ref: '#/components/schemas/UpdatePhoneNumberRequestItem'
    BatchUpdatePhoneNumberRequest:
      type: object
      required:
        - UpdatePhoneNumberRequestItems
      title: BatchUpdatePhoneNumberRequest
      properties:
        UpdatePhoneNumberRequestItems:
          $ref: '#/components/schemas/UpdatePhoneNumberRequestItemList'
          description: The request containing the phone number IDs and product types or calling names to update.
    UpdateUserRequestItemList:
      type: array
      items:
        $ref: '#/components/schemas/UpdateUserRequestItem'
      maxItems: 20
    BatchUpdateUserRequest:
      type: object
      required:
        - UpdateUserRequestItems
      title: BatchUpdateUserRequest
      properties:
        UpdateUserRequestItems:
          $ref: '#/components/schemas/UpdateUserRequestItemList'
          description: The request containing the user IDs and details to update.
    BotType:
      type: string
      enum:
        - ChatBot
    Bot:
      type: object
      properties:
        BotId:
          $ref: '#/components/schemas/String'
          description: The bot ID.
        UserId:
          $ref: '#/components/schemas/String'
          description: The unique ID for the bot user.
        DisplayName:
          $ref: '#/components/schemas/SensitiveString'
          description: The bot display name.
        BotType:
          $ref: '#/components/schemas/BotType'
          description: The bot type.
        Disabled:
          $ref: '#/components/schemas/NullableBoolean'
          description: 'When true, the bot is stopped from running in your account.'
        CreatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The bot creation timestamp, in ISO 8601 format.'
        UpdatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The updated bot timestamp, in ISO 8601 format.'
        BotEmail:
          $ref: '#/components/schemas/SensitiveString'
          description: The bot email address.
        SecurityToken:
          $ref: '#/components/schemas/SensitiveString'
          description: The security token used to authenticate Amazon Chime with the outgoing event endpoint.
      description: A resource that allows Enterprise account administrators to configure an interface to receive events from Amazon Chime.
    BotList:
      type: array
      items:
        $ref: '#/components/schemas/Bot'
    BusinessCallingSettings:
      type: object
      properties:
        CdrBucket:
          $ref: '#/components/schemas/String'
          description: The Amazon S3 bucket designated for call detail record storage.
      description: The Amazon Chime Business Calling settings for the administrator's AWS account. Includes any Amazon S3 buckets designated for storing call detail records.
    CallingName:
      type: string
      pattern: '^$|^[a-zA-Z0-9 ]{2,15}$'
      format: password
    CallingNameStatus:
      type: string
      enum:
        - Unassigned
        - UpdateInProgress
        - UpdateSucceeded
        - UpdateFailed
    CallingRegion:
      type: string
    CapabilityList:
      type: array
      items:
        $ref: '#/components/schemas/Capability'
    ChannelMode:
      type: string
      enum:
        - UNRESTRICTED
        - RESTRICTED
    ChannelPrivacy:
      type: string
      enum:
        - PUBLIC
        - PRIVATE
    Channel:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel.
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        Mode:
          $ref: '#/components/schemas/ChannelMode'
          description: The mode of the channel.
        Privacy:
          $ref: '#/components/schemas/ChannelPrivacy'
          description: The channel's privacy setting.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The channel's metadata.
        CreatedBy:
          $ref: '#/components/schemas/Identity'
          description: The <code>AppInstanceUser</code> who created the channel.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the <code>AppInstanceUser</code> created the channel.
        LastMessageTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which a member sent the last message in the channel.
        LastUpdatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which a channel was last updated.
      description: The details of a channel.
    ChannelBan:
      type: object
      properties:
        Member:
          $ref: '#/components/schemas/Identity'
          description: The member being banned from the channel.
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel from which a member is being banned.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the ban was created.
        CreatedBy:
          $ref: '#/components/schemas/Identity'
          description: The <code>AppInstanceUser</code> who created the ban.
      description: The details of a channel ban.
    ChannelBanSummary:
      type: object
      properties:
        Member:
          $ref: '#/components/schemas/Identity'
          description: The member being banned from a channel.
      description: Summary of the details of a <code>ChannelBan</code>.
    ChannelBanSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelBanSummary'
    ChannelMembership:
      type: object
      properties:
        InvitedBy:
          $ref: '#/components/schemas/Identity'
          description: The identifier of the member who invited another member.
        Type:
          $ref: '#/components/schemas/ChannelMembershipType'
          description: The membership type set for the channel member.
        Member:
          $ref: '#/components/schemas/Identity'
          description: The data of the channel member.
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the member's channel.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the channel membership was created.
        LastUpdatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which a channel membership was last updated.
      description: The details of a channel member.
    ChannelSummary:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel.
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        Mode:
          $ref: '#/components/schemas/ChannelMode'
          description: The mode of the channel.
        Privacy:
          $ref: '#/components/schemas/ChannelPrivacy'
          description: The privacy setting of the channel.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The metadata of the channel.
        LastMessageTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the last message in a channel was sent.
      description: Summary of the details of a <code>Channel</code>.
    ChannelMembershipForAppInstanceUserSummary:
      type: object
      properties:
        ChannelSummary:
          $ref: '#/components/schemas/ChannelSummary'
        AppInstanceUserMembershipSummary:
          $ref: '#/components/schemas/AppInstanceUserMembershipSummary'
      description: Summary of the channel membership details of an <code>AppInstanceUser</code>.
    ChannelMembershipForAppInstanceUserSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummary'
    ChannelMembershipSummary:
      type: object
      properties:
        Member:
          $ref: '#/components/schemas/Identity'
          description: A member's summary data.
      description: Summary of the details of a <code>ChannelMembership</code>.
    ChannelMembershipSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelMembershipSummary'
    MessageId:
      type: string
      pattern: '[-_a-zA-Z0-9]*'
      minLength: 1
      maxLength: 128
    Content:
      type: string
      pattern: '[\s\S]*'
      minLength: 0
      maxLength: 4096
      format: password
    ChannelMessageType:
      type: string
      enum:
        - STANDARD
        - CONTROL
    NonNullableBoolean:
      type: boolean
    ChannelMessagePersistenceType:
      type: string
      enum:
        - PERSISTENT
        - NON_PERSISTENT
    ChannelMessage:
      type: object
      properties:
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MessageId:
          $ref: '#/components/schemas/MessageId'
          description: The ID of a message.
        Content:
          $ref: '#/components/schemas/Content'
          description: The message content.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The message metadata.
        Type:
          $ref: '#/components/schemas/ChannelMessageType'
          description: The message type.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the message was created.
        LastEditedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which a message was edited.
        LastUpdatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which a message was updated.
        Sender:
          $ref: '#/components/schemas/Identity'
          description: The message sender.
        Redacted:
          $ref: '#/components/schemas/NonNullableBoolean'
          description: Hides the content of a message.
        Persistence:
          $ref: '#/components/schemas/ChannelMessagePersistenceType'
          description: The persistence setting for a channel message.
      description: The details of a message in a channel.
    ChannelMessageSummary:
      type: object
      properties:
        MessageId:
          $ref: '#/components/schemas/MessageId'
          description: The ID of the message.
        Content:
          $ref: '#/components/schemas/Content'
          description: The content of the message.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The metadata of the message.
        Type:
          $ref: '#/components/schemas/ChannelMessageType'
          description: The type of message.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the message summary was created.
        LastUpdatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which a message was last updated.
        LastEditedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which a message was last edited.
        Sender:
          $ref: '#/components/schemas/Identity'
          description: The message sender.
        Redacted:
          $ref: '#/components/schemas/NonNullableBoolean'
          description: Indicates whether a message was redacted.
      description: Summary of the messages in a <code>Channel</code>.
    ChannelMessageSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelMessageSummary'
    ChannelModeratedByAppInstanceUserSummary:
      type: object
      properties:
        ChannelSummary:
          $ref: '#/components/schemas/ChannelSummary'
          description: Summary of the details of a <code>Channel</code>.
      description: Summary of the details of a moderated channel.
    ChannelModeratedByAppInstanceUserSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummary'
    ChannelModerator:
      type: object
      properties:
        Moderator:
          $ref: '#/components/schemas/Identity'
          description: The moderator's data.
        ChannelArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the moderator's channel.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the moderator was created.
        CreatedBy:
          $ref: '#/components/schemas/Identity'
          description: The <code>AppInstanceUser</code> who created the moderator.
      description: The details of a channel moderator.
    ChannelModeratorSummary:
      type: object
      properties:
        Moderator:
          $ref: '#/components/schemas/Identity'
          description: The data for a moderator.
      description: Summary of the details of a <code>ChannelModerator</code>.
    ChannelModeratorSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelModeratorSummary'
    RetentionDays:
      type: integer
      minimum: 1
      maximum: 5475
    ChannelSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelSummary'
    ClientRequestToken:
      type: string
      pattern: '[-_a-zA-Z0-9]*'
      minLength: 2
      maxLength: 64
      format: password
    CountryList:
      type: array
      items:
        $ref: '#/components/schemas/Country'
      minItems: 1
      maxItems: 100
    CreateAccountRequest:
      type: object
      required:
        - Name
      title: CreateAccountRequest
      properties:
        Name:
          $ref: '#/components/schemas/AccountName'
          description: The name of the Amazon Chime account.
    CreateAppInstanceAdminRequest:
      type: object
      required:
        - AppInstanceAdminArn
      title: CreateAppInstanceAdminRequest
      properties:
        AppInstanceAdminArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the administrator of the current <code>AppInstance</code>.
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 1
      maxItems: 50
    CreateAppInstanceRequest:
      type: object
      required:
        - Name
        - ClientRequestToken
      title: CreateAppInstanceRequest
      properties:
        Name:
          $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the <code>AppInstance</code>.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The metadata of the <code>AppInstance</code>. Limited to a 1KB string in UTF-8.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: The <code>ClientRequestToken</code> of the <code>AppInstance</code>.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Tags assigned to the <code>AppInstanceUser</code>.
    UserId:
      type: string
      pattern: '[A-Za-z0-9]([A-Za-z0-9\:\-\_\.\@]{0,62}[A-Za-z0-9])?'
      minLength: 1
      maxLength: 64
      format: password
    CreateAppInstanceUserRequest:
      type: object
      required:
        - AppInstanceArn
        - AppInstanceUserId
        - Name
        - ClientRequestToken
      title: CreateAppInstanceUserRequest
      properties:
        AppInstanceArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the <code>AppInstance</code> request.
        AppInstanceUserId:
          $ref: '#/components/schemas/UserId'
          description: The user ID of the <code>AppInstance</code>.
        Name:
          $ref: '#/components/schemas/UserName'
          description: The user's name.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The request's metadata. Limited to a 1KB string in UTF-8.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: The token assigned to the user requesting an <code>AppInstance</code>.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Tags assigned to the <code>AppInstanceUser</code>.
    CreateAttendeeRequest:
      type: object
      required:
        - ExternalUserId
      title: CreateAttendeeRequest
      properties:
        ExternalUserId:
          $ref: '#/components/schemas/ExternalUserIdType'
          description: The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.
        Tags:
          $ref: '#/components/schemas/AttendeeTagList'
          description: The tag key-value pairs.
    CreateBotRequest:
      type: object
      required:
        - DisplayName
      title: CreateBotRequest
      properties:
        DisplayName:
          $ref: '#/components/schemas/SensitiveString'
          description: The bot display name.
        Domain:
          $ref: '#/components/schemas/NonEmptyString'
          description: The domain of the Amazon Chime Enterprise account.
    CreateChannelBanRequest:
      type: object
      required:
        - MemberArn
      title: CreateChannelBanRequest
      properties:
        MemberArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the member being banned.
    CreateChannelMembershipRequest:
      type: object
      required:
        - MemberArn
        - Type
      title: CreateChannelMembershipRequest
      properties:
        MemberArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the member you want to add to the channel.
        Type:
          $ref: '#/components/schemas/ChannelMembershipType'
          description: 'The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.'
    CreateChannelModeratorRequest:
      type: object
      required:
        - ChannelModeratorArn
      title: CreateChannelModeratorRequest
      properties:
        ChannelModeratorArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the moderator.
    CreateChannelRequest:
      type: object
      required:
        - AppInstanceArn
        - Name
        - ClientRequestToken
      title: CreateChannelRequest
      properties:
        AppInstanceArn:
          $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel request.
        Name:
          $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel.
        Mode:
          $ref: '#/components/schemas/ChannelMode'
          description: 'The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators, moderators, and channel members can add themselves and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels.'
        Privacy:
          $ref: '#/components/schemas/ChannelPrivacy'
          description: 'The channel''s privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private channels aren''t discoverable by users outside the channel. Public channels are discoverable by anyone in the <code>AppInstance</code>.'
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The metadata of the creation request. Limited to 1KB and UTF-8.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: The client token for the request. An <code>Idempotency</code> token.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags for the creation request.
    MediaPipelineSourceType:
      type: string
      enum:
        - ChimeSdkMeeting
    MediaPipelineSinkType:
      type: string
      enum:
        - S3Bucket
    CreateMediaCapturePipelineRequest:
      type: object
      required:
        - SourceType
        - SourceArn
        - SinkType
        - SinkArn
      title: CreateMediaCapturePipelineRequest
      properties:
        SourceType:
          $ref: '#/components/schemas/MediaPipelineSourceType'
          description: Source type from which the media artifacts will be captured. A Chime SDK Meeting is the only supported source.
        SourceArn:
          $ref: '#/components/schemas/Arn'
          description: ARN of the source from which the media artifacts are captured.
        SinkType:
          $ref: '#/components/schemas/MediaPipelineSinkType'
          description: 'Destination type to which the media artifacts are saved. You must use an S3 bucket. '
        SinkArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the sink type.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: The token assigned to the client making the pipeline request.
    MediaCapturePipeline:
      type: object
      properties:
        MediaPipelineId:
          $ref: '#/components/schemas/GuidString'
          description: The ID of a media capture pipeline.
        SourceType:
          $ref: '#/components/schemas/MediaPipelineSourceType'
          description: Source type from which media artifacts are saved. You must use <code>ChimeMeeting</code>.
        SourceArn:
          $ref: '#/components/schemas/Arn'
          description: ARN of the source from which the media artifacts will be saved.
        Status:
          $ref: '#/components/schemas/MediaPipelineStatus'
          description: The status of the media capture pipeline.
        SinkType:
          $ref: '#/components/schemas/MediaPipelineSinkType'
          description: Destination type to which the media artifacts are saved. You must use an S3 Bucket.
        SinkArn:
          $ref: '#/components/schemas/Arn'
          description: ARN of the destination to which the media artifacts are saved.
        CreatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The time at which the capture pipeline was created, in ISO 8601 format.'
        UpdatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The time at which the capture pipeline was updated, in ISO 8601 format.'
      description: 'A media capture pipeline object. A string consisting of an ID, source type, a source ARN, a sink type, and a sink ARN.'
    CreateMeetingDialOutRequest:
      type: object
      required:
        - FromPhoneNumber
        - ToPhoneNumber
        - JoinToken
      title: CreateMeetingDialOutRequest
      properties:
        FromPhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: Phone number used as the caller ID when the remote party receives a call.
        ToPhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: Phone number called when inviting someone to a meeting.
        JoinToken:
          $ref: '#/components/schemas/JoinTokenString'
          description: 'Token used by the Amazon Chime SDK attendee. Call the <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html">CreateAttendee</a> action to get a join token.'
    ExternalMeetingIdType:
      type: string
      minLength: 2
      maxLength: 64
      format: password
    MeetingTagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 1
      maxItems: 50
    MeetingNotificationConfiguration:
      type: object
      properties:
        SnsTopicArn:
          $ref: '#/components/schemas/Arn'
          description: The SNS topic ARN.
        SqsQueueArn:
          $ref: '#/components/schemas/Arn'
          description: The SQS queue ARN.
      description: ' The resource target configurations for receiving Amazon Chime SDK meeting and attendee event notifications. The Amazon Chime SDK supports resource targets located in the US East (N. Virginia) AWS Region (<code>us-east-1</code>). '
    CreateMeetingRequest:
      type: object
      required:
        - ClientRequestToken
      title: CreateMeetingRequest
      properties:
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: The unique identifier for the client request. Use a different token for different meetings.
        ExternalMeetingId:
          $ref: '#/components/schemas/ExternalMeetingIdType'
          description: The external meeting ID.
        MeetingHostId:
          $ref: '#/components/schemas/ExternalUserIdType'
          description: Reserved.
        MediaRegion:
          $ref: '#/components/schemas/String'
          description: '<p> The Region in which to create the meeting. Default: <code>us-east-1</code>. </p> <p> Available values: <code>af-south-1</code> , <code>ap-northeast-1</code> , <code>ap-northeast-2</code> , <code>ap-south-1</code> , <code>ap-southeast-1</code> , <code>ap-southeast-2</code> , <code>ca-central-1</code> , <code>eu-central-1</code> , <code>eu-north-1</code> , <code>eu-south-1</code> , <code>eu-west-1</code> , <code>eu-west-2</code> , <code>eu-west-3</code> , <code>sa-east-1</code> , <code>us-east-1</code> , <code>us-east-2</code> , <code>us-west-1</code> , <code>us-west-2</code> . </p>'
        Tags:
          $ref: '#/components/schemas/MeetingTagList'
          description: The tag key-value pairs.
        NotificationsConfiguration:
          $ref: '#/components/schemas/MeetingNotificationConfiguration'
          description: The configuration for resource targets to receive notifications when meeting and attendee events occur.
    Meeting:
      type: object
      properties:
        MeetingId:
          $ref: '#/components/schemas/GuidString'
          description: The Amazon Chime SDK meeting ID.
        ExternalMeetingId:
          $ref: '#/components/schemas/ExternalMeetingIdType'
          description: The external meeting ID.
        MediaPlacement:
          $ref: '#/components/schemas/MediaPlacement'
          description: The media placement for the meeting.
        MediaRegion:
          $ref: '#/components/schemas/String'
          description: 'The Region in which you create the meeting. Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>.'
      description: A meeting created using the Amazon Chime SDK.
    CreateMeetingWithAttendeesRequestItemList:
      type: array
      items:
        $ref: '#/components/schemas/CreateAttendeeRequestItem'
      minItems: 1
      maxItems: 10
    CreateMeetingWithAttendeesRequest:
      type: object
      required:
        - ClientRequestToken
      title: CreateMeetingWithAttendeesRequest
      properties:
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: The unique identifier for the client request. Use a different token for different meetings.
        ExternalMeetingId:
          $ref: '#/components/schemas/ExternalMeetingIdType'
          description: The external meeting ID.
        MeetingHostId:
          $ref: '#/components/schemas/ExternalUserIdType'
          description: Reserved.
        MediaRegion:
          $ref: '#/components/schemas/String'
          description: '<p> The Region in which to create the meeting. Default: <code>us-east-1</code> . </p> <p> Available values: <code>af-south-1</code> , <code>ap-northeast-1</code> , <code>ap-northeast-2</code> , <code>ap-south-1</code> , <code>ap-southeast-1</code> , <code>ap-southeast-2</code> , <code>ca-central-1</code> , <code>eu-central-1</code> , <code>eu-north-1</code> , <code>eu-south-1</code> , <code>eu-west-1</code> , <code>eu-west-2</code> , <code>eu-west-3</code> , <code>sa-east-1</code> , <code>us-east-1</code> , <code>us-east-2</code> , <code>us-west-1</code> , <code>us-west-2</code> . </p>'
        Tags:
          $ref: '#/components/schemas/MeetingTagList'
          description: The tag key-value pairs.
        NotificationsConfiguration:
          $ref: '#/components/schemas/MeetingNotificationConfiguration'
        Attendees:
          $ref: '#/components/schemas/CreateMeetingWithAttendeesRequestItemList'
          description: The request containing the attendees to create.
    PhoneNumberProductType:
      type: string
      enum:
        - BusinessCalling
        - VoiceConnector
        - SipMediaApplicationDialIn
    CreatePhoneNumberOrderRequest:
      type: object
      required:
        - ProductType
        - E164PhoneNumbers
      title: CreatePhoneNumberOrderRequest
      properties:
        ProductType:
          $ref: '#/components/schemas/PhoneNumberProductType'
          description: The phone number product type.
        E164PhoneNumbers:
          $ref: '#/components/schemas/E164PhoneNumberList'
          description: 'List of phone numbers, in E.164 format.'
    PhoneNumberOrder:
      type: object
      properties:
        PhoneNumberOrderId:
          $ref: '#/components/schemas/GuidString'
          description: The phone number order ID.
        ProductType:
          $ref: '#/components/schemas/PhoneNumberProductType'
          description: The phone number order product type.
        Status:
          $ref: '#/components/schemas/PhoneNumberOrderStatus'
          description: The status of the phone number order.
        OrderedPhoneNumbers:
          $ref: '#/components/schemas/OrderedPhoneNumberList'
          description: 'The ordered phone number details, such as the phone number in E.164 format and the phone number status.'
        CreatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The phone number order creation time stamp, in ISO 8601 format.'
        UpdatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The updated phone number order time stamp, in ISO 8601 format.'
      description: The details of a phone number order created for Amazon Chime.
    NonEmptyString128:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 128
    ParticipantPhoneNumberList:
      type: array
      items:
        $ref: '#/components/schemas/E164PhoneNumber'
      minItems: 2
      maxItems: 2
    ProxySessionNameString:
      type: string
      pattern: '^$|^[a-zA-Z0-9 ]{0,30}$'
      format: password
    PositiveInteger:
      type: integer
      minimum: 1
    NumberSelectionBehavior:
      type: string
      enum:
        - PreferSticky
        - AvoidSticky
    GeoMatchLevel:
      type: string
      enum:
        - Country
        - AreaCode
    GeoMatchParams:
      type: object
      required:
        - Country
        - AreaCode
      properties:
        Country:
          $ref: '#/components/schemas/Country'
          description: The country.
        AreaCode:
          $ref: '#/components/schemas/AreaCode'
          description: The area code.
      description: The country and area code for a proxy phone number in a proxy phone session.
    CreateProxySessionRequest:
      type: object
      required:
        - ParticipantPhoneNumbers
        - Capabilities
      title: CreateProxySessionRequest
      properties:
        ParticipantPhoneNumbers:
          $ref: '#/components/schemas/ParticipantPhoneNumberList'
          description: The participant phone numbers.
        Name:
          $ref: '#/components/schemas/ProxySessionNameString'
          description: The name of the proxy session.
        ExpiryMinutes:
          $ref: '#/components/schemas/PositiveInteger'
          description: The number of minutes allowed for the proxy session.
        Capabilities:
          $ref: '#/components/schemas/CapabilityList'
          description: The proxy session capabilities.
        NumberSelectionBehavior:
          $ref: '#/components/schemas/NumberSelectionBehavior'
          description: 'The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.'
        GeoMatchLevel:
          $ref: '#/components/schemas/GeoMatchLevel'
          description: The preference for matching the country or area code of the proxy phone number with that of the first participant.
        GeoMatchParams:
          $ref: '#/components/schemas/GeoMatchParams'
          description: The country and area code for the proxy phone number.
    ProxySession:
      type: object
      properties:
        VoiceConnectorId:
          $ref: '#/components/schemas/NonEmptyString128'
          description: The Amazon Chime voice connector ID.
        ProxySessionId:
          $ref: '#/components/schemas/NonEmptyString128'
          description: The proxy session ID.
        Name:
          $ref: '#/components/schemas/String128'
          description: The name of the proxy session.
        Status:
          $ref: '#/components/schemas/ProxySessionStatus'
          description: The status of the proxy session.
        ExpiryMinutes:
          $ref: '#/components/schemas/PositiveInteger'
          description: The number of minutes allowed for the proxy session.
        Capabilities:
          $ref: '#/components/schemas/CapabilityList'
          description: The proxy session capabilities.
        CreatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The created time stamp, in ISO 8601 format.'
        UpdatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The updated time stamp, in ISO 8601 format.'
        EndedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The ended time stamp, in ISO 8601 format.'
        Participants:
          $ref: '#/components/schemas/Participants'
          description: The proxy session participants.
        NumberSelectionBehavior:
          $ref: '#/components/schemas/NumberSelectionBehavior'
          description: 'The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.'
        GeoMatchLevel:
          $ref: '#/components/schemas/GeoMatchLevel'
          description: The preference for matching the country or area code of the proxy phone number with that of the first participant.
        GeoMatchParams:
          $ref: '#/components/schemas/GeoMatchParams'
          description: The country and area code for the proxy phone number.
      description: The proxy session for an Amazon Chime Voice Connector.
    RoomMembershipRole:
      type: string
      enum:
        - Administrator
        - Member
    CreateRoomMembershipRequest:
      type: object
      required:
        - MemberId
      title: CreateRoomMembershipRequest
      properties:
        MemberId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Chime member ID (user ID or bot ID).
        Role:
          $ref: '#/components/schemas/RoomMembershipRole'
          description: The role of the member.
    RoomMembership:
      type: object
      properties:
        RoomId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The room ID.
        Member:
          $ref: '#/components/schemas/Member'
        Role:
          $ref: '#/components/schemas/RoomMembershipRole'
          description: The membership role.
        InvitedBy:
          $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the user that invited the room member.
        UpdatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The room membership update timestamp, in ISO 8601 format.'
      description: The room membership details.
    CreateRoomRequest:
      type: object
      required:
        - Name
      title: CreateRoomRequest
      properties:
        Name:
          $ref: '#/components/schemas/SensitiveString'
          description: The room name.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: The idempotency token for the request.
    Room:
      type: object
      properties:
        RoomId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The room ID.
        Name:
          $ref: '#/components/schemas/SensitiveString'
          description: The room name.
        AccountId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Chime account ID.
        CreatedBy:
          $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the room creator.
        CreatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The room creation timestamp, in ISO 8601 format.'
        UpdatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The room update timestamp, in ISO 8601 format.'
      description: The Amazon Chime chat room details.
    CreateSipMediaApplicationCallRequest:
      type: object
      required:
        - FromPhoneNumber
        - ToPhoneNumber
      title: CreateSipMediaApplicationCallRequest
      properties:
        FromPhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: The phone number that a user calls from. This is a phone number in your Amazon Chime phone number inventory.
        ToPhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: The phone number that the service should call.
    SipMediaApplicationCall:
      type: object
      properties:
        TransactionId:
          $ref: '#/components/schemas/GuidString'
          description: The transaction ID of a call.
      description: A <code>Call</code> instance for a SIP media application.
    SipMediaApplicationName:
      type: string
      minLength: 1
      maxLength: 256
    SipMediaApplicationEndpointList:
      type: array
      items:
        $ref: '#/components/schemas/SipMediaApplicationEndpoint'
      minItems: 1
      maxItems: 1
    CreateSipMediaApplicationRequest:
      type: object
      required:
        - AwsRegion
        - Name
        - Endpoints
      title: CreateSipMediaApplicationRequest
      properties:
        AwsRegion:
          $ref: '#/components/schemas/String'
          description: The AWS Region assigned to the SIP media application.
        Name:
          $ref: '#/components/schemas/SipMediaApplicationName'
          description: The SIP media application name.
        Endpoints:
          $ref: '#/components/schemas/SipMediaApplicationEndpointList'
          description: 'List of endpoints (Lambda Amazon Resource Names) specified for the SIP media application. Currently, only one endpoint is supported.'
    SipMediaApplication:
      type: object
      properties:
        SipMediaApplicationId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The SIP media application ID.
        AwsRegion:
          $ref: '#/components/schemas/String'
          description: The AWS Region in which the SIP media application is created.
        Name:
          $ref: '#/components/schemas/SipMediaApplicationName'
          description: The name of the SIP media application.
        Endpoints:
          $ref: '#/components/schemas/SipMediaApplicationEndpointList'
          description: 'List of endpoints for SIP media application. Currently, only one endpoint per SIP media application is permitted.'
        CreatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The SIP media application creation timestamp, in ISO 8601 format.'
        UpdatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The SIP media application updated timestamp, in ISO 8601 format.'
      description: 'The details of the SIP media application, including name and endpoints. An AWS account can have multiple SIP media applications.'
    SipRuleName:
      type: string
      minLength: 1
      maxLength: 256
    SipRuleTriggerType:
      type: string
      enum:
        - ToPhoneNumber
        - RequestUriHostname
    SipRuleTargetApplicationList:
      type: array
      items:
        $ref: '#/components/schemas/SipRuleTargetApplication'
      minItems: 1
      maxItems: 25
    CreateSipRuleRequest:
      type: object
      required:
        - Name
        - TriggerType
        - TriggerValue
        - TargetApplications
      title: CreateSipRuleRequest
      properties:
        Name:
          $ref: '#/components/schemas/SipRuleName'
          description: The name of the SIP rule.
        TriggerType:
          $ref: '#/components/schemas/SipRuleTriggerType'
          description: 'The type of trigger assigned to the SIP rule in <code>TriggerValue</code>, currently <code>RequestUriHostname</code> or <code>ToPhoneNumber</code>.'
        TriggerValue:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'If <code>TriggerType</code> is <code>RequestUriHostname</code>, the value can be the outbound host name of an Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code>, the value can be a customer-owned phone number in the E164 format. The <code>SipMediaApplication</code> specified in the <code>SipRule</code> is triggered if the request URI in an incoming SIP request matches the <code>RequestUriHostname</code>, or if the <code>To</code> header in the incoming SIP request matches the <code>ToPhoneNumber</code> value.'
        Disabled:
          $ref: '#/components/schemas/NullableBoolean'
          description: Enables or disables a rule. You must disable rules before you can delete them.
        TargetApplications:
          $ref: '#/components/schemas/SipRuleTargetApplicationList'
          description: List of SIP media applications with priority and AWS Region. Only one SIP application per AWS Region can be used.
    SipRule:
      type: object
      properties:
        SipRuleId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The SIP rule ID.
        Name:
          $ref: '#/components/schemas/SipRuleName'
          description: The name of the SIP rule.
        Disabled:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether the SIP rule is enabled or disabled. You must disable a rule before you can delete it.
        TriggerType:
          $ref: '#/components/schemas/SipRuleTriggerType'
          description: 'The type of trigger assigned to the SIP rule in <code>TriggerValue</code>, currently <code>RequestUriHostname</code> or <code>ToPhoneNumber</code>.'
        TriggerValue:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'If <code>TriggerType</code> is <code>RequestUriHostname</code>, then the value can be the outbound host name of the Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code>, then the value can be a customer-owned phone number in E164 format. <code>SipRule</code> is triggered when a SIP rule requests host name or <code>ToPhoneNumber</code> matches in the incoming SIP request.'
        TargetApplications:
          $ref: '#/components/schemas/SipRuleTargetApplicationList'
          description: 'Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.'
        CreatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The time at which the SIP rule was created, in ISO 8601 format.'
        UpdatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The time at which the SIP rule was last updated, in ISO 8601 format.'
      description: 'The SIP rule details, including name, triggers, and target applications. An AWS account can have multiple SIP rules.'
    UserType:
      type: string
      enum:
        - PrivateUser
        - SharedDevice
    CreateUserRequest:
      type: object
      title: CreateUserRequest
      properties:
        Username:
          $ref: '#/components/schemas/String'
          description: The user name.
        Email:
          $ref: '#/components/schemas/EmailAddress'
          description: The user's email address.
        UserType:
          $ref: '#/components/schemas/UserType'
          description: The user type.
    User:
      type: object
      required:
        - UserId
      properties:
        UserId:
          $ref: '#/components/schemas/String'
          description: The user ID.
        AccountId:
          $ref: '#/components/schemas/String'
          description: The Amazon Chime account ID.
        PrimaryEmail:
          $ref: '#/components/schemas/EmailAddress'
          description: The primary email address of the user.
        PrimaryProvisionedNumber:
          $ref: '#/components/schemas/SensitiveString'
          description: The primary phone number associated with the user.
        DisplayName:
          $ref: '#/components/schemas/SensitiveString'
          description: The display name of the user.
        LicenseType:
          $ref: '#/components/schemas/License'
          description: The license type for the user.
        UserType:
          $ref: '#/components/schemas/UserType'
          description: The user type.
        UserRegistrationStatus:
          $ref: '#/components/schemas/RegistrationStatus'
          description: The user registration status.
        UserInvitationStatus:
          $ref: '#/components/schemas/InviteStatus'
          description: The user invite status.
        RegisteredOn:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'Date and time when the user is registered, in ISO 8601 format.'
        InvitedOn:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.'
        AlexaForBusinessMetadata:
          $ref: '#/components/schemas/AlexaForBusinessMetadata'
          description: The Alexa for Business metadata.
        PersonalPIN:
          $ref: '#/components/schemas/String'
          description: The user's personal meeting PIN.
      description: The user on the Amazon Chime account.
    VoiceConnectorGroupName:
      type: string
      minLength: 1
      maxLength: 256
    VoiceConnectorItemList:
      type: array
      items:
        $ref: '#/components/schemas/VoiceConnectorItem'
    CreateVoiceConnectorGroupRequest:
      type: object
      required:
        - Name
      title: CreateVoiceConnectorGroupRequest
      properties:
        Name:
          $ref: '#/components/schemas/VoiceConnectorGroupName'
          description: The name of the Amazon Chime Voice Connector group.
        VoiceConnectorItems:
          $ref: '#/components/schemas/VoiceConnectorItemList'
          description: The Amazon Chime Voice Connectors to route inbound calls to.
    VoiceConnectorGroup:
      type: object
      properties:
        VoiceConnectorGroupId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Chime Voice Connector group ID.
        Name:
          $ref: '#/components/schemas/VoiceConnectorGroupName'
          description: The name of the Amazon Chime Voice Connector group.
        VoiceConnectorItems:
          $ref: '#/components/schemas/VoiceConnectorItemList'
          description: The Amazon Chime Voice Connectors to which to route inbound calls.
        CreatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The Amazon Chime Voice Connector group creation time stamp, in ISO 8601 format.'
        UpdatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The updated Amazon Chime Voice Connector group time stamp, in ISO 8601 format.'
      description: 'The Amazon Chime Voice Connector group configuration, including associated Amazon Chime Voice Connectors. You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.'
    VoiceConnectorName:
      type: string
      minLength: 1
      maxLength: 256
    VoiceConnectorAwsRegion:
      type: string
      enum:
        - us-east-1
        - us-west-2
    CreateVoiceConnectorRequest:
      type: object
      required:
        - Name
        - RequireEncryption
      title: CreateVoiceConnectorRequest
      properties:
        Name:
          $ref: '#/components/schemas/VoiceConnectorName'
          description: The name of the Amazon Chime Voice Connector.
        AwsRegion:
          $ref: '#/components/schemas/VoiceConnectorAwsRegion'
          description: ' The AWS Region in which the Amazon Chime Voice Connector is created. Default value: <code>us-east-1</code> . '
        RequireEncryption:
          $ref: '#/components/schemas/Boolean'
          description: 'When enabled, requires encryption for the Amazon Chime Voice Connector.'
    VoiceConnector:
      type: object
      properties:
        VoiceConnectorId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Chime Voice Connector ID.
        AwsRegion:
          $ref: '#/components/schemas/VoiceConnectorAwsRegion'
          description: ' The AWS Region in which the Amazon Chime Voice Connector is created. Default: <code>us-east-1</code>. '
        Name:
          $ref: '#/components/schemas/VoiceConnectorName'
          description: The name of the Amazon Chime Voice Connector.
        OutboundHostName:
          $ref: '#/components/schemas/String'
          description: The outbound host name for the Amazon Chime Voice Connector.
        RequireEncryption:
          $ref: '#/components/schemas/Boolean'
          description: Designates whether encryption is required for the Amazon Chime Voice Connector.
        CreatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The Amazon Chime Voice Connector creation timestamp, in ISO 8601 format.'
        UpdatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The updated Amazon Chime Voice Connector timestamp, in ISO 8601 format.'
      description: 'The Amazon Chime Voice Connector configuration, including outbound host name and encryption settings.'
    CredentialList:
      type: array
      items:
        $ref: '#/components/schemas/Credential'
    DNISEmergencyCallingConfiguration:
      type: object
      required:
        - EmergencyPhoneNumber
        - CallingCountry
      properties:
        EmergencyPhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: 'The DNIS phone number to route emergency calls to, in E.164 format.'
        TestPhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: 'The DNIS phone number to route test emergency calls to, in E.164 format.'
        CallingCountry:
          $ref: '#/components/schemas/Alpha2CountryCode'
          description: 'The country from which emergency calls are allowed, in ISO 3166-1 alpha-2 format.'
      description: The Dialed Number Identification Service (DNIS) emergency calling configuration details associated with an Amazon Chime Voice Connector's emergency calling configuration.
    DeleteAccountRequest:
      type: object
      title: DeleteAccountRequest
      properties: {}
    DeleteAppInstanceAdminRequest:
      type: object
      title: DeleteAppInstanceAdminRequest
      properties: {}
    DeleteAppInstanceRequest:
      type: object
      title: DeleteAppInstanceRequest
      properties: {}
    DeleteAppInstanceStreamingConfigurationsRequest:
      type: object
      title: DeleteAppInstanceStreamingConfigurationsRequest
      properties: {}
    DeleteAppInstanceUserRequest:
      type: object
      title: DeleteAppInstanceUserRequest
      properties: {}
    DeleteAttendeeRequest:
      type: object
      title: DeleteAttendeeRequest
      properties: {}
    DeleteChannelBanRequest:
      type: object
      title: DeleteChannelBanRequest
      properties: {}
    DeleteChannelMembershipRequest:
      type: object
      title: DeleteChannelMembershipRequest
      properties: {}
    DeleteChannelMessageRequest:
      type: object
      title: DeleteChannelMessageRequest
      properties: {}
    DeleteChannelModeratorRequest:
      type: object
      title: DeleteChannelModeratorRequest
      properties: {}
    DeleteChannelRequest:
      type: object
      title: DeleteChannelRequest
      properties: {}
    DeleteEventsConfigurationRequest:
      type: object
      title: DeleteEventsConfigurationRequest
      properties: {}
    DeleteMediaCapturePipelineRequest:
      type: object
      title: DeleteMediaCapturePipelineRequest
      properties: {}
    DeleteMeetingRequest:
      type: object
      title: DeleteMeetingRequest
      properties: {}
    DeletePhoneNumberRequest:
      type: object
      title: DeletePhoneNumberRequest
      properties: {}
    DeleteProxySessionRequest:
      type: object
      title: DeleteProxySessionRequest
      properties: {}
    DeleteRoomMembershipRequest:
      type: object
      title: DeleteRoomMembershipRequest
      properties: {}
    DeleteRoomRequest:
      type: object
      title: DeleteRoomRequest
      properties: {}
    DeleteSipMediaApplicationRequest:
      type: object
      title: DeleteSipMediaApplicationRequest
      properties: {}
    DeleteSipRuleRequest:
      type: object
      title: DeleteSipRuleRequest
      properties: {}
    DeleteVoiceConnectorEmergencyCallingConfigurationRequest:
      type: object
      title: DeleteVoiceConnectorEmergencyCallingConfigurationRequest
      properties: {}
    DeleteVoiceConnectorGroupRequest:
      type: object
      title: DeleteVoiceConnectorGroupRequest
      properties: {}
    DeleteVoiceConnectorOriginationRequest:
      type: object
      title: DeleteVoiceConnectorOriginationRequest
      properties: {}
    DeleteVoiceConnectorProxyRequest:
      type: object
      title: DeleteVoiceConnectorProxyRequest
      properties: {}
    DeleteVoiceConnectorRequest:
      type: object
      title: DeleteVoiceConnectorRequest
      properties: {}
    DeleteVoiceConnectorStreamingConfigurationRequest:
      type: object
      title: DeleteVoiceConnectorStreamingConfigurationRequest
      properties: {}
    SensitiveStringList:
      type: array
      items:
        $ref: '#/components/schemas/SensitiveString'
    DeleteVoiceConnectorTerminationCredentialsRequest:
      type: object
      required:
        - Usernames
      title: DeleteVoiceConnectorTerminationCredentialsRequest
      properties:
        Usernames:
          $ref: '#/components/schemas/SensitiveStringList'
          description: 'The RFC2617 compliant username associated with the SIP credentials, in US-ASCII format.'
    DeleteVoiceConnectorTerminationRequest:
      type: object
      title: DeleteVoiceConnectorTerminationRequest
      properties: {}
    DescribeAppInstanceAdminRequest:
      type: object
      title: DescribeAppInstanceAdminRequest
      properties: {}
    DescribeAppInstanceRequest:
      type: object
      title: DescribeAppInstanceRequest
      properties: {}
    DescribeAppInstanceUserRequest:
      type: object
      title: DescribeAppInstanceUserRequest
      properties: {}
    DescribeChannelBanRequest:
      type: object
      title: DescribeChannelBanRequest
      properties: {}
    DescribeChannelMembershipForAppInstanceUserRequest:
      type: object
      title: DescribeChannelMembershipForAppInstanceUserRequest
      properties: {}
    DescribeChannelMembershipRequest:
      type: object
      title: DescribeChannelMembershipRequest
      properties: {}
    DescribeChannelModeratedByAppInstanceUserRequest:
      type: object
      title: DescribeChannelModeratedByAppInstanceUserRequest
      properties: {}
    DescribeChannelModeratorRequest:
      type: object
      title: DescribeChannelModeratorRequest
      properties: {}
    DescribeChannelRequest:
      type: object
      title: DescribeChannelRequest
      properties: {}
    DisassociatePhoneNumberFromUserRequest:
      type: object
      title: DisassociatePhoneNumberFromUserRequest
      properties: {}
    DisassociatePhoneNumbersFromVoiceConnectorGroupRequest:
      type: object
      required:
        - E164PhoneNumbers
      title: DisassociatePhoneNumbersFromVoiceConnectorGroupRequest
      properties:
        E164PhoneNumbers:
          $ref: '#/components/schemas/E164PhoneNumberList'
          description: 'List of phone numbers, in E.164 format.'
    DisassociatePhoneNumbersFromVoiceConnectorRequest:
      type: object
      required:
        - E164PhoneNumbers
      title: DisassociatePhoneNumbersFromVoiceConnectorRequest
      properties:
        E164PhoneNumbers:
          $ref: '#/components/schemas/E164PhoneNumberList'
          description: 'List of phone numbers, in E.164 format.'
    DisassociateSigninDelegateGroupsFromAccountRequest:
      type: object
      required:
        - GroupNames
      title: DisassociateSigninDelegateGroupsFromAccountRequest
      properties:
        GroupNames:
          $ref: '#/components/schemas/NonEmptyStringList'
          description: The sign-in delegate group names.
    EmailStatus:
      type: string
      enum:
        - NotSent
        - Sent
        - Failed
    EmergencyCallingConfiguration:
      type: object
      properties:
        DNIS:
          $ref: '#/components/schemas/DNISEmergencyCallingConfigurationList'
          description: The Dialed Number Identification Service (DNIS) emergency calling configuration details.
      description: The emergency calling configuration details associated with an Amazon Chime Voice Connector.
    TranscribeMedicalLanguageCode:
      type: string
      enum:
        - en-US
    TranscribeMedicalSpecialty:
      type: string
      enum:
        - PRIMARYCARE
        - CARDIOLOGY
        - NEUROLOGY
        - ONCOLOGY
        - RADIOLOGY
        - UROLOGY
    TranscribeMedicalType:
      type: string
      enum:
        - CONVERSATION
        - DICTATION
    TranscribeMedicalRegion:
      type: string
      enum:
        - us-east-1
        - us-east-2
        - us-west-2
        - ap-southeast-2
        - ca-central-1
        - eu-west-1
        - auto
    TranscribeLanguageCode:
      type: string
      enum:
        - en-US
        - en-GB
        - es-US
        - fr-CA
        - fr-FR
        - en-AU
        - it-IT
        - de-DE
        - pt-BR
        - ja-JP
        - ko-KR
        - zh-CN
    TranscribeVocabularyFilterMethod:
      type: string
      enum:
        - remove
        - mask
        - tag
    TranscribeRegion:
      type: string
      enum:
        - us-east-2
        - us-east-1
        - us-west-2
        - ap-northeast-2
        - ap-southeast-2
        - ap-northeast-1
        - ca-central-1
        - eu-central-1
        - eu-west-1
        - eu-west-2
        - sa-east-1
        - auto
    EventsConfiguration:
      type: object
      properties:
        BotId:
          $ref: '#/components/schemas/String'
          description: The bot ID.
        OutboundEventsHTTPSEndpoint:
          $ref: '#/components/schemas/SensitiveString'
          description: HTTPS endpoint that allows a bot to receive outgoing events.
        LambdaFunctionArn:
          $ref: '#/components/schemas/SensitiveString'
          description: Lambda function ARN that allows a bot to receive outgoing events.
      description: The configuration that allows a bot to receive outgoing events. Can be either an HTTPS endpoint or a Lambda function ARN.
    FunctionArn:
      type: string
      pattern: 'arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(:(\$LATEST|[a-zA-Z0-9-_]+))?'
      maxLength: 10000
      format: password
    GetAccountRequest:
      type: object
      title: GetAccountRequest
      properties: {}
    GetAccountSettingsRequest:
      type: object
      title: GetAccountSettingsRequest
      properties: {}
    GetAppInstanceRetentionSettingsRequest:
      type: object
      title: GetAppInstanceRetentionSettingsRequest
      properties: {}
    GetAppInstanceStreamingConfigurationsRequest:
      type: object
      title: GetAppInstanceStreamingConfigurationsRequest
      properties: {}
    GetAttendeeRequest:
      type: object
      title: GetAttendeeRequest
      properties: {}
    GetBotRequest:
      type: object
      title: GetBotRequest
      properties: {}
    GetChannelMessageRequest:
      type: object
      title: GetChannelMessageRequest
      properties: {}
    GetEventsConfigurationRequest:
      type: object
      title: GetEventsConfigurationRequest
      properties: {}
    VoiceConnectorSettings:
      type: object
      properties:
        CdrBucket:
          $ref: '#/components/schemas/String'
          description: The Amazon S3 bucket designated for call detail record storage.
      description: The Amazon Chime Voice Connector settings. Includes any Amazon S3 buckets designated for storing call detail records.
    GetMediaCapturePipelineRequest:
      type: object
      title: GetMediaCapturePipelineRequest
      properties: {}
    GetMeetingRequest:
      type: object
      title: GetMeetingRequest
      properties: {}
    GetMessagingSessionEndpointRequest:
      type: object
      title: GetMessagingSessionEndpointRequest
      properties: {}
    MessagingSessionEndpoint:
      type: object
      properties:
        Url:
          $ref: '#/components/schemas/UrlType'
          description: The endpoint to which you establish a websocket connection.
      description: The websocket endpoint used to connect to Amazon Chime SDK messaging.
    GetPhoneNumberOrderRequest:
      type: object
      title: GetPhoneNumberOrderRequest
      properties: {}
    GetPhoneNumberRequest:
      type: object
      title: GetPhoneNumberRequest
      properties: {}
    PhoneNumber:
      type: object
      properties:
        PhoneNumberId:
          $ref: '#/components/schemas/String'
          description: The phone number ID.
        E164PhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: 'The phone number, in E.164 format.'
        Country:
          $ref: '#/components/schemas/Alpha2CountryCode'
          description: 'The phone number country. Format: ISO 3166-1 alpha-2.'
        Type:
          $ref: '#/components/schemas/PhoneNumberType'
          description: The phone number type.
        ProductType:
          $ref: '#/components/schemas/PhoneNumberProductType'
          description: The phone number product type.
        Status:
          $ref: '#/components/schemas/PhoneNumberStatus'
          description: The phone number status.
        Capabilities:
          $ref: '#/components/schemas/PhoneNumberCapabilities'
          description: The phone number capabilities.
        Associations:
          $ref: '#/components/schemas/PhoneNumberAssociationList'
          description: The phone number associations.
        CallingName:
          $ref: '#/components/schemas/CallingName'
          description: The outbound calling name associated with the phone number.
        CallingNameStatus:
          $ref: '#/components/schemas/CallingNameStatus'
          description: The outbound calling name status.
        CreatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The phone number creation timestamp, in ISO 8601 format.'
        UpdatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The updated phone number timestamp, in ISO 8601 format.'
        DeletionTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The deleted phone number timestamp, in ISO 8601 format.'
      description: A phone number used for Amazon Chime Business Calling or an Amazon Chime Voice Connector.
    GetProxySessionRequest:
      type: object
      title: GetProxySessionRequest
      properties: {}
    GetRetentionSettingsRequest:
      type: object
      title: GetRetentionSettingsRequest
      properties: {}
    RetentionSettings:
      type: object
      properties:
        RoomRetentionSettings:
          $ref: '#/components/schemas/RoomRetentionSettings'
          description: The chat room retention settings.
        ConversationRetentionSettings:
          $ref: '#/components/schemas/ConversationRetentionSettings'
          description: The chat conversation retention settings.
      description: The retention settings for an Amazon Chime Enterprise account that determine how long to retain items such as chat-room messages and chat-conversation messages.
    GetRoomRequest:
      type: object
      title: GetRoomRequest
      properties: {}
    GetSipMediaApplicationLoggingConfigurationRequest:
      type: object
      title: GetSipMediaApplicationLoggingConfigurationRequest
      properties: {}
    SipMediaApplicationLoggingConfiguration:
      type: object
      properties:
        EnableSipMediaApplicationMessageLogs:
          $ref: '#/components/schemas/Boolean'
          description: Enables application message logs for the SIP media application.
      description: Logging configuration of the SIP media application.
    GetSipMediaApplicationRequest:
      type: object
      title: GetSipMediaApplicationRequest
      properties: {}
    GetSipRuleRequest:
      type: object
      title: GetSipRuleRequest
      properties: {}
    GetUserRequest:
      type: object
      title: GetUserRequest
      properties: {}
    GetUserSettingsRequest:
      type: object
      title: GetUserSettingsRequest
      properties: {}
    UserSettings:
      type: object
      required:
        - Telephony
      properties:
        Telephony:
          $ref: '#/components/schemas/TelephonySettings'
          description: The telephony settings associated with the user.
      description: 'Settings associated with an Amazon Chime user, including inbound and outbound calling and text messaging.'
    GetVoiceConnectorEmergencyCallingConfigurationRequest:
      type: object
      title: GetVoiceConnectorEmergencyCallingConfigurationRequest
      properties: {}
    GetVoiceConnectorGroupRequest:
      type: object
      title: GetVoiceConnectorGroupRequest
      properties: {}
    GetVoiceConnectorLoggingConfigurationRequest:
      type: object
      title: GetVoiceConnectorLoggingConfigurationRequest
      properties: {}
    LoggingConfiguration:
      type: object
      properties:
        EnableSIPLogs:
          $ref: '#/components/schemas/Boolean'
          description: 'When true, enables SIP message logs for sending to Amazon CloudWatch Logs.'
      description: The logging configuration associated with an Amazon Chime Voice Connector. Specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.
    GetVoiceConnectorOriginationRequest:
      type: object
      title: GetVoiceConnectorOriginationRequest
      properties: {}
    Origination:
      type: object
      properties:
        Routes:
          $ref: '#/components/schemas/OriginationRouteList'
          description: 'The call distribution properties defined for your SIP hosts. Valid range: Minimum value of 1. Maximum value of 20.'
        Disabled:
          $ref: '#/components/schemas/Boolean'
          description: 'When origination settings are disabled, inbound calls are not enabled for your Amazon Chime Voice Connector.'
      description: Origination settings enable your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector.
    GetVoiceConnectorProxyRequest:
      type: object
      title: GetVoiceConnectorProxyRequest
      properties: {}
    Proxy:
      type: object
      properties:
        DefaultSessionExpiryMinutes:
          $ref: '#/components/schemas/Integer'
          description: The default number of minutes allowed for proxy sessions.
        Disabled:
          $ref: '#/components/schemas/Boolean'
          description: 'When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector.'
        FallBackPhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: The phone number to route calls to after a proxy session expires.
        PhoneNumberCountries:
          $ref: '#/components/schemas/StringList'
          description: The countries for proxy phone numbers to be selected from.
      description: The proxy configuration for an Amazon Chime Voice Connector.
    GetVoiceConnectorRequest:
      type: object
      title: GetVoiceConnectorRequest
      properties: {}
    GetVoiceConnectorStreamingConfigurationRequest:
      type: object
      title: GetVoiceConnectorStreamingConfigurationRequest
      properties: {}
    StreamingConfiguration:
      type: object
      required:
        - DataRetentionInHours
      properties:
        DataRetentionInHours:
          $ref: '#/components/schemas/DataRetentionInHours'
          description: 'The retention period, in hours, for the Amazon Kinesis data.'
        Disabled:
          $ref: '#/components/schemas/Boolean'
          description: 'When true, media streaming to Amazon Kinesis is turned off.'
        StreamingNotificationTargets:
          $ref: '#/components/schemas/StreamingNotificationTargetList'
          description: The streaming notification targets.
      description: 'The streaming configuration associated with an Amazon Chime Voice Connector. Specifies whether media streaming is enabled for sending to Amazon Kinesis, and shows the retention period for the Amazon Kinesis data, in hours.'
    GetVoiceConnectorTerminationHealthRequest:
      type: object
      title: GetVoiceConnectorTerminationHealthRequest
      properties: {}
    TerminationHealth:
      type: object
      properties:
        Timestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The timestamp, in ISO 8601 format.'
        Source:
          $ref: '#/components/schemas/String'
          description: The source IP address.
      description: 'The termination health details, including the source IP address and timestamp of the last successful SIP <code>OPTIONS</code> message from your SIP infrastructure.'
    GetVoiceConnectorTerminationRequest:
      type: object
      title: GetVoiceConnectorTerminationRequest
      properties: {}
    Termination:
      type: object
      properties:
        CpsLimit:
          $ref: '#/components/schemas/CpsLimit'
          description: The limit on calls per second. Max value based on account service quota. Default value of 1.
        DefaultPhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: The default caller ID phone number.
        CallingRegions:
          $ref: '#/components/schemas/CallingRegionList'
          description: 'The countries to which calls are allowed, in ISO 3166-1 alpha-2 format. Required.'
        CidrAllowedList:
          $ref: '#/components/schemas/StringList'
          description: 'The IP addresses allowed to make calls, in CIDR format. Required.'
        Disabled:
          $ref: '#/components/schemas/Boolean'
          description: 'When termination settings are disabled, outbound calls can not be made.'
      description: Termination settings enable your SIP hosts to make outbound calls using your Amazon Chime Voice Connector.
    ResourceName:
      type: string
      pattern: '[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*'
      minLength: 0
      maxLength: 256
      format: password
    Integer:
      type: integer
    InviteStatus:
      type: string
      enum:
        - Pending
        - Accepted
        - Failed
    Invite:
      type: object
      properties:
        InviteId:
          $ref: '#/components/schemas/String'
          description: The invite ID.
        Status:
          $ref: '#/components/schemas/InviteStatus'
          description: The status of the invite.
        EmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The email address to which the invite is sent.
        EmailStatus:
          $ref: '#/components/schemas/EmailStatus'
          description: The status of the invite email.
      description: Invitation object returned after emailing users to invite them to join the Amazon Chime <code>Team</code> account.
    InviteList:
      type: array
      items:
        $ref: '#/components/schemas/Invite'
    UserEmailList:
      type: array
      items:
        $ref: '#/components/schemas/EmailAddress'
      maxItems: 50
    InviteUsersRequest:
      type: object
      required:
        - UserEmailList
      title: InviteUsersRequest
      properties:
        UserEmailList:
          $ref: '#/components/schemas/UserEmailList'
          description: The user email addresses to which to send the email invitation.
        UserType:
          $ref: '#/components/schemas/UserType'
          description: The user type.
    ProfileServiceMaxResults:
      type: integer
      minimum: 1
      maximum: 200
    ListAccountsRequest:
      type: object
      title: ListAccountsRequest
      properties: {}
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    NextToken:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 2048
      format: password
    ListAppInstanceAdminsRequest:
      type: object
      title: ListAppInstanceAdminsRequest
      properties: {}
    ListAppInstanceUsersRequest:
      type: object
      title: ListAppInstanceUsersRequest
      properties: {}
    ListAppInstancesRequest:
      type: object
      title: ListAppInstancesRequest
      properties: {}
    ListAttendeeTagsRequest:
      type: object
      title: ListAttendeeTagsRequest
      properties: {}
    ResultMax:
      type: integer
      minimum: 1
      maximum: 99
    ListAttendeesRequest:
      type: object
      title: ListAttendeesRequest
      properties: {}
    ListBotsRequest:
      type: object
      title: ListBotsRequest
      properties: {}
    ListChannelBansRequest:
      type: object
      title: ListChannelBansRequest
      properties: {}
    ListChannelMembershipsForAppInstanceUserRequest:
      type: object
      title: ListChannelMembershipsForAppInstanceUserRequest
      properties: {}
    ListChannelMembershipsRequest:
      type: object
      title: ListChannelMembershipsRequest
      properties: {}
    SortOrder:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    ListChannelMessagesRequest:
      type: object
      title: ListChannelMessagesRequest
      properties: {}
    ListChannelModeratorsRequest:
      type: object
      title: ListChannelModeratorsRequest
      properties: {}
    ListChannelsModeratedByAppInstanceUserRequest:
      type: object
      title: ListChannelsModeratedByAppInstanceUserRequest
      properties: {}
    ListChannelsRequest:
      type: object
      title: ListChannelsRequest
      properties: {}
    ListMediaCapturePipelinesRequest:
      type: object
      title: ListMediaCapturePipelinesRequest
      properties: {}
    MediaCapturePipelineList:
      type: array
      items:
        $ref: '#/components/schemas/MediaCapturePipeline'
    ListMeetingTagsRequest:
      type: object
      title: ListMeetingTagsRequest
      properties: {}
    ListMeetingsRequest:
      type: object
      title: ListMeetingsRequest
      properties: {}
    MeetingList:
      type: array
      items:
        $ref: '#/components/schemas/Meeting'
    ListPhoneNumberOrdersRequest:
      type: object
      title: ListPhoneNumberOrdersRequest
      properties: {}
    PhoneNumberOrderList:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberOrder'
    PhoneNumberStatus:
      type: string
      enum:
        - AcquireInProgress
        - AcquireFailed
        - Unassigned
        - Assigned
        - ReleaseInProgress
        - DeleteInProgress
        - ReleaseFailed
        - DeleteFailed
    PhoneNumberAssociationName:
      type: string
      enum:
        - AccountId
        - UserId
        - VoiceConnectorId
        - VoiceConnectorGroupId
        - SipRuleId
    ListPhoneNumbersRequest:
      type: object
      title: ListPhoneNumbersRequest
      properties: {}
    PhoneNumberList:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumber'
    ProxySessionStatus:
      type: string
      enum:
        - Open
        - InProgress
        - Closed
    NextTokenString:
      type: string
      maxLength: 65535
    ListProxySessionsRequest:
      type: object
      title: ListProxySessionsRequest
      properties: {}
    ProxySessions:
      type: array
      items:
        $ref: '#/components/schemas/ProxySession'
    ListRoomMembershipsRequest:
      type: object
      title: ListRoomMembershipsRequest
      properties: {}
    RoomMembershipList:
      type: array
      items:
        $ref: '#/components/schemas/RoomMembership'
    ListRoomsRequest:
      type: object
      title: ListRoomsRequest
      properties: {}
    RoomList:
      type: array
      items:
        $ref: '#/components/schemas/Room'
    ListSipMediaApplicationsRequest:
      type: object
      title: ListSipMediaApplicationsRequest
      properties: {}
    SipMediaApplicationList:
      type: array
      items:
        $ref: '#/components/schemas/SipMediaApplication'
    ListSipRulesRequest:
      type: object
      title: ListSipRulesRequest
      properties: {}
    SipRuleList:
      type: array
      items:
        $ref: '#/components/schemas/SipRule'
    ListSupportedPhoneNumberCountriesRequest:
      type: object
      title: ListSupportedPhoneNumberCountriesRequest
      properties: {}
    PhoneNumberCountriesList:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberCountry'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListUsersRequest:
      type: object
      title: ListUsersRequest
      properties: {}
    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'
    ListVoiceConnectorGroupsRequest:
      type: object
      title: ListVoiceConnectorGroupsRequest
      properties: {}
    VoiceConnectorGroupList:
      type: array
      items:
        $ref: '#/components/schemas/VoiceConnectorGroup'
    ListVoiceConnectorTerminationCredentialsRequest:
      type: object
      title: ListVoiceConnectorTerminationCredentialsRequest
      properties: {}
    ListVoiceConnectorsRequest:
      type: object
      title: ListVoiceConnectorsRequest
      properties: {}
    VoiceConnectorList:
      type: array
      items:
        $ref: '#/components/schemas/VoiceConnector'
    LogoutUserRequest:
      type: object
      title: LogoutUserRequest
      properties: {}
    MediaPipelineStatus:
      type: string
      enum:
        - Initializing
        - InProgress
        - Failed
        - Stopping
        - Stopped
    UriType:
      type: string
      maxLength: 4096
    MediaPlacement:
      type: object
      properties:
        AudioHostUrl:
          $ref: '#/components/schemas/UriType'
          description: The audio host URL.
        AudioFallbackUrl:
          $ref: '#/components/schemas/UriType'
          description: The audio fallback URL.
        ScreenDataUrl:
          $ref: '#/components/schemas/UriType'
          description: The screen data URL.
        ScreenSharingUrl:
          $ref: '#/components/schemas/UriType'
          description: The screen sharing URL.
        ScreenViewingUrl:
          $ref: '#/components/schemas/UriType'
          description: The screen viewing URL.
        SignalingUrl:
          $ref: '#/components/schemas/UriType'
          description: The signaling URL.
        TurnControlUrl:
          $ref: '#/components/schemas/UriType'
          description: The turn control URL.
        EventIngestionUrl:
          $ref: '#/components/schemas/UriType'
          description: The URL of the S3 bucket used to store the captured media.
      description: A set of endpoints used by clients to connect to the media service group for an Amazon Chime SDK meeting.
    MeetingTagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    MemberType:
      type: string
      enum:
        - User
        - Bot
        - Webhook
    Member:
      type: object
      properties:
        MemberId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The member ID (user ID or bot ID).
        MemberType:
          $ref: '#/components/schemas/MemberType'
          description: The member type.
        Email:
          $ref: '#/components/schemas/SensitiveString'
          description: The member email address.
        FullName:
          $ref: '#/components/schemas/SensitiveString'
          description: The member name.
        AccountId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Chime account ID.
      description: 'The member details, such as email address, name, member ID, and member type.'
    MemberError:
      type: object
      properties:
        MemberId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The member ID.
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: The error code.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: The error message.
      description: The list of errors returned when a member action results in an error.
    UrlType:
      type: string
      maxLength: 4096
    NonEmptyContent:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      format: password
    NotificationTarget:
      type: string
      enum:
        - EventBridge
        - SNS
        - SQS
    OrderedPhoneNumberStatus:
      type: string
      enum:
        - Processing
        - Acquired
        - Failed
    OrderedPhoneNumber:
      type: object
      properties:
        E164PhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: 'The phone number, in E.164 format.'
        Status:
          $ref: '#/components/schemas/OrderedPhoneNumberStatus'
          description: The phone number status.
      description: A phone number for which an order has been placed.
    OrderedPhoneNumberList:
      type: array
      items:
        $ref: '#/components/schemas/OrderedPhoneNumber'
    Port:
      type: integer
      minimum: 0
      maximum: 65535
    OriginationRouteProtocol:
      type: string
      enum:
        - TCP
        - UDP
    OriginationRoutePriority:
      type: integer
      minimum: 1
      maximum: 100
    OriginationRouteWeight:
      type: integer
      minimum: 1
      maximum: 100
    OriginationRoute:
      type: object
      properties:
        Host:
          $ref: '#/components/schemas/String'
          description: The FQDN or IP address to contact for origination traffic.
        Port:
          $ref: '#/components/schemas/Port'
          description: The designated origination route port. Defaults to 5060.
        Protocol:
          $ref: '#/components/schemas/OriginationRouteProtocol'
          description: The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default.
        Priority:
          $ref: '#/components/schemas/OriginationRoutePriority'
          description: 'The priority associated with the host, with 1 being the highest priority. Higher priority hosts are attempted first.'
        Weight:
          $ref: '#/components/schemas/OriginationRouteWeight'
          description: 'The weight associated with the host. If hosts are equal in priority, calls are redistributed among them based on their relative weight.'
      description: 'Origination routes define call distribution properties for your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector. Limit: Ten origination routes for each Amazon Chime Voice Connector.'
    Participant:
      type: object
      properties:
        PhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: The participant's phone number.
        ProxyPhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: The participant's proxy phone number.
      description: The phone number and proxy phone number for a participant in an Amazon Chime Voice Connector proxy session.
    Participants:
      type: array
      items:
        $ref: '#/components/schemas/Participant'
    PhoneNumberType:
      type: string
      enum:
        - Local
        - TollFree
    PhoneNumberCapabilities:
      type: object
      properties:
        InboundCall:
          $ref: '#/components/schemas/NullableBoolean'
          description: Allows or denies inbound calling for the specified phone number.
        OutboundCall:
          $ref: '#/components/schemas/NullableBoolean'
          description: Allows or denies outbound calling for the specified phone number.
        InboundSMS:
          $ref: '#/components/schemas/NullableBoolean'
          description: Allows or denies inbound SMS messaging for the specified phone number.
        OutboundSMS:
          $ref: '#/components/schemas/NullableBoolean'
          description: Allows or denies outbound SMS messaging for the specified phone number.
        InboundMMS:
          $ref: '#/components/schemas/NullableBoolean'
          description: Allows or denies inbound MMS messaging for the specified phone number.
        OutboundMMS:
          $ref: '#/components/schemas/NullableBoolean'
          description: Allows or denies outbound MMS messaging for the specified phone number.
      description: 'The phone number capabilities for Amazon Chime Business Calling phone numbers, such as enabled inbound and outbound calling and text messaging.'
    PhoneNumberAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberAssociation'
    PhoneNumberAssociation:
      type: object
      properties:
        Value:
          $ref: '#/components/schemas/String'
          description: Contains the ID for the entity specified in Name.
        Name:
          $ref: '#/components/schemas/PhoneNumberAssociationName'
          description: 'Defines the association with an Amazon Chime account ID, user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.'
        AssociatedTimestamp:
          $ref: '#/components/schemas/Iso8601Timestamp'
          description: 'The timestamp of the phone number association, in ISO 8601 format.'
      description: 'The phone number associations, such as Amazon Chime account ID, Amazon Chime user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.'
    PhoneNumberCountry:
      type: object
      properties:
        CountryCode:
          $ref: '#/components/schemas/Alpha2CountryCode'
          description: 'The phone number country code. Format: ISO 3166-1 alpha-2.'
        SupportedPhoneNumberTypes:
          $ref: '#/components/schemas/PhoneNumberTypeList'
          description: 'The supported phone number types. '
      description: The phone number country.
    PhoneNumberTypeList:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberType'
    PhoneNumberError:
      type: object
      properties:
        PhoneNumberId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The phone number ID for which the action failed.
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: The error code.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: The error message.
      description: 'If the phone number action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.'
    PhoneNumberMaxResults:
      type: integer
      minimum: 1
      maximum: 500
    PhoneNumberOrderStatus:
      type: string
      enum:
        - Processing
        - Successful
        - Failed
        - Partial
    String128:
      type: string
      maxLength: 128
    PutAppInstanceRetentionSettingsRequest:
      type: object
      required:
        - AppInstanceRetentionSettings
      title: PutAppInstanceRetentionSettingsRequest
      properties:
        AppInstanceRetentionSettings:
          $ref: '#/components/schemas/AppInstanceRetentionSettings'
          description: 'The time in days to retain data. Data type: number.'
    PutAppInstanceStreamingConfigurationsRequest:
      type: object
      required:
        - AppInstanceStreamingConfigurations
      title: PutAppInstanceStreamingConfigurationsRequest
      properties:
        AppInstanceStreamingConfigurations:
          $ref: '#/components/schemas/AppInstanceStreamingConfigurationList'
          description: The streaming configurations set for an <code>AppInstance</code>.
    PutEventsConfigurationRequest:
      type: object
      title: PutEventsConfigurationRequest
      properties:
        OutboundEventsHTTPSEndpoint:
          $ref: '#/components/schemas/SensitiveString'
          description: HTTPS endpoint that allows the bot to receive outgoing events.
        LambdaFunctionArn:
          $ref: '#/components/schemas/SensitiveString'
          description: Lambda function ARN that allows the bot to receive outgoing events.
    PutRetentionSettingsRequest:
      type: object
      required:
        - RetentionSettings
      title: PutRetentionSettingsRequest
      properties:
        RetentionSettings:
          $ref: '#/components/schemas/RetentionSettings'
          description: The retention settings.
    PutSipMediaApplicationLoggingConfigurationRequest:
      type: object
      title: PutSipMediaApplicationLoggingConfigurationRequest
      properties:
        SipMediaApplicationLoggingConfiguration:
          $ref: '#/components/schemas/SipMediaApplicationLoggingConfiguration'
          description: The actual logging configuration.
    PutVoiceConnectorEmergencyCallingConfigurationRequest:
      type: object
      required:
        - EmergencyCallingConfiguration
      title: PutVoiceConnectorEmergencyCallingConfigurationRequest
      properties:
        EmergencyCallingConfiguration:
          $ref: '#/components/schemas/EmergencyCallingConfiguration'
          description: The emergency calling configuration details.
    PutVoiceConnectorLoggingConfigurationRequest:
      type: object
      required:
        - LoggingConfiguration
      title: PutVoiceConnectorLoggingConfigurationRequest
      properties:
        LoggingConfiguration:
          $ref: '#/components/schemas/LoggingConfiguration'
          description: The logging configuration details to add.
    PutVoiceConnectorOriginationRequest:
      type: object
      required:
        - Origination
      title: PutVoiceConnectorOriginationRequest
      properties:
        Origination:
          $ref: '#/components/schemas/Origination'
          description: The origination setting details to add.
    PutVoiceConnectorProxyRequest:
      type: object
      required:
        - DefaultSessionExpiryMinutes
        - PhoneNumberPoolCountries
      title: PutVoiceConnectorProxyRequest
      properties:
        DefaultSessionExpiryMinutes:
          $ref: '#/components/schemas/Integer'
          description: The default number of minutes allowed for proxy sessions.
        PhoneNumberPoolCountries:
          $ref: '#/components/schemas/CountryList'
          description: The countries for proxy phone numbers to be selected from.
        FallBackPhoneNumber:
          $ref: '#/components/schemas/E164PhoneNumber'
          description: The phone number to route calls to after a proxy session expires.
        Disabled:
          $ref: '#/components/schemas/Boolean'
          description: 'When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector.'
    PutVoiceConnectorStreamingConfigurationRequest:
      type: object
      required:
        - StreamingConfiguration
      title: PutVoiceConnectorStreamingConfigurationRequest
      properties:
        StreamingConfiguration:
          $ref: '#/components/schemas/StreamingConfiguration'
          description: The streaming configuration details to add.
    PutVoiceConnectorTerminationCredentialsRequest:
      type: object
      title: PutVoiceConnectorTerminationCredentialsRequest
      properties:
        Credentials:
          $ref: '#/components/schemas/CredentialList'
          description: The termination SIP credentials.
    PutVoiceConnectorTerminationRequest:
      type: object
      required:
        - Termination
      title: PutVoiceConnectorTerminationRequest
      properties:
        Termination:
          $ref: '#/components/schemas/Termination'
          description: The termination setting details to add.
    RedactChannelMessageRequest:
      type: object
      title: RedactChannelMessageRequest
      properties: {}
    RedactConversationMessageRequest:
      type: object
      title: RedactConversationMessageRequest
      properties: {}
    RedactRoomMessageRequest:
      type: object
      title: RedactRoomMessageRequest
      properties: {}
    RegenerateSecurityTokenRequest:
      type: object
      title: RegenerateSecurityTokenRequest
      properties: {}
    RegistrationStatus:
      type: string
      enum:
        - Unregistered
        - Registered
        - Suspended
    ResetPersonalPINRequest:
      type: object
      title: ResetPersonalPINRequest
      properties: {}
    RestorePhoneNumberRequest:
      type: object
      title: RestorePhoneNumberRequest
      properties: {}
    SMAUpdateCallArgumentsMap:
      type: object
      minProperties: 0
      maxProperties: 20
      additionalProperties:
        $ref: '#/components/schemas/SensitiveString'
    TollFreePrefix:
      type: string
      pattern: ^8(00|33|44|55|66|77|88)$
      minLength: 3
      maxLength: 3
    SearchAvailablePhoneNumbersRequest:
      type: object
      title: SearchAvailablePhoneNumbersRequest
      properties: {}
    SendChannelMessageRequest:
      type: object
      required:
        - Content
        - Type
        - Persistence
        - ClientRequestToken
      title: SendChannelMessageRequest
      properties:
        Content:
          $ref: '#/components/schemas/NonEmptyContent'
          description: The content of the message.
        Type:
          $ref: '#/components/schemas/ChannelMessageType'
          description: 'The type of message, <code>STANDARD</code> or <code>CONTROL</code>.'
        Persistence:
          $ref: '#/components/schemas/ChannelMessagePersistenceType'
          description: Boolean that controls whether the message is persisted on the back end. Required.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The optional metadata for each message.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: The <code>Idempotency</code> token for each client request.
    SipApplicationPriority:
      type: integer
      minimum: 1
    TranscriptionConfiguration:
      type: object
      properties:
        EngineTranscribeSettings:
          $ref: '#/components/schemas/EngineTranscribeSettings'
          description: The transcription configuration settings passed to Amazon Transcribe.
        EngineTranscribeMedicalSettings:
          $ref: '#/components/schemas/EngineTranscribeMedicalSettings'
          description: The transcription configuration settings passed to Amazon Transcribe.
      description: The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or <code>EngineTranscribeMedicalSettings</code>.
    StartMeetingTranscriptionRequest:
      type: object
      required:
        - TranscriptionConfiguration
      title: StartMeetingTranscriptionRequest
      properties:
        TranscriptionConfiguration:
          $ref: '#/components/schemas/TranscriptionConfiguration'
          description: The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or <code>EngineTranscribeMedicalSettings</code>.
    StopMeetingTranscriptionRequest:
      type: object
      title: StopMeetingTranscriptionRequest
      properties: {}
    StreamingNotificationTarget:
      type: object
      required:
        - NotificationTarget
      properties:
        NotificationTarget:
          $ref: '#/components/schemas/NotificationTarget'
          description: The streaming notification target.
      description: The targeted recipient for a streaming configuration notification.
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
      format: password
    TagAttendeeRequest:
      type: object
      required:
        - Tags
      title: TagAttendeeRequest
      properties:
        Tags:
          $ref: '#/components/schemas/AttendeeTagList'
          description: The tag key-value pairs.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagMeetingRequest:
      type: object
      required:
        - Tags
      title: TagMeetingRequest
      properties:
        Tags:
          $ref: '#/components/schemas/MeetingTagList'
          description: The tag key-value pairs.
    TagResourceRequest:
      type: object
      required:
        - ResourceARN
        - Tags
      title: TagResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/Arn'
          description: The resource ARN.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tag key-value pairs.
    UntagAttendeeRequest:
      type: object
      required:
        - TagKeys
      title: UntagAttendeeRequest
      properties:
        TagKeys:
          $ref: '#/components/schemas/AttendeeTagKeyList'
          description: The tag keys.
    UntagMeetingRequest:
      type: object
      required:
        - TagKeys
      title: UntagMeetingRequest
      properties:
        TagKeys:
          $ref: '#/components/schemas/MeetingTagKeyList'
          description: The tag keys.
    UntagResourceRequest:
      type: object
      required:
        - ResourceARN
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/Arn'
          description: The resource ARN.
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: The tag keys.
    UpdateAccountRequest:
      type: object
      title: UpdateAccountRequest
      properties:
        Name:
          $ref: '#/components/schemas/AccountName'
          description: The new name for the specified Amazon Chime account.
        DefaultLicense:
          $ref: '#/components/schemas/License'
          description: The default license applied when you add users to an Amazon Chime account.
    UpdateAccountSettingsRequest:
      type: object
      required:
        - AccountSettings
      title: UpdateAccountSettingsRequest
      properties:
        AccountSettings:
          $ref: '#/components/schemas/AccountSettings'
          description: The Amazon Chime account settings to update.
    UpdateAppInstanceRequest:
      type: object
      required:
        - Name
      title: UpdateAppInstanceRequest
      properties:
        Name:
          $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name that you want to change.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The metadata that you want to change.
    UpdateAppInstanceUserRequest:
      type: object
      required:
        - Name
      title: UpdateAppInstanceUserRequest
      properties:
        Name:
          $ref: '#/components/schemas/UserName'
          description: The name of the <code>AppInstanceUser</code>.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The metadata of the <code>AppInstanceUser</code>.
    UpdateBotRequest:
      type: object
      title: UpdateBotRequest
      properties:
        Disabled:
          $ref: '#/components/schemas/NullableBoolean'
          description: 'When true, stops the specified bot from running in your account.'
    UpdateChannelMessageRequest:
      type: object
      title: UpdateChannelMessageRequest
      properties:
        Content:
          $ref: '#/components/schemas/Content'
          description: The content of the message being updated.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The metadata of the message being updated.
    UpdateChannelReadMarkerRequest:
      type: object
      title: UpdateChannelReadMarkerRequest
      properties: {}
    UpdateChannelRequest:
      type: object
      required:
        - Name
        - Mode
      title: UpdateChannelRequest
      properties:
        Name:
          $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel.
        Mode:
          $ref: '#/components/schemas/ChannelMode'
          description: The mode of the update request.
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: The metadata for the update request.
    UpdateGlobalSettingsRequest:
      type: object
      required:
        - BusinessCalling
        - VoiceConnector
      title: UpdateGlobalSettingsRequest
      properties:
        BusinessCalling:
          $ref: '#/components/schemas/BusinessCallingSettings'
          description: The Amazon Chime Business Calling settings.
        VoiceConnector:
          $ref: '#/components/schemas/VoiceConnectorSettings'
          description: The Amazon Chime Voice Connector settings.
    UpdatePhoneNumberRequest:
      type: object
      title: UpdatePhoneNumberRequest
      properties:
        ProductType:
          $ref: '#/components/schemas/PhoneNumberProductType'
          description: The product type.
        CallingName:
          $ref: '#/components/schemas/CallingName'
          description: The outbound calling name associated with the phone number.
    UpdatePhoneNumberSettingsRequest:
      type: object
      required:
        - CallingName
      title: UpdatePhoneNumberSettingsRequest
      properties:
        CallingName:
          $ref: '#/components/schemas/CallingName'
          description: The default outbound calling name for the account.
    UpdateProxySessionRequest:
      type: object
      required:
        - Capabilities
      title: UpdateProxySessionRequest
      properties:
        Capabilities:
          $ref: '#/components/schemas/CapabilityList'
          description: The proxy session capabilities.
        ExpiryMinutes:
          $ref: '#/components/schemas/PositiveInteger'
          description: The number of minutes allowed for the proxy session.
    UpdateRoomMembershipRequest:
      type: object
      title: UpdateRoomMembershipRequest
      properties:
        Role:
          $ref: '#/components/schemas/RoomMembershipRole'
          description: The role of the member.
    UpdateRoomRequest:
      type: object
      title: UpdateRoomRequest
      properties:
        Name:
          $ref: '#/components/schemas/SensitiveString'
          description: The room name.
    UpdateSipMediaApplicationCallRequest:
      type: object
      required:
        - Arguments
      title: UpdateSipMediaApplicationCallRequest
      properties:
        Arguments:
          $ref: '#/components/schemas/SMAUpdateCallArgumentsMap'
          description: Arguments made available to the Lambda function as part of the <code>CALL_UPDATE_REQUESTED</code> event. Can contain 0-20 key-value pairs.
    UpdateSipMediaApplicationRequest:
      type: object
      title: UpdateSipMediaApplicationRequest
      properties:
        Name:
          $ref: '#/components/schemas/SipMediaApplicationName'
          description: The new name for the specified SIP media application.
        Endpoints:
          $ref: '#/components/schemas/SipMediaApplicationEndpointList'
          description: The new set of endpoints for the specified SIP media application.
    UpdateSipRuleRequest:
      type: object
      required:
        - Name
      title: UpdateSipRuleRequest
      properties:
        Name:
          $ref: '#/components/schemas/SipRuleName'
          description: The new name for the specified SIP rule.
        Disabled:
          $ref: '#/components/schemas/NullableBoolean'
          description: The new value specified to indicate whether the rule is disabled.
        TargetApplications:
          $ref: '#/components/schemas/SipRuleTargetApplicationList'
          description: The new value of the list of target applications.
    UpdateUserRequest:
      type: object
      title: UpdateUserRequest
      properties:
        LicenseType:
          $ref: '#/components/schemas/License'
          description: The user license type to update. This must be a supported license type for the Amazon Chime account that the user belongs to.
        UserType:
          $ref: '#/components/schemas/UserType'
          description: The user type.
        AlexaForBusinessMetadata:
          $ref: '#/components/schemas/AlexaForBusinessMetadata'
          description: The Alexa for Business metadata.
    UpdateUserSettingsRequest:
      type: object
      required:
        - UserSettings
      title: UpdateUserSettingsRequest
      properties:
        UserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: The user settings to update.
    UpdateVoiceConnectorGroupRequest:
      type: object
      required:
        - Name
        - VoiceConnectorItems
      title: UpdateVoiceConnectorGroupRequest
      properties:
        Name:
          $ref: '#/components/schemas/VoiceConnectorGroupName'
          description: The name of the Amazon Chime Voice Connector group.
        VoiceConnectorItems:
          $ref: '#/components/schemas/VoiceConnectorItemList'
          description: The <code>VoiceConnectorItems</code> to associate with the group.
    UpdateVoiceConnectorRequest:
      type: object
      required:
        - Name
        - RequireEncryption
      title: UpdateVoiceConnectorRequest
      properties:
        Name:
          $ref: '#/components/schemas/VoiceConnectorName'
          description: The name of the Amazon Chime Voice Connector.
        RequireEncryption:
          $ref: '#/components/schemas/Boolean'
          description: 'When enabled, requires encryption for the Amazon Chime Voice Connector.'
    UserError:
      type: object
      properties:
        UserId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The user ID for which the action failed.
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: The error code.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: The error message.
      description: 'The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages.'
    VoiceConnectorItemPriority:
      type: integer
      minimum: 1
      maximum: 99
security:
  - hmac: []
