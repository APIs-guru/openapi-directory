openapi: 3.0.0
info:
  version: '2013-09-09'
  x-release: v4
  title: Amazon Relational Database Service
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: rds
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/rds-2013-09-09.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/rds/'
servers:
  - url: 'http://rds.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon RDS multi-region endpoint
  - url: 'https://rds.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon RDS multi-region endpoint
  - url: 'http://rds.amazonaws.com'
    variables: {}
    description: The general Amazon RDS multi-region endpoint
  - url: 'https://rds.amazonaws.com'
    variables: {}
    description: The general Amazon RDS multi-region endpoint
  - url: 'http://rds.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon RDS endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://rds.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon RDS endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#Action=AddSourceIdentifierToSubscription:
    get:
      x-aws-operation-name: AddSourceIdentifierToSubscription
      operationId: GET_AddSourceIdentifierToSubscription
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: SourceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddSourceIdentifierToSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AddSourceIdentifierToSubscription
      operationId: POST_AddSourceIdentifierToSubscription
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddSourceIdentifierToSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=AddTagsToResource:
    get:
      x-aws-operation-name: AddTagsToResource
      operationId: GET_AddTagsToResource
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Tags
          in: query
          required: true
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTagsToResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AddTagsToResource
      operationId: POST_AddTagsToResource
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddTagsToResourceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTagsToResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=AuthorizeDBSecurityGroupIngress:
    get:
      x-aws-operation-name: AuthorizeDBSecurityGroupIngress
      operationId: GET_AuthorizeDBSecurityGroupIngress
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
        '483':
          description: AuthorizationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationQuotaExceededFault'
      parameters:
        - name: DBSecurityGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: CIDRIP
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: EC2SecurityGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: EC2SecurityGroupId
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: EC2SecurityGroupOwnerId
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeDBSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AuthorizeDBSecurityGroupIngress
      operationId: POST_AuthorizeDBSecurityGroupIngress
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
        '483':
          description: AuthorizationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationQuotaExceededFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AuthorizeDBSecurityGroupIngressMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeDBSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=CopyDBSnapshot:
    get:
      x-aws-operation-name: CopyDBSnapshot
      operationId: GET_CopyDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
        '482':
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
        '483':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
      parameters:
        - name: SourceDBSnapshotIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: TargetDBSnapshotIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyDBSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CopyDBSnapshot
      operationId: POST_CopyDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
        '482':
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
        '483':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CopyDBSnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyDBSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=CreateDBInstance:
    get:
      x-aws-operation-name: CreateDBInstance
      operationId: GET_CreateDBInstance
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBInstanceResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '486':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '487':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '488':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '489':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '490':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '491':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
      parameters:
        - name: DBName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: AllocatedStorage
          in: query
          required: true
          description: ''
          schema:
            type: integer
        - name: DBInstanceClass
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Engine
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: MasterUsername
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: MasterUserPassword
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: DBSecurityGroups
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: DBSecurityGroupName
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: VpcSecurityGroupId
        - name: AvailabilityZone
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBSubnetGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBParameterGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: BackupRetentionPeriod
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: PreferredBackupWindow
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: MultiAZ
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: EngineVersion
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: LicenseModel
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Iops
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: OptionGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: CharacterSetName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: PubliclyAccessible
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDBInstance
      operationId: POST_CreateDBInstance
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBInstanceResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '486':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '487':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '488':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '489':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '490':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '491':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBInstanceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=CreateDBInstanceReadReplica:
    get:
      x-aws-operation-name: CreateDBInstanceReadReplica
      operationId: GET_CreateDBInstanceReadReplica
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBInstanceReadReplicaResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '486':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '487':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '491':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '494':
          description: DBSubnetGroupNotAllowedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotAllowedFault'
        '495':
          description: InvalidDBSubnetGroupFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: SourceDBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: AvailabilityZone
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Iops
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: OptionGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: PubliclyAccessible
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: DBSubnetGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBInstanceReadReplica
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDBInstanceReadReplica
      operationId: POST_CreateDBInstanceReadReplica
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBInstanceReadReplicaResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '486':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '487':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '491':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '494':
          description: DBSubnetGroupNotAllowedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotAllowedFault'
        '495':
          description: InvalidDBSubnetGroupFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBInstanceReadReplicaMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBInstanceReadReplica
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=CreateDBParameterGroup:
    get:
      x-aws-operation-name: CreateDBParameterGroup
      operationId: GET_CreateDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBParameterGroupResult'
        '480':
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
        '481':
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: DBParameterGroupFamily
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Description
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDBParameterGroup
      operationId: POST_CreateDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBParameterGroupResult'
        '480':
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
        '481':
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBParameterGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=CreateDBSecurityGroup:
    get:
      x-aws-operation-name: CreateDBSecurityGroup
      operationId: GET_CreateDBSecurityGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBSecurityGroupResult'
        '480':
          description: DBSecurityGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupAlreadyExistsFault'
        '481':
          description: DBSecurityGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupQuotaExceededFault'
        '482':
          description: DBSecurityGroupNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotSupportedFault'
      parameters:
        - name: DBSecurityGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: DBSecurityGroupDescription
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDBSecurityGroup
      operationId: POST_CreateDBSecurityGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBSecurityGroupResult'
        '480':
          description: DBSecurityGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupAlreadyExistsFault'
        '481':
          description: DBSecurityGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupQuotaExceededFault'
        '482':
          description: DBSecurityGroupNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotSupportedFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBSecurityGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=CreateDBSnapshot:
    get:
      x-aws-operation-name: CreateDBSnapshot
      operationId: GET_CreateDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
        '481':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '482':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '483':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
      parameters:
        - name: DBSnapshotIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDBSnapshot
      operationId: POST_CreateDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
        '481':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '482':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '483':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBSnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=CreateDBSubnetGroup:
    get:
      x-aws-operation-name: CreateDBSubnetGroup
      operationId: GET_CreateDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupAlreadyExistsFault'
        '481':
          description: DBSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupQuotaExceededFault'
        '482':
          description: DBSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: DBSubnetGroupDescription
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: true
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SubnetIdentifier
        - name: Tags
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDBSubnetGroup
      operationId: POST_CreateDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupAlreadyExistsFault'
        '481':
          description: DBSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupQuotaExceededFault'
        '482':
          description: DBSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBSubnetGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=CreateEventSubscription:
    get:
      x-aws-operation-name: CreateEventSubscription
      operationId: GET_CreateEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionAlreadyExistFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionAlreadyExistFault'
        '482':
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
        '486':
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: SnsTopicArn
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: SourceType
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: EventCategories
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: EventCategory
        - name: SourceIds
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SourceId
        - name: Enabled
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateEventSubscription
      operationId: POST_CreateEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionAlreadyExistFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionAlreadyExistFault'
        '482':
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
        '486':
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateEventSubscriptionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=CreateOptionGroup:
    get:
      x-aws-operation-name: CreateOptionGroup
      operationId: GET_CreateOptionGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateOptionGroupResult'
        '480':
          description: OptionGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupAlreadyExistsFault'
        '481':
          description: OptionGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupQuotaExceededFault'
      parameters:
        - name: OptionGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: EngineName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: MajorEngineVersion
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: OptionGroupDescription
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateOptionGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateOptionGroup
      operationId: POST_CreateOptionGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateOptionGroupResult'
        '480':
          description: OptionGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupAlreadyExistsFault'
        '481':
          description: OptionGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupQuotaExceededFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateOptionGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateOptionGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DeleteDBInstance:
    get:
      x-aws-operation-name: DeleteDBInstance
      operationId: GET_DeleteDBInstance
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBInstanceResult'
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '482':
          description: DBSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
        '483':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: SkipFinalSnapshot
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: FinalDBSnapshotIdentifier
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDBInstance
      operationId: POST_DeleteDBInstance
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBInstanceResult'
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '482':
          description: DBSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
        '483':
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBInstanceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DeleteDBParameterGroup:
    get:
      x-aws-operation-name: DeleteDBParameterGroup
      operationId: GET_DeleteDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDBParameterGroup
      operationId: POST_DeleteDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBParameterGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DeleteDBSecurityGroup:
    get:
      x-aws-operation-name: DeleteDBSecurityGroup
      operationId: GET_DeleteDBSecurityGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
        '481':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
      parameters:
        - name: DBSecurityGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDBSecurityGroup
      operationId: POST_DeleteDBSecurityGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
        '481':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBSecurityGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DeleteDBSnapshot:
    get:
      x-aws-operation-name: DeleteDBSnapshot
      operationId: GET_DeleteDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBSnapshotResult'
        '480':
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      parameters:
        - name: DBSnapshotIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDBSnapshot
      operationId: POST_DeleteDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBSnapshotResult'
        '480':
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBSnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DeleteDBSubnetGroup:
    get:
      x-aws-operation-name: DeleteDBSubnetGroup
      operationId: GET_DeleteDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
        '481':
          description: InvalidDBSubnetStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetStateFault'
        '482':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDBSubnetGroup
      operationId: POST_DeleteDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
        '481':
          description: InvalidDBSubnetStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetStateFault'
        '482':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBSubnetGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DeleteEventSubscription:
    get:
      x-aws-operation-name: DeleteEventSubscription
      operationId: GET_DeleteEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteEventSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: InvalidEventSubscriptionStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidEventSubscriptionStateFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteEventSubscription
      operationId: POST_DeleteEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteEventSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: InvalidEventSubscriptionStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidEventSubscriptionStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteEventSubscriptionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DeleteOptionGroup:
    get:
      x-aws-operation-name: DeleteOptionGroup
      operationId: GET_DeleteOptionGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '481':
          description: InvalidOptionGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOptionGroupStateFault'
      parameters:
        - name: OptionGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteOptionGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteOptionGroup
      operationId: POST_DeleteOptionGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '481':
          description: InvalidOptionGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOptionGroupStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteOptionGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteOptionGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeDBEngineVersions:
    get:
      x-aws-operation-name: DescribeDBEngineVersions
      operationId: GET_DescribeDBEngineVersions
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBEngineVersionMessage'
      parameters:
        - name: Engine
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBParameterGroupFamily
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DefaultOnly
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: ListSupportedCharacterSets
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBEngineVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBEngineVersions
      operationId: POST_DescribeDBEngineVersions
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBEngineVersionMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBEngineVersionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBEngineVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeDBInstances:
    get:
      x-aws-operation-name: DescribeDBInstances
      operationId: GET_DescribeDBInstances
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceMessage'
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBInstances
      operationId: POST_DescribeDBInstances
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceMessage'
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBInstancesMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeDBLogFiles:
    get:
      x-aws-operation-name: DescribeDBLogFiles
      operationId: GET_DescribeDBLogFiles
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDBLogFilesResponse'
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: FilenameContains
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: FileLastWritten
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: FileSize
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBLogFiles
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBLogFiles
      operationId: POST_DescribeDBLogFiles
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDBLogFilesResponse'
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBLogFilesMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBLogFiles
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeDBParameterGroups:
    get:
      x-aws-operation-name: DescribeDBParameterGroups
      operationId: GET_DescribeDBParameterGroups
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupsMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      parameters:
        - name: DBParameterGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBParameterGroups
      operationId: POST_DescribeDBParameterGroups
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupsMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBParameterGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeDBParameters:
    get:
      x-aws-operation-name: DescribeDBParameters
      operationId: GET_DescribeDBParameters
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupDetails'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Source
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBParameters
      operationId: POST_DescribeDBParameters
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupDetails'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBParametersMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeDBSecurityGroups:
    get:
      x-aws-operation-name: DescribeDBSecurityGroups
      operationId: GET_DescribeDBSecurityGroups
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupMessage'
        '480':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
      parameters:
        - name: DBSecurityGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBSecurityGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBSecurityGroups
      operationId: POST_DescribeDBSecurityGroups
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupMessage'
        '480':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBSecurityGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBSecurityGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeDBSnapshots:
    get:
      x-aws-operation-name: DescribeDBSnapshots
      operationId: GET_DescribeDBSnapshots
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotMessage'
        '480':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBSnapshotIdentifier
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: SnapshotType
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBSnapshots
      operationId: POST_DescribeDBSnapshots
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotMessage'
        '480':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBSnapshotsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeDBSubnetGroups:
    get:
      x-aws-operation-name: DescribeDBSubnetGroups
      operationId: GET_DescribeDBSubnetGroups
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupMessage'
        '480':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBSubnetGroups
      operationId: POST_DescribeDBSubnetGroups
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupMessage'
        '480':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBSubnetGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeEngineDefaultParameters:
    get:
      x-aws-operation-name: DescribeEngineDefaultParameters
      operationId: GET_DescribeEngineDefaultParameters
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultParametersResult'
      parameters:
        - name: DBParameterGroupFamily
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEngineDefaultParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEngineDefaultParameters
      operationId: POST_DescribeEngineDefaultParameters
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultParametersResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEngineDefaultParametersMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEngineDefaultParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeEventCategories:
    get:
      x-aws-operation-name: DescribeEventCategories
      operationId: GET_DescribeEventCategories
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventCategoriesMessage'
      parameters:
        - name: SourceType
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventCategories
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEventCategories
      operationId: POST_DescribeEventCategories
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventCategoriesMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventCategoriesMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventCategories
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeEventSubscriptions:
    get:
      x-aws-operation-name: DescribeEventSubscriptions
      operationId: GET_DescribeEventSubscriptions
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsMessage'
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventSubscriptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEventSubscriptions
      operationId: POST_DescribeEventSubscriptions
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsMessage'
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventSubscriptionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventSubscriptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeEvents:
    get:
      x-aws-operation-name: DescribeEvents
      operationId: GET_DescribeEvents
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventsMessage'
      parameters:
        - name: SourceIdentifier
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: SourceType
          in: query
          required: false
          description: ''
          schema:
            type: string
            enum:
              - db-instance
              - db-parameter-group
              - db-security-group
              - db-snapshot
        - name: StartTime
          in: query
          required: false
          description: ''
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: ''
          schema:
            type: string
            format: date-time
        - name: Duration
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: EventCategories
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: EventCategory
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEvents
      operationId: POST_DescribeEvents
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventsMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeOptionGroupOptions:
    get:
      x-aws-operation-name: DescribeOptionGroupOptions
      operationId: GET_DescribeOptionGroupOptions
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupOptionsMessage'
      parameters:
        - name: EngineName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: MajorEngineVersion
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOptionGroupOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeOptionGroupOptions
      operationId: POST_DescribeOptionGroupOptions
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupOptionsMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeOptionGroupOptionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOptionGroupOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeOptionGroups:
    get:
      x-aws-operation-name: DescribeOptionGroups
      operationId: GET_DescribeOptionGroups
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroups'
        '480':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
      parameters:
        - name: OptionGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: EngineName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: MajorEngineVersion
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOptionGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeOptionGroups
      operationId: POST_DescribeOptionGroups
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroups'
        '480':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeOptionGroupsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOptionGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeOrderableDBInstanceOptions:
    get:
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
      operationId: GET_DescribeOrderableDBInstanceOptions
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OrderableDBInstanceOptionsMessage'
      parameters:
        - name: Engine
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: LicenseModel
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Vpc
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOrderableDBInstanceOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
      operationId: POST_DescribeOrderableDBInstanceOptions
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OrderableDBInstanceOptionsMessage'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeOrderableDBInstanceOptionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOrderableDBInstanceOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeReservedDBInstances:
    get:
      x-aws-operation-name: DescribeReservedDBInstances
      operationId: GET_DescribeReservedDBInstances
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstanceMessage'
        '480':
          description: ReservedDBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstanceNotFoundFault'
      parameters:
        - name: ReservedDBInstanceId
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: ReservedDBInstancesOfferingId
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Duration
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: ProductDescription
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: OfferingType
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: MultiAZ
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedDBInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReservedDBInstances
      operationId: POST_DescribeReservedDBInstances
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstanceMessage'
        '480':
          description: ReservedDBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstanceNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReservedDBInstancesMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedDBInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DescribeReservedDBInstancesOfferings:
    get:
      x-aws-operation-name: DescribeReservedDBInstancesOfferings
      operationId: GET_DescribeReservedDBInstancesOfferings
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstancesOfferingMessage'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstancesOfferingNotFoundFault'
      parameters:
        - name: ReservedDBInstancesOfferingId
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Duration
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: ProductDescription
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: OfferingType
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: MultiAZ
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxRecords
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedDBInstancesOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReservedDBInstancesOfferings
      operationId: POST_DescribeReservedDBInstancesOfferings
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstancesOfferingMessage'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstancesOfferingNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReservedDBInstancesOfferingsMessage'
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedDBInstancesOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=DownloadDBLogFilePortion:
    get:
      x-aws-operation-name: DownloadDBLogFilePortion
      operationId: GET_DownloadDBLogFilePortion
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DownloadDBLogFilePortionDetails'
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: DBLogFileNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBLogFileNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: LogFileName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Marker
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: NumberOfLines
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DownloadDBLogFilePortion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DownloadDBLogFilePortion
      operationId: POST_DownloadDBLogFilePortion
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DownloadDBLogFilePortionDetails'
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: DBLogFileNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBLogFileNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DownloadDBLogFilePortionMessage'
      parameters:
        - name: NumberOfLines
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DownloadDBLogFilePortion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=ListTagsForResource:
    get:
      x-aws-operation-name: ListTagsForResource
      operationId: GET_ListTagsForResource
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListTagsForResource
      operationId: POST_ListTagsForResource
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=ModifyDBInstance:
    get:
      x-aws-operation-name: ModifyDBInstance
      operationId: GET_ModifyDBInstance
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
        '482':
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '483':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '484':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '485':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '486':
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '487':
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '488':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '489':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '490':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '491':
          description: DBUpgradeDependencyFailureFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBUpgradeDependencyFailureFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: AllocatedStorage
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBSecurityGroups
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: DBSecurityGroupName
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: VpcSecurityGroupId
        - name: ApplyImmediately
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: MasterUserPassword
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBParameterGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: BackupRetentionPeriod
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: PreferredBackupWindow
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: MultiAZ
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: EngineVersion
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: AllowMajorVersionUpgrade
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Iops
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: OptionGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: NewDBInstanceIdentifier
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyDBInstance
      operationId: POST_ModifyDBInstance
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
        '482':
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '483':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '484':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '485':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '486':
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '487':
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '488':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '489':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '490':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '491':
          description: DBUpgradeDependencyFailureFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBUpgradeDependencyFailureFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBInstanceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=ModifyDBParameterGroup:
    get:
      x-aws-operation-name: ModifyDBParameterGroup
      operationId: GET_ModifyDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNameMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '481':
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Parameters
          in: query
          required: true
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Parameter'
                - xml:
                    name: Parameter
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyDBParameterGroup
      operationId: POST_ModifyDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNameMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '481':
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBParameterGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=ModifyDBSubnetGroup:
    get:
      x-aws-operation-name: ModifyDBSubnetGroup
      operationId: GET_ModifyDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '481':
          description: DBSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
        '482':
          description: SubnetAlreadyInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetAlreadyInUse'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: DBSubnetGroupDescription
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: true
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: SubnetIdentifier
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyDBSubnetGroup
      operationId: POST_ModifyDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '481':
          description: DBSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
        '482':
          description: SubnetAlreadyInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetAlreadyInUse'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBSubnetGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=ModifyEventSubscription:
    get:
      x-aws-operation-name: ModifyEventSubscription
      operationId: GET_ModifyEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '482':
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: SnsTopicArn
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: SourceType
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: EventCategories
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: EventCategory
        - name: Enabled
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyEventSubscription
      operationId: POST_ModifyEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '482':
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyEventSubscriptionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=ModifyOptionGroup:
    get:
      x-aws-operation-name: ModifyOptionGroup
      operationId: GET_ModifyOptionGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyOptionGroupResult'
        '480':
          description: InvalidOptionGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOptionGroupStateFault'
        '481':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
      parameters:
        - name: OptionGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: OptionsToInclude
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/OptionConfiguration'
                - xml:
                    name: OptionConfiguration
        - name: OptionsToRemove
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
        - name: ApplyImmediately
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyOptionGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyOptionGroup
      operationId: POST_ModifyOptionGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyOptionGroupResult'
        '480':
          description: InvalidOptionGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOptionGroupStateFault'
        '481':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyOptionGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyOptionGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=PromoteReadReplica:
    get:
      x-aws-operation-name: PromoteReadReplica
      operationId: GET_PromoteReadReplica
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PromoteReadReplicaResult'
        '480':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: BackupRetentionPeriod
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: PreferredBackupWindow
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PromoteReadReplica
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PromoteReadReplica
      operationId: POST_PromoteReadReplica
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PromoteReadReplicaResult'
        '480':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PromoteReadReplicaMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PromoteReadReplica
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=PurchaseReservedDBInstancesOffering:
    get:
      x-aws-operation-name: PurchaseReservedDBInstancesOffering
      operationId: GET_PurchaseReservedDBInstancesOffering
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseReservedDBInstancesOfferingResult'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstancesOfferingNotFoundFault'
        '481':
          description: ReservedDBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstanceAlreadyExistsFault'
        '482':
          description: ReservedDBInstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstanceQuotaExceededFault'
      parameters:
        - name: ReservedDBInstancesOfferingId
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: ReservedDBInstanceId
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBInstanceCount
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: Tags
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PurchaseReservedDBInstancesOffering
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PurchaseReservedDBInstancesOffering
      operationId: POST_PurchaseReservedDBInstancesOffering
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseReservedDBInstancesOfferingResult'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstancesOfferingNotFoundFault'
        '481':
          description: ReservedDBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstanceAlreadyExistsFault'
        '482':
          description: ReservedDBInstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedDBInstanceQuotaExceededFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PurchaseReservedDBInstancesOfferingMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PurchaseReservedDBInstancesOffering
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=RebootDBInstance:
    get:
      x-aws-operation-name: RebootDBInstance
      operationId: GET_RebootDBInstance
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebootDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: ForceFailover
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RebootDBInstance
      operationId: POST_RebootDBInstance
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebootDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RebootDBInstanceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=RemoveSourceIdentifierFromSubscription:
    get:
      x-aws-operation-name: RemoveSourceIdentifierFromSubscription
      operationId: GET_RemoveSourceIdentifierFromSubscription
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: SourceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveSourceIdentifierFromSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RemoveSourceIdentifierFromSubscription
      operationId: POST_RemoveSourceIdentifierFromSubscription
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveSourceIdentifierFromSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=RemoveTagsFromResource:
    get:
      x-aws-operation-name: RemoveTagsFromResource
      operationId: GET_RemoveTagsFromResource
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: TagKeys
          in: query
          required: true
          description: ''
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTagsFromResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RemoveTagsFromResource
      operationId: POST_RemoveTagsFromResource
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveTagsFromResourceMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTagsFromResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=ResetDBParameterGroup:
    get:
      x-aws-operation-name: ResetDBParameterGroup
      operationId: GET_ResetDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNameMessage'
        '480':
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: ResetAllParameters
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: Parameters
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Parameter'
                - xml:
                    name: Parameter
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResetDBParameterGroup
      operationId: POST_ResetDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNameMessage'
        '480':
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetDBParameterGroupMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=RestoreDBInstanceFromDBSnapshot:
    get:
      x-aws-operation-name: RestoreDBInstanceFromDBSnapshot
      operationId: GET_RestoreDBInstanceFromDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreDBInstanceFromDBSnapshotResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
        '485':
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '486':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '487':
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '491':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '492':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: DBSnapshotIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: AvailabilityZone
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBSubnetGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: MultiAZ
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: PubliclyAccessible
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: LicenseModel
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Engine
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Iops
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: OptionGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreDBInstanceFromDBSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RestoreDBInstanceFromDBSnapshot
      operationId: POST_RestoreDBInstanceFromDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreDBInstanceFromDBSnapshotResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
        '485':
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '486':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '487':
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '491':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '492':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreDBInstanceFromDBSnapshotMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreDBInstanceFromDBSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=RestoreDBInstanceToPointInTime:
    get:
      x-aws-operation-name: RestoreDBInstanceToPointInTime
      operationId: GET_RestoreDBInstanceToPointInTime
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreDBInstanceToPointInTimeResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '481':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '485':
          description: PointInTimeRestoreNotEnabledFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PointInTimeRestoreNotEnabledFault'
        '486':
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '487':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '488':
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
        '489':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '490':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '491':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
      parameters:
        - name: SourceDBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: TargetDBInstanceIdentifier
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: RestoreTime
          in: query
          required: false
          description: ''
          schema:
            type: string
            format: date-time
        - name: UseLatestRestorableTime
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: AvailabilityZone
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBSubnetGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: MultiAZ
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: PubliclyAccessible
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: ''
          schema:
            type: boolean
        - name: LicenseModel
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: DBName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Engine
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Iops
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: OptionGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: Tag
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreDBInstanceToPointInTime
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RestoreDBInstanceToPointInTime
      operationId: POST_RestoreDBInstanceToPointInTime
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreDBInstanceToPointInTimeResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '481':
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '485':
          description: PointInTimeRestoreNotEnabledFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PointInTimeRestoreNotEnabledFault'
        '486':
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '487':
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '488':
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
        '489':
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '490':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '491':
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreDBInstanceToPointInTimeMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreDBInstanceToPointInTime
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
  /#Action=RevokeDBSecurityGroupIngress:
    get:
      x-aws-operation-name: RevokeDBSecurityGroupIngress
      operationId: GET_RevokeDBSecurityGroupIngress
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '482':
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
      parameters:
        - name: DBSecurityGroupName
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: CIDRIP
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: EC2SecurityGroupName
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: EC2SecurityGroupId
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: EC2SecurityGroupOwnerId
          in: query
          required: false
          description: ''
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeDBSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RevokeDBSecurityGroupIngress
      operationId: POST_RevokeDBSecurityGroupIngress
      description: ''
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '482':
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RevokeDBSecurityGroupIngressMessage'
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeDBSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2013-09-09'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddSourceIdentifierToSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    SubscriptionNotFoundFault: {}
    SourceNotFoundFault: {}
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/String'
        Value:
          $ref: '#/components/schemas/String'
    DBInstanceNotFoundFault: {}
    DBSnapshotNotFoundFault: {}
    AuthorizeDBSecurityGroupIngressResult:
      type: object
      properties:
        DBSecurityGroup:
          $ref: '#/components/schemas/DBSecurityGroup'
    DBSecurityGroupNotFoundFault: {}
    InvalidDBSecurityGroupStateFault: {}
    AuthorizationAlreadyExistsFault: {}
    AuthorizationQuotaExceededFault: {}
    CopyDBSnapshotResult:
      type: object
      properties:
        DBSnapshot:
          $ref: '#/components/schemas/DBSnapshot'
    DBSnapshotAlreadyExistsFault: {}
    InvalidDBSnapshotStateFault: {}
    SnapshotQuotaExceededFault: {}
    CreateDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    String:
      type: string
    DBInstanceAlreadyExistsFault: {}
    InsufficientDBInstanceCapacityFault: {}
    DBParameterGroupNotFoundFault: {}
    InstanceQuotaExceededFault: {}
    StorageQuotaExceededFault: {}
    DBSubnetGroupNotFoundFault: {}
    DBSubnetGroupDoesNotCoverEnoughAZs: {}
    InvalidSubnet: {}
    InvalidVPCNetworkStateFault: {}
    ProvisionedIopsNotAvailableInAZFault: {}
    OptionGroupNotFoundFault: {}
    CreateDBInstanceReadReplicaResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    InvalidDBInstanceStateFault: {}
    DBSubnetGroupNotAllowedFault: {}
    InvalidDBSubnetGroupFault: {}
    CreateDBParameterGroupResult:
      type: object
      properties:
        DBParameterGroup:
          $ref: '#/components/schemas/DBParameterGroup'
    DBParameterGroupQuotaExceededFault: {}
    DBParameterGroupAlreadyExistsFault: {}
    CreateDBSecurityGroupResult:
      type: object
      properties:
        DBSecurityGroup:
          $ref: '#/components/schemas/DBSecurityGroup'
    DBSecurityGroupAlreadyExistsFault: {}
    DBSecurityGroupQuotaExceededFault: {}
    DBSecurityGroupNotSupportedFault: {}
    CreateDBSnapshotResult:
      type: object
      properties:
        DBSnapshot:
          $ref: '#/components/schemas/DBSnapshot'
    CreateDBSubnetGroupResult:
      type: object
      properties:
        DBSubnetGroup:
          $ref: '#/components/schemas/DBSubnetGroup'
    DBSubnetGroupAlreadyExistsFault: {}
    DBSubnetGroupQuotaExceededFault: {}
    DBSubnetQuotaExceededFault: {}
    CreateEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    EventSubscriptionQuotaExceededFault: {}
    SubscriptionAlreadyExistFault: {}
    SNSInvalidTopicFault: {}
    SNSNoAuthorizationFault: {}
    SNSTopicArnNotFoundFault: {}
    SubscriptionCategoryNotFoundFault: {}
    CreateOptionGroupResult:
      type: object
      properties:
        OptionGroup:
          $ref: '#/components/schemas/OptionGroup'
    OptionGroupAlreadyExistsFault: {}
    OptionGroupQuotaExceededFault: {}
    DeleteDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    InvalidDBParameterGroupStateFault: {}
    DeleteDBSnapshotResult:
      type: object
      properties:
        DBSnapshot:
          $ref: '#/components/schemas/DBSnapshot'
    InvalidDBSubnetGroupStateFault: {}
    InvalidDBSubnetStateFault: {}
    DeleteEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    InvalidEventSubscriptionStateFault: {}
    InvalidOptionGroupStateFault: {}
    DBEngineVersionMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBEngineVersions:
          $ref: '#/components/schemas/DBEngineVersionList'
    Filter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: '#/components/schemas/String'
        Values:
          $ref: '#/components/schemas/FilterValueList'
    DBInstanceMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBInstances:
          $ref: '#/components/schemas/DBInstanceList'
    DescribeDBLogFilesResponse:
      type: object
      properties:
        DescribeDBLogFiles:
          $ref: '#/components/schemas/DescribeDBLogFilesList'
        Marker:
          $ref: '#/components/schemas/String'
    DBParameterGroupsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBParameterGroups:
          $ref: '#/components/schemas/DBParameterGroupList'
    DBParameterGroupDetails:
      type: object
      properties:
        Parameters:
          $ref: '#/components/schemas/ParametersList'
        Marker:
          $ref: '#/components/schemas/String'
    DBSecurityGroupMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBSecurityGroups:
          $ref: '#/components/schemas/DBSecurityGroups'
    DBSnapshotMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBSnapshots:
          $ref: '#/components/schemas/DBSnapshotList'
    DBSubnetGroupMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBSubnetGroups:
          $ref: '#/components/schemas/DBSubnetGroups'
    DescribeEngineDefaultParametersResult:
      type: object
      properties:
        EngineDefaults:
          $ref: '#/components/schemas/EngineDefaults'
    EventCategoriesMessage:
      type: object
      properties:
        EventCategoriesMapList:
          $ref: '#/components/schemas/EventCategoriesMapList'
    EventSubscriptionsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        EventSubscriptionsList:
          $ref: '#/components/schemas/EventSubscriptionsList'
    EventsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        Events:
          $ref: '#/components/schemas/EventList'
    OptionGroupOptionsMessage:
      type: object
      properties:
        OptionGroupOptions:
          $ref: '#/components/schemas/OptionGroupOptionsList'
        Marker:
          $ref: '#/components/schemas/String'
    OptionGroups:
      type: object
      properties:
        OptionGroupsList:
          $ref: '#/components/schemas/OptionGroupsList'
        Marker:
          $ref: '#/components/schemas/String'
    OrderableDBInstanceOptionsMessage:
      type: object
      properties:
        OrderableDBInstanceOptions:
          $ref: '#/components/schemas/OrderableDBInstanceOptionsList'
        Marker:
          $ref: '#/components/schemas/String'
    ReservedDBInstanceMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        ReservedDBInstances:
          $ref: '#/components/schemas/ReservedDBInstanceList'
    ReservedDBInstanceNotFoundFault: {}
    ReservedDBInstancesOfferingMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        ReservedDBInstancesOfferings:
          $ref: '#/components/schemas/ReservedDBInstancesOfferingList'
    ReservedDBInstancesOfferingNotFoundFault: {}
    DownloadDBLogFilePortionDetails:
      type: object
      properties:
        LogFileData:
          $ref: '#/components/schemas/String'
        Marker:
          $ref: '#/components/schemas/String'
        AdditionalDataPending:
          $ref: '#/components/schemas/Boolean'
    DBLogFileNotFoundFault: {}
    TagListMessage:
      type: object
      properties:
        TagList:
          $ref: '#/components/schemas/TagList'
    ModifyDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    DBUpgradeDependencyFailureFault: {}
    DBParameterGroupNameMessage:
      type: object
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
    Parameter:
      type: object
      properties:
        ParameterName:
          $ref: '#/components/schemas/String'
        ParameterValue:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        Source:
          $ref: '#/components/schemas/String'
        ApplyType:
          $ref: '#/components/schemas/String'
        DataType:
          $ref: '#/components/schemas/String'
        AllowedValues:
          $ref: '#/components/schemas/String'
        IsModifiable:
          $ref: '#/components/schemas/Boolean'
        MinimumEngineVersion:
          $ref: '#/components/schemas/String'
        ApplyMethod:
          $ref: '#/components/schemas/ApplyMethod'
    ModifyDBSubnetGroupResult:
      type: object
      properties:
        DBSubnetGroup:
          $ref: '#/components/schemas/DBSubnetGroup'
    SubnetAlreadyInUse: {}
    ModifyEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    ModifyOptionGroupResult:
      type: object
      properties:
        OptionGroup:
          $ref: '#/components/schemas/OptionGroup'
    OptionConfiguration:
      type: object
      required:
        - OptionName
      properties:
        OptionName:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        DBSecurityGroupMemberships:
          $ref: '#/components/schemas/DBSecurityGroupNameList'
        VpcSecurityGroupMemberships:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        OptionSettings:
          $ref: '#/components/schemas/OptionSettingsList'
    PromoteReadReplicaResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    PurchaseReservedDBInstancesOfferingResult:
      type: object
      properties:
        ReservedDBInstance:
          $ref: '#/components/schemas/ReservedDBInstance'
    ReservedDBInstanceAlreadyExistsFault: {}
    ReservedDBInstanceQuotaExceededFault: {}
    RebootDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    RemoveSourceIdentifierFromSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    RestoreDBInstanceFromDBSnapshotResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    InvalidRestoreFault: {}
    RestoreDBInstanceToPointInTimeResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    PointInTimeRestoreNotEnabledFault: {}
    RevokeDBSecurityGroupIngressResult:
      type: object
      properties:
        DBSecurityGroup:
          $ref: '#/components/schemas/DBSecurityGroup'
    AuthorizationNotFoundFault: {}
    AddSourceIdentifierToSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
        - SourceIdentifier
      title: AddSourceIdentifierToSubscriptionMessage
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        SourceIdentifier:
          $ref: '#/components/schemas/String'
    EventSubscription:
      type: object
      properties:
        CustomerAwsId:
          $ref: '#/components/schemas/String'
        CustSubscriptionId:
          $ref: '#/components/schemas/String'
        SnsTopicArn:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
        SubscriptionCreationTime:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/String'
        SourceIdsList:
          $ref: '#/components/schemas/SourceIdsList'
        EventCategoriesList:
          $ref: '#/components/schemas/EventCategoriesList'
        Enabled:
          $ref: '#/components/schemas/Boolean'
    TagList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Tag'
          - xml:
              name: Tag
    AddTagsToResourceMessage:
      type: object
      required:
        - ResourceName
        - Tags
      title: AddTagsToResourceMessage
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
    ApplyMethod:
      type: string
      enum:
        - immediate
        - pending-reboot
    AuthorizeDBSecurityGroupIngressMessage:
      type: object
      required:
        - DBSecurityGroupName
      title: AuthorizeDBSecurityGroupIngressMessage
      properties:
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
        CIDRIP:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupId:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
    DBSecurityGroup:
      type: object
      properties:
        OwnerId:
          $ref: '#/components/schemas/String'
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
        DBSecurityGroupDescription:
          $ref: '#/components/schemas/String'
        VpcId:
          $ref: '#/components/schemas/String'
        EC2SecurityGroups:
          $ref: '#/components/schemas/EC2SecurityGroupList'
        IPRanges:
          $ref: '#/components/schemas/IPRangeList'
    Boolean:
      type: boolean
    AvailabilityZone:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
        ProvisionedIopsCapable:
          $ref: '#/components/schemas/Boolean'
    AvailabilityZoneList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          - xml:
              name: AvailabilityZone
    BooleanOptional:
      type: boolean
    CharacterSet:
      type: object
      properties:
        CharacterSetName:
          $ref: '#/components/schemas/String'
        CharacterSetDescription:
          $ref: '#/components/schemas/String'
    CopyDBSnapshotMessage:
      type: object
      required:
        - SourceDBSnapshotIdentifier
        - TargetDBSnapshotIdentifier
      title: CopyDBSnapshotMessage
      properties:
        SourceDBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        TargetDBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
    DBSnapshot:
      type: object
      properties:
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotCreateTime:
          $ref: '#/components/schemas/TStamp'
        Engine:
          $ref: '#/components/schemas/String'
        AllocatedStorage:
          $ref: '#/components/schemas/Integer'
        Status:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/Integer'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        VpcId:
          $ref: '#/components/schemas/String'
        InstanceCreateTime:
          $ref: '#/components/schemas/TStamp'
        MasterUsername:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        LicenseModel:
          $ref: '#/components/schemas/String'
        SnapshotType:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        PercentProgress:
          $ref: '#/components/schemas/Integer'
        SourceRegion:
          $ref: '#/components/schemas/String'
    IntegerOptional:
      type: integer
    DBSecurityGroupNameList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: DBSecurityGroupName
    VpcSecurityGroupIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: VpcSecurityGroupId
    CreateDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
        - AllocatedStorage
        - DBInstanceClass
        - Engine
        - MasterUsername
        - MasterUserPassword
      title: CreateDBInstanceMessage
      properties:
        DBName:
          $ref: '#/components/schemas/String'
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        AllocatedStorage:
          $ref: '#/components/schemas/IntegerOptional'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Engine:
          $ref: '#/components/schemas/String'
        MasterUsername:
          $ref: '#/components/schemas/String'
        MasterUserPassword:
          $ref: '#/components/schemas/String'
        DBSecurityGroups:
          $ref: '#/components/schemas/DBSecurityGroupNameList'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        PreferredBackupWindow:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        EngineVersion:
          $ref: '#/components/schemas/String'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        LicenseModel:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        CharacterSetName:
          $ref: '#/components/schemas/String'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        Tags:
          $ref: '#/components/schemas/TagList'
    CreateDBInstanceReadReplicaMessage:
      type: object
      required:
        - DBInstanceIdentifier
        - SourceDBInstanceIdentifier
      title: CreateDBInstanceReadReplicaMessage
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        SourceDBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        Tags:
          $ref: '#/components/schemas/TagList'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
    DBInstance:
      type: object
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Engine:
          $ref: '#/components/schemas/String'
        DBInstanceStatus:
          $ref: '#/components/schemas/String'
        MasterUsername:
          $ref: '#/components/schemas/String'
        DBName:
          $ref: '#/components/schemas/String'
        Endpoint:
          $ref: '#/components/schemas/Endpoint'
        AllocatedStorage:
          $ref: '#/components/schemas/Integer'
        InstanceCreateTime:
          $ref: '#/components/schemas/TStamp'
        PreferredBackupWindow:
          $ref: '#/components/schemas/String'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/Integer'
        DBSecurityGroups:
          $ref: '#/components/schemas/DBSecurityGroupMembershipList'
        VpcSecurityGroups:
          $ref: '#/components/schemas/VpcSecurityGroupMembershipList'
        DBParameterGroups:
          $ref: '#/components/schemas/DBParameterGroupStatusList'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        DBSubnetGroup:
          $ref: '#/components/schemas/DBSubnetGroup'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        PendingModifiedValues:
          $ref: '#/components/schemas/PendingModifiedValues'
        LatestRestorableTime:
          $ref: '#/components/schemas/TStamp'
        MultiAZ:
          $ref: '#/components/schemas/Boolean'
        EngineVersion:
          $ref: '#/components/schemas/String'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/Boolean'
        ReadReplicaSourceDBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        ReadReplicaDBInstanceIdentifiers:
          $ref: '#/components/schemas/ReadReplicaDBInstanceIdentifierList'
        LicenseModel:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupMemberships:
          $ref: '#/components/schemas/OptionGroupMembershipList'
        CharacterSetName:
          $ref: '#/components/schemas/String'
        SecondaryAvailabilityZone:
          $ref: '#/components/schemas/String'
        PubliclyAccessible:
          $ref: '#/components/schemas/Boolean'
        StatusInfos:
          $ref: '#/components/schemas/DBInstanceStatusInfoList'
    CreateDBParameterGroupMessage:
      type: object
      required:
        - DBParameterGroupName
        - DBParameterGroupFamily
        - Description
      title: CreateDBParameterGroupMessage
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
    DBParameterGroup:
      type: object
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
    CreateDBSecurityGroupMessage:
      type: object
      required:
        - DBSecurityGroupName
        - DBSecurityGroupDescription
      title: CreateDBSecurityGroupMessage
      properties:
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
        DBSecurityGroupDescription:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
    CreateDBSnapshotMessage:
      type: object
      required:
        - DBSnapshotIdentifier
        - DBInstanceIdentifier
      title: CreateDBSnapshotMessage
      properties:
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
    SubnetIdentifierList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: SubnetIdentifier
    CreateDBSubnetGroupMessage:
      type: object
      required:
        - DBSubnetGroupName
        - DBSubnetGroupDescription
        - SubnetIds
      title: CreateDBSubnetGroupMessage
      properties:
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        DBSubnetGroupDescription:
          $ref: '#/components/schemas/String'
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdentifierList'
        Tags:
          $ref: '#/components/schemas/TagList'
    DBSubnetGroup:
      type: object
      properties:
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        DBSubnetGroupDescription:
          $ref: '#/components/schemas/String'
        VpcId:
          $ref: '#/components/schemas/String'
        SubnetGroupStatus:
          $ref: '#/components/schemas/String'
        Subnets:
          $ref: '#/components/schemas/SubnetList'
    EventCategoriesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: EventCategory
    SourceIdsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: SourceId
    CreateEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
        - SnsTopicArn
      title: CreateEventSubscriptionMessage
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        SnsTopicArn:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/String'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
        SourceIds:
          $ref: '#/components/schemas/SourceIdsList'
        Enabled:
          $ref: '#/components/schemas/BooleanOptional'
        Tags:
          $ref: '#/components/schemas/TagList'
    CreateOptionGroupMessage:
      type: object
      required:
        - OptionGroupName
        - EngineName
        - MajorEngineVersion
        - OptionGroupDescription
      title: CreateOptionGroupMessage
      properties:
        OptionGroupName:
          $ref: '#/components/schemas/String'
        EngineName:
          $ref: '#/components/schemas/String'
        MajorEngineVersion:
          $ref: '#/components/schemas/String'
        OptionGroupDescription:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
    OptionGroup:
      type: object
      properties:
        OptionGroupName:
          $ref: '#/components/schemas/String'
        OptionGroupDescription:
          $ref: '#/components/schemas/String'
        EngineName:
          $ref: '#/components/schemas/String'
        MajorEngineVersion:
          $ref: '#/components/schemas/String'
        Options:
          $ref: '#/components/schemas/OptionsList'
        AllowsVpcAndNonVpcInstanceMemberships:
          $ref: '#/components/schemas/Boolean'
        VpcId:
          $ref: '#/components/schemas/String'
    SupportedCharacterSetsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CharacterSet'
          - xml:
              name: CharacterSet
    DBEngineVersion:
      type: object
      properties:
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        DBEngineDescription:
          $ref: '#/components/schemas/String'
        DBEngineVersionDescription:
          $ref: '#/components/schemas/String'
        DefaultCharacterSet:
          $ref: '#/components/schemas/CharacterSet'
        SupportedCharacterSets:
          $ref: '#/components/schemas/SupportedCharacterSetsList'
    DBEngineVersionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DBEngineVersion'
          - xml:
              name: DBEngineVersion
    Endpoint:
      type: object
      properties:
        Address:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/Integer'
    Integer:
      type: integer
    TStamp:
      type: string
      format: date-time
    DBSecurityGroupMembershipList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DBSecurityGroupMembership'
          - xml:
              name: DBSecurityGroup
    VpcSecurityGroupMembershipList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupMembership'
          - xml:
              name: VpcSecurityGroupMembership
    DBParameterGroupStatusList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DBParameterGroupStatus'
          - xml:
              name: DBParameterGroup
    PendingModifiedValues:
      type: object
      properties:
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        AllocatedStorage:
          $ref: '#/components/schemas/IntegerOptional'
        MasterUserPassword:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        EngineVersion:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
    ReadReplicaDBInstanceIdentifierList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: ReadReplicaDBInstanceIdentifier
    OptionGroupMembershipList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OptionGroupMembership'
          - xml:
              name: OptionGroupMembership
    DBInstanceStatusInfoList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DBInstanceStatusInfo'
          - xml:
              name: DBInstanceStatusInfo
    DBInstanceList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DBInstance'
          - xml:
              name: DBInstance
    DBInstanceStatusInfo:
      type: object
      properties:
        StatusType:
          $ref: '#/components/schemas/String'
        Normal:
          $ref: '#/components/schemas/Boolean'
        Status:
          $ref: '#/components/schemas/String'
        Message:
          $ref: '#/components/schemas/String'
    ParametersList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Parameter'
          - xml:
              name: Parameter
    DBParameterGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DBParameterGroup'
          - xml:
              name: DBParameterGroup
    DBParameterGroupStatus:
      type: object
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        ParameterApplyStatus:
          $ref: '#/components/schemas/String'
    EC2SecurityGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EC2SecurityGroup'
          - xml:
              name: EC2SecurityGroup
    IPRangeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IPRange'
          - xml:
              name: IPRange
    DBSecurityGroupMembership:
      type: object
      properties:
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
    DBSecurityGroups:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DBSecurityGroup'
          - xml:
              name: DBSecurityGroup
    DBSnapshotList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DBSnapshot'
          - xml:
              name: DBSnapshot
    SubnetList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Subnet'
          - xml:
              name: Subnet
    DBSubnetGroups:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DBSubnetGroup'
          - xml:
              name: DBSubnetGroup
    DeleteDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      title: DeleteDBInstanceMessage
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        SkipFinalSnapshot:
          $ref: '#/components/schemas/Boolean'
        FinalDBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
    DeleteDBParameterGroupMessage:
      type: object
      required:
        - DBParameterGroupName
      title: DeleteDBParameterGroupMessage
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
    DeleteDBSecurityGroupMessage:
      type: object
      required:
        - DBSecurityGroupName
      title: DeleteDBSecurityGroupMessage
      properties:
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
    DeleteDBSnapshotMessage:
      type: object
      required:
        - DBSnapshotIdentifier
      title: DeleteDBSnapshotMessage
      properties:
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
    DeleteDBSubnetGroupMessage:
      type: object
      required:
        - DBSubnetGroupName
      title: DeleteDBSubnetGroupMessage
      properties:
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
    DeleteEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
      title: DeleteEventSubscriptionMessage
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
    DeleteOptionGroupMessage:
      type: object
      required:
        - OptionGroupName
      title: DeleteOptionGroupMessage
      properties:
        OptionGroupName:
          $ref: '#/components/schemas/String'
    FilterList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Filter'
          - xml:
              name: Filter
    DescribeDBEngineVersionsMessage:
      type: object
      title: DescribeDBEngineVersionsMessage
      properties:
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        DefaultOnly:
          $ref: '#/components/schemas/Boolean'
        ListSupportedCharacterSets:
          $ref: '#/components/schemas/BooleanOptional'
    DescribeDBInstancesMessage:
      type: object
      title: DescribeDBInstancesMessage
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    Long:
      type: integer
    DescribeDBLogFilesDetails:
      type: object
      properties:
        LogFileName:
          $ref: '#/components/schemas/String'
        LastWritten:
          $ref: '#/components/schemas/Long'
        Size:
          $ref: '#/components/schemas/Long'
    DescribeDBLogFilesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DescribeDBLogFilesDetails'
          - xml:
              name: DescribeDBLogFilesDetails
    DescribeDBLogFilesMessage:
      type: object
      required:
        - DBInstanceIdentifier
      title: DescribeDBLogFilesMessage
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        FilenameContains:
          $ref: '#/components/schemas/String'
        FileLastWritten:
          $ref: '#/components/schemas/Long'
        FileSize:
          $ref: '#/components/schemas/Long'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    DescribeDBParameterGroupsMessage:
      type: object
      title: DescribeDBParameterGroupsMessage
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    DescribeDBParametersMessage:
      type: object
      required:
        - DBParameterGroupName
      title: DescribeDBParametersMessage
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        Source:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    DescribeDBSecurityGroupsMessage:
      type: object
      title: DescribeDBSecurityGroupsMessage
      properties:
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    DescribeDBSnapshotsMessage:
      type: object
      title: DescribeDBSnapshotsMessage
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotType:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    DescribeDBSubnetGroupsMessage:
      type: object
      title: DescribeDBSubnetGroupsMessage
      properties:
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    DescribeEngineDefaultParametersMessage:
      type: object
      required:
        - DBParameterGroupFamily
      title: DescribeEngineDefaultParametersMessage
      properties:
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    EngineDefaults:
      type: object
      properties:
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Marker:
          $ref: '#/components/schemas/String'
        Parameters:
          $ref: '#/components/schemas/ParametersList'
    DescribeEventCategoriesMessage:
      type: object
      title: DescribeEventCategoriesMessage
      properties:
        SourceType:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
    DescribeEventSubscriptionsMessage:
      type: object
      title: DescribeEventSubscriptionsMessage
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    SourceType:
      type: string
      enum:
        - db-instance
        - db-parameter-group
        - db-security-group
        - db-snapshot
    DescribeEventsMessage:
      type: object
      title: DescribeEventsMessage
      properties:
        SourceIdentifier:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/SourceType'
        StartTime:
          $ref: '#/components/schemas/TStamp'
        EndTime:
          $ref: '#/components/schemas/TStamp'
        Duration:
          $ref: '#/components/schemas/IntegerOptional'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    DescribeOptionGroupOptionsMessage:
      type: object
      required:
        - EngineName
      title: DescribeOptionGroupOptionsMessage
      properties:
        EngineName:
          $ref: '#/components/schemas/String'
        MajorEngineVersion:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    DescribeOptionGroupsMessage:
      type: object
      title: DescribeOptionGroupsMessage
      properties:
        OptionGroupName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        Marker:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        EngineName:
          $ref: '#/components/schemas/String'
        MajorEngineVersion:
          $ref: '#/components/schemas/String'
    DescribeOrderableDBInstanceOptionsMessage:
      type: object
      required:
        - Engine
      title: DescribeOrderableDBInstanceOptionsMessage
      properties:
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        LicenseModel:
          $ref: '#/components/schemas/String'
        Vpc:
          $ref: '#/components/schemas/BooleanOptional'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    DescribeReservedDBInstancesMessage:
      type: object
      title: DescribeReservedDBInstancesMessage
      properties:
        ReservedDBInstanceId:
          $ref: '#/components/schemas/String'
        ReservedDBInstancesOfferingId:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Duration:
          $ref: '#/components/schemas/String'
        ProductDescription:
          $ref: '#/components/schemas/String'
        OfferingType:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    DescribeReservedDBInstancesOfferingsMessage:
      type: object
      title: DescribeReservedDBInstancesOfferingsMessage
      properties:
        ReservedDBInstancesOfferingId:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Duration:
          $ref: '#/components/schemas/String'
        ProductDescription:
          $ref: '#/components/schemas/String'
        OfferingType:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    Double:
      type: number
      format: double
    DownloadDBLogFilePortionMessage:
      type: object
      required:
        - DBInstanceIdentifier
        - LogFileName
      title: DownloadDBLogFilePortionMessage
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        LogFileName:
          $ref: '#/components/schemas/String'
        Marker:
          $ref: '#/components/schemas/String'
        NumberOfLines:
          $ref: '#/components/schemas/Integer'
    EC2SecurityGroup:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupId:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
    Event:
      type: object
      properties:
        SourceIdentifier:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/SourceType'
        Message:
          $ref: '#/components/schemas/String'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
        Date:
          $ref: '#/components/schemas/TStamp'
    EventCategoriesMap:
      type: object
      properties:
        SourceType:
          $ref: '#/components/schemas/String'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
    EventCategoriesMapList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EventCategoriesMap'
          - xml:
              name: EventCategoriesMap
    EventList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Event'
          - xml:
              name: Event
    EventSubscriptionsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EventSubscription'
          - xml:
              name: EventSubscription
    FilterValueList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: Value
    IPRange:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
        CIDRIP:
          $ref: '#/components/schemas/String'
    KeyList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ListTagsForResourceMessage:
      type: object
      required:
        - ResourceName
      title: ListTagsForResourceMessage
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
    ModifyDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      title: ModifyDBInstanceMessage
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        AllocatedStorage:
          $ref: '#/components/schemas/IntegerOptional'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        DBSecurityGroups:
          $ref: '#/components/schemas/DBSecurityGroupNameList'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
        MasterUserPassword:
          $ref: '#/components/schemas/String'
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        PreferredBackupWindow:
          $ref: '#/components/schemas/String'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        EngineVersion:
          $ref: '#/components/schemas/String'
        AllowMajorVersionUpgrade:
          $ref: '#/components/schemas/Boolean'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        NewDBInstanceIdentifier:
          $ref: '#/components/schemas/String'
    ModifyDBParameterGroupMessage:
      type: object
      required:
        - DBParameterGroupName
        - Parameters
      title: ModifyDBParameterGroupMessage
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        Parameters:
          $ref: '#/components/schemas/ParametersList'
    ModifyDBSubnetGroupMessage:
      type: object
      required:
        - DBSubnetGroupName
        - SubnetIds
      title: ModifyDBSubnetGroupMessage
      properties:
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        DBSubnetGroupDescription:
          $ref: '#/components/schemas/String'
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdentifierList'
    ModifyEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
      title: ModifyEventSubscriptionMessage
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        SnsTopicArn:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/String'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
        Enabled:
          $ref: '#/components/schemas/BooleanOptional'
    OptionConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OptionConfiguration'
          - xml:
              name: OptionConfiguration
    OptionNamesList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ModifyOptionGroupMessage:
      type: object
      required:
        - OptionGroupName
      title: ModifyOptionGroupMessage
      properties:
        OptionGroupName:
          $ref: '#/components/schemas/String'
        OptionsToInclude:
          $ref: '#/components/schemas/OptionConfigurationList'
        OptionsToRemove:
          $ref: '#/components/schemas/OptionNamesList'
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
    OptionSettingConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OptionSetting'
          - xml:
              name: OptionSetting
    Option:
      type: object
      properties:
        OptionName:
          $ref: '#/components/schemas/String'
        OptionDescription:
          $ref: '#/components/schemas/String'
        Persistent:
          $ref: '#/components/schemas/Boolean'
        Permanent:
          $ref: '#/components/schemas/Boolean'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        OptionSettings:
          $ref: '#/components/schemas/OptionSettingConfigurationList'
        DBSecurityGroupMemberships:
          $ref: '#/components/schemas/DBSecurityGroupMembershipList'
        VpcSecurityGroupMemberships:
          $ref: '#/components/schemas/VpcSecurityGroupMembershipList'
    OptionSettingsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OptionSetting'
          - xml:
              name: OptionSetting
    OptionsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Option'
          - xml:
              name: Option
    OptionGroupMembership:
      type: object
      properties:
        OptionGroupName:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
    OptionsDependedOn:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: OptionName
    OptionGroupOptionSettingsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OptionGroupOptionSetting'
          - xml:
              name: OptionGroupOptionSetting
    OptionGroupOption:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        EngineName:
          $ref: '#/components/schemas/String'
        MajorEngineVersion:
          $ref: '#/components/schemas/String'
        MinimumRequiredMinorEngineVersion:
          $ref: '#/components/schemas/String'
        PortRequired:
          $ref: '#/components/schemas/Boolean'
        DefaultPort:
          $ref: '#/components/schemas/IntegerOptional'
        OptionsDependedOn:
          $ref: '#/components/schemas/OptionsDependedOn'
        Persistent:
          $ref: '#/components/schemas/Boolean'
        Permanent:
          $ref: '#/components/schemas/Boolean'
        OptionGroupOptionSettings:
          $ref: '#/components/schemas/OptionGroupOptionSettingsList'
    OptionGroupOptionSetting:
      type: object
      properties:
        SettingName:
          $ref: '#/components/schemas/String'
        SettingDescription:
          $ref: '#/components/schemas/String'
        DefaultValue:
          $ref: '#/components/schemas/String'
        ApplyType:
          $ref: '#/components/schemas/String'
        AllowedValues:
          $ref: '#/components/schemas/String'
        IsModifiable:
          $ref: '#/components/schemas/Boolean'
    OptionGroupOptionsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OptionGroupOption'
          - xml:
              name: OptionGroupOption
    OptionGroupsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OptionGroup'
          - xml:
              name: OptionGroup
    OptionSetting:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
        Value:
          $ref: '#/components/schemas/String'
        DefaultValue:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        ApplyType:
          $ref: '#/components/schemas/String'
        DataType:
          $ref: '#/components/schemas/String'
        AllowedValues:
          $ref: '#/components/schemas/String'
        IsModifiable:
          $ref: '#/components/schemas/Boolean'
        IsCollection:
          $ref: '#/components/schemas/Boolean'
    OrderableDBInstanceOption:
      type: object
      properties:
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        LicenseModel:
          $ref: '#/components/schemas/String'
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZoneList'
        MultiAZCapable:
          $ref: '#/components/schemas/Boolean'
        ReadReplicaCapable:
          $ref: '#/components/schemas/Boolean'
        Vpc:
          $ref: '#/components/schemas/Boolean'
    OrderableDBInstanceOptionsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OrderableDBInstanceOption'
          - xml:
              name: OrderableDBInstanceOption
    PromoteReadReplicaMessage:
      type: object
      required:
        - DBInstanceIdentifier
      title: PromoteReadReplicaMessage
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        PreferredBackupWindow:
          $ref: '#/components/schemas/String'
    PurchaseReservedDBInstancesOfferingMessage:
      type: object
      required:
        - ReservedDBInstancesOfferingId
      title: PurchaseReservedDBInstancesOfferingMessage
      properties:
        ReservedDBInstancesOfferingId:
          $ref: '#/components/schemas/String'
        ReservedDBInstanceId:
          $ref: '#/components/schemas/String'
        DBInstanceCount:
          $ref: '#/components/schemas/IntegerOptional'
        Tags:
          $ref: '#/components/schemas/TagList'
    ReservedDBInstance:
      type: object
      properties:
        ReservedDBInstanceId:
          $ref: '#/components/schemas/String'
        ReservedDBInstancesOfferingId:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        StartTime:
          $ref: '#/components/schemas/TStamp'
        Duration:
          $ref: '#/components/schemas/Integer'
        FixedPrice:
          $ref: '#/components/schemas/Double'
        UsagePrice:
          $ref: '#/components/schemas/Double'
        CurrencyCode:
          $ref: '#/components/schemas/String'
        DBInstanceCount:
          $ref: '#/components/schemas/Integer'
        ProductDescription:
          $ref: '#/components/schemas/String'
        OfferingType:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/Boolean'
        State:
          $ref: '#/components/schemas/String'
        RecurringCharges:
          $ref: '#/components/schemas/RecurringChargeList'
    RebootDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      title: RebootDBInstanceMessage
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        ForceFailover:
          $ref: '#/components/schemas/BooleanOptional'
    RecurringCharge:
      type: object
      properties:
        RecurringChargeAmount:
          $ref: '#/components/schemas/Double'
        RecurringChargeFrequency:
          $ref: '#/components/schemas/String'
    RecurringChargeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RecurringCharge'
          - xml:
              name: RecurringCharge
    RemoveSourceIdentifierFromSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
        - SourceIdentifier
      title: RemoveSourceIdentifierFromSubscriptionMessage
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        SourceIdentifier:
          $ref: '#/components/schemas/String'
    RemoveTagsFromResourceMessage:
      type: object
      required:
        - ResourceName
        - TagKeys
      title: RemoveTagsFromResourceMessage
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/KeyList'
    ReservedDBInstanceList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedDBInstance'
          - xml:
              name: ReservedDBInstance
    ReservedDBInstancesOffering:
      type: object
      properties:
        ReservedDBInstancesOfferingId:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Duration:
          $ref: '#/components/schemas/Integer'
        FixedPrice:
          $ref: '#/components/schemas/Double'
        UsagePrice:
          $ref: '#/components/schemas/Double'
        CurrencyCode:
          $ref: '#/components/schemas/String'
        ProductDescription:
          $ref: '#/components/schemas/String'
        OfferingType:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/Boolean'
        RecurringCharges:
          $ref: '#/components/schemas/RecurringChargeList'
    ReservedDBInstancesOfferingList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedDBInstancesOffering'
          - xml:
              name: ReservedDBInstancesOffering
    ResetDBParameterGroupMessage:
      type: object
      required:
        - DBParameterGroupName
      title: ResetDBParameterGroupMessage
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        ResetAllParameters:
          $ref: '#/components/schemas/Boolean'
        Parameters:
          $ref: '#/components/schemas/ParametersList'
    RestoreDBInstanceFromDBSnapshotMessage:
      type: object
      required:
        - DBInstanceIdentifier
        - DBSnapshotIdentifier
      title: RestoreDBInstanceFromDBSnapshotMessage
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        LicenseModel:
          $ref: '#/components/schemas/String'
        DBName:
          $ref: '#/components/schemas/String'
        Engine:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
    RestoreDBInstanceToPointInTimeMessage:
      type: object
      required:
        - SourceDBInstanceIdentifier
        - TargetDBInstanceIdentifier
      title: RestoreDBInstanceToPointInTimeMessage
      properties:
        SourceDBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        TargetDBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        RestoreTime:
          $ref: '#/components/schemas/TStamp'
        UseLatestRestorableTime:
          $ref: '#/components/schemas/Boolean'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        LicenseModel:
          $ref: '#/components/schemas/String'
        DBName:
          $ref: '#/components/schemas/String'
        Engine:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
    RevokeDBSecurityGroupIngressMessage:
      type: object
      required:
        - DBSecurityGroupName
      title: RevokeDBSecurityGroupIngressMessage
      properties:
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
        CIDRIP:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupId:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
    Subnet:
      type: object
      properties:
        SubnetIdentifier:
          $ref: '#/components/schemas/String'
        SubnetAvailabilityZone:
          $ref: '#/components/schemas/AvailabilityZone'
        SubnetStatus:
          $ref: '#/components/schemas/String'
    VpcSecurityGroupMembership:
      type: object
      properties:
        VpcSecurityGroupId:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
security:
  - hmac: []
