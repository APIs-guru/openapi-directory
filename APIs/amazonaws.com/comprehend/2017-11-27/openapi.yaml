openapi: 3.0.0
info:
  version: '2017-11-27'
  x-release: v4
  title: Amazon Comprehend
  description: 'Amazon Comprehend is an AWS service for gaining insight into the content of documents. Use these actions to determine the topics contained in your documents, the topics they discuss, the predominant sentiment expressed in them, the predominant language used, and more.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: comprehend
  x-aws-signingName: comprehend
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/comprehend-2017-11-27.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/comprehend/'
servers:
  - url: 'http://comprehend.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Comprehend multi-region endpoint
  - url: 'https://comprehend.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Comprehend multi-region endpoint
  - url: 'http://comprehend.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Comprehend endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://comprehend.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Comprehend endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=Comprehend_20171127.BatchDetectDominantLanguage:
    post:
      operationId: BatchDetectDominantLanguage
      description: 'Determines the dominant language of the input text for a batch of documents. For a list of languages that Amazon Comprehend can detect, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/how-languages.html">Amazon Comprehend Supported Languages</a>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDetectDominantLanguageResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '482':
          description: BatchSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSizeLimitExceededException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDetectDominantLanguageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.BatchDetectDominantLanguage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.BatchDetectEntities:
    post:
      operationId: BatchDetectEntities
      description: 'Inspects the text of a batch of documents for named entities and returns information about them. For more information about named entities, see <a>how-entities</a> '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDetectEntitiesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '482':
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguageException'
        '483':
          description: BatchSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSizeLimitExceededException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDetectEntitiesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.BatchDetectEntities
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.BatchDetectKeyPhrases:
    post:
      operationId: BatchDetectKeyPhrases
      description: Detects the key noun phrases found in a batch of documents.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDetectKeyPhrasesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '482':
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguageException'
        '483':
          description: BatchSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSizeLimitExceededException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDetectKeyPhrasesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.BatchDetectKeyPhrases
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.BatchDetectSentiment:
    post:
      operationId: BatchDetectSentiment
      description: 'Inspects a batch of documents and returns an inference of the prevailing sentiment, <code>POSITIVE</code>, <code>NEUTRAL</code>, <code>MIXED</code>, or <code>NEGATIVE</code>, in each one.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDetectSentimentResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '482':
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguageException'
        '483':
          description: BatchSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSizeLimitExceededException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDetectSentimentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.BatchDetectSentiment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.BatchDetectSyntax:
    post:
      operationId: BatchDetectSyntax
      description: 'Inspects the text of a batch of documents for the syntax and part of speech of the words in the document and returns information about them. For more information, see <a>how-syntax</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDetectSyntaxResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '482':
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguageException'
        '483':
          description: BatchSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSizeLimitExceededException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDetectSyntaxRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.BatchDetectSyntax
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ClassifyDocument:
    post:
      operationId: ClassifyDocument
      description: 'Creates a new document classification request to analyze a single document in real-time, using a previously created and trained custom model and an endpoint.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassifyDocumentResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '482':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassifyDocumentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ClassifyDocument
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ContainsPiiEntities:
    post:
      operationId: ContainsPiiEntities
      description: 'Analyzes input text for the presence of personally identifiable information (PII) and returns the labels of identified PII entity types such as name, address, bank account number, or phone number.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainsPiiEntitiesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '482':
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguageException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainsPiiEntitiesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ContainsPiiEntities
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.CreateDocumentClassifier:
    post:
      operationId: CreateDocumentClassifier
      description: 'Creates a new document classifier that you can use to categorize documents. To create a classifier, you provide a set of training documents that labeled with the categories that you want to use. After the classifier is trained you can use it to categorize a set of labeled documents into the categories. For more information, see <a>how-document-classification</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDocumentClassifierResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '485':
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguageException'
        '486':
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyValidationException'
        '487':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentClassifierRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.CreateDocumentClassifier
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.CreateEndpoint:
    post:
      operationId: CreateEndpoint
      description: 'Creates a model-specific endpoint for synchronous inference for a previously trained custom model '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEndpointResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '486':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '487':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndpointRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.CreateEndpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.CreateEntityRecognizer:
    post:
      operationId: CreateEntityRecognizer
      description: 'Creates an entity recognizer using submitted files. After your <code>CreateEntityRecognizer</code> request is submitted, you can check job status using the API. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEntityRecognizerResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '485':
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguageException'
        '486':
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyValidationException'
        '487':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEntityRecognizerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.CreateEntityRecognizer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DeleteDocumentClassifier:
    post:
      operationId: DeleteDocumentClassifier
      description: '<p>Deletes a previously created document classifier</p> <p>Only those classifiers that are in terminated states (IN_ERROR, TRAINED) will be deleted. If an active inference job is using the model, a <code>ResourceInUseException</code> will be returned.</p> <p>This is an asynchronous action that puts the classifier into a DELETING state, and it is then removed by a background job. Once removed, the classifier disappears from your account and is no longer available for use. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDocumentClassifierResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '484':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDocumentClassifierRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DeleteDocumentClassifier
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DeleteEndpoint:
    post:
      operationId: DeleteEndpoint
      description: Deletes a model-specific endpoint for a previously-trained custom model. All endpoints must be deleted in order for the model to be deleted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEndpointResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEndpointRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DeleteEndpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DeleteEntityRecognizer:
    post:
      operationId: DeleteEntityRecognizer
      description: '<p>Deletes an entity recognizer.</p> <p>Only those recognizers that are in terminated states (IN_ERROR, TRAINED) will be deleted. If an active inference job is using the model, a <code>ResourceInUseException</code> will be returned.</p> <p>This is an asynchronous action that puts the recognizer into a DELETING state, and it is then removed by a background job. Once removed, the recognizer disappears from your account and is no longer available for use. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEntityRecognizerResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '484':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEntityRecognizerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DeleteEntityRecognizer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DescribeDocumentClassificationJob:
    post:
      operationId: DescribeDocumentClassificationJob
      description: Gets the properties associated with a document classification job. Use this operation to get the status of a classification job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDocumentClassificationJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDocumentClassificationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeDocumentClassificationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DescribeDocumentClassifier:
    post:
      operationId: DescribeDocumentClassifier
      description: Gets the properties associated with a document classifier.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDocumentClassifierResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDocumentClassifierRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeDocumentClassifier
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DescribeDominantLanguageDetectionJob:
    post:
      operationId: DescribeDominantLanguageDetectionJob
      description: Gets the properties associated with a dominant language detection job. Use this operation to get the status of a detection job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDominantLanguageDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDominantLanguageDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeDominantLanguageDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DescribeEndpoint:
    post:
      operationId: DescribeEndpoint
      description: Gets the properties associated with a specific endpoint. Use this operation to get the status of an endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEndpointResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEndpointRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeEndpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DescribeEntitiesDetectionJob:
    post:
      operationId: DescribeEntitiesDetectionJob
      description: Gets the properties associated with an entities detection job. Use this operation to get the status of a detection job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEntitiesDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEntitiesDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeEntitiesDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DescribeEntityRecognizer:
    post:
      operationId: DescribeEntityRecognizer
      description: 'Provides details about an entity recognizer including status, S3 buckets containing training data, recognizer metadata, metrics, and so on.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEntityRecognizerResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEntityRecognizerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeEntityRecognizer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DescribeEventsDetectionJob:
    post:
      operationId: DescribeEventsDetectionJob
      description: Gets the status and details of an events detection job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventsDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventsDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeEventsDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DescribeKeyPhrasesDetectionJob:
    post:
      operationId: DescribeKeyPhrasesDetectionJob
      description: Gets the properties associated with a key phrases detection job. Use this operation to get the status of a detection job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeKeyPhrasesDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeKeyPhrasesDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeKeyPhrasesDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DescribePiiEntitiesDetectionJob:
    post:
      operationId: DescribePiiEntitiesDetectionJob
      description: 'Gets the properties associated with a PII entities detection job. For example, you can use this operation to get the job status.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePiiEntitiesDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePiiEntitiesDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribePiiEntitiesDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DescribeSentimentDetectionJob:
    post:
      operationId: DescribeSentimentDetectionJob
      description: Gets the properties associated with a sentiment detection job. Use this operation to get the status of a detection job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSentimentDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSentimentDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeSentimentDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DescribeTopicsDetectionJob:
    post:
      operationId: DescribeTopicsDetectionJob
      description: Gets the properties associated with a topic detection job. Use this operation to get the status of a detection job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTopicsDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTopicsDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeTopicsDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DetectDominantLanguage:
    post:
      operationId: DetectDominantLanguage
      description: 'Determines the dominant language of the input text. For a list of languages that Amazon Comprehend can detect, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/how-languages.html">Amazon Comprehend Supported Languages</a>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectDominantLanguageResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectDominantLanguageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DetectDominantLanguage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DetectEntities:
    post:
      operationId: DetectEntities
      description: 'Inspects text for named entities, and returns information about them. For more information, about named entities, see <a>how-entities</a>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectEntitiesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '482':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '483':
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguageException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectEntitiesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DetectEntities
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DetectKeyPhrases:
    post:
      operationId: DetectKeyPhrases
      description: 'Detects the key noun phrases found in the text. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectKeyPhrasesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '482':
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguageException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectKeyPhrasesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DetectKeyPhrases
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DetectPiiEntities:
    post:
      operationId: DetectPiiEntities
      description: Inspects the input text for entities that contain personally identifiable information (PII) and returns information about them.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectPiiEntitiesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '482':
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguageException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectPiiEntitiesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DetectPiiEntities
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DetectSentiment:
    post:
      operationId: DetectSentiment
      description: 'Inspects text and returns an inference of the prevailing sentiment (<code>POSITIVE</code>, <code>NEUTRAL</code>, <code>MIXED</code>, or <code>NEGATIVE</code>). '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectSentimentResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '482':
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguageException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectSentimentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DetectSentiment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.DetectSyntax:
    post:
      operationId: DetectSyntax
      description: 'Inspects text for syntax and the part of speech of words in the document. For more information, <a>how-syntax</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectSyntaxResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
        '482':
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguageException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectSyntaxRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DetectSyntax
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ListDocumentClassificationJobs:
    post:
      operationId: ListDocumentClassificationJobs
      description: Gets a list of the documentation classification jobs that you have submitted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocumentClassificationJobsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDocumentClassificationJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListDocumentClassificationJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ListDocumentClassifiers:
    post:
      operationId: ListDocumentClassifiers
      description: Gets a list of the document classifiers that you have created.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocumentClassifiersResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDocumentClassifiersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListDocumentClassifiers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ListDominantLanguageDetectionJobs:
    post:
      operationId: ListDominantLanguageDetectionJobs
      description: Gets a list of the dominant language detection jobs that you have submitted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDominantLanguageDetectionJobsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDominantLanguageDetectionJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListDominantLanguageDetectionJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ListEndpoints:
    post:
      operationId: ListEndpoints
      description: Gets a list of all existing endpoints that you've created.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEndpointsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListEndpoints
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ListEntitiesDetectionJobs:
    post:
      operationId: ListEntitiesDetectionJobs
      description: Gets a list of the entity detection jobs that you have submitted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntitiesDetectionJobsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEntitiesDetectionJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListEntitiesDetectionJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ListEntityRecognizers:
    post:
      operationId: ListEntityRecognizers
      description: '<p>Gets a list of the properties of all entity recognizers that you created, including recognizers currently in training. Allows you to filter the list of recognizers based on criteria such as status and submission time. This call returns up to 500 entity recognizers in the list, with a default number of 100 recognizers in the list.</p> <p>The results of this list are not in any particular order. Please get the list and sort locally if needed.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntityRecognizersResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEntityRecognizersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListEntityRecognizers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ListEventsDetectionJobs:
    post:
      operationId: ListEventsDetectionJobs
      description: Gets a list of the events detection jobs that you have submitted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventsDetectionJobsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEventsDetectionJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListEventsDetectionJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ListKeyPhrasesDetectionJobs:
    post:
      operationId: ListKeyPhrasesDetectionJobs
      description: Get a list of key phrase detection jobs that you have submitted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKeyPhrasesDetectionJobsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListKeyPhrasesDetectionJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListKeyPhrasesDetectionJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ListPiiEntitiesDetectionJobs:
    post:
      operationId: ListPiiEntitiesDetectionJobs
      description: Gets a list of the PII entity detection jobs that you have submitted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPiiEntitiesDetectionJobsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPiiEntitiesDetectionJobsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListPiiEntitiesDetectionJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ListSentimentDetectionJobs:
    post:
      operationId: ListSentimentDetectionJobs
      description: Gets a list of sentiment detection jobs that you have submitted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSentimentDetectionJobsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSentimentDetectionJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListSentimentDetectionJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: 'Lists all tags associated with a given Amazon Comprehend resource. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.ListTopicsDetectionJobs:
    post:
      operationId: ListTopicsDetectionJobs
      description: Gets a list of the topic detection jobs that you have submitted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicsDetectionJobsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTopicsDetectionJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListTopicsDetectionJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StartDocumentClassificationJob:
    post:
      operationId: StartDocumentClassificationJob
      description: Starts an asynchronous document classification job. Use the operation to track the progress of the job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDocumentClassificationJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '484':
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyValidationException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDocumentClassificationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartDocumentClassificationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StartDominantLanguageDetectionJob:
    post:
      operationId: StartDominantLanguageDetectionJob
      description: Starts an asynchronous dominant language detection job for a collection of documents. Use the operation to track the status of a job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDominantLanguageDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDominantLanguageDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartDominantLanguageDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StartEntitiesDetectionJob:
    post:
      operationId: StartEntitiesDetectionJob
      description: '<p>Starts an asynchronous entity detection job for a collection of documents. Use the operation to track the status of a job.</p> <p>This API can be used for either standard entity detection or custom entity recognition. In order to be used for custom entity recognition, the optional <code>EntityRecognizerArn</code> must be used in order to provide access to the recognizer being used to detect the custom entity.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartEntitiesDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '484':
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyValidationException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartEntitiesDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartEntitiesDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StartEventsDetectionJob:
    post:
      operationId: StartEventsDetectionJob
      description: Starts an asynchronous event detection job for a collection of documents.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartEventsDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartEventsDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartEventsDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StartKeyPhrasesDetectionJob:
    post:
      operationId: StartKeyPhrasesDetectionJob
      description: Starts an asynchronous key phrase detection job for a collection of documents. Use the operation to track the status of a job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartKeyPhrasesDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartKeyPhrasesDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartKeyPhrasesDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StartPiiEntitiesDetectionJob:
    post:
      operationId: StartPiiEntitiesDetectionJob
      description: Starts an asynchronous PII entity detection job for a collection of documents.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartPiiEntitiesDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartPiiEntitiesDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartPiiEntitiesDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StartSentimentDetectionJob:
    post:
      operationId: StartSentimentDetectionJob
      description: Starts an asynchronous sentiment detection job for a collection of documents. use the operation to track the status of a job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSentimentDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSentimentDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartSentimentDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StartTopicsDetectionJob:
    post:
      operationId: StartTopicsDetectionJob
      description: Starts an asynchronous topic detection job. Use the <code>DescribeTopicDetectionJob</code> operation to track the status of a job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTopicsDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTopicsDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartTopicsDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StopDominantLanguageDetectionJob:
    post:
      operationId: StopDominantLanguageDetectionJob
      description: '<p>Stops a dominant language detection job in progress.</p> <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is stopped and put into the <code>STOPPED</code> state.</p> <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception. </p> <p>When a job is stopped, any documents already processed are written to the output location.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopDominantLanguageDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopDominantLanguageDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopDominantLanguageDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StopEntitiesDetectionJob:
    post:
      operationId: StopEntitiesDetectionJob
      description: '<p>Stops an entities detection job in progress.</p> <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is stopped and put into the <code>STOPPED</code> state.</p> <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception. </p> <p>When a job is stopped, any documents already processed are written to the output location.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopEntitiesDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopEntitiesDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopEntitiesDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StopEventsDetectionJob:
    post:
      operationId: StopEventsDetectionJob
      description: Stops an events detection job in progress.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopEventsDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopEventsDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopEventsDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StopKeyPhrasesDetectionJob:
    post:
      operationId: StopKeyPhrasesDetectionJob
      description: '<p>Stops a key phrases detection job in progress.</p> <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is stopped and put into the <code>STOPPED</code> state.</p> <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception. </p> <p>When a job is stopped, any documents already processed are written to the output location.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopKeyPhrasesDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopKeyPhrasesDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopKeyPhrasesDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StopPiiEntitiesDetectionJob:
    post:
      operationId: StopPiiEntitiesDetectionJob
      description: Stops a PII entities detection job in progress.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPiiEntitiesDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopPiiEntitiesDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopPiiEntitiesDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StopSentimentDetectionJob:
    post:
      operationId: StopSentimentDetectionJob
      description: '<p>Stops a sentiment detection job in progress.</p> <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is be stopped and put into the <code>STOPPED</code> state.</p> <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception. </p> <p>When a job is stopped, any documents already processed are written to the output location.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopSentimentDetectionJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopSentimentDetectionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopSentimentDetectionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StopTrainingDocumentClassifier:
    post:
      operationId: StopTrainingDocumentClassifier
      description: '<p>Stops a document classifier training job while in progress.</p> <p>If the training job state is <code>TRAINING</code>, the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the training job completes before it can be stopped, it is put into the <code>TRAINED</code>; otherwise the training job is stopped and put into the <code>STOPPED</code> state and the service sends back an HTTP 200 response with an empty HTTP body. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopTrainingDocumentClassifierResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopTrainingDocumentClassifierRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopTrainingDocumentClassifier
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.StopTrainingEntityRecognizer:
    post:
      operationId: StopTrainingEntityRecognizer
      description: '<p>Stops an entity recognizer training job while in progress.</p> <p>If the training job state is <code>TRAINING</code>, the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the training job completes before it can be stopped, it is put into the <code>TRAINED</code>; otherwise the training job is stopped and putted into the <code>STOPPED</code> state and the service sends back an HTTP 200 response with an empty HTTP body.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopTrainingEntityRecognizerResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopTrainingEntityRecognizerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopTrainingEntityRecognizer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.TagResource:
    post:
      operationId: TagResource
      description: 'Associates a specific tag with an Amazon Comprehend resource. A tag is a key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with "Sales" as the key might be added to a resource to indicate its use by the sales department. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.UntagResource:
    post:
      operationId: UntagResource
      description: 'Removes a specific tag associated with an Amazon Comprehend resource. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: TooManyTagKeysException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagKeysException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=Comprehend_20171127.UpdateEndpoint:
    post:
      operationId: UpdateEndpoint
      description: Updates information about the specified endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEndpointResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '483':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpointRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.UpdateEndpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchDetectDominantLanguageResponse:
      type: object
      required:
        - ResultList
        - ErrorList
      properties:
        ResultList:
          $ref: '#/components/schemas/ListOfDetectDominantLanguageResult'
          description: 'A list of objects containing the results of the operation. The results are sorted in ascending order by the <code>Index</code> field and match the order of the documents in the input list. If all of the documents contain an error, the <code>ResultList</code> is empty.'
        ErrorList:
          $ref: '#/components/schemas/BatchItemErrorList'
          description: 'A list containing one object for each document that contained an error. The results are sorted in ascending order by the <code>Index</code> field and match the order of the documents in the input list. If there are no errors in the batch, the <code>ErrorList</code> is empty.'
    BatchDetectDominantLanguageRequest:
      type: object
      required:
        - TextList
      title: BatchDetectDominantLanguageRequest
      properties:
        TextList:
          $ref: '#/components/schemas/CustomerInputStringList'
          description: 'A list containing the text of the input documents. The list can contain a maximum of 25 documents. Each document should contain at least 20 characters and must contain fewer than 5,000 bytes of UTF-8 encoded characters.'
    InvalidRequestException: {}
    TextSizeLimitExceededException: {}
    BatchSizeLimitExceededException: {}
    InternalServerException: {}
    BatchDetectEntitiesResponse:
      type: object
      required:
        - ResultList
        - ErrorList
      properties:
        ResultList:
          $ref: '#/components/schemas/ListOfDetectEntitiesResult'
          description: 'A list of objects containing the results of the operation. The results are sorted in ascending order by the <code>Index</code> field and match the order of the documents in the input list. If all of the documents contain an error, the <code>ResultList</code> is empty.'
        ErrorList:
          $ref: '#/components/schemas/BatchItemErrorList'
          description: 'A list containing one object for each document that contained an error. The results are sorted in ascending order by the <code>Index</code> field and match the order of the documents in the input list. If there are no errors in the batch, the <code>ErrorList</code> is empty.'
    BatchDetectEntitiesRequest:
      type: object
      required:
        - TextList
        - LanguageCode
      title: BatchDetectEntitiesRequest
      properties:
        TextList:
          $ref: '#/components/schemas/CustomerInputStringList'
          description: 'A list containing the text of the input documents. The list can contain a maximum of 25 documents. Each document must contain fewer than 5,000 bytes of UTF-8 encoded characters.'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.
    UnsupportedLanguageException: {}
    BatchDetectKeyPhrasesResponse:
      type: object
      required:
        - ResultList
        - ErrorList
      properties:
        ResultList:
          $ref: '#/components/schemas/ListOfDetectKeyPhrasesResult'
          description: 'A list of objects containing the results of the operation. The results are sorted in ascending order by the <code>Index</code> field and match the order of the documents in the input list. If all of the documents contain an error, the <code>ResultList</code> is empty.'
        ErrorList:
          $ref: '#/components/schemas/BatchItemErrorList'
          description: 'A list containing one object for each document that contained an error. The results are sorted in ascending order by the <code>Index</code> field and match the order of the documents in the input list. If there are no errors in the batch, the <code>ErrorList</code> is empty.'
    BatchDetectKeyPhrasesRequest:
      type: object
      required:
        - TextList
        - LanguageCode
      title: BatchDetectKeyPhrasesRequest
      properties:
        TextList:
          $ref: '#/components/schemas/CustomerInputStringList'
          description: 'A list containing the text of the input documents. The list can contain a maximum of 25 documents. Each document must contain fewer that 5,000 bytes of UTF-8 encoded characters.'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.
    BatchDetectSentimentResponse:
      type: object
      required:
        - ResultList
        - ErrorList
      properties:
        ResultList:
          $ref: '#/components/schemas/ListOfDetectSentimentResult'
          description: 'A list of objects containing the results of the operation. The results are sorted in ascending order by the <code>Index</code> field and match the order of the documents in the input list. If all of the documents contain an error, the <code>ResultList</code> is empty.'
        ErrorList:
          $ref: '#/components/schemas/BatchItemErrorList'
          description: 'A list containing one object for each document that contained an error. The results are sorted in ascending order by the <code>Index</code> field and match the order of the documents in the input list. If there are no errors in the batch, the <code>ErrorList</code> is empty.'
    BatchDetectSentimentRequest:
      type: object
      required:
        - TextList
        - LanguageCode
      title: BatchDetectSentimentRequest
      properties:
        TextList:
          $ref: '#/components/schemas/CustomerInputStringList'
          description: 'A list containing the text of the input documents. The list can contain a maximum of 25 documents. Each document must contain fewer that 5,000 bytes of UTF-8 encoded characters.'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.
    BatchDetectSyntaxResponse:
      type: object
      required:
        - ResultList
        - ErrorList
      properties:
        ResultList:
          $ref: '#/components/schemas/ListOfDetectSyntaxResult'
          description: 'A list of objects containing the results of the operation. The results are sorted in ascending order by the <code>Index</code> field and match the order of the documents in the input list. If all of the documents contain an error, the <code>ResultList</code> is empty.'
        ErrorList:
          $ref: '#/components/schemas/BatchItemErrorList'
          description: 'A list containing one object for each document that contained an error. The results are sorted in ascending order by the <code>Index</code> field and match the order of the documents in the input list. If there are no errors in the batch, the <code>ErrorList</code> is empty.'
    BatchDetectSyntaxRequest:
      type: object
      required:
        - TextList
        - LanguageCode
      title: BatchDetectSyntaxRequest
      properties:
        TextList:
          $ref: '#/components/schemas/CustomerInputStringList'
          description: 'A list containing the text of the input documents. The list can contain a maximum of 25 documents. Each document must contain fewer that 5,000 bytes of UTF-8 encoded characters.'
        LanguageCode:
          $ref: '#/components/schemas/SyntaxLanguageCode'
          description: 'The language of the input documents. You can specify any of the following languages supported by Amazon Comprehend: German ("de"), English ("en"), Spanish ("es"), French ("fr"), Italian ("it"), or Portuguese ("pt"). All documents must be in the same language.'
    ClassifyDocumentResponse:
      type: object
      properties:
        Classes:
          $ref: '#/components/schemas/ListOfClasses'
          description: 'The classes used by the document being analyzed. These are used for multi-class trained models. Individual classes are mutually exclusive and each document is expected to have only a single class assigned to it. For example, an animal can be a dog or a cat, but not both at the same time. '
        Labels:
          $ref: '#/components/schemas/ListOfLabels'
          description: 'The labels used the document being analyzed. These are used for multi-label trained models. Individual labels represent different categories that are related in some manner and are not mutually exclusive. For example, a movie can be just an action movie, or it can be an action movie, a science fiction movie, and a comedy, all at the same time. '
    ClassifyDocumentRequest:
      type: object
      required:
        - Text
        - EndpointArn
      title: ClassifyDocumentRequest
      properties:
        Text:
          $ref: '#/components/schemas/CustomerInputString'
          description: The document text to be analyzed.
        EndpointArn:
          $ref: '#/components/schemas/DocumentClassifierEndpointArn'
          description: The Amazon Resource Number (ARN) of the endpoint.
    ResourceUnavailableException: {}
    ContainsPiiEntitiesResponse:
      type: object
      properties:
        Labels:
          $ref: '#/components/schemas/ListOfEntityLabels'
          description: The labels used in the document being analyzed. Individual labels represent personally identifiable information (PII) entity types.
    ContainsPiiEntitiesRequest:
      type: object
      required:
        - Text
        - LanguageCode
      title: ContainsPiiEntitiesRequest
      properties:
        Text:
          $ref: '#/components/schemas/String'
          description: 'Creates a new document classification request to analyze a single document in real-time, returning personally identifiable information (PII) entity labels.'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language of the input documents.
    CreateDocumentClassifierResponse:
      type: object
      properties:
        DocumentClassifierArn:
          $ref: '#/components/schemas/DocumentClassifierArn'
          description: The Amazon Resource Name (ARN) that identifies the document classifier.
    CreateDocumentClassifierRequest:
      type: object
      required:
        - DocumentClassifierName
        - DataAccessRoleArn
        - InputDataConfig
        - LanguageCode
      title: CreateDocumentClassifierRequest
      properties:
        DocumentClassifierName:
          $ref: '#/components/schemas/ComprehendArnName'
          description: The name of the document classifier.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your input data.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'Tags to be associated with the document classifier being created. A tag is a key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with "Sales" as the key might be added to a resource to indicate its use by the sales department. '
        InputDataConfig:
          $ref: '#/components/schemas/DocumentClassifierInputDataConfig'
          description: Specifies the format and location of the input data for the job.
        OutputDataConfig:
          $ref: '#/components/schemas/DocumentClassifierOutputDataConfig'
          description: Enables the addition of output results configuration parameters for custom classifier jobs.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestTokenString'
          description: 'A unique identifier for the request. If you don''t set the client request token, Amazon Comprehend generates one.'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: 'The language of the input documents. You can specify any of the following languages supported by Amazon Comprehend: German ("de"), English ("en"), Spanish ("es"), French ("fr"), Italian ("it"), or Portuguese ("pt"). All documents must be in the same language.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your custom classifier. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
        Mode:
          $ref: '#/components/schemas/DocumentClassifierMode'
          description: 'Indicates the mode in which the classifier will be trained. The classifier can be trained in multi-class mode, which identifies one and only one class for each document, or multi-label mode, which identifies one or more labels for each document. In multi-label mode, multiple labels for an individual document are separated by a delimiter. The default delimiter between labels is a pipe (|).'
        ModelKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt trained custom models. The ModelKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
    ResourceInUseException: {}
    TooManyTagsException: {}
    TooManyRequestsException: {}
    ResourceLimitExceededException: {}
    KmsKeyValidationException: {}
    CreateEndpointResponse:
      type: object
      properties:
        EndpointArn:
          $ref: '#/components/schemas/ComprehendEndpointArn'
          description: The Amazon Resource Number (ARN) of the endpoint being created.
    CreateEndpointRequest:
      type: object
      required:
        - EndpointName
        - ModelArn
        - DesiredInferenceUnits
      title: CreateEndpointRequest
      properties:
        EndpointName:
          $ref: '#/components/schemas/ComprehendEndpointName'
          description: 'This is the descriptive suffix that becomes part of the <code>EndpointArn</code> used for all subsequent requests to this resource. '
        ModelArn:
          $ref: '#/components/schemas/ComprehendModelArn'
          description: The Amazon Resource Number (ARN) of the model to which the endpoint will be attached.
        DesiredInferenceUnits:
          $ref: '#/components/schemas/InferenceUnitsInteger'
          description: ' The desired number of inference units to be used by the model using this endpoint. Each inference unit represents of a throughput of 100 characters per second.'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestTokenString'
          description: 'An idempotency token provided by the customer. If this token matches a previous endpoint creation request, Amazon Comprehend will not return a <code>ResourceInUseException</code>. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'Tags associated with the endpoint being created. A tag is a key-value pair that adds metadata to the endpoint. For example, a tag with "Sales" as the key might be added to an endpoint to indicate its use by the sales department. '
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the AWS identity and Access Management (IAM) role that grants Amazon Comprehend read access to trained custom models encrypted with a customer managed key (ModelKmsKeyId).
    ResourceNotFoundException: {}
    CreateEntityRecognizerResponse:
      type: object
      properties:
        EntityRecognizerArn:
          $ref: '#/components/schemas/EntityRecognizerArn'
          description: The Amazon Resource Name (ARN) that identifies the entity recognizer.
    CreateEntityRecognizerRequest:
      type: object
      required:
        - RecognizerName
        - DataAccessRoleArn
        - InputDataConfig
        - LanguageCode
      title: CreateEntityRecognizerRequest
      properties:
        RecognizerName:
          $ref: '#/components/schemas/ComprehendArnName'
          description: 'The name given to the newly created recognizer. Recognizer names can be a maximum of 256 characters. Alphanumeric characters, hyphens (-) and underscores (_) are allowed. The name must be unique in the account/region.'
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your input data.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'Tags to be associated with the entity recognizer being created. A tag is a key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with "Sales" as the key might be added to a resource to indicate its use by the sales department. '
        InputDataConfig:
          $ref: '#/components/schemas/EntityRecognizerInputDataConfig'
          description: 'Specifies the format and location of the input data. The S3 bucket containing the input data must be located in the same region as the entity recognizer being created. '
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestTokenString'
          description: ' A unique identifier for the request. If you don''t set the client request token, Amazon Comprehend generates one.'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: ' You can specify any of the following languages supported by Amazon Comprehend: English ("en"), Spanish ("es"), French ("fr"), Italian ("it"), German ("de"), or Portuguese ("pt"). All documents must be in the same language.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your custom entity recognizer. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
        ModelKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt trained custom models. The ModelKmsKeyId can be either of the following formats</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
    DeleteDocumentClassifierResponse:
      type: object
      properties: {}
    DeleteDocumentClassifierRequest:
      type: object
      required:
        - DocumentClassifierArn
      title: DeleteDocumentClassifierRequest
      properties:
        DocumentClassifierArn:
          $ref: '#/components/schemas/DocumentClassifierArn'
          description: 'The Amazon Resource Name (ARN) that identifies the document classifier. '
    DeleteEndpointResponse:
      type: object
      properties: {}
    DeleteEndpointRequest:
      type: object
      required:
        - EndpointArn
      title: DeleteEndpointRequest
      properties:
        EndpointArn:
          $ref: '#/components/schemas/ComprehendEndpointArn'
          description: The Amazon Resource Number (ARN) of the endpoint being deleted.
    DeleteEntityRecognizerResponse:
      type: object
      properties: {}
    DeleteEntityRecognizerRequest:
      type: object
      required:
        - EntityRecognizerArn
      title: DeleteEntityRecognizerRequest
      properties:
        EntityRecognizerArn:
          $ref: '#/components/schemas/EntityRecognizerArn'
          description: The Amazon Resource Name (ARN) that identifies the entity recognizer.
    DescribeDocumentClassificationJobResponse:
      type: object
      properties:
        DocumentClassificationJobProperties:
          $ref: '#/components/schemas/DocumentClassificationJobProperties'
          description: An object that describes the properties associated with the document classification job.
    DescribeDocumentClassificationJobRequest:
      type: object
      required:
        - JobId
      title: DescribeDocumentClassificationJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier that Amazon Comprehend generated for the job. The operation returns this identifier in its response.
    JobNotFoundException: {}
    DescribeDocumentClassifierResponse:
      type: object
      properties:
        DocumentClassifierProperties:
          $ref: '#/components/schemas/DocumentClassifierProperties'
          description: An object that contains the properties associated with a document classifier.
    DescribeDocumentClassifierRequest:
      type: object
      required:
        - DocumentClassifierArn
      title: DescribeDocumentClassifierRequest
      properties:
        DocumentClassifierArn:
          $ref: '#/components/schemas/DocumentClassifierArn'
          description: The Amazon Resource Name (ARN) that identifies the document classifier. The operation returns this identifier in its response.
    DescribeDominantLanguageDetectionJobResponse:
      type: object
      properties:
        DominantLanguageDetectionJobProperties:
          $ref: '#/components/schemas/DominantLanguageDetectionJobProperties'
          description: An object that contains the properties associated with a dominant language detection job.
    DescribeDominantLanguageDetectionJobRequest:
      type: object
      required:
        - JobId
      title: DescribeDominantLanguageDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier that Amazon Comprehend generated for the job. The operation returns this identifier in its response.
    DescribeEndpointResponse:
      type: object
      properties:
        EndpointProperties:
          $ref: '#/components/schemas/EndpointProperties'
          description: Describes information associated with the specific endpoint.
    DescribeEndpointRequest:
      type: object
      required:
        - EndpointArn
      title: DescribeEndpointRequest
      properties:
        EndpointArn:
          $ref: '#/components/schemas/ComprehendEndpointArn'
          description: The Amazon Resource Number (ARN) of the endpoint being described.
    DescribeEntitiesDetectionJobResponse:
      type: object
      properties:
        EntitiesDetectionJobProperties:
          $ref: '#/components/schemas/EntitiesDetectionJobProperties'
          description: An object that contains the properties associated with an entities detection job.
    DescribeEntitiesDetectionJobRequest:
      type: object
      required:
        - JobId
      title: DescribeEntitiesDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier that Amazon Comprehend generated for the job. The operation returns this identifier in its response.
    DescribeEntityRecognizerResponse:
      type: object
      properties:
        EntityRecognizerProperties:
          $ref: '#/components/schemas/EntityRecognizerProperties'
          description: Describes information associated with an entity recognizer.
    DescribeEntityRecognizerRequest:
      type: object
      required:
        - EntityRecognizerArn
      title: DescribeEntityRecognizerRequest
      properties:
        EntityRecognizerArn:
          $ref: '#/components/schemas/EntityRecognizerArn'
          description: The Amazon Resource Name (ARN) that identifies the entity recognizer.
    DescribeEventsDetectionJobResponse:
      type: object
      properties:
        EventsDetectionJobProperties:
          $ref: '#/components/schemas/EventsDetectionJobProperties'
          description: An object that contains the properties associated with an event detection job.
    DescribeEventsDetectionJobRequest:
      type: object
      required:
        - JobId
      title: DescribeEventsDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the events detection job.
    DescribeKeyPhrasesDetectionJobResponse:
      type: object
      properties:
        KeyPhrasesDetectionJobProperties:
          $ref: '#/components/schemas/KeyPhrasesDetectionJobProperties'
          description: 'An object that contains the properties associated with a key phrases detection job. '
    DescribeKeyPhrasesDetectionJobRequest:
      type: object
      required:
        - JobId
      title: DescribeKeyPhrasesDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier that Amazon Comprehend generated for the job. The operation returns this identifier in its response.
    DescribePiiEntitiesDetectionJobResponse:
      type: object
      properties:
        PiiEntitiesDetectionJobProperties:
          $ref: '#/components/schemas/PiiEntitiesDetectionJobProperties'
    DescribePiiEntitiesDetectionJobRequest:
      type: object
      required:
        - JobId
      title: DescribePiiEntitiesDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier that Amazon Comprehend generated for the job. The operation returns this identifier in its response.
    DescribeSentimentDetectionJobResponse:
      type: object
      properties:
        SentimentDetectionJobProperties:
          $ref: '#/components/schemas/SentimentDetectionJobProperties'
          description: An object that contains the properties associated with a sentiment detection job.
    DescribeSentimentDetectionJobRequest:
      type: object
      required:
        - JobId
      title: DescribeSentimentDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier that Amazon Comprehend generated for the job. The operation returns this identifier in its response.
    DescribeTopicsDetectionJobResponse:
      type: object
      properties:
        TopicsDetectionJobProperties:
          $ref: '#/components/schemas/TopicsDetectionJobProperties'
          description: The list of properties for the requested job.
    DescribeTopicsDetectionJobRequest:
      type: object
      required:
        - JobId
      title: DescribeTopicsDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier assigned by the user to the detection job.
    DetectDominantLanguageResponse:
      type: object
      properties:
        Languages:
          $ref: '#/components/schemas/ListOfDominantLanguages'
          description: 'The languages that Amazon Comprehend detected in the input text. For each language, the response returns the RFC 5646 language code and the level of confidence that Amazon Comprehend has in the accuracy of its inference. For more information about RFC 5646, see <a href="https://tools.ietf.org/html/rfc5646">Tags for Identifying Languages</a> on the <i>IETF Tools</i> web site.'
    DetectDominantLanguageRequest:
      type: object
      required:
        - Text
      title: DetectDominantLanguageRequest
      properties:
        Text:
          $ref: '#/components/schemas/CustomerInputString'
          description: 'A UTF-8 text string. Each string should contain at least 20 characters and must contain fewer that 5,000 bytes of UTF-8 encoded characters.'
    DetectEntitiesResponse:
      type: object
      properties:
        Entities:
          $ref: '#/components/schemas/ListOfEntities'
          description: '<p>A collection of entities identified in the input text. For each entity, the response provides the entity text, entity type, where the entity text begins and ends, and the level of confidence that Amazon Comprehend has in the detection. </p> <p>If your request uses a custom entity recognition model, Amazon Comprehend detects the entities that the model is trained to recognize. Otherwise, it detects the default entity types. For a list of default entity types, see <a>how-entities</a>.</p>'
    DetectEntitiesRequest:
      type: object
      required:
        - Text
      title: DetectEntitiesRequest
      properties:
        Text:
          $ref: '#/components/schemas/CustomerInputString'
          description: 'A UTF-8 text string. Each string must contain fewer that 5,000 bytes of UTF-8 encoded characters.'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: '<p>The language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.</p> <p>If your request includes the endpoint for a custom entity recognition model, Amazon Comprehend uses the language of your custom model, and it ignores any language code that you specify here.</p>'
        EndpointArn:
          $ref: '#/components/schemas/EntityRecognizerEndpointArn'
          description: '<p>The Amazon Resource Name of an endpoint that is associated with a custom entity recognition model. Provide an endpoint if you want to detect entities by using your own custom model instead of the default model that is used by Amazon Comprehend.</p> <p>If you specify an endpoint, Amazon Comprehend uses the language of your custom model, and it ignores any language code that you provide in your request.</p>'
    DetectKeyPhrasesResponse:
      type: object
      properties:
        KeyPhrases:
          $ref: '#/components/schemas/ListOfKeyPhrases'
          description: 'A collection of key phrases that Amazon Comprehend identified in the input text. For each key phrase, the response provides the text of the key phrase, where the key phrase begins and ends, and the level of confidence that Amazon Comprehend has in the accuracy of the detection. '
    DetectKeyPhrasesRequest:
      type: object
      required:
        - Text
        - LanguageCode
      title: DetectKeyPhrasesRequest
      properties:
        Text:
          $ref: '#/components/schemas/CustomerInputString'
          description: 'A UTF-8 text string. Each string must contain fewer that 5,000 bytes of UTF-8 encoded characters.'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.
    DetectPiiEntitiesResponse:
      type: object
      properties:
        Entities:
          $ref: '#/components/schemas/ListOfPiiEntities'
          description: 'A collection of PII entities identified in the input text. For each entity, the response provides the entity type, where the entity text begins and ends, and the level of confidence that Amazon Comprehend has in the detection.'
    DetectPiiEntitiesRequest:
      type: object
      required:
        - Text
        - LanguageCode
      title: DetectPiiEntitiesRequest
      properties:
        Text:
          $ref: '#/components/schemas/String'
          description: 'A UTF-8 text string. Each string must contain fewer that 5,000 bytes of UTF-8 encoded characters.'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language of the input documents.
    DetectSentimentResponse:
      type: object
      properties:
        Sentiment:
          $ref: '#/components/schemas/SentimentType'
          description: The inferred sentiment that Amazon Comprehend has the highest level of confidence in.
        SentimentScore:
          $ref: '#/components/schemas/SentimentScore'
          description: 'An object that lists the sentiments, and their corresponding confidence levels.'
    DetectSentimentRequest:
      type: object
      required:
        - Text
        - LanguageCode
      title: DetectSentimentRequest
      properties:
        Text:
          $ref: '#/components/schemas/CustomerInputString'
          description: 'A UTF-8 text string. Each string must contain fewer that 5,000 bytes of UTF-8 encoded characters.'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.
    DetectSyntaxResponse:
      type: object
      properties:
        SyntaxTokens:
          $ref: '#/components/schemas/ListOfSyntaxTokens'
          description: 'A collection of syntax tokens describing the text. For each token, the response provides the text, the token type, where the text begins and ends, and the level of confidence that Amazon Comprehend has that the token is correct. For a list of token types, see <a>how-syntax</a>.'
    DetectSyntaxRequest:
      type: object
      required:
        - Text
        - LanguageCode
      title: DetectSyntaxRequest
      properties:
        Text:
          $ref: '#/components/schemas/CustomerInputString'
          description: 'A UTF-8 string. Each string must contain fewer that 5,000 bytes of UTF encoded characters.'
        LanguageCode:
          $ref: '#/components/schemas/SyntaxLanguageCode'
          description: 'The language code of the input documents. You can specify any of the following languages supported by Amazon Comprehend: German ("de"), English ("en"), Spanish ("es"), French ("fr"), Italian ("it"), or Portuguese ("pt").'
    ListDocumentClassificationJobsResponse:
      type: object
      properties:
        DocumentClassificationJobPropertiesList:
          $ref: '#/components/schemas/DocumentClassificationJobPropertiesList'
          description: A list containing the properties of each job returned.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
    ListDocumentClassificationJobsRequest:
      type: object
      title: ListDocumentClassificationJobsRequest
      properties:
        Filter:
          $ref: '#/components/schemas/DocumentClassificationJobFilter'
          description: 'Filters the jobs that are returned. You can filter jobs on their names, status, or the date and time that they were submitted. You can only set one filter at a time.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: The maximum number of results to return in each page. The default is 100.
    InvalidFilterException: {}
    ListDocumentClassifiersResponse:
      type: object
      properties:
        DocumentClassifierPropertiesList:
          $ref: '#/components/schemas/DocumentClassifierPropertiesList'
          description: A list containing the properties of each job returned.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
    ListDocumentClassifiersRequest:
      type: object
      title: ListDocumentClassifiersRequest
      properties:
        Filter:
          $ref: '#/components/schemas/DocumentClassifierFilter'
          description: 'Filters the jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: The maximum number of results to return in each page. The default is 100.
    ListDominantLanguageDetectionJobsResponse:
      type: object
      properties:
        DominantLanguageDetectionJobPropertiesList:
          $ref: '#/components/schemas/DominantLanguageDetectionJobPropertiesList'
          description: A list containing the properties of each job that is returned.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
    ListDominantLanguageDetectionJobsRequest:
      type: object
      title: ListDominantLanguageDetectionJobsRequest
      properties:
        Filter:
          $ref: '#/components/schemas/DominantLanguageDetectionJobFilter'
          description: 'Filters that jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: The maximum number of results to return in each page. The default is 100.
    ListEndpointsResponse:
      type: object
      properties:
        EndpointPropertiesList:
          $ref: '#/components/schemas/EndpointPropertiesList'
          description: Displays a list of endpoint properties being retrieved by the service in response to the request.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
    ListEndpointsRequest:
      type: object
      title: ListEndpointsRequest
      properties:
        Filter:
          $ref: '#/components/schemas/EndpointFilter'
          description: 'Filters the endpoints that are returned. You can filter endpoints on their name, model, status, or the date and time that they were created. You can only set one filter at a time. '
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: The maximum number of results to return in each page. The default is 100.
    ListEntitiesDetectionJobsResponse:
      type: object
      properties:
        EntitiesDetectionJobPropertiesList:
          $ref: '#/components/schemas/EntitiesDetectionJobPropertiesList'
          description: A list containing the properties of each job that is returned.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
    ListEntitiesDetectionJobsRequest:
      type: object
      title: ListEntitiesDetectionJobsRequest
      properties:
        Filter:
          $ref: '#/components/schemas/EntitiesDetectionJobFilter'
          description: 'Filters the jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: The maximum number of results to return in each page. The default is 100.
    ListEntityRecognizersResponse:
      type: object
      properties:
        EntityRecognizerPropertiesList:
          $ref: '#/components/schemas/EntityRecognizerPropertiesList'
          description: The list of properties of an entity recognizer.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
    ListEntityRecognizersRequest:
      type: object
      title: ListEntityRecognizersRequest
      properties:
        Filter:
          $ref: '#/components/schemas/EntityRecognizerFilter'
          description: 'Filters the list of entities returned. You can filter on <code>Status</code>, <code>SubmitTimeBefore</code>, or <code>SubmitTimeAfter</code>. You can only set one filter at a time.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: ' The maximum number of results to return on each page. The default is 100.'
    ListEventsDetectionJobsResponse:
      type: object
      properties:
        EventsDetectionJobPropertiesList:
          $ref: '#/components/schemas/EventsDetectionJobPropertiesList'
          description: A list containing the properties of each job that is returned.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
    ListEventsDetectionJobsRequest:
      type: object
      title: ListEventsDetectionJobsRequest
      properties:
        Filter:
          $ref: '#/components/schemas/EventsDetectionJobFilter'
          description: 'Filters the jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: The maximum number of results to return in each page.
    ListKeyPhrasesDetectionJobsResponse:
      type: object
      properties:
        KeyPhrasesDetectionJobPropertiesList:
          $ref: '#/components/schemas/KeyPhrasesDetectionJobPropertiesList'
          description: A list containing the properties of each job that is returned.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
    ListKeyPhrasesDetectionJobsRequest:
      type: object
      title: ListKeyPhrasesDetectionJobsRequest
      properties:
        Filter:
          $ref: '#/components/schemas/KeyPhrasesDetectionJobFilter'
          description: 'Filters the jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: The maximum number of results to return in each page. The default is 100.
    ListPiiEntitiesDetectionJobsResponse:
      type: object
      properties:
        PiiEntitiesDetectionJobPropertiesList:
          $ref: '#/components/schemas/PiiEntitiesDetectionJobPropertiesList'
          description: A list containing the properties of each job that is returned.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
    ListPiiEntitiesDetectionJobsRequest:
      type: object
      title: ListPiiEntitiesDetectionJobsRequest
      properties:
        Filter:
          $ref: '#/components/schemas/PiiEntitiesDetectionJobFilter'
          description: 'Filters the jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: The maximum number of results to return in each page.
    ListSentimentDetectionJobsResponse:
      type: object
      properties:
        SentimentDetectionJobPropertiesList:
          $ref: '#/components/schemas/SentimentDetectionJobPropertiesList'
          description: A list containing the properties of each job that is returned.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
    ListSentimentDetectionJobsRequest:
      type: object
      title: ListSentimentDetectionJobsRequest
      properties:
        Filter:
          $ref: '#/components/schemas/SentimentDetectionJobFilter'
          description: 'Filters the jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: The maximum number of results to return in each page. The default is 100.
    ListTagsForResourceResponse:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ComprehendArn'
          description: The Amazon Resource Name (ARN) of the given Amazon Comprehend resource you are querying.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'Tags associated with the Amazon Comprehend resource being queried. A tag is a key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with "Sales" as the key might be added to a resource to indicate its use by the sales department. '
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      title: ListTagsForResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ComprehendArn'
          description: 'The Amazon Resource Name (ARN) of the given Amazon Comprehend resource you are querying. '
    ListTopicsDetectionJobsResponse:
      type: object
      properties:
        TopicsDetectionJobPropertiesList:
          $ref: '#/components/schemas/TopicsDetectionJobPropertiesList'
          description: A list containing the properties of each job that is returned.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
    ListTopicsDetectionJobsRequest:
      type: object
      title: ListTopicsDetectionJobsRequest
      properties:
        Filter:
          $ref: '#/components/schemas/TopicsDetectionJobFilter'
          description: 'Filters the jobs that are returned. Jobs can be filtered on their name, status, or the date and time that they were submitted. You can set only one filter at a time.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Identifies the next page of results to return.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsInteger'
          description: The maximum number of results to return in each page. The default is 100.
    StartDocumentClassificationJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The identifier generated for the job. To get the status of the job, use this identifier with the operation.'
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: '<p>The status of the job:</p> <ul> <li> <p>SUBMITTED - The job has been received and queued for processing.</p> </li> <li> <p>IN_PROGRESS - Amazon Comprehend is processing the job.</p> </li> <li> <p>COMPLETED - The job was successfully completed and the output is available.</p> </li> <li> <p>FAILED - The job did not complete. For details, use the operation.</p> </li> <li> <p>STOP_REQUESTED - Amazon Comprehend has received a stop request for the job and is processing the request.</p> </li> <li> <p>STOPPED - The job was successfully stopped without completing.</p> </li> </ul>'
    StartDocumentClassificationJobRequest:
      type: object
      required:
        - DocumentClassifierArn
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
      title: StartDocumentClassificationJobRequest
      properties:
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The identifier of the job.
        DocumentClassifierArn:
          $ref: '#/components/schemas/DocumentClassifierArn'
          description: The Amazon Resource Name (ARN) of the document classifier to use to process the job.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: Specifies the format and location of the input data for the job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: Specifies where to send the output files.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestTokenString'
          description: 'A unique identifier for the request. If you do not set the client request token, Amazon Comprehend generates one.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your document classification job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
    StartDominantLanguageDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The identifier generated for the job. To get the status of a job, use this identifier with the operation.'
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: '<p>The status of the job. </p> <ul> <li> <p>SUBMITTED - The job has been received and is queued for processing.</p> </li> <li> <p>IN_PROGRESS - Amazon Comprehend is processing the job.</p> </li> <li> <p>COMPLETED - The job was successfully completed and the output is available.</p> </li> <li> <p>FAILED - The job did not complete. To get details, use the operation.</p> </li> </ul>'
    StartDominantLanguageDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
      title: StartDominantLanguageDetectionJobRequest
      properties:
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: Specifies the format and location of the input data for the job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: Specifies where to send the output files.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: 'The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data. For more information, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions">https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions</a>.'
        JobName:
          $ref: '#/components/schemas/JobName'
          description: An identifier for the job.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestTokenString'
          description: 'A unique identifier for the request. If you do not set the client request token, Amazon Comprehend generates one.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your dominant language detection job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
    StartEntitiesDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The identifier generated for the job. To get the status of job, use this identifier with the operation.'
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: '<p>The status of the job. </p> <ul> <li> <p>SUBMITTED - The job has been received and is queued for processing.</p> </li> <li> <p>IN_PROGRESS - Amazon Comprehend is processing the job.</p> </li> <li> <p>COMPLETED - The job was successfully completed and the output is available.</p> </li> <li> <p>FAILED - The job did not complete. To get details, use the operation.</p> </li> <li> <p>STOP_REQUESTED - Amazon Comprehend has received a stop request for the job and is processing the request.</p> </li> <li> <p>STOPPED - The job was successfully stopped without completing.</p> </li> </ul>'
    StartEntitiesDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
        - LanguageCode
      title: StartEntitiesDetectionJobRequest
      properties:
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: Specifies the format and location of the input data for the job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: Specifies where to send the output files.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: 'The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data. For more information, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions">https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions</a>.'
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The identifier of the job.
        EntityRecognizerArn:
          $ref: '#/components/schemas/EntityRecognizerArn'
          description: The Amazon Resource Name (ARN) that identifies the specific entity recognizer to be used by the <code>StartEntitiesDetectionJob</code>. This ARN is optional and is only used for a custom entity recognition job.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: 'The language of the input documents. All documents must be in the same language. You can specify any of the languages supported by Amazon Comprehend. If custom entities recognition is used, this parameter is ignored and the language used for training the model is used instead.'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestTokenString'
          description: 'A unique identifier for the request. If you don''t set the client request token, Amazon Comprehend generates one.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your entity detection job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
    StartEventsDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'An unique identifier for the request. If you don''t set the client request token, Amazon Comprehend generates one.'
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: The status of the events detection job.
    StartEventsDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
        - LanguageCode
        - TargetEventTypes
      title: StartEventsDetectionJobRequest
      properties:
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: Specifies the format and location of the input data for the job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: Specifies where to send the output files.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data.
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The identifier of the events detection job.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the input documents.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestTokenString'
          description: 'An unique identifier for the request. If you don''t set the client request token, Amazon Comprehend generates one.'
        TargetEventTypes:
          $ref: '#/components/schemas/TargetEventTypes'
          description: The types of events to detect in the input documents.
    StartKeyPhrasesDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The identifier generated for the job. To get the status of a job, use this identifier with the operation.'
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: '<p>The status of the job. </p> <ul> <li> <p>SUBMITTED - The job has been received and is queued for processing.</p> </li> <li> <p>IN_PROGRESS - Amazon Comprehend is processing the job.</p> </li> <li> <p>COMPLETED - The job was successfully completed and the output is available.</p> </li> <li> <p>FAILED - The job did not complete. To get details, use the operation.</p> </li> </ul>'
    StartKeyPhrasesDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
        - LanguageCode
      title: StartKeyPhrasesDetectionJobRequest
      properties:
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: Specifies the format and location of the input data for the job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: Specifies where to send the output files.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: 'The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data. For more information, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions">https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions</a>.'
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The identifier of the job.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestTokenString'
          description: 'A unique identifier for the request. If you don''t set the client request token, Amazon Comprehend generates one.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: ' Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your key phrases detection job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
    StartPiiEntitiesDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier generated for the job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: The status of the job.
    StartPiiEntitiesDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - Mode
        - DataAccessRoleArn
        - LanguageCode
      title: StartPiiEntitiesDetectionJobRequest
      properties:
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: The input properties for a PII entities detection job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: Provides conﬁguration parameters for the output of PII entity detection jobs.
        Mode:
          $ref: '#/components/schemas/PiiEntitiesDetectionMode'
          description: Specifies whether the output provides the locations (offsets) of PII entities or a file in which PII entities are redacted.
        RedactionConfig:
          $ref: '#/components/schemas/RedactionConfig'
          description: '<p>Provides configuration parameters for PII entity redaction.</p> <p>This parameter is required if you set the <code>Mode</code> parameter to <code>ONLY_REDACTION</code>. In that case, you must provide a <code>RedactionConfig</code> definition that includes the <code>PiiEntityTypes</code> parameter.</p>'
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data.
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The identifier of the job.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language of the input documents.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestTokenString'
          description: 'A unique identifier for the request. If you don''t set the client request token, Amazon Comprehend generates one.'
    StartSentimentDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The identifier generated for the job. To get the status of a job, use this identifier with the operation.'
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: '<p>The status of the job. </p> <ul> <li> <p>SUBMITTED - The job has been received and is queued for processing.</p> </li> <li> <p>IN_PROGRESS - Amazon Comprehend is processing the job.</p> </li> <li> <p>COMPLETED - The job was successfully completed and the output is available.</p> </li> <li> <p>FAILED - The job did not complete. To get details, use the operation.</p> </li> </ul>'
    StartSentimentDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
        - LanguageCode
      title: StartSentimentDetectionJobRequest
      properties:
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: Specifies the format and location of the input data for the job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: 'Specifies where to send the output files. '
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: 'The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data. For more information, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions">https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions</a>.'
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The identifier of the job.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestTokenString'
          description: 'A unique identifier for the request. If you don''t set the client request token, Amazon Comprehend generates one.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your sentiment detection job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
    StartTopicsDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The identifier generated for the job. To get the status of the job, use this identifier with the <code>DescribeTopicDetectionJob</code> operation.'
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: '<p>The status of the job: </p> <ul> <li> <p>SUBMITTED - The job has been received and is queued for processing.</p> </li> <li> <p>IN_PROGRESS - Amazon Comprehend is processing the job.</p> </li> <li> <p>COMPLETED - The job was successfully completed and the output is available.</p> </li> <li> <p>FAILED - The job did not complete. To get details, use the <code>DescribeTopicDetectionJob</code> operation.</p> </li> </ul>'
    StartTopicsDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
      title: StartTopicsDetectionJobRequest
      properties:
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: Specifies the format and location of the input data for the job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: 'Specifies where to send the output files. The output is a compressed archive with two files, <code>topic-terms.csv</code> that lists the terms associated with each topic, and <code>doc-topics.csv</code> that lists the documents associated with each topic'
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: 'The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data. For more information, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions">https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions</a>.'
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The identifier of the job.
        NumberOfTopics:
          $ref: '#/components/schemas/NumberOfTopicsInteger'
          description: The number of topics to detect.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestTokenString'
          description: 'A unique identifier for the request. If you do not set the client request token, Amazon Comprehend generates one.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your topic detection job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
    StopDominantLanguageDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the dominant language detection job to stop.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'Either <code>STOP_REQUESTED</code> if the job is currently running, or <code>STOPPED</code> if the job was previously stopped with the <code>StopDominantLanguageDetectionJob</code> operation.'
    StopDominantLanguageDetectionJobRequest:
      type: object
      required:
        - JobId
      title: StopDominantLanguageDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the dominant language detection job to stop.
    StopEntitiesDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the entities detection job to stop.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'Either <code>STOP_REQUESTED</code> if the job is currently running, or <code>STOPPED</code> if the job was previously stopped with the <code>StopEntitiesDetectionJob</code> operation.'
    StopEntitiesDetectionJobRequest:
      type: object
      required:
        - JobId
      title: StopEntitiesDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the entities detection job to stop.
    StopEventsDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the events detection job to stop.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: The status of the events detection job.
    StopEventsDetectionJobRequest:
      type: object
      required:
        - JobId
      title: StopEventsDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the events detection job to stop.
    StopKeyPhrasesDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the key phrases detection job to stop.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'Either <code>STOP_REQUESTED</code> if the job is currently running, or <code>STOPPED</code> if the job was previously stopped with the <code>StopKeyPhrasesDetectionJob</code> operation.'
    StopKeyPhrasesDetectionJobRequest:
      type: object
      required:
        - JobId
      title: StopKeyPhrasesDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the key phrases detection job to stop.
    StopPiiEntitiesDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the PII entities detection job to stop.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: The status of the PII entities detection job.
    StopPiiEntitiesDetectionJobRequest:
      type: object
      required:
        - JobId
      title: StopPiiEntitiesDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the PII entities detection job to stop.
    StopSentimentDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the sentiment detection job to stop.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'Either <code>STOP_REQUESTED</code> if the job is currently running, or <code>STOPPED</code> if the job was previously stopped with the <code>StopSentimentDetectionJob</code> operation.'
    StopSentimentDetectionJobRequest:
      type: object
      required:
        - JobId
      title: StopSentimentDetectionJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier of the sentiment detection job to stop.
    StopTrainingDocumentClassifierResponse:
      type: object
      properties: {}
    StopTrainingDocumentClassifierRequest:
      type: object
      required:
        - DocumentClassifierArn
      title: StopTrainingDocumentClassifierRequest
      properties:
        DocumentClassifierArn:
          $ref: '#/components/schemas/DocumentClassifierArn'
          description: The Amazon Resource Name (ARN) that identifies the document classifier currently being trained.
    StopTrainingEntityRecognizerResponse:
      type: object
      properties: {}
    StopTrainingEntityRecognizerRequest:
      type: object
      required:
        - EntityRecognizerArn
      title: StopTrainingEntityRecognizerRequest
      properties:
        EntityRecognizerArn:
          $ref: '#/components/schemas/EntityRecognizerArn'
          description: The Amazon Resource Name (ARN) that identifies the entity recognizer currently being trained.
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      title: TagResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ComprehendArn'
          description: 'The Amazon Resource Name (ARN) of the given Amazon Comprehend resource to which you want to associate the tags. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'Tags being associated with a specific Amazon Comprehend resource. There can be a maximum of 50 tags (both existing and pending) associated with a specific resource. '
    ConcurrentModificationException: {}
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ComprehendArn'
          description: ' The Amazon Resource Name (ARN) of the given Amazon Comprehend resource from which you want to remove the tags. '
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: 'The initial part of a key-value pair that forms a tag being removed from a given resource. For example, a tag with "Sales" as the key might be added to a resource to indicate its use by the sales department. Keys must be unique and cannot be duplicated for a particular resource. '
    TooManyTagKeysException: {}
    UpdateEndpointResponse:
      type: object
      properties: {}
    UpdateEndpointRequest:
      type: object
      required:
        - EndpointArn
        - DesiredInferenceUnits
      title: UpdateEndpointRequest
      properties:
        EndpointArn:
          $ref: '#/components/schemas/ComprehendEndpointArn'
          description: The Amazon Resource Number (ARN) of the endpoint being updated.
        DesiredInferenceUnits:
          $ref: '#/components/schemas/InferenceUnitsInteger'
          description: ' The desired number of inference units to be used by the model using this endpoint. Each inference unit represents of a throughput of 100 characters per second.'
    AnyLengthString:
      type: string
    AttributeNamesListItem:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 63
    AttributeNamesList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeNamesListItem'
    S3Uri:
      type: string
      pattern: 's3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?'
      maxLength: 1024
    AugmentedManifestsListItem:
      type: object
      required:
        - S3Uri
        - AttributeNames
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 location of the augmented manifest file.
        AttributeNames:
          $ref: '#/components/schemas/AttributeNamesList'
          description: '<p>The JSON attribute that contains the annotations for your training documents. The number of attribute names that you specify depends on whether your augmented manifest file is the output of a single labeling job or a chained labeling job.</p> <p>If your file is the output of a single labeling job, specify the LabelAttributeName key that was used when the job was created in Ground Truth.</p> <p>If your file is the output of a chained labeling job, specify the LabelAttributeName key for one or more jobs in the chain. Each LabelAttributeName key provides the annotations from an individual job.</p>'
      description: An augmented manifest file that provides training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.
    Integer:
      type: integer
    ListOfDominantLanguages:
      type: array
      items:
        $ref: '#/components/schemas/DominantLanguage'
    BatchDetectDominantLanguageItemResult:
      type: object
      properties:
        Index:
          $ref: '#/components/schemas/Integer'
          description: The zero-based index of the document in the input list.
        Languages:
          $ref: '#/components/schemas/ListOfDominantLanguages'
          description: One or more <a>DominantLanguage</a> objects describing the dominant languages in the document.
      description: The result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.
    CustomerInputStringList:
      type: array
      items:
        $ref: '#/components/schemas/CustomerInputString'
    ListOfDetectDominantLanguageResult:
      type: array
      items:
        $ref: '#/components/schemas/BatchDetectDominantLanguageItemResult'
    BatchItemErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchItemError'
    ListOfEntities:
      type: array
      items:
        $ref: '#/components/schemas/Entity'
    BatchDetectEntitiesItemResult:
      type: object
      properties:
        Index:
          $ref: '#/components/schemas/Integer'
          description: The zero-based index of the document in the input list.
        Entities:
          $ref: '#/components/schemas/ListOfEntities'
          description: 'One or more <a>Entity</a> objects, one for each entity detected in the document.'
      description: The result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.
    LanguageCode:
      type: string
      enum:
        - en
        - es
        - fr
        - de
        - it
        - pt
        - ar
        - hi
        - ja
        - ko
        - zh
        - zh-TW
    ListOfDetectEntitiesResult:
      type: array
      items:
        $ref: '#/components/schemas/BatchDetectEntitiesItemResult'
    ListOfKeyPhrases:
      type: array
      items:
        $ref: '#/components/schemas/KeyPhrase'
    BatchDetectKeyPhrasesItemResult:
      type: object
      properties:
        Index:
          $ref: '#/components/schemas/Integer'
          description: The zero-based index of the document in the input list.
        KeyPhrases:
          $ref: '#/components/schemas/ListOfKeyPhrases'
          description: 'One or more <a>KeyPhrase</a> objects, one for each key phrase detected in the document.'
      description: The result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.
    ListOfDetectKeyPhrasesResult:
      type: array
      items:
        $ref: '#/components/schemas/BatchDetectKeyPhrasesItemResult'
    SentimentType:
      type: string
      enum:
        - POSITIVE
        - NEGATIVE
        - NEUTRAL
        - MIXED
    SentimentScore:
      type: object
      properties:
        Positive:
          $ref: '#/components/schemas/Float'
          description: The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.
        Negative:
          $ref: '#/components/schemas/Float'
          description: The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.
        Neutral:
          $ref: '#/components/schemas/Float'
          description: The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.
        Mixed:
          $ref: '#/components/schemas/Float'
          description: The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.
      description: Describes the level of confidence that Amazon Comprehend has in the accuracy of its detection of sentiments.
    BatchDetectSentimentItemResult:
      type: object
      properties:
        Index:
          $ref: '#/components/schemas/Integer'
          description: The zero-based index of the document in the input list.
        Sentiment:
          $ref: '#/components/schemas/SentimentType'
          description: The sentiment detected in the document.
        SentimentScore:
          $ref: '#/components/schemas/SentimentScore'
          description: The level of confidence that Amazon Comprehend has in the accuracy of its sentiment detection.
      description: The result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.
    ListOfDetectSentimentResult:
      type: array
      items:
        $ref: '#/components/schemas/BatchDetectSentimentItemResult'
    ListOfSyntaxTokens:
      type: array
      items:
        $ref: '#/components/schemas/SyntaxToken'
    BatchDetectSyntaxItemResult:
      type: object
      properties:
        Index:
          $ref: '#/components/schemas/Integer'
          description: The zero-based index of the document in the input list.
        SyntaxTokens:
          $ref: '#/components/schemas/ListOfSyntaxTokens'
          description: 'The syntax tokens for the words in the document, one token for each word.'
      description: The result of calling the operation. The operation returns one object that is successfully processed by the operation.
    SyntaxLanguageCode:
      type: string
      enum:
        - en
        - es
        - fr
        - de
        - it
        - pt
    ListOfDetectSyntaxResult:
      type: array
      items:
        $ref: '#/components/schemas/BatchDetectSyntaxItemResult'
    String:
      type: string
      minLength: 1
    BatchItemError:
      type: object
      properties:
        Index:
          $ref: '#/components/schemas/Integer'
          description: The zero-based index of the document in the input list.
        ErrorCode:
          $ref: '#/components/schemas/String'
          description: The numeric error code of the error.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: A text description of the error.
      description: Describes an error that occurred while processing a document in a batch. The operation returns on <code>BatchItemError</code> object for each document that contained an error.
    Double:
      type: number
      format: double
    ClassifierEvaluationMetrics:
      type: object
      properties:
        Accuracy:
          $ref: '#/components/schemas/Double'
          description: The fraction of the labels that were correct recognized. It is computed by dividing the number of labels in the test documents that were correctly recognized by the total number of labels in the test documents.
        Precision:
          $ref: '#/components/schemas/Double'
          description: A measure of the usefulness of the classifier results in the test data. High precision means that the classifier returned substantially more relevant results than irrelevant ones.
        Recall:
          $ref: '#/components/schemas/Double'
          description: 'A measure of how complete the classifier results are for the test data. High recall means that the classifier returned most of the relevant results. '
        F1Score:
          $ref: '#/components/schemas/Double'
          description: 'A measure of how accurate the classifier results are for the test data. It is derived from the <code>Precision</code> and <code>Recall</code> values. The <code>F1Score</code> is the harmonic average of the two scores. The highest score is 1, and the worst score is 0. '
        MicroPrecision:
          $ref: '#/components/schemas/Double'
          description: 'A measure of the usefulness of the recognizer results in the test data. High precision means that the recognizer returned substantially more relevant results than irrelevant ones. Unlike the Precision metric which comes from averaging the precision of all available labels, this is based on the overall score of all precision scores added together.'
        MicroRecall:
          $ref: '#/components/schemas/Double'
          description: 'A measure of how complete the classifier results are for the test data. High recall means that the classifier returned most of the relevant results. Specifically, this indicates how many of the correct categories in the text that the model can predict. It is a percentage of correct categories in the text that can found. Instead of averaging the recall scores of all labels (as with Recall), micro Recall is based on the overall score of all recall scores added together.'
        MicroF1Score:
          $ref: '#/components/schemas/Double'
          description: 'A measure of how accurate the classifier results are for the test data. It is a combination of the <code>Micro Precision</code> and <code>Micro Recall</code> values. The <code>Micro F1Score</code> is the harmonic mean of the two scores. The highest score is 1, and the worst score is 0.'
        HammingLoss:
          $ref: '#/components/schemas/Double'
          description: Indicates the fraction of labels that are incorrectly predicted. Also seen as the fraction of wrong labels compared to the total number of labels. Scores closer to zero are better.
      description: Describes the result metrics for the test data associated with an documentation classifier.
    ClassifierMetadata:
      type: object
      properties:
        NumberOfLabels:
          $ref: '#/components/schemas/Integer'
          description: 'The number of labels in the input data. '
        NumberOfTrainedDocuments:
          $ref: '#/components/schemas/Integer'
          description: The number of documents in the input data that were used to train the classifier. Typically this is 80 to 90 percent of the input documents.
        NumberOfTestDocuments:
          $ref: '#/components/schemas/Integer'
          description: 'The number of documents in the input data that were used to test the classifier. Typically this is 10 to 20 percent of the input documents, up to 10,000 documents.'
        EvaluationMetrics:
          $ref: '#/components/schemas/ClassifierEvaluationMetrics'
          description: ' Describes the result metrics for the test data associated with an documentation classifier.'
      description: Provides information about a document classifier.
    CustomerInputString:
      type: string
      minLength: 1
      format: password
    DocumentClassifierEndpointArn:
      type: string
      pattern: 'arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier-endpoint/[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 256
    ListOfClasses:
      type: array
      items:
        $ref: '#/components/schemas/DocumentClass'
    ListOfLabels:
      type: array
      items:
        $ref: '#/components/schemas/DocumentLabel'
    ClientRequestTokenString:
      type: string
      pattern: '^[a-zA-Z0-9-]+$'
      minLength: 1
      maxLength: 64
    ComprehendArn:
      type: string
      pattern: 'arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:[a-zA-Z0-9-]{1,64}/[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 256
    ComprehendArnName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*$'
      maxLength: 63
    ComprehendEndpointArn:
      type: string
      pattern: 'arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:(document-classifier-endpoint|entity-recognizer-endpoint)/[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 256
    ComprehendEndpointName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*$'
      maxLength: 40
    ComprehendModelArn:
      type: string
      pattern: 'arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:(document-classifier|entity-recognizer)/[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 256
    ListOfEntityLabels:
      type: array
      items:
        $ref: '#/components/schemas/EntityLabel'
    IamRoleArn:
      type: string
      pattern: 'arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+'
      minLength: 20
      maxLength: 2048
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    DocumentClassifierInputDataConfig:
      type: object
      properties:
        DataFormat:
          $ref: '#/components/schemas/DocumentClassifierDataFormat'
          description: '<p>The format of your training data:</p> <ul> <li> <p> <code>COMPREHEND_CSV</code>: A two-column CSV file, where labels are provided in the first column, and documents are provided in the second. If you use this value, you must provide the <code>S3Uri</code> parameter in your request.</p> </li> <li> <p> <code>AUGMENTED_MANIFEST</code>: A labeled dataset that is produced by Amazon SageMaker Ground Truth. This file is in JSON lines format. Each line is a complete JSON object that contains a training document and its associated labels. </p> <p>If you use this value, you must provide the <code>AugmentedManifests</code> parameter in your request.</p> </li> </ul> <p>If you don''t specify a value, Amazon Comprehend uses <code>COMPREHEND_CSV</code> as the default.</p>'
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>The Amazon S3 URI for the input data. The S3 bucket must be in the same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of input files.</p> <p>For example, if you use the URI <code>S3://bucketName/prefix</code>, if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.</p> <p>This parameter is required if you set <code>DataFormat</code> to <code>COMPREHEND_CSV</code>.</p>'
        LabelDelimiter:
          $ref: '#/components/schemas/LabelDelimiter'
          description: 'Indicates the delimiter used to separate each label for training a multi-label classifier. The default delimiter between labels is a pipe (|). You can use a different character as a delimiter (if it''s an allowed character) by specifying it under Delimiter for labels. If the training documents use a delimiter other than the default or the delimiter you specify, the labels on that line will be combined to make a single unique label, such as LABELLABELLABEL.'
        AugmentedManifests:
          $ref: '#/components/schemas/DocumentClassifierAugmentedManifestsList'
          description: <p>A list of augmented manifest files that provide training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.</p> <p>This parameter is required if you set <code>DataFormat</code> to <code>AUGMENTED_MANIFEST</code>.</p>
      description: '<p>The input properties for training a document classifier. </p> <p>For more information on how the input file is formatted, see <a>how-document-classification-training-data</a>. </p>'
    DocumentClassifierOutputDataConfig:
      type: object
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>When you use the <code>OutputDataConfig</code> object while creating a custom classifier, you specify the Amazon S3 location where you want to write the confusion matrix. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of this output file.</p> <p>When the custom classifier job is finished, the service creates the output file in a directory specific to the job. The <code>S3Uri</code> field contains the location of the output file, called <code>output.tar.gz</code>. It is a compressed archive that contains the confusion matrix.</p>'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>KMS Key Alias: <code>"alias/ExampleAlias"</code> </p> </li> <li> <p>ARN of a KMS Key Alias: <code>"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"</code> </p> </li> </ul>'
      description: 'Provides output results configuration parameters for custom classifier jobs. '
    KmsKeyId:
      type: string
      maxLength: 2048
    VpcConfig:
      type: object
      required:
        - SecurityGroupIds
        - Subnets
      properties:
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIds'
          description: 'The ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by "sg-", for instance: "sg-03b388029b0a285ea". For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Security Groups for your VPC</a>. '
        Subnets:
          $ref: '#/components/schemas/Subnets'
          description: 'The ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by "subnet-", for instance: "subnet-04ccf456919e69055". For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">VPCs and Subnets</a>. '
      description: ' Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
    DocumentClassifierMode:
      type: string
      enum:
        - MULTI_CLASS
        - MULTI_LABEL
    DocumentClassifierArn:
      type: string
      pattern: 'arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 256
    InferenceUnitsInteger:
      type: integer
      minimum: 1
    EntityRecognizerInputDataConfig:
      type: object
      required:
        - EntityTypes
      properties:
        DataFormat:
          $ref: '#/components/schemas/EntityRecognizerDataFormat'
          description: '<p>The format of your training data:</p> <ul> <li> <p> <code>COMPREHEND_CSV</code>: A CSV file that supplements your training documents. The CSV file contains information about the custom entities that your trained model will detect. The required format of the file depends on whether you are providing annotations or an entity list.</p> <p>If you use this value, you must provide your CSV file by using either the <code>Annotations</code> or <code>EntityList</code> parameters. You must provide your training documents by using the <code>Documents</code> parameter.</p> </li> <li> <p> <code>AUGMENTED_MANIFEST</code>: A labeled dataset that is produced by Amazon SageMaker Ground Truth. This file is in JSON lines format. Each line is a complete JSON object that contains a training document and its labels. Each label annotates a named entity in the training document. </p> <p>If you use this value, you must provide the <code>AugmentedManifests</code> parameter in your request.</p> </li> </ul> <p>If you don''t specify a value, Amazon Comprehend uses <code>COMPREHEND_CSV</code> as the default.</p>'
        EntityTypes:
          $ref: '#/components/schemas/EntityTypesList'
          description: '<p>The entity types in the labeled training data that Amazon Comprehend uses to train the custom entity recognizer. Any entity types that you don''t specify are ignored.</p> <p>A maximum of 25 entity types can be used at one time to train an entity recognizer. Entity types must not contain the following invalid characters: \n (line break), \\n (escaped line break), \r (carriage return), \\r (escaped carriage return), \t (tab), \\t (escaped tab), space, and , (comma). </p>'
        Documents:
          $ref: '#/components/schemas/EntityRecognizerDocuments'
          description: <p>The S3 location of the folder that contains the training documents for your custom entity recognizer.</p> <p>This parameter is required if you set <code>DataFormat</code> to <code>COMPREHEND_CSV</code>.</p>
        Annotations:
          $ref: '#/components/schemas/EntityRecognizerAnnotations'
          description: The S3 location of the CSV file that annotates your training documents.
        EntityList:
          $ref: '#/components/schemas/EntityRecognizerEntityList'
          description: The S3 location of the CSV file that has the entity list for your custom entity recognizer.
        AugmentedManifests:
          $ref: '#/components/schemas/EntityRecognizerAugmentedManifestsList'
          description: <p>A list of augmented manifest files that provide training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.</p> <p>This parameter is required if you set <code>DataFormat</code> to <code>AUGMENTED_MANIFEST</code>.</p>
      description: Specifies the format and location of the input data.
    EntityRecognizerArn:
      type: string
      pattern: 'arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer/[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 256
    JobId:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
      minLength: 1
      maxLength: 32
    DocumentClassificationJobProperties:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier assigned to the document classification job.
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The name that you assigned to the document classification job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'The current status of the document classification job. If the status is <code>FAILED</code>, the <code>Message</code> field shows the reason for the failure.'
        Message:
          $ref: '#/components/schemas/AnyLengthString'
          description: A description of the status of the job.
        SubmitTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the document classification job was submitted for processing.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the document classification job completed.
        DocumentClassifierArn:
          $ref: '#/components/schemas/DocumentClassifierArn'
          description: 'The Amazon Resource Name (ARN) that identifies the document classifier. '
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: The input data configuration that you supplied when you created the document classification job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: The output data configuration that you supplied when you created the document classification job.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the AWS identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data.
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: ' Configuration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your document classification job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
      description: Provides information about a document classification job.
    DocumentClassifierProperties:
      type: object
      properties:
        DocumentClassifierArn:
          $ref: '#/components/schemas/DocumentClassifierArn'
          description: The Amazon Resource Name (ARN) that identifies the document classifier.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code for the language of the documents that the classifier was trained on.
        Status:
          $ref: '#/components/schemas/ModelStatus'
          description: The status of the document classifier. If the status is <code>TRAINED</code> the classifier is ready to use. If the status is <code>FAILED</code> you can see additional information about why the classifier wasn't trained in the <code>Message</code> field.
        Message:
          $ref: '#/components/schemas/AnyLengthString'
          description: Additional information about the status of the classifier.
        SubmitTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the document classifier was submitted for training.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that training the document classifier completed.
        TrainingStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Indicates the time when the training starts on documentation classifiers. You are billed for the time interval between this time and the value of TrainingEndTime. '
        TrainingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that training of the document classifier was completed. Indicates the time when the training completes on documentation classifiers. You are billed for the time interval between this time and the value of TrainingStartTime.
        InputDataConfig:
          $ref: '#/components/schemas/DocumentClassifierInputDataConfig'
          description: The input data configuration that you supplied when you created the document classifier for training.
        OutputDataConfig:
          $ref: '#/components/schemas/DocumentClassifierOutputDataConfig'
          description: ' Provides output results configuration parameters for custom classifier jobs.'
        ClassifierMetadata:
          $ref: '#/components/schemas/ClassifierMetadata'
          description: 'Information about the document classifier, including the number of documents used for training the classifier, the number of documents used for test the classifier, and an accuracy rating.'
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your input data.
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: ' Configuration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your custom classifier. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
        Mode:
          $ref: '#/components/schemas/DocumentClassifierMode'
          description: Indicates the mode in which the specific classifier was trained. This also indicates the format of input documents and the format of the confusion matrix. Each classifier can only be trained in one mode and this cannot be changed once the classifier is trained.
        ModelKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt trained custom models. The ModelKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
      description: Provides information about a document classifier.
    DominantLanguageDetectionJobProperties:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier assigned to the dominant language detection job.
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The name that you assigned to the dominant language detection job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'The current status of the dominant language detection job. If the status is <code>FAILED</code>, the <code>Message</code> field shows the reason for the failure.'
        Message:
          $ref: '#/components/schemas/AnyLengthString'
          description: A description for the status of a job.
        SubmitTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the dominant language detection job was submitted for processing.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the dominant language detection job completed.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: The input data configuration that you supplied when you created the dominant language detection job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: The output data configuration that you supplied when you created the dominant language detection job.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: ' Configuration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your dominant language detection job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
      description: Provides information about a dominant language detection job.
    EndpointProperties:
      type: object
      properties:
        EndpointArn:
          $ref: '#/components/schemas/ComprehendEndpointArn'
          description: The Amazon Resource Number (ARN) of the endpoint.
        Status:
          $ref: '#/components/schemas/EndpointStatus'
          description: 'Specifies the status of the endpoint. Because the endpoint updates and creation are asynchronous, so customers will need to wait for the endpoint to be <code>Ready</code> status before making inference requests.'
        Message:
          $ref: '#/components/schemas/AnyLengthString'
          description: Specifies a reason for failure in cases of <code>Failed</code> status.
        ModelArn:
          $ref: '#/components/schemas/ComprehendModelArn'
          description: The Amazon Resource Number (ARN) of the model to which the endpoint is attached.
        DesiredInferenceUnits:
          $ref: '#/components/schemas/InferenceUnitsInteger'
          description: The desired number of inference units to be used by the model using this endpoint. Each inference unit represents of a throughput of 100 characters per second.
        CurrentInferenceUnits:
          $ref: '#/components/schemas/InferenceUnitsInteger'
          description: The number of inference units currently used by the model using this endpoint.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The creation date and time of the endpoint.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the endpoint was last modified.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the AWS identity and Access Management (IAM) role that grants Amazon Comprehend read access to trained custom models encrypted with a customer managed key (ModelKmsKeyId).
      description: Specifies information about the specified endpoint.
    EntitiesDetectionJobProperties:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier assigned to the entities detection job.
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The name that you assigned the entities detection job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'The current status of the entities detection job. If the status is <code>FAILED</code>, the <code>Message</code> field shows the reason for the failure.'
        Message:
          $ref: '#/components/schemas/AnyLengthString'
          description: A description of the status of a job.
        SubmitTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the entities detection job was submitted for processing.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the entities detection job completed
        EntityRecognizerArn:
          $ref: '#/components/schemas/EntityRecognizerArn'
          description: The Amazon Resource Name (ARN) that identifies the entity recognizer.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: The input data configuration that you supplied when you created the entities detection job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: 'The output data configuration that you supplied when you created the entities detection job. '
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the input documents.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: ' Configuration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your entity detection job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
      description: Provides information about an entities detection job.
    EntityRecognizerProperties:
      type: object
      properties:
        EntityRecognizerArn:
          $ref: '#/components/schemas/EntityRecognizerArn'
          description: The Amazon Resource Name (ARN) that identifies the entity recognizer.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: ' The language of the input documents. All documents must be in the same language. Only English ("en") is currently supported.'
        Status:
          $ref: '#/components/schemas/ModelStatus'
          description: Provides the status of the entity recognizer.
        Message:
          $ref: '#/components/schemas/AnyLengthString'
          description: ' A description of the status of the recognizer.'
        SubmitTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the recognizer was submitted for processing.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the recognizer creation completed.
        TrainingStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that training of the entity recognizer started.
        TrainingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that training of the entity recognizer was completed.
        InputDataConfig:
          $ref: '#/components/schemas/EntityRecognizerInputDataConfig'
          description: The input data properties of an entity recognizer.
        RecognizerMetadata:
          $ref: '#/components/schemas/EntityRecognizerMetadata'
          description: ' Provides information about an entity recognizer.'
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: ' The Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your input data.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: ' Configuration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your custom entity recognizer. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
        ModelKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt trained custom models. The ModelKmsKeyId can be either of the following formats: </p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
      description: Describes information about an entity recognizer.
    EventsDetectionJobProperties:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier assigned to the events detection job.
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The name you assigned the events detection job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: The current status of the events detection job.
        Message:
          $ref: '#/components/schemas/AnyLengthString'
          description: A description of the status of the events detection job.
        SubmitTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the events detection job was submitted for processing.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the events detection job completed.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: The input data configuration that you supplied when you created the events detection job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: The output data configuration that you supplied when you created the events detection job.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the input documents.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the AWS Identify and Access Management (IAM) role that grants Amazon Comprehend read access to your input data.
        TargetEventTypes:
          $ref: '#/components/schemas/TargetEventTypes'
          description: The types of events that are detected by the job.
      description: Provides information about an events detection job.
    KeyPhrasesDetectionJobProperties:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier assigned to the key phrases detection job.
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The name that you assigned the key phrases detection job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'The current status of the key phrases detection job. If the status is <code>FAILED</code>, the <code>Message</code> field shows the reason for the failure.'
        Message:
          $ref: '#/components/schemas/AnyLengthString'
          description: A description of the status of a job.
        SubmitTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the key phrases detection job was submitted for processing.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the key phrases detection job completed.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: The input data configuration that you supplied when you created the key phrases detection job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: The output data configuration that you supplied when you created the key phrases detection job.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the input documents.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: ' Configuration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your key phrases detection job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
      description: Provides information about a key phrases detection job.
    PiiEntitiesDetectionJobProperties:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier assigned to the PII entities detection job.
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The name that you assigned the PII entities detection job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'The current status of the PII entities detection job. If the status is <code>FAILED</code>, the <code>Message</code> field shows the reason for the failure.'
        Message:
          $ref: '#/components/schemas/AnyLengthString'
          description: A description of the status of a job.
        SubmitTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the PII entities detection job was submitted for processing.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the PII entities detection job completed.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: The input properties for a PII entities detection job.
        OutputDataConfig:
          $ref: '#/components/schemas/PiiOutputDataConfig'
          description: The output data configuration that you supplied when you created the PII entities detection job.
        RedactionConfig:
          $ref: '#/components/schemas/RedactionConfig'
          description: '<p>Provides configuration parameters for PII entity redaction.</p> <p>This parameter is required if you set the <code>Mode</code> parameter to <code>ONLY_REDACTION</code>. In that case, you must provide a <code>RedactionConfig</code> definition that includes the <code>PiiEntityTypes</code> parameter.</p>'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the input documents
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.
        Mode:
          $ref: '#/components/schemas/PiiEntitiesDetectionMode'
          description: Specifies whether the output provides the locations (offsets) of PII entities or a file in which PII entities are redacted.
      description: Provides information about a PII entities detection job.
    SentimentDetectionJobProperties:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier assigned to the sentiment detection job.
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The name that you assigned to the sentiment detection job
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'The current status of the sentiment detection job. If the status is <code>FAILED</code>, the <code>Messages</code> field shows the reason for the failure.'
        Message:
          $ref: '#/components/schemas/AnyLengthString'
          description: A description of the status of a job.
        SubmitTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the sentiment detection job was submitted for processing.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the sentiment detection job ended.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: The input data configuration that you supplied when you created the sentiment detection job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: The output data configuration that you supplied when you created the sentiment detection job.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the input documents.
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: ' Configuration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your sentiment detection job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
      description: Provides information about a sentiment detection job.
    TopicsDetectionJobProperties:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: The identifier assigned to the topic detection job.
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The name of the topic detection job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: 'The current status of the topic detection job. If the status is <code>Failed</code>, the reason for the failure is shown in the <code>Message</code> field.'
        Message:
          $ref: '#/components/schemas/AnyLengthString'
          description: A description for the status of a job.
        SubmitTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the topic detection job was submitted for processing.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the topic detection job was completed.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: The input data configuration supplied when you created the topic detection job.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: The output data configuration supplied when you created the topic detection job.
        NumberOfTopics:
          $ref: '#/components/schemas/Integer'
          description: 'The number of topics to detect supplied when you created the topic detection job. The default is 10. '
        DataAccessRoleArn:
          $ref: '#/components/schemas/IamRoleArn'
          description: 'The Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your job data. '
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'Configuration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your topic detection job. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. '
      description: Provides information about a topic detection job.
    EntityRecognizerEndpointArn:
      type: string
      pattern: 'arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer-endpoint/[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 256
    ListOfPiiEntities:
      type: array
      items:
        $ref: '#/components/schemas/PiiEntity'
    Float:
      type: number
      format: float
    DocumentClass:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the class.
        Score:
          $ref: '#/components/schemas/Float'
          description: The confidence score that Amazon Comprehend has this class correctly attributed.
      description: Specifies the class that categorizes the document being analyzed
    JobName:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
      minLength: 1
      maxLength: 256
    JobStatus:
      type: string
      enum:
        - SUBMITTED
        - IN_PROGRESS
        - COMPLETED
        - FAILED
        - STOP_REQUESTED
        - STOPPED
    Timestamp:
      type: string
      format: date-time
    DocumentClassificationJobFilter:
      type: object
      properties:
        JobName:
          $ref: '#/components/schemas/JobName'
          description: Filters on the name of the job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: Filters the list based on job status. Returns only jobs with the specified status.
        SubmitTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.'
        SubmitTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.'
      description: 'Provides information for filtering a list of document classification jobs. For more information, see the operation. You can provide only one filter parameter in each request.'
    InputDataConfig:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>The Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files. </p> <p>For example, if you use the URI <code>S3://bucketName/prefix</code>, if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.</p>'
        InputFormat:
          $ref: '#/components/schemas/InputFormat'
          description: '<p>Specifies how the text in an input file should be processed:</p> <ul> <li> <p> <code>ONE_DOC_PER_FILE</code> - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.</p> </li> <li> <p> <code>ONE_DOC_PER_LINE</code> - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.</p> </li> </ul>'
      description: The input properties for a topic detection job.
    OutputDataConfig:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>When you use the <code>OutputDataConfig</code> object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.</p> <p>When the topic detection job is finished, the service creates an output file in a directory specific to the job. The <code>S3Uri</code> field contains the location of the output file, called <code>output.tar.gz</code>. It is a compressed archive that contains the ouput of the operation.</p>'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:</p> <ul> <li> <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>KMS Key Alias: <code>"alias/ExampleAlias"</code> </p> </li> <li> <p>ARN of a KMS Key Alias: <code>"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"</code> </p> </li> </ul>'
      description: <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
    DocumentClassificationJobPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentClassificationJobProperties'
    DocumentClassifierAugmentedManifestsList:
      type: array
      items:
        $ref: '#/components/schemas/AugmentedManifestsListItem'
    DocumentClassifierDataFormat:
      type: string
      enum:
        - COMPREHEND_CSV
        - AUGMENTED_MANIFEST
    ModelStatus:
      type: string
      enum:
        - SUBMITTED
        - TRAINING
        - DELETING
        - STOP_REQUESTED
        - STOPPED
        - IN_ERROR
        - TRAINED
    DocumentClassifierFilter:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/ModelStatus'
          description: Filters the list of classifiers based on status.
        SubmitTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of classifiers based on the time that the classifier was submitted for processing. Returns only classifiers submitted before the specified time. Classifiers are returned in ascending order, oldest to newest.'
        SubmitTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of classifiers based on the time that the classifier was submitted for processing. Returns only classifiers submitted after the specified time. Classifiers are returned in descending order, newest to oldest.'
      description: 'Provides information for filtering a list of document classifiers. You can only specify one filtering parameter in a request. For more information, see the operation.'
    LabelDelimiter:
      type: string
      pattern: '^[ ~!@#$%^*\-_+=|\\:;\t>?/]$'
      minLength: 1
      maxLength: 1
    DocumentClassifierPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentClassifierProperties'
    DocumentLabel:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the label.
        Score:
          $ref: '#/components/schemas/Float'
          description: The confidence score that Amazon Comprehend has this label correctly attributed.
      description: Specifies one of the label or labels that categorize the document being analyzed.
    DominantLanguage:
      type: object
      properties:
        LanguageCode:
          $ref: '#/components/schemas/String'
          description: 'The RFC 5646 language code for the dominant language. For more information about RFC 5646, see <a href="https://tools.ietf.org/html/rfc5646">Tags for Identifying Languages</a> on the <i>IETF Tools</i> web site.'
        Score:
          $ref: '#/components/schemas/Float'
          description: The level of confidence that Amazon Comprehend has in the accuracy of the detection.
      description: Returns the code for the dominant language in the input text and the level of confidence that Amazon Comprehend has in the accuracy of the detection.
    DominantLanguageDetectionJobFilter:
      type: object
      properties:
        JobName:
          $ref: '#/components/schemas/JobName'
          description: Filters on the name of the job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: Filters the list of jobs based on job status. Returns only jobs with the specified status.
        SubmitTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.'
        SubmitTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.'
      description: 'Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.'
    DominantLanguageDetectionJobPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/DominantLanguageDetectionJobProperties'
    EndpointStatus:
      type: string
      enum:
        - CREATING
        - DELETING
        - FAILED
        - IN_SERVICE
        - UPDATING
    EndpointFilter:
      type: object
      properties:
        ModelArn:
          $ref: '#/components/schemas/ComprehendModelArn'
          description: The Amazon Resource Number (ARN) of the model to which the endpoint is attached.
        Status:
          $ref: '#/components/schemas/EndpointStatus'
          description: 'Specifies the status of the endpoint being returned. Possible values are: Creating, Ready, Updating, Deleting, Failed.'
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: Specifies a date before which the returned endpoint or endpoints were created.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: Specifies a date after which the returned endpoint or endpoints were created.
      description: 'The filter used to determine which endpoints are returned. You can filter jobs on their name, model, status, or the date and time that they were created. You can only set one filter at a time. '
    EndpointPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/EndpointProperties'
    EntitiesDetectionJobFilter:
      type: object
      properties:
        JobName:
          $ref: '#/components/schemas/JobName'
          description: Filters on the name of the job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: Filters the list of jobs based on job status. Returns only jobs with the specified status.
        SubmitTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.'
        SubmitTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.'
      description: 'Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.'
    EntitiesDetectionJobPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/EntitiesDetectionJobProperties'
    EntityType:
      type: string
      enum:
        - PERSON
        - LOCATION
        - ORGANIZATION
        - COMMERCIAL_ITEM
        - EVENT
        - DATE
        - QUANTITY
        - TITLE
        - OTHER
    Entity:
      type: object
      properties:
        Score:
          $ref: '#/components/schemas/Float'
          description: The level of confidence that Amazon Comprehend has in the accuracy of the detection.
        Type:
          $ref: '#/components/schemas/EntityType'
          description: The entity's type.
        Text:
          $ref: '#/components/schemas/String'
          description: The text of the entity.
        BeginOffset:
          $ref: '#/components/schemas/Integer'
          description: 'A character offset in the input text that shows where the entity begins (the first character is at position 0). The offset returns the position of each UTF-8 code point in the string. A <i>code point</i> is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point.'
        EndOffset:
          $ref: '#/components/schemas/Integer'
          description: 'A character offset in the input text that shows where the entity ends. The offset returns the position of each UTF-8 code point in the string. A <i>code point</i> is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point. '
      description: <p>Provides information about an entity. </p> <p> </p>
    PiiEntityType:
      type: string
      enum:
        - BANK_ACCOUNT_NUMBER
        - BANK_ROUTING
        - CREDIT_DEBIT_NUMBER
        - CREDIT_DEBIT_CVV
        - CREDIT_DEBIT_EXPIRY
        - PIN
        - EMAIL
        - ADDRESS
        - NAME
        - PHONE
        - SSN
        - DATE_TIME
        - PASSPORT_NUMBER
        - DRIVER_ID
        - URL
        - AGE
        - USERNAME
        - PASSWORD
        - AWS_ACCESS_KEY
        - AWS_SECRET_KEY
        - IP_ADDRESS
        - MAC_ADDRESS
        - ALL
    EntityLabel:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/PiiEntityType'
          description: The name of the label.
        Score:
          $ref: '#/components/schemas/Float'
          description: The level of confidence that Amazon Comprehend has in the accuracy of the detection.
      description: Specifies one of the label or labels that categorize the personally identifiable information (PII) entity being analyzed.
    EntityRecognizerAnnotations:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: ' Specifies the Amazon S3 location where the annotations for an entity recognizer are located. The URI must be in the same region as the API endpoint that you are calling.'
      description: Describes the annotations associated with a entity recognizer.
    EntityRecognizerAugmentedManifestsList:
      type: array
      items:
        $ref: '#/components/schemas/AugmentedManifestsListItem'
    EntityRecognizerDataFormat:
      type: string
      enum:
        - COMPREHEND_CSV
        - AUGMENTED_MANIFEST
    EntityRecognizerDocuments:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: ' Specifies the Amazon S3 location where the training documents for an entity recognizer are located. The URI must be in the same region as the API endpoint that you are calling.'
      description: Describes the training documents submitted with an entity recognizer.
    EntityRecognizerEntityList:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: Specifies the Amazon S3 location where the entity list is located. The URI must be in the same region as the API endpoint that you are calling.
      description: Describes the entity recognizer submitted with an entity recognizer.
    EntityRecognizerEvaluationMetrics:
      type: object
      properties:
        Precision:
          $ref: '#/components/schemas/Double'
          description: 'A measure of the usefulness of the recognizer results in the test data. High precision means that the recognizer returned substantially more relevant results than irrelevant ones. '
        Recall:
          $ref: '#/components/schemas/Double'
          description: A measure of how complete the recognizer results are for the test data. High recall means that the recognizer returned most of the relevant results.
        F1Score:
          $ref: '#/components/schemas/Double'
          description: 'A measure of how accurate the recognizer results are for the test data. It is derived from the <code>Precision</code> and <code>Recall</code> values. The <code>F1Score</code> is the harmonic average of the two scores. The highest score is 1, and the worst score is 0. '
      description: 'Detailed information about the accuracy of an entity recognizer. '
    EntityRecognizerFilter:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/ModelStatus'
          description: The status of an entity recognizer.
        SubmitTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of entities based on the time that the list was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in descending order, newest to oldest.'
        SubmitTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of entities based on the time that the list was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in ascending order, oldest to newest.'
      description: 'Provides information for filtering a list of entity recognizers. You can only specify one filtering parameter in a request. For more information, see the operation./&gt;'
    EntityTypesList:
      type: array
      items:
        $ref: '#/components/schemas/EntityTypesListItem'
    EntityRecognizerMetadataEntityTypesList:
      type: array
      items:
        $ref: '#/components/schemas/EntityRecognizerMetadataEntityTypesListItem'
    EntityRecognizerMetadata:
      type: object
      properties:
        NumberOfTrainedDocuments:
          $ref: '#/components/schemas/Integer'
          description: ' The number of documents in the input data that were used to train the entity recognizer. Typically this is 80 to 90 percent of the input documents.'
        NumberOfTestDocuments:
          $ref: '#/components/schemas/Integer'
          description: ' The number of documents in the input data that were used to test the entity recognizer. Typically this is 10 to 20 percent of the input documents.'
        EvaluationMetrics:
          $ref: '#/components/schemas/EntityRecognizerEvaluationMetrics'
          description: Detailed information about the accuracy of an entity recognizer.
        EntityTypes:
          $ref: '#/components/schemas/EntityRecognizerMetadataEntityTypesList'
          description: Entity types from the metadata of an entity recognizer.
      description: Detailed information about an entity recognizer.
    EntityRecognizerMetadataEntityTypesListItem:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/AnyLengthString'
          description: 'Type of entity from the list of entity types in the metadata of an entity recognizer. '
        EvaluationMetrics:
          $ref: '#/components/schemas/EntityTypesEvaluationMetrics'
          description: 'Detailed information about the accuracy of the entity recognizer for a specific item on the list of entity types. '
        NumberOfTrainMentions:
          $ref: '#/components/schemas/Integer'
          description: 'Indicates the number of times the given entity type was seen in the training data. '
      description: Individual item from the list of entity types in the metadata of an entity recognizer.
    EntityTypesEvaluationMetrics:
      type: object
      properties:
        Precision:
          $ref: '#/components/schemas/Double'
          description: 'A measure of the usefulness of the recognizer results for a specific entity type in the test data. High precision means that the recognizer returned substantially more relevant results than irrelevant ones. '
        Recall:
          $ref: '#/components/schemas/Double'
          description: A measure of how complete the recognizer results are for a specific entity type in the test data. High recall means that the recognizer returned most of the relevant results.
        F1Score:
          $ref: '#/components/schemas/Double'
          description: 'A measure of how accurate the recognizer results are for a specific entity type in the test data. It is derived from the <code>Precision</code> and <code>Recall</code> values. The <code>F1Score</code> is the harmonic average of the two scores. The highest score is 1, and the worst score is 0. '
      description: 'Detailed information about the accuracy of an entity recognizer for a specific entity type. '
    EntityRecognizerPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/EntityRecognizerProperties'
    EntityTypeName:
      type: string
      pattern: '^(?:(?!\\n+|\\t+|\\r+|[\r\t\n,]).)+$'
      maxLength: 64
    EntityTypesListItem:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: '#/components/schemas/EntityTypeName'
          description: '<p>An entity type within a labeled training dataset that Amazon Comprehend uses to train a custom entity recognizer.</p> <p>Entity types must not contain the following invalid characters: \n (line break), \\n (escaped line break, \r (carriage return), \\r (escaped carriage return), \t (tab), \\t (escaped tab), space, and , (comma).</p>'
      description: An entity type within a labeled training dataset that Amazon Comprehend uses to train a custom entity recognizer.
    EventTypeString:
      type: string
      pattern: '[A-Z_]*'
      minLength: 1
      maxLength: 40
    EventsDetectionJobFilter:
      type: object
      properties:
        JobName:
          $ref: '#/components/schemas/JobName'
          description: Filters on the name of the events detection job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: Filters the list of jobs based on job status. Returns only jobs with the specified status.
        SubmitTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.'
        SubmitTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.'
      description: Provides information for filtering a list of event detection jobs.
    TargetEventTypes:
      type: array
      items:
        $ref: '#/components/schemas/EventTypeString'
      minItems: 1
    EventsDetectionJobPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/EventsDetectionJobProperties'
    InputFormat:
      type: string
      enum:
        - ONE_DOC_PER_FILE
        - ONE_DOC_PER_LINE
    KeyPhrase:
      type: object
      properties:
        Score:
          $ref: '#/components/schemas/Float'
          description: The level of confidence that Amazon Comprehend has in the accuracy of the detection.
        Text:
          $ref: '#/components/schemas/String'
          description: The text of a key noun phrase.
        BeginOffset:
          $ref: '#/components/schemas/Integer'
          description: 'A character offset in the input text that shows where the key phrase begins (the first character is at position 0). The offset returns the position of each UTF-8 code point in the string. A <i>code point</i> is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point.'
        EndOffset:
          $ref: '#/components/schemas/Integer'
          description: 'A character offset in the input text where the key phrase ends. The offset returns the position of each UTF-8 code point in the string. A <code>code point</code> is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point.'
      description: Describes a key noun phrase.
    KeyPhrasesDetectionJobFilter:
      type: object
      properties:
        JobName:
          $ref: '#/components/schemas/JobName'
          description: Filters on the name of the job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: Filters the list of jobs based on job status. Returns only jobs with the specified status.
        SubmitTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.'
        SubmitTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.'
      description: 'Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.'
    KeyPhrasesDetectionJobPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/KeyPhrasesDetectionJobProperties'
    MaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 500
    PiiEntity:
      type: object
      properties:
        Score:
          $ref: '#/components/schemas/Float'
          description: The level of confidence that Amazon Comprehend has in the accuracy of the detection.
        Type:
          $ref: '#/components/schemas/PiiEntityType'
          description: The entity's type.
        BeginOffset:
          $ref: '#/components/schemas/Integer'
          description: 'A character offset in the input text that shows where the PII entity begins (the first character is at position 0). The offset returns the position of each UTF-8 code point in the string. A <i>code point</i> is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point.'
        EndOffset:
          $ref: '#/components/schemas/Integer'
          description: 'A character offset in the input text that shows where the PII entity ends. The offset returns the position of each UTF-8 code point in the string. A <i>code point</i> is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point.'
      description: Provides information about a PII entity.
    ListOfPiiEntityTypes:
      type: array
      items:
        $ref: '#/components/schemas/PiiEntityType'
    SyntaxToken:
      type: object
      properties:
        TokenId:
          $ref: '#/components/schemas/Integer'
          description: A unique identifier for a token.
        Text:
          $ref: '#/components/schemas/String'
          description: The word that was recognized in the source text.
        BeginOffset:
          $ref: '#/components/schemas/Integer'
          description: The zero-based offset from the beginning of the source text to the first character in the word.
        EndOffset:
          $ref: '#/components/schemas/Integer'
          description: The zero-based offset from the beginning of the source text to the last character in the word.
        PartOfSpeech:
          $ref: '#/components/schemas/PartOfSpeechTag'
          description: 'Provides the part of speech label and the confidence level that Amazon Comprehend has that the part of speech was correctly identified. For more information, see <a>how-syntax</a>.'
      description: Represents a work in the input text that was recognized and assigned a part of speech. There is one syntax token record for each word in the source text.
    PiiEntitiesDetectionJobFilter:
      type: object
      properties:
        JobName:
          $ref: '#/components/schemas/JobName'
          description: Filters on the name of the job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: Filters the list of jobs based on job status. Returns only jobs with the specified status.
        SubmitTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.'
        SubmitTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.'
      description: Provides information for filtering a list of PII entity detection jobs.
    PiiEntitiesDetectionJobPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/PiiEntitiesDetectionJobProperties'
    SentimentDetectionJobFilter:
      type: object
      properties:
        JobName:
          $ref: '#/components/schemas/JobName'
          description: Filters on the name of the job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: Filters the list of jobs based on job status. Returns only jobs with the specified status.
        SubmitTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.'
        SubmitTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.'
      description: 'Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.'
    SentimentDetectionJobPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/SentimentDetectionJobProperties'
    TopicsDetectionJobFilter:
      type: object
      properties:
        JobName:
          $ref: '#/components/schemas/JobName'
          description: <p/>
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: Filters the list of topic detection jobs based on job status. Returns only jobs with the specified status.
        SubmitTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Only returns jobs submitted before the specified time. Jobs are returned in descending order, newest to oldest.'
        SubmitTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Filters the list of jobs based on the time that the job was submitted for processing. Only returns jobs submitted after the specified time. Jobs are returned in ascending order, oldest to newest.'
      description: 'Provides information for filtering topic detection jobs. For more information, see .'
    TopicsDetectionJobPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/TopicsDetectionJobProperties'
    MaskCharacter:
      type: string
      pattern: '[!@#$%&*]'
      minLength: 1
      maxLength: 1
    NumberOfTopicsInteger:
      type: integer
      minimum: 1
      maximum: 100
    PartOfSpeechTagType:
      type: string
      enum:
        - ADJ
        - ADP
        - ADV
        - AUX
        - CONJ
        - CCONJ
        - DET
        - INTJ
        - NOUN
        - NUM
        - O
        - PART
        - PRON
        - PROPN
        - PUNCT
        - SCONJ
        - SYM
        - VERB
    PartOfSpeechTag:
      type: object
      properties:
        Tag:
          $ref: '#/components/schemas/PartOfSpeechTagType'
          description: Identifies the part of speech that the token represents.
        Score:
          $ref: '#/components/schemas/Float'
          description: The confidence that Amazon Comprehend has that the part of speech was correctly identified.
      description: 'Identifies the part of speech represented by the token and gives the confidence that Amazon Comprehend has that the part of speech was correctly identified. For more information about the parts of speech that Amazon Comprehend can identify, see <a>how-syntax</a>.'
    PiiOutputDataConfig:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: 'When you use the <code>PiiOutputDataConfig</code> object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. '
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job.
      description: Provides configuration parameters for the output of PII entity detection jobs.
    RedactionConfig:
      type: object
      properties:
        PiiEntityTypes:
          $ref: '#/components/schemas/ListOfPiiEntityTypes'
          description: An array of the types of PII entities that Amazon Comprehend detects in the input text for your request.
        MaskMode:
          $ref: '#/components/schemas/PiiEntitiesDetectionMaskMode'
          description: Specifies whether the PII entity is redacted with the mask character or the entity type.
        MaskCharacter:
          $ref: '#/components/schemas/MaskCharacter'
          description: A character that replaces each character in the redacted PII entity.
      description: Provides configuration parameters for PII entity redaction.
    PiiEntitiesDetectionMode:
      type: string
      enum:
        - ONLY_REDACTION
        - ONLY_OFFSETS
    PiiEntitiesDetectionMaskMode:
      type: string
      enum:
        - MASK
        - REPLACE_WITH_PII_ENTITY_TYPE
    SecurityGroupId:
      type: string
      pattern: '[-0-9a-zA-Z]+'
      minLength: 1
      maxLength: 32
    SecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      minItems: 1
      maxItems: 5
    SubnetId:
      type: string
      pattern: '[-0-9a-zA-Z]+'
      minLength: 1
      maxLength: 32
    Subnets:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
      minItems: 1
      maxItems: 16
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: 'The initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.” '
        Value:
          $ref: '#/components/schemas/TagValue'
          description: ' The second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department. '
      description: 'A key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department. '
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
security:
  - hmac: []
