openapi: 3.0.0
info:
  version: '2015-05-28'
  x-release: v4
  title: AWS IoT
  description: '<fullname>AWS IoT</fullname> <p>AWS IoT provides secure, bi-directional communication between Internet-connected devices (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. You can discover your custom IoT-Data endpoint to communicate with, configure rules for data processing and integration with other services, organize resources associated with each device (Registry), configure logging, and create and manage policies and credentials to authenticate devices.</p> <p>The service endpoints that expose this API are listed in <a href="https://docs.aws.amazon.com/general/latest/gr/iot-core.html">AWS IoT Core Endpoints and Quotas</a>. You must use the endpoint for the region that has the resources you want to access.</p> <p>The service name used by <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">AWS Signature Version 4</a> to sign the request is: <i>execute-api</i>.</p> <p>For more information about how AWS IoT works, see the <a href="https://docs.aws.amazon.com/iot/latest/developerguide/aws-iot-how-it-works.html">Developer Guide</a>.</p> <p>For information about how to use the credentials provider for AWS IoT, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/authorizing-direct-aws.html">Authorizing Direct Calls to AWS Services</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: iot
  x-aws-signingName: execute-api
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot-2015-05-28.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iot/'
servers:
  - url: 'http://iot.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT multi-region endpoint
  - url: 'https://iot.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT multi-region endpoint
  - url: 'http://iot.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://iot.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/accept-certificate-transfer/{certificateId}':
    patch:
      operationId: AcceptCertificateTransfer
      description: '<p>Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: TransferAlreadyCompletedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferAlreadyCompletedException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          schema:
            type: string
            pattern: '(0x)?[a-fA-F0-9]+'
            minLength: 64
            maxLength: 64
        - name: setAsActive
          in: query
          required: false
          description: Specifies whether the certificate is active.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /billing-groups/addThingToBillingGroup:
    put:
      operationId: AddThingToBillingGroup
      description: Adds a thing to a billing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddThingToBillingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                billingGroupName:
                  description: The name of the billing group.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                billingGroupArn:
                  description: The ARN of the billing group.
                  type: string
                thingName:
                  description: The name of the thing to be added to the billing group.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                thingArn:
                  description: The ARN of the thing to be added to the billing group.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /thing-groups/addThingToThingGroup:
    put:
      operationId: AddThingToThingGroup
      description: Adds a thing to a thing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddThingToThingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingGroupName:
                  description: The name of the group to which you are adding a thing.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                thingGroupArn:
                  description: The ARN of the group to which you are adding a thing.
                  type: string
                thingName:
                  description: The name of the thing to add to a group.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                thingArn:
                  description: The ARN of the thing to add to a group.
                  type: string
                overrideDynamicGroups:
                  description: 'Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/jobs/{jobId}/targets':
    post:
      operationId: AssociateTargetsWithJob
      description: '<p>Associates a group with a continuous job. The following criteria must be met: </p> <ul> <li> <p>The job must have been created with the <code>targetSelection</code> field set to "CONTINUOUS".</p> </li> <li> <p>The job status must currently be "IN_PROGRESS".</p> </li> <li> <p>The total number of targets associated with a job must not exceed 100.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateTargetsWithJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier you assigned to this job when it was created.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
        - name: namespaceId
          in: query
          required: false
          description: '<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, AWS IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>'
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targets
              properties:
                targets:
                  description: A list of thing group ARNs that define the targets of the job.
                  type: array
                  items:
                    $ref: '#/components/schemas/TargetArn'
                  minItems: 1
                comment:
                  description: An optional comment string describing why the job was associated with the targets.
                  type: string
                  pattern: '[^\p{C}]+'
                  maxLength: 2028
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/target-policies/{policyName}':
    put:
      operationId: AttachPolicy
      description: Attaches the specified policy to the specified principal (certificate or other credential).
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The name of the policy to attach.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - target
              properties:
                target:
                  description: 'The <a href="https://docs.aws.amazon.com/iot/latest/developerguide/security-iam.html">identity</a> to which the policy is attached. For example, a thing group or a certificate.'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DetachPolicy
      description: Detaches a policy from the specified target.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy to detach.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - target
              properties:
                target:
                  description: The target from which the policy will be detached.
                  type: string
  '/principal-policies/{policyName}#x-amzn-iot-principal':
    put:
      deprecated: true
      operationId: AttachPrincipalPolicy
      description: '<p>Attaches the specified policy to the specified principal (certificate or other credential).</p> <p> <b>Note:</b> This API is deprecated. Please use <a>AttachPolicy</a> instead.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy name.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
        - name: x-amzn-iot-principal
          in: header
          required: true
          description: 'The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      deprecated: true
      operationId: DetachPrincipalPolicy
      description: '<p>Removes the specified policy from the specified certificate.</p> <p> <b>Note:</b> This API is deprecated. Please use <a>DetachPolicy</a> instead.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The name of the policy to detach.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
        - name: x-amzn-iot-principal
          in: header
          required: true
          description: '<p>The principal.</p> <p>Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>'
          schema:
            type: string
  '/security-profiles/{securityProfileName}/targets#securityProfileTargetArn':
    put:
      operationId: AttachSecurityProfile
      description: Associates a Device Defender security profile with a thing group or this account. Each thing group or account can have up to five security profiles associated with it.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The security profile that is attached.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: securityProfileTargetArn
          in: query
          required: true
          description: The ARN of the target (thing group) to which the security profile is attached.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DetachSecurityProfile
      description: Disassociates a Device Defender security profile from a thing group or from this account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The security profile that is detached.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: securityProfileTargetArn
          in: query
          required: true
          description: The ARN of the thing group from which the security profile is detached.
          schema:
            type: string
  '/things/{thingName}/principals#x-amzn-principal':
    put:
      operationId: AttachThingPrincipal
      description: 'Attaches the specified principal to the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachThingPrincipalResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: x-amzn-principal
          in: header
          required: true
          description: 'The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DetachThingPrincipal
      description: '<p>Detaches the specified principal from the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.</p> <note> <p>This call is asynchronous. It might take several seconds for the detachment to propagate.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachThingPrincipalResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: x-amzn-principal
          in: header
          required: true
          description: 'If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.'
          schema:
            type: string
  '/audit/mitigationactions/tasks/{taskId}/cancel':
    put:
      operationId: CancelAuditMitigationActionsTask
      description: 'Cancels a mitigation action task that is in progress. If the task is not in progress, an InvalidRequestException occurs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelAuditMitigationActionsTaskResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: 'The unique identifier for the task that you want to cancel. '
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/audit/tasks/{taskId}/cancel':
    put:
      operationId: CancelAuditTask
      description: 'Cancels an audit that is in progress. The audit can be either scheduled or on demand. If the audit isn''t in progress, an "InvalidRequestException" occurs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelAuditTaskResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the audit you want to cancel. You can only cancel an audit that is "IN_PROGRESS".
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-]+'
            minLength: 1
            maxLength: 40
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/cancel-certificate-transfer/{certificateId}':
    patch:
      operationId: CancelCertificateTransfer
      description: '<p>Cancels a pending transfer for the specified certificate.</p> <p> <b>Note</b> Only the transfer source account can use this operation to cancel a transfer. (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer, AWS IoT returns the certificate to the source account in the INACTIVE state. After the destination account has accepted the transfer, the transfer cannot be cancelled.</p> <p>After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: TransferAlreadyCompletedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferAlreadyCompletedException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          schema:
            type: string
            pattern: '(0x)?[a-fA-F0-9]+'
            minLength: 64
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/detect/mitigationactions/tasks/{taskId}/cancel':
    put:
      operationId: CancelDetectMitigationActionsTask
      description: ' Cancels a Device Defender ML Detect mitigation action. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelDetectMitigationActionsTaskResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: ' The unique identifier of the task. '
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/jobs/{jobId}/cancel':
    put:
      operationId: CancelJob
      description: Cancels a job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier you assigned to this job when it was created.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
        - name: force
          in: query
          required: false
          description: '<p>(Optional) If <code>true</code> job executions with status "IN_PROGRESS" and "QUEUED" are canceled, otherwise only job executions with status "QUEUED" are canceled. The default is <code>false</code>.</p> <p>Canceling a job which is "IN_PROGRESS", will cause a device which is executing the job to be unable to update the job execution status. Use caution and ensure that each device executing a job which is canceled is able to recover to a valid state.</p>'
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reasonCode:
                  description: (Optional)A reason code string that explains why the job was canceled.
                  type: string
                  pattern: '[\p{Upper}\p{Digit}_]+'
                  maxLength: 128
                comment:
                  description: An optional comment string describing why the job was canceled.
                  type: string
                  pattern: '[^\p{C}]+'
                  maxLength: 2028
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/jobs/{jobId}/cancel':
    put:
      operationId: CancelJobExecution
      description: Cancels the execution of a job for a given thing.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidStateTransitionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateTransitionException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The ID of the job to be canceled.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
        - name: thingName
          in: path
          required: true
          description: The name of the thing whose execution of the job will be canceled.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: force
          in: query
          required: false
          description: '<p>(Optional) If <code>true</code> the job execution will be canceled if it has status IN_PROGRESS or QUEUED, otherwise the job execution will be canceled only if it has status QUEUED. If you attempt to cancel a job execution that is IN_PROGRESS, and you do not set <code>force</code> to <code>true</code>, then an <code>InvalidStateTransitionException</code> will be thrown. The default is <code>false</code>.</p> <p>Canceling a job execution which is "IN_PROGRESS", will cause the device to be unable to update the job execution status. Use caution and ensure that the device is able to recover to a valid state.</p>'
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                expectedVersion:
                  description: '(Optional) The expected current version of the job execution. Each time you update the job execution, its version is incremented. If the version of the job execution stored in Jobs does not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that contains the current job execution status data is returned. (This makes it unnecessary to perform a separate DescribeJobExecution request in order to obtain the job execution status data.)'
                  type: integer
                statusDetails:
                  description: 'A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged. You can specify at most 10 name/value pairs.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/DetailsValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /default-authorizer:
    delete:
      operationId: ClearDefaultAuthorizer
      description: Clears the default authorizer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearDefaultAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeDefaultAuthorizer
      description: Describes the default authorizer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDefaultAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
    post:
      operationId: SetDefaultAuthorizer
      description: Sets the default authorizer. This will be used if a websocket connection is made without specifying an authorizer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetDefaultAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - authorizerName
              properties:
                authorizerName:
                  description: The authorizer name.
                  type: string
                  pattern: '[\w=,@-]+'
                  minLength: 1
                  maxLength: 128
  '/confirmdestination/{confirmationToken}':
    get:
      operationId: ConfirmTopicRuleDestination
      description: 'Confirms a topic rule destination. When you create a rule requiring a destination, AWS IoT sends a confirmation message to the endpoint or base address you specify. The message includes a token which you pass back when calling <code>ConfirmTopicRuleDestination</code> to confirm that you own or have access to the endpoint.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmTopicRuleDestinationResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
      parameters:
        - name: confirmationToken
          in: path
          required: true
          description: The token used to confirm ownership or access to the topic rule confirmation URL.
          schema:
            type: string
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /audit/suppressions/create:
    post:
      operationId: CreateAuditSuppression
      description: ' Creates a Device Defender audit suppression. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuditSuppressionResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - checkName
                - resourceIdentifier
                - clientRequestToken
              properties:
                checkName:
                  description: 'An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
                  type: string
                resourceIdentifier:
                  description: Information that identifies the noncompliant resource.
                  type: object
                  properties:
                    deviceCertificateId:
                      $ref: '#/components/schemas/CertificateId'
                      description: The ID of the certificate attached to the resource.
                    caCertificateId:
                      $ref: '#/components/schemas/CertificateId'
                      description: The ID of the CA certificate used to authorize the certificate.
                    cognitoIdentityPoolId:
                      $ref: '#/components/schemas/CognitoIdentityPoolId'
                      description: The ID of the Amazon Cognito identity pool.
                    clientId:
                      $ref: '#/components/schemas/ClientId'
                      description: The client ID.
                    policyVersionIdentifier:
                      $ref: '#/components/schemas/PolicyVersionIdentifier'
                      description: The version of the policy associated with the resource.
                    account:
                      $ref: '#/components/schemas/AwsAccountId'
                      description: The account with which the resource is associated.
                    iamRoleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: The ARN of the IAM role that has overly permissive actions.
                    roleAliasArn:
                      $ref: '#/components/schemas/RoleAliasArn'
                      description: The ARN of the role alias that has overly permissive actions.
                expirationDate:
                  description: ' The epoch timestamp in seconds at which this suppression expires. '
                  type: string
                  format: date-time
                suppressIndefinitely:
                  description: ' Indicates whether a suppression should exist indefinitely or not. '
                  type: boolean
                description:
                  description: ' The description of the audit suppression. '
                  type: string
                  pattern: '[\p{Graph}\x20]*'
                  maxLength: 1000
                clientRequestToken:
                  description: ' The epoch timestamp in seconds at which this suppression expires. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/authorizer/{authorizerName}':
    post:
      operationId: CreateAuthorizer
      description: Creates an authorizer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthorizerResponse'
        '480':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: authorizerName
          in: path
          required: true
          description: The authorizer name.
          schema:
            type: string
            pattern: '[\w=,@-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - authorizerFunctionArn
              properties:
                authorizerFunctionArn:
                  description: The ARN of the authorizer's Lambda function.
                  type: string
                  maxLength: 2048
                tokenKeyName:
                  description: The name of the token key used to extract the token from the HTTP headers.
                  type: string
                  pattern: '[a-zA-Z0-9_-]+'
                  minLength: 1
                  maxLength: 128
                tokenSigningPublicKeys:
                  description: The public keys used to verify the digital signature returned by your custom authentication service.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/KeyValue'
                status:
                  description: The status of the create authorizer request.
                  type: string
                  enum:
                    - ACTIVE
                    - INACTIVE
                tags:
                  description: '<p>Metadata which can be used to manage the custom authorizer.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                signingDisabled:
                  description: Specifies whether AWS IoT validates the token signature in an authorization request.
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteAuthorizer
      description: Deletes an authorizer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAuthorizerResponse'
        '480':
          description: DeleteConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: authorizerName
          in: path
          required: true
          description: The name of the authorizer to delete.
          schema:
            type: string
            pattern: '[\w=,@-]+'
            minLength: 1
            maxLength: 128
    get:
      operationId: DescribeAuthorizer
      description: Describes an authorizer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: authorizerName
          in: path
          required: true
          description: The name of the authorizer to describe.
          schema:
            type: string
            pattern: '[\w=,@-]+'
            minLength: 1
            maxLength: 128
    put:
      operationId: UpdateAuthorizer
      description: Updates an authorizer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: authorizerName
          in: path
          required: true
          description: The authorizer name.
          schema:
            type: string
            pattern: '[\w=,@-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorizerFunctionArn:
                  description: The ARN of the authorizer's Lambda function.
                  type: string
                  maxLength: 2048
                tokenKeyName:
                  description: 'The key used to extract the token from the HTTP headers. '
                  type: string
                  pattern: '[a-zA-Z0-9_-]+'
                  minLength: 1
                  maxLength: 128
                tokenSigningPublicKeys:
                  description: The public keys used to verify the token signature.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/KeyValue'
                status:
                  description: The status of the update authorizer request.
                  type: string
                  enum:
                    - ACTIVE
                    - INACTIVE
  '/billing-groups/{billingGroupName}':
    post:
      operationId: CreateBillingGroup
      description: Creates a billing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBillingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: billingGroupName
          in: path
          required: true
          description: The name you wish to give to the billing group.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                billingGroupProperties:
                  description: The properties of a billing group.
                  type: object
                  properties:
                    billingGroupDescription:
                      $ref: '#/components/schemas/BillingGroupDescription'
                      description: The description of the billing group.
                tags:
                  description: Metadata which can be used to manage the billing group.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteBillingGroup
      description: Deletes the billing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBillingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: billingGroupName
          in: path
          required: true
          description: The name of the billing group.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: expectedVersion
          in: query
          required: false
          description: 'The expected version of the billing group. If the version of the billing group does not match the expected version specified in the request, the <code>DeleteBillingGroup</code> request is rejected with a <code>VersionConflictException</code>.'
          schema:
            type: integer
    get:
      operationId: DescribeBillingGroup
      description: Returns information about a billing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBillingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: billingGroupName
          in: path
          required: true
          description: The name of the billing group.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    patch:
      operationId: UpdateBillingGroup
      description: Updates information about the billing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBillingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: billingGroupName
          in: path
          required: true
          description: The name of the billing group.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - billingGroupProperties
              properties:
                billingGroupProperties:
                  description: The properties of a billing group.
                  type: object
                  properties:
                    billingGroupDescription:
                      $ref: '#/components/schemas/BillingGroupDescription'
                      description: The description of the billing group.
                expectedVersion:
                  description: 'The expected version of the billing group. If the version of the billing group does not match the expected version specified in the request, the <code>UpdateBillingGroup</code> request is rejected with a <code>VersionConflictException</code>.'
                  type: integer
  /certificates:
    post:
      operationId: CreateCertificateFromCsr
      description: '<p>Creates an X.509 certificate using the specified certificate signing request.</p> <p> <b>Note:</b> The CSR must include a public key that is either an RSA key with a length of at least 2048 bits or an ECC key from NIST P-256 or NIST P-384 curves. </p> <p> <b>Note:</b> Reusing the same certificate signing request (CSR) results in a distinct certificate.</p> <p>You can create multiple certificates in a batch by creating a directory, copying multiple .csr files into that directory, and then specifying that directory on the command line. The following commands show how to create a batch of certificates given a batch of CSRs.</p> <p>Assuming a set of CSRs are located inside of the directory my-csr-directory:</p> <p>On Linux and OS X, the command is:</p> <p>$ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}</p> <p>This command lists all of the CSRs in my-csr-directory and pipes each CSR file name to the aws iot create-certificate-from-csr AWS CLI command to create a certificate for the corresponding CSR.</p> <p>The aws iot create-certificate-from-csr part of the command can also be run in parallel to speed up the certificate creation process:</p> <p>$ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}</p> <p>On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory is:</p> <p>&gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/$_}</p> <p>On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory is:</p> <p>&gt; forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr --certificate-signing-request file://@path"</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCertificateFromCsrResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: setAsActive
          in: query
          required: false
          description: Specifies whether the certificate is active.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificateSigningRequest
              properties:
                certificateSigningRequest:
                  description: The certificate signing request (CSR).
                  type: string
                  minLength: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListCertificates
      description: <p>Lists the certificates registered in your AWS account.</p> <p>The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificatesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/]+={0,2}'
            maxLength: 1024
        - name: isAscendingOrder
          in: query
          required: false
          description: 'Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.'
          schema:
            type: boolean
  '/custom-metric/{metricName}':
    post:
      operationId: CreateCustomMetric
      description: ' Use this API to define a Custom Metric published by your devices to Device Defender. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomMetricResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: metricName
          in: path
          required: true
          description: ' The name of the custom metric. This will be used in the metric report submitted from the device/thing. Shouldn''t begin with <code>aws:</code>. Cannot be updated once defined.'
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - metricType
                - clientRequestToken
              properties:
                displayName:
                  description: ' Field represents a friendly name in the console for the custom metric; it doesn''t have to be unique. Don''t use this name as the metric identifier in the device metric report. Can be updated once defined.'
                  type: string
                  pattern: '[\p{Graph}\x20]*'
                  maxLength: 128
                metricType:
                  description: ' The type of the custom metric. Types include <code>string-list</code>, <code>ip-address-list</code>, <code>number-list</code>, and <code>number</code>. '
                  type: string
                  enum:
                    - string-list
                    - ip-address-list
                    - number-list
                    - number
                tags:
                  description: ' Metadata that can be used to manage the custom metric. '
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                clientRequestToken:
                  description: 'Each custom metric must have a unique client request token. If you try to create a new custom metric that already exists with a different token, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteCustomMetric
      description: '<note> <p>Before you can delete a custom metric, you must first remove the custom metric from all security profiles it''s a part of. The security profile associated with the custom metric can be found using the <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_ListSecurityProfiles.html">ListSecurityProfiles</a> API with <code>metricName</code> set to your custom metric name.</p> </note> <p> Deletes a Device Defender detect custom metric. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomMetricResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: metricName
          in: path
          required: true
          description: ' The name of the custom metric. '
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    get:
      operationId: DescribeCustomMetric
      description: ' Gets information about a Device Defender detect custom metric. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCustomMetricResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: metricName
          in: path
          required: true
          description: ' The name of the custom metric. '
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    patch:
      operationId: UpdateCustomMetric
      description: 'Updates a Device Defender detect custom metric. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomMetricResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: metricName
          in: path
          required: true
          description: ' The name of the custom metric. Cannot be updated. '
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - displayName
              properties:
                displayName:
                  description: ' Field represents a friendly name in the console for the custom metric, it doesn''t have to be unique. Don''t use this name as the metric identifier in the device metric report. Can be updated. '
                  type: string
                  pattern: '[\p{Graph}\x20]*'
                  maxLength: 128
  '/dimensions/{name}':
    post:
      operationId: CreateDimension
      description: 'Create a dimension that you can use to limit the scope of a metric used in a security profile for AWS IoT Device Defender. For example, using a <code>TOPIC_FILTER</code> dimension, you can narrow down the scope of the metric only to MQTT topics whose name match the pattern specified in the dimension.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDimensionResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: name
          in: path
          required: true
          description: A unique identifier for the dimension. Choose something that describes the type and value to make it easy to remember what it does.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - stringValues
                - clientRequestToken
              properties:
                type:
                  description: 'Specifies the type of dimension. Supported types: <code>TOPIC_FILTER.</code> '
                  type: string
                  enum:
                    - TOPIC_FILTER
                stringValues:
                  description: 'Specifies the value or list of values for the dimension. For <code>TOPIC_FILTER</code> dimensions, this is a pattern used to match the MQTT topic (for example, "admin/#").'
                  type: array
                  items:
                    $ref: '#/components/schemas/DimensionStringValue'
                  minItems: 1
                  maxItems: 100
                tags:
                  description: Metadata that can be used to manage the dimension.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                clientRequestToken:
                  description: 'Each dimension must have a unique client request token. If you try to create a new dimension with the same token as a dimension that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.'
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteDimension
      description: Removes the specified dimension from your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDimensionResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: name
          in: path
          required: true
          description: The unique identifier for the dimension that you want to delete.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    get:
      operationId: DescribeDimension
      description: Provides details about a dimension that is defined in your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDimensionResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: name
          in: path
          required: true
          description: The unique identifier for the dimension.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    patch:
      operationId: UpdateDimension
      description: Updates the definition for a dimension. You cannot change the type of a dimension after it is created (you can delete it and recreate it).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDimensionResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: name
          in: path
          required: true
          description: A unique identifier for the dimension. Choose something that describes the type and value to make it easy to remember what it does.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - stringValues
              properties:
                stringValues:
                  description: 'Specifies the value or list of values for the dimension. For <code>TOPIC_FILTER</code> dimensions, this is a pattern used to match the MQTT topic (for example, "admin/#").'
                  type: array
                  items:
                    $ref: '#/components/schemas/DimensionStringValue'
                  minItems: 1
                  maxItems: 100
  '/domainConfigurations/{domainConfigurationName}':
    post:
      operationId: CreateDomainConfiguration
      description: Creates a domain configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainConfigurationResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: CertificateValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '486':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '487':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: domainConfigurationName
          in: path
          required: true
          description: The name of the domain configuration. This value must be unique to a region.
          schema:
            type: string
            pattern: '[\w.-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domainName:
                  description: The name of the domain.
                  type: string
                  minLength: 1
                  maxLength: 253
                serverCertificateArns:
                  description: The ARNs of the certificates that AWS IoT passes to the device during the TLS handshake. Currently you can specify only one certificate ARN. This value is not required for AWS-managed domains.
                  type: array
                  items:
                    $ref: '#/components/schemas/AcmCertificateArn'
                  minItems: 0
                  maxItems: 1
                validationCertificateArn:
                  description: The certificate used to validate the server certificate and prove domain name ownership. This certificate must be signed by a public certificate authority. This value is not required for AWS-managed domains.
                  type: string
                  pattern: 'arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\d{1}:\d{12}:certificate/[a-zA-Z0-9/-]+'
                  minLength: 1
                  maxLength: 2048
                authorizerConfig:
                  description: An object that specifies the authorization service for a domain.
                  type: object
                  properties:
                    defaultAuthorizerName:
                      $ref: '#/components/schemas/AuthorizerName'
                      description: The name of the authorization service for a domain configuration.
                    allowAuthorizerOverride:
                      $ref: '#/components/schemas/AllowAuthorizerOverride'
                      description: A Boolean that specifies whether the domain configuration's authorization service can be overridden.
                serviceType:
                  description: <p>The type of service delivered by the endpoint.</p> <note> <p>AWS IoT Core currently supports only the <code>DATA</code> service type.</p> </note>
                  type: string
                  enum:
                    - DATA
                    - CREDENTIAL_PROVIDER
                    - JOBS
                tags:
                  description: '<p>Metadata which can be used to manage the domain configuration.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteDomainConfiguration
      description: Deletes the specified domain configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDomainConfigurationResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters:
        - name: domainConfigurationName
          in: path
          required: true
          description: The name of the domain configuration to be deleted.
          schema:
            type: string
            pattern: '[\w.-]+'
            minLength: 1
            maxLength: 128
    get:
      operationId: DescribeDomainConfiguration
      description: Gets summary information about a domain configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainConfigurationResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: domainConfigurationName
          in: path
          required: true
          description: The name of the domain configuration.
          schema:
            type: string
            pattern: '[\w.:-]+'
            minLength: 1
            maxLength: 128
    put:
      operationId: UpdateDomainConfiguration
      description: Updates values stored in the domain configuration. Domain configurations for default endpoints can't be updated.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainConfigurationResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: CertificateValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: domainConfigurationName
          in: path
          required: true
          description: The name of the domain configuration to be updated.
          schema:
            type: string
            pattern: '[\w.:-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorizerConfig:
                  description: An object that specifies the authorization service for a domain.
                  type: object
                  properties:
                    defaultAuthorizerName:
                      $ref: '#/components/schemas/AuthorizerName'
                      description: The name of the authorization service for a domain configuration.
                    allowAuthorizerOverride:
                      $ref: '#/components/schemas/AllowAuthorizerOverride'
                      description: A Boolean that specifies whether the domain configuration's authorization service can be overridden.
                domainConfigurationStatus:
                  description: The status to which the domain configuration should be updated.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                removeAuthorizerConfig:
                  description: Removes the authorization configuration from a domain.
                  type: boolean
  '/dynamic-thing-groups/{thingGroupName}':
    post:
      operationId: CreateDynamicThingGroup
      description: Creates a dynamic thing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDynamicThingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: InvalidQueryException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The dynamic thing group name to create.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - queryString
              properties:
                thingGroupProperties:
                  description: Thing group properties.
                  type: object
                  properties:
                    thingGroupDescription:
                      $ref: '#/components/schemas/ThingGroupDescription'
                      description: The thing group description.
                    attributePayload:
                      $ref: '#/components/schemas/AttributePayload'
                      description: The thing group attributes in JSON format.
                indexName:
                  description: '<p>The dynamic thing group index name.</p> <note> <p>Currently one index is supported: "AWS_Things".</p> </note>'
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                queryString:
                  description: '<p>The dynamic thing group search query string.</p> <p>See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/query-syntax.html">Query Syntax</a> for information about query string syntax.</p>'
                  type: string
                  minLength: 1
                queryVersion:
                  description: '<p>The dynamic thing group query version.</p> <note> <p>Currently one query version is supported: "2017-09-30". If not specified, the query version defaults to this value.</p> </note>'
                  type: string
                tags:
                  description: Metadata which can be used to manage the dynamic thing group.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteDynamicThingGroup
      description: Deletes a dynamic thing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDynamicThingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The name of the dynamic thing group to delete.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: expectedVersion
          in: query
          required: false
          description: The expected version of the dynamic thing group to delete.
          schema:
            type: integer
    patch:
      operationId: UpdateDynamicThingGroup
      description: Updates a dynamic thing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDynamicThingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InvalidQueryException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The name of the dynamic thing group to update.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - thingGroupProperties
              properties:
                thingGroupProperties:
                  description: Thing group properties.
                  type: object
                  properties:
                    thingGroupDescription:
                      $ref: '#/components/schemas/ThingGroupDescription'
                      description: The thing group description.
                    attributePayload:
                      $ref: '#/components/schemas/AttributePayload'
                      description: The thing group attributes in JSON format.
                expectedVersion:
                  description: The expected version of the dynamic thing group to update.
                  type: integer
                indexName:
                  description: '<p>The dynamic thing group index to update.</p> <note> <p>Currently one index is supported: ''AWS_Things''.</p> </note>'
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                queryString:
                  description: The dynamic thing group search query string to update.
                  type: string
                  minLength: 1
                queryVersion:
                  description: '<p>The dynamic thing group query version to update.</p> <note> <p>Currently one query version is supported: "2017-09-30". If not specified, the query version defaults to this value.</p> </note>'
                  type: string
  '/jobs/{jobId}':
    put:
      operationId: CreateJob
      description: Creates a job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: 'A job identifier which must be unique for your AWS account. We recommend using a UUID. Alpha-numeric characters, "-" and "_" are valid for use here.'
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targets
              properties:
                targets:
                  description: A list of things and thing groups to which the job should be sent.
                  type: array
                  items:
                    $ref: '#/components/schemas/TargetArn'
                  minItems: 1
                documentSource:
                  description: '<p>An S3 link to the job document. Required if you don''t specify a value for <code>document</code>.</p> <note> <p>If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document.</p> <p>The placeholder link is of the following form:</p> <p> <code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code> </p> <p>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket to which you are linking.</p> </note>'
                  type: string
                  minLength: 1
                  maxLength: 1350
                document:
                  description: The job document. Required if you don't specify a value for <code>documentSource</code>.
                  type: string
                  maxLength: 32768
                description:
                  description: A short text description of the job.
                  type: string
                  pattern: '[^\p{C}]+'
                  maxLength: 2028
                presignedUrlConfig:
                  description: Configuration for pre-signed S3 URLs.
                  type: object
                  properties:
                    roleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
                    expiresInSec:
                      $ref: '#/components/schemas/ExpiresInSec'
                      description: 'How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.'
                targetSelection:
                  description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group.'
                  type: string
                  enum:
                    - CONTINUOUS
                    - SNAPSHOT
                jobExecutionsRolloutConfig:
                  description: Allows you to create a staged rollout of a job.
                  type: object
                  properties:
                    maximumPerMinute:
                      $ref: '#/components/schemas/MaxJobExecutionsPerMin'
                      description: 'The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.'
                    exponentialRate:
                      $ref: '#/components/schemas/ExponentialRolloutRate'
                      description: The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.
                abortConfig:
                  description: The criteria that determine when and how a job abort takes place.
                  type: object
                  properties:
                    criteriaList:
                      $ref: '#/components/schemas/AbortCriteriaList'
                      description: The list of criteria that determine when and how to abort the job.
                timeoutConfig:
                  description: 'Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.'
                  type: object
                  properties:
                    inProgressTimeoutInMinutes:
                      $ref: '#/components/schemas/InProgressTimeoutInMinutes'
                      description: 'Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can''t be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code> status.'
                tags:
                  description: Metadata which can be used to manage the job.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                namespaceId:
                  description: '<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, AWS IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>'
                  type: string
                  pattern: '[a-zA-Z0-9_-]+'
                  minLength: 1
                  maxLength: 64
                jobTemplateArn:
                  description: The ARN of the job template used to create the job.
                  type: string
                  pattern: '^arn:[!-~]+$'
                  minLength: 1
                  maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteJob
      description: '<p>Deletes a job and its related job executions.</p> <p>Deleting a job may take time, depending on the number of job executions created for the job and various other factors. While the job is being deleted, the status of the job will be shown as "DELETION_IN_PROGRESS". Attempting to delete or cancel a job whose status is already "DELETION_IN_PROGRESS" will result in an error.</p> <p>Only 10 jobs may have status "DELETION_IN_PROGRESS" at the same time, or a LimitExceededException will occur.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidStateTransitionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateTransitionException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: '<p>The ID of the job to be deleted.</p> <p>After a job deletion is completed, you may reuse this jobId when you create a new job. However, this is not recommended, and you must ensure that your devices are not using the jobId to refer to the deleted job.</p>'
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
        - name: force
          in: query
          required: false
          description: '<p>(Optional) When true, you can delete a job which is "IN_PROGRESS". Otherwise, you can only delete a job which is in a terminal state ("COMPLETED" or "CANCELED") or an exception will occur. The default is false.</p> <note> <p>Deleting a job which is "IN_PROGRESS", will cause a device which is executing the job to be unable to access job information or update the job execution status. Use caution and ensure that each device executing a job which is deleted is able to recover to a valid state.</p> </note>'
          schema:
            type: boolean
        - name: namespaceId
          in: query
          required: false
          description: '<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, AWS IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>'
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
    get:
      operationId: DescribeJob
      description: Describes a job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier you assigned to this job when it was created.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
    patch:
      operationId: UpdateJob
      description: Updates supported fields of the specified job.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The ID of the job to be updated.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
        - name: namespaceId
          in: query
          required: false
          description: '<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, AWS IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>'
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: A short text description of the job.
                  type: string
                  pattern: '[^\p{C}]+'
                  maxLength: 2028
                presignedUrlConfig:
                  description: Configuration for pre-signed S3 URLs.
                  type: object
                  properties:
                    roleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
                    expiresInSec:
                      $ref: '#/components/schemas/ExpiresInSec'
                      description: 'How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.'
                jobExecutionsRolloutConfig:
                  description: Allows you to create a staged rollout of a job.
                  type: object
                  properties:
                    maximumPerMinute:
                      $ref: '#/components/schemas/MaxJobExecutionsPerMin'
                      description: 'The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.'
                    exponentialRate:
                      $ref: '#/components/schemas/ExponentialRolloutRate'
                      description: The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.
                abortConfig:
                  description: The criteria that determine when and how a job abort takes place.
                  type: object
                  properties:
                    criteriaList:
                      $ref: '#/components/schemas/AbortCriteriaList'
                      description: The list of criteria that determine when and how to abort the job.
                timeoutConfig:
                  description: 'Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.'
                  type: object
                  properties:
                    inProgressTimeoutInMinutes:
                      $ref: '#/components/schemas/InProgressTimeoutInMinutes'
                      description: 'Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can''t be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code> status.'
  '/job-templates/{jobTemplateId}':
    put:
      operationId: CreateJobTemplate
      description: Creates a job template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJobTemplateResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: jobTemplateId
          in: path
          required: true
          description: 'A unique identifier for the job template. We recommend using a UUID. Alpha-numeric characters, "-", and "_" are valid for use here.'
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - description
              properties:
                jobArn:
                  description: The ARN of the job to use as the basis for the job template.
                  type: string
                documentSource:
                  description: '<p>An S3 link to the job document to use in the template. Required if you don''t specify a value for <code>document</code>.</p> <note> <p>If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document.</p> <p>The placeholder link is of the following form:</p> <p> <code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code> </p> <p>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket to which you are linking.</p> </note>'
                  type: string
                  minLength: 1
                  maxLength: 1350
                document:
                  description: The job document. Required if you don't specify a value for <code>documentSource</code>.
                  type: string
                  maxLength: 32768
                description:
                  description: A description of the job document.
                  type: string
                  pattern: '[^\p{C}]+'
                  maxLength: 2028
                presignedUrlConfig:
                  description: Configuration for pre-signed S3 URLs.
                  type: object
                  properties:
                    roleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
                    expiresInSec:
                      $ref: '#/components/schemas/ExpiresInSec'
                      description: 'How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.'
                jobExecutionsRolloutConfig:
                  description: Allows you to create a staged rollout of a job.
                  type: object
                  properties:
                    maximumPerMinute:
                      $ref: '#/components/schemas/MaxJobExecutionsPerMin'
                      description: 'The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.'
                    exponentialRate:
                      $ref: '#/components/schemas/ExponentialRolloutRate'
                      description: The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.
                abortConfig:
                  description: The criteria that determine when and how a job abort takes place.
                  type: object
                  properties:
                    criteriaList:
                      $ref: '#/components/schemas/AbortCriteriaList'
                      description: The list of criteria that determine when and how to abort the job.
                timeoutConfig:
                  description: 'Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.'
                  type: object
                  properties:
                    inProgressTimeoutInMinutes:
                      $ref: '#/components/schemas/InProgressTimeoutInMinutes'
                      description: 'Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can''t be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code> status.'
                tags:
                  description: Metadata that can be used to manage the job template.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteJobTemplate
      description: Deletes the specified job template.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: jobTemplateId
          in: path
          required: true
          description: The unique identifier of the job template to delete.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
    get:
      operationId: DescribeJobTemplate
      description: Returns information about a job template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobTemplateResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: jobTemplateId
          in: path
          required: true
          description: The unique identifier of the job template.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
  /keys-and-certificate:
    post:
      operationId: CreateKeysAndCertificate
      description: '<p>Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public key. You can also call <code>CreateKeysAndCertificate</code> over MQTT from a device, for more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-wo-cert.html#provision-mqtt-api">Provisioning MQTT API</a>.</p> <p> <b>Note</b> This is the only time AWS IoT issues the private key for this certificate, so it is important to keep it in a secure location.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKeysAndCertificateResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: setAsActive
          in: query
          required: false
          description: Specifies whether the certificate is active.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/mitigationactions/actions/{actionName}':
    post:
      operationId: CreateMitigationAction
      description: 'Defines an action that can be applied to audit findings by using StartAuditMitigationActionsTask. Only certain types of mitigation actions can be applied to specific check names. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/device-defender-mitigation-actions.html">Mitigation actions</a>. Each mitigation action can apply only one type of change.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMitigationActionResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: actionName
          in: path
          required: true
          description: 'A friendly name for the action. Choose a friendly name that accurately describes the action (for example, <code>EnableLoggingAction</code>).'
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - roleArn
                - actionParams
              properties:
                roleArn:
                  description: The ARN of the IAM role that is used to apply the mitigation action.
                  type: string
                  minLength: 20
                  maxLength: 2048
                actionParams:
                  description: 'The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).'
                  type: object
                  properties:
                    updateDeviceCertificateParams:
                      $ref: '#/components/schemas/UpdateDeviceCertificateParams'
                      description: Parameters to define a mitigation action that changes the state of the device certificate to inactive.
                    updateCACertificateParams:
                      $ref: '#/components/schemas/UpdateCACertificateParams'
                      description: Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
                    addThingsToThingGroupParams:
                      $ref: '#/components/schemas/AddThingsToThingGroupParams'
                      description: 'Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.'
                    replaceDefaultPolicyVersionParams:
                      $ref: '#/components/schemas/ReplaceDefaultPolicyVersionParams'
                      description: Parameters to define a mitigation action that adds a blank policy to restrict permissions.
                    enableIoTLoggingParams:
                      $ref: '#/components/schemas/EnableIoTLoggingParams'
                      description: Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
                    publishFindingToSnsParams:
                      $ref: '#/components/schemas/PublishFindingToSnsParams'
                      description: Parameters to define a mitigation action that publishes findings to Amazon Simple Notification Service (Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
                tags:
                  description: Metadata that can be used to manage the mitigation action.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteMitigationAction
      description: Deletes a defined mitigation action from your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMitigationActionResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: actionName
          in: path
          required: true
          description: The name of the mitigation action that you want to delete.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            maxLength: 128
    get:
      operationId: DescribeMitigationAction
      description: Gets information about a mitigation action.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMitigationActionResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: actionName
          in: path
          required: true
          description: The friendly name that uniquely identifies the mitigation action.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            maxLength: 128
    patch:
      operationId: UpdateMitigationAction
      description: Updates the definition for the specified mitigation action.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMitigationActionResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: actionName
          in: path
          required: true
          description: 'The friendly name for the mitigation action. You cannot change the name by using <code>UpdateMitigationAction</code>. Instead, you must delete and recreate the mitigation action with the new name.'
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleArn:
                  description: The ARN of the IAM role that is used to apply the mitigation action.
                  type: string
                  minLength: 20
                  maxLength: 2048
                actionParams:
                  description: 'The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).'
                  type: object
                  properties:
                    updateDeviceCertificateParams:
                      $ref: '#/components/schemas/UpdateDeviceCertificateParams'
                      description: Parameters to define a mitigation action that changes the state of the device certificate to inactive.
                    updateCACertificateParams:
                      $ref: '#/components/schemas/UpdateCACertificateParams'
                      description: Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
                    addThingsToThingGroupParams:
                      $ref: '#/components/schemas/AddThingsToThingGroupParams'
                      description: 'Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.'
                    replaceDefaultPolicyVersionParams:
                      $ref: '#/components/schemas/ReplaceDefaultPolicyVersionParams'
                      description: Parameters to define a mitigation action that adds a blank policy to restrict permissions.
                    enableIoTLoggingParams:
                      $ref: '#/components/schemas/EnableIoTLoggingParams'
                      description: Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
                    publishFindingToSnsParams:
                      $ref: '#/components/schemas/PublishFindingToSnsParams'
                      description: Parameters to define a mitigation action that publishes findings to Amazon Simple Notification Service (Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
  '/otaUpdates/{otaUpdateId}':
    post:
      operationId: CreateOTAUpdate
      description: Creates an AWS IoT OTAUpdate on a target group of things or groups.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOTAUpdateResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '487':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: otaUpdateId
          in: path
          required: true
          description: The ID of the OTA update to be created.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targets
                - files
                - roleArn
              properties:
                description:
                  description: The description of the OTA update.
                  type: string
                  pattern: '[^\p{C}]+'
                  maxLength: 2028
                targets:
                  description: The devices targeted to receive OTA updates.
                  type: array
                  items:
                    $ref: '#/components/schemas/Target'
                  minItems: 1
                protocols:
                  description: 'The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified, the target device can choose the protocol.'
                  type: array
                  items:
                    $ref: '#/components/schemas/Protocol'
                  minItems: 1
                  maxItems: 2
                targetSelection:
                  description: 'Specifies whether the update will continue to run (CONTINUOUS), or will be complete after all the things specified as targets have completed the update (SNAPSHOT). If continuous, the update may also be run on a thing when a change is detected in a target. For example, an update will run on a thing when the thing is added to a target group, even after the update was completed by all things originally in the group. Valid values: CONTINUOUS | SNAPSHOT.'
                  type: string
                  enum:
                    - CONTINUOUS
                    - SNAPSHOT
                awsJobExecutionsRolloutConfig:
                  description: Configuration for the rollout of OTA updates.
                  type: object
                  properties:
                    maximumPerMinute:
                      $ref: '#/components/schemas/MaximumPerMinute'
                      description: The maximum number of OTA update job executions started per minute.
                    exponentialRate:
                      $ref: '#/components/schemas/AwsJobExponentialRolloutRate'
                      description: The rate of increase for a job rollout. This parameter allows you to define an exponential rate increase for a job rollout.
                awsJobPresignedUrlConfig:
                  description: Configuration information for pre-signed URLs. Valid when <code>protocols</code> contains HTTP.
                  type: object
                  properties:
                    expiresInSec:
                      $ref: '#/components/schemas/ExpiresInSeconds'
                      description: 'How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 1800 seconds. Pre-signed URLs are generated when a request for the job document is received.'
                awsJobAbortConfig:
                  description: The criteria that determine when and how a job abort takes place.
                  type: object
                  properties:
                    abortCriteriaList:
                      $ref: '#/components/schemas/AwsJobAbortCriteriaList'
                      description: The list of criteria that determine when and how to abort the job.
                awsJobTimeoutConfig:
                  description: 'Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.'
                  type: object
                  properties:
                    inProgressTimeoutInMinutes:
                      $ref: '#/components/schemas/AwsJobTimeoutInProgressTimeoutInMinutes'
                      description: 'Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can''t be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code> status.'
                files:
                  description: The files to be streamed by the OTA update.
                  type: array
                  items:
                    $ref: '#/components/schemas/OTAUpdateFile'
                  minItems: 1
                  maxItems: 50
                roleArn:
                  description: 'The IAM role that grants AWS IoT access to the Amazon S3, AWS IoT jobs and AWS Code Signing resources to create an OTA update job.'
                  type: string
                  minLength: 20
                  maxLength: 2048
                additionalParameters:
                  description: A list of additional OTA update parameters which are name-value pairs.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Value'
                tags:
                  description: Metadata which can be used to manage updates.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteOTAUpdate
      description: Delete an OTA update.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOTAUpdateResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
      parameters:
        - name: otaUpdateId
          in: path
          required: true
          description: The ID of the OTA update to delete.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
        - name: deleteStream
          in: query
          required: false
          description: 'When true, the stream created by the OTAUpdate process is deleted when the OTA update is deleted. Ignored if the stream specified in the OTAUpdate is supplied by the user.'
          schema:
            type: boolean
        - name: forceDeleteAWSJob
          in: query
          required: false
          description: 'When true, deletes the AWS job created by the OTAUpdate process even if it is "IN_PROGRESS". Otherwise, if the job is not in a terminal state ("COMPLETED" or "CANCELED") an exception will occur. The default is false.'
          schema:
            type: boolean
    get:
      operationId: GetOTAUpdate
      description: Gets an OTA update.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOTAUpdateResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: otaUpdateId
          in: path
          required: true
          description: The OTA update ID.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
  '/policies/{policyName}':
    post:
      operationId: CreatePolicy
      description: <p>Creates an AWS IoT policy.</p> <p>The created policy is the default version for the policy. This operation creates a policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's default version.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePolicyResponse'
        '480':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '481':
          description: MalformedPolicyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedPolicyException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy name.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - policyDocument
              properties:
                policyDocument:
                  description: 'The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.'
                  type: string
                tags:
                  description: '<p>Metadata which can be used to manage the policy.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeletePolicy
      description: '<p>Deletes the specified policy.</p> <p>A policy cannot be deleted if it has non-default versions or it is attached to any certificate.</p> <p>To delete a policy, use the DeletePolicyVersion API to delete all non-default versions of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate; and then use the DeletePolicy API to delete the policy.</p> <p>When a policy is deleted using DeletePolicy, its default version is deleted with it.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: DeleteConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The name of the policy to delete.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
    get:
      operationId: GetPolicy
      description: Gets information about the specified policy with the policy document of the default version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPolicyResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The name of the policy.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
  '/policies/{policyName}/version':
    post:
      operationId: CreatePolicyVersion
      description: '<p>Creates a new version of the specified AWS IoT policy. To update a policy, create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version before you create a new one.</p> <p>Optionally, you can set the new version as the policy''s default version. The default version is the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePolicyVersionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: MalformedPolicyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedPolicyException'
        '482':
          description: VersionsLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionsLimitExceededException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy name.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
        - name: setAsDefault
          in: query
          required: false
          description: 'Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).'
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - policyDocument
              properties:
                policyDocument:
                  description: 'The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespace.'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListPolicyVersions
      description: Lists the versions of the specified policy and identifies the default version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPolicyVersionsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy name.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
  '/provisioning-templates/{templateName}/provisioning-claim':
    post:
      operationId: CreateProvisioningClaim
      description: Creates a provisioning claim.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProvisioningClaimResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the provisioning template to use.
          schema:
            type: string
            pattern: '^[0-9A-Za-z_-]+$'
            minLength: 1
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /provisioning-templates:
    post:
      operationId: CreateProvisioningTemplate
      description: Creates a fleet provisioning template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProvisioningTemplateResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - templateName
                - templateBody
                - provisioningRoleArn
              properties:
                templateName:
                  description: The name of the fleet provisioning template.
                  type: string
                  pattern: '^[0-9A-Za-z_-]+$'
                  minLength: 1
                  maxLength: 36
                description:
                  description: The description of the fleet provisioning template.
                  type: string
                  pattern: '[^\p{C}]*'
                  minLength: 0
                  maxLength: 500
                templateBody:
                  description: The JSON formatted contents of the fleet provisioning template.
                  type: string
                enabled:
                  description: 'True to enable the fleet provisioning template, otherwise false.'
                  type: boolean
                provisioningRoleArn:
                  description: The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
                  type: string
                  minLength: 20
                  maxLength: 2048
                preProvisioningHook:
                  description: Structure that contains <code>payloadVersion</code> and <code>targetArn</code>.
                  type: object
                  properties:
                    payloadVersion:
                      $ref: '#/components/schemas/PayloadVersion'
                      description: '<p>The payload that was sent to the target function.</p> <p> <i>Note:</i> Only Lambda functions are currently supported.</p>'
                    targetArn:
                      $ref: '#/components/schemas/TargetArn'
                      description: '<p>The ARN of the target function.</p> <p> <i>Note:</i> Only Lambda functions are currently supported.</p>'
                tags:
                  description: '<p>Metadata which can be used to manage the fleet provisioning template.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListProvisioningTemplates
      description: Lists the fleet provisioning templates in your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisioningTemplatesResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: A token to retrieve the next set of results.
          schema:
            type: string
  '/provisioning-templates/{templateName}/versions':
    post:
      operationId: CreateProvisioningTemplateVersion
      description: Creates a new version of a fleet provisioning template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProvisioningTemplateVersionResponse'
        '480':
          description: VersionsLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionsLimitExceededException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '486':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the fleet provisioning template.
          schema:
            type: string
            pattern: '^[0-9A-Za-z_-]+$'
            minLength: 1
            maxLength: 36
        - name: setAsDefault
          in: query
          required: false
          description: Sets a fleet provision template version as the default version.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - templateBody
              properties:
                templateBody:
                  description: The JSON formatted contents of the fleet provisioning template.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListProvisioningTemplateVersions
      description: A list of fleet provisioning template versions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisioningTemplateVersionsResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the fleet provisioning template.
          schema:
            type: string
            pattern: '^[0-9A-Za-z_-]+$'
            minLength: 1
            maxLength: 36
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: A token to retrieve the next set of results.
          schema:
            type: string
  '/role-aliases/{roleAlias}':
    post:
      operationId: CreateRoleAlias
      description: Creates a role alias.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoleAliasResponse'
        '480':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: roleAlias
          in: path
          required: true
          description: The role alias that points to a role ARN. This allows you to change the role without having to update the device.
          schema:
            type: string
            pattern: '[\w=,@-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - roleArn
              properties:
                roleArn:
                  description: The role ARN.
                  type: string
                  minLength: 20
                  maxLength: 2048
                credentialDurationSeconds:
                  description: How long (in seconds) the credentials will be valid.
                  type: integer
                  minimum: 900
                  maximum: 43200
                tags:
                  description: '<p>Metadata which can be used to manage the role alias.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteRoleAlias
      description: Deletes a role alias
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRoleAliasResponse'
        '480':
          description: DeleteConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: roleAlias
          in: path
          required: true
          description: The role alias to delete.
          schema:
            type: string
            pattern: '[\w=,@-]+'
            minLength: 1
            maxLength: 128
    get:
      operationId: DescribeRoleAlias
      description: Describes a role alias.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRoleAliasResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: roleAlias
          in: path
          required: true
          description: The role alias to describe.
          schema:
            type: string
            pattern: '[\w=,@-]+'
            minLength: 1
            maxLength: 128
    put:
      operationId: UpdateRoleAlias
      description: Updates a role alias.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRoleAliasResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: roleAlias
          in: path
          required: true
          description: The role alias to update.
          schema:
            type: string
            pattern: '[\w=,@-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleArn:
                  description: The role ARN.
                  type: string
                  minLength: 20
                  maxLength: 2048
                credentialDurationSeconds:
                  description: The number of seconds the credential will be valid.
                  type: integer
                  minimum: 900
                  maximum: 43200
  '/audit/scheduledaudits/{scheduledAuditName}':
    post:
      operationId: CreateScheduledAudit
      description: Creates a scheduled audit that is run at a specified time interval.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateScheduledAuditResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: scheduledAuditName
          in: path
          required: true
          description: The name you want to give to the scheduled audit. (Max. 128 chars)
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - frequency
                - targetCheckNames
              properties:
                frequency:
                  description: 'How often the scheduled audit takes place, either <code>DAILY</code>, <code>WEEKLY</code>, <code>BIWEEKLY</code> or <code>MONTHLY</code>. The start time of each audit is determined by the system.'
                  type: string
                  enum:
                    - DAILY
                    - WEEKLY
                    - BIWEEKLY
                    - MONTHLY
                dayOfMonth:
                  description: 'The day of the month on which the scheduled audit takes place. This can be "1" through "31" or "LAST". This field is required if the "frequency" parameter is set to <code>MONTHLY</code>. If days 29 to 31 are specified, and the month doesn''t have that many days, the audit takes place on the <code>LAST</code> day of the month.'
                  type: string
                  pattern: '^([1-9]|[12][0-9]|3[01])$|^LAST$'
                dayOfWeek:
                  description: 'The day of the week on which the scheduled audit takes place, either <code>SUN</code>, <code>MON</code>, <code>TUE</code>, <code>WED</code>, <code>THU</code>, <code>FRI</code>, or <code>SAT</code>. This field is required if the <code>frequency</code> parameter is set to <code>WEEKLY</code> or <code>BIWEEKLY</code>.'
                  type: string
                  enum:
                    - SUN
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                    - SAT
                targetCheckNames:
                  description: 'Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
                  type: array
                  items:
                    $ref: '#/components/schemas/AuditCheckName'
                tags:
                  description: Metadata that can be used to manage the scheduled audit.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteScheduledAudit
      description: Deletes a scheduled audit.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteScheduledAuditResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: scheduledAuditName
          in: path
          required: true
          description: The name of the scheduled audit you want to delete.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
    get:
      operationId: DescribeScheduledAudit
      description: Gets information about a scheduled audit.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeScheduledAuditResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: scheduledAuditName
          in: path
          required: true
          description: The name of the scheduled audit whose information you want to get.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
    patch:
      operationId: UpdateScheduledAudit
      description: 'Updates a scheduled audit, including which checks are performed and how often the audit takes place.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateScheduledAuditResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: scheduledAuditName
          in: path
          required: true
          description: The name of the scheduled audit. (Max. 128 chars)
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                frequency:
                  description: 'How often the scheduled audit takes place, either <code>DAILY</code>, <code>WEEKLY</code>, <code>BIWEEKLY</code>, or <code>MONTHLY</code>. The start time of each audit is determined by the system.'
                  type: string
                  enum:
                    - DAILY
                    - WEEKLY
                    - BIWEEKLY
                    - MONTHLY
                dayOfMonth:
                  description: 'The day of the month on which the scheduled audit takes place. This can be <code>1</code> through <code>31</code> or <code>LAST</code>. This field is required if the <code>frequency</code> parameter is set to <code>MONTHLY</code>. If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
                  type: string
                  pattern: '^([1-9]|[12][0-9]|3[01])$|^LAST$'
                dayOfWeek:
                  description: 'The day of the week on which the scheduled audit takes place. This can be one of <code>SUN</code>, <code>MON</code>, <code>TUE</code>, <code>WED</code>, <code>THU</code>, <code>FRI</code>, or <code>SAT</code>. This field is required if the "frequency" parameter is set to <code>WEEKLY</code> or <code>BIWEEKLY</code>.'
                  type: string
                  enum:
                    - SUN
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                    - SAT
                targetCheckNames:
                  description: 'Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
                  type: array
                  items:
                    $ref: '#/components/schemas/AuditCheckName'
  '/security-profiles/{securityProfileName}':
    post:
      operationId: CreateSecurityProfile
      description: Creates a Device Defender security profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The name you are giving to the security profile.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                securityProfileDescription:
                  description: A description of the security profile.
                  type: string
                  pattern: '[\p{Graph}\x20]*'
                  maxLength: 1000
                behaviors:
                  description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
                  type: array
                  items:
                    $ref: '#/components/schemas/Behavior'
                  maxItems: 100
                alertTargets:
                  description: Specifies the destinations to which alerts are sent. (Alerts are always sent to the console.) Alerts are generated when a device (thing) violates a behavior.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/AlertTarget'
                additionalMetricsToRetain:
                  description: '<p> <i>Please use <a>CreateSecurityProfileRequest$additionalMetricsToRetainV2</a> instead.</i> </p> <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s <code>behaviors</code>, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/BehaviorMetric'
                additionalMetricsToRetainV2:
                  description: 'A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s <code>behaviors</code>, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.'
                  type: array
                  items:
                    $ref: '#/components/schemas/MetricToRetain'
                tags:
                  description: Metadata that can be used to manage the security profile.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteSecurityProfile
      description: Deletes a Device Defender security profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The name of the security profile to be deleted.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: expectedVersion
          in: query
          required: false
          description: 'The expected version of the security profile. A new version is generated whenever the security profile is updated. If you specify a value that is different from the actual version, a <code>VersionConflictException</code> is thrown.'
          schema:
            type: integer
    get:
      operationId: DescribeSecurityProfile
      description: Gets information about a Device Defender security profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The name of the security profile whose information you want to get.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    patch:
      operationId: UpdateSecurityProfile
      description: Updates a Device Defender security profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The name of the security profile you want to update.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: expectedVersion
          in: query
          required: false
          description: 'The expected version of the security profile. A new version is generated whenever the security profile is updated. If you specify a value that is different from the actual version, a <code>VersionConflictException</code> is thrown.'
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                securityProfileDescription:
                  description: A description of the security profile.
                  type: string
                  pattern: '[\p{Graph}\x20]*'
                  maxLength: 1000
                behaviors:
                  description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
                  type: array
                  items:
                    $ref: '#/components/schemas/Behavior'
                  maxItems: 100
                alertTargets:
                  description: Where the alerts are sent. (Alerts are always sent to the console.)
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/AlertTarget'
                additionalMetricsToRetain:
                  description: '<p> <i>Please use <a>UpdateSecurityProfileRequest$additionalMetricsToRetainV2</a> instead.</i> </p> <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s <code>behaviors</code>, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/BehaviorMetric'
                additionalMetricsToRetainV2:
                  description: 'A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s behaviors, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.'
                  type: array
                  items:
                    $ref: '#/components/schemas/MetricToRetain'
                deleteBehaviors:
                  description: 'If true, delete all <code>behaviors</code> defined for this security profile. If any <code>behaviors</code> are defined in the current invocation, an exception occurs.'
                  type: boolean
                deleteAlertTargets:
                  description: 'If true, delete all <code>alertTargets</code> defined for this security profile. If any <code>alertTargets</code> are defined in the current invocation, an exception occurs.'
                  type: boolean
                deleteAdditionalMetricsToRetain:
                  description: 'If true, delete all <code>additionalMetricsToRetain</code> defined for this security profile. If any <code>additionalMetricsToRetain</code> are defined in the current invocation, an exception occurs.'
                  type: boolean
  '/streams/{streamId}':
    post:
      operationId: CreateStream
      description: Creates a stream for delivering one or more large files in chunks over MQTT. A stream transports data bytes in chunks or blocks packaged as MQTT messages from a source like S3. You can have one or more files associated with a stream.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStreamResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: streamId
          in: path
          required: true
          description: The stream ID.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - files
                - roleArn
              properties:
                description:
                  description: A description of the stream.
                  type: string
                  pattern: '[^\p{C}]+'
                  maxLength: 2028
                files:
                  description: The files to stream.
                  type: array
                  items:
                    $ref: '#/components/schemas/StreamFile'
                  minItems: 1
                  maxItems: 50
                roleArn:
                  description: An IAM role that allows the IoT service principal assumes to access your S3 files.
                  type: string
                  minLength: 20
                  maxLength: 2048
                tags:
                  description: Metadata which can be used to manage streams.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteStream
      description: Deletes a stream.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStreamResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DeleteConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: streamId
          in: path
          required: true
          description: The stream ID.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
    get:
      operationId: DescribeStream
      description: Gets information about a stream.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeStreamResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: streamId
          in: path
          required: true
          description: The stream ID.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
    put:
      operationId: UpdateStream
      description: Updates an existing stream. The stream version will be incremented by one.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStreamResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: streamId
          in: path
          required: true
          description: The stream ID.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: The description of the stream.
                  type: string
                  pattern: '[^\p{C}]+'
                  maxLength: 2028
                files:
                  description: The files associated with the stream.
                  type: array
                  items:
                    $ref: '#/components/schemas/StreamFile'
                  minItems: 1
                  maxItems: 50
                roleArn:
                  description: An IAM role that allows the IoT service principal assumes to access your S3 files.
                  type: string
                  minLength: 20
                  maxLength: 2048
  '/things/{thingName}':
    post:
      operationId: CreateThing
      description: '<p>Creates a thing record in the registry. If this call is made multiple times using the same thing name and configuration, the call will succeed. If this call is made with the same thing name but different configuration a <code>ResourceAlreadyExistsException</code> is thrown.</p> <note> <p>This is a control plane operation. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-authorization.html">Authorization</a> for information about authorizing control plane actions.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateThingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: '<p>The name of the thing to create.</p> <p>You can''t change a thing''s name after you create it. To change a thing''s name, you must create a new thing, give it the new name, and then delete the old thing.</p>'
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingTypeName:
                  description: The name of the thing type associated with the new thing.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                attributePayload:
                  description: The attribute payload.
                  type: object
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Attributes'
                      description: '<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\"attributes\":{\"string1\":\"string2\"}}</code> </p>'
                    merge:
                      $ref: '#/components/schemas/Flag'
                      description: '<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code> or <code>UpdateThingGroup</code>.</p> </note>'
                billingGroupName:
                  description: The name of the billing group the thing will be added to.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteThing
      description: Deletes the specified thing. Returns successfully with no error if the deletion is successful or you specify a thing that doesn't exist.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteThingResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing to delete.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: expectedVersion
          in: query
          required: false
          description: 'The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.'
          schema:
            type: integer
    get:
      operationId: DescribeThing
      description: Gets information about the specified thing.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeThingResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    patch:
      operationId: UpdateThing
      description: Updates the data for a thing.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: '<p>The name of the thing to update.</p> <p>You can''t change a thing''s name. To change a thing''s name, you must create a new thing, give it the new name, and then delete the old thing.</p>'
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingTypeName:
                  description: The name of the thing type.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                attributePayload:
                  description: The attribute payload.
                  type: object
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Attributes'
                      description: '<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\"attributes\":{\"string1\":\"string2\"}}</code> </p>'
                    merge:
                      $ref: '#/components/schemas/Flag'
                      description: '<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code> or <code>UpdateThingGroup</code>.</p> </note>'
                expectedVersion:
                  description: 'The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.'
                  type: integer
                removeThingType:
                  description: 'Remove a thing type association. If <b>true</b>, the association is removed.'
                  type: boolean
  '/thing-groups/{thingGroupName}':
    post:
      operationId: CreateThingGroup
      description: '<p>Create a thing group.</p> <note> <p>This is a control plane operation. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-authorization.html">Authorization</a> for information about authorizing control plane actions.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateThingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The thing group name to create.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                parentGroupName:
                  description: The name of the parent thing group.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                thingGroupProperties:
                  description: Thing group properties.
                  type: object
                  properties:
                    thingGroupDescription:
                      $ref: '#/components/schemas/ThingGroupDescription'
                      description: The thing group description.
                    attributePayload:
                      $ref: '#/components/schemas/AttributePayload'
                      description: The thing group attributes in JSON format.
                tags:
                  description: Metadata which can be used to manage the thing group.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteThingGroup
      description: Deletes a thing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteThingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The name of the thing group to delete.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: expectedVersion
          in: query
          required: false
          description: The expected version of the thing group to delete.
          schema:
            type: integer
    get:
      operationId: DescribeThingGroup
      description: Describe a thing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeThingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The name of the thing group.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    patch:
      operationId: UpdateThingGroup
      description: Update a thing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: VersionConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The thing group to update.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - thingGroupProperties
              properties:
                thingGroupProperties:
                  description: Thing group properties.
                  type: object
                  properties:
                    thingGroupDescription:
                      $ref: '#/components/schemas/ThingGroupDescription'
                      description: The thing group description.
                    attributePayload:
                      $ref: '#/components/schemas/AttributePayload'
                      description: The thing group attributes in JSON format.
                expectedVersion:
                  description: 'The expected version of the thing group. If this does not match the version of the thing group being updated, the update will fail.'
                  type: integer
  '/thing-types/{thingTypeName}':
    post:
      operationId: CreateThingType
      description: Creates a new thing type.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateThingTypeResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
      parameters:
        - name: thingTypeName
          in: path
          required: true
          description: The name of the thing type.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingTypeProperties:
                  description: 'The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.'
                  type: object
                  properties:
                    thingTypeDescription:
                      $ref: '#/components/schemas/ThingTypeDescription'
                      description: The description of the thing type.
                    searchableAttributes:
                      $ref: '#/components/schemas/SearchableAttributes'
                      description: A list of searchable thing attribute names.
                tags:
                  description: Metadata which can be used to manage the thing type.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteThingType
      description: 'Deletes the specified thing type. You cannot delete a thing type if it has things associated with it. To delete a thing type, first mark it as deprecated by calling <a>DeprecateThingType</a>, then remove any associated things by calling <a>UpdateThing</a> to change the thing type on any associated thing, and finally use <a>DeleteThingType</a> to delete the thing type.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteThingTypeResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: thingTypeName
          in: path
          required: true
          description: The name of the thing type.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    get:
      operationId: DescribeThingType
      description: Gets information about the specified thing type.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeThingTypeResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: thingTypeName
          in: path
          required: true
          description: The name of the thing type.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
  '/rules/{ruleName}':
    post:
      operationId: CreateTopicRule
      description: Creates a rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.
      responses:
        '200':
          description: Success
        '480':
          description: SqlParseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlParseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
      parameters:
        - name: ruleName
          in: path
          required: true
          description: The name of the rule.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_]+$'
            minLength: 1
            maxLength: 128
        - name: x-amz-tagging
          in: header
          required: false
          description: '<p>Metadata which can be used to manage the topic rule.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: --tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - topicRulePayload
              properties:
                topicRulePayload:
                  description: Describes a rule.
                  type: object
                  properties:
                    sql:
                      $ref: '#/components/schemas/SQL'
                      description: 'The SQL statement used to query the topic. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-reference.html">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.'
                    description:
                      $ref: '#/components/schemas/Description'
                      description: The description of the rule.
                    actions:
                      $ref: '#/components/schemas/ActionList'
                      description: The actions associated with the rule.
                    ruleDisabled:
                      $ref: '#/components/schemas/IsDisabled'
                      description: Specifies whether the rule is disabled.
                    awsIotSqlVersion:
                      $ref: '#/components/schemas/AwsIotSqlVersion'
                      description: The version of the SQL rules engine to use when evaluating the rule.
                    errorAction:
                      $ref: '#/components/schemas/Action'
                      description: The action to take when an error occurs.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteTopicRule
      description: Deletes the rule.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
      parameters:
        - name: ruleName
          in: path
          required: true
          description: The name of the rule.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_]+$'
            minLength: 1
            maxLength: 128
    get:
      operationId: GetTopicRule
      description: Gets information about the rule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTopicRuleResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
      parameters:
        - name: ruleName
          in: path
          required: true
          description: The name of the rule.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_]+$'
            minLength: 1
            maxLength: 128
    patch:
      operationId: ReplaceTopicRule
      description: Replaces the rule. You must specify all parameters for the new rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.
      responses:
        '200':
          description: Success
        '480':
          description: SqlParseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlParseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
      parameters:
        - name: ruleName
          in: path
          required: true
          description: The name of the rule.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_]+$'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - topicRulePayload
              properties:
                topicRulePayload:
                  description: Describes a rule.
                  type: object
                  properties:
                    sql:
                      $ref: '#/components/schemas/SQL'
                      description: 'The SQL statement used to query the topic. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-reference.html">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.'
                    description:
                      $ref: '#/components/schemas/Description'
                      description: The description of the rule.
                    actions:
                      $ref: '#/components/schemas/ActionList'
                      description: The actions associated with the rule.
                    ruleDisabled:
                      $ref: '#/components/schemas/IsDisabled'
                      description: Specifies whether the rule is disabled.
                    awsIotSqlVersion:
                      $ref: '#/components/schemas/AwsIotSqlVersion'
                      description: The version of the SQL rules engine to use when evaluating the rule.
                    errorAction:
                      $ref: '#/components/schemas/Action'
                      description: The action to take when an error occurs.
  /destinations:
    post:
      operationId: CreateTopicRuleDestination
      description: Creates a topic rule destination. The destination must be confirmed prior to use.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTopicRuleDestinationResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - destinationConfiguration
              properties:
                destinationConfiguration:
                  description: Configuration of the topic rule destination.
                  type: object
                  properties:
                    httpUrlConfiguration:
                      $ref: '#/components/schemas/HttpUrlDestinationConfiguration'
                      description: Configuration of the HTTP URL.
                    vpcConfiguration:
                      $ref: '#/components/schemas/VpcDestinationConfiguration'
                      description: Configuration of the virtual private cloud (VPC) connection.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListTopicRuleDestinations
      description: Lists all the topic rule destinations in your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicRuleDestinationsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
    patch:
      operationId: UpdateTopicRuleDestination
      description: 'Updates a topic rule destination. You use this to change the status, endpoint URL, or confirmation URL of the destination.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTopicRuleDestinationResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - arn
                - status
              properties:
                arn:
                  description: The ARN of the topic rule destination.
                  type: string
                status:
                  description: '<p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>'
                  type: string
                  enum:
                    - ENABLED
                    - IN_PROGRESS
                    - DISABLED
                    - ERROR
                    - DELETING
  /audit/configuration:
    delete:
      operationId: DeleteAccountAuditConfiguration
      description: 'Restores the default settings for Device Defender audits for this account. Any configuration data you entered is deleted and all audit checks are reset to disabled. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountAuditConfigurationResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: deleteScheduledAudits
          in: query
          required: false
          description: 'If true, all scheduled audits are deleted.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeAccountAuditConfiguration
      description: Gets information about the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccountAuditConfigurationResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
    patch:
      operationId: UpdateAccountAuditConfiguration
      description: Configures or reconfigures the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountAuditConfigurationResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleArn:
                  description: 'The Amazon Resource Name (ARN) of the role that grants permission to AWS IoT to access information about your devices, policies, certificates, and other items as required when performing an audit.'
                  type: string
                  minLength: 20
                  maxLength: 2048
                auditNotificationTargetConfigurations:
                  description: Information about the targets to which audit notifications are sent.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/AuditNotificationTarget'
                auditCheckConfigurations:
                  description: '<p>Specifies which audit checks are enabled and disabled for this account. Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are currently enabled.</p> <p>Some data collection might start immediately when certain checks are enabled. When a check is disabled, any data collected so far in relation to the check is deleted.</p> <p>You cannot disable a check if it''s used by any scheduled audit. You must first delete the check from the scheduled audit or delete the scheduled audit itself.</p> <p>On the first call to <code>UpdateAccountAuditConfiguration</code>, this parameter is required and must specify at least one enabled check.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/AuditCheckConfiguration'
  /audit/suppressions/delete:
    post:
      operationId: DeleteAuditSuppression
      description: ' Deletes a Device Defender audit suppression. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAuditSuppressionResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - checkName
                - resourceIdentifier
              properties:
                checkName:
                  description: 'An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
                  type: string
                resourceIdentifier:
                  description: Information that identifies the noncompliant resource.
                  type: object
                  properties:
                    deviceCertificateId:
                      $ref: '#/components/schemas/CertificateId'
                      description: The ID of the certificate attached to the resource.
                    caCertificateId:
                      $ref: '#/components/schemas/CertificateId'
                      description: The ID of the CA certificate used to authorize the certificate.
                    cognitoIdentityPoolId:
                      $ref: '#/components/schemas/CognitoIdentityPoolId'
                      description: The ID of the Amazon Cognito identity pool.
                    clientId:
                      $ref: '#/components/schemas/ClientId'
                      description: The client ID.
                    policyVersionIdentifier:
                      $ref: '#/components/schemas/PolicyVersionIdentifier'
                      description: The version of the policy associated with the resource.
                    account:
                      $ref: '#/components/schemas/AwsAccountId'
                      description: The account with which the resource is associated.
                    iamRoleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: The ARN of the IAM role that has overly permissive actions.
                    roleAliasArn:
                      $ref: '#/components/schemas/RoleAliasArn'
                      description: The ARN of the role alias that has overly permissive actions.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/cacertificate/{caCertificateId}':
    delete:
      operationId: DeleteCACertificate
      description: Deletes a registered CA certificate.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCACertificateResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: CertificateStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateStateException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: caCertificateId
          in: path
          required: true
          description: The ID of the certificate to delete. (The last part of the certificate ARN contains the certificate ID.)
          schema:
            type: string
            pattern: '(0x)?[a-fA-F0-9]+'
            minLength: 64
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeCACertificate
      description: Describes a registered CA certificate.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCACertificateResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: caCertificateId
          in: path
          required: true
          description: The CA certificate identifier.
          schema:
            type: string
            pattern: '(0x)?[a-fA-F0-9]+'
            minLength: 64
            maxLength: 64
    put:
      operationId: UpdateCACertificate
      description: Updates a registered CA certificate.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: caCertificateId
          in: path
          required: true
          description: The CA certificate identifier.
          schema:
            type: string
            pattern: '(0x)?[a-fA-F0-9]+'
            minLength: 64
            maxLength: 64
        - name: newStatus
          in: query
          required: false
          description: '<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>'
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: newAutoRegistrationStatus
          in: query
          required: false
          description: 'The new value for the auto registration status. Valid values are: "ENABLE" or "DISABLE".'
          schema:
            type: string
            enum:
              - ENABLE
              - DISABLE
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                registrationConfig:
                  description: The registration configuration.
                  type: object
                  properties:
                    templateBody:
                      $ref: '#/components/schemas/TemplateBody'
                      description: The template body.
                    roleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: The ARN of the role.
                removeAutoRegistration:
                  description: 'If true, removes auto registration.'
                  type: boolean
  '/certificates/{certificateId}':
    delete:
      operationId: DeleteCertificate
      description: '<p>Deletes the specified certificate.</p> <p>A certificate cannot be deleted if it has a policy or IoT thing attached to it or if its status is set to ACTIVE. To delete a certificate, first use the <a>DetachPrincipalPolicy</a> API to detach all policies. Next, use the <a>UpdateCertificate</a> API to set the certificate to the INACTIVE status.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: CertificateStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateStateException'
        '481':
          description: DeleteConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          schema:
            type: string
            pattern: '(0x)?[a-fA-F0-9]+'
            minLength: 64
            maxLength: 64
        - name: forceDelete
          in: query
          required: false
          description: Forces the deletion of a certificate if it is inactive and is not attached to an IoT thing.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeCertificate
      description: Gets information about the specified certificate.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCertificateResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          schema:
            type: string
            pattern: '(0x)?[a-fA-F0-9]+'
            minLength: 64
            maxLength: 64
  '/things/{thingName}/jobs/{jobId}/executionNumber/{executionNumber}':
    delete:
      operationId: DeleteJobExecution
      description: Deletes a job execution.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidStateTransitionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateTransitionException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The ID of the job whose execution on a particular device will be deleted.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
        - name: thingName
          in: path
          required: true
          description: The name of the thing whose job execution will be deleted.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: executionNumber
          in: path
          required: true
          description: '<p>The ID of the job execution to be deleted. The <code>executionNumber</code> refers to the execution of a particular job on a particular device.</p> <p>Note that once a job execution is deleted, the <code>executionNumber</code> may be reused by IoT, so be sure you get and use the correct value here.</p>'
          schema:
            type: integer
        - name: force
          in: query
          required: false
          description: '<p>(Optional) When true, you can delete a job execution which is "IN_PROGRESS". Otherwise, you can only delete a job execution which is in a terminal state ("SUCCEEDED", "FAILED", "REJECTED", "REMOVED" or "CANCELED") or an exception will occur. The default is false.</p> <note> <p>Deleting a job execution which is "IN_PROGRESS", will cause the device to be unable to access job information or update the job execution status. Use caution and ensure that the device is able to recover to a valid state.</p> </note>'
          schema:
            type: boolean
        - name: namespaceId
          in: query
          required: false
          description: '<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, AWS IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>'
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/policies/{policyName}/version/{policyVersionId}':
    delete:
      operationId: DeletePolicyVersion
      description: 'Deletes the specified version of the specified policy. You cannot delete the default version of a policy using this API. To delete the default version of a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default version, use ListPolicyVersions.'
      responses:
        '200':
          description: Success
        '480':
          description: DeleteConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The name of the policy.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
        - name: policyVersionId
          in: path
          required: true
          description: The policy version ID.
          schema:
            type: string
            pattern: '[0-9]+'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetPolicyVersion
      description: Gets information about the specified policy version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPolicyVersionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The name of the policy.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
        - name: policyVersionId
          in: path
          required: true
          description: The policy version ID.
          schema:
            type: string
            pattern: '[0-9]+'
    patch:
      operationId: SetDefaultPolicyVersion
      description: 'Sets the specified version of the specified policy as the policy''s default (operative) version. This action affects all certificates to which the policy is attached. To list the principals the policy is attached to, use the ListPrincipalPolicy API.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy name.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
        - name: policyVersionId
          in: path
          required: true
          description: The policy version ID.
          schema:
            type: string
            pattern: '[0-9]+'
  '/provisioning-templates/{templateName}':
    delete:
      operationId: DeleteProvisioningTemplate
      description: Deletes a fleet provisioning template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProvisioningTemplateResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: DeleteConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
        '486':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the fleet provision template to delete.
          schema:
            type: string
            pattern: '^[0-9A-Za-z_-]+$'
            minLength: 1
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeProvisioningTemplate
      description: Returns information about a fleet provisioning template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProvisioningTemplateResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the fleet provisioning template.
          schema:
            type: string
            pattern: '^[0-9A-Za-z_-]+$'
            minLength: 1
            maxLength: 36
    patch:
      operationId: UpdateProvisioningTemplate
      description: Updates a fleet provisioning template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProvisioningTemplateResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the fleet provisioning template.
          schema:
            type: string
            pattern: '^[0-9A-Za-z_-]+$'
            minLength: 1
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: The description of the fleet provisioning template.
                  type: string
                  pattern: '[^\p{C}]*'
                  minLength: 0
                  maxLength: 500
                enabled:
                  description: 'True to enable the fleet provisioning template, otherwise false.'
                  type: boolean
                defaultVersionId:
                  description: The ID of the default provisioning template version.
                  type: integer
                provisioningRoleArn:
                  description: The ARN of the role associated with the provisioning template. This IoT role grants permission to provision a device.
                  type: string
                  minLength: 20
                  maxLength: 2048
                preProvisioningHook:
                  description: Structure that contains <code>payloadVersion</code> and <code>targetArn</code>.
                  type: object
                  properties:
                    payloadVersion:
                      $ref: '#/components/schemas/PayloadVersion'
                      description: '<p>The payload that was sent to the target function.</p> <p> <i>Note:</i> Only Lambda functions are currently supported.</p>'
                    targetArn:
                      $ref: '#/components/schemas/TargetArn'
                      description: '<p>The ARN of the target function.</p> <p> <i>Note:</i> Only Lambda functions are currently supported.</p>'
                removePreProvisioningHook:
                  description: Removes pre-provisioning hook template.
                  type: boolean
  '/provisioning-templates/{templateName}/versions/{versionId}':
    delete:
      operationId: DeleteProvisioningTemplateVersion
      description: Deletes a fleet provisioning template version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProvisioningTemplateVersionResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
        '486':
          description: DeleteConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the fleet provisioning template version to delete.
          schema:
            type: string
            pattern: '^[0-9A-Za-z_-]+$'
            minLength: 1
            maxLength: 36
        - name: versionId
          in: path
          required: true
          description: The fleet provisioning template version ID to delete.
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeProvisioningTemplateVersion
      description: Returns information about a fleet provisioning template version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProvisioningTemplateVersionResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The template name.
          schema:
            type: string
            pattern: '^[0-9A-Za-z_-]+$'
            minLength: 1
            maxLength: 36
        - name: versionId
          in: path
          required: true
          description: The fleet provisioning template version ID.
          schema:
            type: integer
  /registrationcode:
    delete:
      operationId: DeleteRegistrationCode
      description: Deletes a CA certificate registration code.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRegistrationCodeResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetRegistrationCode
      description: Gets a registration code used to register a CA certificate with AWS IoT.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegistrationCodeResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters: []
  '/destinations/{arn}':
    delete:
      operationId: DeleteTopicRuleDestination
      description: Deletes a topic rule destination.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTopicRuleDestinationResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
      parameters:
        - name: arn
          in: path
          required: true
          description: The ARN of the topic rule destination to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetTopicRuleDestination
      description: Gets information about a topic rule destination.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTopicRuleDestinationResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
      parameters:
        - name: arn
          in: path
          required: true
          description: The ARN of the topic rule destination.
          schema:
            type: string
  /v2LoggingLevel#targetType&targetName:
    delete:
      operationId: DeleteV2LoggingLevel
      description: Deletes a logging level.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: targetType
          in: query
          required: true
          description: The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.
          schema:
            type: string
            enum:
              - DEFAULT
              - THING_GROUP
        - name: targetName
          in: query
          required: true
          description: The name of the resource for which you are configuring logging.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/thing-types/{thingTypeName}/deprecate':
    post:
      operationId: DeprecateThingType
      description: Deprecates a thing type. You can not associate new things with deprecated thing type.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecateThingTypeResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: thingTypeName
          in: path
          required: true
          description: The name of the thing type to deprecate.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                undoDeprecate:
                  description: 'Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/audit/findings/{findingId}':
    get:
      operationId: DescribeAuditFinding
      description: 'Gets information about a single audit finding. Properties include the reason for noncompliance, the severity of the issue, and the start time when the audit that returned the finding.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAuditFindingResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: findingId
          in: path
          required: true
          description: A unique identifier for a single audit finding. You can use this identifier to apply mitigation actions to the finding.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/audit/mitigationactions/tasks/{taskId}':
    get:
      operationId: DescribeAuditMitigationActionsTask
      description: 'Gets information about an audit mitigation task that is used to apply mitigation actions to a set of audit findings. Properties include the actions being applied, the audit checks to which they''re being applied, the task status, and aggregated task statistics.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAuditMitigationActionsTaskResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: The unique identifier for the audit mitigation task.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: StartAuditMitigationActionsTask
      description: Starts a task that applies a set of mitigation actions to the specified target.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartAuditMitigationActionsTaskResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TaskAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: A unique identifier for the task. You can use this identifier to check the status of the task or to cancel it.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - target
                - auditCheckToActionsMapping
                - clientRequestToken
              properties:
                target:
                  description: 'Used in MitigationActionParams, this information identifies the target findings to which the mitigation actions are applied. Only one entry appears.'
                  type: object
                  properties:
                    auditTaskId:
                      $ref: '#/components/schemas/AuditTaskId'
                      description: 'If the task will apply a mitigation action to findings from a specific audit, this value uniquely identifies the audit.'
                    findingIds:
                      $ref: '#/components/schemas/FindingIds'
                      description: 'If the task will apply a mitigation action to one or more listed findings, this value uniquely identifies those findings.'
                    auditCheckToReasonCodeFilter:
                      $ref: '#/components/schemas/AuditCheckToReasonCodeFilter'
                      description: Specifies a filter in the form of an audit check and set of reason codes that identify the findings from the audit to which the audit mitigation actions task apply.
                auditCheckToActionsMapping:
                  description: 'For an audit check, specifies which mitigation actions to apply. Those actions must be defined in your AWS account.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/MitigationActionNameList'
                clientRequestToken:
                  description: 'Each audit mitigation task must have a unique client request token. If you try to start a new task with the same token as a task that already exists, an exception occurs. If you omit this value, a unique client request token is generated automatically.'
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
  /audit/suppressions/describe:
    post:
      operationId: DescribeAuditSuppression
      description: ' Gets information about a Device Defender audit suppression. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAuditSuppressionResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - checkName
                - resourceIdentifier
              properties:
                checkName:
                  description: 'An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
                  type: string
                resourceIdentifier:
                  description: Information that identifies the noncompliant resource.
                  type: object
                  properties:
                    deviceCertificateId:
                      $ref: '#/components/schemas/CertificateId'
                      description: The ID of the certificate attached to the resource.
                    caCertificateId:
                      $ref: '#/components/schemas/CertificateId'
                      description: The ID of the CA certificate used to authorize the certificate.
                    cognitoIdentityPoolId:
                      $ref: '#/components/schemas/CognitoIdentityPoolId'
                      description: The ID of the Amazon Cognito identity pool.
                    clientId:
                      $ref: '#/components/schemas/ClientId'
                      description: The client ID.
                    policyVersionIdentifier:
                      $ref: '#/components/schemas/PolicyVersionIdentifier'
                      description: The version of the policy associated with the resource.
                    account:
                      $ref: '#/components/schemas/AwsAccountId'
                      description: The account with which the resource is associated.
                    iamRoleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: The ARN of the IAM role that has overly permissive actions.
                    roleAliasArn:
                      $ref: '#/components/schemas/RoleAliasArn'
                      description: The ARN of the role alias that has overly permissive actions.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/audit/tasks/{taskId}':
    get:
      operationId: DescribeAuditTask
      description: Gets information about a Device Defender audit.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAuditTaskResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the audit whose information you want to get.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-]+'
            minLength: 1
            maxLength: 40
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/detect/mitigationactions/tasks/{taskId}':
    get:
      operationId: DescribeDetectMitigationActionsTask
      description: ' Gets information about a Device Defender ML Detect mitigation action. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDetectMitigationActionsTaskResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: ' The unique identifier of the task. '
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: StartDetectMitigationActionsTask
      description: ' Starts a Device Defender ML Detect mitigation actions task. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDetectMitigationActionsTaskResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: TaskAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: ' The unique identifier of the task. '
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - target
                - actions
                - clientRequestToken
              properties:
                target:
                  description: ' The target of a mitigation action task. '
                  type: object
                  properties:
                    violationIds:
                      $ref: '#/components/schemas/TargetViolationIdsForDetectMitigationActions'
                      description: ' The unique identifiers of the violations. '
                    securityProfileName:
                      $ref: '#/components/schemas/SecurityProfileName'
                      description: ' The name of the security profile. '
                    behaviorName:
                      $ref: '#/components/schemas/BehaviorName'
                      description: ' The name of the behavior. '
                actions:
                  description: ' The actions to be performed when a device has unexpected behavior. '
                  type: array
                  items:
                    $ref: '#/components/schemas/MitigationActionName'
                  minItems: 1
                  maxItems: 5
                violationEventOccurrenceRange:
                  description: ' Specifies the time period of which violation events occurred between. '
                  type: object
                  properties:
                    startTime:
                      $ref: '#/components/schemas/Timestamp'
                      description: ' The start date and time of a time period in which violation events occurred. '
                    endTime:
                      $ref: '#/components/schemas/Timestamp'
                      description: ' The end date and time of a time period in which violation events occurred. '
                includeOnlyActiveViolations:
                  description: ' Specifies to list only active violations. '
                  type: boolean
                includeSuppressedAlerts:
                  description: ' Specifies to include suppressed alerts. '
                  type: boolean
                clientRequestToken:
                  description: ' Each mitigation action task must have a unique client request token. If you try to create a new task with the same token as a task that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
  /endpoint:
    get:
      operationId: DescribeEndpoint
      description: Returns a unique endpoint specific to the AWS account making the call.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEndpointResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: endpointType
          in: query
          required: false
          description: '<p>The endpoint type. Valid endpoint types include:</p> <ul> <li> <p> <code>iot:Data</code> - Returns a VeriSign signed data endpoint.</p> </li> </ul> <ul> <li> <p> <code>iot:Data-ATS</code> - Returns an ATS signed data endpoint.</p> </li> </ul> <ul> <li> <p> <code>iot:CredentialProvider</code> - Returns an AWS IoT credentials provider API endpoint.</p> </li> </ul> <ul> <li> <p> <code>iot:Jobs</code> - Returns an AWS IoT device management Jobs API endpoint.</p> </li> </ul> <p>We strongly recommend that customers use the newer <code>iot:Data-ATS</code> endpoint type to avoid issues related to the widespread distrust of Symantec certificate authorities.</p>'
          schema:
            type: string
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /event-configurations:
    get:
      operationId: DescribeEventConfigurations
      description: Describes event configurations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventConfigurationsResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    patch:
      operationId: UpdateEventConfigurations
      description: Updates the event configurations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEventConfigurationsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventConfigurations:
                  description: The new event configuration values.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Configuration'
  '/indices/{indexName}':
    get:
      operationId: DescribeIndex
      description: Describes a search index.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeIndexResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: indexName
          in: path
          required: true
          description: The index name.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/jobs/{jobId}':
    get:
      operationId: DescribeJobExecution
      description: Describes a job execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobExecutionResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier you assigned to this job when it was created.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
        - name: thingName
          in: path
          required: true
          description: The name of the thing on which the job execution is running.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: executionNumber
          in: query
          required: false
          description: A string (consisting of the digits "0" through "9" which is used to specify a particular job execution on a particular device.
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/thing-registration-tasks/{taskId}':
    get:
      operationId: DescribeThingRegistrationTask
      description: Describes a bulk thing provisioning task.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeThingRegistrationTaskResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: The task ID.
          schema:
            type: string
            maxLength: 40
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/rules/{ruleName}/disable':
    post:
      operationId: DisableTopicRule
      description: Disables the rule.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
      parameters:
        - name: ruleName
          in: path
          required: true
          description: The name of the rule to disable.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_]+$'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/rules/{ruleName}/enable':
    post:
      operationId: EnableTopicRule
      description: Enables the rule.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
      parameters:
        - name: ruleName
          in: path
          required: true
          description: The name of the topic rule to enable.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_]+$'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /behavior-model-training/summaries:
    get:
      operationId: GetBehaviorModelTrainingSummaries
      description: ' Returns a Device Defender''s ML Detect Security Profile training model''s status. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBehaviorModelTrainingSummariesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: securityProfileName
          in: query
          required: false
          description: ' The name of the security profile. '
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: maxResults
          in: query
          required: false
          description: ' The maximum number of results to return at one time. The default is 25. '
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - name: nextToken
          in: query
          required: false
          description: ' The token for the next set of results. '
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /indices/cardinality:
    post:
      operationId: GetCardinality
      description: Returns the approximate count of unique values that match the query.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCardinalityResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: InvalidQueryException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryException'
        '487':
          description: InvalidAggregationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAggregationException'
        '488':
          description: IndexNotReadyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexNotReadyException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - queryString
              properties:
                indexName:
                  description: The name of the index to search.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                queryString:
                  description: The search query.
                  type: string
                  minLength: 1
                aggregationField:
                  description: The field to aggregate.
                  type: string
                  minLength: 1
                queryVersion:
                  description: The query version.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /effective-policies:
    post:
      operationId: GetEffectivePolicies
      description: Gets a list of the policies that have an effect on the authorization behavior of the specified device when it connects to the AWS IoT device gateway.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectivePoliciesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: thingName
          in: query
          required: false
          description: The thing name.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                principal:
                  description: 'The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).'
                  type: string
                cognitoIdentityPoolId:
                  description: The Cognito identity pool ID.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /indexing/config:
    get:
      operationId: GetIndexingConfiguration
      description: Gets the indexing configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIndexingConfigurationResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateIndexingConfiguration
      description: Updates the search configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIndexingConfigurationResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingIndexingConfiguration:
                  description: 'The thing indexing configuration. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html">Managing Thing Indexing</a>.'
                  type: object
                  properties:
                    thingIndexingMode:
                      $ref: '#/components/schemas/ThingIndexingMode'
                      description: '<p>Thing indexing mode. Valid values are:</p> <ul> <li> <p>REGISTRY – Your thing index contains registry data only.</p> </li> <li> <p>REGISTRY_AND_SHADOW - Your thing index contains registry and shadow data.</p> </li> <li> <p>OFF - Thing indexing is disabled.</p> </li> </ul>'
                    thingConnectivityIndexingMode:
                      $ref: '#/components/schemas/ThingConnectivityIndexingMode'
                      description: '<p>Thing connectivity indexing mode. Valid values are: </p> <ul> <li> <p>STATUS – Your thing index contains connectivity status. To enable thing connectivity indexing, thingIndexMode must not be set to OFF.</p> </li> <li> <p>OFF - Thing connectivity status indexing is disabled.</p> </li> </ul>'
                    managedFields:
                      $ref: '#/components/schemas/Fields'
                      description: Contains fields that are indexed and whose types are already known by the Fleet Indexing service.
                    customFields:
                      $ref: '#/components/schemas/Fields'
                      description: Contains custom field names and their data type.
                thingGroupIndexingConfiguration:
                  description: Thing group indexing configuration.
                  type: object
                  properties:
                    thingGroupIndexingMode:
                      $ref: '#/components/schemas/ThingGroupIndexingMode'
                      description: Thing group indexing mode.
                    managedFields:
                      $ref: '#/components/schemas/Fields'
                      description: Contains fields that are indexed and whose types are already known by the Fleet Indexing service.
                    customFields:
                      $ref: '#/components/schemas/Fields'
                      description: <p>A list of thing group fields to index. This list cannot contain any managed fields. Use the GetIndexingConfiguration API to get a list of managed fields.</p> <p>Contains custom field names and their data type.</p>
  '/jobs/{jobId}/job-document':
    get:
      operationId: GetJobDocument
      description: Gets a job document.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobDocumentResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier you assigned to this job when it was created.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /loggingOptions:
    get:
      operationId: GetLoggingOptions
      description: '<p>Gets the logging options.</p> <p>NOTE: use of this command is not recommended. Use <code>GetV2LoggingOptions</code> instead.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoggingOptionsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: SetLoggingOptions
      description: '<p>Sets the logging options.</p> <p>NOTE: use of this command is not recommended. Use <code>SetV2LoggingOptions</code> instead.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - loggingOptionsPayload
              properties:
                loggingOptionsPayload:
                  description: Describes the logging options payload.
                  type: object
                  properties:
                    roleArn:
                      $ref: '#/components/schemas/AwsArn'
                      description: The ARN of the IAM role that grants access.
                    logLevel:
                      $ref: '#/components/schemas/LogLevel'
                      description: The log level.
  /indices/percentiles:
    post:
      operationId: GetPercentiles
      description: 'Groups the aggregated values that match the query into percentile groupings. The default percentile groupings are: 1,5,25,50,75,95,99, although you can specify your own when you call <code>GetPercentiles</code>. This function returns a value for each percentile group specified (or the default percentile groupings). The percentile group "1" contains the aggregated field value that occurs in approximately one percent of the values that match the query. The percentile group "5" contains the aggregated field value that occurs in approximately five percent of the values that match the query, and so on. The result is an approximation, the more values that match the query, the more accurate the percentile values.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPercentilesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: InvalidQueryException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryException'
        '487':
          description: InvalidAggregationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAggregationException'
        '488':
          description: IndexNotReadyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexNotReadyException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - queryString
              properties:
                indexName:
                  description: The name of the index to search.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                queryString:
                  description: The query string.
                  type: string
                  minLength: 1
                aggregationField:
                  description: The field to aggregate.
                  type: string
                  minLength: 1
                queryVersion:
                  description: The query version.
                  type: string
                percents:
                  description: The percentile groups returned.
                  type: array
                  items:
                    $ref: '#/components/schemas/Percent'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /indices/statistics:
    post:
      operationId: GetStatistics
      description: 'Returns the count, average, sum, minimum, maximum, sum of squares, variance, and standard deviation for the specified aggregated field. If the aggregation field is of type <code>String</code>, only the count statistic is returned.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatisticsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: InvalidQueryException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryException'
        '487':
          description: InvalidAggregationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAggregationException'
        '488':
          description: IndexNotReadyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexNotReadyException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - queryString
              properties:
                indexName:
                  description: The name of the index to search. The default value is <code>AWS_Things</code>.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                queryString:
                  description: The query used to search. You can specify "*" for the query string to get the count of all indexed things in your AWS account.
                  type: string
                  minLength: 1
                aggregationField:
                  description: The aggregation field name.
                  type: string
                  minLength: 1
                queryVersion:
                  description: The version of the query used to search.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2LoggingOptions:
    get:
      operationId: GetV2LoggingOptions
      description: Gets the fine grained logging options.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetV2LoggingOptionsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: NotConfiguredException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotConfiguredException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: SetV2LoggingOptions
      description: Sets the logging options for the V2 logging service.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleArn:
                  description: The ARN of the role that allows IoT to write to Cloudwatch logs.
                  type: string
                defaultLogLevel:
                  description: The default logging level.
                  type: string
                  enum:
                    - DEBUG
                    - INFO
                    - ERROR
                    - WARN
                    - DISABLED
                disableAllLogs:
                  description: If true all logs are disabled. The default is false.
                  type: boolean
  /active-violations:
    get:
      operationId: ListActiveViolations
      description: Lists the active violations for a given Device Defender security profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActiveViolationsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: thingName
          in: query
          required: false
          description: The name of the thing whose active violations are listed.
          schema:
            type: string
            minLength: 1
            maxLength: 128
        - name: securityProfileName
          in: query
          required: false
          description: The name of the Device Defender security profile for which violations are listed.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: behaviorCriteriaType
          in: query
          required: false
          description: ' The criteria for a behavior. '
          schema:
            type: string
            enum:
              - STATIC
              - STATISTICAL
              - MACHINE_LEARNING
        - name: listSuppressedAlerts
          in: query
          required: false
          description: ' A list of all suppressed alerts. '
          schema:
            type: boolean
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/attached-policies/{target}':
    post:
      operationId: ListAttachedPolicies
      description: Lists the policies attached to the specified thing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttachedPoliciesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: target
          in: path
          required: true
          description: 'The group or principal for which the policies will be listed. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).'
          schema:
            type: string
        - name: recursive
          in: query
          required: false
          description: 'When true, recursively list attached policies.'
          schema:
            type: boolean
        - name: marker
          in: query
          required: false
          description: The token to retrieve the next set of results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/]+={0,2}'
            maxLength: 1024
        - name: pageSize
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /audit/findings:
    post:
      operationId: ListAuditFindings
      description: Lists the findings (results) of a Device Defender audit or of the audits performed during a specified time period. (Findings are retained for 90 days.)
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuditFindingsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taskId:
                  description: 'A filter to limit results to the audit with the specified ID. You must specify either the taskId or the startTime and endTime, but not both.'
                  type: string
                  pattern: '[a-zA-Z0-9\-]+'
                  minLength: 1
                  maxLength: 40
                checkName:
                  description: 'An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
                  type: string
                resourceIdentifier:
                  description: Information that identifies the noncompliant resource.
                  type: object
                  properties:
                    deviceCertificateId:
                      $ref: '#/components/schemas/CertificateId'
                      description: The ID of the certificate attached to the resource.
                    caCertificateId:
                      $ref: '#/components/schemas/CertificateId'
                      description: The ID of the CA certificate used to authorize the certificate.
                    cognitoIdentityPoolId:
                      $ref: '#/components/schemas/CognitoIdentityPoolId'
                      description: The ID of the Amazon Cognito identity pool.
                    clientId:
                      $ref: '#/components/schemas/ClientId'
                      description: The client ID.
                    policyVersionIdentifier:
                      $ref: '#/components/schemas/PolicyVersionIdentifier'
                      description: The version of the policy associated with the resource.
                    account:
                      $ref: '#/components/schemas/AwsAccountId'
                      description: The account with which the resource is associated.
                    iamRoleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: The ARN of the IAM role that has overly permissive actions.
                    roleAliasArn:
                      $ref: '#/components/schemas/RoleAliasArn'
                      description: The ARN of the role alias that has overly permissive actions.
                maxResults:
                  description: The maximum number of results to return at one time. The default is 25.
                  type: integer
                  minimum: 1
                  maximum: 250
                nextToken:
                  description: The token for the next set of results.
                  type: string
                startTime:
                  description: 'A filter to limit results to those found after the specified time. You must specify either the startTime and endTime or the taskId, but not both.'
                  type: string
                  format: date-time
                endTime:
                  description: 'A filter to limit results to those found before the specified time. You must specify either the startTime and endTime or the taskId, but not both.'
                  type: string
                  format: date-time
                listSuppressedFindings:
                  description: ' Boolean flag indicating whether only the suppressed findings or the unsuppressed findings should be listed. If this parameter isn''t provided, the response will list both suppressed and unsuppressed findings. '
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /audit/mitigationactions/executions#taskId&findingId:
    get:
      operationId: ListAuditMitigationActionsExecutions
      description: Gets the status of audit mitigation action tasks that were executed.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuditMitigationActionsExecutionsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: taskId
          in: query
          required: true
          description: Specify this filter to limit results to actions for a specific audit mitigation actions task.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
        - name: actionStatus
          in: query
          required: false
          description: Specify this filter to limit results to those with a specific status.
          schema:
            type: string
            enum:
              - IN_PROGRESS
              - COMPLETED
              - FAILED
              - CANCELED
              - SKIPPED
              - PENDING
        - name: findingId
          in: query
          required: true
          description: Specify this filter to limit results to those that were applied to a specific audit finding.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time. The default is 25.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /audit/mitigationactions/tasks#startTime&endTime:
    get:
      operationId: ListAuditMitigationActionsTasks
      description: Gets a list of audit mitigation action tasks that match the specified filters.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuditMitigationActionsTasksResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: auditTaskId
          in: query
          required: false
          description: Specify this filter to limit results to tasks that were applied to results for a specific audit.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-]+'
            minLength: 1
            maxLength: 40
        - name: findingId
          in: query
          required: false
          description: Specify this filter to limit results to tasks that were applied to a specific audit finding.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
        - name: taskStatus
          in: query
          required: false
          description: Specify this filter to limit results to tasks that are in a specific state.
          schema:
            type: string
            enum:
              - IN_PROGRESS
              - COMPLETED
              - FAILED
              - CANCELED
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time. The default is 25.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: startTime
          in: query
          required: true
          description: Specify this filter to limit results to tasks that began on or after a specific date and time.
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          required: true
          description: Specify this filter to limit results to tasks that were completed or canceled on or before a specific date and time.
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /audit/suppressions/list:
    post:
      operationId: ListAuditSuppressions
      description: ' Lists your Device Defender audit listings. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuditSuppressionsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checkName:
                  description: 'An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
                  type: string
                resourceIdentifier:
                  description: Information that identifies the noncompliant resource.
                  type: object
                  properties:
                    deviceCertificateId:
                      $ref: '#/components/schemas/CertificateId'
                      description: The ID of the certificate attached to the resource.
                    caCertificateId:
                      $ref: '#/components/schemas/CertificateId'
                      description: The ID of the CA certificate used to authorize the certificate.
                    cognitoIdentityPoolId:
                      $ref: '#/components/schemas/CognitoIdentityPoolId'
                      description: The ID of the Amazon Cognito identity pool.
                    clientId:
                      $ref: '#/components/schemas/ClientId'
                      description: The client ID.
                    policyVersionIdentifier:
                      $ref: '#/components/schemas/PolicyVersionIdentifier'
                      description: The version of the policy associated with the resource.
                    account:
                      $ref: '#/components/schemas/AwsAccountId'
                      description: The account with which the resource is associated.
                    iamRoleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: The ARN of the IAM role that has overly permissive actions.
                    roleAliasArn:
                      $ref: '#/components/schemas/RoleAliasArn'
                      description: The ARN of the role alias that has overly permissive actions.
                ascendingOrder:
                  description: ' Determines whether suppressions are listed in ascending order by expiration date or not. If parameter isn''t provided, <code>ascendingOrder=true</code>. '
                  type: boolean
                nextToken:
                  description: ' The token for the next set of results. '
                  type: string
                maxResults:
                  description: ' The maximum number of results to return at one time. The default is 25. '
                  type: integer
                  minimum: 1
                  maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /audit/tasks#startTime&endTime:
    get:
      operationId: ListAuditTasks
      description: Lists the Device Defender audits that have been performed during a given time period.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuditTasksResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: startTime
          in: query
          required: true
          description: The beginning of the time period. Audit information is retained for a limited time (90 days). Requesting a start time prior to what is retained results in an "InvalidRequestException".
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          required: true
          description: The end of the time period.
          schema:
            type: string
            format: date-time
        - name: taskType
          in: query
          required: false
          description: 'A filter to limit the output to the specified type of audit: can be one of "ON_DEMAND_AUDIT_TASK" or "SCHEDULED__AUDIT_TASK".'
          schema:
            type: string
            enum:
              - ON_DEMAND_AUDIT_TASK
              - SCHEDULED_AUDIT_TASK
        - name: taskStatus
          in: query
          required: false
          description: 'A filter to limit the output to audits with the specified completion status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED", or "CANCELED".'
          schema:
            type: string
            enum:
              - IN_PROGRESS
              - COMPLETED
              - FAILED
              - CANCELED
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time. The default is 25.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /authorizers/:
    get:
      operationId: ListAuthorizers
      description: Lists the authorizers registered in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuthorizersResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: pageSize
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: marker
          in: query
          required: false
          description: A marker used to get the next set of results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/]+={0,2}'
            maxLength: 1024
        - name: isAscendingOrder
          in: query
          required: false
          description: Return the list of authorizers in ascending alphabetical order.
          schema:
            type: boolean
        - name: status
          in: query
          required: false
          description: The status of the list authorizers request.
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /billing-groups:
    get:
      operationId: ListBillingGroups
      description: Lists the billing groups you have created.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBillingGroupsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per request.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: namePrefixFilter
          in: query
          required: false
          description: Limit the results to billing groups whose names have the given prefix.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /cacertificates:
    get:
      operationId: ListCACertificates
      description: <p>Lists the CA certificates registered for your AWS account.</p> <p>The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCACertificatesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/]+={0,2}'
            maxLength: 1024
        - name: isAscendingOrder
          in: query
          required: false
          description: Determines the order of the results.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/certificates-by-ca/{caCertificateId}':
    get:
      operationId: ListCertificatesByCA
      description: List the device certificates signed by the specified CA certificate.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificatesByCAResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: caCertificateId
          in: path
          required: true
          description: The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.
          schema:
            type: string
            pattern: '(0x)?[a-fA-F0-9]+'
            minLength: 64
            maxLength: 64
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/]+={0,2}'
            maxLength: 1024
        - name: isAscendingOrder
          in: query
          required: false
          description: 'Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /custom-metrics:
    get:
      operationId: ListCustomMetrics
      description: ' Lists your Device Defender detect custom metrics. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomMetricsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: ' The token for the next set of results. '
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: ' The maximum number of results to return at one time. The default is 25. '
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /detect/mitigationactions/executions:
    get:
      operationId: ListDetectMitigationActionsExecutions
      description: ' Lists mitigation actions executions for a Device Defender ML Detect Security Profile. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDetectMitigationActionsExecutionsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: taskId
          in: query
          required: false
          description: ' The unique identifier of the task. '
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 128
        - name: violationId
          in: query
          required: false
          description: ' The unique identifier of the violation. '
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-]+'
            minLength: 1
            maxLength: 128
        - name: thingName
          in: query
          required: false
          description: ' The name of the thing whose mitigation actions are listed. '
          schema:
            type: string
            minLength: 1
            maxLength: 128
        - name: startTime
          in: query
          required: false
          description: ' A filter to limit results to those found after the specified time. You must specify either the startTime and endTime or the taskId, but not both. '
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          required: false
          description: ' The end of the time period for which ML Detect mitigation actions executions are returned. '
          schema:
            type: string
            format: date-time
        - name: maxResults
          in: query
          required: false
          description: ' The maximum number of results to return at one time. The default is 25. '
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: ' The token for the next set of results. '
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /detect/mitigationactions/tasks#startTime&endTime:
    get:
      operationId: ListDetectMitigationActionsTasks
      description: ' List of Device Defender ML Detect mitigation actions tasks. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDetectMitigationActionsTasksResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time. The default is 25.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: ' The token for the next set of results. '
          schema:
            type: string
        - name: startTime
          in: query
          required: true
          description: ' A filter to limit results to those found after the specified time. You must specify either the startTime and endTime or the taskId, but not both. '
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          required: true
          description: ' The end of the time period for which ML Detect mitigation actions tasks are returned. '
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /dimensions:
    get:
      operationId: ListDimensions
      description: List the set of dimensions that are defined for your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDimensionsResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to retrieve at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /domainConfigurations:
    get:
      operationId: ListDomainConfigurations
      description: Gets a list of domain configurations for the user. This list is sorted alphabetically by domain configuration name.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainConfigurationsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/]+={0,2}'
            maxLength: 1024
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: serviceType
          in: query
          required: false
          description: The type of service delivered by the endpoint.
          schema:
            type: string
            enum:
              - DATA
              - CREDENTIAL_PROVIDER
              - JOBS
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /indices:
    get:
      operationId: ListIndices
      description: Lists the search indices.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIndicesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The token used to get the next set of results, or <code>null</code> if there are no additional results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 500
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/jobs/{jobId}/things':
    get:
      operationId: ListJobExecutionsForJob
      description: Lists the job executions for a job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobExecutionsForJobResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier you assigned to this job when it was created.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
        - name: status
          in: query
          required: false
          description: The status of the job.
          schema:
            type: string
            enum:
              - QUEUED
              - IN_PROGRESS
              - SUCCEEDED
              - FAILED
              - TIMED_OUT
              - REJECTED
              - REMOVED
              - CANCELED
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/jobs':
    get:
      operationId: ListJobExecutionsForThing
      description: Lists the job executions for the specified thing.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobExecutionsForThingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The thing name.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: status
          in: query
          required: false
          description: An optional filter that lets you search for jobs that have the specified status.
          schema:
            type: string
            enum:
              - QUEUED
              - IN_PROGRESS
              - SUCCEEDED
              - FAILED
              - TIMED_OUT
              - REJECTED
              - REMOVED
              - CANCELED
        - name: namespaceId
          in: query
          required: false
          description: '<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, AWS IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>'
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /job-templates:
    get:
      operationId: ListJobTemplates
      description: Returns a list of job templates.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobTemplatesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in the list.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token to use to return the next set of results in the list.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /jobs:
    get:
      operationId: ListJobs
      description: Lists jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: status
          in: query
          required: false
          description: An optional filter that lets you search for jobs that have the specified status.
          schema:
            type: string
            enum:
              - IN_PROGRESS
              - CANCELED
              - COMPLETED
              - DELETION_IN_PROGRESS
        - name: targetSelection
          in: query
          required: false
          description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group. '
          schema:
            type: string
            enum:
              - CONTINUOUS
              - SNAPSHOT
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per request.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          schema:
            type: string
        - name: thingGroupName
          in: query
          required: false
          description: A filter that limits the returned jobs to those for the specified group.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: thingGroupId
          in: query
          required: false
          description: A filter that limits the returned jobs to those for the specified group.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\-]+'
            minLength: 1
            maxLength: 128
        - name: namespaceId
          in: query
          required: false
          description: '<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, AWS IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>'
          schema:
            type: string
            pattern: '[a-zA-Z0-9_-]+'
            minLength: 1
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /mitigationactions/actions:
    get:
      operationId: ListMitigationActions
      description: Gets a list of all mitigation actions that match the specified filter criteria.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMitigationActionsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: actionType
          in: query
          required: false
          description: Specify a value to limit the result to mitigation actions with a specific action type.
          schema:
            type: string
            enum:
              - UPDATE_DEVICE_CERTIFICATE
              - UPDATE_CA_CERTIFICATE
              - ADD_THINGS_TO_THING_GROUP
              - REPLACE_DEFAULT_POLICY_VERSION
              - ENABLE_IOT_LOGGING
              - PUBLISH_FINDING_TO_SNS
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time. The default is 25.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /otaUpdates:
    get:
      operationId: ListOTAUpdates
      description: Lists OTA updates.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOTAUpdatesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: A token used to retrieve the next set of results.
          schema:
            type: string
        - name: otaUpdateStatus
          in: query
          required: false
          description: The OTA update job status.
          schema:
            type: string
            enum:
              - CREATE_PENDING
              - CREATE_IN_PROGRESS
              - CREATE_COMPLETE
              - CREATE_FAILED
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /certificates-out-going:
    get:
      operationId: ListOutgoingCertificates
      description: Lists certificates that are being transferred but not yet accepted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOutgoingCertificatesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/]+={0,2}'
            maxLength: 1024
        - name: isAscendingOrder
          in: query
          required: false
          description: 'Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /policies:
    get:
      operationId: ListPolicies
      description: Lists your policies.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPoliciesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/]+={0,2}'
            maxLength: 1024
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: isAscendingOrder
          in: query
          required: false
          description: 'Specifies the order for results. If true, the results are returned in ascending creation order.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /policy-principals#x-amzn-iot-policy:
    get:
      deprecated: true
      operationId: ListPolicyPrincipals
      description: '<p>Lists the principals associated with the specified policy.</p> <p> <b>Note:</b> This API is deprecated. Please use <a>ListTargetsForPolicy</a> instead.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPolicyPrincipalsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: x-amzn-iot-policy
          in: header
          required: true
          description: The policy name.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/]+={0,2}'
            maxLength: 1024
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: isAscendingOrder
          in: query
          required: false
          description: 'Specifies the order for results. If true, the results are returned in ascending creation order.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /principal-policies#x-amzn-iot-principal:
    get:
      deprecated: true
      operationId: ListPrincipalPolicies
      description: '<p>Lists the policies attached to the specified principal. If you use an Cognito identity, the ID must be in <a href="https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax">AmazonCognito Identity format</a>.</p> <p> <b>Note:</b> This API is deprecated. Please use <a>ListAttachedPolicies</a> instead.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrincipalPoliciesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: x-amzn-iot-principal
          in: header
          required: true
          description: 'The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).'
          schema:
            type: string
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/]+={0,2}'
            maxLength: 1024
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: isAscendingOrder
          in: query
          required: false
          description: 'Specifies the order for results. If true, results are returned in ascending creation order.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /principals/things#x-amzn-principal:
    get:
      operationId: ListPrincipalThings
      description: 'Lists the things associated with the specified principal. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrincipalThingsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: x-amzn-principal
          in: header
          required: true
          description: The principal.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /role-aliases:
    get:
      operationId: ListRoleAliases
      description: Lists the role aliases registered in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoleAliasesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: pageSize
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: marker
          in: query
          required: false
          description: A marker used to get the next set of results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/]+={0,2}'
            maxLength: 1024
        - name: isAscendingOrder
          in: query
          required: false
          description: Return the list of role aliases in ascending alphabetical order.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /audit/scheduledaudits:
    get:
      operationId: ListScheduledAudits
      description: Lists all of your scheduled audits.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScheduledAuditsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time. The default is 25.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /security-profiles:
    get:
      operationId: ListSecurityProfiles
      description: <p>Lists the Device Defender security profiles you've created. You can filter security profiles by dimension or custom metric.</p> <note> <p> <code>dimensionName</code> and <code>metricName</code> cannot be used in the same request.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecurityProfilesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: dimensionName
          in: query
          required: false
          description: 'A filter to limit results to the security profiles that use the defined dimension. Cannot be used with <code>metricName</code> '
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: metricName
          in: query
          required: false
          description: ' The name of the custom metric. Cannot be used with <code>dimensionName</code>. '
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /security-profiles-for-target#securityProfileTargetArn:
    get:
      operationId: ListSecurityProfilesForTarget
      description: Lists the Device Defender security profiles attached to a target (thing group).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecurityProfilesForTargetResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: recursive
          in: query
          required: false
          description: 'If true, return child groups too.'
          schema:
            type: boolean
        - name: securityProfileTargetArn
          in: query
          required: true
          description: The ARN of the target (thing group) whose attached security profiles you want to get.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /streams:
    get:
      operationId: ListStreams
      description: Lists all of the streams in your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at a time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: A token used to get the next set of results.
          schema:
            type: string
        - name: isAscendingOrder
          in: query
          required: false
          description: Set to true to return the list of streams in ascending order.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tags#resourceArn:
    get:
      operationId: ListTagsForResource
      description: Lists the tags (metadata) you have assigned to the resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: The ARN of the resource.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/policy-targets/{policyName}':
    post:
      operationId: ListTargetsForPolicy
      description: List targets for the specified policy.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetsForPolicyResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy name.
          schema:
            type: string
            pattern: '[\w+=,.@-]+'
            minLength: 1
            maxLength: 128
        - name: marker
          in: query
          required: false
          description: A marker used to get the next set of results.
          schema:
            type: string
            pattern: '[A-Za-z0-9+/]+={0,2}'
            maxLength: 1024
        - name: pageSize
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/security-profiles/{securityProfileName}/targets':
    get:
      operationId: ListTargetsForSecurityProfile
      description: Lists the targets (thing groups) associated with a given Device Defender security profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetsForSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The security profile.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /thing-groups:
    get:
      operationId: ListThingGroups
      description: List the thing groups in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThingGroupsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: parentGroup
          in: query
          required: false
          description: A filter that limits the results to those with the specified parent group.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: namePrefixFilter
          in: query
          required: false
          description: A filter that limits the results to those with the specified name prefix.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: recursive
          in: query
          required: false
          description: 'If true, return child groups as well.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/thing-groups':
    get:
      operationId: ListThingGroupsForThing
      description: List the thing groups to which the specified thing belongs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThingGroupsForThingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The thing name.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/principals':
    get:
      operationId: ListThingPrincipals
      description: 'Lists the principals associated with the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThingPrincipalsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: thingName
          in: path
          required: true
          description: The name of the thing.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/thing-registration-tasks/{taskId}/reports#reportType':
    get:
      operationId: ListThingRegistrationTaskReports
      description: Information about the thing registration tasks.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThingRegistrationTaskReportsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: The id of the task.
          schema:
            type: string
            maxLength: 40
        - name: reportType
          in: query
          required: true
          description: The type of task report.
          schema:
            type: string
            enum:
              - ERRORS
              - RESULTS
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per request.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /thing-registration-tasks:
    get:
      operationId: ListThingRegistrationTasks
      description: List bulk thing provisioning tasks.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThingRegistrationTasksResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: status
          in: query
          required: false
          description: The status of the bulk thing provisioning task.
          schema:
            type: string
            enum:
              - InProgress
              - Completed
              - Failed
              - Cancelled
              - Cancelling
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: StartThingRegistrationTask
      description: Creates a bulk thing provisioning task.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartThingRegistrationTaskResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - templateBody
                - inputFileBucket
                - inputFileKey
                - roleArn
              properties:
                templateBody:
                  description: The provisioning template.
                  type: string
                inputFileBucket:
                  description: The S3 bucket that contains the input file.
                  type: string
                  pattern: '[a-zA-Z0-9._-]+'
                  minLength: 3
                  maxLength: 256
                inputFileKey:
                  description: The name of input file within the S3 bucket. This file contains a newline delimited JSON file. Each line contains the parameter values to provision one device (thing).
                  type: string
                  pattern: '[a-zA-Z0-9!_.*''()-\/]+'
                  minLength: 1
                  maxLength: 1024
                roleArn:
                  description: The IAM role ARN that grants permission the input file.
                  type: string
                  minLength: 20
                  maxLength: 2048
  /thing-types:
    get:
      operationId: ListThingTypes
      description: Lists the existing thing types.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThingTypesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: thingTypeName
          in: query
          required: false
          description: The name of the thing type.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /things:
    get:
      operationId: ListThings
      description: '<p>Lists your things. Use the <b>attributeName</b> and <b>attributeValue</b> parameters to filter your things. For example, calling <code>ListThings</code> with attributeName=Color and attributeValue=Red retrieves all things in the registry that contain an attribute <b>Color</b> with the value <b>Red</b>. </p> <note> <p>You will not be charged for calling this API if an <code>Access denied</code> error is returned. You will also not be charged if no attributes or pagination token was provided in request and no pagination token and no results were returned.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThingsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            minimum: 1
            maximum: 250
        - name: attributeName
          in: query
          required: false
          description: The attribute name used to search for things.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_.,@/:#-]+'
            maxLength: 128
        - name: attributeValue
          in: query
          required: false
          description: The attribute value used to search for things.
          schema:
            type: string
            pattern: '[a-zA-Z0-9_.,@/:#-]*'
            maxLength: 800
        - name: thingTypeName
          in: query
          required: false
          description: The name of the thing type used to search for things.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: usePrefixAttributeValue
          in: query
          required: false
          description: '<p>When <code>true</code>, the action returns the thing resources with attribute values that start with the <code>attributeValue</code> provided.</p> <p>When <code>false</code>, or not present, the action returns only the thing resources with attribute values that match the entire <code>attributeValue</code> provided. </p>'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: RegisterThing
      description: 'Provisions a thing in the device registry. RegisterThing calls other AWS IoT control plane APIs. These calls might exceed your account level <a href="https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_iot"> AWS IoT Throttling Limits</a> and cause throttle errors. Please contact <a href="https://console.aws.amazon.com/support/home">AWS Customer Support</a> to raise your throttling limits if necessary.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterThingResponse'
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictingResourceUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
        '486':
          description: ResourceRegistrationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRegistrationFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - templateBody
              properties:
                templateBody:
                  description: 'The provisioning template. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-w-cert.html">Provisioning Devices That Have Device Certificates</a> for more information.'
                  type: string
                parameters:
                  description: 'The parameters for provisioning a thing. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html">Provisioning Templates</a> for more information.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Value'
  '/billing-groups/{billingGroupName}/things':
    get:
      operationId: ListThingsInBillingGroup
      description: Lists the things you have added to the given billing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThingsInBillingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: billingGroupName
          in: path
          required: true
          description: The name of the billing group.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per request.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/thing-groups/{thingGroupName}/things':
    get:
      operationId: ListThingsInThingGroup
      description: Lists the things in the specified group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThingsInThingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The thing group name.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: recursive
          in: query
          required: false
          description: 'When true, list things in this thing group and in all child groups as well.'
          schema:
            type: boolean
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /rules:
    get:
      operationId: ListTopicRules
      description: Lists the rules for the specific topic.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicRulesResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: topic
          in: query
          required: false
          description: The topic.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 10000
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: ruleDisabled
          in: query
          required: false
          description: Specifies whether the rule is disabled.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2LoggingLevel:
    get:
      operationId: ListV2LoggingLevels
      description: Lists logging levels.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListV2LoggingLevelsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: NotConfiguredException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotConfiguredException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: targetType
          in: query
          required: false
          description: The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.
          schema:
            type: string
            enum:
              - DEFAULT
              - THING_GROUP
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: SetV2LoggingLevel
      description: Sets the logging level.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: NotConfiguredException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotConfiguredException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - logTarget
                - logLevel
              properties:
                logTarget:
                  description: A log target.
                  type: object
                  properties:
                    targetType:
                      $ref: '#/components/schemas/LogTargetType'
                      description: The target type.
                    targetName:
                      $ref: '#/components/schemas/LogTargetName'
                      description: The target name.
                logLevel:
                  description: The log level.
                  type: string
                  enum:
                    - DEBUG
                    - INFO
                    - ERROR
                    - WARN
                    - DISABLED
  /violation-events#startTime&endTime:
    get:
      operationId: ListViolationEvents
      description: 'Lists the Device Defender security profile violations discovered during the given time period. You can use filters to limit the results to those alerts issued for a particular security profile, behavior, or thing (device).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViolationEventsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: startTime
          in: query
          required: true
          description: The start time for the alerts to be listed.
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          required: true
          description: The end time for the alerts to be listed.
          schema:
            type: string
            format: date-time
        - name: thingName
          in: query
          required: false
          description: A filter to limit results to those alerts caused by the specified thing.
          schema:
            type: string
            minLength: 1
            maxLength: 128
        - name: securityProfileName
          in: query
          required: false
          description: A filter to limit results to those alerts generated by the specified security profile.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: behaviorCriteriaType
          in: query
          required: false
          description: ' The criteria for a behavior. '
          schema:
            type: string
            enum:
              - STATIC
              - STATISTICAL
              - MACHINE_LEARNING
        - name: listSuppressedAlerts
          in: query
          required: false
          description: ' A list of all suppressed alerts. '
          schema:
            type: boolean
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          schema:
            type: integer
            minimum: 1
            maximum: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /cacertificate:
    post:
      operationId: RegisterCACertificate
      description: 'Registers a CA certificate with AWS IoT. This CA certificate can then be used to sign device certificates, which can be then registered with AWS IoT. You can register up to 10 CA certificates per AWS account that have the same subject field. This enables you to have up to 10 certificate authorities sign your device certificates. If you have more than one CA certificate registered, make sure you pass the CA certificate when you register your device certificates with the RegisterCertificate API.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterCACertificateResponse'
        '480':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '481':
          description: RegistrationCodeValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationCodeValidationException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: CertificateValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '487':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '488':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: setAsActive
          in: query
          required: false
          description: A boolean value that specifies if the CA certificate is set to active.
          schema:
            type: boolean
        - name: allowAutoRegistration
          in: query
          required: false
          description: Allows this CA certificate to be used for auto registration of device certificates.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - caCertificate
                - verificationCertificate
              properties:
                caCertificate:
                  description: The PEM of a certificate.
                  type: string
                  minLength: 1
                  maxLength: 65536
                verificationCertificate:
                  description: The PEM of a certificate.
                  type: string
                  minLength: 1
                  maxLength: 65536
                registrationConfig:
                  description: The registration configuration.
                  type: object
                  properties:
                    templateBody:
                      $ref: '#/components/schemas/TemplateBody'
                      description: The template body.
                    roleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: The ARN of the role.
                tags:
                  description: '<p>Metadata which can be used to manage the CA certificate.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /certificate/register:
    post:
      operationId: RegisterCertificate
      description: 'Registers a device certificate with AWS IoT. If you have more than one CA certificate that has the same subject field, you must specify the CA certificate that was used to sign the device certificate being registered.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterCertificateResponse'
        '480':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: CertificateValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
        '483':
          description: CertificateStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateStateException'
        '484':
          description: CertificateConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '487':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '488':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: setAsActive
          in: query
          required: false
          description: A boolean value that specifies if the certificate is set to active.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificatePem
              properties:
                certificatePem:
                  description: The PEM of a certificate.
                  type: string
                  minLength: 1
                  maxLength: 65536
                caCertificatePem:
                  description: The PEM of a certificate.
                  type: string
                  minLength: 1
                  maxLength: 65536
                status:
                  description: The status of the register certificate request.
                  type: string
                  enum:
                    - ACTIVE
                    - INACTIVE
                    - REVOKED
                    - PENDING_TRANSFER
                    - REGISTER_INACTIVE
                    - PENDING_ACTIVATION
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /certificate/register-no-ca:
    post:
      operationId: RegisterCertificateWithoutCA
      description: Register a certificate that does not have a certificate authority (CA).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterCertificateWithoutCAResponse'
        '480':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: CertificateStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateStateException'
        '483':
          description: CertificateValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificatePem
              properties:
                certificatePem:
                  description: The PEM of a certificate.
                  type: string
                  minLength: 1
                  maxLength: 65536
                status:
                  description: The status of the register certificate request.
                  type: string
                  enum:
                    - ACTIVE
                    - INACTIVE
                    - REVOKED
                    - PENDING_TRANSFER
                    - REGISTER_INACTIVE
                    - PENDING_ACTIVATION
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/reject-certificate-transfer/{certificateId}':
    patch:
      operationId: RejectCertificateTransfer
      description: '<p>Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer, the certificate status changes from <b>PENDING_TRANSFER</b> to <b>INACTIVE</b>.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p> <p>This operation can only be called by the transfer destination. After it is called, the certificate will be returned to the source''s account in the INACTIVE state.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: TransferAlreadyCompletedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferAlreadyCompletedException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          schema:
            type: string
            pattern: '(0x)?[a-fA-F0-9]+'
            minLength: 64
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rejectReason:
                  description: The reason the certificate transfer was rejected.
                  type: string
                  maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /billing-groups/removeThingFromBillingGroup:
    put:
      operationId: RemoveThingFromBillingGroup
      description: Removes the given thing from the billing group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveThingFromBillingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                billingGroupName:
                  description: The name of the billing group.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                billingGroupArn:
                  description: The ARN of the billing group.
                  type: string
                thingName:
                  description: The name of the thing to be removed from the billing group.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                thingArn:
                  description: The ARN of the thing to be removed from the billing group.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /thing-groups/removeThingFromThingGroup:
    put:
      operationId: RemoveThingFromThingGroup
      description: <p>Remove the specified thing from the specified group.</p> <p>You must specify either a <code>thingGroupArn</code> or a <code>thingGroupName</code> to identify the thing group and either a <code>thingArn</code> or a <code>thingName</code> to identify the thing to remove from the thing group. </p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveThingFromThingGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingGroupName:
                  description: The group name.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                thingGroupArn:
                  description: The group ARN.
                  type: string
                thingName:
                  description: The name of the thing to remove from the group.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                thingArn:
                  description: The ARN of the thing to remove from the group.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /indices/search:
    post:
      operationId: SearchIndex
      description: The query search index.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchIndexResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: InvalidQueryException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryException'
        '487':
          description: IndexNotReadyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexNotReadyException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - queryString
              properties:
                indexName:
                  description: The search index name.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                queryString:
                  description: The search query string.
                  type: string
                  minLength: 1
                nextToken:
                  description: 'The token used to get the next set of results, or <code>null</code> if there are no additional results.'
                  type: string
                maxResults:
                  description: The maximum number of results to return at one time.
                  type: integer
                  minimum: 1
                  maximum: 500
                queryVersion:
                  description: The query version.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /audit/tasks:
    post:
      operationId: StartOnDemandAuditTask
      description: Starts an on-demand Device Defender audit.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartOnDemandAuditTaskResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targetCheckNames
              properties:
                targetCheckNames:
                  description: 'Which checks are performed during the audit. The checks you specify must be enabled for your account or an exception occurs. Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.'
                  type: array
                  items:
                    $ref: '#/components/schemas/AuditCheckName'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/thing-registration-tasks/{taskId}/cancel':
    put:
      operationId: StopThingRegistrationTask
      description: Cancels a bulk thing provisioning task.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopThingRegistrationTaskResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: The bulk thing provisioning task ID.
          schema:
            type: string
            maxLength: 40
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tags:
    post:
      operationId: TagResource
      description: Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - resourceArn
                - tags
              properties:
                resourceArn:
                  description: The ARN of the resource.
                  type: string
                tags:
                  description: The new or modified tags for the resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /test-authorization:
    post:
      operationId: TestAuthorization
      description: Tests if a specified principal is authorized to perform an AWS IoT action on a specified resource. Use this to test and debug the authorization behavior of devices that connect to the AWS IoT device gateway.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestAuthorizationResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: clientId
          in: query
          required: false
          description: The MQTT client ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - authInfos
              properties:
                principal:
                  description: 'The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).'
                  type: string
                cognitoIdentityPoolId:
                  description: The Cognito identity pool ID.
                  type: string
                authInfos:
                  description: A list of authorization info objects. Simulating authorization will create a response for each <code>authInfo</code> object in the list.
                  type: array
                  items:
                    $ref: '#/components/schemas/AuthInfo'
                  minItems: 1
                  maxItems: 10
                policyNamesToAdd:
                  description: 'When testing custom authorization, the policies specified here are treated as if they are attached to the principal being authorized.'
                  type: array
                  items:
                    $ref: '#/components/schemas/PolicyName'
                policyNamesToSkip:
                  description: 'When testing custom authorization, the policies specified here are treated as if they are not attached to the principal being authorized.'
                  type: array
                  items:
                    $ref: '#/components/schemas/PolicyName'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/authorizer/{authorizerName}/test':
    post:
      operationId: TestInvokeAuthorizer
      description: Tests a custom authorization behavior by invoking a specified custom authorizer. Use this to test and debug the custom authorization behavior of devices that connect to the AWS IoT device gateway.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestInvokeAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: InvalidResponseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponseException'
      parameters:
        - name: authorizerName
          in: path
          required: true
          description: The custom authorizer name.
          schema:
            type: string
            pattern: '[\w=,@-]+'
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  description: The token returned by your custom authentication service.
                  type: string
                  minLength: 1
                  maxLength: 6144
                tokenSignature:
                  description: The signature made with the token and your custom authentication service's private key. This value must be Base-64-encoded.
                  type: string
                  pattern: '[A-Za-z0-9+/]+={0,2}'
                  minLength: 1
                  maxLength: 2560
                httpContext:
                  description: Specifies the HTTP context to use for the test authorizer request.
                  type: object
                  properties:
                    headers:
                      $ref: '#/components/schemas/HttpHeaders'
                      description: The header keys and values in an HTTP authorization request.
                    queryString:
                      $ref: '#/components/schemas/HttpQueryString'
                      description: The query string keys and values in an HTTP authorization request.
                mqttContext:
                  description: Specifies the MQTT context to use for the test authorizer request
                  type: object
                  properties:
                    username:
                      $ref: '#/components/schemas/MqttUsername'
                      description: The value of the <code>username</code> key in an MQTT authorization request.
                    password:
                      $ref: '#/components/schemas/MqttPassword'
                      description: The value of the <code>password</code> key in an MQTT authorization request.
                    clientId:
                      $ref: '#/components/schemas/MqttClientId'
                      description: The value of the <code>clientId</code> key in an MQTT authorization request.
                tlsContext:
                  description: Specifies the TLS context to use for the test authorizer request.
                  type: object
                  properties:
                    serverName:
                      $ref: '#/components/schemas/ServerName'
                      description: The value of the <code>serverName</code> key in a TLS authorization request.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/transfer-certificate/{certificateId}#targetAwsAccount':
    patch:
      operationId: TransferCertificate
      description: <p>Transfers the specified certificate to the specified AWS account.</p> <p>You can cancel the transfer until it is acknowledged by the recipient.</p> <p>No notification is sent to the transfer destination's account. It is up to the caller to notify the transfer target.</p> <p>The certificate being transferred must not be in the ACTIVE state. You can use the UpdateCertificate API to deactivate it.</p> <p>The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy API to detach them.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferCertificateResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: CertificateStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateStateException'
        '483':
          description: TransferConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferConflictException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          schema:
            type: string
            pattern: '(0x)?[a-fA-F0-9]+'
            minLength: 64
            maxLength: 64
        - name: targetAwsAccount
          in: query
          required: true
          description: The AWS account.
          schema:
            type: string
            pattern: '[0-9]+'
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transferMessage:
                  description: The transfer message.
                  type: string
                  maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /untag:
    post:
      operationId: UntagResource
      description: Removes the given tags (metadata) from the resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - resourceArn
                - tagKeys
              properties:
                resourceArn:
                  description: The ARN of the resource.
                  type: string
                tagKeys:
                  description: A list of the keys of the tags to be removed from the resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/TagKey'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /audit/suppressions/update:
    patch:
      operationId: UpdateAuditSuppression
      description: ' Updates a Device Defender audit suppression. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAuditSuppressionResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - checkName
                - resourceIdentifier
              properties:
                checkName:
                  description: 'An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
                  type: string
                resourceIdentifier:
                  description: Information that identifies the noncompliant resource.
                  type: object
                  properties:
                    deviceCertificateId:
                      $ref: '#/components/schemas/CertificateId'
                      description: The ID of the certificate attached to the resource.
                    caCertificateId:
                      $ref: '#/components/schemas/CertificateId'
                      description: The ID of the CA certificate used to authorize the certificate.
                    cognitoIdentityPoolId:
                      $ref: '#/components/schemas/CognitoIdentityPoolId'
                      description: The ID of the Amazon Cognito identity pool.
                    clientId:
                      $ref: '#/components/schemas/ClientId'
                      description: The client ID.
                    policyVersionIdentifier:
                      $ref: '#/components/schemas/PolicyVersionIdentifier'
                      description: The version of the policy associated with the resource.
                    account:
                      $ref: '#/components/schemas/AwsAccountId'
                      description: The account with which the resource is associated.
                    iamRoleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: The ARN of the IAM role that has overly permissive actions.
                    roleAliasArn:
                      $ref: '#/components/schemas/RoleAliasArn'
                      description: The ARN of the role alias that has overly permissive actions.
                expirationDate:
                  description: ' The expiration date (epoch timestamp in seconds) that you want the suppression to adhere to. '
                  type: string
                  format: date-time
                suppressIndefinitely:
                  description: ' Indicates whether a suppression should exist indefinitely or not. '
                  type: boolean
                description:
                  description: ' The description of the audit suppression. '
                  type: string
                  pattern: '[\p{Graph}\x20]*'
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/certificates/{certificateId}#newStatus':
    put:
      operationId: UpdateCertificate
      description: '<p>Updates the status of the specified certificate. This operation is idempotent.</p> <p>Certificates must be in the ACTIVE state to authenticate devices that use a certificate to connect to AWS IoT.</p> <p>Within a few minutes of updating a certificate from the ACTIVE state to any other state, AWS IoT disconnects all devices that used that certificate to connect. Devices cannot use a certificate that is not in the ACTIVE state to reconnect.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: CertificateStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateStateException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          schema:
            type: string
            pattern: '(0x)?[a-fA-F0-9]+'
            minLength: 64
            maxLength: 64
        - name: newStatus
          in: query
          required: true
          description: '<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER or PENDING_ACTIVATION will result in an exception being thrown. PENDING_TRANSFER and PENDING_ACTIVATION are statuses used internally by AWS IoT. They are not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>'
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - REVOKED
              - PENDING_TRANSFER
              - REGISTER_INACTIVE
              - PENDING_ACTIVATION
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /thing-groups/updateThingGroupsForThing:
    put:
      operationId: UpdateThingGroupsForThing
      description: Updates the groups to which the thing belongs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThingGroupsForThingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingName:
                  description: The thing whose group memberships will be updated.
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                  minLength: 1
                  maxLength: 128
                thingGroupsToAdd:
                  description: The groups to which the thing will be added.
                  type: array
                  items:
                    $ref: '#/components/schemas/ThingGroupName'
                thingGroupsToRemove:
                  description: The groups from which the thing will be removed.
                  type: array
                  items:
                    $ref: '#/components/schemas/ThingGroupName'
                overrideDynamicGroups:
                  description: 'Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /security-profile-behaviors/validate:
    post:
      operationId: ValidateSecurityProfileBehaviors
      description: Validates a Device Defender security profile behaviors specification.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateSecurityProfileBehaviorsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - behaviors
              properties:
                behaviors:
                  description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
                  type: array
                  items:
                    $ref: '#/components/schemas/Behavior'
                  maxItems: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    ResourceNotFoundException: {}
    TransferAlreadyCompletedException: {}
    InvalidRequestException: {}
    ThrottlingException: {}
    UnauthorizedException: {}
    ServiceUnavailableException: {}
    InternalFailureException: {}
    AddThingToBillingGroupResponse:
      type: object
      properties: {}
    AddThingToThingGroupResponse:
      type: object
      properties: {}
    AssociateTargetsWithJobResponse:
      type: object
      properties:
        jobArn:
          $ref: '#/components/schemas/JobArn'
          description: An ARN identifying the job.
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was created.
        description:
          $ref: '#/components/schemas/JobDescription'
          description: A short text description of the job.
    TargetArn:
      type: string
      maxLength: 2048
    LimitExceededException: {}
    AttachSecurityProfileResponse:
      type: object
      properties: {}
    VersionConflictException: {}
    AttachThingPrincipalResponse:
      type: object
      properties: {}
      description: The output from the AttachThingPrincipal operation.
    CancelAuditMitigationActionsTaskResponse:
      type: object
      properties: {}
    CancelAuditTaskResponse:
      type: object
      properties: {}
    CancelDetectMitigationActionsTaskResponse:
      type: object
      properties: {}
    CancelJobResponse:
      type: object
      properties:
        jobArn:
          $ref: '#/components/schemas/JobArn'
          description: The job ARN.
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was created.
        description:
          $ref: '#/components/schemas/JobDescription'
          description: A short text description of the job.
    DetailsValue:
      type: string
      pattern: '[^\p{C}]+'
      minLength: 1
    InvalidStateTransitionException: {}
    ClearDefaultAuthorizerResponse:
      type: object
      properties: {}
    ConfirmTopicRuleDestinationResponse:
      type: object
      properties: {}
    InternalException: {}
    ConflictingResourceUpdateException: {}
    CreateAuditSuppressionResponse:
      type: object
      properties: {}
    CertificateId:
      type: string
      pattern: '(0x)?[a-fA-F0-9]+'
      minLength: 64
      maxLength: 64
    CognitoIdentityPoolId:
      type: string
    ClientId:
      type: string
    PolicyVersionIdentifier:
      type: object
      properties:
        policyName:
          $ref: '#/components/schemas/PolicyName'
          description: The name of the policy.
        policyVersionId:
          $ref: '#/components/schemas/PolicyVersionId'
          description: The ID of the version of the policy associated with the resource.
      description: Information about the version of the policy associated with the resource.
    AwsAccountId:
      type: string
      pattern: '[0-9]+'
      minLength: 12
      maxLength: 12
    RoleArn:
      type: string
      minLength: 20
      maxLength: 2048
    RoleAliasArn:
      type: string
      minLength: 1
      maxLength: 2048
    ResourceAlreadyExistsException: {}
    CreateAuthorizerResponse:
      type: object
      properties:
        authorizerName:
          $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer's name.
        authorizerArn:
          $ref: '#/components/schemas/AuthorizerArn'
          description: The authorizer ARN.
    KeyValue:
      type: string
      maxLength: 5120
    Tag:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The tag's key.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The tag's value.
      description: A set of key/value pairs that are used to manage the resource.
    CreateBillingGroupResponse:
      type: object
      properties:
        billingGroupName:
          $ref: '#/components/schemas/BillingGroupName'
          description: The name you gave to the billing group.
        billingGroupArn:
          $ref: '#/components/schemas/BillingGroupArn'
          description: The ARN of the billing group.
        billingGroupId:
          $ref: '#/components/schemas/BillingGroupId'
          description: The ID of the billing group.
    BillingGroupDescription:
      type: string
      pattern: '[\p{Graph}\x20]*'
      maxLength: 2028
    CreateCertificateFromCsrResponse:
      type: object
      properties:
        certificateArn:
          $ref: '#/components/schemas/CertificateArn'
          description: The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.
        certificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate. Certificate management operations only take a certificateId.
        certificatePem:
          $ref: '#/components/schemas/CertificatePem'
          description: 'The certificate data, in PEM format.'
      description: The output from the CreateCertificateFromCsr operation.
    CreateCustomMetricResponse:
      type: object
      properties:
        metricName:
          $ref: '#/components/schemas/MetricName'
          description: ' The name of the custom metric to be used in the metric report. '
        metricArn:
          $ref: '#/components/schemas/CustomMetricArn'
          description: ' The Amazon Resource Number (ARN) of the custom metric, e.g. <code>arn:<i>aws-partition</i>:iot:<i>region</i>:<i>accountId</i>:custommetric/<i>metricName</i> </code> '
    CreateDimensionResponse:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/DimensionName'
          description: A unique identifier for the dimension.
        arn:
          $ref: '#/components/schemas/DimensionArn'
          description: The Amazon Resource Name (ARN) of the created dimension.
    DimensionStringValue:
      type: string
      minLength: 1
      maxLength: 256
    CreateDomainConfigurationResponse:
      type: object
      properties:
        domainConfigurationName:
          $ref: '#/components/schemas/DomainConfigurationName'
          description: The name of the domain configuration.
        domainConfigurationArn:
          $ref: '#/components/schemas/DomainConfigurationArn'
          description: The ARN of the domain configuration.
    AcmCertificateArn:
      type: string
      pattern: 'arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\d{1}:\d{12}:certificate/[a-zA-Z0-9/-]+'
      minLength: 1
      maxLength: 2048
    AuthorizerName:
      type: string
      pattern: '[\w=,@-]+'
      minLength: 1
      maxLength: 128
    AllowAuthorizerOverride:
      type: boolean
    CertificateValidationException: {}
    CreateDynamicThingGroupResponse:
      type: object
      properties:
        thingGroupName:
          $ref: '#/components/schemas/ThingGroupName'
          description: The dynamic thing group name.
        thingGroupArn:
          $ref: '#/components/schemas/ThingGroupArn'
          description: The dynamic thing group ARN.
        thingGroupId:
          $ref: '#/components/schemas/ThingGroupId'
          description: The dynamic thing group ID.
        indexName:
          $ref: '#/components/schemas/IndexName'
          description: The dynamic thing group index name.
        queryString:
          $ref: '#/components/schemas/QueryString'
          description: The dynamic thing group search query string.
        queryVersion:
          $ref: '#/components/schemas/QueryVersion'
          description: The dynamic thing group query version.
    ThingGroupDescription:
      type: string
      pattern: '[\p{Graph}\x20]*'
      maxLength: 2028
    AttributePayload:
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/Attributes'
          description: '<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\"attributes\":{\"string1\":\"string2\"}}</code> </p>'
        merge:
          $ref: '#/components/schemas/Flag'
          description: '<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code> or <code>UpdateThingGroup</code>.</p> </note>'
      description: The attribute payload.
    InvalidQueryException: {}
    CreateJobResponse:
      type: object
      properties:
        jobArn:
          $ref: '#/components/schemas/JobArn'
          description: The job ARN.
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job.
        description:
          $ref: '#/components/schemas/JobDescription'
          description: The job description.
    ExpiresInSec:
      type: integer
      minimum: 60
      maximum: 3600
    MaxJobExecutionsPerMin:
      type: integer
      minimum: 1
    ExponentialRolloutRate:
      type: object
      required:
        - baseRatePerMinute
        - incrementFactor
        - rateIncreaseCriteria
      properties:
        baseRatePerMinute:
          $ref: '#/components/schemas/RolloutRatePerMinute'
          description: 'The minimum number of things that will be notified of a pending job, per minute at the start of job rollout. This parameter allows you to define the initial rate of rollout.'
        incrementFactor:
          $ref: '#/components/schemas/IncrementFactor'
          description: '<p>The exponential factor to increase the rate of rollout for a job.</p> <p>AWS IoT supports up to one digit after the decimal (for example, 1.5, but not 1.55).</p>'
        rateIncreaseCriteria:
          $ref: '#/components/schemas/RateIncreaseCriteria'
          description: The criteria to initiate the increase in rate of rollout for a job.
      description: Allows you to create an exponential rate of rollout for a job.
    AbortCriteriaList:
      type: array
      items:
        $ref: '#/components/schemas/AbortCriteria'
      minItems: 1
    InProgressTimeoutInMinutes:
      type: integer
    CreateJobTemplateResponse:
      type: object
      properties:
        jobTemplateArn:
          $ref: '#/components/schemas/JobTemplateArn'
          description: The ARN of the job template.
        jobTemplateId:
          $ref: '#/components/schemas/JobTemplateId'
          description: The unique identifier of the job template.
    ConflictException: {}
    CreateKeysAndCertificateResponse:
      type: object
      properties:
        certificateArn:
          $ref: '#/components/schemas/CertificateArn'
          description: The ARN of the certificate.
        certificateId:
          $ref: '#/components/schemas/CertificateId'
          description: 'The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).'
        certificatePem:
          $ref: '#/components/schemas/CertificatePem'
          description: 'The certificate data, in PEM format.'
        keyPair:
          $ref: '#/components/schemas/KeyPair'
          description: The generated key pair.
      description: The output of the CreateKeysAndCertificate operation.
    CreateMitigationActionResponse:
      type: object
      properties:
        actionArn:
          $ref: '#/components/schemas/MitigationActionArn'
          description: The ARN for the new mitigation action.
        actionId:
          $ref: '#/components/schemas/MitigationActionId'
          description: A unique identifier for the new mitigation action.
    UpdateDeviceCertificateParams:
      type: object
      required:
        - action
      properties:
        action:
          $ref: '#/components/schemas/DeviceCertificateUpdateAction'
          description: The action that you want to apply to the device certificate. The only supported value is <code>DEACTIVATE</code>.
      description: Parameters to define a mitigation action that changes the state of the device certificate to inactive.
    UpdateCACertificateParams:
      type: object
      required:
        - action
      properties:
        action:
          $ref: '#/components/schemas/CACertificateUpdateAction'
          description: The action that you want to apply to the CA certificate. The only supported value is <code>DEACTIVATE</code>.
      description: Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
    AddThingsToThingGroupParams:
      type: object
      required:
        - thingGroupNames
      properties:
        thingGroupNames:
          $ref: '#/components/schemas/ThingGroupNames'
          description: 'The list of groups to which you want to add the things that triggered the mitigation action. You can add a thing to a maximum of 10 groups, but you can''t add a thing to more than one group in the same hierarchy.'
        overrideDynamicGroups:
          $ref: '#/components/schemas/OverrideDynamicGroups'
          description: Specifies if this mitigation action can move the things that triggered the mitigation action even if they are part of one or more dynamic thing groups.
      description: Parameters used when defining a mitigation action that move a set of things to a thing group.
    ReplaceDefaultPolicyVersionParams:
      type: object
      required:
        - templateName
      properties:
        templateName:
          $ref: '#/components/schemas/PolicyTemplateName'
          description: The name of the template to be applied. The only supported value is <code>BLANK_POLICY</code>.
      description: Parameters to define a mitigation action that adds a blank policy to restrict permissions.
    EnableIoTLoggingParams:
      type: object
      required:
        - roleArnForLogging
        - logLevel
      properties:
        roleArnForLogging:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role used for logging.
        logLevel:
          $ref: '#/components/schemas/LogLevel'
          description: Specifies the type of information to be logged.
      description: Parameters used when defining a mitigation action that enable AWS IoT logging.
    PublishFindingToSnsParams:
      type: object
      required:
        - topicArn
      properties:
        topicArn:
          $ref: '#/components/schemas/SnsTopicArn'
          description: The ARN of the topic to which you want to publish the findings.
      description: Parameters to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
    CreateOTAUpdateResponse:
      type: object
      properties:
        otaUpdateId:
          $ref: '#/components/schemas/OTAUpdateId'
          description: The OTA update ID.
        awsIotJobId:
          $ref: '#/components/schemas/AwsIotJobId'
          description: The AWS IoT job ID associated with the OTA update.
        otaUpdateArn:
          $ref: '#/components/schemas/OTAUpdateArn'
          description: The OTA update ARN.
        awsIotJobArn:
          $ref: '#/components/schemas/AwsIotJobArn'
          description: The AWS IoT job ARN associated with the OTA update.
        otaUpdateStatus:
          $ref: '#/components/schemas/OTAUpdateStatus'
          description: The OTA update status.
    Target:
      type: string
    Protocol:
      type: string
      enum:
        - MQTT
        - HTTP
    MaximumPerMinute:
      type: integer
      minimum: 1
      maximum: 1000
    AwsJobExponentialRolloutRate:
      type: object
      required:
        - baseRatePerMinute
        - incrementFactor
        - rateIncreaseCriteria
      properties:
        baseRatePerMinute:
          $ref: '#/components/schemas/AwsJobRolloutRatePerMinute'
          description: 'The minimum number of things that will be notified of a pending job, per minute, at the start of the job rollout. This is the initial rate of the rollout.'
        incrementFactor:
          $ref: '#/components/schemas/AwsJobRolloutIncrementFactor'
          description: The rate of increase for a job rollout. The number of things notified is multiplied by this factor.
        rateIncreaseCriteria:
          $ref: '#/components/schemas/AwsJobRateIncreaseCriteria'
          description: '<p>The criteria to initiate the increase in rate of rollout for a job.</p> <p>AWS IoT supports up to one digit after the decimal (for example, 1.5, but not 1.55).</p>'
      description: The rate of increase for a job rollout. This parameter allows you to define an exponential rate increase for a job rollout.
    ExpiresInSeconds:
      type: integer
    AwsJobAbortCriteriaList:
      type: array
      items:
        $ref: '#/components/schemas/AwsJobAbortCriteria'
      minItems: 1
    AwsJobTimeoutInProgressTimeoutInMinutes:
      type: integer
    OTAUpdateFile:
      type: object
      properties:
        fileName:
          $ref: '#/components/schemas/FileName'
          description: The name of the file.
        fileType:
          $ref: '#/components/schemas/FileType'
          description: An integer value you can include in the job document to allow your devices to identify the type of file received from the cloud.
        fileVersion:
          $ref: '#/components/schemas/OTAUpdateFileVersion'
          description: The file version.
        fileLocation:
          $ref: '#/components/schemas/FileLocation'
          description: The location of the updated firmware.
        codeSigning:
          $ref: '#/components/schemas/CodeSigning'
          description: The code signing method of the file.
        attributes:
          $ref: '#/components/schemas/AttributesMap'
          description: A list of name/attribute pairs.
      description: Describes a file to be associated with an OTA update.
    Value:
      type: string
    CreatePolicyResponse:
      type: object
      properties:
        policyName:
          $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyArn:
          $ref: '#/components/schemas/PolicyArn'
          description: The policy ARN.
        policyDocument:
          $ref: '#/components/schemas/PolicyDocument'
          description: The JSON document that describes the policy.
        policyVersionId:
          $ref: '#/components/schemas/PolicyVersionId'
          description: The policy version ID.
      description: The output from the CreatePolicy operation.
    MalformedPolicyException: {}
    CreatePolicyVersionResponse:
      type: object
      properties:
        policyArn:
          $ref: '#/components/schemas/PolicyArn'
          description: The policy ARN.
        policyDocument:
          $ref: '#/components/schemas/PolicyDocument'
          description: The JSON document that describes the policy.
        policyVersionId:
          $ref: '#/components/schemas/PolicyVersionId'
          description: The policy version ID.
        isDefaultVersion:
          $ref: '#/components/schemas/IsDefaultVersion'
          description: Specifies whether the policy version is the default.
      description: The output of the CreatePolicyVersion operation.
    VersionsLimitExceededException: {}
    CreateProvisioningClaimResponse:
      type: object
      properties:
        certificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate.
        certificatePem:
          $ref: '#/components/schemas/CertificatePem'
          description: The provisioning claim certificate.
        keyPair:
          $ref: '#/components/schemas/KeyPair'
          description: The provisioning claim key pair.
        expiration:
          $ref: '#/components/schemas/DateType'
          description: The provisioning claim expiration time.
    CreateProvisioningTemplateResponse:
      type: object
      properties:
        templateArn:
          $ref: '#/components/schemas/TemplateArn'
          description: The ARN that identifies the provisioning template.
        templateName:
          $ref: '#/components/schemas/TemplateName'
          description: The name of the fleet provisioning template.
        defaultVersionId:
          $ref: '#/components/schemas/TemplateVersionId'
          description: The default version of the fleet provisioning template.
    PayloadVersion:
      type: string
      pattern: '^[0-9-]+$'
      minLength: 10
      maxLength: 32
    CreateProvisioningTemplateVersionResponse:
      type: object
      properties:
        templateArn:
          $ref: '#/components/schemas/TemplateArn'
          description: The ARN that identifies the provisioning template.
        templateName:
          $ref: '#/components/schemas/TemplateName'
          description: The name of the fleet provisioning template.
        versionId:
          $ref: '#/components/schemas/TemplateVersionId'
          description: The version of the fleet provisioning template.
        isDefaultVersion:
          $ref: '#/components/schemas/IsDefaultVersion'
          description: 'True if the fleet provisioning template version is the default version, otherwise false.'
    CreateRoleAliasResponse:
      type: object
      properties:
        roleAlias:
          $ref: '#/components/schemas/RoleAlias'
          description: The role alias.
        roleAliasArn:
          $ref: '#/components/schemas/RoleAliasArn'
          description: The role alias ARN.
    CreateScheduledAuditResponse:
      type: object
      properties:
        scheduledAuditArn:
          $ref: '#/components/schemas/ScheduledAuditArn'
          description: The ARN of the scheduled audit.
    AuditCheckName:
      type: string
      description: 'An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
    CreateSecurityProfileResponse:
      type: object
      properties:
        securityProfileName:
          $ref: '#/components/schemas/SecurityProfileName'
          description: The name you gave to the security profile.
        securityProfileArn:
          $ref: '#/components/schemas/SecurityProfileArn'
          description: The ARN of the security profile.
    Behavior:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/BehaviorName'
          description: The name you've given to the behavior.
        metric:
          $ref: '#/components/schemas/BehaviorMetric'
          description: What is measured by the behavior.
        metricDimension:
          $ref: '#/components/schemas/MetricDimension'
          description: 'The dimension for a metric in your behavior. For example, using a <code>TOPIC_FILTER</code> dimension, you can narrow down the scope of the metric to only MQTT topics where the name matches the pattern specified in the dimension. This can''t be used with custom metrics.'
        criteria:
          $ref: '#/components/schemas/BehaviorCriteria'
          description: The criteria that determine if a device is behaving normally in regard to the <code>metric</code>.
        suppressAlerts:
          $ref: '#/components/schemas/SuppressAlerts'
          description: ' Suppresses alerts. '
      description: A Device Defender security profile behavior.
    AlertTarget:
      type: object
      required:
        - alertTargetArn
        - roleArn
      properties:
        alertTargetArn:
          $ref: '#/components/schemas/AlertTargetArn'
          description: The Amazon Resource Name (ARN) of the notification target to which alerts are sent.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role that grants permission to send alerts to the notification target.
      description: A structure containing the alert target ARN and the role ARN.
    BehaviorMetric:
      type: string
    MetricToRetain:
      type: object
      required:
        - metric
      properties:
        metric:
          $ref: '#/components/schemas/BehaviorMetric'
          description: What is measured by the behavior.
        metricDimension:
          $ref: '#/components/schemas/MetricDimension'
          description: The dimension of a metric. This can't be used with custom metrics.
      description: The metric you want to retain. Dimensions are optional.
    CreateStreamResponse:
      type: object
      properties:
        streamId:
          $ref: '#/components/schemas/StreamId'
          description: The stream ID.
        streamArn:
          $ref: '#/components/schemas/StreamArn'
          description: The stream ARN.
        description:
          $ref: '#/components/schemas/StreamDescription'
          description: A description of the stream.
        streamVersion:
          $ref: '#/components/schemas/StreamVersion'
          description: The version of the stream.
    StreamFile:
      type: object
      properties:
        fileId:
          $ref: '#/components/schemas/FileId'
          description: The file ID.
        s3Location:
          $ref: '#/components/schemas/S3Location'
          description: The location of the file in S3.
      description: Represents a file to stream.
    CreateThingResponse:
      type: object
      properties:
        thingName:
          $ref: '#/components/schemas/ThingName'
          description: The name of the new thing.
        thingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The ARN of the new thing.
        thingId:
          $ref: '#/components/schemas/ThingId'
          description: The thing ID.
      description: The output of the CreateThing operation.
    Attributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
    Flag:
      type: boolean
    CreateThingGroupResponse:
      type: object
      properties:
        thingGroupName:
          $ref: '#/components/schemas/ThingGroupName'
          description: The thing group name.
        thingGroupArn:
          $ref: '#/components/schemas/ThingGroupArn'
          description: The thing group ARN.
        thingGroupId:
          $ref: '#/components/schemas/ThingGroupId'
          description: The thing group ID.
    CreateThingTypeResponse:
      type: object
      properties:
        thingTypeName:
          $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type.
        thingTypeArn:
          $ref: '#/components/schemas/ThingTypeArn'
          description: The Amazon Resource Name (ARN) of the thing type.
        thingTypeId:
          $ref: '#/components/schemas/ThingTypeId'
          description: The thing type ID.
      description: The output of the CreateThingType operation.
    ThingTypeDescription:
      type: string
      pattern: '[\p{Graph}\x20]*'
      maxLength: 2028
    SearchableAttributes:
      type: array
      items:
        $ref: '#/components/schemas/AttributeName'
    SQL:
      type: string
    Description:
      type: string
    ActionList:
      type: array
      items:
        $ref: '#/components/schemas/Action'
      minItems: 0
      maxItems: 10
    IsDisabled:
      type: boolean
    AwsIotSqlVersion:
      type: string
    Action:
      type: object
      properties:
        dynamoDB:
          $ref: '#/components/schemas/DynamoDBAction'
          description: Write to a DynamoDB table.
        dynamoDBv2:
          $ref: '#/components/schemas/DynamoDBv2Action'
          description: Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.
        lambda:
          $ref: '#/components/schemas/LambdaAction'
          description: Invoke a Lambda function.
        sns:
          $ref: '#/components/schemas/SnsAction'
          description: Publish to an Amazon SNS topic.
        sqs:
          $ref: '#/components/schemas/SqsAction'
          description: Publish to an Amazon SQS queue.
        kinesis:
          $ref: '#/components/schemas/KinesisAction'
          description: Write data to an Amazon Kinesis stream.
        republish:
          $ref: '#/components/schemas/RepublishAction'
          description: Publish to another MQTT topic.
        s3:
          $ref: '#/components/schemas/S3Action'
          description: Write to an Amazon S3 bucket.
        firehose:
          $ref: '#/components/schemas/FirehoseAction'
          description: Write to an Amazon Kinesis Firehose stream.
        cloudwatchMetric:
          $ref: '#/components/schemas/CloudwatchMetricAction'
          description: Capture a CloudWatch metric.
        cloudwatchAlarm:
          $ref: '#/components/schemas/CloudwatchAlarmAction'
          description: Change the state of a CloudWatch alarm.
        cloudwatchLogs:
          $ref: '#/components/schemas/CloudwatchLogsAction'
          description: Send data to CloudWatch Logs.
        elasticsearch:
          $ref: '#/components/schemas/ElasticsearchAction'
          description: Write data to an Amazon Elasticsearch Service domain.
        salesforce:
          $ref: '#/components/schemas/SalesforceAction'
          description: Send a message to a Salesforce IoT Cloud Input Stream.
        iotAnalytics:
          $ref: '#/components/schemas/IotAnalyticsAction'
          description: Sends message data to an AWS IoT Analytics channel.
        iotEvents:
          $ref: '#/components/schemas/IotEventsAction'
          description: Sends an input to an AWS IoT Events detector.
        iotSiteWise:
          $ref: '#/components/schemas/IotSiteWiseAction'
          description: Sends data from the MQTT message that triggered the rule to AWS IoT SiteWise asset properties.
        stepFunctions:
          $ref: '#/components/schemas/StepFunctionsAction'
          description: Starts execution of a Step Functions state machine.
        timestream:
          $ref: '#/components/schemas/TimestreamAction'
          description: 'The Timestream rule action writes attributes (measures) from an MQTT message into an Amazon Timestream table. For more information, see the <a href="https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html">Timestream</a> topic rule action documentation.'
        http:
          $ref: '#/components/schemas/HttpAction'
          description: Send data to an HTTPS endpoint.
        kafka:
          $ref: '#/components/schemas/KafkaAction'
          description: Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster.
      description: Describes the actions associated with a rule.
    SqlParseException: {}
    CreateTopicRuleDestinationResponse:
      type: object
      properties:
        topicRuleDestination:
          $ref: '#/components/schemas/TopicRuleDestination'
          description: The topic rule destination.
    HttpUrlDestinationConfiguration:
      type: object
      required:
        - confirmationUrl
      properties:
        confirmationUrl:
          $ref: '#/components/schemas/Url'
          description: The URL AWS IoT uses to confirm ownership of or access to the topic rule destination URL.
      description: HTTP URL destination configuration used by the topic rule's HTTP action.
    VpcDestinationConfiguration:
      type: object
      required:
        - subnetIds
        - vpcId
        - roleArn
      properties:
        subnetIds:
          $ref: '#/components/schemas/SubnetIdList'
          description: The subnet IDs of the VPC destination.
        securityGroups:
          $ref: '#/components/schemas/SecurityGroupList'
          description: The security groups of the VPC destination.
        vpcId:
          $ref: '#/components/schemas/VpcId'
          description: The ID of the VPC.
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).
      description: The configuration information for a virtual private cloud (VPC) destination.
    DeleteAccountAuditConfigurationResponse:
      type: object
      properties: {}
    DeleteAuditSuppressionResponse:
      type: object
      properties: {}
    DeleteAuthorizerResponse:
      type: object
      properties: {}
    DeleteConflictException: {}
    DeleteBillingGroupResponse:
      type: object
      properties: {}
    DeleteCACertificateResponse:
      type: object
      properties: {}
      description: The output for the DeleteCACertificate operation.
    CertificateStateException: {}
    DeleteCustomMetricResponse:
      type: object
      properties: {}
    DeleteDimensionResponse:
      type: object
      properties: {}
    DeleteDomainConfigurationResponse:
      type: object
      properties: {}
    DeleteDynamicThingGroupResponse:
      type: object
      properties: {}
    DeleteMitigationActionResponse:
      type: object
      properties: {}
    DeleteOTAUpdateResponse:
      type: object
      properties: {}
    DeleteProvisioningTemplateResponse:
      type: object
      properties: {}
    DeleteProvisioningTemplateVersionResponse:
      type: object
      properties: {}
    DeleteRegistrationCodeResponse:
      type: object
      properties: {}
      description: The output for the DeleteRegistrationCode operation.
    DeleteRoleAliasResponse:
      type: object
      properties: {}
    DeleteScheduledAuditResponse:
      type: object
      properties: {}
    DeleteSecurityProfileResponse:
      type: object
      properties: {}
    DeleteStreamResponse:
      type: object
      properties: {}
    DeleteThingResponse:
      type: object
      properties: {}
      description: The output of the DeleteThing operation.
    DeleteThingGroupResponse:
      type: object
      properties: {}
    DeleteThingTypeResponse:
      type: object
      properties: {}
      description: The output for the DeleteThingType operation.
    DeleteTopicRuleDestinationResponse:
      type: object
      properties: {}
    DeprecateThingTypeResponse:
      type: object
      properties: {}
      description: The output for the DeprecateThingType operation.
    DescribeAccountAuditConfigurationResponse:
      type: object
      properties:
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p>The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates, and other items as required when performing an audit.</p> <p>On the first call to <code>UpdateAccountAuditConfiguration</code>, this parameter is required.</p>'
        auditNotificationTargetConfigurations:
          $ref: '#/components/schemas/AuditNotificationTargetConfigurations'
          description: Information about the targets to which audit notifications are sent for this account.
        auditCheckConfigurations:
          $ref: '#/components/schemas/AuditCheckConfigurations'
          description: Which audit checks are enabled and disabled for this account.
    DescribeAuditFindingResponse:
      type: object
      properties:
        finding:
          $ref: '#/components/schemas/AuditFinding'
    DescribeAuditMitigationActionsTaskResponse:
      type: object
      properties:
        taskStatus:
          $ref: '#/components/schemas/AuditMitigationActionsTaskStatus'
          description: The current status of the task.
        startTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time when the task was started.
        endTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time when the task was completed or canceled.
        taskStatistics:
          $ref: '#/components/schemas/AuditMitigationActionsTaskStatistics'
          description: Aggregate counts of the results when the mitigation tasks were applied to the findings for this audit mitigation actions task.
        target:
          $ref: '#/components/schemas/AuditMitigationActionsTaskTarget'
          description: 'Identifies the findings to which the mitigation actions are applied. This can be by audit checks, by audit task, or a set of findings.'
        auditCheckToActionsMapping:
          $ref: '#/components/schemas/AuditCheckToActionsMapping'
          description: Specifies the mitigation actions that should be applied to specific audit checks.
        actionsDefinition:
          $ref: '#/components/schemas/MitigationActionList'
          description: Specifies the mitigation actions and their parameters that are applied as part of this task.
    DescribeAuditSuppressionResponse:
      type: object
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        expirationDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The epoch timestamp in seconds at which this suppression expires. '
        suppressIndefinitely:
          $ref: '#/components/schemas/SuppressIndefinitely'
          description: ' Indicates whether a suppression should exist indefinitely or not. '
        description:
          $ref: '#/components/schemas/AuditDescription'
          description: ' The description of the audit suppression. '
    DescribeAuditTaskResponse:
      type: object
      properties:
        taskStatus:
          $ref: '#/components/schemas/AuditTaskStatus'
          description: 'The status of the audit: one of "IN_PROGRESS", "COMPLETED", "FAILED", or "CANCELED".'
        taskType:
          $ref: '#/components/schemas/AuditTaskType'
          description: 'The type of audit: "ON_DEMAND_AUDIT_TASK" or "SCHEDULED_AUDIT_TASK".'
        taskStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the audit started.
        taskStatistics:
          $ref: '#/components/schemas/TaskStatistics'
          description: Statistical information about the audit.
        scheduledAuditName:
          $ref: '#/components/schemas/ScheduledAuditName'
          description: The name of the scheduled audit (only if the audit was a scheduled audit).
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
          description: Detailed information about each check performed during this audit.
    DescribeAuthorizerResponse:
      type: object
      properties:
        authorizerDescription:
          $ref: '#/components/schemas/AuthorizerDescription'
          description: The authorizer description.
    DescribeBillingGroupResponse:
      type: object
      properties:
        billingGroupName:
          $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group.
        billingGroupId:
          $ref: '#/components/schemas/BillingGroupId'
          description: The ID of the billing group.
        billingGroupArn:
          $ref: '#/components/schemas/BillingGroupArn'
          description: The ARN of the billing group.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the billing group.
        billingGroupProperties:
          $ref: '#/components/schemas/BillingGroupProperties'
          description: The properties of the billing group.
        billingGroupMetadata:
          $ref: '#/components/schemas/BillingGroupMetadata'
          description: Additional information about the billing group.
    DescribeCACertificateResponse:
      type: object
      properties:
        certificateDescription:
          $ref: '#/components/schemas/CACertificateDescription'
          description: The CA certificate description.
        registrationConfig:
          $ref: '#/components/schemas/RegistrationConfig'
          description: Information about the registration configuration.
      description: The output from the DescribeCACertificate operation.
    DescribeCertificateResponse:
      type: object
      properties:
        certificateDescription:
          $ref: '#/components/schemas/CertificateDescription'
          description: The description of the certificate.
      description: The output of the DescribeCertificate operation.
    DescribeCustomMetricResponse:
      type: object
      properties:
        metricName:
          $ref: '#/components/schemas/MetricName'
          description: ' The name of the custom metric. '
        metricArn:
          $ref: '#/components/schemas/CustomMetricArn'
          description: ' The Amazon Resource Number (ARN) of the custom metric. '
        metricType:
          $ref: '#/components/schemas/CustomMetricType'
          description: ' The type of the custom metric. Types include <code>string-list</code>, <code>ip-address-list</code>, <code>number-list</code>, and <code>number</code>. '
        displayName:
          $ref: '#/components/schemas/CustomMetricDisplayName'
          description: ' Field represents a friendly name in the console for the custom metric; doesn''t have to be unique. Don''t use this name as the metric identifier in the device metric report. Can be updated. '
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The creation date of the custom metric in milliseconds since epoch. '
        lastModifiedDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The time the custom metric was last modified in milliseconds since epoch. '
    DescribeDefaultAuthorizerResponse:
      type: object
      properties:
        authorizerDescription:
          $ref: '#/components/schemas/AuthorizerDescription'
          description: The default authorizer's description.
    DescribeDetectMitigationActionsTaskResponse:
      type: object
      properties:
        taskSummary:
          $ref: '#/components/schemas/DetectMitigationActionsTaskSummary'
          description: ' The description of a task. '
    DescribeDimensionResponse:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/DimensionName'
          description: The unique identifier for the dimension.
        arn:
          $ref: '#/components/schemas/DimensionArn'
          description: The Amazon Resource Name (ARN) for the dimension.
        type:
          $ref: '#/components/schemas/DimensionType'
          description: The type of the dimension.
        stringValues:
          $ref: '#/components/schemas/DimensionStringValues'
          description: 'The value or list of values used to scope the dimension. For example, for topic filters, this is the pattern used to match the MQTT topic name.'
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date the dimension was created.
        lastModifiedDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date the dimension was last modified.
    DescribeDomainConfigurationResponse:
      type: object
      properties:
        domainConfigurationName:
          $ref: '#/components/schemas/ReservedDomainConfigurationName'
          description: The name of the domain configuration.
        domainConfigurationArn:
          $ref: '#/components/schemas/DomainConfigurationArn'
          description: The ARN of the domain configuration.
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        serverCertificates:
          $ref: '#/components/schemas/ServerCertificates'
          description: A list containing summary information about the server certificate included in the domain configuration.
        authorizerConfig:
          $ref: '#/components/schemas/AuthorizerConfig'
          description: An object that specifies the authorization service for a domain.
        domainConfigurationStatus:
          $ref: '#/components/schemas/DomainConfigurationStatus'
          description: A Boolean value that specifies the current state of the domain configuration.
        serviceType:
          $ref: '#/components/schemas/ServiceType'
          description: The type of service delivered by the endpoint.
        domainType:
          $ref: '#/components/schemas/DomainType'
          description: The type of the domain.
        lastStatusChangeDate:
          $ref: '#/components/schemas/DateType'
          description: The date and time the domain configuration's status was last changed.
    DescribeEndpointResponse:
      type: object
      properties:
        endpointAddress:
          $ref: '#/components/schemas/EndpointAddress'
          description: 'The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.'
      description: The output from the DescribeEndpoint operation.
    DescribeEventConfigurationsResponse:
      type: object
      properties:
        eventConfigurations:
          $ref: '#/components/schemas/EventConfigurations'
          description: The event configurations.
        creationDate:
          $ref: '#/components/schemas/CreationDate'
          description: The creation date of the event configuration.
        lastModifiedDate:
          $ref: '#/components/schemas/LastModifiedDate'
          description: The date the event configurations were last modified.
    DescribeIndexResponse:
      type: object
      properties:
        indexName:
          $ref: '#/components/schemas/IndexName'
          description: The index name.
        indexStatus:
          $ref: '#/components/schemas/IndexStatus'
          description: The index status.
        schema:
          $ref: '#/components/schemas/IndexSchema'
          description: '<p>Contains a value that specifies the type of indexing performed. Valid values are:</p> <ul> <li> <p>REGISTRY – Your thing index contains only registry data.</p> </li> <li> <p>REGISTRY_AND_SHADOW - Your thing index contains registry data and shadow data.</p> </li> <li> <p>REGISTRY_AND_CONNECTIVITY_STATUS - Your thing index contains registry data and thing connectivity status data.</p> </li> <li> <p>REGISTRY_AND_SHADOW_AND_CONNECTIVITY_STATUS - Your thing index contains registry data, shadow data, and thing connectivity status data.</p> </li> </ul>'
    DescribeJobResponse:
      type: object
      properties:
        documentSource:
          $ref: '#/components/schemas/JobDocumentSource'
          description: An S3 link to the job document.
        job:
          $ref: '#/components/schemas/Job'
          description: Information about the job.
    DescribeJobExecutionResponse:
      type: object
      properties:
        execution:
          $ref: '#/components/schemas/JobExecution'
          description: Information about the job execution.
    DescribeJobTemplateResponse:
      type: object
      properties:
        jobTemplateArn:
          $ref: '#/components/schemas/JobTemplateArn'
          description: The ARN of the job template.
        jobTemplateId:
          $ref: '#/components/schemas/JobTemplateId'
          description: The unique identifier of the job template.
        description:
          $ref: '#/components/schemas/JobDescription'
          description: A description of the job template.
        documentSource:
          $ref: '#/components/schemas/JobDocumentSource'
          description: An S3 link to the job document.
        document:
          $ref: '#/components/schemas/JobDocument'
          description: The job document.
        createdAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job template was created.'
        presignedUrlConfig:
          $ref: '#/components/schemas/PresignedUrlConfig'
        jobExecutionsRolloutConfig:
          $ref: '#/components/schemas/JobExecutionsRolloutConfig'
        abortConfig:
          $ref: '#/components/schemas/AbortConfig'
        timeoutConfig:
          $ref: '#/components/schemas/TimeoutConfig'
    DescribeMitigationActionResponse:
      type: object
      properties:
        actionName:
          $ref: '#/components/schemas/MitigationActionName'
          description: The friendly name that uniquely identifies the mitigation action.
        actionType:
          $ref: '#/components/schemas/MitigationActionType'
          description: The type of mitigation action.
        actionArn:
          $ref: '#/components/schemas/MitigationActionArn'
          description: The ARN that identifies this migration action.
        actionId:
          $ref: '#/components/schemas/MitigationActionId'
          description: A unique identifier for this action.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role used to apply this action.
        actionParams:
          $ref: '#/components/schemas/MitigationActionParams'
          description: 'Parameters that control how the mitigation action is applied, specific to the type of mitigation action.'
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time when the mitigation action was added to your AWS account.
        lastModifiedDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time when the mitigation action was last changed.
    DescribeProvisioningTemplateResponse:
      type: object
      properties:
        templateArn:
          $ref: '#/components/schemas/TemplateArn'
          description: The ARN of the fleet provisioning template.
        templateName:
          $ref: '#/components/schemas/TemplateName'
          description: The name of the fleet provisioning template.
        description:
          $ref: '#/components/schemas/TemplateDescription'
          description: The description of the fleet provisioning template.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The date when the fleet provisioning template was created.
        lastModifiedDate:
          $ref: '#/components/schemas/DateType'
          description: The date when the fleet provisioning template was last modified.
        defaultVersionId:
          $ref: '#/components/schemas/TemplateVersionId'
          description: The default fleet template version ID.
        templateBody:
          $ref: '#/components/schemas/TemplateBody'
          description: The JSON formatted contents of the fleet provisioning template.
        enabled:
          $ref: '#/components/schemas/Enabled'
          description: 'True if the fleet provisioning template is enabled, otherwise false.'
        provisioningRoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role associated with the provisioning template. This IoT role grants permission to provision a device.
        preProvisioningHook:
          $ref: '#/components/schemas/ProvisioningHook'
          description: Gets information about a pre-provisioned hook.
    DescribeProvisioningTemplateVersionResponse:
      type: object
      properties:
        versionId:
          $ref: '#/components/schemas/TemplateVersionId'
          description: The fleet provisioning template version ID.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The date when the fleet provisioning template version was created.
        templateBody:
          $ref: '#/components/schemas/TemplateBody'
          description: The JSON formatted contents of the fleet provisioning template version.
        isDefaultVersion:
          $ref: '#/components/schemas/IsDefaultVersion'
          description: True if the fleet provisioning template version is the default version.
    DescribeRoleAliasResponse:
      type: object
      properties:
        roleAliasDescription:
          $ref: '#/components/schemas/RoleAliasDescription'
          description: The role alias description.
    DescribeScheduledAuditResponse:
      type: object
      properties:
        frequency:
          $ref: '#/components/schemas/AuditFrequency'
          description: 'How often the scheduled audit takes place, either one of <code>DAILY</code>, <code>WEEKLY</code>, <code>BIWEEKLY</code>, or <code>MONTHLY</code>. The start time of each audit is determined by the system.'
        dayOfMonth:
          $ref: '#/components/schemas/DayOfMonth'
          description: 'The day of the month on which the scheduled audit takes place. This is will be <code>1</code> through <code>31</code> or <code>LAST</code>. If days <code>29</code>-<code>31</code> are specified, and the month does not have that many days, the audit takes place on the <code>LAST</code> day of the month.'
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
          description: 'The day of the week on which the scheduled audit takes place, either one of <code>SUN</code>, <code>MON</code>, <code>TUE</code>, <code>WED</code>, <code>THU</code>, <code>FRI</code>, or <code>SAT</code>.'
        targetCheckNames:
          $ref: '#/components/schemas/TargetAuditCheckNames'
          description: 'Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
        scheduledAuditName:
          $ref: '#/components/schemas/ScheduledAuditName'
          description: The name of the scheduled audit.
        scheduledAuditArn:
          $ref: '#/components/schemas/ScheduledAuditArn'
          description: The ARN of the scheduled audit.
    DescribeSecurityProfileResponse:
      type: object
      properties:
        securityProfileName:
          $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile.
        securityProfileArn:
          $ref: '#/components/schemas/SecurityProfileArn'
          description: The ARN of the security profile.
        securityProfileDescription:
          $ref: '#/components/schemas/SecurityProfileDescription'
          description: A description of the security profile (associated with the security profile when it was created or updated).
        behaviors:
          $ref: '#/components/schemas/Behaviors'
          description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
        alertTargets:
          $ref: '#/components/schemas/AlertTargets'
          description: Where the alerts are sent. (Alerts are always sent to the console.)
        additionalMetricsToRetain:
          allOf:
            - $ref: '#/components/schemas/AdditionalMetricsToRetainList'
            - deprecated: true
              description: '<p> <i>Please use <a>DescribeSecurityProfileResponse$additionalMetricsToRetainV2</a> instead.</i> </p> <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s <code>behaviors</code>, but it is also retained for any metric specified here.</p>Use additionalMetricsToRetainV2.'
        additionalMetricsToRetainV2:
          $ref: '#/components/schemas/AdditionalMetricsToRetainV2List'
          description: 'A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s behaviors, but it is also retained for any metric specified here.'
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the security profile. A new version is generated whenever the security profile is updated.
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: The time the security profile was created.
        lastModifiedDate:
          $ref: '#/components/schemas/Timestamp'
          description: The time the security profile was last modified.
    DescribeStreamResponse:
      type: object
      properties:
        streamInfo:
          $ref: '#/components/schemas/StreamInfo'
          description: Information about the stream.
    DescribeThingResponse:
      type: object
      properties:
        defaultClientId:
          $ref: '#/components/schemas/ClientId'
          description: '<p>The default MQTT client ID. For a typical device, the thing name is also used as the default MQTT client ID. Although we don’t require a mapping between a thing''s registry name and its use of MQTT client IDs, certificates, or shadow state, we recommend that you choose a thing name and use it as the MQTT client ID for the registry and the Device Shadow service.</p> <p>This lets you better organize your AWS IoT fleet without removing the flexibility of the underlying device certificate model or shadows.</p>'
        thingName:
          $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
        thingId:
          $ref: '#/components/schemas/ThingId'
          description: The ID of the thing to describe.
        thingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to describe.
        thingTypeName:
          $ref: '#/components/schemas/ThingTypeName'
          description: The thing type name.
        attributes:
          $ref: '#/components/schemas/Attributes'
          description: The thing attributes.
        version:
          $ref: '#/components/schemas/Version'
          description: '<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>'
        billingGroupName:
          $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group the thing belongs to.
      description: The output from the DescribeThing operation.
    DescribeThingGroupResponse:
      type: object
      properties:
        thingGroupName:
          $ref: '#/components/schemas/ThingGroupName'
          description: The name of the thing group.
        thingGroupId:
          $ref: '#/components/schemas/ThingGroupId'
          description: The thing group ID.
        thingGroupArn:
          $ref: '#/components/schemas/ThingGroupArn'
          description: The thing group ARN.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the thing group.
        thingGroupProperties:
          $ref: '#/components/schemas/ThingGroupProperties'
          description: The thing group properties.
        thingGroupMetadata:
          $ref: '#/components/schemas/ThingGroupMetadata'
          description: Thing group metadata.
        indexName:
          $ref: '#/components/schemas/IndexName'
          description: The dynamic thing group index name.
        queryString:
          $ref: '#/components/schemas/QueryString'
          description: The dynamic thing group search query string.
        queryVersion:
          $ref: '#/components/schemas/QueryVersion'
          description: The dynamic thing group query version.
        status:
          $ref: '#/components/schemas/DynamicGroupStatus'
          description: The dynamic thing group status.
    DescribeThingRegistrationTaskResponse:
      type: object
      properties:
        taskId:
          $ref: '#/components/schemas/TaskId'
          description: The task ID.
        creationDate:
          $ref: '#/components/schemas/CreationDate'
          description: The task creation date.
        lastModifiedDate:
          $ref: '#/components/schemas/LastModifiedDate'
          description: The date when the task was last modified.
        templateBody:
          $ref: '#/components/schemas/TemplateBody'
          description: The task's template.
        inputFileBucket:
          $ref: '#/components/schemas/RegistryS3BucketName'
          description: The S3 bucket that contains the input file.
        inputFileKey:
          $ref: '#/components/schemas/RegistryS3KeyName'
          description: The input file key.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The role ARN that grants access to the input file bucket.
        status:
          $ref: '#/components/schemas/Status'
          description: The status of the bulk thing provisioning task.
        message:
          $ref: '#/components/schemas/ErrorMessage'
          description: The message.
        successCount:
          $ref: '#/components/schemas/Count'
          description: The number of things successfully provisioned.
        failureCount:
          $ref: '#/components/schemas/Count'
          description: The number of things that failed to be provisioned.
        percentageProgress:
          $ref: '#/components/schemas/Percentage'
          description: The progress of the bulk provisioning task expressed as a percentage.
    DescribeThingTypeResponse:
      type: object
      properties:
        thingTypeName:
          $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type.
        thingTypeId:
          $ref: '#/components/schemas/ThingTypeId'
          description: The thing type ID.
        thingTypeArn:
          $ref: '#/components/schemas/ThingTypeArn'
          description: The thing type ARN.
        thingTypeProperties:
          $ref: '#/components/schemas/ThingTypeProperties'
          description: 'The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.'
        thingTypeMetadata:
          $ref: '#/components/schemas/ThingTypeMetadata'
          description: 'The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.'
      description: The output for the DescribeThingType operation.
    DetachSecurityProfileResponse:
      type: object
      properties: {}
    DetachThingPrincipalResponse:
      type: object
      properties: {}
      description: The output from the DetachThingPrincipal operation.
    GetBehaviorModelTrainingSummariesResponse:
      type: object
      properties:
        summaries:
          $ref: '#/components/schemas/BehaviorModelTrainingSummaries'
          description: ' A list of all ML Detect behaviors and their model status for a given Security Profile. '
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results. '
    GetCardinalityResponse:
      type: object
      properties:
        cardinality:
          $ref: '#/components/schemas/Count'
          description: The approximate count of unique values that match the query.
    InvalidAggregationException: {}
    IndexNotReadyException: {}
    GetEffectivePoliciesResponse:
      type: object
      properties:
        effectivePolicies:
          $ref: '#/components/schemas/EffectivePolicies'
          description: The effective policies.
    GetIndexingConfigurationResponse:
      type: object
      properties:
        thingIndexingConfiguration:
          $ref: '#/components/schemas/ThingIndexingConfiguration'
          description: Thing indexing configuration.
        thingGroupIndexingConfiguration:
          $ref: '#/components/schemas/ThingGroupIndexingConfiguration'
          description: The index configuration.
    GetJobDocumentResponse:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/JobDocument'
          description: The job document content.
    GetLoggingOptionsResponse:
      type: object
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access.
        logLevel:
          $ref: '#/components/schemas/LogLevel'
          description: The logging level.
      description: The output from the GetLoggingOptions operation.
    GetOTAUpdateResponse:
      type: object
      properties:
        otaUpdateInfo:
          $ref: '#/components/schemas/OTAUpdateInfo'
          description: The OTA update info.
    GetPercentilesResponse:
      type: object
      properties:
        percentiles:
          $ref: '#/components/schemas/Percentiles'
          description: The percentile values of the aggregated fields.
    Percent:
      type: number
      format: double
      minimum: 0
      maximum: 100
    GetPolicyResponse:
      type: object
      properties:
        policyName:
          $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyArn:
          $ref: '#/components/schemas/PolicyArn'
          description: The policy ARN.
        policyDocument:
          $ref: '#/components/schemas/PolicyDocument'
          description: The JSON document that describes the policy.
        defaultVersionId:
          $ref: '#/components/schemas/PolicyVersionId'
          description: The default policy version ID.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The date the policy was created.
        lastModifiedDate:
          $ref: '#/components/schemas/DateType'
          description: The date the policy was last modified.
        generationId:
          $ref: '#/components/schemas/GenerationId'
          description: The generation ID of the policy.
      description: The output from the GetPolicy operation.
    GetPolicyVersionResponse:
      type: object
      properties:
        policyArn:
          $ref: '#/components/schemas/PolicyArn'
          description: The policy ARN.
        policyName:
          $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyDocument:
          $ref: '#/components/schemas/PolicyDocument'
          description: The JSON document that describes the policy.
        policyVersionId:
          $ref: '#/components/schemas/PolicyVersionId'
          description: The policy version ID.
        isDefaultVersion:
          $ref: '#/components/schemas/IsDefaultVersion'
          description: Specifies whether the policy version is the default.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The date the policy was created.
        lastModifiedDate:
          $ref: '#/components/schemas/DateType'
          description: The date the policy was last modified.
        generationId:
          $ref: '#/components/schemas/GenerationId'
          description: The generation ID of the policy version.
      description: The output from the GetPolicyVersion operation.
    GetRegistrationCodeResponse:
      type: object
      properties:
        registrationCode:
          $ref: '#/components/schemas/RegistrationCode'
          description: The CA certificate registration code.
      description: The output from the GetRegistrationCode operation.
    GetStatisticsResponse:
      type: object
      properties:
        statistics:
          $ref: '#/components/schemas/Statistics'
          description: The statistics returned by the Fleet Indexing service based on the query and aggregation field.
    GetTopicRuleResponse:
      type: object
      properties:
        ruleArn:
          $ref: '#/components/schemas/RuleArn'
          description: The rule ARN.
        rule:
          $ref: '#/components/schemas/TopicRule'
          description: The rule.
      description: The output from the GetTopicRule operation.
    GetTopicRuleDestinationResponse:
      type: object
      properties:
        topicRuleDestination:
          $ref: '#/components/schemas/TopicRuleDestination'
          description: The topic rule destination.
    GetV2LoggingOptionsResponse:
      type: object
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The IAM role ARN AWS IoT uses to write to your CloudWatch logs.
        defaultLogLevel:
          $ref: '#/components/schemas/LogLevel'
          description: The default log level.
        disableAllLogs:
          $ref: '#/components/schemas/DisableAllLogs'
          description: Disables all logs.
    NotConfiguredException: {}
    ListActiveViolationsResponse:
      type: object
      properties:
        activeViolations:
          $ref: '#/components/schemas/ActiveViolations'
          description: The list of active violations.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
    ListAttachedPoliciesResponse:
      type: object
      properties:
        policies:
          $ref: '#/components/schemas/Policies'
          description: The policies.
        nextMarker:
          $ref: '#/components/schemas/Marker'
          description: 'The token to retrieve the next set of results, or ``null`` if there are no more results.'
    ListAuditFindingsResponse:
      type: object
      properties:
        findings:
          $ref: '#/components/schemas/AuditFindings'
          description: The findings (results) of the audit.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
    ListAuditMitigationActionsExecutionsResponse:
      type: object
      properties:
        actionsExecutions:
          $ref: '#/components/schemas/AuditMitigationActionExecutionMetadataList'
          description: 'A set of task execution results based on the input parameters. Details include the mitigation action applied, start time, and task status.'
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
    ListAuditMitigationActionsTasksResponse:
      type: object
      properties:
        tasks:
          $ref: '#/components/schemas/AuditMitigationActionsTaskMetadataList'
          description: The collection of audit mitigation tasks that matched the filter criteria.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
    ListAuditSuppressionsResponse:
      type: object
      properties:
        suppressions:
          $ref: '#/components/schemas/AuditSuppressionList'
          description: ' List of audit suppressions. '
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results. '
    ListAuditTasksResponse:
      type: object
      properties:
        tasks:
          $ref: '#/components/schemas/AuditTaskMetadataList'
          description: The audits that were performed during the specified time period.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
    ListAuthorizersResponse:
      type: object
      properties:
        authorizers:
          $ref: '#/components/schemas/Authorizers'
          description: The authorizers.
        nextMarker:
          $ref: '#/components/schemas/Marker'
          description: A marker used to get the next set of results.
    ListBillingGroupsResponse:
      type: object
      properties:
        billingGroups:
          $ref: '#/components/schemas/BillingGroupNameAndArnList'
          description: The list of billing groups.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
    ListCACertificatesResponse:
      type: object
      properties:
        certificates:
          $ref: '#/components/schemas/CACertificates'
          description: The CA certificates registered in your AWS account.
        nextMarker:
          $ref: '#/components/schemas/Marker'
          description: The current position within the list of CA certificates.
      description: The output from the ListCACertificates operation.
    ListCertificatesResponse:
      type: object
      properties:
        certificates:
          $ref: '#/components/schemas/Certificates'
          description: The descriptions of the certificates.
        nextMarker:
          $ref: '#/components/schemas/Marker'
          description: 'The marker for the next set of results, or null if there are no additional results.'
      description: The output of the ListCertificates operation.
    ListCertificatesByCAResponse:
      type: object
      properties:
        certificates:
          $ref: '#/components/schemas/Certificates'
          description: The device certificates signed by the specified CA certificate.
        nextMarker:
          $ref: '#/components/schemas/Marker'
          description: 'The marker for the next set of results, or null if there are no additional results.'
      description: The output of the ListCertificatesByCA operation.
    ListCustomMetricsResponse:
      type: object
      properties:
        metricNames:
          $ref: '#/components/schemas/MetricNames'
          description: ' The name of the custom metric. '
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results. '
    ListDetectMitigationActionsExecutionsResponse:
      type: object
      properties:
        actionsExecutions:
          $ref: '#/components/schemas/DetectMitigationActionExecutionList'
          description: ' List of actions executions. '
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results. '
    ListDetectMitigationActionsTasksResponse:
      type: object
      properties:
        tasks:
          $ref: '#/components/schemas/DetectMitigationActionsTaskSummaryList'
          description: ' The collection of ML Detect mitigation tasks that matched the filter criteria. '
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results. '
    ListDimensionsResponse:
      type: object
      properties:
        dimensionNames:
          $ref: '#/components/schemas/DimensionNames'
          description: A list of the names of the defined dimensions. Use <code>DescribeDimension</code> to get details for a dimension.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
    ListDomainConfigurationsResponse:
      type: object
      properties:
        domainConfigurations:
          $ref: '#/components/schemas/DomainConfigurations'
          description: A list of objects that contain summary information about the user's domain configurations.
        nextMarker:
          $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results.
    ListIndicesResponse:
      type: object
      properties:
        indexNames:
          $ref: '#/components/schemas/IndexNamesList'
          description: The index names.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token used to get the next set of results, or <code>null</code> if there are no additional results.'
    ListJobExecutionsForJobResponse:
      type: object
      properties:
        executionSummaries:
          $ref: '#/components/schemas/JobExecutionSummaryForJobList'
          description: A list of job execution summaries.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or <b>null</b> if there are no additional results.'
    ListJobExecutionsForThingResponse:
      type: object
      properties:
        executionSummaries:
          $ref: '#/components/schemas/JobExecutionSummaryForThingList'
          description: A list of job execution summaries.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or <b>null</b> if there are no additional results.'
    ListJobTemplatesResponse:
      type: object
      properties:
        jobTemplates:
          $ref: '#/components/schemas/JobTemplateSummaryList'
          description: A list of objects that contain information about the job templates.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or <b>null</b> if there are no additional results.'
    ListJobsResponse:
      type: object
      properties:
        jobs:
          $ref: '#/components/schemas/JobSummaryList'
          description: A list of jobs.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or <b>null</b> if there are no additional results.'
    ListMitigationActionsResponse:
      type: object
      properties:
        actionIdentifiers:
          $ref: '#/components/schemas/MitigationActionIdentifierList'
          description: A set of actions that matched the specified filter criteria.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
    ListOTAUpdatesResponse:
      type: object
      properties:
        otaUpdates:
          $ref: '#/components/schemas/OTAUpdatesSummary'
          description: A list of OTA update jobs.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to use to get the next set of results.
    ListOutgoingCertificatesResponse:
      type: object
      properties:
        outgoingCertificates:
          $ref: '#/components/schemas/OutgoingCertificates'
          description: The certificates that are being transferred but not yet accepted.
        nextMarker:
          $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results.
      description: The output from the ListOutgoingCertificates operation.
    ListPoliciesResponse:
      type: object
      properties:
        policies:
          $ref: '#/components/schemas/Policies'
          description: The descriptions of the policies.
        nextMarker:
          $ref: '#/components/schemas/Marker'
          description: 'The marker for the next set of results, or null if there are no additional results.'
      description: The output from the ListPolicies operation.
    ListPolicyPrincipalsResponse:
      type: object
      properties:
        principals:
          $ref: '#/components/schemas/Principals'
          description: The descriptions of the principals.
        nextMarker:
          $ref: '#/components/schemas/Marker'
          description: 'The marker for the next set of results, or null if there are no additional results.'
      description: The output from the ListPolicyPrincipals operation.
    ListPolicyVersionsResponse:
      type: object
      properties:
        policyVersions:
          $ref: '#/components/schemas/PolicyVersions'
          description: The policy versions.
      description: The output from the ListPolicyVersions operation.
    ListPrincipalPoliciesResponse:
      type: object
      properties:
        policies:
          $ref: '#/components/schemas/Policies'
          description: The policies.
        nextMarker:
          $ref: '#/components/schemas/Marker'
          description: 'The marker for the next set of results, or null if there are no additional results.'
      description: The output from the ListPrincipalPolicies operation.
    ListPrincipalThingsResponse:
      type: object
      properties:
        things:
          $ref: '#/components/schemas/ThingNameList'
          description: The things.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
      description: The output from the ListPrincipalThings operation.
    ListProvisioningTemplateVersionsResponse:
      type: object
      properties:
        versions:
          $ref: '#/components/schemas/ProvisioningTemplateVersionListing'
          description: The list of fleet provisioning template versions.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to retrieve the next set of results.
    ListProvisioningTemplatesResponse:
      type: object
      properties:
        templates:
          $ref: '#/components/schemas/ProvisioningTemplateListing'
          description: A list of fleet provisioning templates
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to retrieve the next set of results.
    ListRoleAliasesResponse:
      type: object
      properties:
        roleAliases:
          $ref: '#/components/schemas/RoleAliases'
          description: The role aliases.
        nextMarker:
          $ref: '#/components/schemas/Marker'
          description: A marker used to get the next set of results.
    ListScheduledAuditsResponse:
      type: object
      properties:
        scheduledAudits:
          $ref: '#/components/schemas/ScheduledAuditMetadataList'
          description: The list of scheduled audits.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
    ListSecurityProfilesResponse:
      type: object
      properties:
        securityProfileIdentifiers:
          $ref: '#/components/schemas/SecurityProfileIdentifiers'
          description: A list of security profile identifiers (names and ARNs).
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
    ListSecurityProfilesForTargetResponse:
      type: object
      properties:
        securityProfileTargetMappings:
          $ref: '#/components/schemas/SecurityProfileTargetMappings'
          description: A list of security profiles and their associated targets.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
    ListStreamsResponse:
      type: object
      properties:
        streams:
          $ref: '#/components/schemas/StreamsSummary'
          description: A list of streams.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token used to get the next set of results.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags assigned to the resource.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
    ListTargetsForPolicyResponse:
      type: object
      properties:
        targets:
          $ref: '#/components/schemas/PolicyTargets'
          description: The policy targets.
        nextMarker:
          $ref: '#/components/schemas/Marker'
          description: A marker used to get the next set of results.
    ListTargetsForSecurityProfileResponse:
      type: object
      properties:
        securityProfileTargets:
          $ref: '#/components/schemas/SecurityProfileTargets'
          description: The thing groups to which the security profile is attached.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
    ListThingGroupsResponse:
      type: object
      properties:
        thingGroups:
          $ref: '#/components/schemas/ThingGroupNameAndArnList'
          description: The thing groups.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results. Will not be returned if operation has returned all results.
    ListThingGroupsForThingResponse:
      type: object
      properties:
        thingGroups:
          $ref: '#/components/schemas/ThingGroupNameAndArnList'
          description: The thing groups.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
    ListThingPrincipalsResponse:
      type: object
      properties:
        principals:
          $ref: '#/components/schemas/Principals'
          description: The principals associated with the thing.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
      description: The output from the ListThingPrincipals operation.
    ListThingRegistrationTaskReportsResponse:
      type: object
      properties:
        resourceLinks:
          $ref: '#/components/schemas/S3FileUrlList'
          description: Links to the task resources.
        reportType:
          $ref: '#/components/schemas/ReportType'
          description: The type of task report.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
    ListThingRegistrationTasksResponse:
      type: object
      properties:
        taskIds:
          $ref: '#/components/schemas/TaskIdList'
          description: A list of bulk thing provisioning task IDs.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
    ListThingTypesResponse:
      type: object
      properties:
        thingTypes:
          $ref: '#/components/schemas/ThingTypeList'
          description: The thing types.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Will not be returned if operation has returned all results.
      description: The output for the ListThingTypes operation.
    ListThingsResponse:
      type: object
      properties:
        things:
          $ref: '#/components/schemas/ThingAttributeList'
          description: The things.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results. Will not be returned if operation has returned all results.
      description: The output from the ListThings operation.
    ListThingsInBillingGroupResponse:
      type: object
      properties:
        things:
          $ref: '#/components/schemas/ThingNameList'
          description: A list of things in the billing group.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results. Will not be returned if operation has returned all results.
    ListThingsInThingGroupResponse:
      type: object
      properties:
        things:
          $ref: '#/components/schemas/ThingNameList'
          description: The things in the specified thing group.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
    ListTopicRuleDestinationsResponse:
      type: object
      properties:
        destinationSummaries:
          $ref: '#/components/schemas/TopicRuleDestinationSummaries'
          description: Information about a topic rule destination.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
    ListTopicRulesResponse:
      type: object
      properties:
        rules:
          $ref: '#/components/schemas/TopicRuleList'
          description: The rules.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
      description: The output from the ListTopicRules operation.
    ListV2LoggingLevelsResponse:
      type: object
      properties:
        logTargetConfigurations:
          $ref: '#/components/schemas/LogTargetConfigurations'
          description: The logging configuration for a target.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
    ListViolationEventsResponse:
      type: object
      properties:
        violationEvents:
          $ref: '#/components/schemas/ViolationEvents'
          description: 'The security profile violation alerts issued for this account during the given time period, potentially filtered by security profile, behavior violated, or thing (device) violating.'
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
    RegisterCACertificateResponse:
      type: object
      properties:
        certificateArn:
          $ref: '#/components/schemas/CertificateArn'
          description: The CA certificate ARN.
        certificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The CA certificate identifier.
      description: The output from the RegisterCACertificateResponse operation.
    TemplateBody:
      type: string
    RegistrationCodeValidationException: {}
    RegisterCertificateResponse:
      type: object
      properties:
        certificateArn:
          $ref: '#/components/schemas/CertificateArn'
          description: The certificate ARN.
        certificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The certificate identifier.
      description: The output from the RegisterCertificate operation.
    CertificateConflictException: {}
    RegisterCertificateWithoutCAResponse:
      type: object
      properties:
        certificateArn:
          $ref: '#/components/schemas/CertificateArn'
          description: The Amazon Resource Name (ARN) of the registered certificate.
        certificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The ID of the registered certificate. (The last part of the certificate ARN contains the certificate ID.
    RegisterThingResponse:
      type: object
      properties:
        certificatePem:
          $ref: '#/components/schemas/CertificatePem'
          description: 'The certificate data, in PEM format.'
        resourceArns:
          $ref: '#/components/schemas/ResourceArns'
          description: ARNs for the generated resources.
    ResourceRegistrationFailureException: {}
    RemoveThingFromBillingGroupResponse:
      type: object
      properties: {}
    RemoveThingFromThingGroupResponse:
      type: object
      properties: {}
    SearchIndexResponse:
      type: object
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token used to get the next set of results, or <code>null</code> if there are no additional results.'
        things:
          $ref: '#/components/schemas/ThingDocumentList'
          description: The things that match the search query.
        thingGroups:
          $ref: '#/components/schemas/ThingGroupDocumentList'
          description: The thing groups that match the search query.
    SetDefaultAuthorizerResponse:
      type: object
      properties:
        authorizerName:
          $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer name.
        authorizerArn:
          $ref: '#/components/schemas/AuthorizerArn'
          description: The authorizer ARN.
    AwsArn:
      type: string
    LogLevel:
      type: string
      enum:
        - DEBUG
        - INFO
        - ERROR
        - WARN
        - DISABLED
    LogTargetType:
      type: string
      enum:
        - DEFAULT
        - THING_GROUP
    LogTargetName:
      type: string
    StartAuditMitigationActionsTaskResponse:
      type: object
      properties:
        taskId:
          $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier for the audit mitigation task. This matches the <code>taskId</code> that you specified in the request.
    AuditTaskId:
      type: string
      pattern: '[a-zA-Z0-9\-]+'
      minLength: 1
      maxLength: 40
    FindingIds:
      type: array
      items:
        $ref: '#/components/schemas/FindingId'
      minItems: 1
      maxItems: 25
    AuditCheckToReasonCodeFilter:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ReasonForNonComplianceCodes'
    MitigationActionNameList:
      type: array
      items:
        $ref: '#/components/schemas/MitigationActionName'
      minItems: 1
      maxItems: 5
    TaskAlreadyExistsException: {}
    StartDetectMitigationActionsTaskResponse:
      type: object
      properties:
        taskId:
          $ref: '#/components/schemas/MitigationActionsTaskId'
          description: ' The unique identifier of the task. '
    TargetViolationIdsForDetectMitigationActions:
      type: array
      items:
        $ref: '#/components/schemas/ViolationId'
      minItems: 1
      maxItems: 25
    SecurityProfileName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    BehaviorName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    MitigationActionName:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      maxLength: 128
    Timestamp:
      type: string
      format: date-time
    StartOnDemandAuditTaskResponse:
      type: object
      properties:
        taskId:
          $ref: '#/components/schemas/AuditTaskId'
          description: The ID of the on-demand audit you started.
    StartThingRegistrationTaskResponse:
      type: object
      properties:
        taskId:
          $ref: '#/components/schemas/TaskId'
          description: The bulk thing provisioning task ID.
    StopThingRegistrationTaskResponse:
      type: object
      properties: {}
    TagResourceResponse:
      type: object
      properties: {}
    TestAuthorizationResponse:
      type: object
      properties:
        authResults:
          $ref: '#/components/schemas/AuthResults'
          description: The authentication results.
    AuthInfo:
      type: object
      required:
        - resources
      properties:
        actionType:
          $ref: '#/components/schemas/ActionType'
          description: The type of action for which the principal is being authorized.
        resources:
          $ref: '#/components/schemas/Resources'
          description: The resources for which the principal is being authorized to perform the specified action.
      description: A collection of authorization information.
    PolicyName:
      type: string
      pattern: '[\w+=,.@-]+'
      minLength: 1
      maxLength: 128
    TestInvokeAuthorizerResponse:
      type: object
      properties:
        isAuthenticated:
          $ref: '#/components/schemas/IsAuthenticated'
          description: 'True if the token is authenticated, otherwise false.'
        principalId:
          $ref: '#/components/schemas/PrincipalId'
          description: The principal ID.
        policyDocuments:
          $ref: '#/components/schemas/PolicyDocuments'
          description: IAM policy documents.
        refreshAfterInSeconds:
          $ref: '#/components/schemas/Seconds'
          description: The number of seconds after which the temporary credentials are refreshed.
        disconnectAfterInSeconds:
          $ref: '#/components/schemas/Seconds'
          description: The number of seconds after which the connection is terminated.
    HttpHeaders:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/HttpHeaderValue'
    HttpQueryString:
      type: string
      minLength: 1
      maxLength: 4096
    MqttUsername:
      type: string
      minLength: 1
      maxLength: 65535
    MqttPassword:
      type: string
      minLength: 1
      maxLength: 65535
    MqttClientId:
      type: string
      minLength: 1
      maxLength: 65535
    ServerName:
      type: string
      minLength: 1
      maxLength: 253
    InvalidResponseException: {}
    TransferCertificateResponse:
      type: object
      properties:
        transferredCertificateArn:
          $ref: '#/components/schemas/CertificateArn'
          description: The ARN of the certificate.
      description: The output from the TransferCertificate operation.
    TransferConflictException: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 128
    UpdateAccountAuditConfigurationResponse:
      type: object
      properties: {}
    AuditNotificationTarget:
      type: object
      properties:
        targetArn:
          $ref: '#/components/schemas/TargetArn'
          description: The ARN of the target (SNS topic) to which audit notifications are sent.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role that grants permission to send notifications to the target.
        enabled:
          $ref: '#/components/schemas/Enabled'
          description: True if notifications to the target are enabled.
      description: Information about the targets to which audit notifications are sent.
    AuditCheckConfiguration:
      type: object
      properties:
        enabled:
          $ref: '#/components/schemas/Enabled'
          description: True if this audit check is enabled for this account.
      description: Which audit checks are enabled and disabled for this account.
    UpdateAuditSuppressionResponse:
      type: object
      properties: {}
    UpdateAuthorizerResponse:
      type: object
      properties:
        authorizerName:
          $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer name.
        authorizerArn:
          $ref: '#/components/schemas/AuthorizerArn'
          description: The authorizer ARN.
    UpdateBillingGroupResponse:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Version'
          description: The latest version of the billing group.
    UpdateCustomMetricResponse:
      type: object
      properties:
        metricName:
          $ref: '#/components/schemas/MetricName'
          description: ' The name of the custom metric. '
        metricArn:
          $ref: '#/components/schemas/CustomMetricArn'
          description: ' The Amazon Resource Number (ARN) of the custom metric. '
        metricType:
          $ref: '#/components/schemas/CustomMetricType'
          description: ' The type of the custom metric. Types include <code>string-list</code>, <code>ip-address-list</code>, <code>number-list</code>, and <code>number</code>. '
        displayName:
          $ref: '#/components/schemas/CustomMetricDisplayName'
          description: ' A friendly name in the console for the custom metric '
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The creation date of the custom metric in milliseconds since epoch. '
        lastModifiedDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The time the custom metric was last modified in milliseconds since epoch. '
    UpdateDimensionResponse:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/DimensionName'
          description: A unique identifier for the dimension.
        arn:
          $ref: '#/components/schemas/DimensionArn'
          description: The Amazon Resource Name (ARN)of the created dimension.
        type:
          $ref: '#/components/schemas/DimensionType'
          description: The type of the dimension.
        stringValues:
          $ref: '#/components/schemas/DimensionStringValues'
          description: 'The value or list of values used to scope the dimension. For example, for topic filters, this is the pattern used to match the MQTT topic name.'
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in milliseconds since epoch, when the dimension was initially created.'
        lastModifiedDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in milliseconds since epoch, when the dimension was most recently updated.'
    UpdateDomainConfigurationResponse:
      type: object
      properties:
        domainConfigurationName:
          $ref: '#/components/schemas/ReservedDomainConfigurationName'
          description: The name of the domain configuration that was updated.
        domainConfigurationArn:
          $ref: '#/components/schemas/DomainConfigurationArn'
          description: The ARN of the domain configuration that was updated.
    UpdateDynamicThingGroupResponse:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Version'
          description: The dynamic thing group version.
    UpdateEventConfigurationsResponse:
      type: object
      properties: {}
    Configuration:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/Enabled'
          description: True to enable the configuration.
      description: Configuration.
    UpdateIndexingConfigurationResponse:
      type: object
      properties: {}
    ThingIndexingMode:
      type: string
      enum:
        - 'OFF'
        - REGISTRY
        - REGISTRY_AND_SHADOW
    ThingConnectivityIndexingMode:
      type: string
      enum:
        - 'OFF'
        - STATUS
    Fields:
      type: array
      items:
        $ref: '#/components/schemas/Field'
    ThingGroupIndexingMode:
      type: string
      enum:
        - 'OFF'
        - 'ON'
    UpdateMitigationActionResponse:
      type: object
      properties:
        actionArn:
          $ref: '#/components/schemas/MitigationActionArn'
          description: The ARN for the new mitigation action.
        actionId:
          $ref: '#/components/schemas/MitigationActionId'
          description: A unique identifier for the mitigation action.
    UpdateProvisioningTemplateResponse:
      type: object
      properties: {}
    UpdateRoleAliasResponse:
      type: object
      properties:
        roleAlias:
          $ref: '#/components/schemas/RoleAlias'
          description: The role alias.
        roleAliasArn:
          $ref: '#/components/schemas/RoleAliasArn'
          description: The role alias ARN.
    UpdateScheduledAuditResponse:
      type: object
      properties:
        scheduledAuditArn:
          $ref: '#/components/schemas/ScheduledAuditArn'
          description: The ARN of the scheduled audit.
    UpdateSecurityProfileResponse:
      type: object
      properties:
        securityProfileName:
          $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile that was updated.
        securityProfileArn:
          $ref: '#/components/schemas/SecurityProfileArn'
          description: The ARN of the security profile that was updated.
        securityProfileDescription:
          $ref: '#/components/schemas/SecurityProfileDescription'
          description: The description of the security profile.
        behaviors:
          $ref: '#/components/schemas/Behaviors'
          description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
        alertTargets:
          $ref: '#/components/schemas/AlertTargets'
          description: Where the alerts are sent. (Alerts are always sent to the console.)
        additionalMetricsToRetain:
          allOf:
            - $ref: '#/components/schemas/AdditionalMetricsToRetainList'
            - deprecated: true
              description: '<p> <i>Please use <a>UpdateSecurityProfileResponse$additionalMetricsToRetainV2</a> instead.</i> </p> <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the security profile''s <code>behaviors</code>, but it is also retained for any metric specified here.</p>Use additionalMetricsToRetainV2.'
        additionalMetricsToRetainV2:
          $ref: '#/components/schemas/AdditionalMetricsToRetainV2List'
          description: 'A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s behaviors, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.'
        version:
          $ref: '#/components/schemas/Version'
          description: The updated version of the security profile.
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: The time the security profile was created.
        lastModifiedDate:
          $ref: '#/components/schemas/Timestamp'
          description: The time the security profile was last modified.
    UpdateStreamResponse:
      type: object
      properties:
        streamId:
          $ref: '#/components/schemas/StreamId'
          description: The stream ID.
        streamArn:
          $ref: '#/components/schemas/StreamArn'
          description: The stream ARN.
        description:
          $ref: '#/components/schemas/StreamDescription'
          description: A description of the stream.
        streamVersion:
          $ref: '#/components/schemas/StreamVersion'
          description: The stream version.
    UpdateThingResponse:
      type: object
      properties: {}
      description: The output from the UpdateThing operation.
    UpdateThingGroupResponse:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the updated thing group.
    UpdateThingGroupsForThingResponse:
      type: object
      properties: {}
    ThingGroupName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    UpdateTopicRuleDestinationResponse:
      type: object
      properties: {}
    ValidateSecurityProfileBehaviorsResponse:
      type: object
      properties:
        valid:
          $ref: '#/components/schemas/Valid'
          description: True if the behaviors were valid.
        validationErrors:
          $ref: '#/components/schemas/ValidationErrors'
          description: The list of any errors found in the behaviors.
    AbortAction:
      type: string
      enum:
        - CANCEL
    AbortConfig:
      type: object
      required:
        - criteriaList
      properties:
        criteriaList:
          $ref: '#/components/schemas/AbortCriteriaList'
          description: The list of criteria that determine when and how to abort the job.
      description: The criteria that determine when and how a job abort takes place.
    JobExecutionFailureType:
      type: string
      enum:
        - FAILED
        - REJECTED
        - TIMED_OUT
        - ALL
    AbortThresholdPercentage:
      type: number
      format: double
      maximum: 100
    MinimumNumberOfExecutedThings:
      type: integer
      minimum: 1
    AbortCriteria:
      type: object
      required:
        - failureType
        - action
        - thresholdPercentage
        - minNumberOfExecutedThings
      properties:
        failureType:
          $ref: '#/components/schemas/JobExecutionFailureType'
          description: The type of job execution failures that can initiate a job abort.
        action:
          $ref: '#/components/schemas/AbortAction'
          description: The type of job action to take to initiate the job abort.
        thresholdPercentage:
          $ref: '#/components/schemas/AbortThresholdPercentage'
          description: '<p>The minimum percentage of job execution failures that must occur to initiate the job abort.</p> <p>AWS IoT supports up to two digits after the decimal (for example, 10.9 and 10.99, but not 10.999).</p>'
        minNumberOfExecutedThings:
          $ref: '#/components/schemas/MinimumNumberOfExecutedThings'
          description: The minimum number of things which must receive job execution notifications before the job can be aborted.
      description: The criteria that determine when and how a job abort takes place.
    SetAsActive:
      type: boolean
    AcceptCertificateTransferRequest:
      type: object
      title: AcceptCertificateTransferRequest
      properties: {}
      description: The input for the AcceptCertificateTransfer operation.
    DynamoDBAction:
      type: object
      required:
        - tableName
        - roleArn
        - hashKeyField
        - hashKeyValue
      properties:
        tableName:
          $ref: '#/components/schemas/TableName'
          description: The name of the DynamoDB table.
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access to the DynamoDB table.
        operation:
          $ref: '#/components/schemas/DynamoOperation'
          description: 'The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.'
        hashKeyField:
          $ref: '#/components/schemas/HashKeyField'
          description: The hash key name.
        hashKeyValue:
          $ref: '#/components/schemas/HashKeyValue'
          description: The hash key value.
        hashKeyType:
          $ref: '#/components/schemas/DynamoKeyType'
          description: The hash key type. Valid values are "STRING" or "NUMBER"
        rangeKeyField:
          $ref: '#/components/schemas/RangeKeyField'
          description: The range key name.
        rangeKeyValue:
          $ref: '#/components/schemas/RangeKeyValue'
          description: The range key value.
        rangeKeyType:
          $ref: '#/components/schemas/DynamoKeyType'
          description: The range key type. Valid values are "STRING" or "NUMBER"
        payloadField:
          $ref: '#/components/schemas/PayloadField'
          description: The action payload. This name can be customized.
      description: '<p>Describes an action to write to a DynamoDB table.</p> <p>The <code>tableName</code>, <code>hashKeyField</code>, and <code>rangeKeyField</code> values must match the values used when you created the table.</p> <p>The <code>hashKeyValue</code> and <code>rangeKeyvalue</code> fields use a substitution template syntax. These templates provide data at runtime. The syntax is as follows: ${<i>sql-expression</i>}.</p> <p>You can specify any valid expression in a WHERE or SELECT clause, including JSON properties, comparisons, calculations, and functions. For example, the following field uses the third level of the topic:</p> <p> <code>"hashKeyValue": "${topic(3)}"</code> </p> <p>The following field uses the timestamp:</p> <p> <code>"rangeKeyValue": "${timestamp()}"</code> </p>'
    DynamoDBv2Action:
      type: object
      required:
        - roleArn
        - putItem
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access to the DynamoDB table.
        putItem:
          $ref: '#/components/schemas/PutItemInput'
          description: '<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ "dynamoDBv2": { "roleArn": "aws:iam:12341251:my-role" "putItem": { "tableName": "my-table" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>'
      description: <p>Describes an action to write to a DynamoDB table.</p> <p>This DynamoDB action writes each attribute in the message payload into it's own column in the DynamoDB table.</p>
    LambdaAction:
      type: object
      required:
        - functionArn
      properties:
        functionArn:
          $ref: '#/components/schemas/FunctionArn'
          description: The ARN of the Lambda function.
      description: Describes an action to invoke a Lambda function.
    SnsAction:
      type: object
      required:
        - targetArn
        - roleArn
      properties:
        targetArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the SNS topic.
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access.
        messageFormat:
          $ref: '#/components/schemas/MessageFormat'
          description: '(Optional) The message format of the message to publish. Accepted values are "JSON" and "RAW". The default value of the attribute is "RAW". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href="https://docs.aws.amazon.com/sns/latest/dg/json-formats.html">https://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.'
      description: Describes an action to publish to an Amazon SNS topic.
    SqsAction:
      type: object
      required:
        - roleArn
        - queueUrl
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access.
        queueUrl:
          $ref: '#/components/schemas/QueueUrl'
          description: The URL of the Amazon SQS queue.
        useBase64:
          $ref: '#/components/schemas/UseBase64'
          description: Specifies whether to use Base64 encoding.
      description: Describes an action to publish data to an Amazon SQS queue.
    KinesisAction:
      type: object
      required:
        - roleArn
        - streamName
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access to the Amazon Kinesis stream.
        streamName:
          $ref: '#/components/schemas/StreamName'
          description: The name of the Amazon Kinesis stream.
        partitionKey:
          $ref: '#/components/schemas/PartitionKey'
          description: The partition key.
      description: Describes an action to write data to an Amazon Kinesis stream.
    RepublishAction:
      type: object
      required:
        - roleArn
        - topic
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access.
        topic:
          $ref: '#/components/schemas/TopicPattern'
          description: The name of the MQTT topic.
        qos:
          $ref: '#/components/schemas/Qos'
          description: The Quality of Service (QoS) level to use when republishing messages. The default value is 0.
      description: Describes an action to republish to another topic.
    S3Action:
      type: object
      required:
        - roleArn
        - bucketName
        - key
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access.
        bucketName:
          $ref: '#/components/schemas/BucketName'
          description: The Amazon S3 bucket.
        key:
          $ref: '#/components/schemas/Key'
          description: 'The object key. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html">Actions, resources, and condition keys for Amazon S3</a>.'
        cannedAcl:
          $ref: '#/components/schemas/CannedAccessControlList'
          description: 'The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl">S3 canned ACLs</a>.'
      description: Describes an action to write data to an Amazon S3 bucket.
    FirehoseAction:
      type: object
      required:
        - roleArn
        - deliveryStreamName
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The IAM role that grants access to the Amazon Kinesis Firehose stream.
        deliveryStreamName:
          $ref: '#/components/schemas/DeliveryStreamName'
          description: The delivery stream name.
        separator:
          $ref: '#/components/schemas/FirehoseSeparator'
          description: 'A character separator that will be used to separate records written to the Firehose stream. Valid values are: ''\n'' (newline), ''\t'' (tab), ''\r\n'' (Windows newline), '','' (comma).'
        batchMode:
          $ref: '#/components/schemas/BatchMode'
          description: '<p>Whether to deliver the Kinesis Data Firehose stream as a batch by using <a href="https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html"> <code>PutRecordBatch</code> </a>. The default value is <code>false</code>.</p> <p>When <code>batchMode</code> is <code>true</code> and the rule''s SQL statement evaluates to an Array, each Array element forms one record in the <a href="https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html"> <code>PutRecordBatch</code> </a> request. The resulting array can''t have more than 500 records.</p>'
      description: Describes an action that writes data to an Amazon Kinesis Firehose stream.
    CloudwatchMetricAction:
      type: object
      required:
        - roleArn
        - metricNamespace
        - metricName
        - metricValue
        - metricUnit
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The IAM role that allows access to the CloudWatch metric.
        metricNamespace:
          $ref: '#/components/schemas/String'
          description: The CloudWatch metric namespace name.
        metricName:
          $ref: '#/components/schemas/String'
          description: The CloudWatch metric name.
        metricValue:
          $ref: '#/components/schemas/String'
          description: The CloudWatch metric value.
        metricUnit:
          $ref: '#/components/schemas/String'
          description: 'The <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit">metric unit</a> supported by CloudWatch.'
        metricTimestamp:
          $ref: '#/components/schemas/String'
          description: 'An optional <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp">Unix timestamp</a>.'
      description: Describes an action that captures a CloudWatch metric.
    CloudwatchAlarmAction:
      type: object
      required:
        - roleArn
        - alarmName
        - stateReason
        - stateValue
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The IAM role that allows access to the CloudWatch alarm.
        alarmName:
          $ref: '#/components/schemas/AlarmName'
          description: The CloudWatch alarm name.
        stateReason:
          $ref: '#/components/schemas/StateReason'
          description: The reason for the alarm change.
        stateValue:
          $ref: '#/components/schemas/StateValue'
          description: 'The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.'
      description: Describes an action that updates a CloudWatch alarm.
    CloudwatchLogsAction:
      type: object
      required:
        - roleArn
        - logGroupName
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The IAM role that allows access to the CloudWatch log.
        logGroupName:
          $ref: '#/components/schemas/LogGroupName'
          description: The CloudWatch log group to which the action sends data.
      description: Describes an action that sends data to CloudWatch Logs.
    ElasticsearchAction:
      type: object
      required:
        - roleArn
        - endpoint
        - index
        - type
        - id
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The IAM role ARN that has access to Elasticsearch.
        endpoint:
          $ref: '#/components/schemas/ElasticsearchEndpoint'
          description: The endpoint of your Elasticsearch domain.
        index:
          $ref: '#/components/schemas/ElasticsearchIndex'
          description: The Elasticsearch index where you want to store your data.
        type:
          $ref: '#/components/schemas/ElasticsearchType'
          description: The type of document you are storing.
        id:
          $ref: '#/components/schemas/ElasticsearchId'
          description: The unique identifier for the document you are storing.
      description: Describes an action that writes data to an Amazon Elasticsearch Service domain.
    SalesforceAction:
      type: object
      required:
        - token
        - url
      properties:
        token:
          $ref: '#/components/schemas/SalesforceToken'
          description: The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.
        url:
          $ref: '#/components/schemas/SalesforceEndpoint'
          description: The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.
      description: Describes an action to write a message to a Salesforce IoT Cloud Input Stream.
    IotAnalyticsAction:
      type: object
      properties:
        channelArn:
          $ref: '#/components/schemas/AwsArn'
          description: (deprecated) The ARN of the IoT Analytics channel to which message data will be sent.
        channelName:
          $ref: '#/components/schemas/ChannelName'
          description: The name of the IoT Analytics channel to which message data will be sent.
        batchMode:
          $ref: '#/components/schemas/BatchMode'
          description: '<p>Whether to process the action as a batch. The default value is <code>false</code>.</p> <p>When <code>batchMode</code> is <code>true</code> and the rule SQL statement evaluates to an Array, each Array element is delivered as a separate message when passed by <a href="https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_BatchPutMessage.html"> <code>BatchPutMessage</code> </a> to the AWS IoT Analytics channel. The resulting array can''t have more than 100 messages.</p>'
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: 'The ARN of the role which has a policy that grants IoT Analytics permission to send message data via IoT Analytics (iotanalytics:BatchPutMessage).'
      description: Sends message data to an AWS IoT Analytics channel.
    IotEventsAction:
      type: object
      required:
        - inputName
        - roleArn
      properties:
        inputName:
          $ref: '#/components/schemas/InputName'
          description: The name of the AWS IoT Events input.
        messageId:
          $ref: '#/components/schemas/MessageId'
          description: '<p>The ID of the message. The default <code>messageId</code> is a new UUID value.</p> <p>When <code>batchMode</code> is <code>true</code>, you can''t specify a <code>messageId</code>--a new UUID value will be assigned.</p> <p>Assign a value to this property to ensure that only one input (message) with a given <code>messageId</code> will be processed by an AWS IoT Events detector.</p>'
        batchMode:
          $ref: '#/components/schemas/BatchMode'
          description: '<p>Whether to process the event actions as a batch. The default value is <code>false</code>.</p> <p>When <code>batchMode</code> is <code>true</code>, you can''t specify a <code>messageId</code>. </p> <p>When <code>batchMode</code> is <code>true</code> and the rule SQL statement evaluates to an Array, each Array element is treated as a separate message when it''s sent to AWS IoT Events by calling <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchPutMessage.html"> <code>BatchPutMessage</code> </a>. The resulting array can''t have more than 10 messages.</p>'
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: 'The ARN of the role that grants AWS IoT permission to send an input to an AWS IoT Events detector. ("Action":"iotevents:BatchPutMessage").'
      description: Sends an input to an AWS IoT Events detector.
    IotSiteWiseAction:
      type: object
      required:
        - putAssetPropertyValueEntries
        - roleArn
      properties:
        putAssetPropertyValueEntries:
          $ref: '#/components/schemas/PutAssetPropertyValueEntryList'
          description: A list of asset property value entries.
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: 'The ARN of the role that grants AWS IoT permission to send an asset property value to AWS IoTSiteWise. (<code>"Action": "iotsitewise:BatchPutAssetPropertyValue"</code>). The trust policy can restrict access to specific asset hierarchy paths.'
      description: Describes an action to send data from an MQTT message that triggered the rule to AWS IoT SiteWise asset properties.
    StepFunctionsAction:
      type: object
      required:
        - stateMachineName
        - roleArn
      properties:
        executionNamePrefix:
          $ref: '#/components/schemas/ExecutionNamePrefix'
          description: (Optional) A name will be given to the state machine execution consisting of this prefix followed by a UUID. Step Functions automatically creates a unique name for each state machine execution if one is not provided.
        stateMachineName:
          $ref: '#/components/schemas/StateMachineName'
          description: The name of the Step Functions state machine whose execution will be started.
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: 'The ARN of the role that grants IoT permission to start execution of a state machine ("Action":"states:StartExecution").'
      description: Starts execution of a Step Functions state machine.
    TimestreamAction:
      type: object
      required:
        - roleArn
        - databaseName
        - tableName
        - dimensions
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the role that grants permission to write to the Amazon Timestream database table.
        databaseName:
          $ref: '#/components/schemas/TimestreamDatabaseName'
          description: The name of an Amazon Timestream database.
        tableName:
          $ref: '#/components/schemas/TimestreamTableName'
          description: The name of the database table into which to write the measure records.
        dimensions:
          $ref: '#/components/schemas/TimestreamDimensionList'
          description: Metadata attributes of the time series that are written in each measure record.
        timestamp:
          $ref: '#/components/schemas/TimestreamTimestamp'
          description: '<p>Specifies an application-defined value to replace the default value assigned to the Timestream record''s timestamp in the <code>time</code> column.</p> <p>You can use this property to specify the value and the precision of the Timestream record''s timestamp. You can specify a value from the message payload or a value computed by a substitution template.</p> <p>If omitted, the topic rule action assigns the timestamp, in milliseconds, at the time it processed the rule. </p>'
      description: 'The Timestream rule action writes attributes (measures) from an MQTT message into an Amazon Timestream table. For more information, see the <a href="https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html">Timestream</a> topic rule action documentation.'
    HttpAction:
      type: object
      required:
        - url
      properties:
        url:
          $ref: '#/components/schemas/Url'
          description: 'The endpoint URL. If substitution templates are used in the URL, you must also specify a <code>confirmationUrl</code>. If this is a new destination, a new <code>TopicRuleDestination</code> is created if possible.'
        confirmationUrl:
          $ref: '#/components/schemas/Url'
          description: 'The URL to which AWS IoT sends a confirmation message. The value of the confirmation URL must be a prefix of the endpoint URL. If you do not specify a confirmation URL AWS IoT uses the endpoint URL as the confirmation URL. If you use substitution templates in the confirmationUrl, you must create and enable topic rule destinations that match each possible value of the substitution template before traffic is allowed to your endpoint URL.'
        headers:
          $ref: '#/components/schemas/HeaderList'
          description: The HTTP headers to send with the message data.
        auth:
          $ref: '#/components/schemas/HttpAuthorization'
          description: The authentication method to use when sending data to an HTTPS endpoint.
      description: Send data to an HTTPS endpoint.
    KafkaAction:
      type: object
      required:
        - destinationArn
        - topic
        - clientProperties
      properties:
        destinationArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of Kafka action's VPC <code>TopicRuleDestination</code>.
        topic:
          $ref: '#/components/schemas/String'
          description: The Kafka topic for messages to be sent to the Kafka broker.
        key:
          $ref: '#/components/schemas/String'
          description: The Kafka message key.
        partition:
          $ref: '#/components/schemas/String'
          description: The Kafka message partition.
        clientProperties:
          $ref: '#/components/schemas/ClientProperties'
          description: Properties of the Apache Kafka producer client.
      description: Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster.
    ActionType:
      type: string
      enum:
        - PUBLISH
        - SUBSCRIBE
        - RECEIVE
        - CONNECT
    ViolationId:
      type: string
      pattern: '[a-zA-Z0-9\-]+'
      minLength: 1
      maxLength: 128
    DeviceDefenderThingName:
      type: string
      minLength: 1
      maxLength: 128
    MetricValue:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/UnsignedLong'
          description: 'If the <code>comparisonOperator</code> calls for a numeric value, use this to specify that numeric value to be compared with the <code>metric</code>.'
        cidrs:
          $ref: '#/components/schemas/Cidrs'
          description: 'If the <code>comparisonOperator</code> calls for a set of CIDRs, use this to specify that set to be compared with the <code>metric</code>.'
        ports:
          $ref: '#/components/schemas/Ports'
          description: 'If the <code>comparisonOperator</code> calls for a set of ports, use this to specify that set to be compared with the <code>metric</code>.'
        number:
          $ref: '#/components/schemas/Number'
          description: ' The numeral value of a metric. '
        numbers:
          $ref: '#/components/schemas/NumberList'
          description: ' The numeral values of a metric. '
        strings:
          $ref: '#/components/schemas/StringList'
          description: ' The string values of a metric. '
      description: The value to be compared with the <code>metric</code>.
    ViolationEventAdditionalInfo:
      type: object
      properties:
        confidenceLevel:
          $ref: '#/components/schemas/ConfidenceLevel'
          description: ' The sensitivity of anomalous behavior evaluation. Can be <code>Low</code>, <code>Medium</code>, or <code>High</code>. '
      description: ' The details of a violation event. '
    ActiveViolation:
      type: object
      properties:
        violationId:
          $ref: '#/components/schemas/ViolationId'
          description: The ID of the active violation.
        thingName:
          $ref: '#/components/schemas/DeviceDefenderThingName'
          description: The name of the thing responsible for the active violation.
        securityProfileName:
          $ref: '#/components/schemas/SecurityProfileName'
          description: The security profile with the behavior is in violation.
        behavior:
          $ref: '#/components/schemas/Behavior'
          description: The behavior that is being violated.
        lastViolationValue:
          $ref: '#/components/schemas/MetricValue'
          description: The value of the metric (the measurement) that caused the most recent violation.
        violationEventAdditionalInfo:
          $ref: '#/components/schemas/ViolationEventAdditionalInfo'
          description: ' The details of a violation event. '
        lastViolationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the most recent violation occurred.
        violationStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the violation started.
      description: Information about an active Device Defender security profile behavior violation.
    ActiveViolations:
      type: array
      items:
        $ref: '#/components/schemas/ActiveViolation'
    BillingGroupName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    BillingGroupArn:
      type: string
    ThingName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    ThingArn:
      type: string
    AddThingToBillingGroupRequest:
      type: object
      title: AddThingToBillingGroupRequest
      properties:
        billingGroupName:
          $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group.
        billingGroupArn:
          $ref: '#/components/schemas/BillingGroupArn'
          description: The ARN of the billing group.
        thingName:
          $ref: '#/components/schemas/ThingName'
          description: The name of the thing to be added to the billing group.
        thingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to be added to the billing group.
    ThingGroupArn:
      type: string
    OverrideDynamicGroups:
      type: boolean
    AddThingToThingGroupRequest:
      type: object
      title: AddThingToThingGroupRequest
      properties:
        thingGroupName:
          $ref: '#/components/schemas/ThingGroupName'
          description: The name of the group to which you are adding a thing.
        thingGroupArn:
          $ref: '#/components/schemas/ThingGroupArn'
          description: The ARN of the group to which you are adding a thing.
        thingName:
          $ref: '#/components/schemas/ThingName'
          description: The name of the thing to add to a group.
        thingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to add to a group.
        overrideDynamicGroups:
          $ref: '#/components/schemas/OverrideDynamicGroups'
          description: 'Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.'
    ThingGroupNames:
      type: array
      items:
        $ref: '#/components/schemas/ThingGroupName'
      minItems: 1
      maxItems: 10
    AdditionalMetricsToRetainList:
      type: array
      items:
        $ref: '#/components/schemas/BehaviorMetric'
    AdditionalMetricsToRetainV2List:
      type: array
      items:
        $ref: '#/components/schemas/MetricToRetain'
    AdditionalParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Value'
    AggregationField:
      type: string
      minLength: 1
    AlarmName:
      type: string
    AlertTargetArn:
      type: string
    AlertTargetType:
      type: string
      enum:
        - SNS
      description: 'The type of alert target: one of "SNS".'
    AlertTargets:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AlertTarget'
    AllowAutoRegistration:
      type: boolean
    Policies:
      type: array
      items:
        $ref: '#/components/schemas/Policy'
    Allowed:
      type: object
      properties:
        policies:
          $ref: '#/components/schemas/Policies'
          description: A list of policies that allowed the authentication.
      description: Contains information that allowed the authorization.
    ApproximateSecondsBeforeTimedOut:
      type: integer
    AscendingOrder:
      type: boolean
    AssetId:
      type: string
    AssetPropertyAlias:
      type: string
      minLength: 1
    AssetPropertyBooleanValue:
      type: string
    AssetPropertyDoubleValue:
      type: string
    AssetPropertyEntryId:
      type: string
    AssetPropertyId:
      type: string
    AssetPropertyIntegerValue:
      type: string
    AssetPropertyOffsetInNanos:
      type: string
    AssetPropertyQuality:
      type: string
    AssetPropertyStringValue:
      type: string
      minLength: 1
      maxLength: 1024
    AssetPropertyTimeInSeconds:
      type: string
    AssetPropertyTimestamp:
      type: object
      required:
        - timeInSeconds
      properties:
        timeInSeconds:
          $ref: '#/components/schemas/AssetPropertyTimeInSeconds'
          description: A string that contains the time in seconds since epoch. Accepts substitution templates.
        offsetInNanos:
          $ref: '#/components/schemas/AssetPropertyOffsetInNanos'
          description: Optional. A string that contains the nanosecond time offset. Accepts substitution templates.
      description: An asset property timestamp entry containing the following information.
    AssetPropertyVariant:
      type: object
      properties:
        stringValue:
          $ref: '#/components/schemas/AssetPropertyStringValue'
          description: Optional. The string value of the value entry. Accepts substitution templates.
        integerValue:
          $ref: '#/components/schemas/AssetPropertyIntegerValue'
          description: Optional. A string that contains the integer value of the value entry. Accepts substitution templates.
        doubleValue:
          $ref: '#/components/schemas/AssetPropertyDoubleValue'
          description: Optional. A string that contains the double value of the value entry. Accepts substitution templates.
        booleanValue:
          $ref: '#/components/schemas/AssetPropertyBooleanValue'
          description: Optional. A string that contains the boolean value (<code>true</code> or <code>false</code>) of the value entry. Accepts substitution templates.
      description: Contains an asset property value (of a single type).
    AssetPropertyValue:
      type: object
      required:
        - value
        - timestamp
      properties:
        value:
          $ref: '#/components/schemas/AssetPropertyVariant'
          description: The value of the asset property.
        timestamp:
          $ref: '#/components/schemas/AssetPropertyTimestamp'
          description: The asset property value timestamp.
        quality:
          $ref: '#/components/schemas/AssetPropertyQuality'
          description: 'Optional. A string that describes the quality of the value. Accepts substitution templates. Must be <code>GOOD</code>, <code>BAD</code>, or <code>UNCERTAIN</code>.'
      description: An asset property value entry containing the following information.
    AssetPropertyValueList:
      type: array
      items:
        $ref: '#/components/schemas/AssetPropertyValue'
      minItems: 1
    JobTargets:
      type: array
      items:
        $ref: '#/components/schemas/TargetArn'
      minItems: 1
    JobId:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 64
    Comment:
      type: string
      pattern: '[^\p{C}]+'
      maxLength: 2028
    NamespaceId:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 64
    AssociateTargetsWithJobRequest:
      type: object
      required:
        - targets
      title: AssociateTargetsWithJobRequest
      properties:
        targets:
          $ref: '#/components/schemas/JobTargets'
          description: A list of thing group ARNs that define the targets of the job.
        comment:
          $ref: '#/components/schemas/Comment'
          description: An optional comment string describing why the job was associated with the targets.
    JobArn:
      type: string
    JobDescription:
      type: string
      pattern: '[^\p{C}]+'
      maxLength: 2028
    PolicyTarget:
      type: string
    AttachPolicyRequest:
      type: object
      required:
        - target
      title: AttachPolicyRequest
      properties:
        target:
          $ref: '#/components/schemas/PolicyTarget'
          description: 'The <a href="https://docs.aws.amazon.com/iot/latest/developerguide/security-iam.html">identity</a> to which the policy is attached. For example, a thing group or a certificate.'
    Principal:
      type: string
    AttachPrincipalPolicyRequest:
      type: object
      title: AttachPrincipalPolicyRequest
      properties: {}
      description: The input for the AttachPrincipalPolicy operation.
    SecurityProfileTargetArn:
      type: string
    AttachSecurityProfileRequest:
      type: object
      title: AttachSecurityProfileRequest
      properties: {}
    AttachThingPrincipalRequest:
      type: object
      title: AttachThingPrincipalRequest
      properties: {}
      description: The input for the AttachThingPrincipal operation.
    AttributeKey:
      type: string
    AttributeName:
      type: string
      pattern: '[a-zA-Z0-9_.,@/:#-]+'
      maxLength: 128
    AttributeValue:
      type: string
      pattern: '[a-zA-Z0-9_.,@/:#-]*'
      maxLength: 800
    AttributesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Value'
    Enabled:
      type: boolean
    AuditCheckConfigurations:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AuditCheckConfiguration'
    AuditCheckRunStatus:
      type: string
      enum:
        - IN_PROGRESS
        - WAITING_FOR_DATA_COLLECTION
        - CANCELED
        - COMPLETED_COMPLIANT
        - COMPLETED_NON_COMPLIANT
        - FAILED
    CheckCompliant:
      type: boolean
    TotalResourcesCount:
      type: integer
    NonCompliantResourcesCount:
      type: integer
    SuppressedNonCompliantResourcesCount:
      type: integer
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
      maxLength: 2048
    AuditCheckDetails:
      type: object
      properties:
        checkRunStatus:
          $ref: '#/components/schemas/AuditCheckRunStatus'
          description: 'The completion status of this check. One of "IN_PROGRESS", "WAITING_FOR_DATA_COLLECTION", "CANCELED", "COMPLETED_COMPLIANT", "COMPLETED_NON_COMPLIANT", or "FAILED".'
        checkCompliant:
          $ref: '#/components/schemas/CheckCompliant'
          description: True if the check is complete and found all resources compliant.
        totalResourcesCount:
          $ref: '#/components/schemas/TotalResourcesCount'
          description: The number of resources on which the check was performed.
        nonCompliantResourcesCount:
          $ref: '#/components/schemas/NonCompliantResourcesCount'
          description: The number of resources that were found noncompliant during the check.
        suppressedNonCompliantResourcesCount:
          $ref: '#/components/schemas/SuppressedNonCompliantResourcesCount'
          description: ' Describes how many of the non-compliant resources created during the evaluation of an audit check were marked as suppressed. '
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: The code of any error encountered when this check is performed during this audit. One of "INSUFFICIENT_PERMISSIONS" or "AUDIT_CHECK_DISABLED".
        message:
          $ref: '#/components/schemas/ErrorMessage'
          description: The message associated with any error encountered when this check is performed during this audit.
      description: Information about the audit check.
    AuditCheckToActionsMapping:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MitigationActionNameList'
    ReasonForNonComplianceCodes:
      type: array
      items:
        $ref: '#/components/schemas/ReasonForNonComplianceCode'
      minItems: 1
      maxItems: 25
    AuditDescription:
      type: string
      pattern: '[\p{Graph}\x20]*'
      maxLength: 1000
    AuditDetails:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AuditCheckDetails'
    FindingId:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 128
    AuditFindingSeverity:
      type: string
      enum:
        - CRITICAL
        - HIGH
        - MEDIUM
        - LOW
    NonCompliantResource:
      type: object
      properties:
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: The type of the noncompliant resource.
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
          description: Information that identifies the noncompliant resource.
        additionalInfo:
          $ref: '#/components/schemas/StringMap'
          description: Other information about the noncompliant resource.
      description: Information about the resource that was noncompliant with the audit check.
    RelatedResources:
      type: array
      items:
        $ref: '#/components/schemas/RelatedResource'
    ReasonForNonCompliance:
      type: string
    ReasonForNonComplianceCode:
      type: string
    IsSuppressed:
      type: boolean
    AuditFinding:
      type: object
      properties:
        findingId:
          $ref: '#/components/schemas/FindingId'
          description: A unique identifier for this set of audit findings. This identifier is used to apply mitigation tasks to one or more sets of findings.
        taskId:
          $ref: '#/components/schemas/AuditTaskId'
          description: The ID of the audit that generated this result (finding).
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
          description: The audit check that generated this result.
        taskStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the audit started.
        findingTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the result (finding) was discovered.
        severity:
          $ref: '#/components/schemas/AuditFindingSeverity'
          description: The severity of the result (finding).
        nonCompliantResource:
          $ref: '#/components/schemas/NonCompliantResource'
          description: The resource that was found to be noncompliant with the audit check.
        relatedResources:
          $ref: '#/components/schemas/RelatedResources'
          description: The list of related resources.
        reasonForNonCompliance:
          $ref: '#/components/schemas/ReasonForNonCompliance'
          description: The reason the resource was noncompliant.
        reasonForNonComplianceCode:
          $ref: '#/components/schemas/ReasonForNonComplianceCode'
          description: A code that indicates the reason that the resource was noncompliant.
        isSuppressed:
          $ref: '#/components/schemas/IsSuppressed'
          description: ' Indicates whether the audit finding was suppressed or not during reporting. '
      description: The findings (results) of the audit.
    AuditFindings:
      type: array
      items:
        $ref: '#/components/schemas/AuditFinding'
    AuditFrequency:
      type: string
      enum:
        - DAILY
        - WEEKLY
        - BIWEEKLY
        - MONTHLY
    MitigationActionsTaskId:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 128
    MitigationActionId:
      type: string
    AuditMitigationActionsExecutionStatus:
      type: string
      enum:
        - IN_PROGRESS
        - COMPLETED
        - FAILED
        - CANCELED
        - SKIPPED
        - PENDING
    AuditMitigationActionExecutionMetadata:
      type: object
      properties:
        taskId:
          $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier for the task that applies the mitigation action.
        findingId:
          $ref: '#/components/schemas/FindingId'
          description: The unique identifier for the findings to which the task and associated mitigation action are applied.
        actionName:
          $ref: '#/components/schemas/MitigationActionName'
          description: The friendly name of the mitigation action being applied by the task.
        actionId:
          $ref: '#/components/schemas/MitigationActionId'
          description: The unique identifier for the mitigation action being applied by the task.
        status:
          $ref: '#/components/schemas/AuditMitigationActionsExecutionStatus'
          description: The current status of the task being executed.
        startTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time when the task was started.
        endTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time when the task was completed or canceled. Blank if the task is still running.
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: 'If an error occurred, the code that indicates which type of error occurred.'
        message:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'If an error occurred, a message that describes the error.'
      description: 'Returned by ListAuditMitigationActionsTask, this object contains information that describes a mitigation action that has been started.'
    AuditMitigationActionExecutionMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/AuditMitigationActionExecutionMetadata'
    AuditMitigationActionsTaskStatus:
      type: string
      enum:
        - IN_PROGRESS
        - COMPLETED
        - FAILED
        - CANCELED
    AuditMitigationActionsTaskMetadata:
      type: object
      properties:
        taskId:
          $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier for the task.
        startTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the audit mitigation actions task was started.
        taskStatus:
          $ref: '#/components/schemas/AuditMitigationActionsTaskStatus'
          description: The current state of the audit mitigation actions task.
      description: Information about an audit mitigation actions task that is returned by <code>ListAuditMitigationActionsTasks</code>.
    AuditMitigationActionsTaskMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/AuditMitigationActionsTaskMetadata'
    TaskStatisticsForAuditCheck:
      type: object
      properties:
        totalFindingsCount:
          $ref: '#/components/schemas/TotalFindingsCount'
          description: The total number of findings to which a task is being applied.
        failedFindingsCount:
          $ref: '#/components/schemas/FailedFindingsCount'
          description: The number of findings for which at least one of the actions failed when applied.
        succeededFindingsCount:
          $ref: '#/components/schemas/SucceededFindingsCount'
          description: The number of findings for which all mitigation actions succeeded when applied.
        skippedFindingsCount:
          $ref: '#/components/schemas/SkippedFindingsCount'
          description: The number of findings skipped because of filter conditions provided in the parameters to the command.
        canceledFindingsCount:
          $ref: '#/components/schemas/CanceledFindingsCount'
          description: The number of findings to which the mitigation action task was canceled when applied.
      description: Provides summary counts of how many tasks for findings are in a particular state. This information is included in the response from DescribeAuditMitigationActionsTask.
    AuditMitigationActionsTaskStatistics:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TaskStatisticsForAuditCheck'
    AuditMitigationActionsTaskTarget:
      type: object
      properties:
        auditTaskId:
          $ref: '#/components/schemas/AuditTaskId'
          description: 'If the task will apply a mitigation action to findings from a specific audit, this value uniquely identifies the audit.'
        findingIds:
          $ref: '#/components/schemas/FindingIds'
          description: 'If the task will apply a mitigation action to one or more listed findings, this value uniquely identifies those findings.'
        auditCheckToReasonCodeFilter:
          $ref: '#/components/schemas/AuditCheckToReasonCodeFilter'
          description: Specifies a filter in the form of an audit check and set of reason codes that identify the findings from the audit to which the audit mitigation actions task apply.
      description: 'Used in MitigationActionParams, this information identifies the target findings to which the mitigation actions are applied. Only one entry appears.'
    AuditNotificationTargetConfigurations:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AuditNotificationTarget'
    AuditNotificationType:
      type: string
      enum:
        - SNS
    ResourceIdentifier:
      type: object
      properties:
        deviceCertificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate attached to the resource.
        caCertificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The ID of the CA certificate used to authorize the certificate.
        cognitoIdentityPoolId:
          $ref: '#/components/schemas/CognitoIdentityPoolId'
          description: The ID of the Amazon Cognito identity pool.
        clientId:
          $ref: '#/components/schemas/ClientId'
          description: The client ID.
        policyVersionIdentifier:
          $ref: '#/components/schemas/PolicyVersionIdentifier'
          description: The version of the policy associated with the resource.
        account:
          $ref: '#/components/schemas/AwsAccountId'
          description: The account with which the resource is associated.
        iamRoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role that has overly permissive actions.
        roleAliasArn:
          $ref: '#/components/schemas/RoleAliasArn'
          description: The ARN of the role alias that has overly permissive actions.
      description: Information that identifies the noncompliant resource.
    SuppressIndefinitely:
      type: boolean
    AuditSuppression:
      type: object
      required:
        - checkName
        - resourceIdentifier
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        expirationDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The expiration date (epoch timestamp in seconds) that you want the suppression to adhere to. '
        suppressIndefinitely:
          $ref: '#/components/schemas/SuppressIndefinitely'
          description: ' Indicates whether a suppression should exist indefinitely or not. '
        description:
          $ref: '#/components/schemas/AuditDescription'
          description: ' The description of the audit suppression. '
      description: ' Filters out specific findings of a Device Defender audit. '
    AuditSuppressionList:
      type: array
      items:
        $ref: '#/components/schemas/AuditSuppression'
    AuditTaskStatus:
      type: string
      enum:
        - IN_PROGRESS
        - COMPLETED
        - FAILED
        - CANCELED
    AuditTaskType:
      type: string
      enum:
        - ON_DEMAND_AUDIT_TASK
        - SCHEDULED_AUDIT_TASK
    AuditTaskMetadata:
      type: object
      properties:
        taskId:
          $ref: '#/components/schemas/AuditTaskId'
          description: The ID of this audit.
        taskStatus:
          $ref: '#/components/schemas/AuditTaskStatus'
          description: 'The status of this audit. One of "IN_PROGRESS", "COMPLETED", "FAILED", or "CANCELED".'
        taskType:
          $ref: '#/components/schemas/AuditTaskType'
          description: The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or "SCHEDULED_AUDIT_TASK".
      description: The audits that were performed.
    AuditTaskMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/AuditTaskMetadata'
    AuthDecision:
      type: string
      enum:
        - ALLOWED
        - EXPLICIT_DENY
        - IMPLICIT_DENY
    Resources:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    AuthInfos:
      type: array
      items:
        $ref: '#/components/schemas/AuthInfo'
      minItems: 1
      maxItems: 10
    Denied:
      type: object
      properties:
        implicitDeny:
          $ref: '#/components/schemas/ImplicitDeny'
          description: Information that implicitly denies the authorization. When a policy doesn't explicitly deny or allow an action on a resource it is considered an implicit deny.
        explicitDeny:
          $ref: '#/components/schemas/ExplicitDeny'
          description: 'Information that explicitly denies the authorization. '
      description: Contains information that denied the authorization.
    MissingContextValues:
      type: array
      items:
        $ref: '#/components/schemas/MissingContextValue'
    AuthResult:
      type: object
      properties:
        authInfo:
          $ref: '#/components/schemas/AuthInfo'
          description: Authorization information.
        allowed:
          $ref: '#/components/schemas/Allowed'
          description: The policies and statements that allowed the specified action.
        denied:
          $ref: '#/components/schemas/Denied'
          description: The policies and statements that denied the specified action.
        authDecision:
          $ref: '#/components/schemas/AuthDecision'
          description: The final authorization decision of this scenario. Multiple statements are taken into account when determining the authorization decision. An explicit deny statement can override multiple allow statements.
        missingContextValues:
          $ref: '#/components/schemas/MissingContextValues'
          description: Contains any missing context values found while evaluating policy.
      description: The authorizer result.
    AuthResults:
      type: array
      items:
        $ref: '#/components/schemas/AuthResult'
    AuthorizerArn:
      type: string
      maxLength: 2048
    AuthorizerConfig:
      type: object
      properties:
        defaultAuthorizerName:
          $ref: '#/components/schemas/AuthorizerName'
          description: The name of the authorization service for a domain configuration.
        allowAuthorizerOverride:
          $ref: '#/components/schemas/AllowAuthorizerOverride'
          description: A Boolean that specifies whether the domain configuration's authorization service can be overridden.
      description: An object that specifies the authorization service for a domain.
    AuthorizerFunctionArn:
      type: string
      maxLength: 2048
    TokenKeyName:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 128
    PublicKeyMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/KeyValue'
    AuthorizerStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    DateType:
      type: string
      format: date-time
    BooleanKey:
      type: boolean
    AuthorizerDescription:
      type: object
      properties:
        authorizerName:
          $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer name.
        authorizerArn:
          $ref: '#/components/schemas/AuthorizerArn'
          description: The authorizer ARN.
        authorizerFunctionArn:
          $ref: '#/components/schemas/AuthorizerFunctionArn'
          description: The authorizer's Lambda function ARN.
        tokenKeyName:
          $ref: '#/components/schemas/TokenKeyName'
          description: The key used to extract the token from the HTTP headers.
        tokenSigningPublicKeys:
          $ref: '#/components/schemas/PublicKeyMap'
          description: The public keys used to validate the token signature returned by your custom authentication service.
        status:
          $ref: '#/components/schemas/AuthorizerStatus'
          description: The status of the authorizer.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The UNIX timestamp of when the authorizer was created.
        lastModifiedDate:
          $ref: '#/components/schemas/DateType'
          description: The UNIX timestamp of when the authorizer was last updated.
        signingDisabled:
          $ref: '#/components/schemas/BooleanKey'
          description: Specifies whether AWS IoT validates the token signature in an authorization request.
      description: The authorizer description.
    AuthorizerSummary:
      type: object
      properties:
        authorizerName:
          $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer name.
        authorizerArn:
          $ref: '#/components/schemas/AuthorizerArn'
          description: The authorizer ARN.
      description: The authorizer summary.
    Authorizers:
      type: array
      items:
        $ref: '#/components/schemas/AuthorizerSummary'
    AutoRegistrationStatus:
      type: string
      enum:
        - ENABLE
        - DISABLE
    Average:
      type: number
      format: double
    AwsIotJobArn:
      type: string
    AwsIotJobId:
      type: string
    AwsJobAbortConfig:
      type: object
      required:
        - abortCriteriaList
      properties:
        abortCriteriaList:
          $ref: '#/components/schemas/AwsJobAbortCriteriaList'
          description: The list of criteria that determine when and how to abort the job.
      description: The criteria that determine when and how a job abort takes place.
    AwsJobAbortCriteriaFailureType:
      type: string
      enum:
        - FAILED
        - REJECTED
        - TIMED_OUT
        - ALL
    AwsJobAbortCriteriaAbortAction:
      type: string
      enum:
        - CANCEL
    AwsJobAbortCriteriaAbortThresholdPercentage:
      type: number
      format: double
      maximum: 100
    AwsJobAbortCriteriaMinimumNumberOfExecutedThings:
      type: integer
      minimum: 1
    AwsJobAbortCriteria:
      type: object
      required:
        - failureType
        - action
        - thresholdPercentage
        - minNumberOfExecutedThings
      properties:
        failureType:
          $ref: '#/components/schemas/AwsJobAbortCriteriaFailureType'
          description: The type of job execution failures that can initiate a job abort.
        action:
          $ref: '#/components/schemas/AwsJobAbortCriteriaAbortAction'
          description: The type of job action to take to initiate the job abort.
        thresholdPercentage:
          $ref: '#/components/schemas/AwsJobAbortCriteriaAbortThresholdPercentage'
          description: '<p>The minimum percentage of job execution failures that must occur to initiate the job abort.</p> <p>AWS IoT supports up to two digits after the decimal (for example, 10.9 and 10.99, but not 10.999).</p>'
        minNumberOfExecutedThings:
          $ref: '#/components/schemas/AwsJobAbortCriteriaMinimumNumberOfExecutedThings'
          description: The minimum number of things which must receive job execution notifications before the job can be aborted.
      description: The criteria that determine when and how a job abort takes place.
    AwsJobExecutionsRolloutConfig:
      type: object
      properties:
        maximumPerMinute:
          $ref: '#/components/schemas/MaximumPerMinute'
          description: The maximum number of OTA update job executions started per minute.
        exponentialRate:
          $ref: '#/components/schemas/AwsJobExponentialRolloutRate'
          description: The rate of increase for a job rollout. This parameter allows you to define an exponential rate increase for a job rollout.
      description: Configuration for the rollout of OTA updates.
    AwsJobRolloutRatePerMinute:
      type: integer
      minimum: 1
      maximum: 1000
    AwsJobRolloutIncrementFactor:
      type: number
      format: double
    AwsJobRateIncreaseCriteria:
      type: object
      properties:
        numberOfNotifiedThings:
          $ref: '#/components/schemas/AwsJobRateIncreaseCriteriaNumberOfThings'
          description: 'When this number of things have been notified, it will initiate an increase in the rollout rate.'
        numberOfSucceededThings:
          $ref: '#/components/schemas/AwsJobRateIncreaseCriteriaNumberOfThings'
          description: 'When this number of things have succeeded in their job execution, it will initiate an increase in the rollout rate.'
      description: The criteria to initiate the increase in rate of rollout for a job.
    AwsJobPresignedUrlConfig:
      type: object
      properties:
        expiresInSec:
          $ref: '#/components/schemas/ExpiresInSeconds'
          description: 'How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 1800 seconds. Pre-signed URLs are generated when a request for the job document is received.'
      description: Configuration information for pre-signed URLs. Valid when <code>protocols</code> contains HTTP.
    AwsJobRateIncreaseCriteriaNumberOfThings:
      type: integer
      minimum: 1
    AwsJobTimeoutConfig:
      type: object
      properties:
        inProgressTimeoutInMinutes:
          $ref: '#/components/schemas/AwsJobTimeoutInProgressTimeoutInMinutes'
          description: 'Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can''t be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code> status.'
      description: 'Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.'
    BatchMode:
      type: boolean
    MetricDimension:
      type: object
      required:
        - dimensionName
      properties:
        dimensionName:
          $ref: '#/components/schemas/DimensionName'
          description: A unique identifier for the dimension.
        operator:
          $ref: '#/components/schemas/DimensionValueOperator'
          description: 'Defines how the <code>dimensionValues</code> of a dimension are interpreted. For example, for dimension type TOPIC_FILTER, the <code>IN</code> operator, a message will be counted only if its topic matches one of the topic filters. With <code>NOT_IN</code> operator, a message will be counted only if it doesn''t match any of the topic filters. The operator is optional: if it''s not provided (is <code>null</code>), it will be interpreted as <code>IN</code>.'
      description: The dimension of a metric.
    BehaviorCriteria:
      type: object
      properties:
        comparisonOperator:
          $ref: '#/components/schemas/ComparisonOperator'
          description: '<p>The operator that relates the thing measured (<code>metric</code>) to the criteria (containing a <code>value</code> or <code>statisticalThreshold</code>). Valid operators include:</p> <ul> <li> <p> <code>string-list</code>: <code>in-set</code> and <code>not-in-set</code> </p> </li> <li> <p> <code>number-list</code>: <code>in-set</code> and <code>not-in-set</code> </p> </li> <li> <p> <code>ip-address-list</code>: <code>in-cidr-set</code> and <code>not-in-cidr-set</code> </p> </li> <li> <p> <code>number</code>: <code>less-than</code>, <code>less-than-equals</code>, <code>greater-than</code>, and <code>greater-than-equals</code> </p> </li> </ul>'
        value:
          $ref: '#/components/schemas/MetricValue'
          description: The value to be compared with the <code>metric</code>.
        durationSeconds:
          $ref: '#/components/schemas/DurationSeconds'
          description: 'Use this to specify the time duration over which the behavior is evaluated, for those criteria that have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>). For a <code>statisticalThreshhold</code> metric comparison, measurements from all devices are accumulated over this time duration before being used to calculate percentiles, and later, measurements from an individual device are also accumulated over this time duration before being given a percentile rank. Cannot be used with list-based metric datatypes.'
        consecutiveDatapointsToAlarm:
          $ref: '#/components/schemas/ConsecutiveDatapointsToAlarm'
          description: 'If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.'
        consecutiveDatapointsToClear:
          $ref: '#/components/schemas/ConsecutiveDatapointsToClear'
          description: 'If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.'
        statisticalThreshold:
          $ref: '#/components/schemas/StatisticalThreshold'
          description: A statistical ranking (percentile)that indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
        mlDetectionConfig:
          $ref: '#/components/schemas/MachineLearningDetectionConfig'
          description: ' The configuration of an ML Detect '
      description: The criteria by which the behavior is determined to be normal.
    SuppressAlerts:
      type: boolean
    ComparisonOperator:
      type: string
      enum:
        - less-than
        - less-than-equals
        - greater-than
        - greater-than-equals
        - in-cidr-set
        - not-in-cidr-set
        - in-port-set
        - not-in-port-set
        - in-set
        - not-in-set
    DurationSeconds:
      type: integer
    ConsecutiveDatapointsToAlarm:
      type: integer
      minimum: 1
      maximum: 10
    ConsecutiveDatapointsToClear:
      type: integer
      minimum: 1
      maximum: 10
    StatisticalThreshold:
      type: object
      properties:
        statistic:
          $ref: '#/components/schemas/EvaluationStatistic'
          description: 'The percentile that resolves to a threshold value by which compliance with a behavior is determined. Metrics are collected over the specified period (<code>durationSeconds</code>) from all reporting devices in your account and statistical ranks are calculated. Then, the measurements from a device are collected over the same period. If the accumulated measurements from the device fall above or below (<code>comparisonOperator</code>) the value associated with the percentile specified, then the device is considered to be in compliance with the behavior, otherwise a violation occurs.'
      description: A statistical ranking (percentile) that indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
    MachineLearningDetectionConfig:
      type: object
      required:
        - confidenceLevel
      properties:
        confidenceLevel:
          $ref: '#/components/schemas/ConfidenceLevel'
          description: ' The sensitivity of anomalous behavior evaluation. Can be <code>Low</code>, <code>Medium</code>, or <code>High</code>. '
      description: ' The configuration of an ML Detect Security Profile. '
    BehaviorCriteriaType:
      type: string
      enum:
        - STATIC
        - STATISTICAL
        - MACHINE_LEARNING
    BehaviorModelTrainingSummary:
      type: object
      properties:
        securityProfileName:
          $ref: '#/components/schemas/SecurityProfileName'
          description: ' The name of the security profile. '
        behaviorName:
          $ref: '#/components/schemas/BehaviorName'
          description: ' The name of the behavior. '
        trainingDataCollectionStartDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The date a training model started collecting data. '
        modelStatus:
          $ref: '#/components/schemas/ModelStatus'
          description: ' The status of the behavior model. '
        datapointsCollectionPercentage:
          $ref: '#/components/schemas/DataCollectionPercentage'
          description: ' The percentage of datapoints collected. '
        lastModelRefreshDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The date the model was last refreshed. '
      description: ' The summary of an ML Detect behavior model. '
    BehaviorModelTrainingSummaries:
      type: array
      items:
        $ref: '#/components/schemas/BehaviorModelTrainingSummary'
    ModelStatus:
      type: string
      enum:
        - PENDING_BUILD
        - ACTIVE
        - EXPIRED
    DataCollectionPercentage:
      type: number
      format: double
      minimum: 0
      maximum: 100
    Behaviors:
      type: array
      items:
        $ref: '#/components/schemas/Behavior'
      maxItems: 100
    BillingGroupId:
      type: string
      pattern: '[a-zA-Z0-9\-]+'
      minLength: 1
      maxLength: 128
    CreationDate:
      type: string
      format: date-time
    BillingGroupMetadata:
      type: object
      properties:
        creationDate:
          $ref: '#/components/schemas/CreationDate'
          description: The date the billing group was created.
      description: Additional information about the billing group.
    GroupNameAndArn:
      type: object
      properties:
        groupName:
          $ref: '#/components/schemas/ThingGroupName'
          description: The group name.
        groupArn:
          $ref: '#/components/schemas/ThingGroupArn'
          description: The group ARN.
      description: The name and ARN of a group.
    BillingGroupNameAndArnList:
      type: array
      items:
        $ref: '#/components/schemas/GroupNameAndArn'
    BillingGroupProperties:
      type: object
      properties:
        billingGroupDescription:
          $ref: '#/components/schemas/BillingGroupDescription'
          description: The description of the billing group.
      description: The properties of a billing group.
    Boolean:
      type: boolean
    BucketName:
      type: string
    CertificateArn:
      type: string
    CACertificateStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    CACertificate:
      type: object
      properties:
        certificateArn:
          $ref: '#/components/schemas/CertificateArn'
          description: The ARN of the CA certificate.
        certificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The ID of the CA certificate.
        status:
          $ref: '#/components/schemas/CACertificateStatus'
          description: <p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The date the CA certificate was created.
      description: A CA certificate.
    CertificatePem:
      type: string
      description: The PEM of a certificate.
      minLength: 1
      maxLength: 65536
    CustomerVersion:
      type: integer
      minimum: 1
    GenerationId:
      type: string
    CertificateValidity:
      type: object
      properties:
        notBefore:
          $ref: '#/components/schemas/DateType'
          description: The certificate is not valid before this date.
        notAfter:
          $ref: '#/components/schemas/DateType'
          description: The certificate is not valid after this date.
      description: When the certificate is valid.
    CACertificateDescription:
      type: object
      properties:
        certificateArn:
          $ref: '#/components/schemas/CertificateArn'
          description: The CA certificate ARN.
        certificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The CA certificate ID.
        status:
          $ref: '#/components/schemas/CACertificateStatus'
          description: The status of a CA certificate.
        certificatePem:
          $ref: '#/components/schemas/CertificatePem'
          description: 'The CA certificate data, in PEM format.'
        ownedBy:
          $ref: '#/components/schemas/AwsAccountId'
          description: The owner of the CA certificate.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The date the CA certificate was created.
        autoRegistrationStatus:
          $ref: '#/components/schemas/AutoRegistrationStatus'
          description: Whether the CA certificate configured for auto registration of device certificates. Valid values are "ENABLE" and "DISABLE"
        lastModifiedDate:
          $ref: '#/components/schemas/DateType'
          description: The date the CA certificate was last modified.
        customerVersion:
          $ref: '#/components/schemas/CustomerVersion'
          description: The customer version of the CA certificate.
        generationId:
          $ref: '#/components/schemas/GenerationId'
          description: The generation ID of the CA certificate.
        validity:
          $ref: '#/components/schemas/CertificateValidity'
          description: When the CA certificate is valid.
      description: Describes a CA certificate.
    CACertificateUpdateAction:
      type: string
      enum:
        - DEACTIVATE
    CACertificates:
      type: array
      items:
        $ref: '#/components/schemas/CACertificate'
    CancelAuditMitigationActionsTaskRequest:
      type: object
      title: CancelAuditMitigationActionsTaskRequest
      properties: {}
    CancelAuditTaskRequest:
      type: object
      title: CancelAuditTaskRequest
      properties: {}
    CancelCertificateTransferRequest:
      type: object
      title: CancelCertificateTransferRequest
      properties: {}
      description: The input for the CancelCertificateTransfer operation.
    CancelDetectMitigationActionsTaskRequest:
      type: object
      title: CancelDetectMitigationActionsTaskRequest
      properties: {}
    ForceFlag:
      type: boolean
    ExpectedVersion:
      type: integer
    DetailsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DetailsValue'
    CancelJobExecutionRequest:
      type: object
      title: CancelJobExecutionRequest
      properties:
        expectedVersion:
          $ref: '#/components/schemas/ExpectedVersion'
          description: '(Optional) The expected current version of the job execution. Each time you update the job execution, its version is incremented. If the version of the job execution stored in Jobs does not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that contains the current job execution status data is returned. (This makes it unnecessary to perform a separate DescribeJobExecution request in order to obtain the job execution status data.)'
        statusDetails:
          $ref: '#/components/schemas/DetailsMap'
          description: 'A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged. You can specify at most 10 name/value pairs.'
    ReasonCode:
      type: string
      pattern: '[\p{Upper}\p{Digit}_]+'
      maxLength: 128
    CancelJobRequest:
      type: object
      title: CancelJobRequest
      properties:
        reasonCode:
          $ref: '#/components/schemas/ReasonCode'
          description: (Optional)A reason code string that explains why the job was canceled.
        comment:
          $ref: '#/components/schemas/Comment'
          description: An optional comment string describing why the job was canceled.
    CanceledChecksCount:
      type: integer
    CanceledFindingsCount:
      type: integer
    CanceledThings:
      type: integer
    CannedAccessControlList:
      type: string
      enum:
        - private
        - public-read
        - public-read-write
        - aws-exec-read
        - authenticated-read
        - bucket-owner-read
        - bucket-owner-full-control
        - log-delivery-write
    CertificateStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - REVOKED
        - PENDING_TRANSFER
        - REGISTER_INACTIVE
        - PENDING_ACTIVATION
    CertificateMode:
      type: string
      enum:
        - DEFAULT
        - SNI_ONLY
    Certificate:
      type: object
      properties:
        certificateArn:
          $ref: '#/components/schemas/CertificateArn'
          description: The ARN of the certificate.
        certificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
        status:
          $ref: '#/components/schemas/CertificateStatus'
          description: <p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>
        certificateMode:
          $ref: '#/components/schemas/CertificateMode'
          description: The mode of the certificate.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The date and time the certificate was created.
      description: Information about a certificate.
    TransferData:
      type: object
      properties:
        transferMessage:
          $ref: '#/components/schemas/Message'
          description: The transfer message.
        rejectReason:
          $ref: '#/components/schemas/Message'
          description: The reason why the transfer was rejected.
        transferDate:
          $ref: '#/components/schemas/DateType'
          description: The date the transfer took place.
        acceptDate:
          $ref: '#/components/schemas/DateType'
          description: The date the transfer was accepted.
        rejectDate:
          $ref: '#/components/schemas/DateType'
          description: The date the transfer was rejected.
      description: Data used to transfer a certificate to an AWS account.
    CertificateDescription:
      type: object
      properties:
        certificateArn:
          $ref: '#/components/schemas/CertificateArn'
          description: The ARN of the certificate.
        certificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate.
        caCertificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The certificate ID of the CA certificate used to sign this certificate.
        status:
          $ref: '#/components/schemas/CertificateStatus'
          description: The status of the certificate.
        certificatePem:
          $ref: '#/components/schemas/CertificatePem'
          description: 'The certificate data, in PEM format.'
        ownedBy:
          $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the AWS account that owns the certificate.
        previousOwnedBy:
          $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the AWS account of the previous owner of the certificate.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The date and time the certificate was created.
        lastModifiedDate:
          $ref: '#/components/schemas/DateType'
          description: The date and time the certificate was last modified.
        customerVersion:
          $ref: '#/components/schemas/CustomerVersion'
          description: The customer version of the certificate.
        transferData:
          $ref: '#/components/schemas/TransferData'
          description: The transfer data.
        generationId:
          $ref: '#/components/schemas/GenerationId'
          description: The generation ID of the certificate.
        validity:
          $ref: '#/components/schemas/CertificateValidity'
          description: When the certificate is valid.
        certificateMode:
          $ref: '#/components/schemas/CertificateMode'
          description: The mode of the certificate.
      description: Describes a certificate.
    CertificateName:
      type: string
    CertificatePathOnDevice:
      type: string
    CertificateSigningRequest:
      type: string
      minLength: 1
    Certificates:
      type: array
      items:
        $ref: '#/components/schemas/Certificate'
    ChannelName:
      type: string
    Cidr:
      type: string
      pattern: '[a-fA-F0-9:\.\/]+'
      minLength: 2
      maxLength: 43
    Cidrs:
      type: array
      items:
        $ref: '#/components/schemas/Cidr'
    ClearDefaultAuthorizerRequest:
      type: object
      title: ClearDefaultAuthorizerRequest
      properties: {}
    String:
      type: string
    ClientProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ClientRequestToken:
      type: string
      pattern: '^[a-zA-Z0-9-_]+$'
      minLength: 1
      maxLength: 64
    StateReason:
      type: string
    StateValue:
      type: string
    LogGroupName:
      type: string
    Code:
      type: string
    SigningJobId:
      type: string
    StartSigningJobParameter:
      type: object
      properties:
        signingProfileParameter:
          $ref: '#/components/schemas/SigningProfileParameter'
          description: Describes the code-signing profile.
        signingProfileName:
          $ref: '#/components/schemas/SigningProfileName'
          description: The code-signing profile name.
        destination:
          $ref: '#/components/schemas/Destination'
          description: The location to write the code-signed file.
      description: Information required to start a signing job.
    CustomCodeSigning:
      type: object
      properties:
        signature:
          $ref: '#/components/schemas/CodeSigningSignature'
          description: The signature for the file.
        certificateChain:
          $ref: '#/components/schemas/CodeSigningCertificateChain'
          description: The certificate chain.
        hashAlgorithm:
          $ref: '#/components/schemas/HashAlgorithm'
          description: The hash algorithm used to code sign the file.
        signatureAlgorithm:
          $ref: '#/components/schemas/SignatureAlgorithm'
          description: The signature algorithm used to code sign the file.
      description: Describes a custom method used to code sign a file.
    CodeSigning:
      type: object
      properties:
        awsSignerJobId:
          $ref: '#/components/schemas/SigningJobId'
          description: The ID of the AWSSignerJob which was created to sign the file.
        startSigningJobParameter:
          $ref: '#/components/schemas/StartSigningJobParameter'
          description: Describes the code-signing job.
        customCodeSigning:
          $ref: '#/components/schemas/CustomCodeSigning'
          description: A custom method for code signing a file.
      description: Describes the method to use when code signing a file.
    InlineDocument:
      type: string
    CodeSigningCertificateChain:
      type: object
      properties:
        certificateName:
          $ref: '#/components/schemas/CertificateName'
          description: The name of the certificate.
        inlineDocument:
          $ref: '#/components/schemas/InlineDocument'
          description: A base64 encoded binary representation of the code signing certificate chain.
      description: Describes the certificate chain being used when code signing a file.
    Signature:
      type: string
    CodeSigningSignature:
      type: object
      properties:
        inlineDocument:
          $ref: '#/components/schemas/Signature'
          description: A base64 encoded binary representation of the code signing signature.
      description: Describes the signature for a file.
    CompliantChecksCount:
      type: integer
    ConfidenceLevel:
      type: string
      enum:
        - LOW
        - MEDIUM
        - HIGH
    ConfirmationToken:
      type: string
      minLength: 1
      maxLength: 2048
    ConfirmTopicRuleDestinationRequest:
      type: object
      title: ConfirmTopicRuleDestinationRequest
      properties: {}
    ConnectivityTimestamp:
      type: integer
    Count:
      type: integer
    CreateAuditSuppressionRequest:
      type: object
      required:
        - checkName
        - resourceIdentifier
        - clientRequestToken
      title: CreateAuditSuppressionRequest
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        expirationDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The epoch timestamp in seconds at which this suppression expires. '
        suppressIndefinitely:
          $ref: '#/components/schemas/SuppressIndefinitely'
          description: ' Indicates whether a suppression should exist indefinitely or not. '
        description:
          $ref: '#/components/schemas/AuditDescription'
          description: ' The description of the audit suppression. '
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: ' The epoch timestamp in seconds at which this suppression expires. '
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    CreateAuthorizerRequest:
      type: object
      required:
        - authorizerFunctionArn
      title: CreateAuthorizerRequest
      properties:
        authorizerFunctionArn:
          $ref: '#/components/schemas/AuthorizerFunctionArn'
          description: The ARN of the authorizer's Lambda function.
        tokenKeyName:
          $ref: '#/components/schemas/TokenKeyName'
          description: The name of the token key used to extract the token from the HTTP headers.
        tokenSigningPublicKeys:
          $ref: '#/components/schemas/PublicKeyMap'
          description: The public keys used to verify the digital signature returned by your custom authentication service.
        status:
          $ref: '#/components/schemas/AuthorizerStatus'
          description: The status of the create authorizer request.
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>Metadata which can be used to manage the custom authorizer.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
        signingDisabled:
          $ref: '#/components/schemas/BooleanKey'
          description: Specifies whether AWS IoT validates the token signature in an authorization request.
    CreateBillingGroupRequest:
      type: object
      title: CreateBillingGroupRequest
      properties:
        billingGroupProperties:
          $ref: '#/components/schemas/BillingGroupProperties'
          description: The properties of the billing group.
        tags:
          $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage the billing group.
    CreateCertificateFromCsrRequest:
      type: object
      required:
        - certificateSigningRequest
      title: CreateCertificateFromCsrRequest
      properties:
        certificateSigningRequest:
          $ref: '#/components/schemas/CertificateSigningRequest'
          description: The certificate signing request (CSR).
      description: The input for the CreateCertificateFromCsr operation.
    MetricName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    CustomMetricDisplayName:
      type: string
      pattern: '[\p{Graph}\x20]*'
      maxLength: 128
    CustomMetricType:
      type: string
      enum:
        - string-list
        - ip-address-list
        - number-list
        - number
    CreateCustomMetricRequest:
      type: object
      required:
        - metricType
        - clientRequestToken
      title: CreateCustomMetricRequest
      properties:
        displayName:
          $ref: '#/components/schemas/CustomMetricDisplayName'
          description: ' Field represents a friendly name in the console for the custom metric; it doesn''t have to be unique. Don''t use this name as the metric identifier in the device metric report. Can be updated once defined.'
        metricType:
          $ref: '#/components/schemas/CustomMetricType'
          description: ' The type of the custom metric. Types include <code>string-list</code>, <code>ip-address-list</code>, <code>number-list</code>, and <code>number</code>. '
        tags:
          $ref: '#/components/schemas/TagList'
          description: ' Metadata that can be used to manage the custom metric. '
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Each custom metric must have a unique client request token. If you try to create a new custom metric that already exists with a different token, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
    CustomMetricArn:
      type: string
    DimensionName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    DimensionType:
      type: string
      enum:
        - TOPIC_FILTER
    DimensionStringValues:
      type: array
      items:
        $ref: '#/components/schemas/DimensionStringValue'
      minItems: 1
      maxItems: 100
    CreateDimensionRequest:
      type: object
      required:
        - type
        - stringValues
        - clientRequestToken
      title: CreateDimensionRequest
      properties:
        type:
          $ref: '#/components/schemas/DimensionType'
          description: 'Specifies the type of dimension. Supported types: <code>TOPIC_FILTER.</code> '
        stringValues:
          $ref: '#/components/schemas/DimensionStringValues'
          description: 'Specifies the value or list of values for the dimension. For <code>TOPIC_FILTER</code> dimensions, this is a pattern used to match the MQTT topic (for example, "admin/#").'
        tags:
          $ref: '#/components/schemas/TagList'
          description: Metadata that can be used to manage the dimension.
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Each dimension must have a unique client request token. If you try to create a new dimension with the same token as a dimension that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.'
    DimensionArn:
      type: string
    DomainConfigurationName:
      type: string
      pattern: '[\w.-]+'
      minLength: 1
      maxLength: 128
    DomainName:
      type: string
      minLength: 1
      maxLength: 253
    ServerCertificateArns:
      type: array
      items:
        $ref: '#/components/schemas/AcmCertificateArn'
      minItems: 0
      maxItems: 1
    ServiceType:
      type: string
      enum:
        - DATA
        - CREDENTIAL_PROVIDER
        - JOBS
    CreateDomainConfigurationRequest:
      type: object
      title: CreateDomainConfigurationRequest
      properties:
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        serverCertificateArns:
          $ref: '#/components/schemas/ServerCertificateArns'
          description: The ARNs of the certificates that AWS IoT passes to the device during the TLS handshake. Currently you can specify only one certificate ARN. This value is not required for AWS-managed domains.
        validationCertificateArn:
          $ref: '#/components/schemas/AcmCertificateArn'
          description: The certificate used to validate the server certificate and prove domain name ownership. This certificate must be signed by a public certificate authority. This value is not required for AWS-managed domains.
        authorizerConfig:
          $ref: '#/components/schemas/AuthorizerConfig'
          description: An object that specifies the authorization service for a domain.
        serviceType:
          $ref: '#/components/schemas/ServiceType'
          description: <p>The type of service delivered by the endpoint.</p> <note> <p>AWS IoT Core currently supports only the <code>DATA</code> service type.</p> </note>
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>Metadata which can be used to manage the domain configuration.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
    DomainConfigurationArn:
      type: string
    ThingGroupProperties:
      type: object
      properties:
        thingGroupDescription:
          $ref: '#/components/schemas/ThingGroupDescription'
          description: The thing group description.
        attributePayload:
          $ref: '#/components/schemas/AttributePayload'
          description: The thing group attributes in JSON format.
      description: Thing group properties.
    IndexName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    QueryString:
      type: string
      minLength: 1
    QueryVersion:
      type: string
    CreateDynamicThingGroupRequest:
      type: object
      required:
        - queryString
      title: CreateDynamicThingGroupRequest
      properties:
        thingGroupProperties:
          $ref: '#/components/schemas/ThingGroupProperties'
          description: The dynamic thing group properties.
        indexName:
          $ref: '#/components/schemas/IndexName'
          description: '<p>The dynamic thing group index name.</p> <note> <p>Currently one index is supported: "AWS_Things".</p> </note>'
        queryString:
          $ref: '#/components/schemas/QueryString'
          description: '<p>The dynamic thing group search query string.</p> <p>See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/query-syntax.html">Query Syntax</a> for information about query string syntax.</p>'
        queryVersion:
          $ref: '#/components/schemas/QueryVersion'
          description: '<p>The dynamic thing group query version.</p> <note> <p>Currently one query version is supported: "2017-09-30". If not specified, the query version defaults to this value.</p> </note>'
        tags:
          $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage the dynamic thing group.
    ThingGroupId:
      type: string
      pattern: '[a-zA-Z0-9\-]+'
      minLength: 1
      maxLength: 128
    JobDocumentSource:
      type: string
      minLength: 1
      maxLength: 1350
    JobDocument:
      type: string
      maxLength: 32768
    PresignedUrlConfig:
      type: object
      properties:
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
        expiresInSec:
          $ref: '#/components/schemas/ExpiresInSec'
          description: 'How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.'
      description: Configuration for pre-signed S3 URLs.
    TargetSelection:
      type: string
      enum:
        - CONTINUOUS
        - SNAPSHOT
    JobExecutionsRolloutConfig:
      type: object
      properties:
        maximumPerMinute:
          $ref: '#/components/schemas/MaxJobExecutionsPerMin'
          description: 'The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.'
        exponentialRate:
          $ref: '#/components/schemas/ExponentialRolloutRate'
          description: The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.
      description: Allows you to create a staged rollout of a job.
    TimeoutConfig:
      type: object
      properties:
        inProgressTimeoutInMinutes:
          $ref: '#/components/schemas/InProgressTimeoutInMinutes'
          description: 'Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can''t be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code> status.'
      description: 'Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.'
    JobTemplateArn:
      type: string
      pattern: '^arn:[!-~]+$'
      minLength: 1
      maxLength: 1600
    CreateJobRequest:
      type: object
      required:
        - targets
      title: CreateJobRequest
      properties:
        targets:
          $ref: '#/components/schemas/JobTargets'
          description: A list of things and thing groups to which the job should be sent.
        documentSource:
          $ref: '#/components/schemas/JobDocumentSource'
          description: '<p>An S3 link to the job document. Required if you don''t specify a value for <code>document</code>.</p> <note> <p>If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document.</p> <p>The placeholder link is of the following form:</p> <p> <code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code> </p> <p>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket to which you are linking.</p> </note>'
        document:
          $ref: '#/components/schemas/JobDocument'
          description: The job document. Required if you don't specify a value for <code>documentSource</code>.
        description:
          $ref: '#/components/schemas/JobDescription'
          description: A short text description of the job.
        presignedUrlConfig:
          $ref: '#/components/schemas/PresignedUrlConfig'
          description: Configuration information for pre-signed S3 URLs.
        targetSelection:
          $ref: '#/components/schemas/TargetSelection'
          description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group.'
        jobExecutionsRolloutConfig:
          $ref: '#/components/schemas/JobExecutionsRolloutConfig'
          description: Allows you to create a staged rollout of the job.
        abortConfig:
          $ref: '#/components/schemas/AbortConfig'
          description: Allows you to create criteria to abort a job.
        timeoutConfig:
          $ref: '#/components/schemas/TimeoutConfig'
          description: 'Specifies the amount of time each device has to finish its execution of the job. The timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the time expires, it will be automatically set to <code>TIMED_OUT</code>.'
        tags:
          $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage the job.
        namespaceId:
          $ref: '#/components/schemas/NamespaceId'
          description: '<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, AWS IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>'
        jobTemplateArn:
          $ref: '#/components/schemas/JobTemplateArn'
          description: The ARN of the job template used to create the job.
    JobTemplateId:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 64
    CreateJobTemplateRequest:
      type: object
      required:
        - description
      title: CreateJobTemplateRequest
      properties:
        jobArn:
          $ref: '#/components/schemas/JobArn'
          description: The ARN of the job to use as the basis for the job template.
        documentSource:
          $ref: '#/components/schemas/JobDocumentSource'
          description: '<p>An S3 link to the job document to use in the template. Required if you don''t specify a value for <code>document</code>.</p> <note> <p>If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document.</p> <p>The placeholder link is of the following form:</p> <p> <code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code> </p> <p>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket to which you are linking.</p> </note>'
        document:
          $ref: '#/components/schemas/JobDocument'
          description: The job document. Required if you don't specify a value for <code>documentSource</code>.
        description:
          $ref: '#/components/schemas/JobDescription'
          description: A description of the job document.
        presignedUrlConfig:
          $ref: '#/components/schemas/PresignedUrlConfig'
        jobExecutionsRolloutConfig:
          $ref: '#/components/schemas/JobExecutionsRolloutConfig'
        abortConfig:
          $ref: '#/components/schemas/AbortConfig'
        timeoutConfig:
          $ref: '#/components/schemas/TimeoutConfig'
        tags:
          $ref: '#/components/schemas/TagList'
          description: Metadata that can be used to manage the job template.
    CreateKeysAndCertificateRequest:
      type: object
      title: CreateKeysAndCertificateRequest
      properties: {}
      description: The input for the CreateKeysAndCertificate operation.
    KeyPair:
      type: object
      properties:
        PublicKey:
          $ref: '#/components/schemas/PublicKey'
          description: The public key.
        PrivateKey:
          $ref: '#/components/schemas/PrivateKey'
          description: The private key.
      description: Describes a key pair.
    MitigationActionParams:
      type: object
      properties:
        updateDeviceCertificateParams:
          $ref: '#/components/schemas/UpdateDeviceCertificateParams'
          description: Parameters to define a mitigation action that changes the state of the device certificate to inactive.
        updateCACertificateParams:
          $ref: '#/components/schemas/UpdateCACertificateParams'
          description: Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
        addThingsToThingGroupParams:
          $ref: '#/components/schemas/AddThingsToThingGroupParams'
          description: 'Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.'
        replaceDefaultPolicyVersionParams:
          $ref: '#/components/schemas/ReplaceDefaultPolicyVersionParams'
          description: Parameters to define a mitigation action that adds a blank policy to restrict permissions.
        enableIoTLoggingParams:
          $ref: '#/components/schemas/EnableIoTLoggingParams'
          description: Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
        publishFindingToSnsParams:
          $ref: '#/components/schemas/PublishFindingToSnsParams'
          description: Parameters to define a mitigation action that publishes findings to Amazon Simple Notification Service (Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
      description: 'The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).'
    CreateMitigationActionRequest:
      type: object
      required:
        - roleArn
        - actionParams
      title: CreateMitigationActionRequest
      properties:
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role that is used to apply the mitigation action.
        actionParams:
          $ref: '#/components/schemas/MitigationActionParams'
          description: Defines the type of action and the parameters for that action.
        tags:
          $ref: '#/components/schemas/TagList'
          description: Metadata that can be used to manage the mitigation action.
    MitigationActionArn:
      type: string
    OTAUpdateId:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 128
    OTAUpdateDescription:
      type: string
      pattern: '[^\p{C}]+'
      maxLength: 2028
    Targets:
      type: array
      items:
        $ref: '#/components/schemas/Target'
      minItems: 1
    Protocols:
      type: array
      items:
        $ref: '#/components/schemas/Protocol'
      minItems: 1
      maxItems: 2
    OTAUpdateFiles:
      type: array
      items:
        $ref: '#/components/schemas/OTAUpdateFile'
      minItems: 1
      maxItems: 50
    CreateOTAUpdateRequest:
      type: object
      required:
        - targets
        - files
        - roleArn
      title: CreateOTAUpdateRequest
      properties:
        description:
          $ref: '#/components/schemas/OTAUpdateDescription'
          description: The description of the OTA update.
        targets:
          $ref: '#/components/schemas/Targets'
          description: The devices targeted to receive OTA updates.
        protocols:
          $ref: '#/components/schemas/Protocols'
          description: 'The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified, the target device can choose the protocol.'
        targetSelection:
          $ref: '#/components/schemas/TargetSelection'
          description: 'Specifies whether the update will continue to run (CONTINUOUS), or will be complete after all the things specified as targets have completed the update (SNAPSHOT). If continuous, the update may also be run on a thing when a change is detected in a target. For example, an update will run on a thing when the thing is added to a target group, even after the update was completed by all things originally in the group. Valid values: CONTINUOUS | SNAPSHOT.'
        awsJobExecutionsRolloutConfig:
          $ref: '#/components/schemas/AwsJobExecutionsRolloutConfig'
          description: Configuration for the rollout of OTA updates.
        awsJobPresignedUrlConfig:
          $ref: '#/components/schemas/AwsJobPresignedUrlConfig'
          description: Configuration information for pre-signed URLs.
        awsJobAbortConfig:
          $ref: '#/components/schemas/AwsJobAbortConfig'
          description: The criteria that determine when and how a job abort takes place.
        awsJobTimeoutConfig:
          $ref: '#/components/schemas/AwsJobTimeoutConfig'
          description: 'Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.'
        files:
          $ref: '#/components/schemas/OTAUpdateFiles'
          description: The files to be streamed by the OTA update.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The IAM role that grants AWS IoT access to the Amazon S3, AWS IoT jobs and AWS Code Signing resources to create an OTA update job.'
        additionalParameters:
          $ref: '#/components/schemas/AdditionalParameterMap'
          description: A list of additional OTA update parameters which are name-value pairs.
        tags:
          $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage updates.
    OTAUpdateArn:
      type: string
    OTAUpdateStatus:
      type: string
      enum:
        - CREATE_PENDING
        - CREATE_IN_PROGRESS
        - CREATE_COMPLETE
        - CREATE_FAILED
    PolicyDocument:
      type: string
    CreatePolicyRequest:
      type: object
      required:
        - policyDocument
      title: CreatePolicyRequest
      properties:
        policyDocument:
          $ref: '#/components/schemas/PolicyDocument'
          description: 'The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.'
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>Metadata which can be used to manage the policy.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
      description: The input for the CreatePolicy operation.
    PolicyArn:
      type: string
    PolicyVersionId:
      type: string
      pattern: '[0-9]+'
    SetAsDefault:
      type: boolean
    CreatePolicyVersionRequest:
      type: object
      required:
        - policyDocument
      title: CreatePolicyVersionRequest
      properties:
        policyDocument:
          $ref: '#/components/schemas/PolicyDocument'
          description: 'The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespace.'
      description: The input for the CreatePolicyVersion operation.
    IsDefaultVersion:
      type: boolean
    TemplateName:
      type: string
      pattern: '^[0-9A-Za-z_-]+$'
      minLength: 1
      maxLength: 36
    CreateProvisioningClaimRequest:
      type: object
      title: CreateProvisioningClaimRequest
      properties: {}
    TemplateDescription:
      type: string
      pattern: '[^\p{C}]*'
      minLength: 0
      maxLength: 500
    ProvisioningHook:
      type: object
      required:
        - targetArn
      properties:
        payloadVersion:
          $ref: '#/components/schemas/PayloadVersion'
          description: '<p>The payload that was sent to the target function.</p> <p> <i>Note:</i> Only Lambda functions are currently supported.</p>'
        targetArn:
          $ref: '#/components/schemas/TargetArn'
          description: '<p>The ARN of the target function.</p> <p> <i>Note:</i> Only Lambda functions are currently supported.</p>'
      description: Structure that contains <code>payloadVersion</code> and <code>targetArn</code>.
    CreateProvisioningTemplateRequest:
      type: object
      required:
        - templateName
        - templateBody
        - provisioningRoleArn
      title: CreateProvisioningTemplateRequest
      properties:
        templateName:
          $ref: '#/components/schemas/TemplateName'
          description: The name of the fleet provisioning template.
        description:
          $ref: '#/components/schemas/TemplateDescription'
          description: The description of the fleet provisioning template.
        templateBody:
          $ref: '#/components/schemas/TemplateBody'
          description: The JSON formatted contents of the fleet provisioning template.
        enabled:
          $ref: '#/components/schemas/Enabled'
          description: 'True to enable the fleet provisioning template, otherwise false.'
        provisioningRoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
        preProvisioningHook:
          $ref: '#/components/schemas/ProvisioningHook'
          description: Creates a pre-provisioning hook template.
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>Metadata which can be used to manage the fleet provisioning template.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
    TemplateArn:
      type: string
    TemplateVersionId:
      type: integer
    CreateProvisioningTemplateVersionRequest:
      type: object
      required:
        - templateBody
      title: CreateProvisioningTemplateVersionRequest
      properties:
        templateBody:
          $ref: '#/components/schemas/TemplateBody'
          description: The JSON formatted contents of the fleet provisioning template.
    RoleAlias:
      type: string
      pattern: '[\w=,@-]+'
      minLength: 1
      maxLength: 128
    CredentialDurationSeconds:
      type: integer
      minimum: 900
      maximum: 43200
    CreateRoleAliasRequest:
      type: object
      required:
        - roleArn
      title: CreateRoleAliasRequest
      properties:
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The role ARN.
        credentialDurationSeconds:
          $ref: '#/components/schemas/CredentialDurationSeconds'
          description: How long (in seconds) the credentials will be valid.
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>Metadata which can be used to manage the role alias.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
    DayOfMonth:
      type: string
      pattern: '^([1-9]|[12][0-9]|3[01])$|^LAST$'
    DayOfWeek:
      type: string
      enum:
        - SUN
        - MON
        - TUE
        - WED
        - THU
        - FRI
        - SAT
    TargetAuditCheckNames:
      type: array
      items:
        $ref: '#/components/schemas/AuditCheckName'
    ScheduledAuditName:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 128
    CreateScheduledAuditRequest:
      type: object
      required:
        - frequency
        - targetCheckNames
      title: CreateScheduledAuditRequest
      properties:
        frequency:
          $ref: '#/components/schemas/AuditFrequency'
          description: 'How often the scheduled audit takes place, either <code>DAILY</code>, <code>WEEKLY</code>, <code>BIWEEKLY</code> or <code>MONTHLY</code>. The start time of each audit is determined by the system.'
        dayOfMonth:
          $ref: '#/components/schemas/DayOfMonth'
          description: 'The day of the month on which the scheduled audit takes place. This can be "1" through "31" or "LAST". This field is required if the "frequency" parameter is set to <code>MONTHLY</code>. If days 29 to 31 are specified, and the month doesn''t have that many days, the audit takes place on the <code>LAST</code> day of the month.'
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
          description: 'The day of the week on which the scheduled audit takes place, either <code>SUN</code>, <code>MON</code>, <code>TUE</code>, <code>WED</code>, <code>THU</code>, <code>FRI</code>, or <code>SAT</code>. This field is required if the <code>frequency</code> parameter is set to <code>WEEKLY</code> or <code>BIWEEKLY</code>.'
        targetCheckNames:
          $ref: '#/components/schemas/TargetAuditCheckNames'
          description: 'Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
        tags:
          $ref: '#/components/schemas/TagList'
          description: Metadata that can be used to manage the scheduled audit.
    ScheduledAuditArn:
      type: string
    SecurityProfileDescription:
      type: string
      pattern: '[\p{Graph}\x20]*'
      maxLength: 1000
    CreateSecurityProfileRequest:
      type: object
      title: CreateSecurityProfileRequest
      properties:
        securityProfileDescription:
          $ref: '#/components/schemas/SecurityProfileDescription'
          description: A description of the security profile.
        behaviors:
          $ref: '#/components/schemas/Behaviors'
          description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
        alertTargets:
          $ref: '#/components/schemas/AlertTargets'
          description: Specifies the destinations to which alerts are sent. (Alerts are always sent to the console.) Alerts are generated when a device (thing) violates a behavior.
        additionalMetricsToRetain:
          allOf:
            - $ref: '#/components/schemas/AdditionalMetricsToRetainList'
            - deprecated: true
              description: '<p> <i>Please use <a>CreateSecurityProfileRequest$additionalMetricsToRetainV2</a> instead.</i> </p> <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s <code>behaviors</code>, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>Use additionalMetricsToRetainV2.'
        additionalMetricsToRetainV2:
          $ref: '#/components/schemas/AdditionalMetricsToRetainV2List'
          description: 'A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s <code>behaviors</code>, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.'
        tags:
          $ref: '#/components/schemas/TagList'
          description: Metadata that can be used to manage the security profile.
    SecurityProfileArn:
      type: string
    StreamId:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 128
    StreamDescription:
      type: string
      pattern: '[^\p{C}]+'
      maxLength: 2028
    StreamFiles:
      type: array
      items:
        $ref: '#/components/schemas/StreamFile'
      minItems: 1
      maxItems: 50
    CreateStreamRequest:
      type: object
      required:
        - files
        - roleArn
      title: CreateStreamRequest
      properties:
        description:
          $ref: '#/components/schemas/StreamDescription'
          description: A description of the stream.
        files:
          $ref: '#/components/schemas/StreamFiles'
          description: The files to stream.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: An IAM role that allows the IoT service principal assumes to access your S3 files.
        tags:
          $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage streams.
    StreamArn:
      type: string
    StreamVersion:
      type: integer
      minimum: 0
      maximum: 65535
    CreateThingGroupRequest:
      type: object
      title: CreateThingGroupRequest
      properties:
        parentGroupName:
          $ref: '#/components/schemas/ThingGroupName'
          description: The name of the parent thing group.
        thingGroupProperties:
          $ref: '#/components/schemas/ThingGroupProperties'
          description: The thing group properties.
        tags:
          $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage the thing group.
    ThingTypeName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    CreateThingRequest:
      type: object
      title: CreateThingRequest
      properties:
        thingTypeName:
          $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type associated with the new thing.
        attributePayload:
          $ref: '#/components/schemas/AttributePayload'
          description: '<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\"attributes\":{\"string1\":\"string2\"}}</code> </p>'
        billingGroupName:
          $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group the thing will be added to.
      description: The input for the CreateThing operation.
    ThingId:
      type: string
    ThingTypeProperties:
      type: object
      properties:
        thingTypeDescription:
          $ref: '#/components/schemas/ThingTypeDescription'
          description: The description of the thing type.
        searchableAttributes:
          $ref: '#/components/schemas/SearchableAttributes'
          description: A list of searchable thing attribute names.
      description: 'The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.'
    CreateThingTypeRequest:
      type: object
      title: CreateThingTypeRequest
      properties:
        thingTypeProperties:
          $ref: '#/components/schemas/ThingTypeProperties'
          description: 'The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.'
        tags:
          $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage the thing type.
      description: The input for the CreateThingType operation.
    ThingTypeArn:
      type: string
    ThingTypeId:
      type: string
    TopicRuleDestinationConfiguration:
      type: object
      properties:
        httpUrlConfiguration:
          $ref: '#/components/schemas/HttpUrlDestinationConfiguration'
          description: Configuration of the HTTP URL.
        vpcConfiguration:
          $ref: '#/components/schemas/VpcDestinationConfiguration'
          description: Configuration of the virtual private cloud (VPC) connection.
      description: Configuration of the topic rule destination.
    CreateTopicRuleDestinationRequest:
      type: object
      required:
        - destinationConfiguration
      title: CreateTopicRuleDestinationRequest
      properties:
        destinationConfiguration:
          $ref: '#/components/schemas/TopicRuleDestinationConfiguration'
          description: The topic rule destination configuration.
    TopicRuleDestination:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AwsArn'
          description: The topic rule destination URL.
        status:
          $ref: '#/components/schemas/TopicRuleDestinationStatus'
          description: '<p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>'
        createdAt:
          $ref: '#/components/schemas/CreatedAtDate'
          description: The date and time when the topic rule destination was created.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAtDate'
          description: The date and time when the topic rule destination was last updated.
        statusReason:
          $ref: '#/components/schemas/String'
          description: Additional details or reason why the topic rule destination is in the current status.
        httpUrlProperties:
          $ref: '#/components/schemas/HttpUrlDestinationProperties'
          description: Properties of the HTTP URL.
        vpcProperties:
          $ref: '#/components/schemas/VpcDestinationProperties'
          description: Properties of the virtual private cloud (VPC) connection.
      description: A topic rule destination.
    RuleName:
      type: string
      pattern: '^[a-zA-Z0-9_]+$'
      minLength: 1
      maxLength: 128
    TopicRulePayload:
      type: object
      required:
        - sql
        - actions
      properties:
        sql:
          $ref: '#/components/schemas/SQL'
          description: 'The SQL statement used to query the topic. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-reference.html">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.'
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the rule.
        actions:
          $ref: '#/components/schemas/ActionList'
          description: The actions associated with the rule.
        ruleDisabled:
          $ref: '#/components/schemas/IsDisabled'
          description: Specifies whether the rule is disabled.
        awsIotSqlVersion:
          $ref: '#/components/schemas/AwsIotSqlVersion'
          description: The version of the SQL rules engine to use when evaluating the rule.
        errorAction:
          $ref: '#/components/schemas/Action'
          description: The action to take when an error occurs.
      description: Describes a rule.
    CreateTopicRuleRequest:
      type: object
      required:
        - topicRulePayload
      title: CreateTopicRuleRequest
      properties:
        topicRulePayload:
          $ref: '#/components/schemas/TopicRulePayload'
          description: The rule payload.
      description: The input for the CreateTopicRule operation.
    CreatedAtDate:
      type: string
      format: date-time
    HashAlgorithm:
      type: string
    SignatureAlgorithm:
      type: string
    DeleteScheduledAudits:
      type: boolean
    DeleteAccountAuditConfigurationRequest:
      type: object
      title: DeleteAccountAuditConfigurationRequest
      properties: {}
    DeleteAdditionalMetricsToRetain:
      type: boolean
    DeleteAlertTargets:
      type: boolean
    DeleteAuditSuppressionRequest:
      type: object
      required:
        - checkName
        - resourceIdentifier
      title: DeleteAuditSuppressionRequest
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
    DeleteAuthorizerRequest:
      type: object
      title: DeleteAuthorizerRequest
      properties: {}
    DeleteBehaviors:
      type: boolean
    OptionalVersion:
      type: integer
    DeleteBillingGroupRequest:
      type: object
      title: DeleteBillingGroupRequest
      properties: {}
    DeleteCACertificateRequest:
      type: object
      title: DeleteCACertificateRequest
      properties: {}
      description: Input for the DeleteCACertificate operation.
    ForceDelete:
      type: boolean
    DeleteCertificateRequest:
      type: object
      title: DeleteCertificateRequest
      properties: {}
      description: The input for the DeleteCertificate operation.
    DeleteCustomMetricRequest:
      type: object
      title: DeleteCustomMetricRequest
      properties: {}
    DeleteDimensionRequest:
      type: object
      title: DeleteDimensionRequest
      properties: {}
    DeleteDomainConfigurationRequest:
      type: object
      title: DeleteDomainConfigurationRequest
      properties: {}
    DeleteDynamicThingGroupRequest:
      type: object
      title: DeleteDynamicThingGroupRequest
      properties: {}
    ExecutionNumber:
      type: integer
    DeleteJobExecutionRequest:
      type: object
      title: DeleteJobExecutionRequest
      properties: {}
    DeleteJobRequest:
      type: object
      title: DeleteJobRequest
      properties: {}
    DeleteJobTemplateRequest:
      type: object
      title: DeleteJobTemplateRequest
      properties: {}
    DeleteMitigationActionRequest:
      type: object
      title: DeleteMitigationActionRequest
      properties: {}
    DeleteStream:
      type: boolean
    ForceDeleteAWSJob:
      type: boolean
    DeleteOTAUpdateRequest:
      type: object
      title: DeleteOTAUpdateRequest
      properties: {}
    DeletePolicyRequest:
      type: object
      title: DeletePolicyRequest
      properties: {}
      description: The input for the DeletePolicy operation.
    DeletePolicyVersionRequest:
      type: object
      title: DeletePolicyVersionRequest
      properties: {}
      description: The input for the DeletePolicyVersion operation.
    DeleteProvisioningTemplateRequest:
      type: object
      title: DeleteProvisioningTemplateRequest
      properties: {}
    DeleteProvisioningTemplateVersionRequest:
      type: object
      title: DeleteProvisioningTemplateVersionRequest
      properties: {}
    DeleteRegistrationCodeRequest:
      type: object
      title: DeleteRegistrationCodeRequest
      properties: {}
      description: The input for the DeleteRegistrationCode operation.
    DeleteRoleAliasRequest:
      type: object
      title: DeleteRoleAliasRequest
      properties: {}
    DeleteScheduledAuditRequest:
      type: object
      title: DeleteScheduledAuditRequest
      properties: {}
    DeleteSecurityProfileRequest:
      type: object
      title: DeleteSecurityProfileRequest
      properties: {}
    DeleteStreamRequest:
      type: object
      title: DeleteStreamRequest
      properties: {}
    DeleteThingGroupRequest:
      type: object
      title: DeleteThingGroupRequest
      properties: {}
    DeleteThingRequest:
      type: object
      title: DeleteThingRequest
      properties: {}
      description: The input for the DeleteThing operation.
    DeleteThingTypeRequest:
      type: object
      title: DeleteThingTypeRequest
      properties: {}
      description: The input for the DeleteThingType operation.
    DeleteTopicRuleDestinationRequest:
      type: object
      title: DeleteTopicRuleDestinationRequest
      properties: {}
    DeleteTopicRuleRequest:
      type: object
      title: DeleteTopicRuleRequest
      properties: {}
      description: The input for the DeleteTopicRule operation.
    DeleteV2LoggingLevelRequest:
      type: object
      title: DeleteV2LoggingLevelRequest
      properties: {}
    DeliveryStreamName:
      type: string
    ImplicitDeny:
      type: object
      properties:
        policies:
          $ref: '#/components/schemas/Policies'
          description: 'Policies that don''t contain a matching allow or deny statement for the specified action on the specified resource. '
      description: Information that implicitly denies authorization. When policy doesn't explicitly deny or allow an action on a resource it is considered an implicit deny.
    ExplicitDeny:
      type: object
      properties:
        policies:
          $ref: '#/components/schemas/Policies'
          description: The policies that denied the authorization.
      description: Information that explicitly denies authorization.
    UndoDeprecate:
      type: boolean
    DeprecateThingTypeRequest:
      type: object
      title: DeprecateThingTypeRequest
      properties:
        undoDeprecate:
          $ref: '#/components/schemas/UndoDeprecate'
          description: 'Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.'
      description: The input for the DeprecateThingType operation.
    DeprecationDate:
      type: string
      format: date-time
    DescribeAccountAuditConfigurationRequest:
      type: object
      title: DescribeAccountAuditConfigurationRequest
      properties: {}
    DescribeAuditFindingRequest:
      type: object
      title: DescribeAuditFindingRequest
      properties: {}
    DescribeAuditMitigationActionsTaskRequest:
      type: object
      title: DescribeAuditMitigationActionsTaskRequest
      properties: {}
    MitigationActionList:
      type: array
      items:
        $ref: '#/components/schemas/MitigationAction'
    DescribeAuditSuppressionRequest:
      type: object
      required:
        - checkName
        - resourceIdentifier
      title: DescribeAuditSuppressionRequest
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
    DescribeAuditTaskRequest:
      type: object
      title: DescribeAuditTaskRequest
      properties: {}
    TaskStatistics:
      type: object
      properties:
        totalChecks:
          $ref: '#/components/schemas/TotalChecksCount'
          description: The number of checks in this audit.
        inProgressChecks:
          $ref: '#/components/schemas/InProgressChecksCount'
          description: The number of checks in progress.
        waitingForDataCollectionChecks:
          $ref: '#/components/schemas/WaitingForDataCollectionChecksCount'
          description: The number of checks waiting for data collection.
        compliantChecks:
          $ref: '#/components/schemas/CompliantChecksCount'
          description: The number of checks that found compliant resources.
        nonCompliantChecks:
          $ref: '#/components/schemas/NonCompliantChecksCount'
          description: The number of checks that found noncompliant resources.
        failedChecks:
          $ref: '#/components/schemas/FailedChecksCount'
          description: The number of checks.
        canceledChecks:
          $ref: '#/components/schemas/CanceledChecksCount'
          description: The number of checks that did not run because the audit was canceled.
      description: Statistics for the checks performed during the audit.
    DescribeAuthorizerRequest:
      type: object
      title: DescribeAuthorizerRequest
      properties: {}
    DescribeBillingGroupRequest:
      type: object
      title: DescribeBillingGroupRequest
      properties: {}
    Version:
      type: integer
    DescribeCACertificateRequest:
      type: object
      title: DescribeCACertificateRequest
      properties: {}
      description: The input for the DescribeCACertificate operation.
    RegistrationConfig:
      type: object
      properties:
        templateBody:
          $ref: '#/components/schemas/TemplateBody'
          description: The template body.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role.
      description: The registration configuration.
    DescribeCertificateRequest:
      type: object
      title: DescribeCertificateRequest
      properties: {}
      description: The input for the DescribeCertificate operation.
    DescribeCustomMetricRequest:
      type: object
      title: DescribeCustomMetricRequest
      properties: {}
    DescribeDefaultAuthorizerRequest:
      type: object
      title: DescribeDefaultAuthorizerRequest
      properties: {}
    DescribeDetectMitigationActionsTaskRequest:
      type: object
      title: DescribeDetectMitigationActionsTaskRequest
      properties: {}
    DetectMitigationActionsTaskSummary:
      type: object
      properties:
        taskId:
          $ref: '#/components/schemas/MitigationActionsTaskId'
          description: ' The unique identifier of the task. '
        taskStatus:
          $ref: '#/components/schemas/DetectMitigationActionsTaskStatus'
          description: ' The status of the task. '
        taskStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' The date the task started. '
        taskEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' The date the task ended. '
        target:
          $ref: '#/components/schemas/DetectMitigationActionsTaskTarget'
          description: ' Specifies the ML Detect findings to which the mitigation actions are applied. '
        violationEventOccurrenceRange:
          $ref: '#/components/schemas/ViolationEventOccurrenceRange'
          description: ' Specifies the time period of which violation events occurred between. '
        onlyActiveViolationsIncluded:
          $ref: '#/components/schemas/PrimitiveBoolean'
          description: ' Includes only active violations. '
        suppressedAlertsIncluded:
          $ref: '#/components/schemas/PrimitiveBoolean'
          description: ' Includes suppressed alerts. '
        actionsDefinition:
          $ref: '#/components/schemas/MitigationActionList'
          description: ' The definition of the actions. '
        taskStatistics:
          $ref: '#/components/schemas/DetectMitigationActionsTaskStatistics'
          description: ' The statistics of a mitigation action task. '
      description: ' The summary of the mitigation action tasks. '
    DescribeDimensionRequest:
      type: object
      title: DescribeDimensionRequest
      properties: {}
    ReservedDomainConfigurationName:
      type: string
      pattern: '[\w.:-]+'
      minLength: 1
      maxLength: 128
    DescribeDomainConfigurationRequest:
      type: object
      title: DescribeDomainConfigurationRequest
      properties: {}
    ServerCertificates:
      type: array
      items:
        $ref: '#/components/schemas/ServerCertificateSummary'
    DomainConfigurationStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    DomainType:
      type: string
      enum:
        - ENDPOINT
        - AWS_MANAGED
        - CUSTOMER_MANAGED
    EndpointType:
      type: string
      maxLength: 128
    DescribeEndpointRequest:
      type: object
      title: DescribeEndpointRequest
      properties: {}
      description: The input for the DescribeEndpoint operation.
    EndpointAddress:
      type: string
    DescribeEventConfigurationsRequest:
      type: object
      title: DescribeEventConfigurationsRequest
      properties: {}
    EventConfigurations:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Configuration'
    LastModifiedDate:
      type: string
      format: date-time
    DescribeIndexRequest:
      type: object
      title: DescribeIndexRequest
      properties: {}
    IndexStatus:
      type: string
      enum:
        - ACTIVE
        - BUILDING
        - REBUILDING
    IndexSchema:
      type: string
    DescribeJobExecutionRequest:
      type: object
      title: DescribeJobExecutionRequest
      properties: {}
    JobExecution:
      type: object
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to the job when it was created.
        status:
          $ref: '#/components/schemas/JobExecutionStatus'
          description: 'The status of the job execution (IN_PROGRESS, QUEUED, FAILED, SUCCEEDED, TIMED_OUT, CANCELED, or REJECTED).'
        forceCanceled:
          $ref: '#/components/schemas/Forced'
          description: Will be <code>true</code> if the job execution was canceled with the optional <code>force</code> parameter set to <code>true</code>.
        statusDetails:
          $ref: '#/components/schemas/JobExecutionStatusDetails'
          description: A collection of name/value pairs that describe the status of the job execution.
        thingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing on which the job execution is running.
        queuedAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job execution was queued.'
        startedAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job execution started.'
        lastUpdatedAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job execution was last updated.'
        executionNumber:
          $ref: '#/components/schemas/ExecutionNumber'
          description: 'A string (consisting of the digits "0" through "9") which identifies this particular job execution on this particular device. It can be used in commands which return or update job execution information. '
        versionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version of the job execution. Job execution versions are incremented each time they are updated by a device.
        approximateSecondsBeforeTimedOut:
          $ref: '#/components/schemas/ApproximateSecondsBeforeTimedOut'
          description: The estimated number of seconds that remain before the job execution status will be changed to <code>TIMED_OUT</code>. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The actual job execution timeout can occur up to 60 seconds later than the estimated duration. This value will not be included if the job execution has reached a terminal status.
      description: The job execution object represents the execution of a job on a particular device.
    DescribeJobRequest:
      type: object
      title: DescribeJobRequest
      properties: {}
    Job:
      type: object
      properties:
        jobArn:
          $ref: '#/components/schemas/JobArn'
          description: 'An ARN identifying the job with format "arn:aws:iot:region:account:job/jobId".'
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was created.
        targetSelection:
          $ref: '#/components/schemas/TargetSelection'
          description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a device when the thing representing the device is added to a target group, even after the job was completed by all things originally in the group. '
        status:
          $ref: '#/components/schemas/JobStatus'
          description: 'The status of the job, one of <code>IN_PROGRESS</code>, <code>CANCELED</code>, <code>DELETION_IN_PROGRESS</code> or <code>COMPLETED</code>. '
        forceCanceled:
          $ref: '#/components/schemas/Forced'
          description: Will be <code>true</code> if the job was canceled with the optional <code>force</code> parameter set to <code>true</code>.
        reasonCode:
          $ref: '#/components/schemas/ReasonCode'
          description: 'If the job was updated, provides the reason code for the update.'
        comment:
          $ref: '#/components/schemas/Comment'
          description: 'If the job was updated, describes the reason for the update.'
        targets:
          $ref: '#/components/schemas/JobTargets'
          description: A list of IoT things and thing groups to which the job should be sent.
        description:
          $ref: '#/components/schemas/JobDescription'
          description: A short text description of the job.
        presignedUrlConfig:
          $ref: '#/components/schemas/PresignedUrlConfig'
          description: Configuration for pre-signed S3 URLs.
        jobExecutionsRolloutConfig:
          $ref: '#/components/schemas/JobExecutionsRolloutConfig'
          description: Allows you to create a staged rollout of a job.
        abortConfig:
          $ref: '#/components/schemas/AbortConfig'
          description: Configuration for criteria to abort the job.
        createdAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job was created.'
        lastUpdatedAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job was last updated.'
        completedAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job was completed.'
        jobProcessDetails:
          $ref: '#/components/schemas/JobProcessDetails'
          description: Details about the job process.
        timeoutConfig:
          $ref: '#/components/schemas/TimeoutConfig'
          description: 'Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.'
        namespaceId:
          $ref: '#/components/schemas/NamespaceId'
          description: '<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, AWS IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>'
        jobTemplateArn:
          $ref: '#/components/schemas/JobTemplateArn'
          description: The ARN of the job template used to create the job.
      description: The <code>Job</code> object contains details about a job.
    DescribeJobTemplateRequest:
      type: object
      title: DescribeJobTemplateRequest
      properties: {}
    DescribeMitigationActionRequest:
      type: object
      title: DescribeMitigationActionRequest
      properties: {}
    MitigationActionType:
      type: string
      enum:
        - UPDATE_DEVICE_CERTIFICATE
        - UPDATE_CA_CERTIFICATE
        - ADD_THINGS_TO_THING_GROUP
        - REPLACE_DEFAULT_POLICY_VERSION
        - ENABLE_IOT_LOGGING
        - PUBLISH_FINDING_TO_SNS
    DescribeProvisioningTemplateRequest:
      type: object
      title: DescribeProvisioningTemplateRequest
      properties: {}
    DescribeProvisioningTemplateVersionRequest:
      type: object
      title: DescribeProvisioningTemplateVersionRequest
      properties: {}
    DescribeRoleAliasRequest:
      type: object
      title: DescribeRoleAliasRequest
      properties: {}
    RoleAliasDescription:
      type: object
      properties:
        roleAlias:
          $ref: '#/components/schemas/RoleAlias'
          description: The role alias.
        roleAliasArn:
          $ref: '#/components/schemas/RoleAliasArn'
          description: The ARN of the role alias.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The role ARN.
        owner:
          $ref: '#/components/schemas/AwsAccountId'
          description: The role alias owner.
        credentialDurationSeconds:
          $ref: '#/components/schemas/CredentialDurationSeconds'
          description: The number of seconds for which the credential is valid.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The UNIX timestamp of when the role alias was created.
        lastModifiedDate:
          $ref: '#/components/schemas/DateType'
          description: The UNIX timestamp of when the role alias was last modified.
      description: Role alias description.
    DescribeScheduledAuditRequest:
      type: object
      title: DescribeScheduledAuditRequest
      properties: {}
    DescribeSecurityProfileRequest:
      type: object
      title: DescribeSecurityProfileRequest
      properties: {}
    DescribeStreamRequest:
      type: object
      title: DescribeStreamRequest
      properties: {}
    StreamInfo:
      type: object
      properties:
        streamId:
          $ref: '#/components/schemas/StreamId'
          description: The stream ID.
        streamArn:
          $ref: '#/components/schemas/StreamArn'
          description: The stream ARN.
        streamVersion:
          $ref: '#/components/schemas/StreamVersion'
          description: The stream version.
        description:
          $ref: '#/components/schemas/StreamDescription'
          description: The description of the stream.
        files:
          $ref: '#/components/schemas/StreamFiles'
          description: The files to stream.
        createdAt:
          $ref: '#/components/schemas/DateType'
          description: The date when the stream was created.
        lastUpdatedAt:
          $ref: '#/components/schemas/DateType'
          description: The date when the stream was last updated.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: An IAM role AWS IoT assumes to access your S3 files.
      description: Information about a stream.
    DescribeThingGroupRequest:
      type: object
      title: DescribeThingGroupRequest
      properties: {}
    ThingGroupMetadata:
      type: object
      properties:
        parentGroupName:
          $ref: '#/components/schemas/ThingGroupName'
          description: The parent thing group name.
        rootToParentThingGroups:
          $ref: '#/components/schemas/ThingGroupNameAndArnList'
          description: The root parent thing group.
        creationDate:
          $ref: '#/components/schemas/CreationDate'
          description: The UNIX timestamp of when the thing group was created.
      description: Thing group metadata.
    DynamicGroupStatus:
      type: string
      enum:
        - ACTIVE
        - BUILDING
        - REBUILDING
    TaskId:
      type: string
      maxLength: 40
    DescribeThingRegistrationTaskRequest:
      type: object
      title: DescribeThingRegistrationTaskRequest
      properties: {}
    RegistryS3BucketName:
      type: string
      pattern: '[a-zA-Z0-9._-]+'
      minLength: 3
      maxLength: 256
    RegistryS3KeyName:
      type: string
      pattern: '[a-zA-Z0-9!_.*''()-\/]+'
      minLength: 1
      maxLength: 1024
    Status:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
        - Cancelled
        - Cancelling
    Percentage:
      type: integer
      minimum: 0
      maximum: 100
    DescribeThingRequest:
      type: object
      title: DescribeThingRequest
      properties: {}
      description: The input for the DescribeThing operation.
    DescribeThingTypeRequest:
      type: object
      title: DescribeThingTypeRequest
      properties: {}
      description: The input for the DescribeThingType operation.
    ThingTypeMetadata:
      type: object
      properties:
        deprecated:
          $ref: '#/components/schemas/Boolean'
          description: 'Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.'
        deprecationDate:
          $ref: '#/components/schemas/DeprecationDate'
          description: The date and time when the thing type was deprecated.
        creationDate:
          $ref: '#/components/schemas/CreationDate'
          description: The date and time when the thing type was created.
      description: 'The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when time was deprecated.'
    S3Destination:
      type: object
      properties:
        bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: The S3 bucket that contains the updated firmware.
        prefix:
          $ref: '#/components/schemas/Prefix'
          description: The S3 prefix.
      description: Describes the location of updated firmware in S3.
    Destination:
      type: object
      properties:
        s3Destination:
          $ref: '#/components/schemas/S3Destination'
          description: Describes the location in S3 of the updated firmware.
      description: Describes the location of the updated firmware.
    DetachPolicyRequest:
      type: object
      required:
        - target
      title: DetachPolicyRequest
      properties:
        target:
          $ref: '#/components/schemas/PolicyTarget'
          description: The target from which the policy will be detached.
    DetachPrincipalPolicyRequest:
      type: object
      title: DetachPrincipalPolicyRequest
      properties: {}
      description: The input for the DetachPrincipalPolicy operation.
    DetachSecurityProfileRequest:
      type: object
      title: DetachSecurityProfileRequest
      properties: {}
    DetachThingPrincipalRequest:
      type: object
      title: DetachThingPrincipalRequest
      properties: {}
      description: The input for the DetachThingPrincipal operation.
    DetailsKey:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    DetectMitigationActionExecutionStatus:
      type: string
      enum:
        - IN_PROGRESS
        - SUCCESSFUL
        - FAILED
        - SKIPPED
    DetectMitigationActionExecutionErrorCode:
      type: string
    DetectMitigationActionExecution:
      type: object
      properties:
        taskId:
          $ref: '#/components/schemas/MitigationActionsTaskId'
          description: ' The unique identifier of the task. '
        violationId:
          $ref: '#/components/schemas/ViolationId'
          description: ' The unique identifier of the violation. '
        actionName:
          $ref: '#/components/schemas/MitigationActionName'
          description: ' The friendly name that uniquely identifies the mitigation action. '
        thingName:
          $ref: '#/components/schemas/DeviceDefenderThingName'
          description: ' The name of the thing. '
        executionStartDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The date a mitigation action was started. '
        executionEndDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The date a mitigation action ended. '
        status:
          $ref: '#/components/schemas/DetectMitigationActionExecutionStatus'
          description: ' The status of a mitigation action. '
        errorCode:
          $ref: '#/components/schemas/DetectMitigationActionExecutionErrorCode'
          description: ' The error code of a mitigation action. '
        message:
          $ref: '#/components/schemas/ErrorMessage'
          description: ' The message of a mitigation action. '
      description: ' Describes which mitigation actions should be executed. '
    DetectMitigationActionExecutionList:
      type: array
      items:
        $ref: '#/components/schemas/DetectMitigationActionExecution'
    GenericLongValue:
      type: integer
    DetectMitigationActionsTaskStatistics:
      type: object
      properties:
        actionsExecuted:
          $ref: '#/components/schemas/GenericLongValue'
          description: ' The actions that were performed. '
        actionsSkipped:
          $ref: '#/components/schemas/GenericLongValue'
          description: ' The actions that were skipped. '
        actionsFailed:
          $ref: '#/components/schemas/GenericLongValue'
          description: ' The actions that failed. '
      description: ' The statistics of a mitigation action task. '
    DetectMitigationActionsTaskStatus:
      type: string
      enum:
        - IN_PROGRESS
        - SUCCESSFUL
        - FAILED
        - CANCELED
    DetectMitigationActionsTaskTarget:
      type: object
      properties:
        violationIds:
          $ref: '#/components/schemas/TargetViolationIdsForDetectMitigationActions'
          description: ' The unique identifiers of the violations. '
        securityProfileName:
          $ref: '#/components/schemas/SecurityProfileName'
          description: ' The name of the security profile. '
        behaviorName:
          $ref: '#/components/schemas/BehaviorName'
          description: ' The name of the behavior. '
      description: ' The target of a mitigation action task. '
    ViolationEventOccurrenceRange:
      type: object
      required:
        - startTime
        - endTime
      properties:
        startTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' The start date and time of a time period in which violation events occurred. '
        endTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' The end date and time of a time period in which violation events occurred. '
      description: ' Specifies the time period of which violation events occurred between. '
    PrimitiveBoolean:
      type: boolean
    DetectMitigationActionsTaskSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DetectMitigationActionsTaskSummary'
    DetectMitigationActionsToExecuteList:
      type: array
      items:
        $ref: '#/components/schemas/MitigationActionName'
      minItems: 1
      maxItems: 5
    DeviceCertificateUpdateAction:
      type: string
      enum:
        - DEACTIVATE
    DimensionNames:
      type: array
      items:
        $ref: '#/components/schemas/DimensionName'
    DimensionValueOperator:
      type: string
      enum:
        - IN
        - NOT_IN
    DisableAllLogs:
      type: boolean
    DisableTopicRuleRequest:
      type: object
      title: DisableTopicRuleRequest
      properties: {}
      description: The input for the DisableTopicRuleRequest operation.
    DomainConfigurationSummary:
      type: object
      properties:
        domainConfigurationName:
          $ref: '#/components/schemas/ReservedDomainConfigurationName'
          description: The name of the domain configuration. This value must be unique to a region.
        domainConfigurationArn:
          $ref: '#/components/schemas/DomainConfigurationArn'
          description: The ARN of the domain configuration.
        serviceType:
          $ref: '#/components/schemas/ServiceType'
          description: The type of service delivered by the endpoint.
      description: '<p>The summary of a domain configuration. A domain configuration specifies custom IoT-specific information about a domain. A domain configuration can be associated with an AWS-managed domain (for example, dbc123defghijk.iot.us-west-2.amazonaws.com), a customer managed domain, or a default endpoint.</p> <ul> <li> <p>Data</p> </li> <li> <p>Jobs</p> </li> <li> <p>CredentialProvider</p> </li> </ul>'
    DomainConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/DomainConfigurationSummary'
    TableName:
      type: string
    DynamoOperation:
      type: string
    HashKeyField:
      type: string
    HashKeyValue:
      type: string
    DynamoKeyType:
      type: string
      enum:
        - STRING
        - NUMBER
    RangeKeyField:
      type: string
    RangeKeyValue:
      type: string
    PayloadField:
      type: string
    PutItemInput:
      type: object
      required:
        - tableName
      properties:
        tableName:
          $ref: '#/components/schemas/TableName'
          description: The table where the message data will be written.
      description: The input for the DynamoActionVS action that specifies the DynamoDB table to which the message data will be written.
    EffectivePolicy:
      type: object
      properties:
        policyName:
          $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyArn:
          $ref: '#/components/schemas/PolicyArn'
          description: The policy ARN.
        policyDocument:
          $ref: '#/components/schemas/PolicyDocument'
          description: The IAM policy document.
      description: The policy that has the effect on the authorization results.
    EffectivePolicies:
      type: array
      items:
        $ref: '#/components/schemas/EffectivePolicy'
    ElasticsearchEndpoint:
      type: string
      pattern: 'https?://.*'
    ElasticsearchIndex:
      type: string
    ElasticsearchType:
      type: string
    ElasticsearchId:
      type: string
    EnableTopicRuleRequest:
      type: object
      title: EnableTopicRuleRequest
      properties: {}
      description: The input for the EnableTopicRuleRequest operation.
    OTAUpdateErrorMessage:
      type: string
    ErrorInfo:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code'
          description: The error code.
        message:
          $ref: '#/components/schemas/OTAUpdateErrorMessage'
          description: The error message.
      description: Error information.
    EvaluationStatistic:
      type: string
      pattern: (p0|p0\.1|p0\.01|p1|p10|p50|p90|p99|p99\.9|p99\.99|p100)
    EventType:
      type: string
      enum:
        - THING
        - THING_GROUP
        - THING_TYPE
        - THING_GROUP_MEMBERSHIP
        - THING_GROUP_HIERARCHY
        - THING_TYPE_ASSOCIATION
        - JOB
        - JOB_EXECUTION
        - POLICY
        - CERTIFICATE
        - CA_CERTIFICATE
    ExecutionNamePrefix:
      type: string
    RolloutRatePerMinute:
      type: integer
      minimum: 1
      maximum: 1000
    IncrementFactor:
      type: number
      format: double
      minimum: 1
      maximum: 5
    RateIncreaseCriteria:
      type: object
      properties:
        numberOfNotifiedThings:
          $ref: '#/components/schemas/NumberOfThings'
          description: The threshold for number of notified things that will initiate the increase in rate of rollout.
        numberOfSucceededThings:
          $ref: '#/components/schemas/NumberOfThings'
          description: The threshold for number of succeeded things that will initiate the increase in rate of rollout.
      description: Allows you to define a criteria to initiate the increase in rate of rollout for a job.
    FailedChecksCount:
      type: integer
    FailedFindingsCount:
      type: integer
    FailedThings:
      type: integer
    FieldName:
      type: string
    FieldType:
      type: string
      enum:
        - Number
        - String
        - Boolean
    Field:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/FieldName'
          description: The name of the field.
        type:
          $ref: '#/components/schemas/FieldType'
          description: The datatype of the field.
      description: Describes the name and data type at a field.
    FileId:
      type: integer
      minimum: 0
      maximum: 255
    Stream:
      type: object
      properties:
        streamId:
          $ref: '#/components/schemas/StreamId'
          description: The stream ID.
        fileId:
          $ref: '#/components/schemas/FileId'
          description: The ID of a file associated with a stream.
      description: Describes a group of files that can be streamed.
    S3Location:
      type: object
      properties:
        bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: The S3 bucket.
        key:
          $ref: '#/components/schemas/S3Key'
          description: The S3 key.
        version:
          $ref: '#/components/schemas/S3Version'
          description: The S3 bucket version.
      description: The S3 location.
    FileLocation:
      type: object
      properties:
        stream:
          $ref: '#/components/schemas/Stream'
          description: The stream that contains the OTA update.
        s3Location:
          $ref: '#/components/schemas/S3Location'
          description: The location of the updated firmware in S3.
      description: The location of the OTA update.
    FileName:
      type: string
    FileType:
      type: integer
      minimum: 0
      maximum: 255
    FirehoseSeparator:
      type: string
      pattern: '([\n\t])|(\r\n)|(,)'
    Forced:
      type: boolean
    FunctionArn:
      type: string
    TinyMaxResults:
      type: integer
      minimum: 1
      maximum: 10
    NextToken:
      type: string
    GetBehaviorModelTrainingSummariesRequest:
      type: object
      title: GetBehaviorModelTrainingSummariesRequest
      properties: {}
    GetCardinalityRequest:
      type: object
      required:
        - queryString
      title: GetCardinalityRequest
      properties:
        indexName:
          $ref: '#/components/schemas/IndexName'
          description: The name of the index to search.
        queryString:
          $ref: '#/components/schemas/QueryString'
          description: The search query.
        aggregationField:
          $ref: '#/components/schemas/AggregationField'
          description: The field to aggregate.
        queryVersion:
          $ref: '#/components/schemas/QueryVersion'
          description: The query version.
    GetEffectivePoliciesRequest:
      type: object
      title: GetEffectivePoliciesRequest
      properties:
        principal:
          $ref: '#/components/schemas/Principal'
          description: 'The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).'
        cognitoIdentityPoolId:
          $ref: '#/components/schemas/CognitoIdentityPoolId'
          description: The Cognito identity pool ID.
    GetIndexingConfigurationRequest:
      type: object
      title: GetIndexingConfigurationRequest
      properties: {}
    ThingIndexingConfiguration:
      type: object
      required:
        - thingIndexingMode
      properties:
        thingIndexingMode:
          $ref: '#/components/schemas/ThingIndexingMode'
          description: '<p>Thing indexing mode. Valid values are:</p> <ul> <li> <p>REGISTRY – Your thing index contains registry data only.</p> </li> <li> <p>REGISTRY_AND_SHADOW - Your thing index contains registry and shadow data.</p> </li> <li> <p>OFF - Thing indexing is disabled.</p> </li> </ul>'
        thingConnectivityIndexingMode:
          $ref: '#/components/schemas/ThingConnectivityIndexingMode'
          description: '<p>Thing connectivity indexing mode. Valid values are: </p> <ul> <li> <p>STATUS – Your thing index contains connectivity status. To enable thing connectivity indexing, thingIndexMode must not be set to OFF.</p> </li> <li> <p>OFF - Thing connectivity status indexing is disabled.</p> </li> </ul>'
        managedFields:
          $ref: '#/components/schemas/Fields'
          description: Contains fields that are indexed and whose types are already known by the Fleet Indexing service.
        customFields:
          $ref: '#/components/schemas/Fields'
          description: Contains custom field names and their data type.
      description: 'The thing indexing configuration. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html">Managing Thing Indexing</a>.'
    ThingGroupIndexingConfiguration:
      type: object
      required:
        - thingGroupIndexingMode
      properties:
        thingGroupIndexingMode:
          $ref: '#/components/schemas/ThingGroupIndexingMode'
          description: Thing group indexing mode.
        managedFields:
          $ref: '#/components/schemas/Fields'
          description: Contains fields that are indexed and whose types are already known by the Fleet Indexing service.
        customFields:
          $ref: '#/components/schemas/Fields'
          description: <p>A list of thing group fields to index. This list cannot contain any managed fields. Use the GetIndexingConfiguration API to get a list of managed fields.</p> <p>Contains custom field names and their data type.</p>
      description: Thing group indexing configuration.
    GetJobDocumentRequest:
      type: object
      title: GetJobDocumentRequest
      properties: {}
    GetLoggingOptionsRequest:
      type: object
      title: GetLoggingOptionsRequest
      properties: {}
      description: The input for the GetLoggingOptions operation.
    GetOTAUpdateRequest:
      type: object
      title: GetOTAUpdateRequest
      properties: {}
    OTAUpdateInfo:
      type: object
      properties:
        otaUpdateId:
          $ref: '#/components/schemas/OTAUpdateId'
          description: The OTA update ID.
        otaUpdateArn:
          $ref: '#/components/schemas/OTAUpdateArn'
          description: The OTA update ARN.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The date when the OTA update was created.
        lastModifiedDate:
          $ref: '#/components/schemas/DateType'
          description: The date when the OTA update was last updated.
        description:
          $ref: '#/components/schemas/OTAUpdateDescription'
          description: A description of the OTA update.
        targets:
          $ref: '#/components/schemas/Targets'
          description: The targets of the OTA update.
        protocols:
          $ref: '#/components/schemas/Protocols'
          description: 'The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified, the target device can choose the protocol.'
        awsJobExecutionsRolloutConfig:
          $ref: '#/components/schemas/AwsJobExecutionsRolloutConfig'
          description: Configuration for the rollout of OTA updates.
        awsJobPresignedUrlConfig:
          $ref: '#/components/schemas/AwsJobPresignedUrlConfig'
          description: Configuration information for pre-signed URLs. Valid when <code>protocols</code> contains HTTP.
        targetSelection:
          $ref: '#/components/schemas/TargetSelection'
          description: 'Specifies whether the OTA update will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the OTA update (SNAPSHOT). If continuous, the OTA update may also be run on a thing when a change is detected in a target. For example, an OTA update will run on a thing when the thing is added to a target group, even after the OTA update was completed by all things originally in the group. '
        otaUpdateFiles:
          $ref: '#/components/schemas/OTAUpdateFiles'
          description: A list of files associated with the OTA update.
        otaUpdateStatus:
          $ref: '#/components/schemas/OTAUpdateStatus'
          description: The status of the OTA update.
        awsIotJobId:
          $ref: '#/components/schemas/AwsIotJobId'
          description: The AWS IoT job ID associated with the OTA update.
        awsIotJobArn:
          $ref: '#/components/schemas/AwsIotJobArn'
          description: The AWS IoT job ARN associated with the OTA update.
        errorInfo:
          $ref: '#/components/schemas/ErrorInfo'
          description: Error information associated with the OTA update.
        additionalParameters:
          $ref: '#/components/schemas/AdditionalParameterMap'
          description: A collection of name/value pairs
      description: Information about an OTA update.
    PercentList:
      type: array
      items:
        $ref: '#/components/schemas/Percent'
    GetPercentilesRequest:
      type: object
      required:
        - queryString
      title: GetPercentilesRequest
      properties:
        indexName:
          $ref: '#/components/schemas/IndexName'
          description: The name of the index to search.
        queryString:
          $ref: '#/components/schemas/QueryString'
          description: The query string.
        aggregationField:
          $ref: '#/components/schemas/AggregationField'
          description: The field to aggregate.
        queryVersion:
          $ref: '#/components/schemas/QueryVersion'
          description: The query version.
        percents:
          $ref: '#/components/schemas/PercentList'
          description: The percentile groups returned.
    Percentiles:
      type: array
      items:
        $ref: '#/components/schemas/PercentPair'
    GetPolicyRequest:
      type: object
      title: GetPolicyRequest
      properties: {}
      description: The input for the GetPolicy operation.
    GetPolicyVersionRequest:
      type: object
      title: GetPolicyVersionRequest
      properties: {}
      description: The input for the GetPolicyVersion operation.
    GetRegistrationCodeRequest:
      type: object
      title: GetRegistrationCodeRequest
      properties: {}
      description: The input to the GetRegistrationCode operation.
    RegistrationCode:
      type: string
      pattern: '(0x)?[a-fA-F0-9]+'
      minLength: 64
      maxLength: 64
    GetStatisticsRequest:
      type: object
      required:
        - queryString
      title: GetStatisticsRequest
      properties:
        indexName:
          $ref: '#/components/schemas/IndexName'
          description: The name of the index to search. The default value is <code>AWS_Things</code>.
        queryString:
          $ref: '#/components/schemas/QueryString'
          description: The query used to search. You can specify "*" for the query string to get the count of all indexed things in your AWS account.
        aggregationField:
          $ref: '#/components/schemas/AggregationField'
          description: The aggregation field name.
        queryVersion:
          $ref: '#/components/schemas/QueryVersion'
          description: The version of the query used to search.
    Statistics:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/Count'
          description: The count of things that match the query.
        average:
          $ref: '#/components/schemas/Average'
          description: The average of the aggregated field values.
        sum:
          $ref: '#/components/schemas/Sum'
          description: The sum of the aggregated field values.
        minimum:
          $ref: '#/components/schemas/Minimum'
          description: The minimum aggregated field value.
        maximum:
          $ref: '#/components/schemas/Maximum'
          description: The maximum aggregated field value.
        sumOfSquares:
          $ref: '#/components/schemas/SumOfSquares'
          description: The sum of the squares of the aggregated field values.
        variance:
          $ref: '#/components/schemas/Variance'
          description: The variance of the aggregated field values.
        stdDeviation:
          $ref: '#/components/schemas/StdDeviation'
          description: The standard deviation of the aggregated field values.
      description: 'A map of key-value pairs for all supported statistics. Currently, only count is supported.'
    GetTopicRuleDestinationRequest:
      type: object
      title: GetTopicRuleDestinationRequest
      properties: {}
    GetTopicRuleRequest:
      type: object
      title: GetTopicRuleRequest
      properties: {}
      description: The input for the GetTopicRule operation.
    RuleArn:
      type: string
    TopicRule:
      type: object
      properties:
        ruleName:
          $ref: '#/components/schemas/RuleName'
          description: The name of the rule.
        sql:
          $ref: '#/components/schemas/SQL'
          description: 'The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.'
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the rule.
        createdAt:
          $ref: '#/components/schemas/CreatedAtDate'
          description: The date and time the rule was created.
        actions:
          $ref: '#/components/schemas/ActionList'
          description: The actions associated with the rule.
        ruleDisabled:
          $ref: '#/components/schemas/IsDisabled'
          description: Specifies whether the rule is disabled.
        awsIotSqlVersion:
          $ref: '#/components/schemas/AwsIotSqlVersion'
          description: The version of the SQL rules engine to use when evaluating the rule.
        errorAction:
          $ref: '#/components/schemas/Action'
          description: The action to perform when an error occurs.
      description: Describes a rule.
    GetV2LoggingOptionsRequest:
      type: object
      title: GetV2LoggingOptionsRequest
      properties: {}
    HeaderKey:
      type: string
      minLength: 1
      maxLength: 256
    HttpActionHeader:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: '#/components/schemas/HeaderKey'
          description: The HTTP header key.
        value:
          $ref: '#/components/schemas/HeaderValue'
          description: The HTTP header value. Substitution templates are supported.
      description: The HTTP action header.
    HeaderList:
      type: array
      items:
        $ref: '#/components/schemas/HttpActionHeader'
      minItems: 0
      maxItems: 100
    HeaderValue:
      type: string
    Url:
      type: string
      maxLength: 2000
    HttpAuthorization:
      type: object
      properties:
        sigv4:
          $ref: '#/components/schemas/SigV4Authorization'
          description: 'Use Sig V4 authorization. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>.'
      description: The authorization method used to send messages.
    SigV4Authorization:
      type: object
      required:
        - signingRegion
        - serviceName
        - roleArn
      properties:
        signingRegion:
          $ref: '#/components/schemas/SigningRegion'
          description: The signing region.
        serviceName:
          $ref: '#/components/schemas/ServiceName'
          description: The service name to use while signing with Sig V4.
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the signing role.
      description: 'For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 signing process</a>.'
    HttpContext:
      type: object
      properties:
        headers:
          $ref: '#/components/schemas/HttpHeaders'
          description: The header keys and values in an HTTP authorization request.
        queryString:
          $ref: '#/components/schemas/HttpQueryString'
          description: The query string keys and values in an HTTP authorization request.
      description: Specifies the HTTP context to use for the test authorizer request.
    HttpHeaderName:
      type: string
      minLength: 1
      maxLength: 8192
    HttpHeaderValue:
      type: string
      minLength: 1
      maxLength: 8192
    HttpUrlDestinationProperties:
      type: object
      properties:
        confirmationUrl:
          $ref: '#/components/schemas/Url'
          description: The URL used to confirm the HTTP topic rule destination URL.
      description: HTTP URL destination properties.
    HttpUrlDestinationSummary:
      type: object
      properties:
        confirmationUrl:
          $ref: '#/components/schemas/Url'
          description: The URL used to confirm ownership of or access to the HTTP topic rule destination URL.
      description: Information about an HTTP URL destination.
    InProgressChecksCount:
      type: integer
    InProgressThings:
      type: integer
    IndexNamesList:
      type: array
      items:
        $ref: '#/components/schemas/IndexName'
    InputName:
      type: string
      minLength: 1
      maxLength: 128
    MessageId:
      type: string
      maxLength: 128
    PutAssetPropertyValueEntryList:
      type: array
      items:
        $ref: '#/components/schemas/PutAssetPropertyValueEntry'
      minItems: 1
    IsAuthenticated:
      type: boolean
    JobStatus:
      type: string
      enum:
        - IN_PROGRESS
        - CANCELED
        - COMPLETED
        - DELETION_IN_PROGRESS
    JobProcessDetails:
      type: object
      properties:
        processingTargets:
          $ref: '#/components/schemas/ProcessingTargetNameList'
          description: The target devices to which the job execution is being rolled out. This value will be null after the job execution has finished rolling out to all the target devices.
        numberOfCanceledThings:
          $ref: '#/components/schemas/CanceledThings'
          description: The number of things that cancelled the job.
        numberOfSucceededThings:
          $ref: '#/components/schemas/SucceededThings'
          description: The number of things which successfully completed the job.
        numberOfFailedThings:
          $ref: '#/components/schemas/FailedThings'
          description: The number of things that failed executing the job.
        numberOfRejectedThings:
          $ref: '#/components/schemas/RejectedThings'
          description: The number of things that rejected the job.
        numberOfQueuedThings:
          $ref: '#/components/schemas/QueuedThings'
          description: The number of things that are awaiting execution of the job.
        numberOfInProgressThings:
          $ref: '#/components/schemas/InProgressThings'
          description: The number of things currently executing the job.
        numberOfRemovedThings:
          $ref: '#/components/schemas/RemovedThings'
          description: The number of things that are no longer scheduled to execute the job because they have been deleted or have been removed from the group that was a target of the job.
        numberOfTimedOutThings:
          $ref: '#/components/schemas/TimedOutThings'
          description: The number of things whose job execution status is <code>TIMED_OUT</code>.
      description: The job process details.
    JobExecutionStatus:
      type: string
      enum:
        - QUEUED
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
        - TIMED_OUT
        - REJECTED
        - REMOVED
        - CANCELED
    JobExecutionStatusDetails:
      type: object
      properties:
        detailsMap:
          $ref: '#/components/schemas/DetailsMap'
          description: The job execution status.
      description: Details of the job execution status.
    VersionNumber:
      type: integer
    JobExecutionSummary:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/JobExecutionStatus'
          description: The status of the job execution.
        queuedAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job execution was queued.'
        startedAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job execution started.'
        lastUpdatedAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job execution was last updated.'
        executionNumber:
          $ref: '#/components/schemas/ExecutionNumber'
          description: A string (consisting of the digits "0" through "9") which identifies this particular job execution on this particular device. It can be used later in commands which return or update job execution information.
      description: The job execution summary.
    JobExecutionSummaryForJob:
      type: object
      properties:
        thingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing on which the job execution is running.
        jobExecutionSummary:
          $ref: '#/components/schemas/JobExecutionSummary'
          description: Contains a subset of information about a job execution.
      description: Contains a summary of information about job executions for a specific job.
    JobExecutionSummaryForJobList:
      type: array
      items:
        $ref: '#/components/schemas/JobExecutionSummaryForJob'
    JobExecutionSummaryForThing:
      type: object
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was created.
        jobExecutionSummary:
          $ref: '#/components/schemas/JobExecutionSummary'
          description: Contains a subset of information about a job execution.
      description: The job execution summary for a thing.
    JobExecutionSummaryForThingList:
      type: array
      items:
        $ref: '#/components/schemas/JobExecutionSummaryForThing'
    ProcessingTargetNameList:
      type: array
      items:
        $ref: '#/components/schemas/ProcessingTargetName'
    SucceededThings:
      type: integer
    RejectedThings:
      type: integer
    QueuedThings:
      type: integer
    RemovedThings:
      type: integer
    TimedOutThings:
      type: integer
    JobSummary:
      type: object
      properties:
        jobArn:
          $ref: '#/components/schemas/JobArn'
          description: The job ARN.
        jobId:
          $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was created.
        thingGroupId:
          $ref: '#/components/schemas/ThingGroupId'
          description: The ID of the thing group.
        targetSelection:
          $ref: '#/components/schemas/TargetSelection'
          description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group.'
        status:
          $ref: '#/components/schemas/JobStatus'
          description: The job summary status.
        createdAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job was created.'
        lastUpdatedAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job was last updated.'
        completedAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job completed.'
      description: The job summary.
    JobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/JobSummary'
    JobTemplateSummary:
      type: object
      properties:
        jobTemplateArn:
          $ref: '#/components/schemas/JobTemplateArn'
          description: The ARN of the job template.
        jobTemplateId:
          $ref: '#/components/schemas/JobTemplateId'
          description: The unique identifier of the job template.
        description:
          $ref: '#/components/schemas/JobDescription'
          description: A description of the job template.
        createdAt:
          $ref: '#/components/schemas/DateType'
          description: 'The time, in seconds since the epoch, when the job template was created.'
      description: An object that contains information about the job template.
    JobTemplateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/JobTemplateSummary'
    JsonDocument:
      type: string
    Key:
      type: string
    KeyName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    PublicKey:
      type: string
      minLength: 1
    PrivateKey:
      type: string
      minLength: 1
      format: password
    StreamName:
      type: string
    PartitionKey:
      type: string
    LaserMaxResults:
      type: integer
      minimum: 1
      maximum: 250
    LastUpdatedAtDate:
      type: string
      format: date-time
    ListSuppressedAlerts:
      type: boolean
    MaxResults:
      type: integer
      minimum: 1
      maximum: 250
    ListActiveViolationsRequest:
      type: object
      title: ListActiveViolationsRequest
      properties: {}
    Recursive:
      type: boolean
    Marker:
      type: string
      pattern: '[A-Za-z0-9+/]+={0,2}'
      maxLength: 1024
    PageSize:
      type: integer
      minimum: 1
      maximum: 250
    ListAttachedPoliciesRequest:
      type: object
      title: ListAttachedPoliciesRequest
      properties: {}
    ListSuppressedFindings:
      type: boolean
    ListAuditFindingsRequest:
      type: object
      title: ListAuditFindingsRequest
      properties:
        taskId:
          $ref: '#/components/schemas/AuditTaskId'
          description: 'A filter to limit results to the audit with the specified ID. You must specify either the taskId or the startTime and endTime, but not both.'
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
          description: A filter to limit results to the findings for the specified audit check.
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
          description: Information identifying the noncompliant resource.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time. The default is 25.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        startTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'A filter to limit results to those found after the specified time. You must specify either the startTime and endTime or the taskId, but not both.'
        endTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'A filter to limit results to those found before the specified time. You must specify either the startTime and endTime or the taskId, but not both.'
        listSuppressedFindings:
          $ref: '#/components/schemas/ListSuppressedFindings'
          description: ' Boolean flag indicating whether only the suppressed findings or the unsuppressed findings should be listed. If this parameter isn''t provided, the response will list both suppressed and unsuppressed findings. '
    ListAuditMitigationActionsExecutionsRequest:
      type: object
      title: ListAuditMitigationActionsExecutionsRequest
      properties: {}
    ListAuditMitigationActionsTasksRequest:
      type: object
      title: ListAuditMitigationActionsTasksRequest
      properties: {}
    ListAuditSuppressionsRequest:
      type: object
      title: ListAuditSuppressionsRequest
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        ascendingOrder:
          $ref: '#/components/schemas/AscendingOrder'
          description: ' Determines whether suppressions are listed in ascending order by expiration date or not. If parameter isn''t provided, <code>ascendingOrder=true</code>. '
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' The token for the next set of results. '
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: ' The maximum number of results to return at one time. The default is 25. '
    ListAuditTasksRequest:
      type: object
      title: ListAuditTasksRequest
      properties: {}
    ListAuthorizersRequest:
      type: object
      title: ListAuthorizersRequest
      properties: {}
    RegistryMaxResults:
      type: integer
      minimum: 1
      maximum: 250
    ListBillingGroupsRequest:
      type: object
      title: ListBillingGroupsRequest
      properties: {}
    ListCACertificatesRequest:
      type: object
      title: ListCACertificatesRequest
      properties: {}
      description: Input for the ListCACertificates operation.
    ListCertificatesByCARequest:
      type: object
      title: ListCertificatesByCARequest
      properties: {}
      description: The input to the ListCertificatesByCA operation.
    ListCertificatesRequest:
      type: object
      title: ListCertificatesRequest
      properties: {}
      description: The input for the ListCertificates operation.
    ListCustomMetricsRequest:
      type: object
      title: ListCustomMetricsRequest
      properties: {}
    MetricNames:
      type: array
      items:
        $ref: '#/components/schemas/MetricName'
    ListDetectMitigationActionsExecutionsRequest:
      type: object
      title: ListDetectMitigationActionsExecutionsRequest
      properties: {}
    ListDetectMitigationActionsTasksRequest:
      type: object
      title: ListDetectMitigationActionsTasksRequest
      properties: {}
    ListDimensionsRequest:
      type: object
      title: ListDimensionsRequest
      properties: {}
    ListDomainConfigurationsRequest:
      type: object
      title: ListDomainConfigurationsRequest
      properties: {}
    QueryMaxResults:
      type: integer
      minimum: 1
      maximum: 500
    ListIndicesRequest:
      type: object
      title: ListIndicesRequest
      properties: {}
    ListJobExecutionsForJobRequest:
      type: object
      title: ListJobExecutionsForJobRequest
      properties: {}
    ListJobExecutionsForThingRequest:
      type: object
      title: ListJobExecutionsForThingRequest
      properties: {}
    ListJobTemplatesRequest:
      type: object
      title: ListJobTemplatesRequest
      properties: {}
    ListJobsRequest:
      type: object
      title: ListJobsRequest
      properties: {}
    ListMitigationActionsRequest:
      type: object
      title: ListMitigationActionsRequest
      properties: {}
    MitigationActionIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/MitigationActionIdentifier'
    ListOTAUpdatesRequest:
      type: object
      title: ListOTAUpdatesRequest
      properties: {}
    OTAUpdatesSummary:
      type: array
      items:
        $ref: '#/components/schemas/OTAUpdateSummary'
    ListOutgoingCertificatesRequest:
      type: object
      title: ListOutgoingCertificatesRequest
      properties: {}
      description: The input to the ListOutgoingCertificates operation.
    OutgoingCertificates:
      type: array
      items:
        $ref: '#/components/schemas/OutgoingCertificate'
    ListPoliciesRequest:
      type: object
      title: ListPoliciesRequest
      properties: {}
      description: The input for the ListPolicies operation.
    ListPolicyPrincipalsRequest:
      type: object
      title: ListPolicyPrincipalsRequest
      properties: {}
      description: The input for the ListPolicyPrincipals operation.
    Principals:
      type: array
      items:
        $ref: '#/components/schemas/PrincipalArn'
    ListPolicyVersionsRequest:
      type: object
      title: ListPolicyVersionsRequest
      properties: {}
      description: The input for the ListPolicyVersions operation.
    PolicyVersions:
      type: array
      items:
        $ref: '#/components/schemas/PolicyVersion'
    ListPrincipalPoliciesRequest:
      type: object
      title: ListPrincipalPoliciesRequest
      properties: {}
      description: The input for the ListPrincipalPolicies operation.
    ListPrincipalThingsRequest:
      type: object
      title: ListPrincipalThingsRequest
      properties: {}
      description: The input for the ListPrincipalThings operation.
    ThingNameList:
      type: array
      items:
        $ref: '#/components/schemas/ThingName'
    ListProvisioningTemplateVersionsRequest:
      type: object
      title: ListProvisioningTemplateVersionsRequest
      properties: {}
    ProvisioningTemplateVersionListing:
      type: array
      items:
        $ref: '#/components/schemas/ProvisioningTemplateVersionSummary'
    ListProvisioningTemplatesRequest:
      type: object
      title: ListProvisioningTemplatesRequest
      properties: {}
    ProvisioningTemplateListing:
      type: array
      items:
        $ref: '#/components/schemas/ProvisioningTemplateSummary'
    ListRoleAliasesRequest:
      type: object
      title: ListRoleAliasesRequest
      properties: {}
    RoleAliases:
      type: array
      items:
        $ref: '#/components/schemas/RoleAlias'
    ListScheduledAuditsRequest:
      type: object
      title: ListScheduledAuditsRequest
      properties: {}
    ScheduledAuditMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/ScheduledAuditMetadata'
    ListSecurityProfilesForTargetRequest:
      type: object
      title: ListSecurityProfilesForTargetRequest
      properties: {}
    SecurityProfileTargetMappings:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileTargetMapping'
    ListSecurityProfilesRequest:
      type: object
      title: ListSecurityProfilesRequest
      properties: {}
    SecurityProfileIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileIdentifier'
    ListStreamsRequest:
      type: object
      title: ListStreamsRequest
      properties: {}
    StreamsSummary:
      type: array
      items:
        $ref: '#/components/schemas/StreamSummary'
    ResourceArn:
      type: string
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListTargetsForPolicyRequest:
      type: object
      title: ListTargetsForPolicyRequest
      properties: {}
    PolicyTargets:
      type: array
      items:
        $ref: '#/components/schemas/PolicyTarget'
    ListTargetsForSecurityProfileRequest:
      type: object
      title: ListTargetsForSecurityProfileRequest
      properties: {}
    SecurityProfileTargets:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileTarget'
    ListThingGroupsForThingRequest:
      type: object
      title: ListThingGroupsForThingRequest
      properties: {}
    ThingGroupNameAndArnList:
      type: array
      items:
        $ref: '#/components/schemas/GroupNameAndArn'
    RecursiveWithoutDefault:
      type: boolean
    ListThingGroupsRequest:
      type: object
      title: ListThingGroupsRequest
      properties: {}
    ListThingPrincipalsRequest:
      type: object
      title: ListThingPrincipalsRequest
      properties: {}
      description: The input for the ListThingPrincipal operation.
    ReportType:
      type: string
      enum:
        - ERRORS
        - RESULTS
    ListThingRegistrationTaskReportsRequest:
      type: object
      title: ListThingRegistrationTaskReportsRequest
      properties: {}
    S3FileUrlList:
      type: array
      items:
        $ref: '#/components/schemas/S3FileUrl'
    ListThingRegistrationTasksRequest:
      type: object
      title: ListThingRegistrationTasksRequest
      properties: {}
    TaskIdList:
      type: array
      items:
        $ref: '#/components/schemas/TaskId'
    ListThingTypesRequest:
      type: object
      title: ListThingTypesRequest
      properties: {}
      description: The input for the ListThingTypes operation.
    ThingTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ThingTypeDefinition'
    ListThingsInBillingGroupRequest:
      type: object
      title: ListThingsInBillingGroupRequest
      properties: {}
    ListThingsInThingGroupRequest:
      type: object
      title: ListThingsInThingGroupRequest
      properties: {}
    usePrefixAttributeValue:
      type: boolean
    ListThingsRequest:
      type: object
      title: ListThingsRequest
      properties: {}
      description: The input for the ListThings operation.
    ThingAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/ThingAttribute'
    TopicRuleDestinationMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListTopicRuleDestinationsRequest:
      type: object
      title: ListTopicRuleDestinationsRequest
      properties: {}
    TopicRuleDestinationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TopicRuleDestinationSummary'
    Topic:
      type: string
    TopicRuleMaxResults:
      type: integer
      minimum: 1
      maximum: 10000
    ListTopicRulesRequest:
      type: object
      title: ListTopicRulesRequest
      properties: {}
      description: The input for the ListTopicRules operation.
    TopicRuleList:
      type: array
      items:
        $ref: '#/components/schemas/TopicRuleListItem'
    SkyfallMaxResults:
      type: integer
      minimum: 1
      maximum: 250
    ListV2LoggingLevelsRequest:
      type: object
      title: ListV2LoggingLevelsRequest
      properties: {}
    LogTargetConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/LogTargetConfiguration'
    ListViolationEventsRequest:
      type: object
      title: ListViolationEventsRequest
      properties: {}
    ViolationEvents:
      type: array
      items:
        $ref: '#/components/schemas/ViolationEvent'
    LogTarget:
      type: object
      required:
        - targetType
      properties:
        targetType:
          $ref: '#/components/schemas/LogTargetType'
          description: The target type.
        targetName:
          $ref: '#/components/schemas/LogTargetName'
          description: The target name.
      description: A log target.
    LogTargetConfiguration:
      type: object
      properties:
        logTarget:
          $ref: '#/components/schemas/LogTarget'
          description: A log target
        logLevel:
          $ref: '#/components/schemas/LogLevel'
          description: The logging level.
      description: The target configuration.
    LoggingOptionsPayload:
      type: object
      required:
        - roleArn
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access.
        logLevel:
          $ref: '#/components/schemas/LogLevel'
          description: The log level.
      description: Describes the logging options payload.
    Maximum:
      type: number
      format: double
    Message:
      type: string
      maxLength: 128
    MessageFormat:
      type: string
      enum:
        - RAW
        - JSON
    UnsignedLong:
      type: integer
      minimum: 0
    Ports:
      type: array
      items:
        $ref: '#/components/schemas/Port'
    Number:
      type: number
      format: double
    NumberList:
      type: array
      items:
        $ref: '#/components/schemas/Number'
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/stringValue'
    Minimum:
      type: number
      format: double
    MissingContextValue:
      type: string
    MitigationAction:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/MitigationActionName'
          description: A user-friendly name for the mitigation action.
        id:
          $ref: '#/components/schemas/MitigationActionId'
          description: A unique identifier for the mitigation action.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The IAM role ARN used to apply this mitigation action.
        actionParams:
          $ref: '#/components/schemas/MitigationActionParams'
          description: 'The set of parameters for this mitigation action. The parameters vary, depending on the kind of action you apply.'
      description: Describes which changes should be applied as part of a mitigation action.
    MitigationActionIdentifier:
      type: object
      properties:
        actionName:
          $ref: '#/components/schemas/MitigationActionName'
          description: The friendly name of the mitigation action.
        actionArn:
          $ref: '#/components/schemas/MitigationActionArn'
          description: The IAM role ARN used to apply this mitigation action.
        creationDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date when this mitigation action was created.
      description: Information that identifies a mitigation action. This information is returned by ListMitigationActions.
    MqttContext:
      type: object
      properties:
        username:
          $ref: '#/components/schemas/MqttUsername'
          description: The value of the <code>username</code> key in an MQTT authorization request.
        password:
          $ref: '#/components/schemas/MqttPassword'
          description: The value of the <code>password</code> key in an MQTT authorization request.
        clientId:
          $ref: '#/components/schemas/MqttClientId'
          description: The value of the <code>clientId</code> key in an MQTT authorization request.
      description: Specifies the MQTT context to use for the test authorizer request
    NonCompliantChecksCount:
      type: integer
    ResourceType:
      type: string
      enum:
        - DEVICE_CERTIFICATE
        - CA_CERTIFICATE
        - IOT_POLICY
        - COGNITO_IDENTITY_POOL
        - CLIENT_ID
        - ACCOUNT_SETTINGS
        - ROLE_ALIAS
        - IAM_ROLE
    StringMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    NullableBoolean:
      type: boolean
    NumberOfThings:
      type: integer
      minimum: 1
    OTAUpdateFileVersion:
      type: string
    OTAUpdateSummary:
      type: object
      properties:
        otaUpdateId:
          $ref: '#/components/schemas/OTAUpdateId'
          description: The OTA update ID.
        otaUpdateArn:
          $ref: '#/components/schemas/OTAUpdateArn'
          description: The OTA update ARN.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The date when the OTA update was created.
      description: An OTA update summary.
    OutgoingCertificate:
      type: object
      properties:
        certificateArn:
          $ref: '#/components/schemas/CertificateArn'
          description: The certificate ARN.
        certificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The certificate ID.
        transferredTo:
          $ref: '#/components/schemas/AwsAccountId'
          description: The AWS account to which the transfer was made.
        transferDate:
          $ref: '#/components/schemas/DateType'
          description: The date the transfer was initiated.
        transferMessage:
          $ref: '#/components/schemas/Message'
          description: The transfer message.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The certificate creation date.
      description: A certificate that has been transferred but not yet accepted.
    Parameter:
      type: string
    Parameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Value'
    PercentValue:
      type: number
      format: double
    PercentPair:
      type: object
      properties:
        percent:
          $ref: '#/components/schemas/Percent'
          description: The percentile.
        value:
          $ref: '#/components/schemas/PercentValue'
          description: The value of the percentile.
      description: Describes the percentile and percentile value.
    Platform:
      type: string
    Policy:
      type: object
      properties:
        policyName:
          $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyArn:
          $ref: '#/components/schemas/PolicyArn'
          description: The policy ARN.
      description: Describes an AWS IoT policy.
    PolicyDocuments:
      type: array
      items:
        $ref: '#/components/schemas/PolicyDocument'
    PolicyNames:
      type: array
      items:
        $ref: '#/components/schemas/PolicyName'
    PolicyTemplateName:
      type: string
      enum:
        - BLANK_POLICY
    PolicyVersion:
      type: object
      properties:
        versionId:
          $ref: '#/components/schemas/PolicyVersionId'
          description: The policy version ID.
        isDefaultVersion:
          $ref: '#/components/schemas/IsDefaultVersion'
          description: Specifies whether the policy version is the default.
        createDate:
          $ref: '#/components/schemas/DateType'
          description: The date and time the policy was created.
      description: Describes a policy version.
    Port:
      type: integer
      minimum: 0
      maximum: 65535
    Prefix:
      type: string
    PrincipalArn:
      type: string
    PrincipalId:
      type: string
      pattern: '[a-zA-Z0-9]+'
      minLength: 1
      maxLength: 128
    ProcessingTargetName:
      type: string
    ProvisioningTemplateSummary:
      type: object
      properties:
        templateArn:
          $ref: '#/components/schemas/TemplateArn'
          description: The ARN of the fleet provisioning template.
        templateName:
          $ref: '#/components/schemas/TemplateName'
          description: The name of the fleet provisioning template.
        description:
          $ref: '#/components/schemas/TemplateDescription'
          description: The description of the fleet provisioning template.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The date when the fleet provisioning template summary was created.
        lastModifiedDate:
          $ref: '#/components/schemas/DateType'
          description: The date when the fleet provisioning template summary was last modified.
        enabled:
          $ref: '#/components/schemas/Enabled'
          description: 'True if the fleet provision template is enabled, otherwise false.'
      description: A summary of information about a fleet provisioning template.
    ProvisioningTemplateVersionSummary:
      type: object
      properties:
        versionId:
          $ref: '#/components/schemas/TemplateVersionId'
          description: The ID of the fleet privisioning template version.
        creationDate:
          $ref: '#/components/schemas/DateType'
          description: The date when the fleet provisioning template version was created
        isDefaultVersion:
          $ref: '#/components/schemas/IsDefaultVersion'
          description: 'True if the fleet provisioning template version is the default version, otherwise false.'
      description: A summary of information about a fleet provision template version.
    SnsTopicArn:
      type: string
      maxLength: 350
    PutAssetPropertyValueEntry:
      type: object
      required:
        - propertyValues
      properties:
        entryId:
          $ref: '#/components/schemas/AssetPropertyEntryId'
          description: Optional. A unique identifier for this entry that you can define to better track which message caused an error in case of failure. Accepts substitution templates. Defaults to a new UUID.
        assetId:
          $ref: '#/components/schemas/AssetId'
          description: The ID of the AWS IoT SiteWise asset. You must specify either a <code>propertyAlias</code> or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution templates.
        propertyId:
          $ref: '#/components/schemas/AssetPropertyId'
          description: The ID of the asset's property. You must specify either a <code>propertyAlias</code> or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution templates.
        propertyAlias:
          $ref: '#/components/schemas/AssetPropertyAlias'
          description: The name of the property alias associated with your asset property. You must specify either a <code>propertyAlias</code> or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution templates.
        propertyValues:
          $ref: '#/components/schemas/AssetPropertyValueList'
          description: 'A list of property values to insert that each contain timestamp, quality, and value (TQV) information.'
      description: An asset property value entry containing the following information.
    Qos:
      type: integer
      minimum: 0
      maximum: 1
    QueueUrl:
      type: string
    RegisterCACertificateRequest:
      type: object
      required:
        - caCertificate
        - verificationCertificate
      title: RegisterCACertificateRequest
      properties:
        caCertificate:
          $ref: '#/components/schemas/CertificatePem'
          description: The CA certificate.
        verificationCertificate:
          $ref: '#/components/schemas/CertificatePem'
          description: The private key verification certificate.
        registrationConfig:
          $ref: '#/components/schemas/RegistrationConfig'
          description: Information about the registration configuration.
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>Metadata which can be used to manage the CA certificate.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
      description: The input to the RegisterCACertificate operation.
    SetAsActiveFlag:
      type: boolean
    RegisterCertificateRequest:
      type: object
      required:
        - certificatePem
      title: RegisterCertificateRequest
      properties:
        certificatePem:
          $ref: '#/components/schemas/CertificatePem'
          description: 'The certificate data, in PEM format.'
        caCertificatePem:
          $ref: '#/components/schemas/CertificatePem'
          description: The CA certificate used to sign the device certificate being registered.
        status:
          $ref: '#/components/schemas/CertificateStatus'
          description: The status of the register certificate request.
      description: The input to the RegisterCertificate operation.
    RegisterCertificateWithoutCARequest:
      type: object
      required:
        - certificatePem
      title: RegisterCertificateWithoutCARequest
      properties:
        certificatePem:
          $ref: '#/components/schemas/CertificatePem'
          description: 'The certificate data, in PEM format.'
        status:
          $ref: '#/components/schemas/CertificateStatus'
          description: The status of the register certificate request.
    RegisterThingRequest:
      type: object
      required:
        - templateBody
      title: RegisterThingRequest
      properties:
        templateBody:
          $ref: '#/components/schemas/TemplateBody'
          description: 'The provisioning template. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-w-cert.html">Provisioning Devices That Have Device Certificates</a> for more information.'
        parameters:
          $ref: '#/components/schemas/Parameters'
          description: 'The parameters for provisioning a thing. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html">Provisioning Templates</a> for more information.'
    ResourceArns:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ResourceArn'
    RejectCertificateTransferRequest:
      type: object
      title: RejectCertificateTransferRequest
      properties:
        rejectReason:
          $ref: '#/components/schemas/Message'
          description: The reason the certificate transfer was rejected.
      description: The input for the RejectCertificateTransfer operation.
    RelatedResource:
      type: object
      properties:
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: The type of resource.
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
          description: Information that identifies the resource.
        additionalInfo:
          $ref: '#/components/schemas/StringMap'
          description: Other information about the resource.
      description: Information about a related resource.
    RemoveAuthorizerConfig:
      type: boolean
    RemoveAutoRegistration:
      type: boolean
    RemoveHook:
      type: boolean
    RemoveThingFromBillingGroupRequest:
      type: object
      title: RemoveThingFromBillingGroupRequest
      properties:
        billingGroupName:
          $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group.
        billingGroupArn:
          $ref: '#/components/schemas/BillingGroupArn'
          description: The ARN of the billing group.
        thingName:
          $ref: '#/components/schemas/ThingName'
          description: The name of the thing to be removed from the billing group.
        thingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to be removed from the billing group.
    RemoveThingFromThingGroupRequest:
      type: object
      title: RemoveThingFromThingGroupRequest
      properties:
        thingGroupName:
          $ref: '#/components/schemas/ThingGroupName'
          description: The group name.
        thingGroupArn:
          $ref: '#/components/schemas/ThingGroupArn'
          description: The group ARN.
        thingName:
          $ref: '#/components/schemas/ThingName'
          description: The name of the thing to remove from the group.
        thingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to remove from the group.
    RemoveThingType:
      type: boolean
    ReplaceTopicRuleRequest:
      type: object
      required:
        - topicRulePayload
      title: ReplaceTopicRuleRequest
      properties:
        topicRulePayload:
          $ref: '#/components/schemas/TopicRulePayload'
          description: The rule payload.
      description: The input for the ReplaceTopicRule operation.
    TopicPattern:
      type: string
    Resource:
      type: string
      maxLength: 2048
    ResourceLogicalId:
      type: string
    S3Bucket:
      type: string
      minLength: 1
    S3FileUrl:
      type: string
      maxLength: 65535
    S3Key:
      type: string
      minLength: 1
    S3Version:
      type: string
    SalesforceToken:
      type: string
      minLength: 40
    SalesforceEndpoint:
      type: string
      pattern: 'https://ingestion-[a-zA-Z0-9]{1,12}\.[a-zA-Z0-9]+\.((sfdc-matrix\.net)|(sfdcnow\.com))/streams/\w{1,20}/\w{1,20}/event'
      maxLength: 2000
    ScheduledAuditMetadata:
      type: object
      properties:
        scheduledAuditName:
          $ref: '#/components/schemas/ScheduledAuditName'
          description: The name of the scheduled audit.
        scheduledAuditArn:
          $ref: '#/components/schemas/ScheduledAuditArn'
          description: The ARN of the scheduled audit.
        frequency:
          $ref: '#/components/schemas/AuditFrequency'
          description: How often the scheduled audit occurs.
        dayOfMonth:
          $ref: '#/components/schemas/DayOfMonth'
          description: 'The day of the month on which the scheduled audit is run (if the <code>frequency</code> is "MONTHLY"). If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
          description: The day of the week on which the scheduled audit is run (if the <code>frequency</code> is "WEEKLY" or "BIWEEKLY").
      description: Information about the scheduled audit.
    SearchIndexRequest:
      type: object
      required:
        - queryString
      title: SearchIndexRequest
      properties:
        indexName:
          $ref: '#/components/schemas/IndexName'
          description: The search index name.
        queryString:
          $ref: '#/components/schemas/QueryString'
          description: The search query string.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token used to get the next set of results, or <code>null</code> if there are no additional results.'
        maxResults:
          $ref: '#/components/schemas/QueryMaxResults'
          description: The maximum number of results to return at one time.
        queryVersion:
          $ref: '#/components/schemas/QueryVersion'
          description: The query version.
    ThingDocumentList:
      type: array
      items:
        $ref: '#/components/schemas/ThingDocument'
    ThingGroupDocumentList:
      type: array
      items:
        $ref: '#/components/schemas/ThingGroupDocument'
    Seconds:
      type: integer
    SecurityGroupId:
      type: string
    SecurityGroupList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    SecurityProfileIdentifier:
      type: object
      required:
        - name
        - arn
      properties:
        name:
          $ref: '#/components/schemas/SecurityProfileName'
          description: The name you've given to the security profile.
        arn:
          $ref: '#/components/schemas/SecurityProfileArn'
          description: The ARN of the security profile.
      description: Identifying information for a Device Defender security profile.
    SecurityProfileTarget:
      type: object
      required:
        - arn
      properties:
        arn:
          $ref: '#/components/schemas/SecurityProfileTargetArn'
          description: The ARN of the security profile.
      description: A target to which an alert is sent when a security profile behavior is violated.
    SecurityProfileTargetMapping:
      type: object
      properties:
        securityProfileIdentifier:
          $ref: '#/components/schemas/SecurityProfileIdentifier'
          description: Information that identifies the security profile.
        target:
          $ref: '#/components/schemas/SecurityProfileTarget'
          description: Information about the target (thing group) associated with the security profile.
      description: Information about a security profile and the target associated with it.
    ServerCertificateStatus:
      type: string
      enum:
        - INVALID
        - VALID
    ServerCertificateStatusDetail:
      type: string
    ServerCertificateSummary:
      type: object
      properties:
        serverCertificateArn:
          $ref: '#/components/schemas/AcmCertificateArn'
          description: The ARN of the server certificate.
        serverCertificateStatus:
          $ref: '#/components/schemas/ServerCertificateStatus'
          description: The status of the server certificate.
        serverCertificateStatusDetail:
          $ref: '#/components/schemas/ServerCertificateStatusDetail'
          description: Details that explain the status of the server certificate.
      description: An object that contains information about a server certificate.
    ServiceName:
      type: string
    SetDefaultAuthorizerRequest:
      type: object
      required:
        - authorizerName
      title: SetDefaultAuthorizerRequest
      properties:
        authorizerName:
          $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer name.
    SetDefaultPolicyVersionRequest:
      type: object
      title: SetDefaultPolicyVersionRequest
      properties: {}
      description: The input for the SetDefaultPolicyVersion operation.
    SetLoggingOptionsRequest:
      type: object
      required:
        - loggingOptionsPayload
      title: SetLoggingOptionsRequest
      properties:
        loggingOptionsPayload:
          $ref: '#/components/schemas/LoggingOptionsPayload'
          description: The logging options payload.
      description: The input for the SetLoggingOptions operation.
    SetV2LoggingLevelRequest:
      type: object
      required:
        - logTarget
        - logLevel
      title: SetV2LoggingLevelRequest
      properties:
        logTarget:
          $ref: '#/components/schemas/LogTarget'
          description: The log target.
        logLevel:
          $ref: '#/components/schemas/LogLevel'
          description: The log level.
    SetV2LoggingOptionsRequest:
      type: object
      title: SetV2LoggingOptionsRequest
      properties:
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the role that allows IoT to write to Cloudwatch logs.
        defaultLogLevel:
          $ref: '#/components/schemas/LogLevel'
          description: The default logging level.
        disableAllLogs:
          $ref: '#/components/schemas/DisableAllLogs'
          description: If true all logs are disabled. The default is false.
    SigningRegion:
      type: string
    SigningProfileName:
      type: string
    SigningProfileParameter:
      type: object
      properties:
        certificateArn:
          $ref: '#/components/schemas/CertificateArn'
          description: Certificate ARN.
        platform:
          $ref: '#/components/schemas/Platform'
          description: The hardware platform of your device.
        certificatePathOnDevice:
          $ref: '#/components/schemas/CertificatePathOnDevice'
          description: The location of the code-signing certificate on your device.
      description: Describes the code-signing profile.
    SkippedFindingsCount:
      type: integer
    UseBase64:
      type: boolean
    StartAuditMitigationActionsTaskRequest:
      type: object
      required:
        - target
        - auditCheckToActionsMapping
        - clientRequestToken
      title: StartAuditMitigationActionsTaskRequest
      properties:
        target:
          $ref: '#/components/schemas/AuditMitigationActionsTaskTarget'
          description: 'Specifies the audit findings to which the mitigation actions are applied. You can apply them to a type of audit check, to all findings from an audit, or to a specific set of findings.'
        auditCheckToActionsMapping:
          $ref: '#/components/schemas/AuditCheckToActionsMapping'
          description: 'For an audit check, specifies which mitigation actions to apply. Those actions must be defined in your AWS account.'
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Each audit mitigation task must have a unique client request token. If you try to start a new task with the same token as a task that already exists, an exception occurs. If you omit this value, a unique client request token is generated automatically.'
    StartDetectMitigationActionsTaskRequest:
      type: object
      required:
        - target
        - actions
        - clientRequestToken
      title: StartDetectMitigationActionsTaskRequest
      properties:
        target:
          $ref: '#/components/schemas/DetectMitigationActionsTaskTarget'
          description: ' Specifies the ML Detect findings to which the mitigation actions are applied. '
        actions:
          $ref: '#/components/schemas/DetectMitigationActionsToExecuteList'
          description: ' The actions to be performed when a device has unexpected behavior. '
        violationEventOccurrenceRange:
          $ref: '#/components/schemas/ViolationEventOccurrenceRange'
          description: ' Specifies the time period of which violation events occurred between. '
        includeOnlyActiveViolations:
          $ref: '#/components/schemas/NullableBoolean'
          description: ' Specifies to list only active violations. '
        includeSuppressedAlerts:
          $ref: '#/components/schemas/NullableBoolean'
          description: ' Specifies to include suppressed alerts. '
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: ' Each mitigation action task must have a unique client request token. If you try to create a new task with the same token as a task that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
    StartOnDemandAuditTaskRequest:
      type: object
      required:
        - targetCheckNames
      title: StartOnDemandAuditTaskRequest
      properties:
        targetCheckNames:
          $ref: '#/components/schemas/TargetAuditCheckNames'
          description: 'Which checks are performed during the audit. The checks you specify must be enabled for your account or an exception occurs. Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.'
    StartThingRegistrationTaskRequest:
      type: object
      required:
        - templateBody
        - inputFileBucket
        - inputFileKey
        - roleArn
      title: StartThingRegistrationTaskRequest
      properties:
        templateBody:
          $ref: '#/components/schemas/TemplateBody'
          description: The provisioning template.
        inputFileBucket:
          $ref: '#/components/schemas/RegistryS3BucketName'
          description: The S3 bucket that contains the input file.
        inputFileKey:
          $ref: '#/components/schemas/RegistryS3KeyName'
          description: The name of input file within the S3 bucket. This file contains a newline delimited JSON file. Each line contains the parameter values to provision one device (thing).
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The IAM role ARN that grants permission the input file.
    StateMachineName:
      type: string
    Sum:
      type: number
      format: double
    SumOfSquares:
      type: number
      format: double
    Variance:
      type: number
      format: double
    StdDeviation:
      type: number
      format: double
    StopThingRegistrationTaskRequest:
      type: object
      title: StopThingRegistrationTaskRequest
      properties: {}
    StreamSummary:
      type: object
      properties:
        streamId:
          $ref: '#/components/schemas/StreamId'
          description: The stream ID.
        streamArn:
          $ref: '#/components/schemas/StreamArn'
          description: The stream ARN.
        streamVersion:
          $ref: '#/components/schemas/StreamVersion'
          description: The stream version.
        description:
          $ref: '#/components/schemas/StreamDescription'
          description: A description of the stream.
      description: A summary of a stream.
    stringValue:
      type: string
    SubnetId:
      type: string
    SubnetIdList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    SucceededFindingsCount:
      type: integer
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagResourceRequest:
      type: object
      required:
        - resourceArn
        - tags
      title: TagResourceRequest
      properties:
        resourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
        tags:
          $ref: '#/components/schemas/TagList'
          description: The new or modified tags for the resource.
    TotalChecksCount:
      type: integer
    WaitingForDataCollectionChecksCount:
      type: integer
    TotalFindingsCount:
      type: integer
    TestAuthorizationRequest:
      type: object
      required:
        - authInfos
      title: TestAuthorizationRequest
      properties:
        principal:
          $ref: '#/components/schemas/Principal'
          description: 'The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).'
        cognitoIdentityPoolId:
          $ref: '#/components/schemas/CognitoIdentityPoolId'
          description: The Cognito identity pool ID.
        authInfos:
          $ref: '#/components/schemas/AuthInfos'
          description: A list of authorization info objects. Simulating authorization will create a response for each <code>authInfo</code> object in the list.
        policyNamesToAdd:
          $ref: '#/components/schemas/PolicyNames'
          description: 'When testing custom authorization, the policies specified here are treated as if they are attached to the principal being authorized.'
        policyNamesToSkip:
          $ref: '#/components/schemas/PolicyNames'
          description: 'When testing custom authorization, the policies specified here are treated as if they are not attached to the principal being authorized.'
    Token:
      type: string
      minLength: 1
      maxLength: 6144
    TokenSignature:
      type: string
      pattern: '[A-Za-z0-9+/]+={0,2}'
      minLength: 1
      maxLength: 2560
    TlsContext:
      type: object
      properties:
        serverName:
          $ref: '#/components/schemas/ServerName'
          description: The value of the <code>serverName</code> key in a TLS authorization request.
      description: Specifies the TLS context to use for the test authorizer request.
    TestInvokeAuthorizerRequest:
      type: object
      title: TestInvokeAuthorizerRequest
      properties:
        token:
          $ref: '#/components/schemas/Token'
          description: The token returned by your custom authentication service.
        tokenSignature:
          $ref: '#/components/schemas/TokenSignature'
          description: The signature made with the token and your custom authentication service's private key. This value must be Base-64-encoded.
        httpContext:
          $ref: '#/components/schemas/HttpContext'
          description: Specifies a test HTTP authorization request.
        mqttContext:
          $ref: '#/components/schemas/MqttContext'
          description: Specifies a test MQTT authorization request.
        tlsContext:
          $ref: '#/components/schemas/TlsContext'
          description: Specifies a test TLS authorization request.
    ThingAttribute:
      type: object
      properties:
        thingName:
          $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
        thingTypeName:
          $ref: '#/components/schemas/ThingTypeName'
          description: 'The name of the thing type, if the thing has been associated with a type.'
        thingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The thing ARN.
        attributes:
          $ref: '#/components/schemas/Attributes'
          description: A list of thing attributes which are name-value pairs.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the thing record in the registry.
      description: 'The properties of the thing, including thing name, thing type name, and a list of thing attributes.'
    ThingConnectivity:
      type: object
      properties:
        connected:
          $ref: '#/components/schemas/Boolean'
          description: True if the thing is connected to the AWS IoT service; false if it is not connected.
        timestamp:
          $ref: '#/components/schemas/ConnectivityTimestamp'
          description: 'The epoch time (in milliseconds) when the thing last connected or disconnected. If the thing has been disconnected for more than a few weeks, the time value might be missing.'
      description: The connectivity status of the thing.
    ThingGroupNameList:
      type: array
      items:
        $ref: '#/components/schemas/ThingGroupName'
    ThingDocument:
      type: object
      properties:
        thingName:
          $ref: '#/components/schemas/ThingName'
          description: The thing name.
        thingId:
          $ref: '#/components/schemas/ThingId'
          description: The thing ID.
        thingTypeName:
          $ref: '#/components/schemas/ThingTypeName'
          description: The thing type name.
        thingGroupNames:
          $ref: '#/components/schemas/ThingGroupNameList'
          description: Thing group names.
        attributes:
          $ref: '#/components/schemas/Attributes'
          description: The attributes.
        shadow:
          $ref: '#/components/schemas/JsonDocument'
          description: The shadow.
        connectivity:
          $ref: '#/components/schemas/ThingConnectivity'
          description: Indicates whether the thing is connected to the AWS IoT service.
      description: The thing search index document.
    ThingGroupDocument:
      type: object
      properties:
        thingGroupName:
          $ref: '#/components/schemas/ThingGroupName'
          description: The thing group name.
        thingGroupId:
          $ref: '#/components/schemas/ThingGroupId'
          description: The thing group ID.
        thingGroupDescription:
          $ref: '#/components/schemas/ThingGroupDescription'
          description: The thing group description.
        attributes:
          $ref: '#/components/schemas/Attributes'
          description: The thing group attributes.
        parentGroupNames:
          $ref: '#/components/schemas/ThingGroupNameList'
          description: Parent group names.
      description: The thing group search index document.
    ThingGroupList:
      type: array
      items:
        $ref: '#/components/schemas/ThingGroupName'
    ThingTypeDefinition:
      type: object
      properties:
        thingTypeName:
          $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type.
        thingTypeArn:
          $ref: '#/components/schemas/ThingTypeArn'
          description: The thing type ARN.
        thingTypeProperties:
          $ref: '#/components/schemas/ThingTypeProperties'
          description: The ThingTypeProperties for the thing type.
        thingTypeMetadata:
          $ref: '#/components/schemas/ThingTypeMetadata'
          description: 'The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.'
      description: 'The definition of the thing type, including thing type name and description.'
    TimestreamDatabaseName:
      type: string
    TimestreamTableName:
      type: string
    TimestreamDimensionList:
      type: array
      items:
        $ref: '#/components/schemas/TimestreamDimension'
      minItems: 1
      maxItems: 128
    TimestreamTimestamp:
      type: object
      required:
        - value
        - unit
      properties:
        value:
          $ref: '#/components/schemas/TimestreamTimestampValue'
          description: An expression that returns a long epoch time value.
        unit:
          $ref: '#/components/schemas/TimestreamTimestampUnit'
          description: '<p>The precision of the timestamp value that results from the expression described in <code>value</code>.</p> <p>Valid values: <code>SECONDS</code> | <code>MILLISECONDS</code> | <code>MICROSECONDS</code> | <code>NANOSECONDS</code>. The default is <code>MILLISECONDS</code>.</p>'
      description: Describes how to interpret an application-defined timestamp value from an MQTT message payload and the precision of that value.
    TimestreamDimensionName:
      type: string
    TimestreamDimensionValue:
      type: string
    TimestreamDimension:
      type: object
      required:
        - name
        - value
      properties:
        name:
          $ref: '#/components/schemas/TimestreamDimensionName'
          description: '<p>The metadata dimension name. This is the name of the column in the Amazon Timestream database table record.</p> <p>Dimensions cannot be named: <code>measure_name</code>, <code>measure_value</code>, or <code>time</code>. These names are reserved. Dimension names cannot start with <code>ts_</code> or <code>measure_value</code> and they cannot contain the colon (<code>:</code>) character.</p>'
        value:
          $ref: '#/components/schemas/TimestreamDimensionValue'
          description: The value to write in this column of the database record.
      description: Metadata attributes of the time series that are written in each measure record.
    TimestreamTimestampValue:
      type: string
    TimestreamTimestampUnit:
      type: string
    TopicRuleDestinationStatus:
      type: string
      enum:
        - ENABLED
        - IN_PROGRESS
        - DISABLED
        - ERROR
        - DELETING
    VpcDestinationProperties:
      type: object
      properties:
        subnetIds:
          $ref: '#/components/schemas/SubnetIdList'
          description: The subnet IDs of the VPC destination.
        securityGroups:
          $ref: '#/components/schemas/SecurityGroupList'
          description: The security groups of the VPC destination.
        vpcId:
          $ref: '#/components/schemas/VpcId'
          description: The ID of the VPC.
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).
      description: The properties of a virtual private cloud (VPC) destination.
    TopicRuleDestinationSummary:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AwsArn'
          description: The topic rule destination ARN.
        status:
          $ref: '#/components/schemas/TopicRuleDestinationStatus'
          description: '<p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>'
        createdAt:
          $ref: '#/components/schemas/CreatedAtDate'
          description: The date and time when the topic rule destination was created.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAtDate'
          description: The date and time when the topic rule destination was last updated.
        statusReason:
          $ref: '#/components/schemas/String'
          description: The reason the topic rule destination is in the current status.
        httpUrlSummary:
          $ref: '#/components/schemas/HttpUrlDestinationSummary'
          description: Information about the HTTP URL.
        vpcDestinationSummary:
          $ref: '#/components/schemas/VpcDestinationSummary'
          description: Information about the virtual private cloud (VPC) connection.
      description: Information about the topic rule destination.
    VpcDestinationSummary:
      type: object
      properties:
        subnetIds:
          $ref: '#/components/schemas/SubnetIdList'
          description: The subnet IDs of the VPC destination.
        securityGroups:
          $ref: '#/components/schemas/SecurityGroupList'
          description: The security groups of the VPC destination.
        vpcId:
          $ref: '#/components/schemas/VpcId'
          description: The ID of the VPC.
        roleArn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).
      description: The summary of a virtual private cloud (VPC) destination.
    TopicRuleListItem:
      type: object
      properties:
        ruleArn:
          $ref: '#/components/schemas/RuleArn'
          description: The rule ARN.
        ruleName:
          $ref: '#/components/schemas/RuleName'
          description: The name of the rule.
        topicPattern:
          $ref: '#/components/schemas/TopicPattern'
          description: The pattern for the topic names that apply.
        createdAt:
          $ref: '#/components/schemas/CreatedAtDate'
          description: The date and time the rule was created.
        ruleDisabled:
          $ref: '#/components/schemas/IsDisabled'
          description: Specifies whether the rule is disabled.
      description: Describes a rule.
    TransferCertificateRequest:
      type: object
      title: TransferCertificateRequest
      properties:
        transferMessage:
          $ref: '#/components/schemas/Message'
          description: The transfer message.
      description: The input for the TransferCertificate operation.
    UntagResourceRequest:
      type: object
      required:
        - resourceArn
        - tagKeys
      title: UntagResourceRequest
      properties:
        resourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
        tagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: A list of the keys of the tags to be removed from the resource.
    UpdateAccountAuditConfigurationRequest:
      type: object
      title: UpdateAccountAuditConfigurationRequest
      properties:
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Resource Name (ARN) of the role that grants permission to AWS IoT to access information about your devices, policies, certificates, and other items as required when performing an audit.'
        auditNotificationTargetConfigurations:
          $ref: '#/components/schemas/AuditNotificationTargetConfigurations'
          description: Information about the targets to which audit notifications are sent.
        auditCheckConfigurations:
          $ref: '#/components/schemas/AuditCheckConfigurations'
          description: '<p>Specifies which audit checks are enabled and disabled for this account. Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are currently enabled.</p> <p>Some data collection might start immediately when certain checks are enabled. When a check is disabled, any data collected so far in relation to the check is deleted.</p> <p>You cannot disable a check if it''s used by any scheduled audit. You must first delete the check from the scheduled audit or delete the scheduled audit itself.</p> <p>On the first call to <code>UpdateAccountAuditConfiguration</code>, this parameter is required and must specify at least one enabled check.</p>'
    UpdateAuditSuppressionRequest:
      type: object
      required:
        - checkName
        - resourceIdentifier
      title: UpdateAuditSuppressionRequest
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        expirationDate:
          $ref: '#/components/schemas/Timestamp'
          description: ' The expiration date (epoch timestamp in seconds) that you want the suppression to adhere to. '
        suppressIndefinitely:
          $ref: '#/components/schemas/SuppressIndefinitely'
          description: ' Indicates whether a suppression should exist indefinitely or not. '
        description:
          $ref: '#/components/schemas/AuditDescription'
          description: ' The description of the audit suppression. '
    UpdateAuthorizerRequest:
      type: object
      title: UpdateAuthorizerRequest
      properties:
        authorizerFunctionArn:
          $ref: '#/components/schemas/AuthorizerFunctionArn'
          description: The ARN of the authorizer's Lambda function.
        tokenKeyName:
          $ref: '#/components/schemas/TokenKeyName'
          description: 'The key used to extract the token from the HTTP headers. '
        tokenSigningPublicKeys:
          $ref: '#/components/schemas/PublicKeyMap'
          description: The public keys used to verify the token signature.
        status:
          $ref: '#/components/schemas/AuthorizerStatus'
          description: The status of the update authorizer request.
    UpdateBillingGroupRequest:
      type: object
      required:
        - billingGroupProperties
      title: UpdateBillingGroupRequest
      properties:
        billingGroupProperties:
          $ref: '#/components/schemas/BillingGroupProperties'
          description: The properties of the billing group.
        expectedVersion:
          $ref: '#/components/schemas/OptionalVersion'
          description: 'The expected version of the billing group. If the version of the billing group does not match the expected version specified in the request, the <code>UpdateBillingGroup</code> request is rejected with a <code>VersionConflictException</code>.'
    UpdateCACertificateRequest:
      type: object
      title: UpdateCACertificateRequest
      properties:
        registrationConfig:
          $ref: '#/components/schemas/RegistrationConfig'
          description: Information about the registration configuration.
        removeAutoRegistration:
          $ref: '#/components/schemas/RemoveAutoRegistration'
          description: 'If true, removes auto registration.'
      description: The input to the UpdateCACertificate operation.
    UpdateCertificateRequest:
      type: object
      title: UpdateCertificateRequest
      properties: {}
      description: The input for the UpdateCertificate operation.
    UpdateCustomMetricRequest:
      type: object
      required:
        - displayName
      title: UpdateCustomMetricRequest
      properties:
        displayName:
          $ref: '#/components/schemas/CustomMetricDisplayName'
          description: ' Field represents a friendly name in the console for the custom metric, it doesn''t have to be unique. Don''t use this name as the metric identifier in the device metric report. Can be updated. '
    UpdateDimensionRequest:
      type: object
      required:
        - stringValues
      title: UpdateDimensionRequest
      properties:
        stringValues:
          $ref: '#/components/schemas/DimensionStringValues'
          description: 'Specifies the value or list of values for the dimension. For <code>TOPIC_FILTER</code> dimensions, this is a pattern used to match the MQTT topic (for example, "admin/#").'
    UpdateDomainConfigurationRequest:
      type: object
      title: UpdateDomainConfigurationRequest
      properties:
        authorizerConfig:
          $ref: '#/components/schemas/AuthorizerConfig'
          description: An object that specifies the authorization service for a domain.
        domainConfigurationStatus:
          $ref: '#/components/schemas/DomainConfigurationStatus'
          description: The status to which the domain configuration should be updated.
        removeAuthorizerConfig:
          $ref: '#/components/schemas/RemoveAuthorizerConfig'
          description: Removes the authorization configuration from a domain.
    UpdateDynamicThingGroupRequest:
      type: object
      required:
        - thingGroupProperties
      title: UpdateDynamicThingGroupRequest
      properties:
        thingGroupProperties:
          $ref: '#/components/schemas/ThingGroupProperties'
          description: The dynamic thing group properties to update.
        expectedVersion:
          $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the dynamic thing group to update.
        indexName:
          $ref: '#/components/schemas/IndexName'
          description: '<p>The dynamic thing group index to update.</p> <note> <p>Currently one index is supported: ''AWS_Things''.</p> </note>'
        queryString:
          $ref: '#/components/schemas/QueryString'
          description: The dynamic thing group search query string to update.
        queryVersion:
          $ref: '#/components/schemas/QueryVersion'
          description: '<p>The dynamic thing group query version to update.</p> <note> <p>Currently one query version is supported: "2017-09-30". If not specified, the query version defaults to this value.</p> </note>'
    UpdateEventConfigurationsRequest:
      type: object
      title: UpdateEventConfigurationsRequest
      properties:
        eventConfigurations:
          $ref: '#/components/schemas/EventConfigurations'
          description: The new event configuration values.
    UpdateIndexingConfigurationRequest:
      type: object
      title: UpdateIndexingConfigurationRequest
      properties:
        thingIndexingConfiguration:
          $ref: '#/components/schemas/ThingIndexingConfiguration'
          description: Thing indexing configuration.
        thingGroupIndexingConfiguration:
          $ref: '#/components/schemas/ThingGroupIndexingConfiguration'
          description: Thing group indexing configuration.
    UpdateJobRequest:
      type: object
      title: UpdateJobRequest
      properties:
        description:
          $ref: '#/components/schemas/JobDescription'
          description: A short text description of the job.
        presignedUrlConfig:
          $ref: '#/components/schemas/PresignedUrlConfig'
          description: Configuration information for pre-signed S3 URLs.
        jobExecutionsRolloutConfig:
          $ref: '#/components/schemas/JobExecutionsRolloutConfig'
          description: Allows you to create a staged rollout of the job.
        abortConfig:
          $ref: '#/components/schemas/AbortConfig'
          description: Allows you to create criteria to abort a job.
        timeoutConfig:
          $ref: '#/components/schemas/TimeoutConfig'
          description: 'Specifies the amount of time each device has to finish its execution of the job. The timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the time expires, it will be automatically set to <code>TIMED_OUT</code>. '
    UpdateMitigationActionRequest:
      type: object
      title: UpdateMitigationActionRequest
      properties:
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role that is used to apply the mitigation action.
        actionParams:
          $ref: '#/components/schemas/MitigationActionParams'
          description: Defines the type of action and the parameters for that action.
    UpdateProvisioningTemplateRequest:
      type: object
      title: UpdateProvisioningTemplateRequest
      properties:
        description:
          $ref: '#/components/schemas/TemplateDescription'
          description: The description of the fleet provisioning template.
        enabled:
          $ref: '#/components/schemas/Enabled'
          description: 'True to enable the fleet provisioning template, otherwise false.'
        defaultVersionId:
          $ref: '#/components/schemas/TemplateVersionId'
          description: The ID of the default provisioning template version.
        provisioningRoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role associated with the provisioning template. This IoT role grants permission to provision a device.
        preProvisioningHook:
          $ref: '#/components/schemas/ProvisioningHook'
          description: Updates the pre-provisioning hook template.
        removePreProvisioningHook:
          $ref: '#/components/schemas/RemoveHook'
          description: Removes pre-provisioning hook template.
    UpdateRoleAliasRequest:
      type: object
      title: UpdateRoleAliasRequest
      properties:
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The role ARN.
        credentialDurationSeconds:
          $ref: '#/components/schemas/CredentialDurationSeconds'
          description: The number of seconds the credential will be valid.
    UpdateScheduledAuditRequest:
      type: object
      title: UpdateScheduledAuditRequest
      properties:
        frequency:
          $ref: '#/components/schemas/AuditFrequency'
          description: 'How often the scheduled audit takes place, either <code>DAILY</code>, <code>WEEKLY</code>, <code>BIWEEKLY</code>, or <code>MONTHLY</code>. The start time of each audit is determined by the system.'
        dayOfMonth:
          $ref: '#/components/schemas/DayOfMonth'
          description: 'The day of the month on which the scheduled audit takes place. This can be <code>1</code> through <code>31</code> or <code>LAST</code>. This field is required if the <code>frequency</code> parameter is set to <code>MONTHLY</code>. If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
          description: 'The day of the week on which the scheduled audit takes place. This can be one of <code>SUN</code>, <code>MON</code>, <code>TUE</code>, <code>WED</code>, <code>THU</code>, <code>FRI</code>, or <code>SAT</code>. This field is required if the "frequency" parameter is set to <code>WEEKLY</code> or <code>BIWEEKLY</code>.'
        targetCheckNames:
          $ref: '#/components/schemas/TargetAuditCheckNames'
          description: 'Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
    UpdateSecurityProfileRequest:
      type: object
      title: UpdateSecurityProfileRequest
      properties:
        securityProfileDescription:
          $ref: '#/components/schemas/SecurityProfileDescription'
          description: A description of the security profile.
        behaviors:
          $ref: '#/components/schemas/Behaviors'
          description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
        alertTargets:
          $ref: '#/components/schemas/AlertTargets'
          description: Where the alerts are sent. (Alerts are always sent to the console.)
        additionalMetricsToRetain:
          allOf:
            - $ref: '#/components/schemas/AdditionalMetricsToRetainList'
            - deprecated: true
              description: '<p> <i>Please use <a>UpdateSecurityProfileRequest$additionalMetricsToRetainV2</a> instead.</i> </p> <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s <code>behaviors</code>, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>Use additionalMetricsToRetainV2.'
        additionalMetricsToRetainV2:
          $ref: '#/components/schemas/AdditionalMetricsToRetainV2List'
          description: 'A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s behaviors, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.'
        deleteBehaviors:
          $ref: '#/components/schemas/DeleteBehaviors'
          description: 'If true, delete all <code>behaviors</code> defined for this security profile. If any <code>behaviors</code> are defined in the current invocation, an exception occurs.'
        deleteAlertTargets:
          $ref: '#/components/schemas/DeleteAlertTargets'
          description: 'If true, delete all <code>alertTargets</code> defined for this security profile. If any <code>alertTargets</code> are defined in the current invocation, an exception occurs.'
        deleteAdditionalMetricsToRetain:
          $ref: '#/components/schemas/DeleteAdditionalMetricsToRetain'
          description: 'If true, delete all <code>additionalMetricsToRetain</code> defined for this security profile. If any <code>additionalMetricsToRetain</code> are defined in the current invocation, an exception occurs.'
    UpdateStreamRequest:
      type: object
      title: UpdateStreamRequest
      properties:
        description:
          $ref: '#/components/schemas/StreamDescription'
          description: The description of the stream.
        files:
          $ref: '#/components/schemas/StreamFiles'
          description: The files associated with the stream.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: An IAM role that allows the IoT service principal assumes to access your S3 files.
    UpdateThingGroupRequest:
      type: object
      required:
        - thingGroupProperties
      title: UpdateThingGroupRequest
      properties:
        thingGroupProperties:
          $ref: '#/components/schemas/ThingGroupProperties'
          description: The thing group properties.
        expectedVersion:
          $ref: '#/components/schemas/OptionalVersion'
          description: 'The expected version of the thing group. If this does not match the version of the thing group being updated, the update will fail.'
    UpdateThingGroupsForThingRequest:
      type: object
      title: UpdateThingGroupsForThingRequest
      properties:
        thingName:
          $ref: '#/components/schemas/ThingName'
          description: The thing whose group memberships will be updated.
        thingGroupsToAdd:
          $ref: '#/components/schemas/ThingGroupList'
          description: The groups to which the thing will be added.
        thingGroupsToRemove:
          $ref: '#/components/schemas/ThingGroupList'
          description: The groups from which the thing will be removed.
        overrideDynamicGroups:
          $ref: '#/components/schemas/OverrideDynamicGroups'
          description: 'Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.'
    UpdateThingRequest:
      type: object
      title: UpdateThingRequest
      properties:
        thingTypeName:
          $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type.
        attributePayload:
          $ref: '#/components/schemas/AttributePayload'
          description: '<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\"attributes\":{\"name1\":\"value2\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>'
        expectedVersion:
          $ref: '#/components/schemas/OptionalVersion'
          description: 'The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.'
        removeThingType:
          $ref: '#/components/schemas/RemoveThingType'
          description: 'Remove a thing type association. If <b>true</b>, the association is removed.'
      description: The input for the UpdateThing operation.
    UpdateTopicRuleDestinationRequest:
      type: object
      required:
        - arn
        - status
      title: UpdateTopicRuleDestinationRequest
      properties:
        arn:
          $ref: '#/components/schemas/AwsArn'
          description: The ARN of the topic rule destination.
        status:
          $ref: '#/components/schemas/TopicRuleDestinationStatus'
          description: '<p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>'
    Valid:
      type: boolean
    ValidateSecurityProfileBehaviorsRequest:
      type: object
      required:
        - behaviors
      title: ValidateSecurityProfileBehaviorsRequest
      properties:
        behaviors:
          $ref: '#/components/schemas/Behaviors'
          description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
    ValidationErrors:
      type: array
      items:
        $ref: '#/components/schemas/ValidationError'
    ValidationError:
      type: object
      properties:
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: The description of an error found in the behaviors.
      description: Information about an error found in a behavior specification.
    ViolationEventType:
      type: string
      enum:
        - in-alarm
        - alarm-cleared
        - alarm-invalidated
    ViolationEvent:
      type: object
      properties:
        violationId:
          $ref: '#/components/schemas/ViolationId'
          description: The ID of the violation event.
        thingName:
          $ref: '#/components/schemas/DeviceDefenderThingName'
          description: The name of the thing responsible for the violation event.
        securityProfileName:
          $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile whose behavior was violated.
        behavior:
          $ref: '#/components/schemas/Behavior'
          description: The behavior that was violated.
        metricValue:
          $ref: '#/components/schemas/MetricValue'
          description: The value of the metric (the measurement).
        violationEventAdditionalInfo:
          $ref: '#/components/schemas/ViolationEventAdditionalInfo'
          description: ' The details of a violation event. '
        violationEventType:
          $ref: '#/components/schemas/ViolationEventType'
          description: The type of violation event.
        violationEventTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the violation event occurred.
      description: Information about a Device Defender security profile behavior violation.
    VpcId:
      type: string
security:
  - hmac: []
