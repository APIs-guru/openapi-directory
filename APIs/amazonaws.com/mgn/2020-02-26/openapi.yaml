openapi: 3.0.0
info:
  version: '2020-02-26'
  x-release: v4
  title: Application Migration Service
  description: The Application Migration Service service.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: mgn
  x-aws-signingName: mgn
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mgn-2020-02-26.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/mgn/'
servers:
  - url: 'http://mgn.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The mgn multi-region endpoint
  - url: 'https://mgn.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The mgn multi-region endpoint
  - url: 'http://mgn.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The mgn endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://mgn.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The mgn endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /ChangeServerLifeCycleState:
    post:
      operationId: ChangeServerLifeCycleState
      description: 'Allows the user to set the SourceServer.LifeCycle.state property for specific Source Server IDs to one of the following: READY_FOR_TEST or READY_FOR_CUTOVER. This command only works if the Source Server is already launchable (dataReplicationInfo.lagDuration is not null.)'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - lifeCycle
                - sourceServerID
              properties:
                lifeCycle:
                  description: The request to change the source server migration lifecycle state.
                  type: object
                  properties:
                    state:
                      $ref: '#/components/schemas/ChangeServerLifeCycleStateSourceServerLifecycleState'
                      description: The request to change the source server migration lifecycle state.
                sourceServerID:
                  description: The request to change the source server migration lifecycle state by source server ID.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /CreateReplicationConfigurationTemplate:
    post:
      operationId: CreateReplicationConfigurationTemplate
      description: Creates a new ReplicationConfigurationTemplate.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfigurationTemplate'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - associateDefaultSecurityGroup
                - bandwidthThrottling
                - createPublicIP
                - dataPlaneRouting
                - defaultLargeStagingDiskType
                - ebsEncryption
                - replicationServerInstanceType
                - replicationServersSecurityGroupsIDs
                - stagingAreaSubnetId
                - stagingAreaTags
                - useDedicatedReplicationServer
              properties:
                associateDefaultSecurityGroup:
                  description: Request to associate the default Application Migration Service Security group with the Replication Settings template.
                  type: boolean
                bandwidthThrottling:
                  description: Request to configure bandwidth throttling during Replication Settings template creation.
                  type: integer
                  minimum: 0
                createPublicIP:
                  description: Request to create Public IP during Replication Settings template creation.
                  type: boolean
                dataPlaneRouting:
                  description: Request to configure data plane routing during Replication Settings template creation.
                  type: string
                  enum:
                    - PRIVATE_IP
                    - PUBLIC_IP
                defaultLargeStagingDiskType:
                  description: Request to configure the Staging Disk EBS volume type to "gp2" during Replication Settings template creation.
                  type: string
                  enum:
                    - GP2
                    - ST1
                ebsEncryption:
                  description: Request to configure EBS enryption during Replication Settings template creation.
                  type: string
                  enum:
                    - DEFAULT
                    - CUSTOM
                ebsEncryptionKeyArn:
                  description: Request to configure an EBS enryption key during Replication Settings template creation.
                  type: string
                  minLength: 20
                  maxLength: 2048
                replicationServerInstanceType:
                  description: Request to configure the Replication Server instance type during Replication Settings template creation.
                  type: string
                  minLength: 0
                  maxLength: 255
                replicationServersSecurityGroupsIDs:
                  description: Request to configure the Replication Server Secuirity group ID during Replication Settings template creation.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupID'
                  minItems: 0
                  maxItems: 32
                stagingAreaSubnetId:
                  description: Request to configure the Staging Area subnet ID during Replication Settings template creation.
                  type: string
                  pattern: '^subnet-[0-9a-fA-F]{8,}$'
                  minLength: 0
                  maxLength: 255
                stagingAreaTags:
                  description: Request to configure Staiging Area tags during Replication Settings template creation.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                tags:
                  description: Request to configure tags during Replication Settings template creation.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                useDedicatedReplicationServer:
                  description: Request to use Dedicated Replication Servers during Replication Settings template creation.
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteJob:
    post:
      operationId: DeleteJob
      description: Deletes a single Job by ID.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteJobResponse'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - jobID
              properties:
                jobID:
                  description: Request to delete Job from service by Job ID.
                  type: string
                  pattern: '^mgnjob-[0-9a-zA-Z]{17}$'
                  minLength: 24
                  maxLength: 24
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteReplicationConfigurationTemplate:
    post:
      operationId: DeleteReplicationConfigurationTemplate
      description: Deletes a single Replication Configuration Template by ID
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReplicationConfigurationTemplateResponse'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - replicationConfigurationTemplateID
              properties:
                replicationConfigurationTemplateID:
                  description: Request to delete Replication Configuration Template from service by Replication Configuration Template ID.
                  type: string
                  pattern: '^rct-[0-9a-zA-Z]{17}$'
                  minLength: 21
                  maxLength: 21
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteSourceServer:
    post:
      operationId: DeleteSourceServer
      description: Deletes a single source server by ID.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSourceServerResponse'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: Request to delete Source Server from service by Server ID.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeJobLogItems:
    post:
      operationId: DescribeJobLogItems
      description: Retrieves detailed Job log with paging.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobLogItemsResponse'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - jobID
              properties:
                jobID:
                  description: Request to describe Job log job ID.
                  type: string
                  pattern: '^mgnjob-[0-9a-zA-Z]{17}$'
                  minLength: 24
                  maxLength: 24
                maxResults:
                  description: Request to describe Job log item maximum results.
                  type: integer
                  minimum: 1
                nextToken:
                  description: Request to describe Job log next token.
                  type: string
                  minLength: 0
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeJobs:
    post:
      operationId: DescribeJobs
      description: 'Returns a list of Jobs. Use the JobsID and fromDate and toData filters to limit which jobs are returned. The response is sorted by creationDataTime - latest date first. Jobs are normaly created by the StartTest, StartCutover, and TerminateTargetInstances APIs. Jobs are also created by DiagnosticLaunch and TerminateDiagnosticInstances, which are APIs available only to *Support* and only used in response to relevant support tickets.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobsResponse'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - filters
              properties:
                filters:
                  description: Request to describe Job log filters.
                  type: object
                  properties:
                    fromDate:
                      $ref: '#/components/schemas/ISO8601DatetimeString'
                      description: Request to describe Job log filters by date.
                    jobIDs:
                      $ref: '#/components/schemas/DescribeJobsRequestFiltersJobIDs'
                      description: Request to describe Job log filters by job ID.
                    toDate:
                      $ref: '#/components/schemas/ISO8601DatetimeString'
                      description: Request to describe Job log by last date.
                maxResults:
                  description: Request to describe Job log by max results.
                  type: integer
                  minimum: 1
                nextToken:
                  description: Request to describe Job logby next token.
                  type: string
                  minLength: 0
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeReplicationConfigurationTemplates:
    post:
      operationId: DescribeReplicationConfigurationTemplates
      description: 'Lists all ReplicationConfigurationTemplates, filtered by Source Server IDs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReplicationConfigurationTemplatesResponse'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - replicationConfigurationTemplateIDs
              properties:
                maxResults:
                  description: Request to describe Replication Configuration template by max results.
                  type: integer
                  minimum: 1
                nextToken:
                  description: Request to describe Replication Configuration template by next token.
                  type: string
                  minLength: 0
                  maxLength: 2048
                replicationConfigurationTemplateIDs:
                  description: Request to describe Replication Configuration template by template IDs.
                  type: array
                  items:
                    $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeSourceServers:
    post:
      operationId: DescribeSourceServers
      description: Retrieves all SourceServers or multiple SourceServers by ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSourceServersResponse'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - filters
              properties:
                filters:
                  description: Request to filter Source Servers list.
                  type: object
                  properties:
                    isArchived:
                      $ref: '#/components/schemas/Boolean'
                      description: Request to filter Source Servers list by archived.
                    sourceServerIDs:
                      $ref: '#/components/schemas/DescribeSourceServersRequestFiltersIDs'
                      description: Request to filter Source Servers list by Source Server ID.
                maxResults:
                  description: Request to filter Source Servers list by maximum results.
                  type: integer
                  minimum: 1
                nextToken:
                  description: Request to filter Source Servers list by next token.
                  type: string
                  minLength: 0
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DisconnectFromService:
    post:
      operationId: DisconnectFromService
      description: 'Disconnects specific Source Servers from Application Migration Service. Data replication is stopped immediately. All AWS resources created by Application Migration Service for enabling the replication of these source servers will be terminated / deleted within 90 minutes. Launched Test or Cutover instances will NOT be terminated. If the agent on the source server has not been prevented from communciating with the Application Migration Service service, then it will receive a command to uninstall itself (within approximately 10 minutes). The following properties of the SourceServer will be changed immediately: dataReplicationInfo.dataReplicationState will be set to DISCONNECTED; The totalStorageBytes property for each of dataReplicationInfo.replicatedDisks will be set to zero; dataReplicationInfo.lagDuration and dataReplicationInfo.lagDurationwill be nullified.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: Request to disconnect Source Server from service by Server ID.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /FinalizeCutover:
    post:
      operationId: FinalizeCutover
      description: 'Finalizes the cutover immediately for specific Source Servers. All AWS resources created by Application Migration Service for enabling the replication of these source servers will be terminated / deleted within 90 minutes. Launched Test or Cutover instances will NOT be terminated. The AWS Replication Agent will receive a command to uninstall itself (within 10 minutes). The following properties of the SourceServer will be changed immediately: dataReplicationInfo.dataReplicationState will be to DISCONNECTED; The SourceServer.lifeCycle.state will be changed to CUTOVER; The totalStorageBytes property fo each of dataReplicationInfo.replicatedDisks will be set to zero; dataReplicationInfo.lagDuration and dataReplicationInfo.lagDurationwill be nullified.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: Request to finalize Cutover by Soure Server ID.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /GetLaunchConfiguration:
    post:
      operationId: GetLaunchConfiguration
      description: 'Lists all LaunchConfigurations available, filtered by Source Server IDs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchConfiguration'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: Request to get Launch Configuration information by Source Server ID.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /GetReplicationConfiguration:
    post:
      operationId: GetReplicationConfiguration
      description: 'Lists all ReplicationConfigurations, filtered by Source Server ID.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfiguration'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: Request to get Replication Configuaration by Source Server ID.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /InitializeService:
    post:
      operationId: InitializeService
      description: Initialize Application Migration Service.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitializeServiceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: List all tags for your Application Migration Service resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: List tags for resource request by ARN.
          schema:
            type: string
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: 'Adds or overwrites only the specified tags for the specified Application Migration Service resource or resources. When you specify an existing tag key, the value is overwritten with the new value. Each resource can have a maximum of 50 tags. Each tag consists of a key and optional value.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: Tag resource by ARN.
          schema:
            type: string
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: Tag resource by Tags.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  /MarkAsArchived:
    post:
      operationId: MarkAsArchived
      description: Archives specific Source Servers by setting the SourceServer.isArchived property to true for specified SourceServers by ID. This command only works for SourceServers with a lifecycle.state which equals DISCONNECTED or CUTOVER.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: Mark as archived by Source Server ID.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /RetryDataReplication:
    post:
      operationId: RetryDataReplication
      description: 'Causes the data replication initiation sequence to begin immediately upon next Handshake for specified SourceServer IDs, regardless of when the previous initiation started. This command will not work if the SourceServer is not stalled or is in a DISCONNECTED or STOPPED state.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: Retry data replication for Source Server ID.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /StartCutover:
    post:
      operationId: StartCutover
      description: Launches a Cutover Instance for specific Source Servers. This command starts a LAUNCH job whose initiatedBy property is StartCutover and changes the SourceServer.lifeCycle.state property to CUTTING_OVER.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartCutoverResponse'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerIDs
              properties:
                sourceServerIDs:
                  description: Start Cutover by Source Server IDs.
                  type: array
                  items:
                    $ref: '#/components/schemas/SourceServerID'
                  minItems: 1
                  maxItems: 200
                tags:
                  description: Start Cutover by Tags.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /StartTest:
    post:
      operationId: StartTest
      description: Lauches a Test Instance for specific Source Servers. This command starts a LAUNCH job whose initiatedBy property is StartTest and changes the SourceServer.lifeCycle.state property to TESTING.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTestResponse'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerIDs
              properties:
                sourceServerIDs:
                  description: Start Test for Source Server IDs.
                  type: array
                  items:
                    $ref: '#/components/schemas/SourceServerID'
                  minItems: 1
                  maxItems: 200
                tags:
                  description: Start Test by Tags.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /TerminateTargetInstances:
    post:
      operationId: TerminateTargetInstances
      description: 'Starts a job that terminates specific launched EC2 Test and Cutover instances. This command will not work for any Source Server with a lifecycle.state of TESTING, CUTTING_OVER, or CUTOVER.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateTargetInstancesResponse'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerIDs
              properties:
                sourceServerIDs:
                  description: Terminate Target instance by Source Server IDs.
                  type: array
                  items:
                    $ref: '#/components/schemas/SourceServerID'
                  minItems: 1
                  maxItems: 200
                tags:
                  description: Terminate Target instance by Tags.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Deletes the specified set of tags from the specified set of Application Migration Service resources.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: Untag resource by ARN.
          schema:
            type: string
            minLength: 20
            maxLength: 2048
        - name: tagKeys
          in: query
          required: true
          description: Untag resource by Keys.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateLaunchConfiguration:
    post:
      operationId: UpdateLaunchConfiguration
      description: Updates multiple LaunchConfigurations by Source Server ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchConfiguration'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                copyPrivateIp:
                  description: Update Launch configuration copy Private IP request.
                  type: boolean
                copyTags:
                  description: Update Launch configuration copy Tags request.
                  type: boolean
                launchDisposition:
                  description: Update Launch configuration launch disposition request.
                  type: string
                  enum:
                    - STOPPED
                    - STARTED
                licensing:
                  description: Configure Licensing.
                  type: object
                  properties:
                    osByol:
                      $ref: '#/components/schemas/Boolean'
                      description: Configure BYOL OS licensing.
                name:
                  description: Update Launch configuration name request.
                  type: string
                  minLength: 0
                  maxLength: 128
                sourceServerID:
                  description: Update Launch configuration by Source Server ID request.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
                targetInstanceTypeRightSizingMethod:
                  description: Update Launch configuration Target instance right sizing request.
                  type: string
                  enum:
                    - NONE
                    - BASIC
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateReplicationConfiguration:
    post:
      operationId: UpdateReplicationConfiguration
      description: Allows you to update multiple ReplicationConfigurations by Source Server ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfiguration'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                associateDefaultSecurityGroup:
                  description: Update replication configuration associate default Application Migration Service Security group request.
                  type: boolean
                bandwidthThrottling:
                  description: Update replication configuration bandwidth throttling request.
                  type: integer
                  minimum: 0
                createPublicIP:
                  description: Update replication configuration create Public IP request.
                  type: boolean
                dataPlaneRouting:
                  description: Update replication configuration data plane routing request.
                  type: string
                  enum:
                    - PRIVATE_IP
                    - PUBLIC_IP
                defaultLargeStagingDiskType:
                  description: Update replication configuration use default large Staging Disk type request.
                  type: string
                  enum:
                    - GP2
                    - ST1
                ebsEncryption:
                  description: Update replication configuration EBS encryption request.
                  type: string
                  enum:
                    - DEFAULT
                    - CUSTOM
                ebsEncryptionKeyArn:
                  description: Update replication configuration EBS encryption key ARN request.
                  type: string
                  minLength: 20
                  maxLength: 2048
                name:
                  description: Update replication configuration name request.
                  type: string
                  minLength: 0
                  maxLength: 128
                replicatedDisks:
                  description: Update replication configuration replicated disks request.
                  type: array
                  items:
                    $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisk'
                  minItems: 0
                  maxItems: 60
                replicationServerInstanceType:
                  description: Update replication configuration Replication Server instance type request.
                  type: string
                  minLength: 0
                  maxLength: 255
                replicationServersSecurityGroupsIDs:
                  description: Update replication configuration Replication Server Security Groups IDs request.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupID'
                  minItems: 0
                  maxItems: 32
                sourceServerID:
                  description: Update replication configuration Source Server ID request.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
                stagingAreaSubnetId:
                  description: Update replication configuration Staging Area subnet request.
                  type: string
                  pattern: '^subnet-[0-9a-fA-F]{8,}$'
                  minLength: 0
                  maxLength: 255
                stagingAreaTags:
                  description: Update replication configuration Staging Area Tags request.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                useDedicatedReplicationServer:
                  description: Update replication configuration use dedicated Replication Server request.
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateReplicationConfigurationTemplate:
    post:
      operationId: UpdateReplicationConfigurationTemplate
      description: Updates multiple ReplicationConfigurationTemplates by ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfigurationTemplate'
        '480':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - replicationConfigurationTemplateID
              properties:
                arn:
                  description: Update replication configuration template ARN request.
                  type: string
                  minLength: 20
                  maxLength: 2048
                associateDefaultSecurityGroup:
                  description: Update replication configuration template associate default Application Migration Service Security group request.
                  type: boolean
                bandwidthThrottling:
                  description: Update replication configuration template bandwidth throttling request.
                  type: integer
                  minimum: 0
                createPublicIP:
                  description: Update replication configuration template create Public IP request.
                  type: boolean
                dataPlaneRouting:
                  description: Update replication configuration template data plane routing request.
                  type: string
                  enum:
                    - PRIVATE_IP
                    - PUBLIC_IP
                defaultLargeStagingDiskType:
                  description: Update replication configuration template use default large Staging Disk type request.
                  type: string
                  enum:
                    - GP2
                    - ST1
                ebsEncryption:
                  description: Update replication configuration template EBS encryption request.
                  type: string
                  enum:
                    - DEFAULT
                    - CUSTOM
                ebsEncryptionKeyArn:
                  description: Update replication configuration template EBS encryption key ARN request.
                  type: string
                  minLength: 20
                  maxLength: 2048
                replicationConfigurationTemplateID:
                  description: Update replication configuration template template ID request.
                  type: string
                  pattern: '^rct-[0-9a-zA-Z]{17}$'
                  minLength: 21
                  maxLength: 21
                replicationServerInstanceType:
                  description: Update replication configuration template Replication Server instance type request.
                  type: string
                  minLength: 0
                  maxLength: 255
                replicationServersSecurityGroupsIDs:
                  description: Update replication configuration template Replication Server Security groups IDs request.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupID'
                  minItems: 0
                  maxItems: 32
                stagingAreaSubnetId:
                  description: Update replication configuration template Staging Area subnet ID request.
                  type: string
                  pattern: '^subnet-[0-9a-fA-F]{8,}$'
                  minLength: 0
                  maxLength: 255
                stagingAreaTags:
                  description: Update replication configuration template Staging Area Tags request.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                useDedicatedReplicationServer:
                  description: Update replication configuration template use dedicated Replication Server request.
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    SourceServer:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/ARN'
          description: Source server ARN.
        dataReplicationInfo:
          $ref: '#/components/schemas/DataReplicationInfo'
          description: Source server data replication info.
        isArchived:
          $ref: '#/components/schemas/Boolean'
          description: Source server archived status.
        launchedInstance:
          $ref: '#/components/schemas/LaunchedInstance'
          description: Source server launched instance.
        lifeCycle:
          $ref: '#/components/schemas/LifeCycle'
          description: Source server lifecycle state.
        sourceProperties:
          $ref: '#/components/schemas/SourceProperties'
          description: Source server properties.
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Source server ID.
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: Source server Tags.
    ChangeServerLifeCycleStateSourceServerLifecycleState:
      type: string
      enum:
        - READY_FOR_TEST
        - READY_FOR_CUTOVER
        - CUTOVER
    UninitializedAccountException: {}
    ResourceNotFoundException: {}
    ValidationException: {}
    ConflictException: {}
    ReplicationConfigurationTemplate:
      type: object
      required:
        - replicationConfigurationTemplateID
      properties:
        arn:
          $ref: '#/components/schemas/ARN'
          description: Replication Configuration template ARN.
        associateDefaultSecurityGroup:
          $ref: '#/components/schemas/Boolean'
          description: Replication Configuration template associate default Application Migration Service Security group.
        bandwidthThrottling:
          $ref: '#/components/schemas/PositiveInteger'
          description: Replication Configuration template bandwidth throtting.
        createPublicIP:
          $ref: '#/components/schemas/Boolean'
          description: Replication Configuration template create Public IP.
        dataPlaneRouting:
          $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          description: Replication Configuration template data plane routing.
        defaultLargeStagingDiskType:
          $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          description: Replication Configuration template use dedault large Staging Disk type.
        ebsEncryption:
          $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          description: Replication Configuration template EBS encryption.
        ebsEncryptionKeyArn:
          $ref: '#/components/schemas/ARN'
          description: Replication Configuration template EBS encryption key ARN.
        replicationConfigurationTemplateID:
          $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
          description: Replication Configuration template template ID.
        replicationServerInstanceType:
          $ref: '#/components/schemas/EC2InstanceType'
          description: Replication Configuration template server instance type.
        replicationServersSecurityGroupsIDs:
          $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          description: Replication Configuration template server Security Groups IDs.
        stagingAreaSubnetId:
          $ref: '#/components/schemas/SubnetID'
          description: Replication Configuration template Staging Area subnet ID.
        stagingAreaTags:
          $ref: '#/components/schemas/TagsMap'
          description: Replication Configuration template Staging Area Tags.
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: Replication Configuration template Tags.
        useDedicatedReplicationServer:
          $ref: '#/components/schemas/Boolean'
          description: Replication Configuration template use Dedicated Replication Server.
    SecurityGroupID:
      type: string
      pattern: '^sg-[0-9a-fA-F]{8,}$'
      minLength: 0
      maxLength: 255
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    AccessDeniedException: {}
    DeleteJobResponse:
      type: object
      properties: {}
    DeleteReplicationConfigurationTemplateResponse:
      type: object
      properties: {}
    DeleteSourceServerResponse:
      type: object
      properties: {}
    DescribeJobLogItemsResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/JobLogs'
          description: Request to describe Job log response items.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Request to describe Job log response next token.
    DescribeJobsResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/JobsList'
          description: Request to describe Job log items.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Request to describe Job response by next token.
    ISO8601DatetimeString:
      type: string
      pattern: '^[1-9][0-9]*-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?Z$'
      minLength: 19
      maxLength: 32
    DescribeJobsRequestFiltersJobIDs:
      type: array
      items:
        $ref: '#/components/schemas/JobID'
      minItems: 0
      maxItems: 1000
    DescribeReplicationConfigurationTemplatesResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/ReplicationConfigurationTemplates'
          description: Request to describe Replication Configuration template by items.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Request to describe Replication Configuration template by next token.
    ReplicationConfigurationTemplateID:
      type: string
      pattern: '^rct-[0-9a-zA-Z]{17}$'
      minLength: 21
      maxLength: 21
    DescribeSourceServersResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/SourceServersList'
          description: Request to filter Source Servers list by item.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Request to filter Source Servers next token.
    Boolean:
      type: boolean
    DescribeSourceServersRequestFiltersIDs:
      type: array
      items:
        $ref: '#/components/schemas/SourceServerID'
      minItems: 0
      maxItems: 200
    LaunchConfiguration:
      type: object
      properties:
        copyPrivateIp:
          $ref: '#/components/schemas/Boolean'
          description: Copy Private IP during Launch Configuration.
        copyTags:
          $ref: '#/components/schemas/Boolean'
          description: Copy Tags during Launch Configuration.
        ec2LaunchTemplateID:
          $ref: '#/components/schemas/BoundedString'
          description: Configure EC2 lauch configuration template ID.
        launchDisposition:
          $ref: '#/components/schemas/LaunchDisposition'
          description: Configure launch dispostion for launch configuration.
        licensing:
          $ref: '#/components/schemas/Licensing'
          description: Configure launch configuration OS licensing.
        name:
          $ref: '#/components/schemas/SmallBoundedString'
          description: Configure launch configuration name.
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Configure launch configuration Source Server ID.
        targetInstanceTypeRightSizingMethod:
          $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
          description: Configure launch configuration Target instance type right sizing method.
    ReplicationConfiguration:
      type: object
      properties:
        associateDefaultSecurityGroup:
          $ref: '#/components/schemas/Boolean'
          description: Replication Configuration associate default Application Migration Service Security Group.
        bandwidthThrottling:
          $ref: '#/components/schemas/PositiveInteger'
          description: Replication Configuration set bandwidth throttling.
        createPublicIP:
          $ref: '#/components/schemas/Boolean'
          description: Replication Configuration create Public IP.
        dataPlaneRouting:
          $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          description: Replication Configuration data plane routing.
        defaultLargeStagingDiskType:
          $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          description: Replication Configuration use default large Staging Disks.
        ebsEncryption:
          $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          description: Replication Configuration EBS encryption.
        ebsEncryptionKeyArn:
          $ref: '#/components/schemas/ARN'
          description: Replication Configuration EBS encryption key ARN.
        name:
          $ref: '#/components/schemas/SmallBoundedString'
          description: Replication Configuration name.
        replicatedDisks:
          $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisks'
          description: Replication Configuration replicated disks.
        replicationServerInstanceType:
          $ref: '#/components/schemas/EC2InstanceType'
          description: Replication Configuration Replication Server instance type.
        replicationServersSecurityGroupsIDs:
          $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          description: Replication Configuration Replication Server Security Group IDs.
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Replication Configuration Source Server ID.
        stagingAreaSubnetId:
          $ref: '#/components/schemas/SubnetID'
          description: Replication Configuration Staging Area subnet ID.
        stagingAreaTags:
          $ref: '#/components/schemas/TagsMap'
          description: Replication Configuration Staging Area tags.
        useDedicatedReplicationServer:
          $ref: '#/components/schemas/Boolean'
          description: Replication Configuration use Dedicated Replication Server.
    InitializeServiceResponse:
      type: object
      properties: {}
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: List tags for resource response.
    ThrottlingException: {}
    InternalServerException: {}
    StartCutoverResponse:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/Job'
          description: Start Cutover Job response.
    SourceServerID:
      type: string
      pattern: '^s-[0-9a-zA-Z]{17}$'
      minLength: 19
      maxLength: 19
    StartTestResponse:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/Job'
          description: Start Test Job response.
    TerminateTargetInstancesResponse:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/Job'
          description: Terminate Target instance Job response.
    TagKey:
      type: string
      minLength: 0
      maxLength: 256
    ReplicationConfigurationReplicatedDisk:
      type: object
      properties:
        deviceName:
          $ref: '#/components/schemas/BoundedString'
          description: Replication Configuration replicated disk device name.
        iops:
          $ref: '#/components/schemas/PositiveInteger'
          description: Replication Configuration replicated disk IOPs.
        isBootDisk:
          $ref: '#/components/schemas/Boolean'
          description: Replication Configuration replicated disk boot disk.
        stagingDiskType:
          $ref: '#/components/schemas/ReplicationConfigurationReplicatedDiskStagingDiskType'
          description: Replication Configuration replicated disk staging disk type.
      description: Replication Configuration replicated disk.
    ARN:
      type: string
      minLength: 20
      maxLength: 2048
    BoundedString:
      type: string
      minLength: 0
      maxLength: 256
    PositiveInteger:
      type: integer
      minimum: 0
    CPU:
      type: object
      properties:
        cores:
          $ref: '#/components/schemas/PositiveInteger'
          description: The number of CPU cores on the source server.
        modelName:
          $ref: '#/components/schemas/BoundedString'
          description: The source server's CPU model name.
      description: Source server CPU information.
    ChangeServerLifeCycleStateSourceServerLifecycle:
      type: object
      required:
        - state
      properties:
        state:
          $ref: '#/components/schemas/ChangeServerLifeCycleStateSourceServerLifecycleState'
          description: The request to change the source server migration lifecycle state.
      description: The request to change the source server migration lifecycle state.
    ChangeServerLifeCycleStateRequest:
      type: object
      required:
        - lifeCycle
        - sourceServerID
      title: ChangeServerLifeCycleStateRequest
      properties:
        lifeCycle:
          $ref: '#/components/schemas/ChangeServerLifeCycleStateSourceServerLifecycle'
          description: The request to change the source server migration lifecycle state.
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: The request to change the source server migration lifecycle state by source server ID.
    Cpus:
      type: array
      items:
        $ref: '#/components/schemas/CPU'
      minItems: 0
      maxItems: 256
    ReplicationConfigurationDataPlaneRouting:
      type: string
      enum:
        - PRIVATE_IP
        - PUBLIC_IP
    ReplicationConfigurationDefaultLargeStagingDiskType:
      type: string
      enum:
        - GP2
        - ST1
    ReplicationConfigurationEbsEncryption:
      type: string
      enum:
        - DEFAULT
        - CUSTOM
    EC2InstanceType:
      type: string
      minLength: 0
      maxLength: 255
    ReplicationServersSecurityGroupsIDs:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupID'
      minItems: 0
      maxItems: 32
    SubnetID:
      type: string
      pattern: '^subnet-[0-9a-fA-F]{8,}$'
      minLength: 0
      maxLength: 255
    TagsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CreateReplicationConfigurationTemplateRequest:
      type: object
      required:
        - associateDefaultSecurityGroup
        - bandwidthThrottling
        - createPublicIP
        - dataPlaneRouting
        - defaultLargeStagingDiskType
        - ebsEncryption
        - replicationServerInstanceType
        - replicationServersSecurityGroupsIDs
        - stagingAreaSubnetId
        - stagingAreaTags
        - useDedicatedReplicationServer
      title: CreateReplicationConfigurationTemplateRequest
      properties:
        associateDefaultSecurityGroup:
          $ref: '#/components/schemas/Boolean'
          description: Request to associate the default Application Migration Service Security group with the Replication Settings template.
        bandwidthThrottling:
          $ref: '#/components/schemas/PositiveInteger'
          description: Request to configure bandwidth throttling during Replication Settings template creation.
        createPublicIP:
          $ref: '#/components/schemas/Boolean'
          description: Request to create Public IP during Replication Settings template creation.
        dataPlaneRouting:
          $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          description: Request to configure data plane routing during Replication Settings template creation.
        defaultLargeStagingDiskType:
          $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          description: Request to configure the Staging Disk EBS volume type to "gp2" during Replication Settings template creation.
        ebsEncryption:
          $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          description: Request to configure EBS enryption during Replication Settings template creation.
        ebsEncryptionKeyArn:
          $ref: '#/components/schemas/ARN'
          description: Request to configure an EBS enryption key during Replication Settings template creation.
        replicationServerInstanceType:
          $ref: '#/components/schemas/EC2InstanceType'
          description: Request to configure the Replication Server instance type during Replication Settings template creation.
        replicationServersSecurityGroupsIDs:
          $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          description: Request to configure the Replication Server Secuirity group ID during Replication Settings template creation.
        stagingAreaSubnetId:
          $ref: '#/components/schemas/SubnetID'
          description: Request to configure the Staging Area subnet ID during Replication Settings template creation.
        stagingAreaTags:
          $ref: '#/components/schemas/TagsMap'
          description: Request to configure Staiging Area tags during Replication Settings template creation.
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: Request to configure tags during Replication Settings template creation.
        useDedicatedReplicationServer:
          $ref: '#/components/schemas/Boolean'
          description: Request to use Dedicated Replication Servers during Replication Settings template creation.
    DataReplicationErrorString:
      type: string
      enum:
        - AGENT_NOT_SEEN
        - SNAPSHOTS_FAILURE
        - NOT_CONVERGING
        - UNSTABLE_NETWORK
        - FAILED_TO_CREATE_SECURITY_GROUP
        - FAILED_TO_LAUNCH_REPLICATION_SERVER
        - FAILED_TO_BOOT_REPLICATION_SERVER
        - FAILED_TO_AUTHENTICATE_WITH_SERVICE
        - FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE
        - FAILED_TO_CREATE_STAGING_DISKS
        - FAILED_TO_ATTACH_STAGING_DISKS
        - FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT
        - FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER
        - FAILED_TO_START_DATA_TRANSFER
    LargeBoundedString:
      type: string
      minLength: 0
      maxLength: 65536
    DataReplicationError:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/DataReplicationErrorString'
          description: Error in data replication.
        rawError:
          $ref: '#/components/schemas/LargeBoundedString'
          description: Error in data replication.
      description: Error in data replication.
    DataReplicationInitiation:
      type: object
      properties:
        nextAttemptDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Request to query next data initiation date and time.
        startDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Request to query data initiation start date and time.
        steps:
          $ref: '#/components/schemas/DataReplicationInitiationSteps'
          description: Request to query data initiation steps.
      description: Data replication initiation.
    DataReplicationState:
      type: string
      enum:
        - STOPPED
        - INITIATING
        - INITIAL_SYNC
        - BACKLOG
        - CREATING_SNAPSHOT
        - CONTINUOUS
        - PAUSED
        - RESCAN
        - STALLED
        - DISCONNECTED
    DataReplicationInfoReplicatedDisks:
      type: array
      items:
        $ref: '#/components/schemas/DataReplicationInfoReplicatedDisk'
      minItems: 0
      maxItems: 60
    DataReplicationInfo:
      type: object
      properties:
        dataReplicationError:
          $ref: '#/components/schemas/DataReplicationError'
          description: Error in obtaining data replication info.
        dataReplicationInitiation:
          $ref: '#/components/schemas/DataReplicationInitiation'
          description: Request to query whether data replication has been initiated.
        dataReplicationState:
          $ref: '#/components/schemas/DataReplicationState'
          description: Request to query the data replication state.
        etaDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Request to query the time when data replication will be complete.
        lagDuration:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Request to query data replication lag durating.
        replicatedDisks:
          $ref: '#/components/schemas/DataReplicationInfoReplicatedDisks'
          description: Request to query disks replicated.
      description: Request data replication info.
    DataReplicationInfoReplicatedDisk:
      type: object
      properties:
        backloggedStorageBytes:
          $ref: '#/components/schemas/PositiveInteger'
          description: Request to query data replication backlog size in bytes.
        deviceName:
          $ref: '#/components/schemas/BoundedString'
          description: Request to query device name.
        replicatedStorageBytes:
          $ref: '#/components/schemas/PositiveInteger'
          description: Request to query amount of data replicated in bytes.
        rescannedStorageBytes:
          $ref: '#/components/schemas/PositiveInteger'
          description: Request to query amount of data rescanned in bytes.
        totalStorageBytes:
          $ref: '#/components/schemas/PositiveInteger'
          description: Request to query total amount of data replicated in bytes.
      description: Request to query disks replicated.
    DataReplicationInitiationSteps:
      type: array
      items:
        $ref: '#/components/schemas/DataReplicationInitiationStep'
    DataReplicationInitiationStepName:
      type: string
      enum:
        - WAIT
        - CREATE_SECURITY_GROUP
        - LAUNCH_REPLICATION_SERVER
        - BOOT_REPLICATION_SERVER
        - AUTHENTICATE_WITH_SERVICE
        - DOWNLOAD_REPLICATION_SOFTWARE
        - CREATE_STAGING_DISKS
        - ATTACH_STAGING_DISKS
        - PAIR_REPLICATION_SERVER_WITH_AGENT
        - CONNECT_AGENT_TO_REPLICATION_SERVER
        - START_DATA_TRANSFER
    DataReplicationInitiationStepStatus:
      type: string
      enum:
        - NOT_STARTED
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
        - SKIPPED
    DataReplicationInitiationStep:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/DataReplicationInitiationStepName'
          description: Request to query data initiation step name.
        status:
          $ref: '#/components/schemas/DataReplicationInitiationStepStatus'
          description: Request to query data initiation status.
      description: Data replication intiation step.
    JobID:
      type: string
      pattern: '^mgnjob-[0-9a-zA-Z]{17}$'
      minLength: 24
      maxLength: 24
    DeleteJobRequest:
      type: object
      required:
        - jobID
      title: DeleteJobRequest
      properties:
        jobID:
          $ref: '#/components/schemas/JobID'
          description: Request to delete Job from service by Job ID.
    DeleteReplicationConfigurationTemplateRequest:
      type: object
      required:
        - replicationConfigurationTemplateID
      title: DeleteReplicationConfigurationTemplateRequest
      properties:
        replicationConfigurationTemplateID:
          $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
          description: Request to delete Replication Configuration Template from service by Replication Configuration Template ID.
    DeleteSourceServerRequest:
      type: object
      required:
        - sourceServerID
      title: DeleteSourceServerRequest
      properties:
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Request to delete Source Server from service by Server ID.
    StrictlyPositiveInteger:
      type: integer
      minimum: 1
    PaginationToken:
      type: string
      minLength: 0
      maxLength: 2048
    DescribeJobLogItemsRequest:
      type: object
      required:
        - jobID
      title: DescribeJobLogItemsRequest
      properties:
        jobID:
          $ref: '#/components/schemas/JobID'
          description: Request to describe Job log job ID.
        maxResults:
          $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: Request to describe Job log item maximum results.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Request to describe Job log next token.
    JobLogs:
      type: array
      items:
        $ref: '#/components/schemas/JobLog'
    DescribeJobsRequestFilters:
      type: object
      properties:
        fromDate:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Request to describe Job log filters by date.
        jobIDs:
          $ref: '#/components/schemas/DescribeJobsRequestFiltersJobIDs'
          description: Request to describe Job log filters by job ID.
        toDate:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Request to describe Job log by last date.
      description: Request to describe Job log filters.
    DescribeJobsRequest:
      type: object
      required:
        - filters
      title: DescribeJobsRequest
      properties:
        filters:
          $ref: '#/components/schemas/DescribeJobsRequestFilters'
          description: Request to describe Job log filters.
        maxResults:
          $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: Request to describe Job log by max results.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Request to describe Job logby next token.
    JobsList:
      type: array
      items:
        $ref: '#/components/schemas/Job'
    ReplicationConfigurationTemplateIDs:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
      minItems: 0
      maxItems: 200
    DescribeReplicationConfigurationTemplatesRequest:
      type: object
      required:
        - replicationConfigurationTemplateIDs
      title: DescribeReplicationConfigurationTemplatesRequest
      properties:
        maxResults:
          $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: Request to describe Replication Configuration template by max results.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Request to describe Replication Configuration template by next token.
        replicationConfigurationTemplateIDs:
          $ref: '#/components/schemas/ReplicationConfigurationTemplateIDs'
          description: Request to describe Replication Configuration template by template IDs.
    ReplicationConfigurationTemplates:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationConfigurationTemplate'
    DescribeSourceServersRequestFilters:
      type: object
      properties:
        isArchived:
          $ref: '#/components/schemas/Boolean'
          description: Request to filter Source Servers list by archived.
        sourceServerIDs:
          $ref: '#/components/schemas/DescribeSourceServersRequestFiltersIDs'
          description: Request to filter Source Servers list by Source Server ID.
      description: Request to filter Source Servers list.
    DescribeSourceServersRequest:
      type: object
      required:
        - filters
      title: DescribeSourceServersRequest
      properties:
        filters:
          $ref: '#/components/schemas/DescribeSourceServersRequestFilters'
          description: Request to filter Source Servers list.
        maxResults:
          $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: Request to filter Source Servers list by maximum results.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Request to filter Source Servers list by next token.
    SourceServersList:
      type: array
      items:
        $ref: '#/components/schemas/SourceServer'
    DisconnectFromServiceRequest:
      type: object
      required:
        - sourceServerID
      title: DisconnectFromServiceRequest
      properties:
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Request to disconnect Source Server from service by Server ID.
    Disk:
      type: object
      properties:
        bytes:
          $ref: '#/components/schemas/PositiveInteger'
          description: The amount of storage on the disk in bytes.
        deviceName:
          $ref: '#/components/schemas/BoundedString'
          description: The disk or device name.
      description: The disk identifier.
    Disks:
      type: array
      items:
        $ref: '#/components/schemas/Disk'
      minItems: 0
      maxItems: 1000
    EC2InstanceID:
      type: string
      pattern: '^i-[0-9a-fA-F]{8,}$'
      minLength: 0
      maxLength: 255
    FinalizeCutoverRequest:
      type: object
      required:
        - sourceServerID
      title: FinalizeCutoverRequest
      properties:
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Request to finalize Cutover by Soure Server ID.
    FirstBoot:
      type: string
      enum:
        - WAITING
        - SUCCEEDED
        - UNKNOWN
        - STOPPED
    GetLaunchConfigurationRequest:
      type: object
      required:
        - sourceServerID
      title: GetLaunchConfigurationRequest
      properties:
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Request to get Launch Configuration information by Source Server ID.
    GetReplicationConfigurationRequest:
      type: object
      required:
        - sourceServerID
      title: GetReplicationConfigurationRequest
      properties:
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Request to get Replication Configuaration by Source Server ID.
    IPsList:
      type: array
      items:
        $ref: '#/components/schemas/BoundedString'
    IdentificationHints:
      type: object
      properties:
        awsInstanceID:
          $ref: '#/components/schemas/EC2InstanceID'
          description: AWS Instance ID identification hint.
        fqdn:
          $ref: '#/components/schemas/BoundedString'
          description: FQDN address identification hint.
        hostname:
          $ref: '#/components/schemas/BoundedString'
          description: Hostname identification hint.
        vmWareUuid:
          $ref: '#/components/schemas/BoundedString'
          description: vmWare UUID identification hint.
      description: Identification hints.
    InitializeServiceRequest:
      type: object
      title: InitializeServiceRequest
      properties: {}
    InitiatedBy:
      type: string
      enum:
        - START_TEST
        - START_CUTOVER
        - DIAGNOSTIC
        - TERMINATE
    ParticipatingServers:
      type: array
      items:
        $ref: '#/components/schemas/ParticipatingServer'
    JobStatus:
      type: string
      enum:
        - PENDING
        - STARTED
        - COMPLETED
    JobType:
      type: string
      enum:
        - LAUNCH
        - TERMINATE
    Job:
      type: object
      required:
        - jobID
      properties:
        arn:
          $ref: '#/components/schemas/ARN'
          description: the ARN of the specific Job.
        creationDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Job creation time.
        endDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Job end time.
        initiatedBy:
          $ref: '#/components/schemas/InitiatedBy'
          description: Job initiated by field.
        jobID:
          $ref: '#/components/schemas/JobID'
          description: Job ID.
        participatingServers:
          $ref: '#/components/schemas/ParticipatingServers'
          description: Servers participating in a specific Job.
        status:
          $ref: '#/components/schemas/JobStatus'
          description: Job status.
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: Tags associated with spcific Job.
        type:
          $ref: '#/components/schemas/JobType'
          description: Job type.
      description: Job.
    JobLogEvent:
      type: string
      enum:
        - JOB_START
        - SERVER_SKIPPED
        - CLEANUP_START
        - CLEANUP_END
        - CLEANUP_FAIL
        - SNAPSHOT_START
        - SNAPSHOT_END
        - SNAPSHOT_FAIL
        - USING_PREVIOUS_SNAPSHOT
        - CONVERSION_START
        - CONVERSION_END
        - CONVERSION_FAIL
        - LAUNCH_START
        - LAUNCH_FAILED
        - JOB_CANCEL
        - JOB_END
    JobLogEventData:
      type: object
      properties:
        conversionServerID:
          $ref: '#/components/schemas/EC2InstanceID'
          description: Job Event conversion Server ID.
        rawError:
          $ref: '#/components/schemas/LargeBoundedString'
          description: Job error.
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Job Event Source Server ID.
        targetInstanceID:
          $ref: '#/components/schemas/EC2InstanceID'
          description: Job Event Target instance ID.
      description: Job log data
    JobLog:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/JobLogEvent'
          description: Job log event.
        eventData:
          $ref: '#/components/schemas/JobLogEventData'
          description: Job event data
        logDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Job log event date and time.
      description: Job log.
    LaunchDisposition:
      type: string
      enum:
        - STOPPED
        - STARTED
    Licensing:
      type: object
      properties:
        osByol:
          $ref: '#/components/schemas/Boolean'
          description: Configure BYOL OS licensing.
      description: Configure Licensing.
    SmallBoundedString:
      type: string
      minLength: 0
      maxLength: 128
    TargetInstanceTypeRightSizingMethod:
      type: string
      enum:
        - NONE
        - BASIC
    LaunchStatus:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - LAUNCHED
        - FAILED
        - TERMINATED
    LaunchedInstance:
      type: object
      properties:
        ec2InstanceID:
          $ref: '#/components/schemas/EC2InstanceID'
          description: Configure launced instance EC2 ID.
        firstBoot:
          $ref: '#/components/schemas/FirstBoot'
          description: Configure launced instance first boot.
        jobID:
          $ref: '#/components/schemas/JobID'
          description: Configure launced instance Job ID.
      description: Configure launced instance.
    LifeCycleLastCutover:
      type: object
      properties:
        finalized:
          $ref: '#/components/schemas/LifeCycleLastCutoverFinalized'
          description: Lifecycle Cutover finalized date and time.
        initiated:
          $ref: '#/components/schemas/LifeCycleLastCutoverInitiated'
          description: Lifecycle last Cutover initiated.
        reverted:
          $ref: '#/components/schemas/LifeCycleLastCutoverReverted'
          description: Lifecycle last Cutover reverted.
      description: Lifecycle last Cutover .
    LifeCycleLastTest:
      type: object
      properties:
        finalized:
          $ref: '#/components/schemas/LifeCycleLastTestFinalized'
          description: Lifecycle last Test finlized.
        initiated:
          $ref: '#/components/schemas/LifeCycleLastTestInitiated'
          description: Lifecycle last Test initiated.
        reverted:
          $ref: '#/components/schemas/LifeCycleLastTestReverted'
          description: Lifecycle last Test reverted.
      description: Lifecycle last Test.
    LifeCycleState:
      type: string
      enum:
        - STOPPED
        - NOT_READY
        - READY_FOR_TEST
        - TESTING
        - READY_FOR_CUTOVER
        - CUTTING_OVER
        - CUTOVER
        - DISCONNECTED
    LifeCycle:
      type: object
      properties:
        addedToServiceDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Lifecycle added to service data and time.
        elapsedReplicationDuration:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Lifecycle elapsed time and duration.
        firstByteDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Lifecycle replication initiation date and time.
        lastCutover:
          $ref: '#/components/schemas/LifeCycleLastCutover'
          description: Lifecycle last Cutover.
        lastSeenByServiceDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Lifecycle last seen date and time.
        lastTest:
          $ref: '#/components/schemas/LifeCycleLastTest'
          description: Lifecycle last Test.
        state:
          $ref: '#/components/schemas/LifeCycleState'
          description: Lifecycle state.
      description: Lifecycle.
    LifeCycleLastCutoverFinalized:
      type: object
      properties:
        apiCallDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Lifecycle Cutover finalized date and time.
      description: Lifecycle Cutover finalized
    LifeCycleLastCutoverInitiated:
      type: object
      properties:
        apiCallDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: <p/>
        jobID:
          $ref: '#/components/schemas/JobID'
          description: Lifecycle last Cutover initiated by Job ID.
      description: Lifecycle last Cutover initiated.
    LifeCycleLastCutoverReverted:
      type: object
      properties:
        apiCallDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Lifecycle last Cutover reverted API call date time.
      description: Lifecycle last Cutover reverted.
    LifeCycleLastTestFinalized:
      type: object
      properties:
        apiCallDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Lifecycle Test failed API call date and time.
      description: Lifecycle last Test finlized.
    LifeCycleLastTestInitiated:
      type: object
      properties:
        apiCallDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Lifecycle last Test initiated API call date and time.
        jobID:
          $ref: '#/components/schemas/JobID'
          description: Lifecycle last Test initiated Job ID.
      description: Lifecycle last Test initiated.
    LifeCycleLastTestReverted:
      type: object
      properties:
        apiCallDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Lifecycle last Test reverted API call date and time.
      description: Lifecycle last Test reverted.
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    MarkAsArchivedRequest:
      type: object
      required:
        - sourceServerID
      title: MarkAsArchivedRequest
      properties:
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Mark as archived by Source Server ID.
    NetworkInterface:
      type: object
      properties:
        ips:
          $ref: '#/components/schemas/IPsList'
          description: Network interface IPs.
        isPrimary:
          $ref: '#/components/schemas/Boolean'
          description: Network interface primary IP.
        macAddress:
          $ref: '#/components/schemas/BoundedString'
          description: Network interface Mac address.
      description: Network interface.
    NetworkInterfaces:
      type: array
      items:
        $ref: '#/components/schemas/NetworkInterface'
      minItems: 0
      maxItems: 32
    OS:
      type: object
      properties:
        fullString:
          $ref: '#/components/schemas/BoundedString'
          description: OS full string.
      description: Operating System.
    ParticipatingServer:
      type: object
      properties:
        launchStatus:
          $ref: '#/components/schemas/LaunchStatus'
          description: Participating server launch status.
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Participating server Source Server ID.
      description: Server participating in Job.
    ReplicationConfigurationReplicatedDisks:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisk'
      minItems: 0
      maxItems: 60
    ReplicationConfigurationReplicatedDiskStagingDiskType:
      type: string
      enum:
        - AUTO
        - GP2
        - IO1
        - SC1
        - ST1
        - STANDARD
    RetryDataReplicationRequest:
      type: object
      required:
        - sourceServerID
      title: RetryDataReplicationRequest
      properties:
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Retry data replication for Source Server ID.
    SourceProperties:
      type: object
      properties:
        cpus:
          $ref: '#/components/schemas/Cpus'
          description: Source Server CPUs.
        disks:
          $ref: '#/components/schemas/Disks'
          description: Source Server disks.
        identificationHints:
          $ref: '#/components/schemas/IdentificationHints'
          description: Source server identification hints.
        lastUpdatedDateTime:
          $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Source server last update date and time.
        networkInterfaces:
          $ref: '#/components/schemas/NetworkInterfaces'
          description: Source server network interfaces.
        os:
          $ref: '#/components/schemas/OS'
          description: Source server OS.
        ramBytes:
          $ref: '#/components/schemas/PositiveInteger'
          description: Source server RAM in bytes.
        recommendedInstanceType:
          $ref: '#/components/schemas/EC2InstanceType'
          description: Source server recommended instance type.
      description: Source server properties.
    StartCutoverRequestSourceServerIDs:
      type: array
      items:
        $ref: '#/components/schemas/SourceServerID'
      minItems: 1
      maxItems: 200
    StartCutoverRequest:
      type: object
      required:
        - sourceServerIDs
      title: StartCutoverRequest
      properties:
        sourceServerIDs:
          $ref: '#/components/schemas/StartCutoverRequestSourceServerIDs'
          description: Start Cutover by Source Server IDs.
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: Start Cutover by Tags.
    StartTestRequestSourceServerIDs:
      type: array
      items:
        $ref: '#/components/schemas/SourceServerID'
      minItems: 1
      maxItems: 200
    StartTestRequest:
      type: object
      required:
        - sourceServerIDs
      title: StartTestRequest
      properties:
        sourceServerIDs:
          $ref: '#/components/schemas/StartTestRequestSourceServerIDs'
          description: Start Test for Source Server IDs.
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: Start Test by Tags.
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: Tag resource by Tags.
    TerminateTargetInstancesRequestSourceServerIDs:
      type: array
      items:
        $ref: '#/components/schemas/SourceServerID'
      minItems: 1
      maxItems: 200
    TerminateTargetInstancesRequest:
      type: object
      required:
        - sourceServerIDs
      title: TerminateTargetInstancesRequest
      properties:
        sourceServerIDs:
          $ref: '#/components/schemas/TerminateTargetInstancesRequestSourceServerIDs'
          description: Terminate Target instance by Source Server IDs.
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: Terminate Target instance by Tags.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateLaunchConfigurationRequest:
      type: object
      required:
        - sourceServerID
      title: UpdateLaunchConfigurationRequest
      properties:
        copyPrivateIp:
          $ref: '#/components/schemas/Boolean'
          description: Update Launch configuration copy Private IP request.
        copyTags:
          $ref: '#/components/schemas/Boolean'
          description: Update Launch configuration copy Tags request.
        launchDisposition:
          $ref: '#/components/schemas/LaunchDisposition'
          description: Update Launch configuration launch disposition request.
        licensing:
          $ref: '#/components/schemas/Licensing'
          description: Update Launch configuration licensing request.
        name:
          $ref: '#/components/schemas/SmallBoundedString'
          description: Update Launch configuration name request.
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Update Launch configuration by Source Server ID request.
        targetInstanceTypeRightSizingMethod:
          $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
          description: Update Launch configuration Target instance right sizing request.
    UpdateReplicationConfigurationRequest:
      type: object
      required:
        - sourceServerID
      title: UpdateReplicationConfigurationRequest
      properties:
        associateDefaultSecurityGroup:
          $ref: '#/components/schemas/Boolean'
          description: Update replication configuration associate default Application Migration Service Security group request.
        bandwidthThrottling:
          $ref: '#/components/schemas/PositiveInteger'
          description: Update replication configuration bandwidth throttling request.
        createPublicIP:
          $ref: '#/components/schemas/Boolean'
          description: Update replication configuration create Public IP request.
        dataPlaneRouting:
          $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          description: Update replication configuration data plane routing request.
        defaultLargeStagingDiskType:
          $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          description: Update replication configuration use default large Staging Disk type request.
        ebsEncryption:
          $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          description: Update replication configuration EBS encryption request.
        ebsEncryptionKeyArn:
          $ref: '#/components/schemas/ARN'
          description: Update replication configuration EBS encryption key ARN request.
        name:
          $ref: '#/components/schemas/SmallBoundedString'
          description: Update replication configuration name request.
        replicatedDisks:
          $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisks'
          description: Update replication configuration replicated disks request.
        replicationServerInstanceType:
          $ref: '#/components/schemas/EC2InstanceType'
          description: Update replication configuration Replication Server instance type request.
        replicationServersSecurityGroupsIDs:
          $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          description: Update replication configuration Replication Server Security Groups IDs request.
        sourceServerID:
          $ref: '#/components/schemas/SourceServerID'
          description: Update replication configuration Source Server ID request.
        stagingAreaSubnetId:
          $ref: '#/components/schemas/SubnetID'
          description: Update replication configuration Staging Area subnet request.
        stagingAreaTags:
          $ref: '#/components/schemas/TagsMap'
          description: Update replication configuration Staging Area Tags request.
        useDedicatedReplicationServer:
          $ref: '#/components/schemas/Boolean'
          description: Update replication configuration use dedicated Replication Server request.
    UpdateReplicationConfigurationTemplateRequest:
      type: object
      required:
        - replicationConfigurationTemplateID
      title: UpdateReplicationConfigurationTemplateRequest
      properties:
        arn:
          $ref: '#/components/schemas/ARN'
          description: Update replication configuration template ARN request.
        associateDefaultSecurityGroup:
          $ref: '#/components/schemas/Boolean'
          description: Update replication configuration template associate default Application Migration Service Security group request.
        bandwidthThrottling:
          $ref: '#/components/schemas/PositiveInteger'
          description: Update replication configuration template bandwidth throttling request.
        createPublicIP:
          $ref: '#/components/schemas/Boolean'
          description: Update replication configuration template create Public IP request.
        dataPlaneRouting:
          $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          description: Update replication configuration template data plane routing request.
        defaultLargeStagingDiskType:
          $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          description: Update replication configuration template use default large Staging Disk type request.
        ebsEncryption:
          $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          description: Update replication configuration template EBS encryption request.
        ebsEncryptionKeyArn:
          $ref: '#/components/schemas/ARN'
          description: Update replication configuration template EBS encryption key ARN request.
        replicationConfigurationTemplateID:
          $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
          description: Update replication configuration template template ID request.
        replicationServerInstanceType:
          $ref: '#/components/schemas/EC2InstanceType'
          description: Update replication configuration template Replication Server instance type request.
        replicationServersSecurityGroupsIDs:
          $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          description: Update replication configuration template Replication Server Security groups IDs request.
        stagingAreaSubnetId:
          $ref: '#/components/schemas/SubnetID'
          description: Update replication configuration template Staging Area subnet ID request.
        stagingAreaTags:
          $ref: '#/components/schemas/TagsMap'
          description: Update replication configuration template Staging Area Tags request.
        useDedicatedReplicationServer:
          $ref: '#/components/schemas/Boolean'
          description: Update replication configuration template use dedicated Replication Server request.
security:
  - hmac: []
