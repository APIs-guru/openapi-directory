openapi: 3.0.0
info:
  version: '2017-07-25'
  x-release: v4
  title: Amazon Lookout for Metrics
  description: 'This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev">Amazon Lookout for Metrics Developer Guide</a>.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: lookoutmetrics
  x-aws-signingName: lookoutmetrics
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lookoutmetrics-2017-07-25.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/lookoutmetrics/'
servers:
  - url: 'http://lookoutmetrics.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The LookoutMetrics multi-region endpoint
  - url: 'https://lookoutmetrics.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The LookoutMetrics multi-region endpoint
  - url: 'http://lookoutmetrics.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The LookoutMetrics endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://lookoutmetrics.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The LookoutMetrics endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /ActivateAnomalyDetector:
    post:
      operationId: ActivateAnomalyDetector
      description: Activates an anomaly detector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateAnomalyDetectorResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyDetectorArn
              properties:
                AnomalyDetectorArn:
                  description: The ARN of the anomaly detector.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /BackTestAnomalyDetector:
    post:
      operationId: BackTestAnomalyDetector
      description: Runs a backtest for anomaly detection for the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackTestAnomalyDetectorResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyDetectorArn
              properties:
                AnomalyDetectorArn:
                  description: The Amazon Resource Name (ARN) of the anomaly detector.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /CreateAlert:
    post:
      operationId: CreateAlert
      description: Creates an alert for an anomaly detector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAlertResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AlertName
                - AlertSensitivityThreshold
                - AnomalyDetectorArn
                - Action
              properties:
                AlertName:
                  description: The name of the alert.
                  type: string
                  pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
                  minLength: 1
                  maxLength: 63
                AlertSensitivityThreshold:
                  description: An integer from 0 to 100 specifying the alert sensitivity threshold.
                  type: integer
                  minimum: 0
                  maximum: 100
                AlertDescription:
                  description: A description of the alert.
                  type: string
                  pattern: .*\S.*
                  maxLength: 256
                AnomalyDetectorArn:
                  description: The ARN of the detector to which the alert is attached.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
                Action:
                  description: A configuration that specifies the action to perform when anomalies are detected.
                  type: object
                  properties:
                    SNSConfiguration:
                      $ref: '#/components/schemas/SNSConfiguration'
                      description: A configuration for an Amazon SNS channel.
                    LambdaConfiguration:
                      $ref: '#/components/schemas/LambdaConfiguration'
                      description: A configuration for an AWS Lambda channel.
                Tags:
                  description: 'A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the alert.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /CreateAnomalyDetector:
    post:
      operationId: CreateAnomalyDetector
      description: Creates an anomaly detector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAnomalyDetectorResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyDetectorName
                - AnomalyDetectorConfig
              properties:
                AnomalyDetectorName:
                  description: The name of the detector.
                  type: string
                  pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
                  minLength: 1
                  maxLength: 63
                AnomalyDetectorDescription:
                  description: A description of the detector.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 256
                AnomalyDetectorConfig:
                  description: Contains information about a detector's configuration.
                  type: object
                  properties:
                    AnomalyDetectorFrequency:
                      $ref: '#/components/schemas/Frequency'
                      description: The frequency at which the detector analyzes its source data.
                KmsKeyArn:
                  description: The ARN of the KMS key to use to encrypt your data.
                  type: string
                  pattern: 'arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}'
                  minLength: 20
                  maxLength: 2048
                Tags:
                  description: 'A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the anomaly detector.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /CreateMetricSet:
    post:
      operationId: CreateMetricSet
      description: Creates a dataset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMetricSetResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyDetectorArn
                - MetricSetName
                - MetricList
                - MetricSource
              properties:
                AnomalyDetectorArn:
                  description: The ARN of the anomaly detector that will use the dataset.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
                MetricSetName:
                  description: The name of the dataset.
                  type: string
                  pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
                  minLength: 1
                  maxLength: 63
                MetricSetDescription:
                  description: A description of the dataset you are creating.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 256
                MetricList:
                  description: A list of metrics that the dataset will contain.
                  type: array
                  items:
                    $ref: '#/components/schemas/Metric'
                  minItems: 1
                Offset:
                  description: 'After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3 and Redshift datasources.'
                  type: integer
                  minimum: 0
                  maximum: 432000
                TimestampColumn:
                  description: Contains information about the column used to track time in a source data file.
                  type: object
                  properties:
                    ColumnName:
                      $ref: '#/components/schemas/ColumnName'
                      description: The name of the timestamp column.
                    ColumnFormat:
                      $ref: '#/components/schemas/DateTimeFormat'
                      description: The format of the timestamp column.
                DimensionList:
                  description: A list of the fields you want to treat as dimensions.
                  type: array
                  items:
                    $ref: '#/components/schemas/ColumnName'
                  minItems: 1
                MetricSetFrequency:
                  description: The frequency with which the source data will be analyzed for anomalies.
                  type: string
                  enum:
                    - P1D
                    - PT1H
                    - PT10M
                    - PT5M
                MetricSource:
                  description: Contains information about source data used to generate a metric.
                  type: object
                  properties:
                    S3SourceConfig:
                      $ref: '#/components/schemas/S3SourceConfig'
                    AppFlowConfig:
                      $ref: '#/components/schemas/AppFlowConfig'
                      description: An object containing information about the AppFlow configuration.
                    CloudWatchConfig:
                      $ref: '#/components/schemas/CloudWatchConfig'
                      description: An object containing information about the Amazon CloudWatch monitoring configuration.
                    RDSSourceConfig:
                      $ref: '#/components/schemas/RDSSourceConfig'
                      description: An object containing information about the Amazon Relational Database Service (RDS) configuration.
                    RedshiftSourceConfig:
                      $ref: '#/components/schemas/RedshiftSourceConfig'
                      description: An object containing information about the Amazon Redshift database configuration.
                Timezone:
                  description: The time zone in which your source data was recorded.
                  type: string
                  pattern: .*\S.*
                  maxLength: 60
                Tags:
                  description: 'A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the dataset.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteAlert:
    post:
      operationId: DeleteAlert
      description: Deletes an alert.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAlertResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AlertArn
              properties:
                AlertArn:
                  description: The ARN of the alert to delete.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteAnomalyDetector:
    post:
      operationId: DeleteAnomalyDetector
      description: Deletes a detector. Deleting an anomaly detector will delete all of its corresponding resources including any configured datasets and alerts.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAnomalyDetectorResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyDetectorArn
              properties:
                AnomalyDetectorArn:
                  description: The ARN of the detector to delete.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeAlert:
    post:
      operationId: DescribeAlert
      description: '<p>Describes an alert.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAlertResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AlertArn
              properties:
                AlertArn:
                  description: The ARN of the alert to describe.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeAnomalyDetectionExecutions:
    post:
      operationId: DescribeAnomalyDetectionExecutions
      description: Returns information about the status of the specified anomaly detection jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAnomalyDetectionExecutionsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyDetectorArn
              properties:
                AnomalyDetectorArn:
                  description: The Amazon Resource Name (ARN) of the anomaly detector.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
                Timestamp:
                  description: The timestamp of the anomaly detection job.
                  type: string
                  pattern: '^([12]\d{3})-(1[0-2]|0[1-9])-(0[1-9]|[12]\d|3[01])T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)(Z|(\+|\-)(0\d|1[0-2]):([0-5]\d)(\[[[:alnum:]\/\_]+\])?)$'
                  maxLength: 60
                MaxResults:
                  description: The number of items to return in the response.
                  type: integer
                  minimum: 1
                  maximum: 100
                NextToken:
                  description: Specify the pagination token that's returned by a previous request to retrieve the next page of results.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 3000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeAnomalyDetector:
    post:
      operationId: DescribeAnomalyDetector
      description: '<p>Describes a detector.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAnomalyDetectorResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyDetectorArn
              properties:
                AnomalyDetectorArn:
                  description: The ARN of the detector to describe.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeMetricSet:
    post:
      operationId: DescribeMetricSet
      description: '<p>Describes a dataset.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMetricSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MetricSetArn
              properties:
                MetricSetArn:
                  description: The ARN of the dataset.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /GetAnomalyGroup:
    post:
      operationId: GetAnomalyGroup
      description: Returns details about a group of anomalous metrics.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnomalyGroupResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyGroupId
                - AnomalyDetectorArn
              properties:
                AnomalyGroupId:
                  description: The ID of the anomaly group.
                  type: string
                  pattern: '[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}'
                  maxLength: 63
                AnomalyDetectorArn:
                  description: The Amazon Resource Name (ARN) of the anomaly detector.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /GetFeedback:
    post:
      operationId: GetFeedback
      description: Get feedback for an anomaly group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeedbackResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyDetectorArn
                - AnomalyGroupTimeSeriesFeedback
              properties:
                AnomalyDetectorArn:
                  description: The Amazon Resource Name (ARN) of the anomaly detector.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
                AnomalyGroupTimeSeriesFeedback:
                  description: An anomalous metric in an anomaly group.
                  type: object
                  properties:
                    AnomalyGroupId:
                      $ref: '#/components/schemas/UUID'
                      description: The ID of the anomaly group.
                    TimeSeriesId:
                      $ref: '#/components/schemas/TimeSeriesId'
                      description: The ID of the metric.
                MaxResults:
                  description: The maximum number of results to return.
                  type: integer
                  minimum: 1
                  maximum: 100
                NextToken:
                  description: Specify the pagination token that's returned by a previous request to retrieve the next page of results.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 3000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /GetSampleData:
    post:
      operationId: GetSampleData
      description: Returns a selection of sample records from an Amazon S3 datasource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSampleDataResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                S3SourceConfig:
                  description: Contains information about the source configuration in Amazon S3.
                  type: object
                  properties:
                    RoleArn:
                      $ref: '#/components/schemas/Arn'
                      description: The Amazon Resource Name (ARN) of the role.
                    TemplatedPathList:
                      $ref: '#/components/schemas/TemplatedPathList'
                      description: An array of strings containing the list of templated paths.
                    HistoricalDataPathList:
                      $ref: '#/components/schemas/HistoricalDataPathList'
                      description: An array of strings containing the historical set of data paths.
                    FileFormatDescriptor:
                      $ref: '#/components/schemas/FileFormatDescriptor'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ListAlerts:
    post:
      operationId: ListAlerts
      description: '<p>Lists the alerts attached to a detector.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlertsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  description: The ARN of the alert's detector.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
                NextToken:
                  description: 'If the result of the previous request is truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.'
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 3000
                MaxResults:
                  description: The maximum number of results that will be displayed by the request.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ListAnomalyDetectors:
    post:
      operationId: ListAnomalyDetectors
      description: '<p>Lists the detectors in the current AWS Region.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnomalyDetectorsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: The maximum number of results to return.
                  type: integer
                  minimum: 1
                  maximum: 100
                NextToken:
                  description: 'If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.'
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 3000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ListAnomalyGroupSummaries:
    post:
      operationId: ListAnomalyGroupSummaries
      description: Returns a list of anomaly groups.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnomalyGroupSummariesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyDetectorArn
                - SensitivityThreshold
              properties:
                AnomalyDetectorArn:
                  description: The Amazon Resource Name (ARN) of the anomaly detector.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
                SensitivityThreshold:
                  description: The minimum severity score for inclusion in the output.
                  type: integer
                  minimum: 0
                  maximum: 100
                MaxResults:
                  description: The maximum number of results to return.
                  type: integer
                  minimum: 1
                  maximum: 100
                NextToken:
                  description: Specify the pagination token that's returned by a previous request to retrieve the next page of results.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 3000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ListAnomalyGroupTimeSeries:
    post:
      operationId: ListAnomalyGroupTimeSeries
      description: Gets a list of anomalous metrics for a measure in an anomaly group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnomalyGroupTimeSeriesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyDetectorArn
                - AnomalyGroupId
                - MetricName
              properties:
                AnomalyDetectorArn:
                  description: The Amazon Resource Name (ARN) of the anomaly detector.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
                AnomalyGroupId:
                  description: The ID of the anomaly group.
                  type: string
                  pattern: '[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}'
                  maxLength: 63
                MetricName:
                  description: The name of the measure field.
                  type: string
                  pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
                  maxLength: 256
                MaxResults:
                  description: The maximum number of results to return.
                  type: integer
                  minimum: 1
                  maximum: 100
                NextToken:
                  description: Specify the pagination token that's returned by a previous request to retrieve the next page of results.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 3000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ListMetricSets:
    post:
      operationId: ListMetricSets
      description: '<p>Lists the datasets in the current AWS Region.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMetricSetsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  description: The ARN of the anomaly detector containing the metrics sets to list.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
                MaxResults:
                  description: The maximum number of results to return.
                  type: integer
                  minimum: 1
                  maximum: 100
                NextToken:
                  description: 'If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.'
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 3000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: 'Gets a list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> for a detector, dataset, or alert.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The resource's Amazon Resource Name (ARN).
          schema:
            type: string
            pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: 'Adds <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to a detector, dataset, or alert.'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The resource's Amazon Resource Name (ARN).
          schema:
            type: string
            pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: 'Tags to apply to the resource. Tag keys and values can contain letters, numbers, spaces, and the following symbols: <code>_.:/=+@-</code> '
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  /PutFeedback:
    post:
      operationId: PutFeedback
      description: Add feedback for an anomalous metric.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFeedbackResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyDetectorArn
                - AnomalyGroupTimeSeriesFeedback
              properties:
                AnomalyDetectorArn:
                  description: The Amazon Resource Name (ARN) of the anomaly detector.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
                AnomalyGroupTimeSeriesFeedback:
                  description: Feedback for an anomalous metric.
                  type: object
                  properties:
                    AnomalyGroupId:
                      $ref: '#/components/schemas/UUID'
                      description: The ID of the anomaly group.
                    TimeSeriesId:
                      $ref: '#/components/schemas/TimeSeriesId'
                      description: The ID of the metric.
                    IsAnomaly:
                      $ref: '#/components/schemas/Boolean'
                      description: Feedback on whether the metric is a legitimate anomaly.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: 'Removes <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> from a detector, dataset, or alert.'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The resource's Amazon Resource Name (ARN).
          schema:
            type: string
            pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
            maxLength: 256
        - name: tagKeys
          in: query
          required: true
          description: Keys to remove from the resource's tags.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateAnomalyDetector:
    post:
      operationId: UpdateAnomalyDetector
      description: 'Updates a detector. After activation, you can only change a detector''s ingestion delay and description.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAnomalyDetectorResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AnomalyDetectorArn
              properties:
                AnomalyDetectorArn:
                  description: The ARN of the detector to update.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
                KmsKeyArn:
                  description: The Amazon Resource Name (ARN) of an AWS KMS encryption key.
                  type: string
                  pattern: 'arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}'
                  minLength: 20
                  maxLength: 2048
                AnomalyDetectorDescription:
                  description: The updated detector description.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 256
                AnomalyDetectorConfig:
                  description: Contains information about a detector's configuration.
                  type: object
                  properties:
                    AnomalyDetectorFrequency:
                      $ref: '#/components/schemas/Frequency'
                      description: The frequency at which the detector analyzes its source data.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateMetricSet:
    post:
      operationId: UpdateMetricSet
      description: Updates a dataset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMetricSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MetricSetArn
              properties:
                MetricSetArn:
                  description: The ARN of the dataset to update.
                  type: string
                  pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                  maxLength: 256
                MetricSetDescription:
                  description: The dataset's description.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 256
                MetricList:
                  description: The metric list.
                  type: array
                  items:
                    $ref: '#/components/schemas/Metric'
                  minItems: 1
                Offset:
                  description: 'After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3 and Redshift datasources.'
                  type: integer
                  minimum: 0
                  maximum: 432000
                TimestampColumn:
                  description: Contains information about the column used to track time in a source data file.
                  type: object
                  properties:
                    ColumnName:
                      $ref: '#/components/schemas/ColumnName'
                      description: The name of the timestamp column.
                    ColumnFormat:
                      $ref: '#/components/schemas/DateTimeFormat'
                      description: The format of the timestamp column.
                DimensionList:
                  description: The dimension list.
                  type: array
                  items:
                    $ref: '#/components/schemas/ColumnName'
                  minItems: 1
                MetricSetFrequency:
                  description: The dataset's interval.
                  type: string
                  enum:
                    - P1D
                    - PT1H
                    - PT10M
                    - PT5M
                MetricSource:
                  description: Contains information about source data used to generate a metric.
                  type: object
                  properties:
                    S3SourceConfig:
                      $ref: '#/components/schemas/S3SourceConfig'
                    AppFlowConfig:
                      $ref: '#/components/schemas/AppFlowConfig'
                      description: An object containing information about the AppFlow configuration.
                    CloudWatchConfig:
                      $ref: '#/components/schemas/CloudWatchConfig'
                      description: An object containing information about the Amazon CloudWatch monitoring configuration.
                    RDSSourceConfig:
                      $ref: '#/components/schemas/RDSSourceConfig'
                      description: An object containing information about the Amazon Relational Database Service (RDS) configuration.
                    RedshiftSourceConfig:
                      $ref: '#/components/schemas/RedshiftSourceConfig'
                      description: An object containing information about the Amazon Redshift database configuration.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    ActivateAnomalyDetectorResponse:
      type: object
      properties: {}
    ValidationException: {}
    ResourceNotFoundException: {}
    AccessDeniedException: {}
    TooManyRequestsException: {}
    InternalServerException: {}
    ConflictException: {}
    BackTestAnomalyDetectorResponse:
      type: object
      properties: {}
    CreateAlertResponse:
      type: object
      properties:
        AlertArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the alert.
    SNSConfiguration:
      type: object
      required:
        - RoleArn
        - SnsTopicArn
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the IAM role that has access to the target SNS topic.
        SnsTopicArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the target SNS topic.
      description: Contains information about the SNS topic to which you want to send your alerts and the IAM role that has access to that topic.
    LambdaConfiguration:
      type: object
      required:
        - RoleArn
        - LambdaArn
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of an IAM role that has permission to invoke the Lambda function.
        LambdaArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the Lambda function.
      description: Contains information about a Lambda configuration.
    TagValue:
      type: string
      maxLength: 256
    ServiceQuotaExceededException: {}
    CreateAnomalyDetectorResponse:
      type: object
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the detector.
    Frequency:
      type: string
      enum:
        - P1D
        - PT1H
        - PT10M
        - PT5M
    CreateMetricSetResponse:
      type: object
      properties:
        MetricSetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset.
    Metric:
      type: object
      required:
        - MetricName
        - AggregationFunction
      properties:
        MetricName:
          $ref: '#/components/schemas/ColumnName'
          description: The name of the metric.
        AggregationFunction:
          $ref: '#/components/schemas/AggregationFunction'
          description: The function with which the metric is calculated.
        Namespace:
          $ref: '#/components/schemas/Namespace'
          description: The namespace for the metric.
      description: A calculation made by contrasting a measure and a dimension from your source data.
    ColumnName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
      minLength: 1
      maxLength: 63
    DateTimeFormat:
      type: string
      pattern: .*\S.*
      maxLength: 63
    S3SourceConfig:
      type: object
      required:
        - RoleArn
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of an IAM role that has read and write access permissions to the source S3 bucket.
        TemplatedPathList:
          $ref: '#/components/schemas/TemplatedPathList'
          description: A list of templated paths to the source files.
        HistoricalDataPathList:
          $ref: '#/components/schemas/HistoricalDataPathList'
          description: A list of paths to the historical data files.
        FileFormatDescriptor:
          $ref: '#/components/schemas/FileFormatDescriptor'
          description: Contains information about a source file's formatting.
      description: Contains information about the configuration of the S3 bucket that contains source files.
    AppFlowConfig:
      type: object
      required:
        - RoleArn
        - FlowName
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: An IAM role that gives Amazon Lookout for Metrics permission to access the flow.
        FlowName:
          $ref: '#/components/schemas/FlowName'
          description: ' name of the flow.'
      description: Details about an Amazon AppFlow flow datasource.
    CloudWatchConfig:
      type: object
      required:
        - RoleArn
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: An IAM role that gives Amazon Lookout for Metrics permission to access data in Amazon CloudWatch.
      description: Details about an Amazon CloudWatch datasource.
    RDSSourceConfig:
      type: object
      required:
        - DBInstanceIdentifier
        - DatabaseHost
        - DatabasePort
        - SecretManagerArn
        - DatabaseName
        - TableName
        - RoleArn
        - VpcConfiguration
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/RDSDatabaseIdentifier'
          description: A string identifying the database instance.
        DatabaseHost:
          $ref: '#/components/schemas/DatabaseHost'
          description: The host name of the database.
        DatabasePort:
          $ref: '#/components/schemas/DatabasePort'
          description: The port number where the database can be accessed.
        SecretManagerArn:
          $ref: '#/components/schemas/PoirotSecretManagerArn'
          description: The Amazon Resource Name (ARN) of the AWS Secrets Manager role.
        DatabaseName:
          $ref: '#/components/schemas/RDSDatabaseName'
          description: The name of the RDS database.
        TableName:
          $ref: '#/components/schemas/TableName'
          description: The name of the table in the database.
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the role.
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
          description: An object containing information about the Amazon Virtual Private Cloud (VPC) configuration.
      description: Contains information about the Amazon Relational Database Service (RDS) configuration.
    RedshiftSourceConfig:
      type: object
      required:
        - ClusterIdentifier
        - DatabaseHost
        - DatabasePort
        - SecretManagerArn
        - DatabaseName
        - TableName
        - RoleArn
        - VpcConfiguration
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/RedshiftClusterIdentifier'
          description: A string identifying the Redshift cluster.
        DatabaseHost:
          $ref: '#/components/schemas/DatabaseHost'
          description: The name of the database host.
        DatabasePort:
          $ref: '#/components/schemas/DatabasePort'
          description: The port number where the database can be accessed.
        SecretManagerArn:
          $ref: '#/components/schemas/PoirotSecretManagerArn'
          description: The Amazon Resource Name (ARN) of the AWS Secrets Manager role.
        DatabaseName:
          $ref: '#/components/schemas/RedshiftDatabaseName'
          description: The Redshift database name.
        TableName:
          $ref: '#/components/schemas/TableName'
          description: The table name of the Redshift database.
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the role providing access to the database.
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
          description: Contains information about the Amazon Virtual Private Cloud (VPC) configuration.
      description: Provides information about the Amazon Redshift database configuration.
    DeleteAlertResponse:
      type: object
      properties: {}
    DeleteAnomalyDetectorResponse:
      type: object
      properties: {}
    DescribeAlertResponse:
      type: object
      properties:
        Alert:
          $ref: '#/components/schemas/Alert'
          description: Contains information about an alert.
    DescribeAnomalyDetectionExecutionsResponse:
      type: object
      properties:
        ExecutionList:
          $ref: '#/components/schemas/ExecutionList'
          description: A list of detection jobs.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token that's included if more results are available.
    DescribeAnomalyDetectorResponse:
      type: object
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the detector.
        AnomalyDetectorName:
          $ref: '#/components/schemas/AnomalyDetectorName'
          description: The name of the detector.
        AnomalyDetectorDescription:
          $ref: '#/components/schemas/AnomalyDetectorDescription'
          description: A description of the detector.
        AnomalyDetectorConfig:
          $ref: '#/components/schemas/AnomalyDetectorConfigSummary'
          description: Contains information about the detector's configuration.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the detector was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the detector was last modified.
        Status:
          $ref: '#/components/schemas/AnomalyDetectorStatus'
          description: The status of the detector.
        FailureReason:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'The reason that the detector failed, if any.'
        KmsKeyArn:
          $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN of the KMS key to use to encrypt your data.
    DescribeMetricSetResponse:
      type: object
      properties:
        MetricSetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset.
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the detector that contains the dataset.
        MetricSetName:
          $ref: '#/components/schemas/MetricSetName'
          description: The name of the dataset.
        MetricSetDescription:
          $ref: '#/components/schemas/MetricSetDescription'
          description: The dataset's description.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the dataset was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the dataset was last modified.
        Offset:
          $ref: '#/components/schemas/Offset'
          description: The offset in seconds. Only supported for S3 and Redshift datasources.
        MetricList:
          $ref: '#/components/schemas/MetricList'
          description: A list of the metrics defined by the dataset.
        TimestampColumn:
          $ref: '#/components/schemas/TimestampColumn'
          description: Contains information about the column used for tracking time in your source data.
        DimensionList:
          $ref: '#/components/schemas/DimensionList'
          description: A list of the dimensions chosen for analysis.
        MetricSetFrequency:
          $ref: '#/components/schemas/Frequency'
          description: The interval at which the data will be analyzed for anomalies.
        Timezone:
          $ref: '#/components/schemas/Timezone'
          description: The time zone in which the dataset's data was recorded.
        MetricSource:
          $ref: '#/components/schemas/MetricSource'
          description: Contains information about the dataset's source data.
    GetAnomalyGroupResponse:
      type: object
      properties:
        AnomalyGroup:
          $ref: '#/components/schemas/AnomalyGroup'
          description: Details about the anomaly group.
    GetFeedbackResponse:
      type: object
      properties:
        AnomalyGroupTimeSeriesFeedback:
          $ref: '#/components/schemas/TimeSeriesFeedbackList'
          description: Feedback for an anomalous metric.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token that's included if more results are available.
    UUID:
      type: string
      pattern: '[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}'
      maxLength: 63
    TimeSeriesId:
      type: string
      pattern: .*\S.*
      maxLength: 520
    GetSampleDataResponse:
      type: object
      properties:
        HeaderValues:
          $ref: '#/components/schemas/HeaderValueList'
          description: A list of header labels for the records.
        SampleRows:
          $ref: '#/components/schemas/SampleRows'
          description: A list of records.
    Arn:
      type: string
      pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
      maxLength: 256
    TemplatedPathList:
      type: array
      items:
        $ref: '#/components/schemas/TemplatedPath'
      minItems: 1
      maxItems: 1
    HistoricalDataPathList:
      type: array
      items:
        $ref: '#/components/schemas/HistoricalDataPath'
      minItems: 1
      maxItems: 1
    FileFormatDescriptor:
      type: object
      properties:
        CsvFormatDescriptor:
          $ref: '#/components/schemas/CsvFormatDescriptor'
          description: Contains information about how a source CSV data file should be analyzed.
        JsonFormatDescriptor:
          $ref: '#/components/schemas/JsonFormatDescriptor'
          description: Contains information about how a source JSON data file should be analyzed.
      description: Contains information about a source file's formatting.
    ListAlertsResponse:
      type: object
      properties:
        AlertSummaryList:
          $ref: '#/components/schemas/AlertSummaryList'
          description: Contains information about an alert.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, the service returns this token. To retrieve the next set of results, use this token in the next request.'
    ListAnomalyDetectorsResponse:
      type: object
      properties:
        AnomalyDetectorSummaryList:
          $ref: '#/components/schemas/AnomalyDetectorSummaryList'
          description: A list of anomaly detectors in the account in the current region.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, the service returns this token. To retrieve the next set of results, use the token in the next request.'
    ListAnomalyGroupSummariesResponse:
      type: object
      properties:
        AnomalyGroupSummaryList:
          $ref: '#/components/schemas/AnomalyGroupSummaryList'
          description: A list of anomaly group summaries.
        AnomalyGroupStatistics:
          $ref: '#/components/schemas/AnomalyGroupStatistics'
          description: Aggregated details about the anomaly groups.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token that's included if more results are available.
    ListAnomalyGroupTimeSeriesResponse:
      type: object
      properties:
        AnomalyGroupId:
          $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        MetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the measure field.
        TimestampList:
          $ref: '#/components/schemas/TimestampList'
          description: Timestamps for the anomalous metrics.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token that's included if more results are available.
        TimeSeriesList:
          $ref: '#/components/schemas/TimeSeriesList'
          description: A list of anomalous metrics.
    ListMetricSetsResponse:
      type: object
      properties:
        MetricSetSummaryList:
          $ref: '#/components/schemas/MetricSetSummaryList'
          description: 'A list of the datasets in the AWS Region, with configuration details for each.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, the list call returns this token. To retrieve the next set of results, use the token in the next list request. '
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The resource's tags.
    PutFeedbackResponse:
      type: object
      properties: {}
    Boolean:
      type: boolean
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateAnomalyDetectorResponse:
      type: object
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the updated detector.
    UpdateMetricSetResponse:
      type: object
      properties:
        MetricSetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset.
    Action:
      type: object
      properties:
        SNSConfiguration:
          $ref: '#/components/schemas/SNSConfiguration'
          description: A configuration for an Amazon SNS channel.
        LambdaConfiguration:
          $ref: '#/components/schemas/LambdaConfiguration'
          description: A configuration for an AWS Lambda channel.
      description: A configuration that specifies the action to perform when anomalies are detected.
    ActivateAnomalyDetectorRequest:
      type: object
      required:
        - AnomalyDetectorArn
      title: ActivateAnomalyDetectorRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the anomaly detector.
    AggregationFunction:
      type: string
      enum:
        - AVG
        - SUM
    AlertDescription:
      type: string
      pattern: .*\S.*
      maxLength: 256
    AlertName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
      minLength: 1
      maxLength: 63
    SensitivityThreshold:
      type: integer
      minimum: 0
      maximum: 100
    AlertType:
      type: string
      enum:
        - SNS
        - LAMBDA
    AlertStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    Timestamp:
      type: string
      format: date-time
    Alert:
      type: object
      properties:
        Action:
          $ref: '#/components/schemas/Action'
          description: Action that will be triggered when there is an alert.
        AlertDescription:
          $ref: '#/components/schemas/AlertDescription'
          description: A description of the alert.
        AlertArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the alert.
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to which the alert is attached.
        AlertName:
          $ref: '#/components/schemas/AlertName'
          description: The name of the alert.
        AlertSensitivityThreshold:
          $ref: '#/components/schemas/SensitivityThreshold'
          description: The minimum severity for an anomaly to trigger the alert.
        AlertType:
          $ref: '#/components/schemas/AlertType'
          description: The type of the alert.
        AlertStatus:
          $ref: '#/components/schemas/AlertStatus'
          description: The status of the alert.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the alert was last modified.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the alert was created.
      description: A configuration for Amazon SNS-integrated notifications.
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    AlertSummary:
      type: object
      properties:
        AlertArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the alert.
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to which the alert is attached.
        AlertName:
          $ref: '#/components/schemas/AlertName'
          description: The name of the alert.
        AlertSensitivityThreshold:
          $ref: '#/components/schemas/SensitivityThreshold'
          description: The minimum severity for an anomaly to trigger the alert.
        AlertType:
          $ref: '#/components/schemas/AlertType'
          description: The type of the alert.
        AlertStatus:
          $ref: '#/components/schemas/AlertStatus'
          description: The status of the alert.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the alert was last modified.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the alert was created.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: 'The alert''s <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>.'
      description: Provides a summary of an alert's configuration.
    AlertSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AlertSummary'
    AnomalyDetectionTaskStatus:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - COMPLETED
        - FAILED
        - FAILED_TO_SCHEDULE
    AnomalyDetectionTaskStatusMessage:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 256
    AnomalyDetectorConfig:
      type: object
      properties:
        AnomalyDetectorFrequency:
          $ref: '#/components/schemas/Frequency'
          description: The frequency at which the detector analyzes its source data.
      description: Contains information about a detector's configuration.
    AnomalyDetectorConfigSummary:
      type: object
      properties:
        AnomalyDetectorFrequency:
          $ref: '#/components/schemas/Frequency'
          description: The interval at which the detector analyzes its source data.
      description: Contains information about a detector's configuration.
    AnomalyDetectorDescription:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 256
    AnomalyDetectorName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
      minLength: 1
      maxLength: 63
    AnomalyDetectorStatus:
      type: string
      enum:
        - ACTIVE
        - ACTIVATING
        - DELETING
        - FAILED
        - INACTIVE
        - LEARNING
        - BACK_TEST_ACTIVATING
        - BACK_TEST_ACTIVE
        - BACK_TEST_COMPLETE
    AnomalyDetectorSummary:
      type: object
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the detector.
        AnomalyDetectorName:
          $ref: '#/components/schemas/AnomalyDetectorName'
          description: The name of the detector.
        AnomalyDetectorDescription:
          $ref: '#/components/schemas/AnomalyDetectorDescription'
          description: A description of the detector.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the detector was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the detector was last modified.
        Status:
          $ref: '#/components/schemas/AnomalyDetectorStatus'
          description: The status of detector.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: 'The detector''s <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>.'
      description: Contains information about an an anomaly detector.
    AnomalyDetectorSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AnomalyDetectorSummary'
    TimestampString:
      type: string
      pattern: '^([12]\d{3})-(1[0-2]|0[1-9])-(0[1-9]|[12]\d|3[01])T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)(Z|(\+|\-)(0\d|1[0-2]):([0-5]\d)(\[[[:alnum:]\/\_]+\])?)$'
      maxLength: 60
    Score:
      type: number
      format: double
      minimum: 0
      maximum: 100
    MetricName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
      maxLength: 256
    MetricLevelImpactList:
      type: array
      items:
        $ref: '#/components/schemas/MetricLevelImpact'
    AnomalyGroup:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/TimestampString'
          description: The start time for the group.
        EndTime:
          $ref: '#/components/schemas/TimestampString'
          description: The end time for the group.
        AnomalyGroupId:
          $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        AnomalyGroupScore:
          $ref: '#/components/schemas/Score'
          description: The severity score of the group.
        PrimaryMetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the primary affected measure for the group.
        MetricLevelImpactList:
          $ref: '#/components/schemas/MetricLevelImpactList'
          description: A list of measures affected by the anomaly.
      description: A group of anomalous metrics
    Integer:
      type: integer
    ItemizedMetricStatsList:
      type: array
      items:
        $ref: '#/components/schemas/ItemizedMetricStats'
    AnomalyGroupStatistics:
      type: object
      properties:
        EvaluationStartDate:
          $ref: '#/components/schemas/TimestampString'
          description: The start of the time range that was searched.
        TotalCount:
          $ref: '#/components/schemas/Integer'
          description: The number of groups found.
        ItemizedMetricStatsList:
          $ref: '#/components/schemas/ItemizedMetricStatsList'
          description: Statistics for individual metrics within the group.
      description: Aggregated statistics for a group of anomalous metrics.
    AnomalyGroupSummary:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/TimestampString'
          description: The start time for the group.
        EndTime:
          $ref: '#/components/schemas/TimestampString'
          description: The end time for the group.
        AnomalyGroupId:
          $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        AnomalyGroupScore:
          $ref: '#/components/schemas/Score'
          description: The severity score of the group.
        PrimaryMetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the primary affected measure for the group.
      description: Details about a group of anomalous metrics.
    AnomalyGroupSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AnomalyGroupSummary'
    AnomalyGroupTimeSeries:
      type: object
      required:
        - AnomalyGroupId
      properties:
        AnomalyGroupId:
          $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        TimeSeriesId:
          $ref: '#/components/schemas/TimeSeriesId'
          description: The ID of the metric.
      description: An anomalous metric in an anomaly group.
    AnomalyGroupTimeSeriesFeedback:
      type: object
      required:
        - AnomalyGroupId
        - TimeSeriesId
        - IsAnomaly
      properties:
        AnomalyGroupId:
          $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        TimeSeriesId:
          $ref: '#/components/schemas/TimeSeriesId'
          description: The ID of the metric.
        IsAnomaly:
          $ref: '#/components/schemas/Boolean'
          description: Feedback on whether the metric is a legitimate anomaly.
      description: Feedback for an anomalous metric.
    FlowName:
      type: string
      pattern: '[a-zA-Z0-9][\w!@#.-]+'
      maxLength: 256
    BackTestAnomalyDetectorRequest:
      type: object
      required:
        - AnomalyDetectorArn
      title: BackTestAnomalyDetectorRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
    CSVFileCompression:
      type: string
      enum:
        - NONE
        - GZIP
    Charset:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
      maxLength: 63
    DimensionContributionList:
      type: array
      items:
        $ref: '#/components/schemas/DimensionContribution'
    ContributionMatrix:
      type: object
      properties:
        DimensionContributionList:
          $ref: '#/components/schemas/DimensionContributionList'
          description: A list of contributing dimensions.
      description: Details about dimensions that contributed to an anomaly.
    CreateAlertRequest:
      type: object
      required:
        - AlertName
        - AlertSensitivityThreshold
        - AnomalyDetectorArn
        - Action
      title: CreateAlertRequest
      properties:
        AlertName:
          $ref: '#/components/schemas/AlertName'
          description: The name of the alert.
        AlertSensitivityThreshold:
          $ref: '#/components/schemas/SensitivityThreshold'
          description: An integer from 0 to 100 specifying the alert sensitivity threshold.
        AlertDescription:
          $ref: '#/components/schemas/AlertDescription'
          description: A description of the alert.
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to which the alert is attached.
        Action:
          $ref: '#/components/schemas/Action'
          description: Action that will be triggered when there is an alert.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: 'A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the alert.'
    KmsKeyArn:
      type: string
      pattern: 'arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}'
      minLength: 20
      maxLength: 2048
    CreateAnomalyDetectorRequest:
      type: object
      required:
        - AnomalyDetectorName
        - AnomalyDetectorConfig
      title: CreateAnomalyDetectorRequest
      properties:
        AnomalyDetectorName:
          $ref: '#/components/schemas/AnomalyDetectorName'
          description: The name of the detector.
        AnomalyDetectorDescription:
          $ref: '#/components/schemas/AnomalyDetectorDescription'
          description: A description of the detector.
        AnomalyDetectorConfig:
          $ref: '#/components/schemas/AnomalyDetectorConfig'
          description: Contains information about the configuration of the anomaly detector.
        KmsKeyArn:
          $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN of the KMS key to use to encrypt your data.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: 'A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the anomaly detector.'
    MetricSetName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
      minLength: 1
      maxLength: 63
    MetricSetDescription:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 256
    MetricList:
      type: array
      items:
        $ref: '#/components/schemas/Metric'
      minItems: 1
    Offset:
      type: integer
      minimum: 0
      maximum: 432000
    TimestampColumn:
      type: object
      properties:
        ColumnName:
          $ref: '#/components/schemas/ColumnName'
          description: The name of the timestamp column.
        ColumnFormat:
          $ref: '#/components/schemas/DateTimeFormat'
          description: The format of the timestamp column.
      description: Contains information about the column used to track time in a source data file.
    DimensionList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnName'
      minItems: 1
    MetricSource:
      type: object
      properties:
        S3SourceConfig:
          $ref: '#/components/schemas/S3SourceConfig'
        AppFlowConfig:
          $ref: '#/components/schemas/AppFlowConfig'
          description: An object containing information about the AppFlow configuration.
        CloudWatchConfig:
          $ref: '#/components/schemas/CloudWatchConfig'
          description: An object containing information about the Amazon CloudWatch monitoring configuration.
        RDSSourceConfig:
          $ref: '#/components/schemas/RDSSourceConfig'
          description: An object containing information about the Amazon Relational Database Service (RDS) configuration.
        RedshiftSourceConfig:
          $ref: '#/components/schemas/RedshiftSourceConfig'
          description: An object containing information about the Amazon Redshift database configuration.
      description: Contains information about source data used to generate a metric.
    Timezone:
      type: string
      pattern: .*\S.*
      maxLength: 60
    CreateMetricSetRequest:
      type: object
      required:
        - AnomalyDetectorArn
        - MetricSetName
        - MetricList
        - MetricSource
      title: CreateMetricSetRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the anomaly detector that will use the dataset.
        MetricSetName:
          $ref: '#/components/schemas/MetricSetName'
          description: The name of the dataset.
        MetricSetDescription:
          $ref: '#/components/schemas/MetricSetDescription'
          description: A description of the dataset you are creating.
        MetricList:
          $ref: '#/components/schemas/MetricList'
          description: A list of metrics that the dataset will contain.
        Offset:
          $ref: '#/components/schemas/Offset'
          description: 'After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3 and Redshift datasources.'
        TimestampColumn:
          $ref: '#/components/schemas/TimestampColumn'
          description: Contains information about the column used for tracking time in your source data.
        DimensionList:
          $ref: '#/components/schemas/DimensionList'
          description: A list of the fields you want to treat as dimensions.
        MetricSetFrequency:
          $ref: '#/components/schemas/Frequency'
          description: The frequency with which the source data will be analyzed for anomalies.
        MetricSource:
          $ref: '#/components/schemas/MetricSource'
          description: Contains information about how the source data should be interpreted.
        Timezone:
          $ref: '#/components/schemas/Timezone'
          description: The time zone in which your source data was recorded.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: 'A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the dataset.'
    Delimiter:
      type: string
      pattern: '[^\r\n]'
      maxLength: 1
    HeaderList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnName'
    QuoteSymbol:
      type: string
      pattern: '[^\r\n]|^$'
      maxLength: 1
    CsvFormatDescriptor:
      type: object
      properties:
        FileCompression:
          $ref: '#/components/schemas/CSVFileCompression'
          description: The level of compression of the source CSV file.
        Charset:
          $ref: '#/components/schemas/Charset'
          description: The character set in which the source CSV file is written.
        ContainsHeader:
          $ref: '#/components/schemas/Boolean'
          description: Whether or not the source CSV file contains a header.
        Delimiter:
          $ref: '#/components/schemas/Delimiter'
          description: The character used to delimit the source CSV file.
        HeaderList:
          $ref: '#/components/schemas/HeaderList'
          description: 'A list of the source CSV file''s headers, if any.'
        QuoteSymbol:
          $ref: '#/components/schemas/QuoteSymbol'
          description: The character used as a quote character.
      description: Contains information about how a source CSV data file should be analyzed.
    DataItem:
      type: string
    DatabaseHost:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 253
    DatabasePort:
      type: integer
      minimum: 1
      maximum: 65535
    DeleteAlertRequest:
      type: object
      required:
        - AlertArn
      title: DeleteAlertRequest
      properties:
        AlertArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the alert to delete.
    DeleteAnomalyDetectorRequest:
      type: object
      required:
        - AnomalyDetectorArn
      title: DeleteAnomalyDetectorRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to delete.
    DescribeAlertRequest:
      type: object
      required:
        - AlertArn
      title: DescribeAlertRequest
      properties:
        AlertArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the alert to describe.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 3000
    DescribeAnomalyDetectionExecutionsRequest:
      type: object
      required:
        - AnomalyDetectorArn
      title: DescribeAnomalyDetectionExecutionsRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
        Timestamp:
          $ref: '#/components/schemas/TimestampString'
          description: The timestamp of the anomaly detection job.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The number of items to return in the response.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Specify the pagination token that's returned by a previous request to retrieve the next page of results.
    ExecutionList:
      type: array
      items:
        $ref: '#/components/schemas/ExecutionStatus'
    DescribeAnomalyDetectorRequest:
      type: object
      required:
        - AnomalyDetectorArn
      title: DescribeAnomalyDetectorRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to describe.
    ErrorMessage:
      type: string
      maxLength: 256
    DescribeMetricSetRequest:
      type: object
      required:
        - MetricSetArn
      title: DescribeMetricSetRequest
      properties:
        MetricSetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset.
    DimensionValueContributionList:
      type: array
      items:
        $ref: '#/components/schemas/DimensionValueContribution'
    DimensionContribution:
      type: object
      properties:
        DimensionName:
          $ref: '#/components/schemas/ColumnName'
          description: The name of the dimension.
        DimensionValueContributionList:
          $ref: '#/components/schemas/DimensionValueContributionList'
          description: A list of dimension values that contributed to the anomaly.
      description: Details about a dimension that contributed to an anomaly.
    DimensionValue:
      type: string
    DimensionNameValue:
      type: object
      required:
        - DimensionName
        - DimensionValue
      properties:
        DimensionName:
          $ref: '#/components/schemas/ColumnName'
          description: The name of the dimension.
        DimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: The value of the dimension.
      description: A dimension name and value.
    DimensionNameValueList:
      type: array
      items:
        $ref: '#/components/schemas/DimensionNameValue'
    DimensionValueContribution:
      type: object
      properties:
        DimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: The value of the dimension.
        ContributionScore:
          $ref: '#/components/schemas/Score'
          description: The severity score of the value.
      description: The severity of a value of a dimension that contributed to an anomaly.
    ExecutionStatus:
      type: object
      properties:
        Timestamp:
          $ref: '#/components/schemas/TimestampString'
          description: The run's timestamp.
        Status:
          $ref: '#/components/schemas/AnomalyDetectionTaskStatus'
          description: The run's status.
        FailureReason:
          $ref: '#/components/schemas/AnomalyDetectionTaskStatusMessage'
          description: 'The reason that the run failed, if applicable.'
      description: The status of an anomaly detector run.
    JsonFormatDescriptor:
      type: object
      properties:
        FileCompression:
          $ref: '#/components/schemas/JsonFileCompression'
          description: The level of compression of the source CSV file.
        Charset:
          $ref: '#/components/schemas/Charset'
          description: The character set in which the source JSON file is written.
      description: Contains information about how a source JSON data file should be analyzed.
    GetAnomalyGroupRequest:
      type: object
      required:
        - AnomalyGroupId
        - AnomalyDetectorArn
      title: GetAnomalyGroupRequest
      properties:
        AnomalyGroupId:
          $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
    GetFeedbackRequest:
      type: object
      required:
        - AnomalyDetectorArn
        - AnomalyGroupTimeSeriesFeedback
      title: GetFeedbackRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
        AnomalyGroupTimeSeriesFeedback:
          $ref: '#/components/schemas/AnomalyGroupTimeSeries'
          description: The anomalous metric and group ID.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Specify the pagination token that's returned by a previous request to retrieve the next page of results.
    TimeSeriesFeedbackList:
      type: array
      items:
        $ref: '#/components/schemas/TimeSeriesFeedback'
    SampleDataS3SourceConfig:
      type: object
      required:
        - RoleArn
        - FileFormatDescriptor
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the role.
        TemplatedPathList:
          $ref: '#/components/schemas/TemplatedPathList'
          description: An array of strings containing the list of templated paths.
        HistoricalDataPathList:
          $ref: '#/components/schemas/HistoricalDataPathList'
          description: An array of strings containing the historical set of data paths.
        FileFormatDescriptor:
          $ref: '#/components/schemas/FileFormatDescriptor'
      description: Contains information about the source configuration in Amazon S3.
    GetSampleDataRequest:
      type: object
      title: GetSampleDataRequest
      properties:
        S3SourceConfig:
          $ref: '#/components/schemas/SampleDataS3SourceConfig'
          description: A datasource bucket in Amazon S3.
    HeaderValueList:
      type: array
      items:
        $ref: '#/components/schemas/HeaderValue'
    SampleRows:
      type: array
      items:
        $ref: '#/components/schemas/SampleRow'
    HeaderValue:
      type: string
    HistoricalDataPath:
      type: string
      pattern: '^s3://[a-z0-9].+$'
      maxLength: 1024
    ItemizedMetricStats:
      type: object
      properties:
        MetricName:
          $ref: '#/components/schemas/ColumnName'
          description: The name of the measure.
        OccurrenceCount:
          $ref: '#/components/schemas/Integer'
          description: The number of times that the measure appears.
      description: Aggregated statistics about a measure affected by an anomaly.
    JsonFileCompression:
      type: string
      enum:
        - NONE
        - GZIP
    ListAlertsRequest:
      type: object
      title: ListAlertsRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the alert's detector.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request is truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that will be displayed by the request.
    ListAnomalyDetectorsRequest:
      type: object
      title: ListAnomalyDetectorsRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.'
    ListAnomalyGroupSummariesRequest:
      type: object
      required:
        - AnomalyDetectorArn
        - SensitivityThreshold
      title: ListAnomalyGroupSummariesRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
        SensitivityThreshold:
          $ref: '#/components/schemas/SensitivityThreshold'
          description: The minimum severity score for inclusion in the output.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Specify the pagination token that's returned by a previous request to retrieve the next page of results.
    ListAnomalyGroupTimeSeriesRequest:
      type: object
      required:
        - AnomalyDetectorArn
        - AnomalyGroupId
        - MetricName
      title: ListAnomalyGroupTimeSeriesRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
        AnomalyGroupId:
          $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        MetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the measure field.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Specify the pagination token that's returned by a previous request to retrieve the next page of results.
    TimestampList:
      type: array
      items:
        $ref: '#/components/schemas/TimestampString'
    TimeSeriesList:
      type: array
      items:
        $ref: '#/components/schemas/TimeSeries'
    ListMetricSetsRequest:
      type: object
      title: ListMetricSetsRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the anomaly detector containing the metrics sets to list.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.'
    MetricSetSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MetricSetSummary'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    Namespace:
      type: string
      pattern: '[^:].*'
      minLength: 1
      maxLength: 255
    MetricLevelImpact:
      type: object
      properties:
        MetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the measure.
        NumTimeSeries:
          $ref: '#/components/schemas/Integer'
          description: The number of anomalous metrics for the measure.
        ContributionMatrix:
          $ref: '#/components/schemas/ContributionMatrix'
          description: Details about the dimensions that contributed to the anomaly.
      description: Details about a measure affected by an anomaly.
    MetricSetSummary:
      type: object
      properties:
        MetricSetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset.
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to which the dataset belongs.
        MetricSetDescription:
          $ref: '#/components/schemas/MetricSetDescription'
          description: The description of the dataset.
        MetricSetName:
          $ref: '#/components/schemas/MetricSetName'
          description: The name of the dataset.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the dataset was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the dataset was last modified.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: 'The dataset''s <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>.'
      description: Contains information about a dataset.
    MetricValue:
      type: number
      format: double
    MetricValueList:
      type: array
      items:
        $ref: '#/components/schemas/MetricValue'
    PoirotSecretManagerArn:
      type: string
      pattern: 'arn:([a-z\d-]+):.*:.*:secret:AmazonLookoutMetrics-.+'
      maxLength: 256
    PutFeedbackRequest:
      type: object
      required:
        - AnomalyDetectorArn
        - AnomalyGroupTimeSeriesFeedback
      title: PutFeedbackRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
        AnomalyGroupTimeSeriesFeedback:
          $ref: '#/components/schemas/AnomalyGroupTimeSeriesFeedback'
          description: Feedback for an anomalous metric.
    RDSDatabaseIdentifier:
      type: string
      pattern: '^[a-zA-Z](?!.*--)(?!.*-$)[0-9a-zA-Z\-]*$'
      minLength: 1
      maxLength: 63
    RDSDatabaseName:
      type: string
      pattern: '[a-zA-Z0-9_.]+'
      minLength: 1
      maxLength: 64
    TableName:
      type: string
      pattern: '^[a-zA-Z][a-zA-Z0-9_.]*$'
      minLength: 1
      maxLength: 100
    VpcConfiguration:
      type: object
      required:
        - SubnetIdList
        - SecurityGroupIdList
      properties:
        SubnetIdList:
          $ref: '#/components/schemas/SubnetIdList'
          description: 'An array of strings containing the Amazon VPC subnet IDs (e.g., <code>subnet-0bb1c79de3EXAMPLE</code>.'
        SecurityGroupIdList:
          $ref: '#/components/schemas/SecurityGroupIdList'
          description: An array of strings containing the list of security groups.
      description: Contains configuration information about the Amazon Virtual Private Cloud (VPC).
    RedshiftClusterIdentifier:
      type: string
      pattern: '^[a-z](?!.*--)(?!.*-$)[0-9a-z\-]*$'
      minLength: 1
      maxLength: 63
    RedshiftDatabaseName:
      type: string
      pattern: '[a-zA-Z0-9_.]+'
      minLength: 1
      maxLength: 100
    SampleRow:
      type: array
      items:
        $ref: '#/components/schemas/DataItem'
    SecurityGroupId:
      type: string
      pattern: '[-0-9a-zA-Z]+'
      minLength: 1
      maxLength: 255
    SecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    SubnetId:
      type: string
      pattern: '[\-0-9a-zA-Z]+'
      maxLength: 255
    SubnetIdList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - xml:
                name: tags
              description: 'Tags to apply to the resource. Tag keys and values can contain letters, numbers, spaces, and the following symbols: <code>_.:/=+@-</code> '
    TemplatedPath:
      type: string
      pattern: '^s3://[a-zA-Z0-9_\-\/ {}=]+$'
      maxLength: 1024
    TimeSeries:
      type: object
      required:
        - TimeSeriesId
        - DimensionList
        - MetricValueList
      properties:
        TimeSeriesId:
          $ref: '#/components/schemas/TimeSeriesId'
          description: The ID of the metric.
        DimensionList:
          $ref: '#/components/schemas/DimensionNameValueList'
          description: The dimensions of the metric.
        MetricValueList:
          $ref: '#/components/schemas/MetricValueList'
          description: The values for the metric.
      description: 'Details about a metric. A metric is an aggregation of the values of a measure for a dimension value, such as <i>availability</i> in the <i>us-east-1</i> Region.'
    TimeSeriesFeedback:
      type: object
      properties:
        TimeSeriesId:
          $ref: '#/components/schemas/TimeSeriesId'
          description: The ID of the metric.
        IsAnomaly:
          $ref: '#/components/schemas/Boolean'
          description: Feedback on whether the metric is a legitimate anomaly.
      description: Details about feedback submitted for an anomalous metric.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateAnomalyDetectorRequest:
      type: object
      required:
        - AnomalyDetectorArn
      title: UpdateAnomalyDetectorRequest
      properties:
        AnomalyDetectorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to update.
        KmsKeyArn:
          $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of an AWS KMS encryption key.
        AnomalyDetectorDescription:
          $ref: '#/components/schemas/AnomalyDetectorDescription'
          description: The updated detector description.
        AnomalyDetectorConfig:
          $ref: '#/components/schemas/AnomalyDetectorConfig'
          description: Contains information about the configuration to which the detector will be updated.
    UpdateMetricSetRequest:
      type: object
      required:
        - MetricSetArn
      title: UpdateMetricSetRequest
      properties:
        MetricSetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset to update.
        MetricSetDescription:
          $ref: '#/components/schemas/MetricSetDescription'
          description: The dataset's description.
        MetricList:
          $ref: '#/components/schemas/MetricList'
          description: The metric list.
        Offset:
          $ref: '#/components/schemas/Offset'
          description: 'After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3 and Redshift datasources.'
        TimestampColumn:
          $ref: '#/components/schemas/TimestampColumn'
          description: The timestamp column.
        DimensionList:
          $ref: '#/components/schemas/DimensionList'
          description: The dimension list.
        MetricSetFrequency:
          $ref: '#/components/schemas/Frequency'
          description: The dataset's interval.
        MetricSource:
          $ref: '#/components/schemas/MetricSource'
security:
  - hmac: []
