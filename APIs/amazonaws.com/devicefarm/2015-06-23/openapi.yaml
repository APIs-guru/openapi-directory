openapi: 3.0.0
info:
  version: '2015-06-23'
  x-release: v4
  title: AWS Device Farm
  description: '<p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href="https://docs.aws.amazon.com/devicefarm/latest/testgrid/">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/">Device Farm Developer Guide</a>.</p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: devicefarm
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/devicefarm-2015-06-23.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/devicefarm/'
servers:
  - url: 'http://devicefarm.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Device Farm multi-region endpoint
  - url: 'https://devicefarm.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Device Farm multi-region endpoint
  - url: 'http://devicefarm.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Device Farm endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://devicefarm.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Device Farm endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=DeviceFarm_20150623.CreateDevicePool:
    post:
      operationId: CreateDevicePool
      description: Creates a device pool.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDevicePoolResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDevicePoolRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.CreateDevicePool
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.CreateInstanceProfile:
    post:
      operationId: CreateInstanceProfile
      description: Creates a profile that can be applied to one or more private fleet device instances.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInstanceProfileResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstanceProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.CreateInstanceProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.CreateNetworkProfile:
    post:
      operationId: CreateNetworkProfile
      description: Creates a network profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNetworkProfileResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.CreateNetworkProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.CreateProject:
    post:
      operationId: CreateProject
      description: Creates a project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
        '484':
          description: TagOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.CreateProject
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.CreateRemoteAccessSession:
    post:
      operationId: CreateRemoteAccessSession
      description: Specifies and starts a remote access session.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRemoteAccessSessionResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRemoteAccessSessionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.CreateRemoteAccessSession
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.CreateTestGridProject:
    post:
      operationId: CreateTestGridProject
      description: Creates a Selenium testing project. Projects are used to track <a>TestGridSession</a> instances.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestGridProjectResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestGridProjectRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.CreateTestGridProject
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.CreateTestGridUrl:
    post:
      operationId: CreateTestGridUrl
      description: 'Creates a signed, short-term URL that can be passed to a Selenium <code>RemoteWebDriver</code> constructor.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestGridUrlResult'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestGridUrlRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.CreateTestGridUrl
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.CreateUpload:
    post:
      operationId: CreateUpload
      description: Uploads an app or test scripts.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUploadResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUploadRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.CreateUpload
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.CreateVPCEConfiguration:
    post:
      operationId: CreateVPCEConfiguration
      description: Creates a configuration record in Device Farm for your Amazon Virtual Private Cloud (VPC) endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVPCEConfigurationResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVPCEConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.CreateVPCEConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.DeleteDevicePool:
    post:
      operationId: DeleteDevicePool
      description: Deletes a device pool given the pool ARN. Does not allow deletion of curated pools owned by the system.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDevicePoolResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDevicePoolRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.DeleteDevicePool
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.DeleteInstanceProfile:
    post:
      operationId: DeleteInstanceProfile
      description: Deletes a profile that can be applied to one or more private device instances.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInstanceProfileResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteInstanceProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.DeleteInstanceProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.DeleteNetworkProfile:
    post:
      operationId: DeleteNetworkProfile
      description: Deletes a network profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNetworkProfileResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNetworkProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.DeleteNetworkProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.DeleteProject:
    post:
      operationId: DeleteProject
      description: '<p>Deletes an AWS Device Farm project, given the project ARN.</p> <p> Deleting this resource does not stop an in-progress run.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProjectResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.DeleteProject
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.DeleteRemoteAccessSession:
    post:
      operationId: DeleteRemoteAccessSession
      description: Deletes a completed remote access session and its results.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRemoteAccessSessionResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRemoteAccessSessionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.DeleteRemoteAccessSession
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.DeleteRun:
    post:
      operationId: DeleteRun
      description: '<p>Deletes the run, given the run ARN.</p> <p> Deleting this resource does not stop an in-progress run.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRunResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRunRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.DeleteRun
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.DeleteTestGridProject:
    post:
      operationId: DeleteTestGridProject
      description: <p> Deletes a Selenium testing project and all content generated under it. </p> <important> <p>You cannot undo this operation.</p> </important> <note> <p>You cannot delete a project if it has active sessions.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTestGridProjectResult'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '482':
          description: CannotDeleteException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CannotDeleteException'
        '483':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTestGridProjectRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.DeleteTestGridProject
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.DeleteUpload:
    post:
      operationId: DeleteUpload
      description: Deletes an upload given the upload ARN.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUploadResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUploadRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.DeleteUpload
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.DeleteVPCEConfiguration:
    post:
      operationId: DeleteVPCEConfiguration
      description: Deletes a configuration for your Amazon Virtual Private Cloud (VPC) endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVPCEConfigurationResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
        '483':
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteVPCEConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.DeleteVPCEConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetAccountSettings:
    post:
      operationId: GetAccountSettings
      description: Returns the number of unmetered iOS or unmetered Android devices that have been purchased by the account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountSettingsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccountSettingsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetAccountSettings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetDevice:
    post:
      operationId: GetDevice
      description: Gets information about a unique device type.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeviceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetDevice
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetDeviceInstance:
    post:
      operationId: GetDeviceInstance
      description: Returns information about a device instance that belongs to a private device fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceInstanceResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeviceInstanceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetDeviceInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetDevicePool:
    post:
      operationId: GetDevicePool
      description: Gets information about a device pool.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDevicePoolResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDevicePoolRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetDevicePool
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetDevicePoolCompatibility:
    post:
      operationId: GetDevicePoolCompatibility
      description: Gets information about compatibility with a device pool.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDevicePoolCompatibilityResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDevicePoolCompatibilityRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetDevicePoolCompatibility
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetInstanceProfile:
    post:
      operationId: GetInstanceProfile
      description: Returns information about the specified instance profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceProfileResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstanceProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetInstanceProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetJob:
    post:
      operationId: GetJob
      description: Gets information about a job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetNetworkProfile:
    post:
      operationId: GetNetworkProfile
      description: Returns information about a network profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkProfileResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNetworkProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetNetworkProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetOfferingStatus:
    post:
      operationId: GetOfferingStatus
      description: 'Gets the current status and future status of all offerings purchased by an AWS account. The response indicates how many offerings are currently available and the offerings that will be available in the next period. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferingStatusResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: NotEligibleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotEligibleException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOfferingStatusRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetOfferingStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetProject:
    post:
      operationId: GetProject
      description: Gets information about a project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProjectRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetProject
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetRemoteAccessSession:
    post:
      operationId: GetRemoteAccessSession
      description: Returns a link to a currently running remote access session.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRemoteAccessSessionResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRemoteAccessSessionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetRemoteAccessSession
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetRun:
    post:
      operationId: GetRun
      description: Gets information about a run.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRunResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRunRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetRun
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetSuite:
    post:
      operationId: GetSuite
      description: Gets information about a suite.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSuiteResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSuiteRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetSuite
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetTest:
    post:
      operationId: GetTest
      description: Gets information about a test.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTestRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetTest
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetTestGridProject:
    post:
      operationId: GetTestGridProject
      description: Retrieves information about a Selenium testing project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestGridProjectResult'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTestGridProjectRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetTestGridProject
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetTestGridSession:
    post:
      operationId: GetTestGridSession
      description: '<p>A session is an instance of a browser created through a <code>RemoteWebDriver</code> with the URL from <a>CreateTestGridUrlResult$url</a>. You can use the following to look up sessions:</p> <ul> <li> <p>The session ARN (<a>GetTestGridSessionRequest$sessionArn</a>).</p> </li> <li> <p>The project ARN and a session ID (<a>GetTestGridSessionRequest$projectArn</a> and <a>GetTestGridSessionRequest$sessionId</a>).</p> </li> </ul> <p/>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestGridSessionResult'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTestGridSessionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetTestGridSession
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetUpload:
    post:
      operationId: GetUpload
      description: Gets information about an upload.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUploadResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUploadRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetUpload
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.GetVPCEConfiguration:
    post:
      operationId: GetVPCEConfiguration
      description: Returns information about the configuration settings for your Amazon Virtual Private Cloud (VPC) endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVPCEConfigurationResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVPCEConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.GetVPCEConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.InstallToRemoteAccessSession:
    post:
      operationId: InstallToRemoteAccessSession
      description: 'Installs an application to the device in a remote access session. For Android applications, the file must be in .apk format. For iOS applications, the file must be in .ipa format.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallToRemoteAccessSessionResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallToRemoteAccessSessionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.InstallToRemoteAccessSession
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListArtifacts:
    post:
      operationId: ListArtifacts
      description: Gets information about artifacts.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListArtifactsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListArtifactsRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListArtifacts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListDeviceInstances:
    post:
      operationId: ListDeviceInstances
      description: Returns information about the private device instances associated with one or more AWS accounts.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceInstancesResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDeviceInstancesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListDeviceInstances
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListDevicePools:
    post:
      operationId: ListDevicePools
      description: Gets information about device pools.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicePoolsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevicePoolsRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListDevicePools
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListDevices:
    post:
      operationId: ListDevices
      description: Gets information about unique device types.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevicesRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListDevices
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListInstanceProfiles:
    post:
      operationId: ListInstanceProfiles
      description: Returns information about all the instance profiles in an AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceProfilesResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInstanceProfilesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListInstanceProfiles
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListJobs:
    post:
      operationId: ListJobs
      description: Gets information about jobs for a given test run.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListJobsRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListNetworkProfiles:
    post:
      operationId: ListNetworkProfiles
      description: Returns the list of available network profiles.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkProfilesResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNetworkProfilesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListNetworkProfiles
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListOfferingPromotions:
    post:
      operationId: ListOfferingPromotions
      description: 'Returns a list of offering promotions. Each offering promotion record contains the ID and description of the promotion. The API returns a <code>NotEligible</code> error if the caller is not permitted to invoke the operation. Contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a> if you must be able to invoke this operation.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfferingPromotionsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: NotEligibleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotEligibleException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOfferingPromotionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListOfferingPromotions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListOfferingTransactions:
    post:
      operationId: ListOfferingTransactions
      description: 'Returns a list of all historical purchases, renewals, and system renewal transactions for an AWS account. The list is paginated and ordered by a descending timestamp (most recent transactions are first). The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfferingTransactionsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: NotEligibleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotEligibleException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOfferingTransactionsRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListOfferingTransactions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListOfferings:
    post:
      operationId: ListOfferings
      description: 'Returns a list of products or offerings that the user can manage through the API. Each offering record indicates the recurring price per unit and the frequency for that offering. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfferingsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: NotEligibleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotEligibleException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOfferingsRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListOfferings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListProjects:
    post:
      operationId: ListProjects
      description: Gets information about projects.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProjectsRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListProjects
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListRemoteAccessSessions:
    post:
      operationId: ListRemoteAccessSessions
      description: Returns a list of all currently running remote access sessions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRemoteAccessSessionsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRemoteAccessSessionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListRemoteAccessSessions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListRuns:
    post:
      operationId: ListRuns
      description: 'Gets information about runs, given an AWS Device Farm project ARN.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRunsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRunsRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListRuns
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListSamples:
    post:
      operationId: ListSamples
      description: 'Gets information about samples, given an AWS Device Farm job ARN.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSamplesResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSamplesRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListSamples
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListSuites:
    post:
      operationId: ListSuites
      description: Gets information about test suites for a given job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSuitesResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSuitesRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListSuites
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: List the tags for an AWS Device Farm resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: TagOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListTestGridProjects:
    post:
      operationId: ListTestGridProjects
      description: Gets a list of all Selenium testing projects in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTestGridProjectsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTestGridProjectsRequest'
      parameters:
        - name: maxResult
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListTestGridProjects
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListTestGridSessionActions:
    post:
      operationId: ListTestGridSessionActions
      description: Returns a list of the actions taken in a <a>TestGridSession</a>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTestGridSessionActionsResult'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTestGridSessionActionsRequest'
      parameters:
        - name: maxResult
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListTestGridSessionActions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListTestGridSessionArtifacts:
    post:
      operationId: ListTestGridSessionArtifacts
      description: Retrieves a list of artifacts created during the session.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTestGridSessionArtifactsResult'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTestGridSessionArtifactsRequest'
      parameters:
        - name: maxResult
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListTestGridSessionArtifacts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListTestGridSessions:
    post:
      operationId: ListTestGridSessions
      description: Retrieves a list of sessions for a <a>TestGridProject</a>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTestGridSessionsResult'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTestGridSessionsRequest'
      parameters:
        - name: maxResult
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListTestGridSessions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListTests:
    post:
      operationId: ListTests
      description: Gets information about tests in a given test suite.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTestsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTestsRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListTests
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListUniqueProblems:
    post:
      operationId: ListUniqueProblems
      description: '<p>Gets information about unique problems, such as exceptions or crashes.</p> <p>Unique problems are defined as a single instance of an error across a run, job, or suite. For example, if a call in your application consistently raises an exception (<code>OutOfBoundsException in MyActivity.java:386</code>), <code>ListUniqueProblems</code> returns a single entry instead of many individual entries for that exception.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUniqueProblemsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUniqueProblemsRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListUniqueProblems
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListUploads:
    post:
      operationId: ListUploads
      description: 'Gets information about uploads, given an AWS Device Farm project ARN.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUploadsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUploadsRequest'
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListUploads
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ListVPCEConfigurations:
    post:
      operationId: ListVPCEConfigurations
      description: Returns information about all Amazon Virtual Private Cloud (VPC) endpoint configurations in the AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVPCEConfigurationsResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListVPCEConfigurationsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ListVPCEConfigurations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.PurchaseOffering:
    post:
      operationId: PurchaseOffering
      description: 'Immediately purchases offerings for an AWS account. Offerings renew with the latest total purchased quantity for an offering, unless the renewal was overridden. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOfferingResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: NotEligibleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotEligibleException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOfferingRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.PurchaseOffering
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.RenewOffering:
    post:
      operationId: RenewOffering
      description: 'Explicitly sets the quantity of devices to renew for an offering, starting from the <code>effectiveDate</code> of the next period. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenewOfferingResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: NotEligibleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotEligibleException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenewOfferingRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.RenewOffering
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.ScheduleRun:
    post:
      operationId: ScheduleRun
      description: Schedules a run.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleRunResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: IdempotencyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '484':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRunRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.ScheduleRun
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.StopJob:
    post:
      operationId: StopJob
      description: 'Initiates a stop request for the current job. AWS Device Farm immediately stops the job on the device where tests have not started. You are not billed for this device. On the device where tests have started, setup suite and teardown suite tests run to completion on the device. You are billed for setup, teardown, and any tests that were in progress or already completed.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopJobResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.StopJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.StopRemoteAccessSession:
    post:
      operationId: StopRemoteAccessSession
      description: Ends a specified remote access session.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopRemoteAccessSessionResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRemoteAccessSessionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.StopRemoteAccessSession
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.StopRun:
    post:
      operationId: StopRun
      description: 'Initiates a stop request for the current test run. AWS Device Farm immediately stops the run on devices where tests have not started. You are not billed for these devices. On devices where tests have started executing, setup suite and teardown suite tests run to completion on those devices. You are billed for setup, teardown, and any tests that were in progress or already completed.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopRunResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRunRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.StopRun
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.TagResource:
    post:
      operationId: TagResource
      description: 'Associates the specified tags to a resource with the specified <code>resourceArn</code>. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are also deleted.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: TagOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOperationException'
        '483':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '484':
          description: TagPolicyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagPolicyException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.UntagResource:
    post:
      operationId: UntagResource
      description: Deletes the specified tags from a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: TagOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.UpdateDeviceInstance:
    post:
      operationId: UpdateDeviceInstance
      description: Updates information about a private device instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDeviceInstanceResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceInstanceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.UpdateDeviceInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.UpdateDevicePool:
    post:
      operationId: UpdateDevicePool
      description: 'Modifies the name, description, and rules in a device pool given the attributes and the pool ARN. Rule updates are all-or-nothing, meaning they can only be updated as a whole (or not at all).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDevicePoolResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDevicePoolRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.UpdateDevicePool
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.UpdateInstanceProfile:
    post:
      operationId: UpdateInstanceProfile
      description: Updates information about an existing private device instance profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInstanceProfileResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstanceProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.UpdateInstanceProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.UpdateNetworkProfile:
    post:
      operationId: UpdateNetworkProfile
      description: Updates the network profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNetworkProfileResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.UpdateNetworkProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.UpdateProject:
    post:
      operationId: UpdateProject
      description: 'Modifies the specified project name, given the project ARN and a new name.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.UpdateProject
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.UpdateTestGridProject:
    post:
      operationId: UpdateTestGridProject
      description: Change details of a project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTestGridProjectResult'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTestGridProjectRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.UpdateTestGridProject
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.UpdateUpload:
    post:
      operationId: UpdateUpload
      description: Updates an uploaded test spec.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUploadResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUploadRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.UpdateUpload
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DeviceFarm_20150623.UpdateVPCEConfiguration:
    post:
      operationId: UpdateVPCEConfiguration
      description: Updates information about an Amazon Virtual Private Cloud (VPC) endpoint configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVPCEConfigurationResult'
        '480':
          description: ArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ServiceAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
        '483':
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVPCEConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DeviceFarm_20150623.UpdateVPCEConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateDevicePoolResult:
      type: object
      example:
        devicePool: {}
      properties:
        devicePool:
          $ref: '#/components/schemas/DevicePool'
          description: The newly created device pool.
      description: Represents the result of a create device pool request.
    CreateDevicePoolRequest:
      type: object
      required:
        - projectArn
        - name
        - rules
      title: CreateDevicePoolRequest
      properties:
        projectArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the project for the device pool.
        name:
          $ref: '#/components/schemas/Name'
          description: The device pool's name.
        description:
          $ref: '#/components/schemas/Message'
          description: The device pool's description.
        rules:
          $ref: '#/components/schemas/Rules'
          description: The device pool's rules.
        maxDevices:
          $ref: '#/components/schemas/Integer'
          description: '<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>'
      description: Represents a request to the create device pool operation.
    ArgumentException: {}
    NotFoundException: {}
    LimitExceededException: {}
    ServiceAccountException: {}
    CreateInstanceProfileResult:
      type: object
      properties:
        instanceProfile:
          $ref: '#/components/schemas/InstanceProfile'
          description: An object that contains information about your instance profile.
    CreateInstanceProfileRequest:
      type: object
      required:
        - name
      title: CreateInstanceProfileRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of your instance profile.
        description:
          $ref: '#/components/schemas/Message'
          description: The description of your instance profile.
        packageCleanup:
          $ref: '#/components/schemas/Boolean'
          description: 'When set to <code>true</code>, Device Farm removes app packages after a test run. The default value is <code>false</code> for private devices.'
        excludeAppPackagesFromCleanup:
          $ref: '#/components/schemas/PackageIds'
          description: <p>An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.</p> <p>The list of packages is considered only if you set <code>packageCleanup</code> to <code>true</code>.</p>
        rebootAfterUse:
          $ref: '#/components/schemas/Boolean'
          description: 'When set to <code>true</code>, Device Farm reboots the instance after a test run. The default value is <code>true</code>.'
    CreateNetworkProfileResult:
      type: object
      properties:
        networkProfile:
          $ref: '#/components/schemas/NetworkProfile'
          description: The network profile that is returned by the create network profile request.
    CreateNetworkProfileRequest:
      type: object
      required:
        - projectArn
        - name
      title: CreateNetworkProfileRequest
      properties:
        projectArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the project for which you want to create a network profile.
        name:
          $ref: '#/components/schemas/Name'
          description: The name for the new network profile.
        description:
          $ref: '#/components/schemas/Message'
          description: The description of the network profile.
        type:
          $ref: '#/components/schemas/NetworkProfileType'
          description: The type of network profile to create. Valid values are listed here.
        uplinkBandwidthBits:
          $ref: '#/components/schemas/Long'
          description: 'The data throughput rate in bits per second, as an integer from 0 to 104857600.'
        downlinkBandwidthBits:
          $ref: '#/components/schemas/Long'
          description: 'The data throughput rate in bits per second, as an integer from 0 to 104857600.'
        uplinkDelayMs:
          $ref: '#/components/schemas/Long'
          description: Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
        downlinkDelayMs:
          $ref: '#/components/schemas/Long'
          description: Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
        uplinkJitterMs:
          $ref: '#/components/schemas/Long'
          description: Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
        downlinkJitterMs:
          $ref: '#/components/schemas/Long'
          description: Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
        uplinkLossPercent:
          $ref: '#/components/schemas/PercentInteger'
          description: Proportion of transmitted packets that fail to arrive from 0 to 100 percent.
        downlinkLossPercent:
          $ref: '#/components/schemas/PercentInteger'
          description: Proportion of received packets that fail to arrive from 0 to 100 percent.
    CreateProjectResult:
      type: object
      example:
        project:
          name: MyProject
          arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE'
          created: '1472660939.152'
      properties:
        project:
          $ref: '#/components/schemas/Project'
          description: The newly created project.
      description: Represents the result of a create project request.
    CreateProjectRequest:
      type: object
      required:
        - name
      title: CreateProjectRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The project's name.
        defaultJobTimeoutMinutes:
          $ref: '#/components/schemas/JobTimeoutMinutes'
          description: Sets the execution timeout value (in minutes) for a project. All test runs in this project use the specified execution timeout value unless overridden when scheduling a run.
      description: Represents a request to the create project operation.
    TagOperationException: {}
    CreateRemoteAccessSessionResult:
      type: object
      example:
        remoteAccessSession: {}
      properties:
        remoteAccessSession:
          $ref: '#/components/schemas/RemoteAccessSession'
          description: A container that describes the remote access session when the request to create a remote access session is sent.
      description: Represents the server response from a request to create a remote access session.
    CreateRemoteAccessSessionRequest:
      type: object
      required:
        - projectArn
        - deviceArn
      title: CreateRemoteAccessSessionRequest
      properties:
        projectArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the project for which you want to create a remote access session.
        deviceArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the device for which you want to create a remote access session.
        instanceArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the device instance for which you want to create a remote access session.
        sshPublicKey:
          $ref: '#/components/schemas/SshPublicKey'
          description: '<p>Ignored. The public key of the <code>ssh</code> key pair you want to use for connecting to remote devices in your remote debugging session. This key is required only if <code>remoteDebugEnabled</code> is set to <code>true</code>.</p> <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer supported</a>.</p>'
        remoteDebugEnabled:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Set to <code>true</code> if you want to access devices remotely for debugging in your remote access session.</p> <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer supported</a>.</p>'
        remoteRecordEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Set to <code>true</code> to enable remote recording for the remote access session.
        remoteRecordAppArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the remote access session to create.
        clientId:
          $ref: '#/components/schemas/ClientId'
          description: '<p>Unique identifier for the client. If you want access to multiple devices on the same client, you should pass the same <code>clientId</code> value in each call to <code>CreateRemoteAccessSession</code>. This identifier is required only if <code>remoteDebugEnabled</code> is set to <code>true</code>.</p> <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer supported</a>.</p>'
        configuration:
          $ref: '#/components/schemas/CreateRemoteAccessSessionConfiguration'
          description: The configuration information for the remote access session request.
        interactionMode:
          $ref: '#/components/schemas/InteractionMode'
          description: '<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You cannot run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device, but cannot interact with it or view the screen. This mode has the fastest test execution speed. You can run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>'
        skipAppResign:
          $ref: '#/components/schemas/Boolean'
          description: '<p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.</p> <p>For more information on how Device Farm modifies your uploads during tests, see <a href="https://aws.amazon.com/device-farm/faq/">Do you modify my app?</a> </p>'
      description: Creates and submits a request to start a remote access session.
    CreateTestGridProjectResult:
      type: object
      properties:
        testGridProject:
          $ref: '#/components/schemas/TestGridProject'
          description: ARN of the Selenium testing project that was created.
    CreateTestGridProjectRequest:
      type: object
      required:
        - name
      title: CreateTestGridProjectRequest
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: Human-readable name of the Selenium testing project.
        description:
          $ref: '#/components/schemas/ResourceDescription'
          description: Human-readable description of the project.
        vpcConfig:
          $ref: '#/components/schemas/TestGridVpcConfig'
          description: The VPC security groups and subnets that are attached to a project.
    InternalServiceException: {}
    CreateTestGridUrlResult:
      type: object
      properties:
        url:
          $ref: '#/components/schemas/SensitiveString'
          description: 'A signed URL, expiring in <a>CreateTestGridUrlRequest$expiresInSeconds</a> seconds, to be passed to a <code>RemoteWebDriver</code>. '
        expires:
          $ref: '#/components/schemas/DateTime'
          description: The number of seconds the URL from <a>CreateTestGridUrlResult$url</a> stays active.
    CreateTestGridUrlRequest:
      type: object
      required:
        - projectArn
        - expiresInSeconds
      title: CreateTestGridUrlRequest
      properties:
        projectArn:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: 'ARN (from <a>CreateTestGridProject</a> or <a>ListTestGridProjects</a>) to associate with the short-term URL. '
        expiresInSeconds:
          $ref: '#/components/schemas/TestGridUrlExpiresInSecondsInput'
          description: 'Lifetime, in seconds, of the URL.'
    CreateUploadResult:
      type: object
      example:
        upload:
          name: MyAppiumPythonUpload
          type: APPIUM_PYTHON_TEST_PACKAGE
          arn: 'arn:aws:devicefarm:us-west-2:123456789101:upload:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/b5340a65-3da7-4da6-a26e-12345EXAMPLE'
          created: '1472661404.186'
          status: INITIALIZED
          url: 'https://prod-us-west-2-uploads.s3-us-west-2.amazonaws.com/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789101%3Aproject%3A5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE/uploads/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789101%3Aupload%3A5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/b5340a65-3da7-4da6-a26e-12345EXAMPLE/MyAppiumPythonUpload?AWSAccessKeyId=1234567891011EXAMPLE&Expires=1472747804&Signature=1234567891011EXAMPLE'
      properties:
        upload:
          $ref: '#/components/schemas/Upload'
          description: The newly created upload.
      description: Represents the result of a create upload request.
    CreateUploadRequest:
      type: object
      required:
        - projectArn
        - name
        - type
      title: CreateUploadRequest
      properties:
        projectArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the project for the upload.
        name:
          $ref: '#/components/schemas/Name'
          description: 'The upload''s file name. The name should not contain any forward slashes (<code>/</code>). If you are uploading an iOS app, the file name must end with the <code>.ipa</code> extension. If you are uploading an Android app, the file name must end with the <code>.apk</code> extension. For all others, the file name must end with the <code>.zip</code> file extension.'
        type:
          $ref: '#/components/schemas/UploadType'
          description: '<p>The upload''s upload type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP</p> </li> <li> <p>IOS_APP</p> </li> <li> <p>WEB_APP</p> </li> <li> <p>EXTERNAL_DATA</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p> </li> <li> <p>CALABASH_TEST_PACKAGE</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE</p> </li> <li> <p>XCTEST_TEST_PACKAGE</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC</p> </li> <li> <p>XCTEST_UI_TEST_SPEC</p> </li> </ul> <p> If you call <code>CreateUpload</code> with <code>WEB_APP</code> specified, AWS Device Farm throws an <code>ArgumentException</code> error.</p>'
        contentType:
          $ref: '#/components/schemas/ContentType'
          description: 'The upload''s content type (for example, <code>application/octet-stream</code>).'
      description: Represents a request to the create upload operation.
    CreateVPCEConfigurationResult:
      type: object
      properties:
        vpceConfiguration:
          $ref: '#/components/schemas/VPCEConfiguration'
          description: An object that contains information about your VPC endpoint configuration.
    CreateVPCEConfigurationRequest:
      type: object
      required:
        - vpceConfigurationName
        - vpceServiceName
        - serviceDnsName
      title: CreateVPCEConfigurationRequest
      properties:
        vpceConfigurationName:
          $ref: '#/components/schemas/VPCEConfigurationName'
          description: 'The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.'
        vpceServiceName:
          $ref: '#/components/schemas/VPCEServiceName'
          description: The name of the VPC endpoint service running in your AWS account that you want Device Farm to test.
        serviceDnsName:
          $ref: '#/components/schemas/ServiceDnsName'
          description: The DNS name of the service running in your VPC that you want Device Farm to test.
        vpceConfigurationDescription:
          $ref: '#/components/schemas/VPCEConfigurationDescription'
          description: An optional description that provides details about your VPC endpoint configuration.
    DeleteDevicePoolResult:
      type: object
      example: {}
      properties: {}
      description: Represents the result of a delete device pool request.
    DeleteDevicePoolRequest:
      type: object
      required:
        - arn
      title: DeleteDevicePoolRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: Represents the Amazon Resource Name (ARN) of the Device Farm device pool to delete.
      description: Represents a request to the delete device pool operation.
    DeleteInstanceProfileResult:
      type: object
      properties: {}
    DeleteInstanceProfileRequest:
      type: object
      required:
        - arn
      title: DeleteInstanceProfileRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the instance profile you are requesting to delete.
    DeleteNetworkProfileResult:
      type: object
      properties: {}
    DeleteNetworkProfileRequest:
      type: object
      required:
        - arn
      title: DeleteNetworkProfileRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the network profile to delete.
    DeleteProjectResult:
      type: object
      example: {}
      properties: {}
      description: Represents the result of a delete project request.
    DeleteProjectRequest:
      type: object
      required:
        - arn
      title: DeleteProjectRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: Represents the Amazon Resource Name (ARN) of the Device Farm project to delete.
      description: Represents a request to the delete project operation.
    DeleteRemoteAccessSessionResult:
      type: object
      example: {}
      properties: {}
      description: The response from the server when a request is made to delete the remote access session.
    DeleteRemoteAccessSessionRequest:
      type: object
      required:
        - arn
      title: DeleteRemoteAccessSessionRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the session for which you want to delete remote access.
      description: Represents the request to delete the specified remote access session.
    DeleteRunResult:
      type: object
      example: {}
      properties: {}
      description: Represents the result of a delete run request.
    DeleteRunRequest:
      type: object
      required:
        - arn
      title: DeleteRunRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) for the run to delete.
      description: Represents a request to the delete run operation.
    DeleteTestGridProjectResult:
      type: object
      properties: {}
    DeleteTestGridProjectRequest:
      type: object
      required:
        - projectArn
      title: DeleteTestGridProjectRequest
      properties:
        projectArn:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: 'The ARN of the project to delete, from <a>CreateTestGridProject</a> or <a>ListTestGridProjects</a>.'
    CannotDeleteException: {}
    DeleteUploadResult:
      type: object
      example: {}
      properties: {}
      description: Represents the result of a delete upload request.
    DeleteUploadRequest:
      type: object
      required:
        - arn
      title: DeleteUploadRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: Represents the Amazon Resource Name (ARN) of the Device Farm upload to delete.
      description: Represents a request to the delete upload operation.
    DeleteVPCEConfigurationResult:
      type: object
      properties: {}
    DeleteVPCEConfigurationRequest:
      type: object
      required:
        - arn
      title: DeleteVPCEConfigurationRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to delete.
    InvalidOperationException: {}
    GetAccountSettingsResult:
      type: object
      example:
        accountSettings:
          awsAccountNumber: '123456789101'
          unmeteredDevices:
            ANDROID: 1
            IOS: 2
      properties:
        accountSettings:
          $ref: '#/components/schemas/AccountSettings'
          description: The account settings.
      description: Represents the account settings return values from the <code>GetAccountSettings</code> request.
    GetAccountSettingsRequest:
      type: object
      title: GetAccountSettingsRequest
      properties: {}
      description: Represents the request sent to retrieve the account settings.
    GetDeviceResult:
      type: object
      example:
        device:
          name: LG G2 (Sprint)
          arn: 'arn:aws:devicefarm:us-west-2::device:A0E6E6E1059E45918208DF75B2B7EF6C'
          cpu:
            architecture: armeabi-v7a
            clock: 2265.6
            frequency: MHz
          formFactor: PHONE
          heapSize: 256000000
          image: 75B2B7EF6C12345EXAMPLE
          manufacturer: LG
          memory: 16000000000
          model: G2 (Sprint)
          os: 4.2.2
          platform: ANDROID
          resolution:
            height: 1920
            width: 1080
      properties:
        device:
          $ref: '#/components/schemas/Device'
          description: An object that contains information about the requested device.
      description: Represents the result of a get device request.
    GetDeviceRequest:
      type: object
      required:
        - arn
      title: GetDeviceRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The device type's ARN.
      description: Represents a request to the get device request.
    GetDeviceInstanceResult:
      type: object
      properties:
        deviceInstance:
          $ref: '#/components/schemas/DeviceInstance'
          description: An object that contains information about your device instance.
    GetDeviceInstanceRequest:
      type: object
      required:
        - arn
      title: GetDeviceInstanceRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the instance you're requesting information about.
    GetDevicePoolResult:
      type: object
      example:
        devicePool: {}
      properties:
        devicePool:
          $ref: '#/components/schemas/DevicePool'
          description: An object that contains information about the requested device pool.
      description: Represents the result of a get device pool request.
    GetDevicePoolRequest:
      type: object
      required:
        - arn
      title: GetDevicePoolRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The device pool's ARN.
      description: Represents a request to the get device pool operation.
    GetDevicePoolCompatibilityResult:
      type: object
      example:
        compatibleDevices: []
        incompatibleDevices: []
      properties:
        compatibleDevices:
          $ref: '#/components/schemas/DevicePoolCompatibilityResults'
          description: Information about compatible devices.
        incompatibleDevices:
          $ref: '#/components/schemas/DevicePoolCompatibilityResults'
          description: Information about incompatible devices.
      description: Represents the result of describe device pool compatibility request.
    GetDevicePoolCompatibilityRequest:
      type: object
      required:
        - devicePoolArn
      title: GetDevicePoolCompatibilityRequest
      properties:
        devicePoolArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The device pool's ARN.
        appArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the app that is associated with the specified device pool.
        testType:
          $ref: '#/components/schemas/TestType'
          description: '<p>The test type for the specified device pool.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ.</p> </li> <li> <p>BUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT.</p> </li> <li> <p>APPIUM_JAVA_TESTNG.</p> </li> <li> <p>APPIUM_PYTHON.</p> </li> <li> <p>APPIUM_NODE.</p> </li> <li> <p>APPIUM_RUBY.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG.</p> </li> <li> <p>APPIUM_WEB_PYTHON.</p> </li> <li> <p>APPIUM_WEB_NODE.</p> </li> <li> <p>APPIUM_WEB_RUBY.</p> </li> <li> <p>CALABASH.</p> </li> <li> <p>INSTRUMENTATION.</p> </li> <li> <p>UIAUTOMATION.</p> </li> <li> <p>UIAUTOMATOR.</p> </li> <li> <p>XCTEST.</p> </li> <li> <p>XCTEST_UI.</p> </li> </ul>'
        test:
          $ref: '#/components/schemas/ScheduleRunTest'
          description: Information about the uploaded test to be run against the device pool.
        configuration:
          $ref: '#/components/schemas/ScheduleRunConfiguration'
          description: An object that contains information about the settings for a run.
      description: Represents a request to the get device pool compatibility operation.
    GetInstanceProfileResult:
      type: object
      properties:
        instanceProfile:
          $ref: '#/components/schemas/InstanceProfile'
          description: An object that contains information about an instance profile.
    GetInstanceProfileRequest:
      type: object
      required:
        - arn
      title: GetInstanceProfileRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of an instance profile.
    GetJobResult:
      type: object
      example:
        job: {}
      properties:
        job:
          $ref: '#/components/schemas/Job'
          description: An object that contains information about the requested job.
      description: Represents the result of a get job request.
    GetJobRequest:
      type: object
      required:
        - arn
      title: GetJobRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The job's ARN.
      description: Represents a request to the get job operation.
    GetNetworkProfileResult:
      type: object
      properties:
        networkProfile:
          $ref: '#/components/schemas/NetworkProfile'
          description: The network profile.
    GetNetworkProfileRequest:
      type: object
      required:
        - arn
      title: GetNetworkProfileRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the network profile to return information about.
    GetOfferingStatusResult:
      type: object
      example:
        current:
          D68B3C05-1BA6-4360-BC69-12345EXAMPLE:
            offering:
              type: RECURRING
              description: Android Remote Access Unmetered Device Slot
              id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
              platform: ANDROID
            quantity: 1
        nextPeriod:
          D68B3C05-1BA6-4360-BC69-12345EXAMPLE:
            effectiveOn: '1472688000'
            offering:
              type: RECURRING
              description: Android Remote Access Unmetered Device Slot
              id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
              platform: ANDROID
            quantity: 1
      properties:
        current:
          $ref: '#/components/schemas/OfferingStatusMap'
          description: 'When specified, gets the offering status for the current period.'
        nextPeriod:
          $ref: '#/components/schemas/OfferingStatusMap'
          description: 'When specified, gets the offering status for the next period.'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Returns the status result for a device offering.
    GetOfferingStatusRequest:
      type: object
      title: GetOfferingStatusRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents the request to retrieve the offering status for the specified customer or account.
    NotEligibleException: {}
    GetProjectResult:
      type: object
      example:
        project:
          name: My Project
          arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE'
          created: '1472660939.152'
      properties:
        project:
          $ref: '#/components/schemas/Project'
          description: The project to get information about.
      description: Represents the result of a get project request.
    GetProjectRequest:
      type: object
      required:
        - arn
      title: GetProjectRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The project's ARN.
      description: Represents a request to the get project operation.
    GetRemoteAccessSessionResult:
      type: object
      example:
        remoteAccessSession: {}
      properties:
        remoteAccessSession:
          $ref: '#/components/schemas/RemoteAccessSession'
          description: A container that lists detailed information about the remote access session.
      description: Represents the response from the server that lists detailed information about the remote access session.
    GetRemoteAccessSessionRequest:
      type: object
      required:
        - arn
      title: GetRemoteAccessSessionRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the remote access session about which you want to get session information.
      description: Represents the request to get information about the specified remote access session.
    GetRunResult:
      type: object
      example:
        run:
          name: My Test Run
          type: BUILTIN_EXPLORER
          arn: 'arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE'
          billingMethod: METERED
          completedJobs: 0
          counters:
            errored: 0
            failed: 0
            passed: 0
            skipped: 0
            stopped: 0
            total: 0
            warned: 0
          created: '1472667509.852'
          deviceMinutes:
            metered: 0
            total: 0
            unmetered: 0
          platform: ANDROID
          result: PENDING
          status: RUNNING
          totalJobs: 3
      properties:
        run:
          $ref: '#/components/schemas/Run'
          description: The run to get results from.
      description: Represents the result of a get run request.
    GetRunRequest:
      type: object
      required:
        - arn
      title: GetRunRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The run's ARN.
      description: Represents a request to the get run operation.
    GetSuiteResult:
      type: object
      example:
        suite: {}
      properties:
        suite:
          $ref: '#/components/schemas/Suite'
          description: A collection of one or more tests.
      description: Represents the result of a get suite request.
    GetSuiteRequest:
      type: object
      required:
        - arn
      title: GetSuiteRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The suite's ARN.
      description: Represents a request to the get suite operation.
    GetTestResult:
      type: object
      example:
        test: {}
      properties:
        test:
          $ref: '#/components/schemas/Test'
          description: A test condition that is evaluated.
      description: Represents the result of a get test request.
    GetTestRequest:
      type: object
      required:
        - arn
      title: GetTestRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The test's ARN.
      description: Represents a request to the get test operation.
    GetTestGridProjectResult:
      type: object
      properties:
        testGridProject:
          $ref: '#/components/schemas/TestGridProject'
          description: A <a>TestGridProject</a>.
    GetTestGridProjectRequest:
      type: object
      required:
        - projectArn
      title: GetTestGridProjectRequest
      properties:
        projectArn:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: 'The ARN of the Selenium testing project, from either <a>CreateTestGridProject</a> or <a>ListTestGridProjects</a>.'
    GetTestGridSessionResult:
      type: object
      properties:
        testGridSession:
          $ref: '#/components/schemas/TestGridSession'
          description: The <a>TestGridSession</a> that was requested.
    GetTestGridSessionRequest:
      type: object
      title: GetTestGridSessionRequest
      properties:
        projectArn:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: The ARN for the project that this session belongs to. See <a>CreateTestGridProject</a> and <a>ListTestGridProjects</a>.
        sessionId:
          $ref: '#/components/schemas/ResourceId'
          description: An ID associated with this session.
        sessionArn:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: An ARN that uniquely identifies a <a>TestGridSession</a>.
    GetUploadResult:
      type: object
      example:
        upload: {}
      properties:
        upload:
          $ref: '#/components/schemas/Upload'
          description: An app or a set of one or more tests to upload or that have been uploaded.
      description: Represents the result of a get upload request.
    GetUploadRequest:
      type: object
      required:
        - arn
      title: GetUploadRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The upload's ARN.
      description: Represents a request to the get upload operation.
    GetVPCEConfigurationResult:
      type: object
      properties:
        vpceConfiguration:
          $ref: '#/components/schemas/VPCEConfiguration'
          description: An object that contains information about your VPC endpoint configuration.
    GetVPCEConfigurationRequest:
      type: object
      required:
        - arn
      title: GetVPCEConfigurationRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to describe.
    InstallToRemoteAccessSessionResult:
      type: object
      example:
        appUpload: {}
      properties:
        appUpload:
          $ref: '#/components/schemas/Upload'
          description: An app to upload or that has been uploaded.
      description: Represents the response from the server after AWS Device Farm makes a request to install to a remote access session.
    InstallToRemoteAccessSessionRequest:
      type: object
      required:
        - remoteAccessSessionArn
        - appArn
      title: InstallToRemoteAccessSessionRequest
      properties:
        remoteAccessSessionArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.
        appArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the app about which you are requesting information.
      description: Represents the request to install an Android application (in .apk format) or an iOS application (in .ipa format) as part of a remote access session.
    ListArtifactsResult:
      type: object
      properties:
        artifacts:
          $ref: '#/components/schemas/Artifacts'
          description: Information about the artifacts.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.'
      description: Represents the result of a list artifacts operation.
    ListArtifactsRequest:
      type: object
      required:
        - arn
        - type
      title: ListArtifactsRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: 'The run, job, suite, or test ARN.'
        type:
          $ref: '#/components/schemas/ArtifactCategory'
          description: '<p>The artifacts'' type.</p> <p>Allowed values include:</p> <ul> <li> <p>FILE</p> </li> <li> <p>LOG</p> </li> <li> <p>SCREENSHOT</p> </li> </ul>'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents a request to the list artifacts operation.
    ListDeviceInstancesResult:
      type: object
      properties:
        deviceInstances:
          $ref: '#/components/schemas/DeviceInstances'
          description: An object that contains information about your device instances.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: An identifier that can be used in the next call to this operation to return the next set of items in the list.
    ListDeviceInstancesRequest:
      type: object
      title: ListDeviceInstancesRequest
      properties:
        maxResults:
          $ref: '#/components/schemas/Integer'
          description: An integer that specifies the maximum number of items you want to return in the API response.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    ListDevicePoolsResult:
      type: object
      example:
        devicePools:
          - name: Top Devices
            arn: 'arn:aws:devicefarm:us-west-2::devicepool:082d10e5-d7d7-48a5-ba5c-12345EXAMPLE'
            description: Top devices
            rules:
              - value: '["arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE"]'
                attribute: ARN
                operator: IN
          - name: My Android Device Pool
            arn: 'arn:aws:devicefarm:us-west-2:123456789101:devicepool:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/bf96e75a-28f6-4e61-b6a7-12345EXAMPLE'
            description: Samsung Galaxy Android devices
            rules:
              - value: '["arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE"]'
                attribute: ARN
                operator: IN
      properties:
        devicePools:
          $ref: '#/components/schemas/DevicePools'
          description: Information about the device pools.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.'
      description: Represents the result of a list device pools request.
    ListDevicePoolsRequest:
      type: object
      required:
        - arn
      title: ListDevicePoolsRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The project ARN.
        type:
          $ref: '#/components/schemas/DevicePoolType'
          description: '<p>The device pools'' type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents the result of a list device pools request.
    ListDevicesResult:
      type: object
      example: {}
      properties:
        devices:
          $ref: '#/components/schemas/Devices'
          description: Information about the devices.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.'
      description: Represents the result of a list devices operation.
    ListDevicesRequest:
      type: object
      title: ListDevicesRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the project.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
        filters:
          $ref: '#/components/schemas/DeviceFilters'
          description: '<p>Used to select a set of devices. A filter is made up of an attribute, an operator, and one or more values.</p> <ul> <li> <p>Attribute: The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The Amazon Resource Name (ARN) of the device (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</p> </li> <li> <p>PLATFORM: The device platform. Valid values are ANDROID or IOS.</p> </li> <li> <p>OS_VERSION: The operating system version (for example, 10.3.2).</p> </li> <li> <p>MODEL: The device model (for example, iPad 5th Gen).</p> </li> <li> <p>AVAILABILITY: The current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> <li> <p>FORM_FACTOR: The device form factor. Valid values are PHONE or TABLET.</p> </li> <li> <p>MANUFACTURER: The device manufacturer (for example, Apple).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values are TRUE or FALSE.</p> </li> <li> <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values are TRUE or FALSE. Because remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer supported</a>, this attribute is ignored.</p> </li> <li> <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p> </li> <li> <p>INSTANCE_LABELS: The label of the device instance.</p> </li> <li> <p>FLEET_TYPE: The fleet type. Valid values are PUBLIC or PRIVATE.</p> </li> </ul> </li> <li> <p>Operator: The filter operator.</p> <ul> <li> <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p> </li> <li> <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p> </li> <li> <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p> </li> <li> <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION attribute.</p> </li> </ul> </li> <li> <p>Values: An array of one or more filter values.</p> <ul> <li> <p>The IN and NOT_IN operators take a values array that has one or more elements.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> <li> <p>In a request, the AVAILABILITY attribute takes the following values: AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> </ul> </li> </ul>'
      description: Represents the result of a list devices request.
    ListInstanceProfilesResult:
      type: object
      properties:
        instanceProfiles:
          $ref: '#/components/schemas/InstanceProfiles'
          description: An object that contains information about your instance profiles.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: An identifier that can be used in the next call to this operation to return the next set of items in the list.
    ListInstanceProfilesRequest:
      type: object
      title: ListInstanceProfilesRequest
      properties:
        maxResults:
          $ref: '#/components/schemas/Integer'
          description: An integer that specifies the maximum number of items you want to return in the API response.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    ListJobsResult:
      type: object
      properties:
        jobs:
          $ref: '#/components/schemas/Jobs'
          description: Information about the jobs.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.'
      description: Represents the result of a list jobs request.
    ListJobsRequest:
      type: object
      required:
        - arn
      title: ListJobsRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The run's Amazon Resource Name (ARN).
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents a request to the list jobs operation.
    ListNetworkProfilesResult:
      type: object
      properties:
        networkProfiles:
          $ref: '#/components/schemas/NetworkProfiles'
          description: A list of the available network profiles.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    ListNetworkProfilesRequest:
      type: object
      required:
        - arn
      title: ListNetworkProfilesRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the project for which you want to list network profiles.
        type:
          $ref: '#/components/schemas/NetworkProfileType'
          description: The type of network profile to return information about. Valid values are listed here.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    ListOfferingPromotionsResult:
      type: object
      properties:
        offeringPromotions:
          $ref: '#/components/schemas/OfferingPromotions'
          description: Information about the offering promotions.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier to be used in the next call to this operation, to return the next set of items in the list.'
    ListOfferingPromotionsRequest:
      type: object
      title: ListOfferingPromotionsRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    ListOfferingTransactionsResult:
      type: object
      example:
        offeringTransactions:
          - cost:
              amount: 0
              currencyCode: USD
            createdOn: '1470021420'
            offeringStatus:
              type: RENEW
              effectiveOn: '1472688000'
              offering:
                type: RECURRING
                description: Android Remote Access Unmetered Device Slot
                id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
                platform: ANDROID
              quantity: 0
            transactionId: 03728003-d1ea-4851-abd6-12345EXAMPLE
          - cost:
              amount: 250
              currencyCode: USD
            createdOn: '1470021420'
            offeringStatus:
              type: PURCHASE
              effectiveOn: '1470021420'
              offering:
                type: RECURRING
                description: Android Remote Access Unmetered Device Slot
                id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
                platform: ANDROID
              quantity: 1
            transactionId: 56820b6e-06bd-473a-8ff8-12345EXAMPLE
          - cost:
              amount: 175
              currencyCode: USD
            createdOn: '1465538520'
            offeringStatus:
              type: PURCHASE
              effectiveOn: '1465538520'
              offering:
                type: RECURRING
                description: Android Unmetered Device Slot
                id: 8980F81C-00D7-469D-8EC6-12345EXAMPLE
                platform: ANDROID
              quantity: 1
            transactionId: 953ae2c6-d760-4a04-9597-12345EXAMPLE
          - cost:
              amount: 8.07
              currencyCode: USD
            createdOn: '1459344300'
            offeringStatus:
              type: PURCHASE
              effectiveOn: '1459344300'
              offering:
                type: RECURRING
                description: iOS Unmetered Device Slot
                id: A53D4D73-A6F6-4B82-A0B0-12345EXAMPLE
                platform: IOS
              quantity: 1
            transactionId: 2baf9021-ae3e-47f5-ab52-12345EXAMPLE
      properties:
        offeringTransactions:
          $ref: '#/components/schemas/OfferingTransactions'
          description: The audit log of subscriptions you have purchased and modified through AWS Device Farm.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Returns the transaction log of the specified offerings.
    ListOfferingTransactionsRequest:
      type: object
      title: ListOfferingTransactionsRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents the request to list the offering transaction history.
    ListOfferingsResult:
      type: object
      example:
        offerings:
          - type: RECURRING
            description: iOS Unmetered Device Slot
            id: A53D4D73-A6F6-4B82-A0B0-12345EXAMPLE
            platform: IOS
            recurringCharges:
              - cost:
                  amount: 250
                  currencyCode: USD
                frequency: MONTHLY
          - type: RECURRING
            description: Android Unmetered Device Slot
            id: 8980F81C-00D7-469D-8EC6-12345EXAMPLE
            platform: ANDROID
            recurringCharges:
              - cost:
                  amount: 250
                  currencyCode: USD
                frequency: MONTHLY
          - type: RECURRING
            description: Android Remote Access Unmetered Device Slot
            id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
            platform: ANDROID
            recurringCharges:
              - cost:
                  amount: 250
                  currencyCode: USD
                frequency: MONTHLY
          - type: RECURRING
            description: iOS Remote Access Unmetered Device Slot
            id: 552B4DAD-A6C9-45C4-94FB-12345EXAMPLE
            platform: IOS
            recurringCharges:
              - cost:
                  amount: 250
                  currencyCode: USD
                frequency: MONTHLY
      properties:
        offerings:
          $ref: '#/components/schemas/Offerings'
          description: A value that represents the list offering results.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents the return values of the list of offerings.
    ListOfferingsRequest:
      type: object
      title: ListOfferingsRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents the request to list all offerings.
    ListProjectsResult:
      type: object
      example:
        projects:
          - name: My Test Project
            arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:7ad300ed-8183-41a7-bf94-12345EXAMPLE'
            created: '1453163262.105'
          - name: Hello World
            arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:d6b087d9-56db-4e44-b9ec-12345EXAMPLE'
            created: '1470350112.439'
      properties:
        projects:
          $ref: '#/components/schemas/Projects'
          description: Information about the projects.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.'
      description: Represents the result of a list projects request.
    ListProjectsRequest:
      type: object
      title: ListProjectsRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: 'Optional. If no Amazon Resource Name (ARN) is specified, then AWS Device Farm returns a list of all projects for the AWS account. You can also specify a project ARN.'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents a request to the list projects operation.
    ListRemoteAccessSessionsResult:
      type: object
      example:
        remoteAccessSessions: []
      properties:
        remoteAccessSessions:
          $ref: '#/components/schemas/RemoteAccessSessions'
          description: A container that represents the metadata from the service about each remote access session you are requesting.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents the response from the server after AWS Device Farm makes a request to return information about the remote access session.
    ListRemoteAccessSessionsRequest:
      type: object
      required:
        - arn
      title: ListRemoteAccessSessionsRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the project about which you are requesting information.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents the request to return information about the remote access session.
    ListRunsResult:
      type: object
      example:
        runs:
          - name: My Test Run
            type: BUILTIN_EXPLORER
            arn: 'arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE'
            billingMethod: METERED
            completedJobs: 0
            counters:
              errored: 0
              failed: 0
              passed: 0
              skipped: 0
              stopped: 0
              total: 0
              warned: 0
            created: '1472667509.852'
            deviceMinutes:
              metered: 0
              total: 0
              unmetered: 0
            platform: ANDROID
            result: PENDING
            status: RUNNING
            totalJobs: 3
      properties:
        runs:
          $ref: '#/components/schemas/Runs'
          description: Information about the runs.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.'
      description: Represents the result of a list runs request.
    ListRunsRequest:
      type: object
      required:
        - arn
      title: ListRunsRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the project for which you want to list runs.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents a request to the list runs operation.
    ListSamplesResult:
      type: object
      example:
        samples: []
      properties:
        samples:
          $ref: '#/components/schemas/Samples'
          description: Information about the samples.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.'
      description: Represents the result of a list samples request.
    ListSamplesRequest:
      type: object
      required:
        - arn
      title: ListSamplesRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the job used to list samples.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents a request to the list samples operation.
    ListSuitesResult:
      type: object
      example:
        suites: []
      properties:
        suites:
          $ref: '#/components/schemas/Suites'
          description: Information about the suites.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.'
      description: Represents the result of a list suites request.
    ListSuitesRequest:
      type: object
      required:
        - arn
      title: ListSuitesRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The job's Amazon Resource Name (ARN).
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents a request to the list suites operation.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters. Tag values can have a maximum length of 256 characters.
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceARN
      title: ListTagsForResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: 'The Amazon Resource Name (ARN) of the resource or resources for which to list tags. You can associate tags with the following Device Farm resources: <code>PROJECT</code>, <code>RUN</code>, <code>NETWORK_PROFILE</code>, <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>, <code>SESSION</code>, <code>DEVICE_POOL</code>, <code>DEVICE</code>, and <code>VPCE_CONFIGURATION</code>.'
    ListTestGridProjectsResult:
      type: object
      properties:
        testGridProjects:
          $ref: '#/components/schemas/TestGridProjects'
          description: 'The list of TestGridProjects, based on a <a>ListTestGridProjectsRequest</a>.'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Used for pagination. Pass into <a>ListTestGridProjects</a> to get more results in a paginated request.
    ListTestGridProjectsRequest:
      type: object
      title: ListTestGridProjectsRequest
      properties:
        maxResult:
          $ref: '#/components/schemas/MaxPageSize'
          description: Return no more than this number of results.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'From a response, used to continue a paginated listing. '
    ListTestGridSessionActionsResult:
      type: object
      properties:
        actions:
          $ref: '#/components/schemas/TestGridSessionActions'
          description: The action taken by the session.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Pagination token.
    ListTestGridSessionActionsRequest:
      type: object
      required:
        - sessionArn
      title: ListTestGridSessionActionsRequest
      properties:
        sessionArn:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: The ARN of the session to retrieve.
        maxResult:
          $ref: '#/components/schemas/MaxPageSize'
          description: The maximum number of sessions to return per response.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Pagination token.
    ListTestGridSessionArtifactsResult:
      type: object
      properties:
        artifacts:
          $ref: '#/components/schemas/TestGridSessionArtifacts'
          description: A list of test grid session artifacts for a <a>TestGridSession</a>.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Pagination token.
    ListTestGridSessionArtifactsRequest:
      type: object
      required:
        - sessionArn
      title: ListTestGridSessionArtifactsRequest
      properties:
        sessionArn:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: 'The ARN of a <a>TestGridSession</a>. '
        type:
          $ref: '#/components/schemas/TestGridSessionArtifactCategory'
          description: Limit results to a specified type of artifact.
        maxResult:
          $ref: '#/components/schemas/MaxPageSize'
          description: The maximum number of results to be returned by a request.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Pagination token.
    ListTestGridSessionsResult:
      type: object
      properties:
        testGridSessions:
          $ref: '#/components/schemas/TestGridSessions'
          description: 'The sessions that match the criteria in a <a>ListTestGridSessionsRequest</a>. '
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Pagination token.
    ListTestGridSessionsRequest:
      type: object
      required:
        - projectArn
      title: ListTestGridSessionsRequest
      properties:
        projectArn:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: ARN of a <a>TestGridProject</a>.
        status:
          $ref: '#/components/schemas/TestGridSessionStatus'
          description: Return only sessions in this state.
        creationTimeAfter:
          $ref: '#/components/schemas/DateTime'
          description: Return only sessions created after this time.
        creationTimeBefore:
          $ref: '#/components/schemas/DateTime'
          description: Return only sessions created before this time.
        endTimeAfter:
          $ref: '#/components/schemas/DateTime'
          description: Return only sessions that ended after this time.
        endTimeBefore:
          $ref: '#/components/schemas/DateTime'
          description: Return only sessions that ended before this time.
        maxResult:
          $ref: '#/components/schemas/MaxPageSize'
          description: Return only this many results at a time.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: Pagination token.
    ListTestsResult:
      type: object
      example:
        tests: []
      properties:
        tests:
          $ref: '#/components/schemas/Tests'
          description: Information about the tests.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.'
      description: Represents the result of a list tests request.
    ListTestsRequest:
      type: object
      required:
        - arn
      title: ListTestsRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The test suite's Amazon Resource Name (ARN).
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents a request to the list tests operation.
    ListUniqueProblemsResult:
      type: object
      example:
        uniqueProblems: {}
      properties:
        uniqueProblems:
          $ref: '#/components/schemas/UniqueProblemsByExecutionResultMap'
          description: '<p>Information about the unique problems.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.'
      description: Represents the result of a list unique problems request.
    ListUniqueProblemsRequest:
      type: object
      required:
        - arn
      title: ListUniqueProblemsRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The unique problems' ARNs.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents a request to the list unique problems operation.
    ListUploadsResult:
      type: object
      example:
        uploads: []
      properties:
        uploads:
          $ref: '#/components/schemas/Uploads'
          description: Information about the uploads.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.'
      description: Represents the result of a list uploads request.
    ListUploadsRequest:
      type: object
      required:
        - arn
      title: ListUploadsRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the project for which you want to list uploads.
        type:
          $ref: '#/components/schemas/UploadType'
          description: '<p>The type of upload.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP</p> </li> <li> <p>IOS_APP</p> </li> <li> <p>WEB_APP</p> </li> <li> <p>EXTERNAL_DATA</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p> </li> <li> <p>CALABASH_TEST_PACKAGE</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE</p> </li> <li> <p>XCTEST_TEST_PACKAGE</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC</p> </li> <li> <p> APPIUM_RUBY_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC</p> </li> <li> <p>XCTEST_UI_TEST_SPEC</p> </li> </ul>'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      description: Represents a request to the list uploads operation.
    ListVPCEConfigurationsResult:
      type: object
      properties:
        vpceConfigurations:
          $ref: '#/components/schemas/VPCEConfigurations'
          description: An array of <code>VPCEConfiguration</code> objects that contain information about your VPC endpoint configuration.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    ListVPCEConfigurationsRequest:
      type: object
      title: ListVPCEConfigurationsRequest
      properties:
        maxResults:
          $ref: '#/components/schemas/Integer'
          description: An integer that specifies the maximum number of items you want to return in the API response.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    PurchaseOfferingResult:
      type: object
      example:
        offeringTransaction:
          cost:
            amount: 8.07
            currencyCode: USD
          createdOn: '1472648340'
          offeringStatus:
            type: PURCHASE
            effectiveOn: '1472648340'
            offering:
              type: RECURRING
              description: Android Remote Access Unmetered Device Slot
              id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
              platform: ANDROID
            quantity: 1
          transactionId: d30614ed-1b03-404c-9893-12345EXAMPLE
      properties:
        offeringTransaction:
          $ref: '#/components/schemas/OfferingTransaction'
          description: Represents the offering transaction for the purchase result.
      description: 'The result of the purchase offering (for example, success or failure).'
    PurchaseOfferingRequest:
      type: object
      required:
        - offeringId
        - quantity
      title: PurchaseOfferingRequest
      properties:
        offeringId:
          $ref: '#/components/schemas/OfferingIdentifier'
          description: The ID of the offering.
        quantity:
          $ref: '#/components/schemas/Integer'
          description: The number of device slots to purchase in an offering request.
        offeringPromotionId:
          $ref: '#/components/schemas/OfferingPromotionIdentifier'
          description: The ID of the offering promotion to be applied to the purchase.
      description: Represents a request for a purchase offering.
    RenewOfferingResult:
      type: object
      example:
        offeringTransaction:
          cost:
            amount: 250
            currencyCode: USD
          createdOn: '1472648880'
          offeringStatus:
            type: RENEW
            effectiveOn: '1472688000'
            offering:
              type: RECURRING
              description: Android Remote Access Unmetered Device Slot
              id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
              platform: ANDROID
            quantity: 1
          transactionId: e90f1405-8c35-4561-be43-12345EXAMPLE
      properties:
        offeringTransaction:
          $ref: '#/components/schemas/OfferingTransaction'
          description: Represents the status of the offering transaction for the renewal.
      description: The result of a renewal offering.
    RenewOfferingRequest:
      type: object
      required:
        - offeringId
        - quantity
      title: RenewOfferingRequest
      properties:
        offeringId:
          $ref: '#/components/schemas/OfferingIdentifier'
          description: The ID of a request to renew an offering.
        quantity:
          $ref: '#/components/schemas/Integer'
          description: The quantity requested in an offering renewal.
      description: A request that represents an offering renewal.
    ScheduleRunResult:
      type: object
      example:
        run: {}
      properties:
        run:
          $ref: '#/components/schemas/Run'
          description: Information about the scheduled run.
      description: Represents the result of a schedule run request.
    ScheduleRunRequest:
      type: object
      required:
        - projectArn
        - test
      title: ScheduleRunRequest
      properties:
        projectArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the project for the run to be scheduled.
        appArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: 'The ARN of an application package to run tests against, created with <a>CreateUpload</a>. See <a>ListUploads</a>.'
        devicePoolArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the device pool for the run to be scheduled.
        deviceSelectionConfiguration:
          $ref: '#/components/schemas/DeviceSelectionConfiguration'
          description: <p>The filter criteria used to dynamically select a set of devices for a test run and the maximum number of devices to be included in the run.</p> <p>Either <b> <code>devicePoolArn</code> </b> or <b> <code>deviceSelectionConfiguration</code> </b> is required in a request.</p>
        name:
          $ref: '#/components/schemas/Name'
          description: The name for the run to be scheduled.
        test:
          $ref: '#/components/schemas/ScheduleRunTest'
          description: Information about the test for the run to be scheduled.
        configuration:
          $ref: '#/components/schemas/ScheduleRunConfiguration'
          description: Information about the settings for the run to be scheduled.
        executionConfiguration:
          $ref: '#/components/schemas/ExecutionConfiguration'
          description: 'Specifies configuration information about a test run, such as the execution timeout (in minutes).'
      description: Represents a request to the schedule run operation.
    IdempotencyException: {}
    StopJobResult:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/Job'
          description: The job that was stopped.
    StopJobRequest:
      type: object
      required:
        - arn
      title: StopJobRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: Represents the Amazon Resource Name (ARN) of the Device Farm job to stop.
    StopRemoteAccessSessionResult:
      type: object
      properties:
        remoteAccessSession:
          $ref: '#/components/schemas/RemoteAccessSession'
          description: A container that represents the metadata from the service about the remote access session you are stopping.
      description: Represents the response from the server that describes the remote access session when AWS Device Farm stops the session.
    StopRemoteAccessSessionRequest:
      type: object
      required:
        - arn
      title: StopRemoteAccessSessionRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the remote access session to stop.
      description: Represents the request to stop the remote access session.
    StopRunResult:
      type: object
      example:
        run: {}
      properties:
        run:
          $ref: '#/components/schemas/Run'
          description: The run that was stopped.
      description: Represents the results of your stop run attempt.
    StopRunRequest:
      type: object
      required:
        - arn
      title: StopRunRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: Represents the Amazon Resource Name (ARN) of the Device Farm run to stop.
      description: Represents the request to stop a specific run.
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceARN
        - Tags
      title: TagResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: 'The Amazon Resource Name (ARN) of the resource or resources to which to add tags. You can associate tags with the following Device Farm resources: <code>PROJECT</code>, <code>RUN</code>, <code>NETWORK_PROFILE</code>, <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>, <code>SESSION</code>, <code>DEVICE_POOL</code>, <code>DEVICE</code>, and <code>VPCE_CONFIGURATION</code>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters. Tag values can have a maximum length of 256 characters.
    TooManyTagsException: {}
    TagPolicyException: {}
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceARN
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceARN:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: 'The Amazon Resource Name (ARN) of the resource or resources from which to delete tags. You can associate tags with the following Device Farm resources: <code>PROJECT</code>, <code>RUN</code>, <code>NETWORK_PROFILE</code>, <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>, <code>SESSION</code>, <code>DEVICE_POOL</code>, <code>DEVICE</code>, and <code>VPCE_CONFIGURATION</code>.'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: The keys of the tags to be removed.
    UpdateDeviceInstanceResult:
      type: object
      properties:
        deviceInstance:
          $ref: '#/components/schemas/DeviceInstance'
          description: An object that contains information about your device instance.
    UpdateDeviceInstanceRequest:
      type: object
      required:
        - arn
      title: UpdateDeviceInstanceRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the device instance.
        profileArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the profile that you want to associate with the device instance.
        labels:
          $ref: '#/components/schemas/InstanceLabels'
          description: An array of strings that you want to associate with the device instance.
    UpdateDevicePoolResult:
      type: object
      example:
        devicePool: {}
      properties:
        devicePool:
          $ref: '#/components/schemas/DevicePool'
          description: The device pool you just updated.
      description: Represents the result of an update device pool request.
    UpdateDevicePoolRequest:
      type: object
      required:
        - arn
      title: UpdateDevicePoolRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the Device Farm device pool to update.
        name:
          $ref: '#/components/schemas/Name'
          description: A string that represents the name of the device pool to update.
        description:
          $ref: '#/components/schemas/Message'
          description: A description of the device pool to update.
        rules:
          $ref: '#/components/schemas/Rules'
          description: 'Represents the rules to modify for the device pool. Updating rules is optional. If you update rules for your request, the update replaces the existing rules.'
        maxDevices:
          $ref: '#/components/schemas/Integer'
          description: '<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p> <p>If you use this parameter in your request, you cannot use the <code>clearMaxDevices</code> parameter in the same request.</p>'
        clearMaxDevices:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Sets whether the <code>maxDevices</code> parameter applies to your device pool. If you set this parameter to <code>true</code>, the <code>maxDevices</code> parameter does not apply, and Device Farm does not limit the number of devices that it adds to your device pool. In this case, Device Farm adds all available devices that meet the criteria specified in the <code>rules</code> parameter.</p> <p>If you use this parameter in your request, you cannot use the <code>maxDevices</code> parameter in the same request.</p>'
      description: Represents a request to the update device pool operation.
    UpdateInstanceProfileResult:
      type: object
      properties:
        instanceProfile:
          $ref: '#/components/schemas/InstanceProfile'
          description: An object that contains information about your instance profile.
    UpdateInstanceProfileRequest:
      type: object
      required:
        - arn
      title: UpdateInstanceProfileRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the instance profile.
        name:
          $ref: '#/components/schemas/Name'
          description: The updated name for your instance profile.
        description:
          $ref: '#/components/schemas/Message'
          description: The updated description for your instance profile.
        packageCleanup:
          $ref: '#/components/schemas/Boolean'
          description: The updated choice for whether you want to specify package cleanup. The default value is <code>false</code> for private devices.
        excludeAppPackagesFromCleanup:
          $ref: '#/components/schemas/PackageIds'
          description: <p>An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>
        rebootAfterUse:
          $ref: '#/components/schemas/Boolean'
          description: The updated choice for whether you want to reboot the device after use. The default value is <code>true</code>.
    UpdateNetworkProfileResult:
      type: object
      properties:
        networkProfile:
          $ref: '#/components/schemas/NetworkProfile'
          description: A list of the available network profiles.
    UpdateNetworkProfileRequest:
      type: object
      required:
        - arn
      title: UpdateNetworkProfileRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the project for which you want to update network profile settings.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the network profile about which you are returning information.
        description:
          $ref: '#/components/schemas/Message'
          description: The description of the network profile about which you are returning information.
        type:
          $ref: '#/components/schemas/NetworkProfileType'
          description: The type of network profile to return information about. Valid values are listed here.
        uplinkBandwidthBits:
          $ref: '#/components/schemas/Long'
          description: 'The data throughput rate in bits per second, as an integer from 0 to 104857600.'
        downlinkBandwidthBits:
          $ref: '#/components/schemas/Long'
          description: 'The data throughput rate in bits per second, as an integer from 0 to 104857600.'
        uplinkDelayMs:
          $ref: '#/components/schemas/Long'
          description: Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
        downlinkDelayMs:
          $ref: '#/components/schemas/Long'
          description: Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
        uplinkJitterMs:
          $ref: '#/components/schemas/Long'
          description: Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
        downlinkJitterMs:
          $ref: '#/components/schemas/Long'
          description: Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
        uplinkLossPercent:
          $ref: '#/components/schemas/PercentInteger'
          description: Proportion of transmitted packets that fail to arrive from 0 to 100 percent.
        downlinkLossPercent:
          $ref: '#/components/schemas/PercentInteger'
          description: Proportion of received packets that fail to arrive from 0 to 100 percent.
    UpdateProjectResult:
      type: object
      example:
        project:
          name: NewName
          arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:8f75187d-101e-4625-accc-12345EXAMPLE'
          created: '1448400709.927'
      properties:
        project:
          $ref: '#/components/schemas/Project'
          description: The project to update.
      description: Represents the result of an update project request.
    UpdateProjectRequest:
      type: object
      required:
        - arn
      title: UpdateProjectRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the project whose name to update.
        name:
          $ref: '#/components/schemas/Name'
          description: A string that represents the new name of the project that you are updating.
        defaultJobTimeoutMinutes:
          $ref: '#/components/schemas/JobTimeoutMinutes'
          description: The number of minutes a test run in the project executes before it times out.
      description: Represents a request to the update project operation.
    UpdateTestGridProjectResult:
      type: object
      properties:
        testGridProject:
          $ref: '#/components/schemas/TestGridProject'
          description: 'The project, including updated information.'
    UpdateTestGridProjectRequest:
      type: object
      required:
        - projectArn
      title: UpdateTestGridProjectRequest
      properties:
        projectArn:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: ARN of the project to update.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: Human-readable name for the project.
        description:
          $ref: '#/components/schemas/ResourceDescription'
          description: Human-readable description for the project.
        vpcConfig:
          $ref: '#/components/schemas/TestGridVpcConfig'
          description: The VPC security groups and subnets that are attached to a project.
    UpdateUploadResult:
      type: object
      properties:
        upload:
          $ref: '#/components/schemas/Upload'
          description: A test spec uploaded to Device Farm.
    UpdateUploadRequest:
      type: object
      required:
        - arn
      title: UpdateUploadRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the uploaded test spec.
        name:
          $ref: '#/components/schemas/Name'
          description: The upload's test spec file name. The name must not contain any forward slashes (/). The test spec file name must end with the <code>.yaml</code> or <code>.yml</code> file extension.
        contentType:
          $ref: '#/components/schemas/ContentType'
          description: 'The upload''s content type (for example, <code>application/x-yaml</code>).'
        editContent:
          $ref: '#/components/schemas/Boolean'
          description: 'Set to true if the YAML file has changed and must be updated. Otherwise, set to false.'
    UpdateVPCEConfigurationResult:
      type: object
      properties:
        vpceConfiguration:
          $ref: '#/components/schemas/VPCEConfiguration'
          description: An object that contains information about your VPC endpoint configuration.
    UpdateVPCEConfigurationRequest:
      type: object
      required:
        - arn
      title: UpdateVPCEConfigurationRequest
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to update.
        vpceConfigurationName:
          $ref: '#/components/schemas/VPCEConfigurationName'
          description: The friendly name you give to your VPC endpoint configuration to manage your configurations more easily.
        vpceServiceName:
          $ref: '#/components/schemas/VPCEServiceName'
          description: The name of the VPC endpoint service running in your AWS account that you want Device Farm to test.
        serviceDnsName:
          $ref: '#/components/schemas/ServiceDnsName'
          description: The DNS (domain) name used to connect to your private service in your VPC. The DNS name must not already be in use on the internet.
        vpceConfigurationDescription:
          $ref: '#/components/schemas/VPCEConfigurationDescription'
          description: An optional description that provides details about your VPC endpoint configuration.
    AWSAccountNumber:
      type: string
      minLength: 2
      maxLength: 16
    PurchasedDevicesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Integer'
    JobTimeoutMinutes:
      type: integer
    TrialMinutes:
      type: object
      properties:
        total:
          $ref: '#/components/schemas/Double'
          description: The total number of free trial minutes that the account started with.
        remaining:
          $ref: '#/components/schemas/Double'
          description: The number of free trial minutes remaining in the account.
      description: Represents information about free trial device minutes for an AWS account.
    MaxSlotMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Integer'
    SkipAppResign:
      type: boolean
    AccountSettings:
      type: object
      properties:
        awsAccountNumber:
          $ref: '#/components/schemas/AWSAccountNumber'
          description: The AWS account number specified in the <code>AccountSettings</code> container.
        unmeteredDevices:
          $ref: '#/components/schemas/PurchasedDevicesMap'
          description: Returns the unmetered devices you have purchased or want to purchase.
        unmeteredRemoteAccessDevices:
          $ref: '#/components/schemas/PurchasedDevicesMap'
          description: Returns the unmetered remote access devices you have purchased or want to purchase.
        maxJobTimeoutMinutes:
          $ref: '#/components/schemas/JobTimeoutMinutes'
          description: The maximum number of minutes a test run executes before it times out.
        trialMinutes:
          $ref: '#/components/schemas/TrialMinutes'
          description: Information about an AWS account's usage of free trial device minutes.
        maxSlots:
          $ref: '#/components/schemas/MaxSlotMap'
          description: 'The maximum number of device slots that the AWS account can purchase. Each maximum is expressed as an <code>offering-id:number</code> pair, where the <code>offering-id</code> represents one of the IDs returned by the <code>ListOfferings</code> command.'
        defaultJobTimeoutMinutes:
          $ref: '#/components/schemas/JobTimeoutMinutes'
          description: The default number of minutes (at the account level) a test run executes before it times out. The default value is 150 minutes.
        skipAppResign:
          $ref: '#/components/schemas/SkipAppResign'
          description: '<p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.</p> <p>For more information about how Device Farm re-signs your apps, see <a href="https://aws.amazon.com/device-farm/faq/">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>'
      description: A container for account-level settings in AWS Device Farm.
    AccountsCleanup:
      type: boolean
    AmazonResourceName:
      type: string
      pattern: '^arn:.+'
      minLength: 32
      maxLength: 1011
    AmazonResourceNames:
      type: array
      items:
        $ref: '#/components/schemas/AmazonResourceName'
    String:
      type: string
    AndroidPaths:
      type: array
      items:
        $ref: '#/components/schemas/String'
    AppPackagesCleanup:
      type: boolean
    Name:
      type: string
      minLength: 0
      maxLength: 256
    ArtifactType:
      type: string
      enum:
        - UNKNOWN
        - SCREENSHOT
        - DEVICE_LOG
        - MESSAGE_LOG
        - VIDEO_LOG
        - RESULT_LOG
        - SERVICE_LOG
        - WEBKIT_LOG
        - INSTRUMENTATION_OUTPUT
        - EXERCISER_MONKEY_OUTPUT
        - CALABASH_JSON_OUTPUT
        - CALABASH_PRETTY_OUTPUT
        - CALABASH_STANDARD_OUTPUT
        - CALABASH_JAVA_XML_OUTPUT
        - AUTOMATION_OUTPUT
        - APPIUM_SERVER_OUTPUT
        - APPIUM_JAVA_OUTPUT
        - APPIUM_JAVA_XML_OUTPUT
        - APPIUM_PYTHON_OUTPUT
        - APPIUM_PYTHON_XML_OUTPUT
        - EXPLORER_EVENT_LOG
        - EXPLORER_SUMMARY_LOG
        - APPLICATION_CRASH_REPORT
        - XCTEST_LOG
        - VIDEO
        - CUSTOMER_ARTIFACT
        - CUSTOMER_ARTIFACT_LOG
        - TESTSPEC_OUTPUT
    URL:
      type: string
      minLength: 0
      maxLength: 2048
    Artifact:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The artifact's ARN.
        name:
          $ref: '#/components/schemas/Name'
          description: The artifact's name.
        type:
          $ref: '#/components/schemas/ArtifactType'
          description: '<p>The artifact''s type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>UNKNOWN</p> </li> <li> <p>SCREENSHOT</p> </li> <li> <p>DEVICE_LOG</p> </li> <li> <p>MESSAGE_LOG</p> </li> <li> <p>VIDEO_LOG</p> </li> <li> <p>RESULT_LOG</p> </li> <li> <p>SERVICE_LOG</p> </li> <li> <p>WEBKIT_LOG</p> </li> <li> <p>INSTRUMENTATION_OUTPUT</p> </li> <li> <p>EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an Android fuzz test.</p> </li> <li> <p>CALABASH_JSON_OUTPUT</p> </li> <li> <p>CALABASH_PRETTY_OUTPUT</p> </li> <li> <p>CALABASH_STANDARD_OUTPUT</p> </li> <li> <p>CALABASH_JAVA_XML_OUTPUT</p> </li> <li> <p>AUTOMATION_OUTPUT</p> </li> <li> <p>APPIUM_SERVER_OUTPUT</p> </li> <li> <p>APPIUM_JAVA_OUTPUT</p> </li> <li> <p>APPIUM_JAVA_XML_OUTPUT</p> </li> <li> <p>APPIUM_PYTHON_OUTPUT</p> </li> <li> <p>APPIUM_PYTHON_XML_OUTPUT</p> </li> <li> <p>EXPLORER_EVENT_LOG</p> </li> <li> <p>EXPLORER_SUMMARY_LOG</p> </li> <li> <p>APPLICATION_CRASH_REPORT</p> </li> <li> <p>XCTEST_LOG</p> </li> <li> <p>VIDEO</p> </li> <li> <p>CUSTOMER_ARTIFACT</p> </li> <li> <p>CUSTOMER_ARTIFACT_LOG</p> </li> <li> <p>TESTSPEC_OUTPUT</p> </li> </ul>'
        extension:
          $ref: '#/components/schemas/String'
          description: The artifact's file extension.
        url:
          $ref: '#/components/schemas/URL'
          description: The presigned Amazon S3 URL that can be used with a GET request to download the artifact's file.
      description: Represents the output of a test. Examples of artifacts include logs and screenshots.
    ArtifactCategory:
      type: string
      enum:
        - SCREENSHOT
        - FILE
        - LOG
    Artifacts:
      type: array
      items:
        $ref: '#/components/schemas/Artifact'
    BillingMethod:
      type: string
      enum:
        - METERED
        - UNMETERED
    Boolean:
      type: boolean
    Double:
      type: number
      format: double
    CPU:
      type: object
      properties:
        frequency:
          $ref: '#/components/schemas/String'
          description: The CPU's frequency.
        architecture:
          $ref: '#/components/schemas/String'
          description: 'The CPU''s architecture (for example, x86 or ARM).'
        clock:
          $ref: '#/components/schemas/Double'
          description: 'The clock speed of the device''s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.'
      description: Represents the amount of CPU that an app is using on a physical device. Does not represent system-wide CPU usage.
    ClientId:
      type: string
      minLength: 0
      maxLength: 64
    ContentType:
      type: string
      minLength: 0
      maxLength: 64
    Integer:
      type: integer
    Counters:
      type: object
      properties:
        total:
          $ref: '#/components/schemas/Integer'
          description: The total number of entities.
        passed:
          $ref: '#/components/schemas/Integer'
          description: The number of passed entities.
        failed:
          $ref: '#/components/schemas/Integer'
          description: The number of failed entities.
        warned:
          $ref: '#/components/schemas/Integer'
          description: The number of warned entities.
        errored:
          $ref: '#/components/schemas/Integer'
          description: The number of errored entities.
        stopped:
          $ref: '#/components/schemas/Integer'
          description: The number of stopped entities.
        skipped:
          $ref: '#/components/schemas/Integer'
          description: The number of skipped entities.
      description: Represents entity counters.
    Message:
      type: string
      minLength: 0
      maxLength: 16384
    Rules:
      type: array
      items:
        $ref: '#/components/schemas/Rule'
    DevicePool:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The device pool's ARN.
        name:
          $ref: '#/components/schemas/Name'
          description: The device pool's name.
        description:
          $ref: '#/components/schemas/Message'
          description: The device pool's description.
        type:
          $ref: '#/components/schemas/DevicePoolType'
          description: '<p>The device pool''s type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>'
        rules:
          $ref: '#/components/schemas/Rules'
          description: Information about the device pool's rules.
        maxDevices:
          $ref: '#/components/schemas/Integer'
          description: '<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>'
      description: Represents a collection of device types.
    PackageIds:
      type: array
      items:
        $ref: '#/components/schemas/String'
    InstanceProfile:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the instance profile.
        packageCleanup:
          $ref: '#/components/schemas/Boolean'
          description: 'When set to <code>true</code>, Device Farm removes app packages after a test run. The default value is <code>false</code> for private devices.'
        excludeAppPackagesFromCleanup:
          $ref: '#/components/schemas/PackageIds'
          description: <p>An array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.</p> <p>The list of packages is considered only if you set <code>packageCleanup</code> to <code>true</code>.</p>
        rebootAfterUse:
          $ref: '#/components/schemas/Boolean'
          description: 'When set to <code>true</code>, Device Farm reboots the instance after a test run. The default value is <code>true</code>.'
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the instance profile.
        description:
          $ref: '#/components/schemas/Message'
          description: The description of the instance profile.
      description: Represents the instance profile.
    NetworkProfileType:
      type: string
      enum:
        - CURATED
        - PRIVATE
    Long:
      type: integer
    PercentInteger:
      type: integer
      minimum: 0
      maximum: 100
    NetworkProfile:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the network profile.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the network profile.
        description:
          $ref: '#/components/schemas/Message'
          description: The description of the network profile.
        type:
          $ref: '#/components/schemas/NetworkProfileType'
          description: The type of network profile. Valid values are listed here.
        uplinkBandwidthBits:
          $ref: '#/components/schemas/Long'
          description: 'The data throughput rate in bits per second, as an integer from 0 to 104857600.'
        downlinkBandwidthBits:
          $ref: '#/components/schemas/Long'
          description: 'The data throughput rate in bits per second, as an integer from 0 to 104857600.'
        uplinkDelayMs:
          $ref: '#/components/schemas/Long'
          description: Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
        downlinkDelayMs:
          $ref: '#/components/schemas/Long'
          description: Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
        uplinkJitterMs:
          $ref: '#/components/schemas/Long'
          description: Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
        downlinkJitterMs:
          $ref: '#/components/schemas/Long'
          description: Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
        uplinkLossPercent:
          $ref: '#/components/schemas/PercentInteger'
          description: Proportion of transmitted packets that fail to arrive from 0 to 100 percent.
        downlinkLossPercent:
          $ref: '#/components/schemas/PercentInteger'
          description: Proportion of received packets that fail to arrive from 0 to 100 percent.
      description: An array of settings that describes characteristics of a network profile.
    Project:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The project's ARN.
        name:
          $ref: '#/components/schemas/Name'
          description: The project's name.
        defaultJobTimeoutMinutes:
          $ref: '#/components/schemas/JobTimeoutMinutes'
          description: The default number of minutes (at the project level) a test run executes before it times out. The default value is 150 minutes.
        created:
          $ref: '#/components/schemas/DateTime'
          description: When the project was created.
      description: Represents an operating-system neutral workspace for running and managing tests.
    CreateRemoteAccessSessionConfiguration:
      type: object
      properties:
        billingMethod:
          $ref: '#/components/schemas/BillingMethod'
          description: The billing method for the remote access session.
        vpceConfigurationArns:
          $ref: '#/components/schemas/AmazonResourceNames'
          description: An array of ARNs included in the VPC endpoint configuration.
      description: 'Configuration settings for a remote access session, including billing method.'
    SshPublicKey:
      type: string
      minLength: 0
      maxLength: 8192
    InteractionMode:
      type: string
      enum:
        - INTERACTIVE
        - NO_VIDEO
        - VIDEO_ONLY
      minLength: 0
      maxLength: 64
    RemoteAccessSession:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the remote access session.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the remote access session.
        created:
          $ref: '#/components/schemas/DateTime'
          description: The date and time the remote access session was created.
        status:
          $ref: '#/components/schemas/ExecutionStatus'
          description: '<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING.</p> </li> <li> <p>PENDING_CONCURRENCY.</p> </li> <li> <p>PENDING_DEVICE.</p> </li> <li> <p>PROCESSING.</p> </li> <li> <p>SCHEDULING.</p> </li> <li> <p>PREPARING.</p> </li> <li> <p>RUNNING.</p> </li> <li> <p>COMPLETED.</p> </li> <li> <p>STOPPING.</p> </li> </ul>'
        result:
          $ref: '#/components/schemas/ExecutionResult'
          description: '<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING.</p> </li> <li> <p>PASSED.</p> </li> <li> <p>WARNED.</p> </li> <li> <p>FAILED.</p> </li> <li> <p>SKIPPED.</p> </li> <li> <p>ERRORED.</p> </li> <li> <p>STOPPED.</p> </li> </ul>'
        message:
          $ref: '#/components/schemas/Message'
          description: A message about the remote access session.
        started:
          $ref: '#/components/schemas/DateTime'
          description: The date and time the remote access session was started.
        stopped:
          $ref: '#/components/schemas/DateTime'
          description: The date and time the remote access session was stopped.
        device:
          $ref: '#/components/schemas/Device'
          description: The device (phone or tablet) used in the remote access session.
        instanceArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the instance.
        remoteDebugEnabled:
          $ref: '#/components/schemas/Boolean'
          description: '<p>This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.</p> <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer supported</a>.</p>'
        remoteRecordEnabled:
          $ref: '#/components/schemas/Boolean'
          description: This flag is set to <code>true</code> if remote recording is enabled for the remote access session.
        remoteRecordAppArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN for the app to be recorded in the remote access session.
        hostAddress:
          $ref: '#/components/schemas/HostAddress'
          description: '<p>IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.</p> <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer supported</a>.</p>'
        clientId:
          $ref: '#/components/schemas/ClientId'
          description: '<p>Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.</p> <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer supported</a>.</p>'
        billingMethod:
          $ref: '#/components/schemas/BillingMethod'
          description: 'The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology">AWS Device Farm terminology</a>.'
        deviceMinutes:
          $ref: '#/components/schemas/DeviceMinutes'
          description: The number of minutes a device is used in a remote access session (including setup and teardown minutes).
        endpoint:
          $ref: '#/components/schemas/String'
          description: The endpoint for the remote access sesssion.
        deviceUdid:
          $ref: '#/components/schemas/String'
          description: '<p>Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.</p> <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer supported</a>.</p>'
        interactionMode:
          $ref: '#/components/schemas/InteractionMode'
          description: '<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You cannot run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device, but cannot interact with it or view the screen. This mode has the fastest test execution speed. You can run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>'
        skipAppResign:
          $ref: '#/components/schemas/SkipAppResign'
          description: '<p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.</p> <p>For more information about how Device Farm re-signs your apps, see <a href="https://aws.amazon.com/device-farm/faq/">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>'
      description: Represents information about the remote access session.
    ResourceName:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 64
    ResourceDescription:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 2048
    TestGridVpcConfig:
      type: object
      required:
        - securityGroupIds
        - subnetIds
        - vpcId
      properties:
        securityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIds'
          description: A list of VPC security group IDs in your Amazon VPC.
        subnetIds:
          $ref: '#/components/schemas/SubnetIds'
          description: A list of VPC subnet IDs in your Amazon VPC.
        vpcId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Amazon VPC.
      description: The VPC security groups and subnets that are attached to a project.
    TestGridProject:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: The ARN for the project.
        name:
          $ref: '#/components/schemas/String'
          description: A human-readable name for the project.
        description:
          $ref: '#/components/schemas/String'
          description: A human-readable description for the project.
        vpcConfig:
          $ref: '#/components/schemas/TestGridVpcConfig'
          description: The VPC security groups and subnets that are attached to a project.
        created:
          $ref: '#/components/schemas/DateTime'
          description: When the project was created.
      description: A Selenium testing project. Projects are used to collect and collate sessions.
    DeviceFarmArn:
      type: string
      pattern: '^arn:aws:devicefarm:.+'
      minLength: 32
      maxLength: 1011
    TestGridUrlExpiresInSecondsInput:
      type: integer
      minimum: 60
      maximum: 86400
    SensitiveString:
      type: string
      format: password
    DateTime:
      type: string
      format: date-time
    UploadType:
      type: string
      enum:
        - ANDROID_APP
        - IOS_APP
        - WEB_APP
        - EXTERNAL_DATA
        - APPIUM_JAVA_JUNIT_TEST_PACKAGE
        - APPIUM_JAVA_TESTNG_TEST_PACKAGE
        - APPIUM_PYTHON_TEST_PACKAGE
        - APPIUM_NODE_TEST_PACKAGE
        - APPIUM_RUBY_TEST_PACKAGE
        - APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE
        - APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE
        - APPIUM_WEB_PYTHON_TEST_PACKAGE
        - APPIUM_WEB_NODE_TEST_PACKAGE
        - APPIUM_WEB_RUBY_TEST_PACKAGE
        - CALABASH_TEST_PACKAGE
        - INSTRUMENTATION_TEST_PACKAGE
        - UIAUTOMATION_TEST_PACKAGE
        - UIAUTOMATOR_TEST_PACKAGE
        - XCTEST_TEST_PACKAGE
        - XCTEST_UI_TEST_PACKAGE
        - APPIUM_JAVA_JUNIT_TEST_SPEC
        - APPIUM_JAVA_TESTNG_TEST_SPEC
        - APPIUM_PYTHON_TEST_SPEC
        - APPIUM_NODE_TEST_SPEC
        - APPIUM_RUBY_TEST_SPEC
        - APPIUM_WEB_JAVA_JUNIT_TEST_SPEC
        - APPIUM_WEB_JAVA_TESTNG_TEST_SPEC
        - APPIUM_WEB_PYTHON_TEST_SPEC
        - APPIUM_WEB_NODE_TEST_SPEC
        - APPIUM_WEB_RUBY_TEST_SPEC
        - INSTRUMENTATION_TEST_SPEC
        - XCTEST_UI_TEST_SPEC
    Upload:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The upload's ARN.
        name:
          $ref: '#/components/schemas/Name'
          description: The upload's file name.
        created:
          $ref: '#/components/schemas/DateTime'
          description: When the upload was created.
        type:
          $ref: '#/components/schemas/UploadType'
          description: '<p>The upload''s type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP</p> </li> <li> <p>IOS_APP</p> </li> <li> <p>WEB_APP</p> </li> <li> <p>EXTERNAL_DATA</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p> </li> <li> <p>CALABASH_TEST_PACKAGE</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE</p> </li> <li> <p>XCTEST_TEST_PACKAGE</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC</p> </li> <li> <p>XCTEST_UI_TEST_SPEC</p> </li> </ul>'
        status:
          $ref: '#/components/schemas/UploadStatus'
          description: '<p>The upload''s status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED</p> </li> <li> <p>INITIALIZED</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SUCCEEDED</p> </li> </ul>'
        url:
          $ref: '#/components/schemas/SensitiveURL'
          description: The presigned Amazon S3 URL that was used to store a file using a PUT request.
        metadata:
          $ref: '#/components/schemas/Metadata'
          description: 'The upload''s metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.'
        contentType:
          $ref: '#/components/schemas/ContentType'
          description: 'The upload''s content type (for example, <code>application/octet-stream</code>).'
        message:
          $ref: '#/components/schemas/Message'
          description: A message about the upload's result.
        category:
          $ref: '#/components/schemas/UploadCategory'
          description: '<p>The upload''s category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>'
      description: An app or a set of one or more tests to upload or that have been uploaded.
    VPCEConfigurationName:
      type: string
      minLength: 0
      maxLength: 1024
    VPCEServiceName:
      type: string
      minLength: 0
      maxLength: 2048
    ServiceDnsName:
      type: string
      minLength: 0
      maxLength: 2048
    VPCEConfigurationDescription:
      type: string
      minLength: 0
      maxLength: 2048
    VPCEConfiguration:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the VPC endpoint configuration.
        vpceConfigurationName:
          $ref: '#/components/schemas/VPCEConfigurationName'
          description: The friendly name you give to your VPC endpoint configuration to manage your configurations more easily.
        vpceServiceName:
          $ref: '#/components/schemas/VPCEServiceName'
          description: The name of the VPC endpoint service running in your AWS account that you want Device Farm to test.
        serviceDnsName:
          $ref: '#/components/schemas/ServiceDnsName'
          description: The DNS name that maps to the private IP address of the service you want to access.
        vpceConfigurationDescription:
          $ref: '#/components/schemas/VPCEConfigurationDescription'
          description: An optional description that provides details about your VPC endpoint configuration.
      description: Represents an Amazon Virtual Private Cloud (VPC) endpoint configuration.
    CurrencyCode:
      type: string
      enum:
        - USD
    IosPaths:
      type: array
      items:
        $ref: '#/components/schemas/String'
    DeviceHostPaths:
      type: array
      items:
        $ref: '#/components/schemas/String'
    CustomerArtifactPaths:
      type: object
      properties:
        iosPaths:
          $ref: '#/components/schemas/IosPaths'
          description: Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests are pulled from.
        androidPaths:
          $ref: '#/components/schemas/AndroidPaths'
          description: Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests are pulled from.
        deviceHostPaths:
          $ref: '#/components/schemas/DeviceHostPaths'
          description: Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests are pulled from.
      description: '<p>A JSON object that specifies the paths where the artifacts generated by the customer''s tests, on the device or in the test environment, are pulled from.</p> <p>Specify <code>deviceHostPaths</code> and optionally specify either <code>iosPaths</code> or <code>androidPaths</code>.</p> <p>For web app tests, you can specify both <code>iosPaths</code> and <code>androidPaths</code>.</p>'
    DeviceFormFactor:
      type: string
      enum:
        - PHONE
        - TABLET
    DevicePlatform:
      type: string
      enum:
        - ANDROID
        - IOS
    Resolution:
      type: object
      properties:
        width:
          $ref: '#/components/schemas/Integer'
          description: 'The screen resolution''s width, expressed in pixels.'
        height:
          $ref: '#/components/schemas/Integer'
          description: 'The screen resolution''s height, expressed in pixels.'
      description: 'Represents the screen resolution of a device in height and width, expressed in pixels.'
    DeviceInstances:
      type: array
      items:
        $ref: '#/components/schemas/DeviceInstance'
    DeviceAvailability:
      type: string
      enum:
        - TEMPORARY_NOT_AVAILABLE
        - BUSY
        - AVAILABLE
        - HIGHLY_AVAILABLE
    Device:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The device's ARN.
        name:
          $ref: '#/components/schemas/Name'
          description: The device's display name.
        manufacturer:
          $ref: '#/components/schemas/String'
          description: The device's manufacturer name.
        model:
          $ref: '#/components/schemas/String'
          description: The device's model name.
        modelId:
          $ref: '#/components/schemas/String'
          description: The device's model ID.
        formFactor:
          $ref: '#/components/schemas/DeviceFormFactor'
          description: '<p>The device''s form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE</p> </li> <li> <p>TABLET</p> </li> </ul>'
        platform:
          $ref: '#/components/schemas/DevicePlatform'
          description: '<p>The device''s platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID</p> </li> <li> <p>IOS</p> </li> </ul>'
        os:
          $ref: '#/components/schemas/String'
          description: The device's operating system type.
        cpu:
          $ref: '#/components/schemas/CPU'
          description: Information about the device's CPU.
        resolution:
          $ref: '#/components/schemas/Resolution'
          description: The resolution of the device.
        heapSize:
          $ref: '#/components/schemas/Long'
          description: 'The device''s heap size, expressed in bytes.'
        memory:
          $ref: '#/components/schemas/Long'
          description: 'The device''s total memory size, expressed in bytes.'
        image:
          $ref: '#/components/schemas/String'
          description: The device's image name.
        carrier:
          $ref: '#/components/schemas/String'
          description: The device's carrier.
        radio:
          $ref: '#/components/schemas/String'
          description: The device's radio.
        remoteAccessEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Specifies whether remote access has been enabled for the specified device.
        remoteDebugEnabled:
          $ref: '#/components/schemas/Boolean'
          description: '<p>This flag is set to <code>true</code> if remote debugging is enabled for the device.</p> <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer supported</a>.</p>'
        fleetType:
          $ref: '#/components/schemas/String'
          description: The type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.
        fleetName:
          $ref: '#/components/schemas/String'
          description: The name of the fleet to which this device belongs.
        instances:
          $ref: '#/components/schemas/DeviceInstances'
          description: The instances that belong to this device.
        availability:
          $ref: '#/components/schemas/DeviceAvailability'
          description: Indicates how likely a device is available for a test run. Currently available in the <a>ListDevices</a> and GetDevice API methods.
      description: Represents a device type that an app is tested against.
    DeviceAttribute:
      type: string
      enum:
        - ARN
        - PLATFORM
        - FORM_FACTOR
        - MANUFACTURER
        - REMOTE_ACCESS_ENABLED
        - REMOTE_DEBUG_ENABLED
        - APPIUM_VERSION
        - INSTANCE_ARN
        - INSTANCE_LABELS
        - FLEET_TYPE
        - OS_VERSION
        - MODEL
        - AVAILABILITY
    DeviceFilterAttribute:
      type: string
      enum:
        - ARN
        - PLATFORM
        - OS_VERSION
        - MODEL
        - AVAILABILITY
        - FORM_FACTOR
        - MANUFACTURER
        - REMOTE_ACCESS_ENABLED
        - REMOTE_DEBUG_ENABLED
        - INSTANCE_ARN
        - INSTANCE_LABELS
        - FLEET_TYPE
    RuleOperator:
      type: string
      enum:
        - EQUALS
        - LESS_THAN
        - LESS_THAN_OR_EQUALS
        - GREATER_THAN
        - GREATER_THAN_OR_EQUALS
        - IN
        - NOT_IN
        - CONTAINS
    DeviceFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/String'
    DeviceFilter:
      type: object
      required:
        - attribute
        - operator
        - values
      properties:
        attribute:
          $ref: '#/components/schemas/DeviceFilterAttribute'
          description: '<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are ANDROID or IOS.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version (for example, 10.3.2).</p> <p>Supported operators: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model (for example, iPad 5th Gen).</p> <p>Supported operators: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are PHONE or TABLET.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer (for example, Apple).</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are TRUE or FALSE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are TRUE or FALSE.</p> <p>Supported operators: <code>EQUALS</code> </p> <p>Because remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer supported</a>, this filter is ignored.</p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p>Supported operators: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are PUBLIC or PRIVATE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> </dl>'
        operator:
          $ref: '#/components/schemas/RuleOperator'
          description: Specifies how Device Farm compares the filter's attribute to the value. See the attribute descriptions.
        values:
          $ref: '#/components/schemas/DeviceFilterValues'
          description: '<p>An array of one or more filter values used in a device filter.</p> <p class="title"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class="title"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to ANDROID or IOS.</p> </li> <li> <p>The AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> <li> <p>The FORM_FACTOR attribute can be set to PHONE or TABLET.</p> </li> <li> <p>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</p> </li> </ul>'
      description: '<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to <code>ScheduleRun</code>. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to <code>ListDevices</code>. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>'
    DeviceFilters:
      type: array
      items:
        $ref: '#/components/schemas/DeviceFilter'
    InstanceLabels:
      type: array
      items:
        $ref: '#/components/schemas/String'
    InstanceStatus:
      type: string
      enum:
        - IN_USE
        - PREPARING
        - AVAILABLE
        - NOT_AVAILABLE
    DeviceInstance:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the device instance.
        deviceArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the device.
        labels:
          $ref: '#/components/schemas/InstanceLabels'
          description: An array of strings that describe the device instance.
        status:
          $ref: '#/components/schemas/InstanceStatus'
          description: The status of the device instance. Valid values are listed here.
        udid:
          $ref: '#/components/schemas/String'
          description: Unique device identifier for the device instance.
        instanceProfile:
          $ref: '#/components/schemas/InstanceProfile'
          description: A object that contains information about the instance profile.
      description: Represents the device instance.
    DeviceMinutes:
      type: object
      properties:
        total:
          $ref: '#/components/schemas/Double'
          description: 'When specified, represents the total minutes used by the resource to run tests.'
        metered:
          $ref: '#/components/schemas/Double'
          description: 'When specified, represents only the sum of metered minutes used by the resource to run tests.'
        unmetered:
          $ref: '#/components/schemas/Double'
          description: 'When specified, represents only the sum of unmetered minutes used by the resource to run tests.'
      description: Represents the total (metered or unmetered) minutes used by the resource to run tests. Contains the sum of minutes consumed by all children.
    DevicePoolType:
      type: string
      enum:
        - CURATED
        - PRIVATE
    IncompatibilityMessages:
      type: array
      items:
        $ref: '#/components/schemas/IncompatibilityMessage'
    DevicePoolCompatibilityResult:
      type: object
      properties:
        device:
          $ref: '#/components/schemas/Device'
          description: The device (phone or tablet) to return information about.
        compatible:
          $ref: '#/components/schemas/Boolean'
          description: Whether the result was compatible with the device pool.
        incompatibilityMessages:
          $ref: '#/components/schemas/IncompatibilityMessages'
          description: Information about the compatibility.
      description: Represents a device pool compatibility result.
    DevicePoolCompatibilityResults:
      type: array
      items:
        $ref: '#/components/schemas/DevicePoolCompatibilityResult'
    DevicePools:
      type: array
      items:
        $ref: '#/components/schemas/DevicePool'
    DeviceSelectionConfiguration:
      type: object
      required:
        - filters
        - maxDevices
      properties:
        filters:
          $ref: '#/components/schemas/DeviceFilters'
          description: '<p>Used to dynamically select a set of devices for a test run. A filter is made up of an attribute, an operator, and one or more values.</p> <ul> <li> <p> <b>Attribute</b> </p> <p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The Amazon Resource Name (ARN) of the device (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</p> </li> <li> <p>PLATFORM: The device platform. Valid values are ANDROID or IOS.</p> </li> <li> <p>OS_VERSION: The operating system version (for example, 10.3.2).</p> </li> <li> <p>MODEL: The device model (for example, iPad 5th Gen).</p> </li> <li> <p>AVAILABILITY: The current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> <li> <p>FORM_FACTOR: The device form factor. Valid values are PHONE or TABLET.</p> </li> <li> <p>MANUFACTURER: The device manufacturer (for example, Apple).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values are TRUE or FALSE.</p> </li> <li> <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values are TRUE or FALSE. Because remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer supported</a>, this filter is ignored.</p> </li> <li> <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p> </li> <li> <p>INSTANCE_LABELS: The label of the device instance.</p> </li> <li> <p>FLEET_TYPE: The fleet type. Valid values are PUBLIC or PRIVATE.</p> </li> </ul> </li> <li> <p> <b>Operator</b> </p> <p>The filter operator.</p> <ul> <li> <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p> </li> <li> <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p> </li> <li> <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p> </li> <li> <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION attribute.</p> </li> </ul> </li> <li> <p> <b>Values</b> </p> <p>An array of one or more filter values.</p> <p class="title"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class="title"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to ANDROID or IOS.</p> </li> <li> <p>The AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> <li> <p>The FORM_FACTOR attribute can be set to PHONE or TABLET.</p> </li> <li> <p>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</p> </li> </ul> </li> </ul>'
        maxDevices:
          $ref: '#/components/schemas/Integer'
          description: The maximum number of devices to be included in a test run.
      description: Represents the device filters used in a test run and the maximum number of devices to be included in the run. It is passed in as the <code>deviceSelectionConfiguration</code> request parameter in <a>ScheduleRun</a>.
    DeviceSelectionResult:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DeviceFilters'
          description: The filters in a device selection result.
        matchedDevicesCount:
          $ref: '#/components/schemas/Integer'
          description: The number of devices that matched the device filter selection criteria.
        maxDevices:
          $ref: '#/components/schemas/Integer'
          description: The maximum number of devices to be selected by a device filter and included in a test run.
      description: 'Contains the run results requested by the device selection configuration and how many devices were returned. For an example of the JSON response syntax, see <a>ScheduleRun</a>.'
    Devices:
      type: array
      items:
        $ref: '#/components/schemas/Device'
    VideoCapture:
      type: boolean
    ExecutionConfiguration:
      type: object
      properties:
        jobTimeoutMinutes:
          $ref: '#/components/schemas/JobTimeoutMinutes'
          description: The number of minutes a test run executes before it times out.
        accountsCleanup:
          $ref: '#/components/schemas/AccountsCleanup'
          description: 'True if account cleanup is enabled at the beginning of the test. Otherwise, false.'
        appPackagesCleanup:
          $ref: '#/components/schemas/AppPackagesCleanup'
          description: 'True if app package cleanup is enabled at the beginning of the test. Otherwise, false.'
        videoCapture:
          $ref: '#/components/schemas/VideoCapture'
          description: 'Set to true to enable video capture. Otherwise, set to false. The default is true.'
        skipAppResign:
          $ref: '#/components/schemas/SkipAppResign'
          description: '<p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.</p> <p>For more information about how Device Farm re-signs your apps, see <a href="https://aws.amazon.com/device-farm/faq/">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>'
      description: 'Represents configuration information about a test run, such as the execution timeout (in minutes).'
    ExecutionResult:
      type: string
      enum:
        - PENDING
        - PASSED
        - WARNED
        - FAILED
        - SKIPPED
        - ERRORED
        - STOPPED
    ExecutionResultCode:
      type: string
      enum:
        - PARSING_FAILED
        - VPC_ENDPOINT_SETUP_FAILED
    ExecutionStatus:
      type: string
      enum:
        - PENDING
        - PENDING_CONCURRENCY
        - PENDING_DEVICE
        - PROCESSING
        - SCHEDULING
        - PREPARING
        - RUNNING
        - COMPLETED
        - STOPPING
    Filter:
      type: string
      minLength: 0
      maxLength: 8192
    TestType:
      type: string
      enum:
        - BUILTIN_FUZZ
        - BUILTIN_EXPLORER
        - WEB_PERFORMANCE_PROFILE
        - APPIUM_JAVA_JUNIT
        - APPIUM_JAVA_TESTNG
        - APPIUM_PYTHON
        - APPIUM_NODE
        - APPIUM_RUBY
        - APPIUM_WEB_JAVA_JUNIT
        - APPIUM_WEB_JAVA_TESTNG
        - APPIUM_WEB_PYTHON
        - APPIUM_WEB_NODE
        - APPIUM_WEB_RUBY
        - CALABASH
        - INSTRUMENTATION
        - UIAUTOMATION
        - UIAUTOMATOR
        - XCTEST
        - XCTEST_UI
        - REMOTE_ACCESS_RECORD
        - REMOTE_ACCESS_REPLAY
    ScheduleRunTest:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/TestType'
          description: '<p>The test''s type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p> </li> <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li> <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p> </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p> </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li> <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li> <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>'
        testPackageArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the uploaded test to be run.
        testSpecArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the YAML-formatted test specification.
        filter:
          $ref: '#/components/schemas/Filter'
          description: The test's filter.
        parameters:
          $ref: '#/components/schemas/TestParameters'
          description: '<p>The test''s parameters, such as test framework parameters and fixture settings. Parameters are represented by name-value pairs of strings.</p> <p>For all tests:</p> <ul> <li> <p> <code>app_performance_monitoring</code>: Performance monitoring is enabled by default. Set this parameter to false to disable it.</p> </li> </ul> <p>For Calabash tests:</p> <ul> <li> <p>profile: A cucumber profile (for example, <code>my_profile_name</code>).</p> </li> <li> <p>tags: You can limit execution to features or scenarios that have (or don''t have) certain tags (for example, @smoke or @smoke,~@wip).</p> </li> </ul> <p>For Appium tests (all types):</p> <ul> <li> <p>appium_version: The Appium version. Currently supported values are 1.6.5 (and later), latest, and default.</p> <ul> <li> <p>latest runs the latest Appium version supported by Device Farm (1.9.1).</p> </li> <li> <p>For default, Device Farm selects a compatible version of Appium for the device. The current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier and 1.7.2 for iOS 10 and later.</p> </li> <li> <p>This behavior is subject to change.</p> </li> </ul> </li> </ul> <p>For fuzz tests (Android only):</p> <ul> <li> <p>event_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.</p> </li> <li> <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.</p> </li> <li> <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.</p> </li> </ul> <p>For Explorer tests:</p> <ul> <li> <p>username: A user name to use if the Explorer encounters a login form. If not supplied, no user name is inserted.</p> </li> <li> <p>password: A password to use if the Explorer encounters a login form. If not supplied, no password is inserted.</p> </li> </ul> <p>For Instrumentation:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: <code>com.android.abc.Test1</code> </p> </li> <li> <p>Running a single test: <code>com.android.abc.Test1#smoke</code> </p> </li> <li> <p>Running multiple tests: <code>com.android.abc.Test1,com.android.abc.Test2</code> </p> </li> </ul> </li> </ul> <p>For XCTest and XCTestUI:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test class: <code>LoginTests</code> </p> </li> <li> <p>Running a multiple test classes: <code>LoginTests,SmokeTests</code> </p> </li> <li> <p>Running a single test: <code>LoginTests/testValid</code> </p> </li> <li> <p>Running multiple tests: <code>LoginTests/testValid,LoginTests/testInvalid</code> </p> </li> </ul> </li> </ul> <p>For UIAutomator:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: <code>com.android.abc.Test1</code> </p> </li> <li> <p>Running a single test: <code>com.android.abc.Test1#smoke</code> </p> </li> <li> <p>Running multiple tests: <code>com.android.abc.Test1,com.android.abc.Test2</code> </p> </li> </ul> </li> </ul>'
      description: 'Represents test settings. This data structure is passed in as the test parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.'
    ScheduleRunConfiguration:
      type: object
      properties:
        extraDataPackageArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm extracts to external data for Android or the app's sandbox for iOS.
        networkProfileArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: Reserved for internal use.
        locale:
          $ref: '#/components/schemas/String'
          description: Information about the locale that is used for the run.
        location:
          $ref: '#/components/schemas/Location'
          description: Information about the location that is used for the run.
        vpceConfigurationArns:
          $ref: '#/components/schemas/AmazonResourceNames'
          description: An array of ARNs for your VPC endpoint configurations.
        customerArtifactPaths:
          $ref: '#/components/schemas/CustomerArtifactPaths'
          description: Input <code>CustomerArtifactPaths</code> object for the scheduled run configuration.
        radios:
          $ref: '#/components/schemas/Radios'
          description: Information about the radio states for the run.
        auxiliaryApps:
          $ref: '#/components/schemas/AmazonResourceNames'
          description: A list of upload ARNs for app packages to be installed with your app.
        billingMethod:
          $ref: '#/components/schemas/BillingMethod'
          description: '<p>Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.</p> <note> <p>If you have purchased unmetered device slots, you must set this parameter to <code>unmetered</code> to make use of them. Otherwise, your run counts against your metered time.</p> </note>'
      description: 'Represents the settings for a run. Includes things like location, radio states, auxiliary apps, and network profiles.'
    Job:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The job's ARN.
        name:
          $ref: '#/components/schemas/Name'
          description: The job's name.
        type:
          $ref: '#/components/schemas/TestType'
          description: '<p>The job''s type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p> </li> <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li> <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p> </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p> </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li> <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li> <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>'
        created:
          $ref: '#/components/schemas/DateTime'
          description: When the job was created.
        status:
          $ref: '#/components/schemas/ExecutionStatus'
          description: '<p>The job''s status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PENDING_CONCURRENCY</p> </li> <li> <p>PENDING_DEVICE</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SCHEDULING</p> </li> <li> <p>PREPARING</p> </li> <li> <p>RUNNING</p> </li> <li> <p>COMPLETED</p> </li> <li> <p>STOPPING</p> </li> </ul>'
        result:
          $ref: '#/components/schemas/ExecutionResult'
          description: '<p>The job''s result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>'
        started:
          $ref: '#/components/schemas/DateTime'
          description: The job's start time.
        stopped:
          $ref: '#/components/schemas/DateTime'
          description: The job's stop time.
        counters:
          $ref: '#/components/schemas/Counters'
          description: The job's result counters.
        message:
          $ref: '#/components/schemas/Message'
          description: A message about the job's result.
        device:
          $ref: '#/components/schemas/Device'
          description: The device (phone or tablet).
        instanceArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the instance.
        deviceMinutes:
          $ref: '#/components/schemas/DeviceMinutes'
          description: Represents the total (metered or unmetered) minutes used by the job.
        videoEndpoint:
          $ref: '#/components/schemas/String'
          description: The endpoint for streaming device video.
        videoCapture:
          $ref: '#/components/schemas/VideoCapture'
          description: 'This value is set to true if video capture is enabled. Otherwise, it is set to false.'
      description: Represents a device.
    PaginationToken:
      type: string
      minLength: 4
      maxLength: 1024
    OfferingStatusMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/OfferingStatus'
    Run:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The run's ARN.
        name:
          $ref: '#/components/schemas/Name'
          description: The run's name.
        type:
          $ref: '#/components/schemas/TestType'
          description: '<p>The run''s type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER</p> <note> <p>For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.</p> </note> </li> <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p> </li> <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li> <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p> </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p> </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li> <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li> <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>'
        platform:
          $ref: '#/components/schemas/DevicePlatform'
          description: '<p>The run''s platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID</p> </li> <li> <p>IOS</p> </li> </ul>'
        created:
          $ref: '#/components/schemas/DateTime'
          description: When the run was created.
        status:
          $ref: '#/components/schemas/ExecutionStatus'
          description: '<p>The run''s status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PENDING_CONCURRENCY</p> </li> <li> <p>PENDING_DEVICE</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SCHEDULING</p> </li> <li> <p>PREPARING</p> </li> <li> <p>RUNNING</p> </li> <li> <p>COMPLETED</p> </li> <li> <p>STOPPING</p> </li> </ul>'
        result:
          $ref: '#/components/schemas/ExecutionResult'
          description: '<p>The run''s result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>'
        started:
          $ref: '#/components/schemas/DateTime'
          description: The run's start time.
        stopped:
          $ref: '#/components/schemas/DateTime'
          description: The run's stop time.
        counters:
          $ref: '#/components/schemas/Counters'
          description: The run's result counters.
        message:
          $ref: '#/components/schemas/Message'
          description: A message about the run's result.
        totalJobs:
          $ref: '#/components/schemas/Integer'
          description: The total number of jobs for the run.
        completedJobs:
          $ref: '#/components/schemas/Integer'
          description: The total number of completed jobs.
        billingMethod:
          $ref: '#/components/schemas/BillingMethod'
          description: '<p>Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.</p> <note> <p>If you have unmetered device slots, you must set this to <code>unmetered</code> to use them. Otherwise, the run is counted toward metered device minutes.</p> </note>'
        deviceMinutes:
          $ref: '#/components/schemas/DeviceMinutes'
          description: Represents the total (metered or unmetered) minutes used by the test run.
        networkProfile:
          $ref: '#/components/schemas/NetworkProfile'
          description: The network profile being used for a test run.
        parsingResultUrl:
          $ref: '#/components/schemas/String'
          description: 'Read-only URL for an object in an S3 bucket where you can get the parsing results of the test package. If the test package doesn''t parse, the reason why it doesn''t parse appears in the file that this URL points to.'
        resultCode:
          $ref: '#/components/schemas/ExecutionResultCode'
          description: Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.
        seed:
          $ref: '#/components/schemas/Integer'
          description: 'For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.'
        appUpload:
          $ref: '#/components/schemas/AmazonResourceName'
          description: An app to upload or that has been uploaded.
        eventCount:
          $ref: '#/components/schemas/Integer'
          description: 'For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.'
        jobTimeoutMinutes:
          $ref: '#/components/schemas/JobTimeoutMinutes'
          description: The number of minutes the job executes before it times out.
        devicePoolArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the device pool for the run.
        locale:
          $ref: '#/components/schemas/String'
          description: Information about the locale that is used for the run.
        radios:
          $ref: '#/components/schemas/Radios'
          description: Information about the radio states for the run.
        location:
          $ref: '#/components/schemas/Location'
          description: Information about the location that is used for the run.
        customerArtifactPaths:
          $ref: '#/components/schemas/CustomerArtifactPaths'
          description: Output <code>CustomerArtifactPaths</code> object for the test run.
        webUrl:
          $ref: '#/components/schemas/String'
          description: The Device Farm console URL for the recording of the run.
        skipAppResign:
          $ref: '#/components/schemas/SkipAppResign'
          description: '<p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.</p> <p>For more information about how Device Farm re-signs your apps, see <a href="https://aws.amazon.com/device-farm/faq/">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>'
        testSpecArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the YAML-formatted test specification for the run.
        deviceSelectionResult:
          $ref: '#/components/schemas/DeviceSelectionResult'
          description: The results of a device filter used to select the devices for a test run.
      description: 'Represents a test run on a set of devices with a given app package, test parameters, and so on.'
    Suite:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The suite's ARN.
        name:
          $ref: '#/components/schemas/Name'
          description: The suite's name.
        type:
          $ref: '#/components/schemas/TestType'
          description: '<p>The suite''s type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER </p> <note> <p>Only available for Android; an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.</p> </note> </li> <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p> </li> <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li> <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p> </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p> </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li> <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li> <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>'
        created:
          $ref: '#/components/schemas/DateTime'
          description: When the suite was created.
        status:
          $ref: '#/components/schemas/ExecutionStatus'
          description: '<p>The suite''s status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PENDING_CONCURRENCY</p> </li> <li> <p>PENDING_DEVICE</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SCHEDULING</p> </li> <li> <p>PREPARING</p> </li> <li> <p>RUNNING</p> </li> <li> <p>COMPLETED</p> </li> <li> <p>STOPPING</p> </li> </ul>'
        result:
          $ref: '#/components/schemas/ExecutionResult'
          description: '<p>The suite''s result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>'
        started:
          $ref: '#/components/schemas/DateTime'
          description: The suite's start time.
        stopped:
          $ref: '#/components/schemas/DateTime'
          description: The suite's stop time.
        counters:
          $ref: '#/components/schemas/Counters'
          description: The suite's result counters.
        message:
          $ref: '#/components/schemas/Message'
          description: A message about the suite's result.
        deviceMinutes:
          $ref: '#/components/schemas/DeviceMinutes'
          description: Represents the total (metered or unmetered) minutes used by the test suite.
      description: Represents a collection of one or more tests.
    ResourceId:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 128
    TestGridSession:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/DeviceFarmArn'
          description: The ARN of the session.
        status:
          $ref: '#/components/schemas/TestGridSessionStatus'
          description: The state of the session.
        created:
          $ref: '#/components/schemas/DateTime'
          description: The time that the session was started.
        ended:
          $ref: '#/components/schemas/DateTime'
          description: The time the session ended.
        billingMinutes:
          $ref: '#/components/schemas/Double'
          description: 'The number of billed minutes that were used for this session. '
        seleniumProperties:
          $ref: '#/components/schemas/String'
          description: A JSON object of options and parameters passed to the Selenium WebDriver.
      description: A <a>TestGridSession</a> is a single instance of a browser launched from the URL provided by a call to <a>CreateTestGridUrl</a>.
    Test:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The test's ARN.
        name:
          $ref: '#/components/schemas/Name'
          description: The test's name.
        type:
          $ref: '#/components/schemas/TestType'
          description: '<p>The test''s type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER</p> <note> <p>For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.</p> </note> </li> <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p> </li> <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li> <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p> </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p> </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li> <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li> <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>'
        created:
          $ref: '#/components/schemas/DateTime'
          description: When the test was created.
        status:
          $ref: '#/components/schemas/ExecutionStatus'
          description: '<p>The test''s status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PENDING_CONCURRENCY</p> </li> <li> <p>PENDING_DEVICE</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SCHEDULING</p> </li> <li> <p>PREPARING</p> </li> <li> <p>RUNNING</p> </li> <li> <p>COMPLETED</p> </li> <li> <p>STOPPING</p> </li> </ul>'
        result:
          $ref: '#/components/schemas/ExecutionResult'
          description: '<p>The test''s result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>'
        started:
          $ref: '#/components/schemas/DateTime'
          description: The test's start time.
        stopped:
          $ref: '#/components/schemas/DateTime'
          description: The test's stop time.
        counters:
          $ref: '#/components/schemas/Counters'
          description: The test's result counters.
        message:
          $ref: '#/components/schemas/Message'
          description: A message about the test's result.
        deviceMinutes:
          $ref: '#/components/schemas/DeviceMinutes'
          description: Represents the total (metered or unmetered) minutes used by the test.
      description: Represents a condition that is evaluated.
    HostAddress:
      type: string
      maxLength: 1024
    IncompatibilityMessage:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
          description: A message about the incompatibility.
        type:
          $ref: '#/components/schemas/DeviceAttribute'
          description: '<p>The type of incompatibility.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN</p> </li> <li> <p>FORM_FACTOR (for example, phone or tablet)</p> </li> <li> <p>MANUFACTURER</p> </li> <li> <p>PLATFORM (for example, Android or iOS)</p> </li> <li> <p>REMOTE_ACCESS_ENABLED</p> </li> <li> <p>APPIUM_VERSION</p> </li> </ul>'
      description: Represents information about incompatibility.
    InstanceProfiles:
      type: array
      items:
        $ref: '#/components/schemas/InstanceProfile'
    Jobs:
      type: array
      items:
        $ref: '#/components/schemas/Job'
    NetworkProfiles:
      type: array
      items:
        $ref: '#/components/schemas/NetworkProfile'
    OfferingPromotions:
      type: array
      items:
        $ref: '#/components/schemas/OfferingPromotion'
    OfferingTransactions:
      type: array
      items:
        $ref: '#/components/schemas/OfferingTransaction'
    Offerings:
      type: array
      items:
        $ref: '#/components/schemas/Offering'
    Projects:
      type: array
      items:
        $ref: '#/components/schemas/Project'
    RemoteAccessSessions:
      type: array
      items:
        $ref: '#/components/schemas/RemoteAccessSession'
    Runs:
      type: array
      items:
        $ref: '#/components/schemas/Run'
    Samples:
      type: array
      items:
        $ref: '#/components/schemas/Sample'
    Suites:
      type: array
      items:
        $ref: '#/components/schemas/Suite'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 150
    MaxPageSize:
      type: integer
      minimum: 1
      maximum: 1000
    TestGridProjects:
      type: array
      items:
        $ref: '#/components/schemas/TestGridProject'
    TestGridSessionActions:
      type: array
      items:
        $ref: '#/components/schemas/TestGridSessionAction'
    TestGridSessionArtifactCategory:
      type: string
      enum:
        - VIDEO
        - LOG
    TestGridSessionArtifacts:
      type: array
      items:
        $ref: '#/components/schemas/TestGridSessionArtifact'
    TestGridSessionStatus:
      type: string
      enum:
        - ACTIVE
        - CLOSED
        - ERRORED
    TestGridSessions:
      type: array
      items:
        $ref: '#/components/schemas/TestGridSession'
    Tests:
      type: array
      items:
        $ref: '#/components/schemas/Test'
    UniqueProblemsByExecutionResultMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/UniqueProblems'
    Uploads:
      type: array
      items:
        $ref: '#/components/schemas/Upload'
    VPCEConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/VPCEConfiguration'
    Location:
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          $ref: '#/components/schemas/Double'
          description: The latitude.
        longitude:
          $ref: '#/components/schemas/Double'
          description: The longitude.
      description: '<p>Represents a latitude and longitude pair, expressed in geographic coordinate system degrees (for example, 47.6204, -122.3491).</p> <p>Elevation is currently not supported.</p>'
    Metadata:
      type: string
      minLength: 0
      maxLength: 8192
    MonetaryAmount:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Double'
          description: The numerical amount of an offering or transaction.
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
          description: 'The currency code of a monetary amount. For example, <code>USD</code> means U.S. dollars.'
      description: A number that represents the monetary amount for an offering or transaction.
    NonEmptyString:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 4096
    OfferingIdentifier:
      type: string
      minLength: 32
    OfferingType:
      type: string
      enum:
        - RECURRING
    RecurringCharges:
      type: array
      items:
        $ref: '#/components/schemas/RecurringCharge'
    Offering:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/OfferingIdentifier'
          description: The ID that corresponds to a device offering.
        description:
          $ref: '#/components/schemas/Message'
          description: A string that describes the offering.
        type:
          $ref: '#/components/schemas/OfferingType'
          description: 'The type of offering (for example, <code>RECURRING</code>) for a device.'
        platform:
          $ref: '#/components/schemas/DevicePlatform'
          description: 'The platform of the device (for example, <code>ANDROID</code> or <code>IOS</code>).'
        recurringCharges:
          $ref: '#/components/schemas/RecurringCharges'
          description: Specifies whether there are recurring charges for the offering.
      description: Represents the metadata of a device offering.
    OfferingPromotionIdentifier:
      type: string
      minLength: 4
    OfferingPromotion:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/OfferingPromotionIdentifier'
          description: The ID of the offering promotion.
        description:
          $ref: '#/components/schemas/Message'
          description: A string that describes the offering promotion.
      description: Represents information about an offering promotion.
    OfferingTransactionType:
      type: string
      enum:
        - PURCHASE
        - RENEW
        - SYSTEM
    OfferingStatus:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/OfferingTransactionType'
          description: The type specified for the offering status.
        offering:
          $ref: '#/components/schemas/Offering'
          description: Represents the metadata of an offering status.
        quantity:
          $ref: '#/components/schemas/Integer'
          description: The number of available devices in the offering.
        effectiveOn:
          $ref: '#/components/schemas/DateTime'
          description: The date on which the offering is effective.
      description: The status of the offering.
    TransactionIdentifier:
      type: string
      minLength: 32
    OfferingTransaction:
      type: object
      properties:
        offeringStatus:
          $ref: '#/components/schemas/OfferingStatus'
          description: The status of an offering transaction.
        transactionId:
          $ref: '#/components/schemas/TransactionIdentifier'
          description: The transaction ID of the offering transaction.
        offeringPromotionId:
          $ref: '#/components/schemas/OfferingPromotionIdentifier'
          description: The ID that corresponds to a device offering promotion.
        createdOn:
          $ref: '#/components/schemas/DateTime'
          description: The date on which an offering transaction was created.
        cost:
          $ref: '#/components/schemas/MonetaryAmount'
          description: The cost of an offering transaction.
      description: Represents the metadata of an offering transaction.
    ProblemDetail:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The problem detail's ARN.
        name:
          $ref: '#/components/schemas/Name'
          description: The problem detail's name.
      description: Information about a problem detail.
    Problem:
      type: object
      properties:
        run:
          $ref: '#/components/schemas/ProblemDetail'
          description: Information about the associated run.
        job:
          $ref: '#/components/schemas/ProblemDetail'
          description: Information about the associated job.
        suite:
          $ref: '#/components/schemas/ProblemDetail'
          description: Information about the associated suite.
        test:
          $ref: '#/components/schemas/ProblemDetail'
          description: Information about the associated test.
        device:
          $ref: '#/components/schemas/Device'
          description: Information about the associated device.
        result:
          $ref: '#/components/schemas/ExecutionResult'
          description: '<p>The problem''s result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>'
        message:
          $ref: '#/components/schemas/Message'
          description: A message about the problem's result.
      description: Represents a specific warning or failure.
    Problems:
      type: array
      items:
        $ref: '#/components/schemas/Problem'
    Radios:
      type: object
      properties:
        wifi:
          $ref: '#/components/schemas/Boolean'
          description: 'True if Wi-Fi is enabled at the beginning of the test. Otherwise, false.'
        bluetooth:
          $ref: '#/components/schemas/Boolean'
          description: 'True if Bluetooth is enabled at the beginning of the test. Otherwise, false.'
        nfc:
          $ref: '#/components/schemas/Boolean'
          description: 'True if NFC is enabled at the beginning of the test. Otherwise, false.'
        gps:
          $ref: '#/components/schemas/Boolean'
          description: 'True if GPS is enabled at the beginning of the test. Otherwise, false.'
      description: 'Represents the set of radios and their states on a device. Examples of radios include Wi-Fi, GPS, Bluetooth, and NFC.'
    RecurringChargeFrequency:
      type: string
      enum:
        - MONTHLY
    RecurringCharge:
      type: object
      properties:
        cost:
          $ref: '#/components/schemas/MonetaryAmount'
          description: The cost of the recurring charge.
        frequency:
          $ref: '#/components/schemas/RecurringChargeFrequency'
          description: The frequency in which charges recur.
      description: Specifies whether charges for devices are recurring.
    Rule:
      type: object
      properties:
        attribute:
          $ref: '#/components/schemas/DeviceAttribute'
          description: '<p>The rule''s stringified attribute. For example, specify the value as <code>"\"abc\""</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p>Supported operators: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>.</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are PUBLIC or PRIVATE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are PHONE or TABLET.</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p>Supported operators: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p>Supported operators: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer (for example, Apple).</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as Apple iPad Air 2 or Google Pixel.</p> <p>Supported operators: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version (for example, 10.3.2).</p> <p>Supported operators: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are ANDROID or IOS.</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are TRUE or FALSE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are TRUE or FALSE.</p> <p>Supported operators: <code>EQUALS</code> </p> <p>Because remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer supported</a>, this filter is ignored.</p> </dd> </dl>'
        operator:
          $ref: '#/components/schemas/RuleOperator'
          description: 'Specifies how Device Farm compares the rule''s attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.'
        value:
          $ref: '#/components/schemas/String'
          description: The rule's value.
      description: Represents a condition for a device pool.
    SampleType:
      type: string
      enum:
        - CPU
        - MEMORY
        - THREADS
        - RX_RATE
        - TX_RATE
        - RX
        - TX
        - NATIVE_FRAMES
        - NATIVE_FPS
        - NATIVE_MIN_DRAWTIME
        - NATIVE_AVG_DRAWTIME
        - NATIVE_MAX_DRAWTIME
        - OPENGL_FRAMES
        - OPENGL_FPS
        - OPENGL_MIN_DRAWTIME
        - OPENGL_AVG_DRAWTIME
        - OPENGL_MAX_DRAWTIME
    Sample:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The sample's ARN.
        type:
          $ref: '#/components/schemas/SampleType'
          description: '<p>The sample''s type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>CPU: A CPU sample type. This is expressed as the app processing CPU time (including child processes) as reported by process, as a percentage.</p> </li> <li> <p>MEMORY: A memory usage sample type. This is expressed as the total proportional set size of an app process, in kilobytes.</p> </li> <li> <p>NATIVE_AVG_DRAWTIME</p> </li> <li> <p>NATIVE_FPS</p> </li> <li> <p>NATIVE_FRAMES</p> </li> <li> <p>NATIVE_MAX_DRAWTIME</p> </li> <li> <p>NATIVE_MIN_DRAWTIME</p> </li> <li> <p>OPENGL_AVG_DRAWTIME</p> </li> <li> <p>OPENGL_FPS</p> </li> <li> <p>OPENGL_FRAMES</p> </li> <li> <p>OPENGL_MAX_DRAWTIME</p> </li> <li> <p>OPENGL_MIN_DRAWTIME</p> </li> <li> <p>RX</p> </li> <li> <p>RX_RATE: The total number of bytes per second (TCP and UDP) that are sent, by app process.</p> </li> <li> <p>THREADS: A threads sample type. This is expressed as the total number of threads per app process.</p> </li> <li> <p>TX</p> </li> <li> <p>TX_RATE: The total number of bytes per second (TCP and UDP) that are received, by app process.</p> </li> </ul>'
        url:
          $ref: '#/components/schemas/URL'
          description: The presigned Amazon S3 URL that can be used with a GET request to download the sample's file.
      description: Represents a sample of performance data.
    TestParameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    SecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
      minItems: 1
      maxItems: 5
    SensitiveURL:
      type: string
      minLength: 0
      maxLength: 2048
      format: password
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
      minItems: 1
      maxItems: 8
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: One part of a key-value pair that makes up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The optional part of a key-value pair that makes up a tag. A <code>value</code> acts as a descriptor in a tag category (key).
      description: 'The metadata that you apply to a resource to help you categorize and organize it. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters. Tag values can have a maximum length of 256 characters. '
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 150
    TestGridSessionAction:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/String'
          description: The action taken by the session.
        started:
          $ref: '#/components/schemas/DateTime'
          description: The time that the session invoked the action.
        duration:
          $ref: '#/components/schemas/Long'
          description: 'The time, in milliseconds, that the action took to complete in the browser.'
        statusCode:
          $ref: '#/components/schemas/String'
          description: HTTP status code returned to the browser when the action was taken.
        requestMethod:
          $ref: '#/components/schemas/String'
          description: HTTP method that the browser used to make the request.
      description: An action taken by a <a>TestGridSession</a> browser instance.
    TestGridSessionArtifactType:
      type: string
      enum:
        - UNKNOWN
        - VIDEO
        - SELENIUM_LOG
    TestGridSessionArtifact:
      type: object
      properties:
        filename:
          $ref: '#/components/schemas/String'
          description: The file name of the artifact.
        type:
          $ref: '#/components/schemas/TestGridSessionArtifactType'
          description: The kind of artifact.
        url:
          $ref: '#/components/schemas/SensitiveString'
          description: A semi-stable URL to the content of the object.
      description: <p>Artifacts are video and other files that are produced in the process of running a browser in an automated context. </p> <note> <p>Video elements might be broken up into multiple artifacts as they grow in size during creation. </p> </note>
    UniqueProblem:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
          description: A message about the unique problems' result.
        problems:
          $ref: '#/components/schemas/Problems'
          description: Information about the problems.
      description: 'A collection of one or more problems, grouped by their result.'
    UniqueProblems:
      type: array
      items:
        $ref: '#/components/schemas/UniqueProblem'
    UploadStatus:
      type: string
      enum:
        - INITIALIZED
        - PROCESSING
        - SUCCEEDED
        - FAILED
    UploadCategory:
      type: string
      enum:
        - CURATED
        - PRIVATE
security:
  - hmac: []
