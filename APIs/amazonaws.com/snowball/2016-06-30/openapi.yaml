openapi: 3.0.0
info:
  version: '2016-06-30'
  x-release: v4
  title: Amazon Import/Export Snowball
  description: 'AWS Snow Family is a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow commands described here provide access to the same functionality that is available in the AWS Snow Family Management Console, which enables you to create and manage jobs for a Snow device. To transfer data locally with a Snow device, you''ll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or AWS OpsHub for Snow Family. For more information, see the <a href="https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html">User Guide</a>.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: snowball
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/snowball-2016-06-30.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/snowball/'
servers:
  - url: 'http://snowball.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Snowball multi-region endpoint
  - url: 'https://snowball.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Snowball multi-region endpoint
  - url: 'http://snowball.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Snowball endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://snowball.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Snowball endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AWSIESnowballJobManagementService.CancelCluster:
    post:
      operationId: CancelCluster
      description: Cancels a cluster job. You can only cancel a cluster job while it's in the <code>AwaitingQuorum</code> status. You'll have at least an hour after creating a cluster job to cancel it.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelClusterResult'
        '480':
          description: KMSRequestFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSRequestFailedException'
        '481':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
        '482':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelClusterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.CancelCluster
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.CancelJob:
    post:
      operationId: CancelJob
      description: Cancels the specified job. You can only cancel a job before its <code>JobState</code> value changes to <code>PreparingAppliance</code>. Requesting the <code>ListJobs</code> or <code>DescribeJob</code> action returns a job's <code>JobState</code> as part of the response element data returned.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelJobResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
        '482':
          description: KMSRequestFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSRequestFailedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.CancelJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.CreateAddress:
    post:
      operationId: CreateAddress
      description: 'Creates an address for a Snow device to be shipped to. In most regions, addresses are validated at the time of creation. The address you provide must be located within the serviceable area of your region. If the address is invalid or unsupported, then an exception is thrown.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAddressResult'
        '480':
          description: InvalidAddressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAddressException'
        '481':
          description: UnsupportedAddressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedAddressException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.CreateAddress
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.CreateCluster:
    post:
      operationId: CreateCluster
      description: Creates an empty cluster. Each cluster supports five nodes. You use the <a>CreateJob</a> action separately to create the jobs for each of these nodes. The cluster does not ship until these five node jobs have been created.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: KMSRequestFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSRequestFailedException'
        '482':
          description: InvalidInputCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputCombinationException'
        '483':
          description: Ec2RequestFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ec2RequestFailedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.CreateCluster
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.CreateJob:
    post:
      operationId: CreateJob
      description: '<p>Creates a job to import or export data between Amazon S3 and your on-premises data center. Your AWS account must have the right trust policies and permissions in place to create a job for a Snow device. If you''re creating a job for a node in a cluster, you only need to provide the <code>clusterId</code> value; the other job attributes are inherited from the cluster. </p> <note> <p>Only the Snowball; Edge device type is supported when ordering clustered jobs.</p> <p>The device capacity is optional.</p> <p>Availability of device types differ by AWS Region. For more information about Region availability, see <a href="https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/?p=ngi&amp;loc=4">AWS Regional Services</a>.</p> </note> <p/> <p class="title"> <b>AWS Snow Family device types and their capacities.</b> </p> <ul> <li> <p>Snow Family device type: <b>SNC1_SSD</b> </p> <ul> <li> <p>Capacity: T14</p> </li> <li> <p>Description: Snowcone </p> </li> </ul> <p/> </li> <li> <p>Snow Family device type: <b>SNC1_HDD</b> </p> <ul> <li> <p>Capacity: T8</p> </li> <li> <p>Description: Snowcone </p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_S</b> </p> <ul> <li> <p>Capacity: T98</p> </li> <li> <p>Description: Snowball Edge Storage Optimized for data transfer only </p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_CG</b> </p> <ul> <li> <p>Capacity: T42</p> </li> <li> <p>Description: Snowball Edge Compute Optimized with GPU</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_C</b> </p> <ul> <li> <p>Capacity: T42</p> </li> <li> <p>Description: Snowball Edge Compute Optimized without GPU</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE</b> </p> <ul> <li> <p>Capacity: T100</p> </li> <li> <p>Description: Snowball Edge Storage Optimized with EC2 Compute</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>STANDARD</b> </p> <ul> <li> <p>Capacity: T50</p> </li> <li> <p>Description: Original Snowball device</p> <note> <p>This device is only available in the Ningxia, Beijing, and Singapore AWS Regions. </p> </note> </li> </ul> <p/> </li> <li> <p>Device type: <b>STANDARD</b> </p> <ul> <li> <p>Capacity: T80</p> </li> <li> <p>Description: Original Snowball device</p> <note> <p>This device is only available in the Ningxia, Beijing, and Singapore AWS Regions. </p> </note> </li> </ul> <p/> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJobResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: KMSRequestFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSRequestFailedException'
        '482':
          description: InvalidInputCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputCombinationException'
        '483':
          description: ClusterLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterLimitExceededException'
        '484':
          description: Ec2RequestFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ec2RequestFailedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.CreateJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.CreateLongTermPricing:
    post:
      operationId: CreateLongTermPricing
      description: 'Creates a job with the long-term usage option for a device. The long-term usage is a 1-year or 3-year long-term pricing type for the device. You are billed upfront, and AWS provides discounts for long-term pricing. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLongTermPricingResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLongTermPricingRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.CreateLongTermPricing
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.CreateReturnShippingLabel:
    post:
      operationId: CreateReturnShippingLabel
      description: Creates a shipping label that will be used to return the Snow device to AWS.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReturnShippingLabelResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
        '482':
          description: InvalidInputCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputCombinationException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ReturnShippingLabelAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnShippingLabelAlreadyExistsException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReturnShippingLabelRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.CreateReturnShippingLabel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.DescribeAddress:
    post:
      operationId: DescribeAddress
      description: Takes an <code>AddressId</code> and returns specific details about that address in the form of an <code>Address</code> object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAddressResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAddressRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.DescribeAddress
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.DescribeAddresses:
    post:
      operationId: DescribeAddresses
      description: Returns a specified number of <code>ADDRESS</code> objects. Calling this API in one of the US regions will return addresses from the list of all addresses associated with this account in all US regions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAddressesResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAddressesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.DescribeAddresses
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.DescribeCluster:
    post:
      operationId: DescribeCluster
      description: 'Returns information about a specific cluster including shipping information, cluster status, and other important metadata.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeClusterResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClusterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.DescribeCluster
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.DescribeJob:
    post:
      operationId: DescribeJob
      description: 'Returns information about a specific job including shipping information, job status, and other important metadata. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.DescribeJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.DescribeReturnShippingLabel:
    post:
      operationId: DescribeReturnShippingLabel
      description: Information on the shipping label of a Snow device that is being returned to AWS.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReturnShippingLabelResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeReturnShippingLabelRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.DescribeReturnShippingLabel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.GetJobManifest:
    post:
      operationId: GetJobManifest
      description: '<p>Returns a link to an Amazon S3 presigned URL for the manifest file associated with the specified <code>JobId</code> value. You can access the manifest file for up to 60 minutes after this request has been made. To access the manifest file after 60 minutes have passed, you''ll have to make another call to the <code>GetJobManifest</code> action.</p> <p>The manifest is an encrypted file that you can download after your job enters the <code>WithCustomer</code> status. The manifest is decrypted by using the <code>UnlockCode</code> code value, when you pass both values to the Snow device through the Snowball client when the client is started for the first time.</p> <p>As a best practice, we recommend that you don''t save a copy of an <code>UnlockCode</code> value in the same location as the manifest file for that job. Saving these separately helps prevent unauthorized parties from gaining access to the Snow device associated with that job.</p> <p>The credentials of a given job, including its manifest file and unlock code, expire 360 days after the job is created.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobManifestResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetJobManifestRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.GetJobManifest
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.GetJobUnlockCode:
    post:
      operationId: GetJobUnlockCode
      description: '<p>Returns the <code>UnlockCode</code> code value for the specified job. A particular <code>UnlockCode</code> value can be accessed for up to 360 days after the associated job has been created.</p> <p>The <code>UnlockCode</code> value is a 29-character code with 25 alphanumeric characters and 4 hyphens. This code is used to decrypt the manifest file when it is passed along with the manifest to the Snow device through the Snowball client when the client is started for the first time.</p> <p>As a best practice, we recommend that you don''t save a copy of the <code>UnlockCode</code> in the same location as the manifest file for that job. Saving these separately helps prevent unauthorized parties from gaining access to the Snow device associated with that job.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobUnlockCodeResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetJobUnlockCodeRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.GetJobUnlockCode
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.GetSnowballUsage:
    post:
      operationId: GetSnowballUsage
      description: '<p>Returns information about the Snow Family service limit for your account, and also the number of Snow devices your account has in use.</p> <p>The default service limit for the number of Snow devices that you can have at one time is 1. If you want to increase your service limit, contact AWS Support.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSnowballUsageResult'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSnowballUsageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.GetSnowballUsage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.GetSoftwareUpdates:
    post:
      operationId: GetSoftwareUpdates
      description: Returns an Amazon S3 presigned URL for an update file associated with a specified <code>JobId</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftwareUpdatesResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSoftwareUpdatesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.GetSoftwareUpdates
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.ListClusterJobs:
    post:
      operationId: ListClusterJobs
      description: 'Returns an array of <code>JobListEntry</code> objects of the specified length. Each <code>JobListEntry</code> object is for a job in the specified cluster and contains a job''s state, a job''s ID, and other information.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterJobsResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListClusterJobsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.ListClusterJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.ListClusters:
    post:
      operationId: ListClusters
      description: 'Returns an array of <code>ClusterListEntry</code> objects of the specified length. Each <code>ClusterListEntry</code> object contains a cluster''s state, a cluster''s ID, and other important status information.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResult'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListClustersRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.ListClusters
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.ListCompatibleImages:
    post:
      operationId: ListCompatibleImages
      description: 'This action returns a list of the different Amazon EC2 Amazon Machine Images (AMIs) that are owned by your AWS account that would be supported for use on a Snow device. Currently, supported AMIs are based on the CentOS 7 (x86_64) - with Updates HVM, Ubuntu Server 14.04 LTS (HVM), and Ubuntu 16.04 LTS - Xenial (HVM) images, available on the AWS Marketplace.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCompatibleImagesResult'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: Ec2RequestFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ec2RequestFailedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCompatibleImagesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.ListCompatibleImages
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.ListJobs:
    post:
      operationId: ListJobs
      description: 'Returns an array of <code>JobListEntry</code> objects of the specified length. Each <code>JobListEntry</code> object contains a job''s state, a job''s ID, and a value that indicates whether the job is a job part, in the case of export jobs. Calling this API action in one of the US regions will return jobs from the list of all jobs associated with this account in all US regions.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResult'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.ListJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.ListLongTermPricing:
    post:
      operationId: ListLongTermPricing
      description: Lists all long-term pricing types.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLongTermPricingResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLongTermPricingRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.ListLongTermPricing
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.UpdateCluster:
    post:
      operationId: UpdateCluster
      description: 'While a cluster''s <code>ClusterState</code> value is in the <code>AwaitingQuorum</code> state, you can update some of the information associated with a cluster. Once the cluster changes to a different job state, usually 60 minutes after the cluster being created, this action is no longer available.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateClusterResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
        '482':
          description: KMSRequestFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSRequestFailedException'
        '483':
          description: InvalidInputCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputCombinationException'
        '484':
          description: Ec2RequestFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ec2RequestFailedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.UpdateCluster
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.UpdateJob:
    post:
      operationId: UpdateJob
      description: 'While a job''s <code>JobState</code> value is <code>New</code>, you can update some of the information associated with a job. Once the job changes to a different job state, usually within 60 minutes of the job being created, this action is no longer available.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateJobResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
        '482':
          description: KMSRequestFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSRequestFailedException'
        '483':
          description: InvalidInputCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputCombinationException'
        '484':
          description: ClusterLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterLimitExceededException'
        '485':
          description: Ec2RequestFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ec2RequestFailedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.UpdateJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.UpdateJobShipmentState:
    post:
      operationId: UpdateJobShipmentState
      description: Updates the state when a shipment state changes to a different state.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateJobShipmentStateResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
        '481':
          description: InvalidJobStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobShipmentStateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.UpdateJobShipmentState
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSIESnowballJobManagementService.UpdateLongTermPricing:
    post:
      operationId: UpdateLongTermPricing
      description: Updates the long-term pricing type.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLongTermPricingResult'
        '480':
          description: InvalidResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLongTermPricingRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSIESnowballJobManagementService.UpdateLongTermPricing
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CancelClusterResult:
      type: object
      properties: {}
    CancelClusterRequest:
      type: object
      required:
        - ClusterId
      title: CancelClusterRequest
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: 'The 39-character ID for the cluster that you want to cancel, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.'
    KMSRequestFailedException: {}
    InvalidJobStateException: {}
    InvalidResourceException: {}
    CancelJobResult:
      type: object
      properties: {}
    CancelJobRequest:
      type: object
      required:
        - JobId
      title: CancelJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The 39-character job ID for the job that you want to cancel, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.'
    CreateAddressResult:
      type: object
      example:
        AddressId: ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b
      properties:
        AddressId:
          $ref: '#/components/schemas/String'
          description: The automatically generated ID for a specific address. You'll use this ID when you create a job to specify which address you want the Snow device for that job shipped to.
    CreateAddressRequest:
      type: object
      required:
        - Address
      title: CreateAddressRequest
      properties:
        Address:
          $ref: '#/components/schemas/Address'
          description: The address that you want the Snow device shipped to.
    InvalidAddressException: {}
    UnsupportedAddressException: {}
    CreateClusterResult:
      type: object
      example:
        ClusterId: CID123e4567-e89b-12d3-a456-426655440000
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: The automatically generated ID for a cluster.
    CreateClusterRequest:
      type: object
      required:
        - JobType
        - Resources
        - AddressId
        - RoleARN
        - SnowballType
        - ShippingOption
      title: CreateClusterRequest
      properties:
        JobType:
          $ref: '#/components/schemas/JobType'
          description: '<p>The type of job for this cluster. Currently, the only job type supported for clusters is <code>LOCAL_USE</code>.</p> <p>For more information, see "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>'
        Resources:
          $ref: '#/components/schemas/JobResource'
          description: 'The resources associated with the cluster job. These resources include Amazon S3 buckets and optional AWS Lambda functions written in the Python language. '
        OnDeviceServiceConfiguration:
          $ref: '#/components/schemas/OnDeviceServiceConfiguration'
          description: Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. AWS Snow Family supports Amazon S3 and NFS (Network File System).
        Description:
          $ref: '#/components/schemas/String'
          description: 'An optional description of this specific cluster, for example <code>Environmental Data Cluster-01</code>.'
        AddressId:
          $ref: '#/components/schemas/AddressId'
          description: The ID for the address that you want the cluster shipped to.
        KmsKeyARN:
          $ref: '#/components/schemas/KmsKeyARN'
          description: 'The <code>KmsKeyARN</code> value that you want to associate with this cluster. <code>KmsKeyARN</code> values are created by using the <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html">CreateKey</a> API action in AWS Key Management Service (AWS KMS). '
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
          description: 'The <code>RoleARN</code> that you want to associate with this cluster. <code>RoleArn</code> values are created by using the <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a> API action in AWS Identity and Access Management (IAM).'
        SnowballType:
          $ref: '#/components/schemas/SnowballType'
          description: '<p>The type of AWS Snow Family device to use for this cluster. </p> <note> <p>For cluster jobs, AWS Snow Family currently supports only the <code>EDGE</code> device type.</p> </note> <p>For more information, see "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>'
        ShippingOption:
          $ref: '#/components/schemas/ShippingOption'
          description: '<p>The shipping speed for each node in this cluster. This speed doesn''t dictate how soon you''ll get each Snowball Edge device, rather it represents how quickly each device moves to its destination while in transit. Regional shipping speeds are as follows: </p> <ul> <li> <p>In Australia, you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li> <li> <p>In the United States of America (US), you have access to one-day shipping and two-day shipping.</p> </li> </ul> <ul> <li> <p>In Australia, you have access to express shipping. Typically, devices shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li> <li> <p>In the US, you have access to one-day shipping and two-day shipping.</p> </li> </ul>'
        Notification:
          $ref: '#/components/schemas/Notification'
          description: The Amazon Simple Notification Service (Amazon SNS) notification settings for this cluster.
        ForwardingAddressId:
          $ref: '#/components/schemas/AddressId'
          description: The forwarding address ID for a cluster. This field is not supported in most regions.
        TaxDocuments:
          $ref: '#/components/schemas/TaxDocuments'
          description: The tax documents required in your AWS Region.
        RemoteManagement:
          $ref: '#/components/schemas/RemoteManagement'
          description: 'Allows you to securely operate and manage Snow devices in a cluster remotely from outside of your internal network. When set to <code>INSTALLED_AUTOSTART</code>, remote management will automatically be available when the device arrives at your location. Otherwise, you need to use the Snowball Client to manage the device.'
    InvalidInputCombinationException: {}
    Ec2RequestFailedException: {}
    CreateJobResult:
      type: object
      example:
        JobId: JID123e4567-e89b-12d3-a456-426655440000
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.'
    CreateJobRequest:
      type: object
      title: CreateJobRequest
      properties:
        JobType:
          $ref: '#/components/schemas/JobType'
          description: 'Defines the type of job that you''re creating. '
        Resources:
          $ref: '#/components/schemas/JobResource'
          description: '<p>Defines the Amazon S3 buckets associated with this job.</p> <p>With <code>IMPORT</code> jobs, you specify the bucket or buckets that your transferred data will be imported into.</p> <p>With <code>EXPORT</code> jobs, you specify the bucket or buckets that your transferred data will be exported from. Optionally, you can also specify a <code>KeyRange</code> value. If you choose to export a range, you define the length of the range by providing either an inclusive <code>BeginMarker</code> value, an inclusive <code>EndMarker</code> value, or both. Ranges are UTF-8 binary sorted.</p>'
        OnDeviceServiceConfiguration:
          $ref: '#/components/schemas/OnDeviceServiceConfiguration'
          description: Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. AWS Snow Family supports Amazon S3 and NFS (Network File System).
        Description:
          $ref: '#/components/schemas/String'
          description: 'Defines an optional description of this specific job, for example <code>Important Photos 2016-08-11</code>.'
        AddressId:
          $ref: '#/components/schemas/AddressId'
          description: The ID for the address that you want the Snow device shipped to.
        KmsKeyARN:
          $ref: '#/components/schemas/KmsKeyARN'
          description: 'The <code>KmsKeyARN</code> that you want to associate with this job. <code>KmsKeyARN</code>s are created using the <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html">CreateKey</a> AWS Key Management Service (KMS) API action.'
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
          description: 'The <code>RoleARN</code> that you want to associate with this job. <code>RoleArn</code>s are created using the <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a> AWS Identity and Access Management (IAM) API action.'
        SnowballCapacityPreference:
          $ref: '#/components/schemas/SnowballCapacity'
          description: '<p>If your job is being created in one of the US regions, you have the option of specifying what size Snow device you''d like for this job. In all other regions, Snowballs come with 80 TB in storage capacity.</p> <p>For more information, see "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>'
        ShippingOption:
          $ref: '#/components/schemas/ShippingOption'
          description: '<p>The shipping speed for this job. This speed doesn''t dictate how soon you''ll get the Snow device, rather it represents how quickly the Snow device moves to its destination while in transit. Regional shipping speeds are as follows:</p> <ul> <li> <p>In Australia, you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li> <li> <p>In the US, you have access to one-day shipping and two-day shipping.</p> </li> </ul>'
        Notification:
          $ref: '#/components/schemas/Notification'
          description: Defines the Amazon Simple Notification Service (Amazon SNS) notification settings for this job.
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: 'The ID of a cluster. If you''re creating a job for a node in a cluster, you need to provide only this <code>clusterId</code> value. The other job attributes are inherited from the cluster.'
        SnowballType:
          $ref: '#/components/schemas/SnowballType'
          description: '<p>The type of AWS Snow Family device to use for this job. </p> <note> <p>For cluster jobs, AWS Snow Family currently supports only the <code>EDGE</code> device type.</p> </note> <p>The type of AWS Snow device to use for this job. Currently, the only supported device type for cluster jobs is <code>EDGE</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/snowball/latest/developer-guide/device-differences.html">Snowball Edge Device Options</a> in the Snowball Edge Developer Guide.</p> <p>For more information, see "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>'
        ForwardingAddressId:
          $ref: '#/components/schemas/AddressId'
          description: The forwarding address ID for a job. This field is not supported in most Regions.
        TaxDocuments:
          $ref: '#/components/schemas/TaxDocuments'
          description: The tax documents required in your AWS Region.
        DeviceConfiguration:
          $ref: '#/components/schemas/DeviceConfiguration'
          description: '<p>Defines the device configuration for an AWS Snowcone job.</p> <p>For more information, see "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>'
        RemoteManagement:
          $ref: '#/components/schemas/RemoteManagement'
          description: 'Allows you to securely operate and manage Snowcone devices remotely from outside of your internal network. When set to <code>INSTALLED_AUTOSTART</code>, remote management will automatically be available when the device arrives at your location. Otherwise, you need to use the Snowball Client to manage the device.'
        LongTermPricingId:
          $ref: '#/components/schemas/LongTermPricingId'
          description: The ID of the long-term pricing type for the device.
    ClusterLimitExceededException: {}
    CreateLongTermPricingResult:
      type: object
      properties:
        LongTermPricingId:
          $ref: '#/components/schemas/LongTermPricingId'
          description: The ID of the long-term pricing type for the device.
    CreateLongTermPricingRequest:
      type: object
      required:
        - LongTermPricingType
      title: CreateLongTermPricingRequest
      properties:
        LongTermPricingType:
          $ref: '#/components/schemas/LongTermPricingType'
          description: 'The type of long-term pricing option you want for the device, either 1-year or 3-year long-term pricing.'
        IsLongTermPricingAutoRenew:
          $ref: '#/components/schemas/JavaBoolean'
          description: Specifies whether the current long-term pricing type for the device should be renewed.
        SnowballType:
          $ref: '#/components/schemas/SnowballType'
          description: The type of AWS Snow Family device to use for the long-term pricing job.
    CreateReturnShippingLabelResult:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/ShippingLabelStatus'
          description: The status information of the task on a Snow device that is being returned to AWS.
    CreateReturnShippingLabelRequest:
      type: object
      required:
        - JobId
      title: CreateReturnShippingLabelRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The ID for a job that you want to create the return shipping label for; for example, <code>JID123e4567-e89b-12d3-a456-426655440000</code>.'
        ShippingOption:
          $ref: '#/components/schemas/ShippingOption'
          description: 'The shipping speed for a particular job. This speed doesn''t dictate how soon the device is returned to AWS. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:'
    ConflictException: {}
    ReturnShippingLabelAlreadyExistsException: {}
    DescribeAddressResult:
      type: object
      example:
        Address:
          AddressId: ADID5643ec50-3eec-4eb3-9be6-9374c10eb51b
          City: Seattle
          Company: My Company
          Country: US
          Name: My Name
          PhoneNumber: 425-555-5555
          PostalCode: '98101'
          StateOrProvince: WA
          Street1: 123 Main Street
      properties:
        Address:
          $ref: '#/components/schemas/Address'
          description: The address that you want the Snow device(s) associated with a specific job to be shipped to.
    DescribeAddressRequest:
      type: object
      required:
        - AddressId
      title: DescribeAddressRequest
      properties:
        AddressId:
          $ref: '#/components/schemas/AddressId'
          description: The automatically generated ID for a specific address.
    DescribeAddressesResult:
      type: object
      example:
        Addresses:
          - AddressId: ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b
            City: Seattle
            Company: My Company
            Country: US
            Name: My Name
            PhoneNumber: 425-555-5555
            PostalCode: '98101'
            StateOrProvince: WA
            Street1: 123 Main Street
      properties:
        Addresses:
          $ref: '#/components/schemas/AddressList'
          description: The Snow device shipping addresses that were created for this account.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'HTTP requests are stateless. If you use the automatically generated <code>NextToken</code> value in your next <code>DescribeAddresses</code> call, your list of returned addresses will start from this point in the array.'
    DescribeAddressesRequest:
      type: object
      title: DescribeAddressesRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/ListLimit'
          description: The number of <code>ADDRESS</code> objects to return.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'HTTP requests are stateless. To identify what object comes "next" in the list of <code>ADDRESS</code> objects, you have the option of specifying a value for <code>NextToken</code> as the starting point for your list of returned addresses.'
    InvalidNextTokenException: {}
    DescribeClusterResult:
      type: object
      example:
        ClusterMetadata:
          AddressId: ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b
          ClusterId: CID123e4567-e89b-12d3-a456-426655440000
          ClusterState: Pending
          CreationDate: '1480475517.0'
          Description: MyCluster
          JobType: LOCAL_USE
          KmsKeyARN: 'arn:aws:kms:us-east-1:123456789012:key/abcd1234-12ab-34cd-56ef-123456123456'
          Notification:
            JobStatesToNotify: []
            NotifyAll: false
          Resources:
            S3Resources:
              - BucketArn: 'arn:aws:s3:::MyBucket'
                KeyRange: {}
          RoleARN: 'arn:aws:iam::123456789012:role/snowball-import-S3-role'
          ShippingOption: SECOND_DAY
      properties:
        ClusterMetadata:
          $ref: '#/components/schemas/ClusterMetadata'
          description: 'Information about a specific cluster, including shipping information, cluster status, and other important metadata.'
    DescribeClusterRequest:
      type: object
      required:
        - ClusterId
      title: DescribeClusterRequest
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: The automatically generated ID for a cluster.
    DescribeJobResult:
      type: object
      example:
        JobMetadata:
          AddressId: ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b
          CreationDate: '1475626164'
          Description: My Job
          JobId: JID123e4567-e89b-12d3-a456-426655440000
          JobState: New
          JobType: IMPORT
          KmsKeyARN: 'arn:aws:kms:us-east-1:123456789012:key/abcd1234-12ab-34cd-56ef-123456123456'
          Notification:
            JobStatesToNotify: []
            NotifyAll: false
          Resources:
            S3Resources:
              - BucketArn: 'arn:aws:s3:::MyBucket'
                KeyRange: {}
          RoleARN: 'arn:aws:iam::123456789012:role/snowball-import-S3-role'
          ShippingDetails:
            ShippingOption: SECOND_DAY
          SnowballCapacityPreference: T80
          SnowballType: STANDARD
      properties:
        JobMetadata:
          $ref: '#/components/schemas/JobMetadata'
          description: 'Information about a specific job, including shipping information, job status, and other important metadata.'
        SubJobMetadata:
          $ref: '#/components/schemas/JobMetadataList'
          description: 'Information about a specific job part (in the case of an export job), including shipping information, job status, and other important metadata.'
    DescribeJobRequest:
      type: object
      required:
        - JobId
      title: DescribeJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.'
    DescribeReturnShippingLabelResult:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/ShippingLabelStatus'
          description: The status information of the task on a Snow device that is being returned to AWS.
        ExpirationDate:
          $ref: '#/components/schemas/Timestamp'
          description: The expiration date of the current return shipping label.
    DescribeReturnShippingLabelRequest:
      type: object
      required:
        - JobId
      title: DescribeReturnShippingLabelRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.'
    GetJobManifestResult:
      type: object
      example:
        ManifestURI: 'https://awsie-frosty-manifests-prod.s3.amazonaws.com/JID123e4567-e89b-12d3-a456-426655440000_manifest.bin?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20161224T005115Z&X-Amz-SignedHeaders=...'
      properties:
        ManifestURI:
          $ref: '#/components/schemas/String'
          description: The Amazon S3 presigned URL for the manifest file associated with the specified <code>JobId</code> value.
    GetJobManifestRequest:
      type: object
      required:
        - JobId
      title: GetJobManifestRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The ID for a job that you want to get the manifest file for, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.'
    GetJobUnlockCodeResult:
      type: object
      example:
        UnlockCode: 12345-abcde-56789-fghij-01234
      properties:
        UnlockCode:
          $ref: '#/components/schemas/String'
          description: The <code>UnlockCode</code> value for the specified job. The <code>UnlockCode</code> value can be accessed for up to 360 days after the job has been created.
    GetJobUnlockCodeRequest:
      type: object
      required:
        - JobId
      title: GetJobUnlockCodeRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The ID for the job that you want to get the <code>UnlockCode</code> value for, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.'
    GetSnowballUsageResult:
      type: object
      example:
        SnowballLimit: 1
        SnowballsInUse: 0
      properties:
        SnowballLimit:
          $ref: '#/components/schemas/Integer'
          description: The service limit for number of Snow devices this account can have at once. The default service limit is 1 (one).
        SnowballsInUse:
          $ref: '#/components/schemas/Integer'
          description: The number of Snow devices that this account is currently using.
    GetSnowballUsageRequest:
      type: object
      title: GetSnowballUsageRequest
      properties: {}
    GetSoftwareUpdatesResult:
      type: object
      properties:
        UpdatesURI:
          $ref: '#/components/schemas/String'
          description: 'The Amazon S3 presigned URL for the update file associated with the specified <code>JobId</code> value. The software update will be available for 2 days after this request is made. To access an update after the 2 days have passed, you''ll have to make another call to <code>GetSoftwareUpdates</code>.'
    GetSoftwareUpdatesRequest:
      type: object
      required:
        - JobId
      title: GetSoftwareUpdatesRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The ID for a job that you want to get the software update file for, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.'
    ListClusterJobsResult:
      type: object
      example:
        JobListEntries:
          - CreationDate: '1480475524.0'
            Description: MyClustrer-node-001
            IsMaster: false
            JobId: JID123e4567-e89b-12d3-a456-426655440000
            JobState: New
            JobType: LOCAL_USE
            SnowballType: EDGE
          - CreationDate: '1480475525.0'
            Description: MyClustrer-node-002
            IsMaster: false
            JobId: JID123e4567-e89b-12d3-a456-426655440001
            JobState: New
            JobType: LOCAL_USE
            SnowballType: EDGE
          - CreationDate: '1480475525.0'
            Description: MyClustrer-node-003
            IsMaster: false
            JobId: JID123e4567-e89b-12d3-a456-426655440002
            JobState: New
            JobType: LOCAL_USE
            SnowballType: EDGE
          - CreationDate: '1480475525.0'
            Description: MyClustrer-node-004
            IsMaster: false
            JobId: JID123e4567-e89b-12d3-a456-426655440003
            JobState: New
            JobType: LOCAL_USE
            SnowballType: EDGE
          - CreationDate: '1480475525.0'
            Description: MyClustrer-node-005
            IsMaster: false
            JobId: JID123e4567-e89b-12d3-a456-426655440004
            JobState: New
            JobType: LOCAL_USE
            SnowballType: EDGE
      properties:
        JobListEntries:
          $ref: '#/components/schemas/JobListEntryList'
          description: 'Each <code>JobListEntry</code> object contains a job''s state, a job''s ID, and a value that indicates whether the job is a job part, in the case of export jobs. '
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'HTTP requests are stateless. If you use the automatically generated <code>NextToken</code> value in your next <code>ListClusterJobsResult</code> call, your list of returned jobs will start from this point in the array.'
    ListClusterJobsRequest:
      type: object
      required:
        - ClusterId
      title: ListClusterJobsRequest
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: 'The 39-character ID for the cluster that you want to list, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.'
        MaxResults:
          $ref: '#/components/schemas/ListLimit'
          description: The number of <code>JobListEntry</code> objects to return.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'HTTP requests are stateless. To identify what object comes "next" in the list of <code>JobListEntry</code> objects, you have the option of specifying <code>NextToken</code> as the starting point for your returned list.'
    ListClustersResult:
      type: object
      example:
        ClusterListEntries:
          - ClusterId: CID123e4567-e89b-12d3-a456-426655440000
            ClusterState: Pending
            CreationDate: '1480475517.0'
            Description: MyCluster
      properties:
        ClusterListEntries:
          $ref: '#/components/schemas/ClusterListEntryList'
          description: 'Each <code>ClusterListEntry</code> object contains a cluster''s state, a cluster''s ID, and other important status information.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'HTTP requests are stateless. If you use the automatically generated <code>NextToken</code> value in your next <code>ClusterListEntry</code> call, your list of returned clusters will start from this point in the array.'
    ListClustersRequest:
      type: object
      title: ListClustersRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/ListLimit'
          description: The number of <code>ClusterListEntry</code> objects to return.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'HTTP requests are stateless. To identify what object comes "next" in the list of <code>ClusterListEntry</code> objects, you have the option of specifying <code>NextToken</code> as the starting point for your returned list.'
    ListCompatibleImagesResult:
      type: object
      properties:
        CompatibleImages:
          $ref: '#/components/schemas/CompatibleImageList'
          description: 'A JSON-formatted object that describes a compatible AMI, including the ID and name for a Snow device AMI.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'Because HTTP requests are stateless, this is the starting point for your next list of returned images.'
    ListCompatibleImagesRequest:
      type: object
      title: ListCompatibleImagesRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/ListLimit'
          description: 'The maximum number of results for the list of compatible images. Currently, a Snowball Edge device can store 10 AMIs.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'HTTP requests are stateless. To identify what object comes "next" in the list of compatible images, you can specify a value for <code>NextToken</code> as the starting point for your list of returned images.'
    ListJobsResult:
      type: object
      example:
        JobListEntries:
          - CreationDate: '1460678186.0'
            Description: MyJob
            IsMaster: false
            JobId: JID123e4567-e89b-12d3-a456-426655440000
            JobState: New
            JobType: IMPORT
            SnowballType: STANDARD
      properties:
        JobListEntries:
          $ref: '#/components/schemas/JobListEntryList'
          description: 'Each <code>JobListEntry</code> object contains a job''s state, a job''s ID, and a value that indicates whether the job is a job part, in the case of export jobs. '
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'HTTP requests are stateless. If you use this automatically generated <code>NextToken</code> value in your next <code>ListJobs</code> call, your returned <code>JobListEntry</code> objects will start from this point in the array.'
    ListJobsRequest:
      type: object
      title: ListJobsRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/ListLimit'
          description: The number of <code>JobListEntry</code> objects to return.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'HTTP requests are stateless. To identify what object comes "next" in the list of <code>JobListEntry</code> objects, you have the option of specifying <code>NextToken</code> as the starting point for your returned list.'
    ListLongTermPricingResult:
      type: object
      properties:
        LongTermPricingEntries:
          $ref: '#/components/schemas/LongTermPricingEntryList'
          description: 'Each <code>LongTermPricingEntry</code> object contains a status, ID, and other information about the <code>LongTermPricing</code> type. '
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'Because HTTP requests are stateless, this is the starting point for your next list of returned <code>ListLongTermPricing</code> list.'
    ListLongTermPricingRequest:
      type: object
      title: ListLongTermPricingRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/ListLimit'
          description: The maximum number of <code>ListLongTermPricing</code> objects to return.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'Because HTTP requests are stateless, this is the starting point for your next list of <code>ListLongTermPricing</code> to return.'
    UpdateClusterResult:
      type: object
      properties: {}
    UpdateClusterRequest:
      type: object
      required:
        - ClusterId
      title: UpdateClusterRequest
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: 'The cluster ID of the cluster that you want to update, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.'
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
          description: 'The new role Amazon Resource Name (ARN) that you want to associate with this cluster. To create a role ARN, use the <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a> API action in AWS Identity and Access Management (IAM).'
        Description:
          $ref: '#/components/schemas/String'
          description: The updated description of this cluster.
        Resources:
          $ref: '#/components/schemas/JobResource'
          description: The updated arrays of <a>JobResource</a> objects that can include updated <a>S3Resource</a> objects or <a>LambdaResource</a> objects.
        OnDeviceServiceConfiguration:
          $ref: '#/components/schemas/OnDeviceServiceConfiguration'
          description: Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. AWS Snow Family supports Amazon S3 and NFS (Network File System).
        AddressId:
          $ref: '#/components/schemas/AddressId'
          description: The ID of the updated <a>Address</a> object.
        ShippingOption:
          $ref: '#/components/schemas/ShippingOption'
          description: The updated shipping option value of this cluster's <a>ShippingDetails</a> object.
        Notification:
          $ref: '#/components/schemas/Notification'
          description: The new or updated <a>Notification</a> object.
        ForwardingAddressId:
          $ref: '#/components/schemas/AddressId'
          description: The updated ID for the forwarding address for a cluster. This field is not supported in most regions.
    UpdateJobResult:
      type: object
      properties: {}
    UpdateJobRequest:
      type: object
      required:
        - JobId
      title: UpdateJobRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The job ID of the job that you want to update, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.'
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
          description: 'The new role Amazon Resource Name (ARN) that you want to associate with this job. To create a role ARN, use the <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a>AWS Identity and Access Management (IAM) API action.'
        Notification:
          $ref: '#/components/schemas/Notification'
          description: The new or updated <a>Notification</a> object.
        Resources:
          $ref: '#/components/schemas/JobResource'
          description: 'The updated <code>JobResource</code> object, or the updated <a>JobResource</a> object. '
        OnDeviceServiceConfiguration:
          $ref: '#/components/schemas/OnDeviceServiceConfiguration'
          description: Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. AWS Snow Family supports Amazon S3 and NFS (Network File System).
        AddressId:
          $ref: '#/components/schemas/AddressId'
          description: The ID of the updated <a>Address</a> object.
        ShippingOption:
          $ref: '#/components/schemas/ShippingOption'
          description: The updated shipping option value of this job's <a>ShippingDetails</a> object.
        Description:
          $ref: '#/components/schemas/String'
          description: The updated description of this job's <a>JobMetadata</a> object.
        SnowballCapacityPreference:
          $ref: '#/components/schemas/SnowballCapacity'
          description: '<p>The updated <code>SnowballCapacityPreference</code> of this job''s <a>JobMetadata</a> object. The 50 TB Snowballs are only available in the US regions.</p> <p>For more information, see "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>'
        ForwardingAddressId:
          $ref: '#/components/schemas/AddressId'
          description: The updated ID for the forwarding address for a job. This field is not supported in most regions.
    UpdateJobShipmentStateResult:
      type: object
      properties: {}
    UpdateJobShipmentStateRequest:
      type: object
      required:
        - JobId
        - ShipmentState
      title: UpdateJobShipmentStateRequest
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: 'The job ID of the job whose shipment date you want to update, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.'
        ShipmentState:
          $ref: '#/components/schemas/ShipmentState'
          description: <p>The state of a device when it is being shipped. </p> <p>Set to <code>RECEIVED</code> when the device arrives at your location.</p> <p>Set to <code>RETURNED</code> when you have returned the device to AWS.</p>
    UpdateLongTermPricingResult:
      type: object
      properties: {}
    UpdateLongTermPricingRequest:
      type: object
      required:
        - LongTermPricingId
      title: UpdateLongTermPricingRequest
      properties:
        LongTermPricingId:
          $ref: '#/components/schemas/LongTermPricingId'
          description: The ID of the long-term pricing type for the device.
        ReplacementJob:
          $ref: '#/components/schemas/JobId'
          description: Specifies that a device that is ordered with long-term pricing should be replaced with a new device.
        IsLongTermPricingAutoRenew:
          $ref: '#/components/schemas/JavaBoolean'
          description: 'If set to <code>true</code>, specifies that the current long-term pricing type for the device should be automatically renewed before the long-term pricing contract expires.'
    AddressId:
      type: string
      pattern: 'ADID[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
      minLength: 40
      maxLength: 40
    String:
      type: string
      minLength: 1
      maxLength: 1024
    Boolean:
      type: boolean
    Address:
      type: object
      properties:
        AddressId:
          $ref: '#/components/schemas/AddressId'
          description: The unique ID for an address.
        Name:
          $ref: '#/components/schemas/String'
          description: The name of a person to receive a Snow device at an address.
        Company:
          $ref: '#/components/schemas/String'
          description: The name of the company to receive a Snow device at an address.
        Street1:
          $ref: '#/components/schemas/String'
          description: The first line in a street address that a Snow device is to be delivered to.
        Street2:
          $ref: '#/components/schemas/String'
          description: The second line in a street address that a Snow device is to be delivered to.
        Street3:
          $ref: '#/components/schemas/String'
          description: The third line in a street address that a Snow device is to be delivered to.
        City:
          $ref: '#/components/schemas/String'
          description: The city in an address that a Snow device is to be delivered to.
        StateOrProvince:
          $ref: '#/components/schemas/String'
          description: The state or province in an address that a Snow device is to be delivered to.
        PrefectureOrDistrict:
          $ref: '#/components/schemas/String'
          description: This field is no longer used and the value is ignored.
        Landmark:
          $ref: '#/components/schemas/String'
          description: This field is no longer used and the value is ignored.
        Country:
          $ref: '#/components/schemas/String'
          description: The country in an address that a Snow device is to be delivered to.
        PostalCode:
          $ref: '#/components/schemas/String'
          description: The postal code in an address that a Snow device is to be delivered to.
        PhoneNumber:
          $ref: '#/components/schemas/String'
          description: The phone number associated with an address that a Snow device is to be delivered to.
        IsRestricted:
          $ref: '#/components/schemas/Boolean'
          description: 'If the address you are creating is a primary address, then set this option to true. This field is not supported in most regions.'
      description: 'The address that you want the Snow device(s) associated with a specific job to be shipped to. Addresses are validated at the time of creation. The address you provide must be located within the serviceable area of your region. Although no individual elements of the <code>Address</code> are required, if the address is invalid or unsupported, then an exception is thrown.'
    AddressList:
      type: array
      items:
        $ref: '#/components/schemas/Address'
    AmiId:
      type: string
      pattern: '(ami-[0-9a-f]{8})|(ami-[0-9a-f]{17})'
      minLength: 12
      maxLength: 21
    ClusterId:
      type: string
      pattern: 'CID[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
      minLength: 39
      maxLength: 39
    JobId:
      type: string
      pattern: '(M|J)ID[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
      minLength: 39
      maxLength: 39
    ClusterState:
      type: string
      enum:
        - AwaitingQuorum
        - Pending
        - InUse
        - Complete
        - Cancelled
    Timestamp:
      type: string
      format: date-time
    ClusterListEntry:
      type: object
      properties:
        ClusterId:
          $ref: '#/components/schemas/String'
          description: 'The 39-character ID for the cluster that you want to list, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.'
        ClusterState:
          $ref: '#/components/schemas/ClusterState'
          description: 'The current state of this cluster. For information about the state of a specific node, see <a>JobListEntry$JobState</a>.'
        CreationDate:
          $ref: '#/components/schemas/Timestamp'
          description: The creation date for this cluster.
        Description:
          $ref: '#/components/schemas/String'
          description: 'Defines an optional description of the cluster, for example <code>Environmental Data Cluster-01</code>.'
      description: 'Contains a cluster''s state, a cluster''s ID, and other important information.'
    ClusterListEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterListEntry'
    KmsKeyARN:
      type: string
      pattern: 'arn:aws.*:kms:.*:[0-9]{12}:key/.*'
      maxLength: 255
    RoleARN:
      type: string
      pattern: 'arn:aws.*:iam::[0-9]{12}:role/.*'
      maxLength: 255
    JobType:
      type: string
      enum:
        - IMPORT
        - EXPORT
        - LOCAL_USE
    SnowballType:
      type: string
      enum:
        - STANDARD
        - EDGE
        - EDGE_C
        - EDGE_CG
        - EDGE_S
        - SNC1_HDD
        - SNC1_SSD
    JobResource:
      type: object
      properties:
        S3Resources:
          $ref: '#/components/schemas/S3ResourceList'
          description: An array of <code>S3Resource</code> objects.
        LambdaResources:
          $ref: '#/components/schemas/LambdaResourceList'
          description: The Python-language Lambda functions for this job.
        Ec2AmiResources:
          $ref: '#/components/schemas/Ec2AmiResourceList'
          description: The Amazon Machine Images (AMIs) associated with this job.
      description: 'Contains an array of AWS resource objects. Each object represents an Amazon S3 bucket, an AWS Lambda function, or an Amazon Machine Image (AMI) based on Amazon EC2 that is associated with a particular job.'
    ShippingOption:
      type: string
      enum:
        - SECOND_DAY
        - NEXT_DAY
        - EXPRESS
        - STANDARD
    Notification:
      type: object
      properties:
        SnsTopicARN:
          $ref: '#/components/schemas/SnsTopicARN'
          description: '<p>The new SNS <code>TopicArn</code> that you want to associate with this job. You can create Amazon Resource Names (ARNs) for topics by using the <a href="https://docs.aws.amazon.com/sns/latest/api/API_CreateTopic.html">CreateTopic</a> Amazon SNS API action.</p> <p>You can subscribe email addresses to an Amazon SNS topic through the AWS Management Console, or by using the <a href="https://docs.aws.amazon.com/sns/latest/api/API_Subscribe.html">Subscribe</a> Amazon Simple Notification Service (Amazon SNS) API action.</p>'
        JobStatesToNotify:
          $ref: '#/components/schemas/JobStateList'
          description: The list of job states that will trigger a notification for this job.
        NotifyAll:
          $ref: '#/components/schemas/Boolean'
          description: Any change in job state will trigger a notification for this job.
      description: '<p>The Amazon Simple Notification Service (Amazon SNS) notification settings associated with a specific job. The <code>Notification</code> object is returned as a part of the response syntax of the <code>DescribeJob</code> action in the <code>JobMetadata</code> data type.</p> <p>When the notification settings are defined during job creation, you can choose to notify based on a specific set of job states using the <code>JobStatesToNotify</code> array of strings, or you can specify that you want to have Amazon SNS notifications sent out for all job states with <code>NotifyAll</code> set to true.</p>'
    TaxDocuments:
      type: object
      properties:
        IND:
          $ref: '#/components/schemas/INDTaxDocuments'
      description: The tax documents required in your AWS Region.
    OnDeviceServiceConfiguration:
      type: object
      properties:
        NFSOnDeviceService:
          $ref: '#/components/schemas/NFSOnDeviceServiceConfiguration'
          description: Represents the NFS service on a Snow Family device.
      description: An object that represents metadata and configuration settings for services on an AWS Snow Family device.
    ClusterMetadata:
      type: object
      properties:
        ClusterId:
          $ref: '#/components/schemas/String'
          description: The automatically generated ID for a cluster.
        Description:
          $ref: '#/components/schemas/String'
          description: The optional description of the cluster.
        KmsKeyARN:
          $ref: '#/components/schemas/KmsKeyARN'
          description: 'The <code>KmsKeyARN</code> Amazon Resource Name (ARN) associated with this cluster. This ARN was created using the <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html">CreateKey</a> API action in AWS Key Management Service (AWS KMS).'
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
          description: 'The role ARN associated with this cluster. This ARN was created using the <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a> API action in AWS Identity and Access Management (IAM).'
        ClusterState:
          $ref: '#/components/schemas/ClusterState'
          description: The current status of the cluster.
        JobType:
          $ref: '#/components/schemas/JobType'
          description: 'The type of job for this cluster. Currently, the only job type supported for clusters is <code>LOCAL_USE</code>.'
        SnowballType:
          $ref: '#/components/schemas/SnowballType'
          description: '<p>The type of AWS Snow device to use for this cluster. </p> <note> <p>For cluster jobs, AWS Snow Family currently supports only the <code>EDGE</code> device type.</p> </note>'
        CreationDate:
          $ref: '#/components/schemas/Timestamp'
          description: The creation date for this cluster.
        Resources:
          $ref: '#/components/schemas/JobResource'
          description: The arrays of <a>JobResource</a> objects that can include updated <a>S3Resource</a> objects or <a>LambdaResource</a> objects.
        AddressId:
          $ref: '#/components/schemas/AddressId'
          description: The automatically generated ID for a specific address.
        ShippingOption:
          $ref: '#/components/schemas/ShippingOption'
          description: '<p>The shipping speed for each node in this cluster. This speed doesn''t dictate how soon you''ll get each device, rather it represents how quickly each device moves to its destination while in transit. Regional shipping speeds are as follows:</p> <ul> <li> <p>In Australia, you have access to express shipping. Typically, devices shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li> <li> <p>In the US, you have access to one-day shipping and two-day shipping.</p> </li> </ul>'
        Notification:
          $ref: '#/components/schemas/Notification'
          description: The Amazon Simple Notification Service (Amazon SNS) notification settings for this cluster.
        ForwardingAddressId:
          $ref: '#/components/schemas/AddressId'
          description: 'The ID of the address that you want a cluster shipped to, after it will be shipped to its primary address. This field is not supported in most regions.'
        TaxDocuments:
          $ref: '#/components/schemas/TaxDocuments'
          description: The tax documents required in your AWS Region.
        OnDeviceServiceConfiguration:
          $ref: '#/components/schemas/OnDeviceServiceConfiguration'
          description: Represents metadata and configuration settings for services on an AWS Snow Family device.
      description: Contains metadata about a specific cluster.
    CompatibleImage:
      type: object
      properties:
        AmiId:
          $ref: '#/components/schemas/String'
          description: The unique identifier for an individual Snow device AMI.
        Name:
          $ref: '#/components/schemas/String'
          description: The optional name of a compatible image.
      description: 'A JSON-formatted object that describes a compatible Amazon Machine Image (AMI), including the ID and name for a Snow device AMI. This AMI is compatible with the device''s physical hardware requirements, and it should be able to be run in an SBE1 instance on the device.'
    CompatibleImageList:
      type: array
      items:
        $ref: '#/components/schemas/CompatibleImage'
    RemoteManagement:
      type: string
      enum:
        - INSTALLED_ONLY
        - INSTALLED_AUTOSTART
    SnowballCapacity:
      type: string
      enum:
        - T50
        - T80
        - T100
        - T42
        - T98
        - T8
        - T14
        - NoPreference
    DeviceConfiguration:
      type: object
      properties:
        SnowconeDeviceConfiguration:
          $ref: '#/components/schemas/SnowconeDeviceConfiguration'
          description: Returns information about the device configuration for an AWS Snowcone job.
      description: 'The container for <code>SnowconeDeviceConfiguration</code>. '
    LongTermPricingId:
      type: string
      pattern: 'LTPID[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
      minLength: 41
      maxLength: 41
    LongTermPricingType:
      type: string
      enum:
        - OneYear
        - ThreeYear
    JavaBoolean:
      type: boolean
    ShippingLabelStatus:
      type: string
      enum:
        - InProgress
        - TimedOut
        - Succeeded
        - Failed
    Long:
      type: integer
    DataTransfer:
      type: object
      properties:
        BytesTransferred:
          $ref: '#/components/schemas/Long'
          description: The number of bytes transferred between a Snow device and Amazon S3.
        ObjectsTransferred:
          $ref: '#/components/schemas/Long'
          description: The number of objects transferred between a Snow device and Amazon S3.
        TotalBytes:
          $ref: '#/components/schemas/Long'
          description: The total bytes of data for a transfer between a Snow device and Amazon S3. This value is set to 0 (zero) until all the keys that will be transferred have been listed.
        TotalObjects:
          $ref: '#/components/schemas/Long'
          description: The total number of objects for a transfer between a Snow device and Amazon S3. This value is set to 0 (zero) until all the keys that will be transferred have been listed.
      description: 'Defines the real-time status of a Snow device''s data transfer while the device is at AWS. This data is only available while a job has a <code>JobState</code> value of <code>InProgress</code>, for both import and export jobs.'
    ListLimit:
      type: integer
      minimum: 0
      maximum: 100
    JobMetadata:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/String'
          description: 'The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.'
        JobState:
          $ref: '#/components/schemas/JobState'
          description: The current status of the jobs.
        JobType:
          $ref: '#/components/schemas/JobType'
          description: The type of job.
        SnowballType:
          $ref: '#/components/schemas/SnowballType'
          description: The type of device used with this job.
        CreationDate:
          $ref: '#/components/schemas/Timestamp'
          description: The creation date for this job.
        Resources:
          $ref: '#/components/schemas/JobResource'
          description: An array of <code>S3Resource</code> objects. Each <code>S3Resource</code> object represents an Amazon S3 bucket that your transferred data will be exported from or imported into.
        Description:
          $ref: '#/components/schemas/String'
          description: 'The description of the job, provided at job creation.'
        KmsKeyARN:
          $ref: '#/components/schemas/KmsKeyARN'
          description: 'The Amazon Resource Name (ARN) for the AWS Key Management Service (AWS KMS) key associated with this job. This ARN was created using the <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html">CreateKey</a> API action in AWS KMS.'
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
          description: 'The role ARN associated with this job. This ARN was created using the <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a> API action in AWS Identity and Access Management (IAM).'
        AddressId:
          $ref: '#/components/schemas/AddressId'
          description: The ID for the address that you want the Snow device shipped to.
        ShippingDetails:
          $ref: '#/components/schemas/ShippingDetails'
          description: 'A job''s shipping information, including inbound and outbound tracking numbers and shipping speed options.'
        SnowballCapacityPreference:
          $ref: '#/components/schemas/SnowballCapacity'
          description: '<p>The Snow device capacity preference for this job, specified at job creation. In US regions, you can choose between 50 TB and 80 TB Snowballs. All other regions use 80 TB capacity Snowballs.</p> <p>For more information, see "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>'
        Notification:
          $ref: '#/components/schemas/Notification'
          description: The Amazon Simple Notification Service (Amazon SNS) notification settings associated with a specific job. The <code>Notification</code> object is returned as a part of the response syntax of the <code>DescribeJob</code> action in the <code>JobMetadata</code> data type.
        DataTransferProgress:
          $ref: '#/components/schemas/DataTransfer'
          description: 'A value that defines the real-time status of a Snow device''s data transfer while the device is at AWS. This data is only available while a job has a <code>JobState</code> value of <code>InProgress</code>, for both import and export jobs.'
        JobLogInfo:
          $ref: '#/components/schemas/JobLogs'
          description: 'Links to Amazon S3 presigned URLs for the job report and logs. For import jobs, the PDF job report becomes available at the end of the import process. For export jobs, your job report typically becomes available while the Snow device for your job part is being delivered to you.'
        ClusterId:
          $ref: '#/components/schemas/String'
          description: 'The 39-character ID for the cluster, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.'
        ForwardingAddressId:
          $ref: '#/components/schemas/AddressId'
          description: 'The ID of the address that you want a job shipped to, after it will be shipped to its primary address. This field is not supported in most regions.'
        TaxDocuments:
          $ref: '#/components/schemas/TaxDocuments'
          description: The metadata associated with the tax documents required in your AWS Region.
        DeviceConfiguration:
          $ref: '#/components/schemas/DeviceConfiguration'
        RemoteManagement:
          $ref: '#/components/schemas/RemoteManagement'
          description: 'Allows you to securely operate and manage Snowcone devices remotely from outside of your internal network. When set to <code>INSTALLED_AUTOSTART</code>, remote management will automatically be available when the device arrives at your location. Otherwise, you need to use the Snowball Client to manage the device.'
        LongTermPricingId:
          $ref: '#/components/schemas/LongTermPricingId'
          description: The ID of the long-term pricing type for the device.
        OnDeviceServiceConfiguration:
          $ref: '#/components/schemas/OnDeviceServiceConfiguration'
          description: Represents metadata and configuration settings for services on an AWS Snow Family device.
      description: 'Contains information about a specific job including shipping information, job status, and other important metadata. This information is returned as a part of the response syntax of the <code>DescribeJob</code> action.'
    JobMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/JobMetadata'
    SnowconeDeviceConfiguration:
      type: object
      properties:
        WirelessConnection:
          $ref: '#/components/schemas/WirelessConnection'
          description: Configures the wireless connection for the AWS Snowcone device.
      description: 'Specifies the device configuration for an AWS Snowcone job. '
    DeviceServiceName:
      type: string
      enum:
        - NFS_ON_DEVICE_SERVICE
        - S3_ON_DEVICE_SERVICE
    Ec2AmiResource:
      type: object
      required:
        - AmiId
      properties:
        AmiId:
          $ref: '#/components/schemas/AmiId'
          description: The ID of the AMI in Amazon EC2.
        SnowballAmiId:
          $ref: '#/components/schemas/String'
          description: The ID of the AMI on the Snow device.
      description: 'A JSON-formatted object that contains the IDs for an Amazon Machine Image (AMI), including the Amazon EC2 AMI ID and the Snow device AMI ID. Each AMI has these two IDs to simplify identifying the AMI in both the AWS Cloud and on the device.'
    Ec2AmiResourceList:
      type: array
      items:
        $ref: '#/components/schemas/Ec2AmiResource'
    ResourceARN:
      type: string
      pattern: 'arn:aws.*:*'
      maxLength: 255
    EventTriggerDefinition:
      type: object
      properties:
        EventResourceARN:
          $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) for any local Amazon S3 resource that is an AWS Lambda function's event trigger associated with this job.
      description: The container for the <a>EventTriggerDefinition$EventResourceARN</a>.
    EventTriggerDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/EventTriggerDefinition'
    GSTIN:
      type: string
      pattern: '\d{2}[A-Z]{5}\d{4}[A-Z]{1}[A-Z\d]{1}[Z]{1}[A-Z\d]{1}'
    Integer:
      type: integer
    INDTaxDocuments:
      type: object
      properties:
        GSTIN:
          $ref: '#/components/schemas/GSTIN'
          description: The Goods and Services Tax (GST) documents required in AWS Regions in India.
      description: The tax documents required in AWS Regions in India.
    JobState:
      type: string
      enum:
        - New
        - PreparingAppliance
        - PreparingShipment
        - InTransitToCustomer
        - WithCustomer
        - InTransitToAWS
        - WithAWSSortingFacility
        - WithAWS
        - InProgress
        - Complete
        - Cancelled
        - Listing
        - Pending
    JobListEntry:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/String'
          description: 'The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.'
        JobState:
          $ref: '#/components/schemas/JobState'
          description: The current state of this job.
        IsMaster:
          $ref: '#/components/schemas/Boolean'
          description: 'A value that indicates that this job is a main job. A main job represents a successful request to create an export job. Main jobs aren''t associated with any Snowballs. Instead, each main job will have at least one job part, and each job part is associated with a Snowball. It might take some time before the job parts associated with a particular main job are listed, because they are created after the main job is created.'
        JobType:
          $ref: '#/components/schemas/JobType'
          description: The type of job.
        SnowballType:
          $ref: '#/components/schemas/SnowballType'
          description: The type of device used with this job.
        CreationDate:
          $ref: '#/components/schemas/Timestamp'
          description: The creation date for this job.
        Description:
          $ref: '#/components/schemas/String'
          description: 'The optional description of this specific job, for example <code>Important Photos 2016-08-11</code>.'
      description: 'Each <code>JobListEntry</code> object contains a job''s state, a job''s ID, and a value that indicates whether the job is a job part, in the case of an export job.'
    JobListEntryList:
      type: array
      items:
        $ref: '#/components/schemas/JobListEntry'
    JobLogs:
      type: object
      properties:
        JobCompletionReportURI:
          $ref: '#/components/schemas/String'
          description: A link to an Amazon S3 presigned URL where the job completion report is located.
        JobSuccessLogURI:
          $ref: '#/components/schemas/String'
          description: A link to an Amazon S3 presigned URL where the job success log is located.
        JobFailureLogURI:
          $ref: '#/components/schemas/String'
          description: A link to an Amazon S3 presigned URL where the job failure log is located.
      description: '<p>Contains job logs. Whenever a Snow device is used to import data into or export data out of Amazon S3, you''ll have the option of downloading a PDF job report. Job logs are returned as a part of the response syntax of the <code>DescribeJob</code> action in the <code>JobMetadata</code> data type. The job logs can be accessed for up to 60 minutes after this request has been made. To access any of the job logs after 60 minutes have passed, you''ll have to make another call to the <code>DescribeJob</code> action.</p> <p>For import jobs, the PDF job report becomes available at the end of the import process. For export jobs, your job report typically becomes available while the Snow device for your job part is being delivered to you.</p> <p>The job report provides you insight into the state of your Amazon S3 data transfer. The report includes details about your job or job part for your records.</p> <p>For deeper visibility into the status of your transferred objects, you can look at the two associated logs: a success log and a failure log. The logs are saved in comma-separated value (CSV) format, and the name of each log includes the ID of the job or job part that the log describes.</p>'
    ShippingDetails:
      type: object
      properties:
        ShippingOption:
          $ref: '#/components/schemas/ShippingOption'
          description: '<p>The shipping speed for a particular job. This speed doesn''t dictate how soon you''ll get the Snow device from the job''s creation date. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:</p> <ul> <li> <p>In Australia, you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li> <li> <p>In the United States of America (US), you have access to one-day shipping and two-day shipping.</p> </li> </ul>'
        InboundShipment:
          $ref: '#/components/schemas/Shipment'
          description: The <code>Status</code> and <code>TrackingNumber</code> values for a Snow device being returned to AWS for a particular job.
        OutboundShipment:
          $ref: '#/components/schemas/Shipment'
          description: The <code>Status</code> and <code>TrackingNumber</code> values for a Snow device being delivered to the address that you specified for a particular job.
      description: 'A job''s shipping information, including inbound and outbound tracking numbers and shipping speed options.'
    S3ResourceList:
      type: array
      items:
        $ref: '#/components/schemas/S3Resource'
    LambdaResourceList:
      type: array
      items:
        $ref: '#/components/schemas/LambdaResource'
    JobStateList:
      type: array
      items:
        $ref: '#/components/schemas/JobState'
    KeyRange:
      type: object
      properties:
        BeginMarker:
          $ref: '#/components/schemas/String'
          description: The key that starts an optional key range for an export job. Ranges are inclusive and UTF-8 binary sorted.
        EndMarker:
          $ref: '#/components/schemas/String'
          description: The key that ends an optional key range for an export job. Ranges are inclusive and UTF-8 binary sorted.
      description: 'Contains a key range. For export jobs, a <code>S3Resource</code> object can have an optional <code>KeyRange</code> value. The length of the range is defined at job creation, and has either an inclusive <code>BeginMarker</code>, an inclusive <code>EndMarker</code>, or both. Ranges are UTF-8 binary sorted.'
    LambdaResource:
      type: object
      properties:
        LambdaArn:
          $ref: '#/components/schemas/ResourceARN'
          description: An Amazon Resource Name (ARN) that represents an AWS Lambda function to be triggered by PUT object actions on the associated local Amazon S3 resource.
        EventTriggers:
          $ref: '#/components/schemas/EventTriggerDefinitionList'
          description: The array of ARNs for <a>S3Resource</a> objects to trigger the <a>LambdaResource</a> objects associated with this job.
      description: 'Identifies '
    LongTermPricingEntryList:
      type: array
      items:
        $ref: '#/components/schemas/LongTermPricingListEntry'
    LongTermPricingAssociatedJobIdList:
      type: array
      items:
        $ref: '#/components/schemas/JobId'
    LongTermPricingListEntry:
      type: object
      properties:
        LongTermPricingId:
          $ref: '#/components/schemas/LongTermPricingId'
          description: The ID of the long-term pricing type for the device.
        LongTermPricingEndDate:
          $ref: '#/components/schemas/Timestamp'
          description: The end date the long-term pricing contract.
        LongTermPricingStartDate:
          $ref: '#/components/schemas/Timestamp'
          description: The start date of the long-term pricing contract.
        LongTermPricingType:
          $ref: '#/components/schemas/LongTermPricingType'
          description: The type of long-term pricing that was selected for the device.
        CurrentActiveJob:
          $ref: '#/components/schemas/JobId'
          description: The current active jobs on the device the long-term pricing type.
        ReplacementJob:
          $ref: '#/components/schemas/JobId'
          description: A new device that replaces a device that is ordered with long-term pricing.
        IsLongTermPricingAutoRenew:
          $ref: '#/components/schemas/JavaBoolean'
          description: 'If set to <code>true</code>, specifies that the current long-term pricing type for the device should be automatically renewed before the long-term pricing contract expires.'
        LongTermPricingStatus:
          $ref: '#/components/schemas/String'
          description: The status of the long-term pricing type.
        SnowballType:
          $ref: '#/components/schemas/SnowballType'
          description: The type of AWS Snow Family device associated with this long-term pricing job.
        JobIds:
          $ref: '#/components/schemas/LongTermPricingAssociatedJobIdList'
          description: The IDs of the jobs that are associated with a long-term pricing type.
      description: Each <code>LongTermPricingListEntry</code> object contains information about a long-term pricing type.
    StorageLimit:
      type: integer
      minimum: 0
    StorageUnit:
      type: string
      enum:
        - TB
    NFSOnDeviceServiceConfiguration:
      type: object
      properties:
        StorageLimit:
          $ref: '#/components/schemas/StorageLimit'
          description: The maximum NFS storage for one Snowball Family device.
        StorageUnit:
          $ref: '#/components/schemas/StorageUnit'
          description: '<p>The scale unit of the NFS storage on the device.</p> <p>Valid values: TB.</p>'
      description: An object that represents metadata and configuration settings for NFS service on an AWS Snow Family device.
    SnsTopicARN:
      type: string
      pattern: 'arn:aws.*:sns:.*:[0-9]{12}:.*'
      maxLength: 255
    TargetOnDeviceServiceList:
      type: array
      items:
        $ref: '#/components/schemas/TargetOnDeviceService'
    S3Resource:
      type: object
      properties:
        BucketArn:
          $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of an Amazon S3 bucket.
        KeyRange:
          $ref: '#/components/schemas/KeyRange'
          description: 'For export jobs, you can provide an optional <code>KeyRange</code> within a specific Amazon S3 bucket. The length of the range is defined at job creation, and has either an inclusive <code>BeginMarker</code>, an inclusive <code>EndMarker</code>, or both. Ranges are UTF-8 binary sorted.'
        TargetOnDeviceServices:
          $ref: '#/components/schemas/TargetOnDeviceServiceList'
          description: Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. AWS Snow Family supports Amazon S3 and NFS (Network File System).
      description: 'Each <code>S3Resource</code> object represents an Amazon S3 bucket that your transferred data will be exported from or imported into. For export jobs, this object can have an optional <code>KeyRange</code> value. The length of the range is defined at job creation, and has either an inclusive <code>BeginMarker</code>, an inclusive <code>EndMarker</code>, or both. Ranges are UTF-8 binary sorted.'
    Shipment:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
          description: Status information for a shipment.
        TrackingNumber:
          $ref: '#/components/schemas/String'
          description: '<p>The tracking number for this job. Using this tracking number with your region''s carrier''s website, you can track a Snow device as the carrier transports it.</p> <p>For India, the carrier is Amazon Logistics. For all other regions, UPS is the carrier.</p>'
      description: The <code>Status</code> and <code>TrackingNumber</code> information for an inbound or outbound shipment.
    ShipmentState:
      type: string
      enum:
        - RECEIVED
        - RETURNED
    WirelessConnection:
      type: object
      properties:
        IsWifiEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Enables the Wi-Fi adapter on an AWS Snowcone device.
      description: Configures the wireless connection on an AWS Snowcone device.
    TransferOption:
      type: string
      enum:
        - IMPORT
        - EXPORT
        - LOCAL_USE
    TargetOnDeviceService:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/DeviceServiceName'
          description: Specifies the name of the service on the Snow Family device that your transferred data will be exported from or imported into.
        TransferOption:
          $ref: '#/components/schemas/TransferOption'
          description: 'Specifies whether the data is being imported or exported. You can import or export the data, or use it locally on the device.'
      description: An object that represents the service or services on the Snow Family device that your transferred data will be exported from or imported into. AWS Snow Family supports Amazon S3 and NFS (Network File System).
security:
  - hmac: []
