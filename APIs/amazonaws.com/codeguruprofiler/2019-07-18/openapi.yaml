openapi: 3.0.0
info:
  version: '2019-07-18'
  x-release: v4
  title: Amazon CodeGuru Profiler
  description: '<p> This section provides documentation for the Amazon CodeGuru Profiler API operations. </p> <p> Amazon CodeGuru Profiler collects runtime performance data from your live applications, and provides recommendations that can help you fine-tune your application performance. Using machine learning algorithms, CodeGuru Profiler can help you find your most expensive lines of code and suggest ways you can improve efficiency and remove CPU bottlenecks. </p> <p> Amazon CodeGuru Profiler provides different visualizations of profiling data to help you identify what code is running on the CPU, see how much time is consumed, and suggest ways to reduce CPU utilization. </p> <note> <p>Amazon CodeGuru Profiler currently supports applications written in all Java virtual machine (JVM) languages and Python. While CodeGuru Profiler supports both visualizations and recommendations for applications written in Java, it can also generate visualizations and a subset of recommendations for applications written in other JVM languages and Python.</p> </note> <p> For more information, see <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html">What is Amazon CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>. </p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: codeguruprofiler
  x-aws-signingName: codeguru-profiler
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codeguruprofiler-2019-07-18.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/codeguru-profiler/'
servers:
  - url: 'http://codeguru-profiler.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon CodeGuru Profiler multi-region endpoint
  - url: 'https://codeguru-profiler.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon CodeGuru Profiler multi-region endpoint
  - url: 'http://codeguru-profiler.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon CodeGuru Profiler endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://codeguru-profiler.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon CodeGuru Profiler endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/profilingGroups/{profilingGroupName}/notificationConfiguration':
    post:
      operationId: AddNotificationChannels
      description: Add up to 2 anomaly notifications channels for a profiling group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNotificationChannelsResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: profilingGroupName
          in: path
          required: true
          description: The name of the profiling group that we are setting up notifications for.
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - channels
              properties:
                channels:
                  description: One or 2 channels to report to when anomalies are detected.
                  type: array
                  items:
                    $ref: '#/components/schemas/Channel'
                  minItems: 1
                  maxItems: 2
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetNotificationConfiguration
      description: Get the current configuration for anomaly notifications for a profiling group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationConfigurationResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: profilingGroupName
          in: path
          required: true
          description: The name of the profiling group we want to get the notification configuration for.
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
  '/profilingGroups/{profilingGroupName}/frames/-/metrics':
    post:
      operationId: BatchGetFrameMetricData
      description: ' Returns the time series of values for a requested list of frame metrics from a time period.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetFrameMetricDataResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: endTime
          in: query
          required: false
          description: ' The end time of the time period for the returned time series values. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
          schema:
            type: string
            format: date-time
        - name: period
          in: query
          required: false
          description: ' The duration of the frame metrics used to return the time series values. Specify using the ISO 8601 format. The maximum period duration is one day (<code>PT24H</code> or <code>P1D</code>). '
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: profilingGroupName
          in: path
          required: true
          description: ' The name of the profiling group associated with the the frame metrics used to return the time series values. '
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
        - name: startTime
          in: query
          required: false
          description: ' The start time of the time period for the frame metrics used to return the time series values. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
          schema:
            type: string
            format: date-time
        - name: targetResolution
          in: query
          required: false
          description: <p>The requested resolution of time steps for the returned time series of values. If the requested target resolution is not available due to data not being retained we provide a best effort result by falling back to the most granular available resolution after the target resolution. There are 3 valid values. </p> <ul> <li> <p> <code>P1D</code> — 1 day </p> </li> <li> <p> <code>PT1H</code> — 1 hour </p> </li> <li> <p> <code>PT5M</code> — 5 minutes </p> </li> </ul>
          schema:
            type: string
            enum:
              - PT5M
              - PT1H
              - P1D
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                frameMetrics:
                  description: ' The details of the metrics that are used to request a time series of values. The metric includes the name of the frame, the aggregation type to calculate the metric value for the frame, and the thread states to use to get the count for the metric value of the frame.'
                  type: array
                  items:
                    $ref: '#/components/schemas/FrameMetric'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/profilingGroups/{profilingGroupName}/configureAgent':
    post:
      operationId: ConfigureAgent
      description: ' Used by profiler agents to report their current state and to receive remote configuration updates. For example, <code>ConfigureAgent</code> can be used to tell an agent whether to profile or not and for how long to return profiling data. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigureAgentResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: profilingGroupName
          in: path
          required: true
          description: ' The name of the profiling group for which the configured agent is collecting profiling data. '
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fleetInstanceId:
                  description: ' A universally unique identifier (UUID) for a profiling instance. For example, if the profiling instance is an Amazon EC2 instance, it is the instance ID. If it is an AWS Fargate container, it is the container''s task ID. '
                  type: string
                  minLength: 1
                  maxLength: 255
                metadata:
                  description: '<p> Metadata captured about the compute platform the agent is running on. It includes information about sampling and reporting. The valid fields are:</p> <ul> <li> <p> <code>COMPUTE_PLATFORM</code> - The compute platform on which the agent is running </p> </li> <li> <p> <code>AGENT_ID</code> - The ID for an agent instance. </p> </li> <li> <p> <code>AWS_REQUEST_ID</code> - The AWS request ID of a Lambda invocation. </p> </li> <li> <p> <code>EXECUTION_ENVIRONMENT</code> - The execution environment a Lambda function is running on. </p> </li> <li> <p> <code>LAMBDA_FUNCTION_ARN</code> - The Amazon Resource Name (ARN) that is used to invoke a Lambda function. </p> </li> <li> <p> <code>LAMBDA_MEMORY_LIMIT_IN_MB</code> - The memory allocated to a Lambda function. </p> </li> <li> <p> <code>LAMBDA_REMAINING_TIME_IN_MILLISECONDS</code> - The time in milliseconds before execution of a Lambda function times out. </p> </li> <li> <p> <code>LAMBDA_TIME_GAP_BETWEEN_INVOKES_IN_MILLISECONDS</code> - The time in milliseconds between two invocations of a Lambda function. </p> </li> <li> <p> <code>LAMBDA_PREVIOUS_EXECUTION_TIME_IN_MILLISECONDS</code> - The time in milliseconds for the previous Lambda invocation. </p> </li> </ul>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /profilingGroups#clientToken:
    post:
      operationId: CreateProfilingGroup
      description: Creates a profiling group.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfilingGroupResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: clientToken
          in: query
          required: true
          description: ' Amazon CodeGuru Profiler uses this universally unique identifier (UUID) to prevent the accidental creation of duplicate profiling groups if there are failures and retries. '
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - profilingGroupName
              properties:
                agentOrchestrationConfig:
                  description: ' Specifies whether profiling is enabled or disabled for a profiling group. It is used by <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html"> <code>ConfigureAgent</code> </a> to enable or disable profiling for a profiling group. '
                  type: object
                  properties:
                    profilingEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: ' A <code>Boolean</code> that specifies whether the profiling agent collects profiling data or not. Set to <code>true</code> to enable profiling. '
                computePlatform:
                  description: ' The compute platform of the profiling group. Use <code>AWSLambda</code> if your application runs on AWS Lambda. Use <code>Default</code> if your application runs on a compute platform that is not AWS Lambda, such an Amazon EC2 instance, an on-premises server, or a different platform. If not specified, <code>Default</code> is used. '
                  type: string
                  enum:
                    - Default
                    - AWSLambda
                profilingGroupName:
                  description: The name of the profiling group to create.
                  type: string
                  pattern: '^[\w-]+$'
                  minLength: 1
                  maxLength: 255
                tags:
                  description: ' A list of tags to add to the created profiling group. '
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/profilingGroups/{profilingGroupName}':
    delete:
      operationId: DeleteProfilingGroup
      description: Deletes a profiling group.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProfilingGroupResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: profilingGroupName
          in: path
          required: true
          description: The name of the profiling group to delete.
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeProfilingGroup
      description: ' Returns a <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"> <code>ProfilingGroupDescription</code> </a> object that contains information about the requested profiling group. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProfilingGroupResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: profilingGroupName
          in: path
          required: true
          description: ' The name of the profiling group to get information about. '
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
    put:
      operationId: UpdateProfilingGroup
      description: Updates a profiling group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfilingGroupResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: profilingGroupName
          in: path
          required: true
          description: The name of the profiling group to update.
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - agentOrchestrationConfig
              properties:
                agentOrchestrationConfig:
                  description: ' Specifies whether profiling is enabled or disabled for a profiling group. It is used by <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html"> <code>ConfigureAgent</code> </a> to enable or disable profiling for a profiling group. '
                  type: object
                  properties:
                    profilingEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: ' A <code>Boolean</code> that specifies whether the profiling agent collects profiling data or not. Set to <code>true</code> to enable profiling. '
  /internal/findingsReports:
    get:
      operationId: GetFindingsReportAccountSummary
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_FindingsReportSummary.html"> <code>FindingsReportSummary</code> </a> objects that contain analysis results for all profiling groups in your AWS account. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFindingsReportAccountSummaryResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: dailyReportsOnly
          in: query
          required: false
          description: 'A <code>Boolean</code> value indicating whether to only return reports from daily profiles. If set to <code>True</code>, only analysis data from daily profiles is returned. If set to <code>False</code>, analysis data is returned from smaller time windows (for example, one hour).'
          schema:
            type: boolean
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results returned by <code> GetFindingsReportAccountSummary</code> in paginated output. When this parameter is used, <code>GetFindingsReportAccountSummary</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>GetFindingsReportAccountSummary</code> request with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: <p>The <code>nextToken</code> value returned from a previous paginated <code>GetFindingsReportAccountSummary</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/profilingGroups/{profilingGroupName}/policy':
    get:
      operationId: GetPolicy
      description: ' Returns the JSON-formatted resource-based policy on a profiling group. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPolicyResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: profilingGroupName
          in: path
          required: true
          description: The name of the profiling group.
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/profilingGroups/{profilingGroupName}/profile':
    get:
      operationId: GetProfile
      description: '<p> Gets the aggregated profile of a profiling group for a specified time range. Amazon CodeGuru Profiler collects posted agent profiles for a profiling group into aggregated profiles. </p> <pre><code> &lt;note&gt; &lt;p&gt; Because aggregated profiles expire over time &lt;code&gt;GetProfile&lt;/code&gt; is not idempotent. &lt;/p&gt; &lt;/note&gt; &lt;p&gt; Specify the time range for the requested aggregated profile using 1 or 2 of the following parameters: &lt;code&gt;startTime&lt;/code&gt;, &lt;code&gt;endTime&lt;/code&gt;, &lt;code&gt;period&lt;/code&gt;. The maximum time range allowed is 7 days. If you specify all 3 parameters, an exception is thrown. If you specify only &lt;code&gt;period&lt;/code&gt;, the latest aggregated profile is returned. &lt;/p&gt; &lt;p&gt; Aggregated profiles are available with aggregation periods of 5 minutes, 1 hour, and 1 day, aligned to UTC. The aggregation period of an aggregated profile determines how long it is retained. For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AggregatedProfileTime.html&quot;&gt; &lt;code&gt;AggregatedProfileTime&lt;/code&gt; &lt;/a&gt;. The aggregated profile''s aggregation period determines how long it is retained by CodeGuru Profiler. &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; If the aggregation period is 5 minutes, the aggregated profile is retained for 15 days. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; If the aggregation period is 1 hour, the aggregated profile is retained for 60 days. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; If the aggregation period is 1 day, the aggregated profile is retained for 3 years. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;There are two use cases for calling &lt;code&gt;GetProfile&lt;/code&gt;.&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt; If you want to return an aggregated profile that already exists, use &lt;a href=&quot;https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ListProfileTimes.html&quot;&gt; &lt;code&gt;ListProfileTimes&lt;/code&gt; &lt;/a&gt; to view the time ranges of existing aggregated profiles. Use them in a &lt;code&gt;GetProfile&lt;/code&gt; request to return a specific, existing aggregated profile. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; If you want to return an aggregated profile for a time range that doesn''t align with an existing aggregated profile, then CodeGuru Profiler makes a best effort to combine existing aggregated profiles from the requested time range and return them as one aggregated profile. &lt;/p&gt; &lt;p&gt; If aggregated profiles do not exist for the full time range requested, then aggregated profiles for a smaller time range are returned. For example, if the requested time range is from 00:00 to 00:20, and the existing aggregated profiles are from 00:15 and 00:25, then the aggregated profiles from 00:15 to 00:20 are returned. &lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; </code></pre>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProfileResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: Accept
          in: header
          required: false
          description: '<p> The format of the returned profiling data. The format maps to the <code>Accept</code> and <code>Content-Type</code> headers of the HTTP request. You can specify one of the following: or the default . </p> <pre><code> &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/json&lt;/code&gt; — standard JSON format &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/x-amzn-ion&lt;/code&gt; — the Amazon Ion data format. For more information, see &lt;a href=&quot;http://amzn.github.io/ion-docs/&quot;&gt;Amazon Ion&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; </code></pre>'
          schema:
            type: string
        - name: endTime
          in: query
          required: false
          description: '<p> The end time of the requested profile. Specify using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. </p> <p> If you specify <code>endTime</code>, then you must also specify <code>period</code> or <code>startTime</code>, but not both. </p>'
          schema:
            type: string
            format: date-time
        - name: maxDepth
          in: query
          required: false
          description: ' The maximum depth of the stacks in the code that is represented in the aggregated profile. For example, if CodeGuru Profiler finds a method <code>A</code>, which calls method <code>B</code>, which calls method <code>C</code>, which calls method <code>D</code>, then the depth is 4. If the <code>maxDepth</code> is set to 2, then the aggregated profile contains representations of methods <code>A</code> and <code>B</code>. '
          schema:
            type: integer
            minimum: 1
            maximum: 10000
        - name: period
          in: query
          required: false
          description: '<p> Used with <code>startTime</code> or <code>endTime</code> to specify the time range for the returned aggregated profile. Specify using the ISO 8601 format. For example, <code>P1DT1H1M1S</code>. </p> <pre><code> &lt;p&gt; To get the latest aggregated profile, specify only &lt;code&gt;period&lt;/code&gt;. &lt;/p&gt; </code></pre>'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: profilingGroupName
          in: path
          required: true
          description: The name of the profiling group to get.
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
        - name: startTime
          in: query
          required: false
          description: '<p>The start time of the profile to get. Specify using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.</p> <pre><code> &lt;p&gt; If you specify &lt;code&gt;startTime&lt;/code&gt;, then you must also specify &lt;code&gt;period&lt;/code&gt; or &lt;code&gt;endTime&lt;/code&gt;, but not both. &lt;/p&gt; </code></pre>'
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/internal/profilingGroups/{profilingGroupName}/recommendations#endTime&startTime':
    get:
      operationId: GetRecommendations
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_Recommendation.html"> <code>Recommendation</code> </a> objects that contain recommendations for a profiling group for a given time period. A list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_Anomaly.html"> <code>Anomaly</code> </a> objects that contains details about anomalies detected in the profiling group for the same time period is also returned. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecommendationsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: endTime
          in: query
          required: true
          description: ' The start time of the profile to get analysis data about. You must specify <code>startTime</code> and <code>endTime</code>. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
          schema:
            type: string
            format: date-time
        - name: locale
          in: query
          required: false
          description: '<p> The language used to provide analysis. Specify using a string that is one of the following <code>BCP 47</code> language codes. </p> <ul> <li> <p> <code>de-DE</code> - German, Germany </p> </li> <li> <p> <code>en-GB</code> - English, United Kingdom </p> </li> <li> <p> <code>en-US</code> - English, United States </p> </li> <li> <p> <code>es-ES</code> - Spanish, Spain </p> </li> <li> <p> <code>fr-FR</code> - French, France </p> </li> <li> <p> <code>it-IT</code> - Italian, Italy </p> </li> <li> <p> <code>ja-JP</code> - Japanese, Japan </p> </li> <li> <p> <code>ko-KR</code> - Korean, Republic of Korea </p> </li> <li> <p> <code>pt-BR</code> - Portugese, Brazil </p> </li> <li> <p> <code>zh-CN</code> - Chinese, China </p> </li> <li> <p> <code>zh-TW</code> - Chinese, Taiwan </p> </li> </ul>'
          schema:
            type: string
            description: 'BCP47 language code. Supported locales: de-DE, en-GB, en-US, es-ES, fr-FR, it-IT, ja-JP, ko-KR, pt-BR, zh-CN, zh-TW'
        - name: profilingGroupName
          in: path
          required: true
          description: ' The name of the profiling group to get analysis data about. '
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
        - name: startTime
          in: query
          required: true
          description: ' The end time of the profile to get analysis data about. You must specify <code>startTime</code> and <code>endTime</code>. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/internal/profilingGroups/{profilingGroupName}/findingsReports#endTime&startTime':
    get:
      operationId: ListFindingsReports
      description: List the available reports for a given profiling group and time range.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsReportsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: dailyReportsOnly
          in: query
          required: false
          description: 'A <code>Boolean</code> value indicating whether to only return reports from daily profiles. If set to <code>True</code>, only analysis data from daily profiles is returned. If set to <code>False</code>, analysis data is returned from smaller time windows (for example, one hour).'
          schema:
            type: boolean
        - name: endTime
          in: query
          required: true
          description: ' The end time of the profile to get analysis data about. You must specify <code>startTime</code> and <code>endTime</code>. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
          schema:
            type: string
            format: date-time
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of report results returned by <code>ListFindingsReports</code> in paginated output. When this parameter is used, <code>ListFindingsReports</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListFindingsReports</code> request with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListFindingsReportsRequest</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 64
        - name: profilingGroupName
          in: path
          required: true
          description: The name of the profiling group from which to search for analysis data.
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
        - name: startTime
          in: query
          required: true
          description: ' The start time of the profile to get analysis data about. You must specify <code>startTime</code> and <code>endTime</code>. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/profilingGroups/{profilingGroupName}/profileTimes#endTime&period&startTime':
    get:
      operationId: ListProfileTimes
      description: Lists the start times of the available aggregated profiles of a profiling group for an aggregation period within the specified time range.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProfileTimesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: endTime
          in: query
          required: true
          description: The end time of the time range from which to list the profiles.
          schema:
            type: string
            format: date-time
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of profile time results returned by <code>ListProfileTimes</code> in paginated output. When this parameter is used, <code>ListProfileTimes</code> only returns <code>maxResults</code> results in a single page with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListProfileTimes</code> request with the returned <code>nextToken</code> value. '
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListProfileTimes</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 64
        - name: orderBy
          in: query
          required: false
          description: 'The order (ascending or descending by start time of the profile) to use when listing profiles. Defaults to <code>TIMESTAMP_DESCENDING</code>. '
          schema:
            type: string
            enum:
              - TimestampDescending
              - TimestampAscending
        - name: period
          in: query
          required: true
          description: <p> The aggregation period. This specifies the period during which an aggregation profile collects posted agent profiles for a profiling group. There are 3 valid values. </p> <ul> <li> <p> <code>P1D</code> — 1 day </p> </li> <li> <p> <code>PT1H</code> — 1 hour </p> </li> <li> <p> <code>PT5M</code> — 5 minutes </p> </li> </ul>
          schema:
            type: string
            enum:
              - PT5M
              - PT1H
              - P1D
        - name: profilingGroupName
          in: path
          required: true
          description: The name of the profiling group.
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
        - name: startTime
          in: query
          required: true
          description: The start time of the time range from which to list the profiles.
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /profilingGroups:
    get:
      operationId: ListProfilingGroups
      description: ' Returns a list of profiling groups. The profiling groups are returned as <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"> <code>ProfilingGroupDescription</code> </a> objects. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProfilingGroupsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: includeDescription
          in: query
          required: false
          description: 'A <code>Boolean</code> value indicating whether to include a description. If <code>true</code>, then a list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"> <code>ProfilingGroupDescription</code> </a> objects that contain detailed information about profiling groups is returned. If <code>false</code>, then a list of profiling group names is returned.'
          schema:
            type: boolean
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of profiling groups results returned by <code>ListProfilingGroups</code> in paginated output. When this parameter is used, <code>ListProfilingGroups</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListProfilingGroups</code> request with the returned <code>nextToken</code> value. '
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListProfilingGroups</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: ' Returns a list of the tags that are assigned to a specified resource. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: ' The Amazon Resource Name (ARN) of the resource that contains the tags to return. '
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: ' Use to assign one or more tags to a resource. '
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: ' The Amazon Resource Name (ARN) of the resource that the tags are added to. '
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: ' The list of tags that are added to the specified resource. '
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
  '/profilingGroups/{profilingGroupName}/agentProfile#Content-Type':
    post:
      operationId: PostAgentProfile
      description: ' Submits profiling data to an aggregated profile of a profiling group. To get an aggregated profile that is created with this profiling data, use <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_GetProfile.html"> <code>GetProfile</code> </a>. '
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAgentProfileResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: Content-Type
          in: header
          required: true
          description: '<p> The format of the submitted profiling data. The format maps to the <code>Accept</code> and <code>Content-Type</code> headers of the HTTP request. You can specify one of the following: or the default . </p> <pre><code> &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/json&lt;/code&gt; — standard JSON format &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/x-amzn-ion&lt;/code&gt; — the Amazon Ion data format. For more information, see &lt;a href=&quot;http://amzn.github.io/ion-docs/&quot;&gt;Amazon Ion&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; </code></pre>'
          schema:
            type: string
        - name: profileToken
          in: query
          required: false
          description: ' Amazon CodeGuru Profiler uses this universally unique identifier (UUID) to prevent the accidental submission of duplicate profiling data if there are failures and retries. '
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 64
        - name: profilingGroupName
          in: path
          required: true
          description: ' The name of the profiling group with the aggregated profile that receives the submitted profiling data. '
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - agentProfile
              properties:
                agentProfile:
                  description: ' The submitted profiling data. '
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/profilingGroups/{profilingGroupName}/policy/{actionGroup}':
    put:
      operationId: PutPermission
      description: '<p> Adds permissions to a profiling group''s resource-based policy that are provided using an action group. If a profiling group doesn''t have a resource-based policy, one is created for it using the permissions in the action group and the roles and users in the <code>principals</code> parameter. </p> <pre><code> &lt;p&gt; The one supported action group that can be added is &lt;code&gt;agentPermission&lt;/code&gt; which grants &lt;code&gt;ConfigureAgent&lt;/code&gt; and &lt;code&gt;PostAgent&lt;/code&gt; permissions. For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/codeguru/latest/profiler-ug/resource-based-policies.html&quot;&gt;Resource-based policies in CodeGuru Profiler&lt;/a&gt; in the &lt;i&gt;Amazon CodeGuru Profiler User Guide&lt;/i&gt;, &lt;a href=&quot;https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html&quot;&gt; &lt;code&gt;ConfigureAgent&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_PostAgentProfile.html&quot;&gt; &lt;code&gt;PostAgentProfile&lt;/code&gt; &lt;/a&gt;. &lt;/p&gt; &lt;p&gt; The first time you call &lt;code&gt;PutPermission&lt;/code&gt; on a profiling group, do not specify a &lt;code&gt;revisionId&lt;/code&gt; because it doesn''t have a resource-based policy. Subsequent calls must provide a &lt;code&gt;revisionId&lt;/code&gt; to specify which revision of the resource-based policy to add the permissions to. &lt;/p&gt; &lt;p&gt; The response contains the profiling group''s JSON-formatted resource policy. &lt;/p&gt; </code></pre>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPermissionResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: actionGroup
          in: path
          required: true
          description: ' Specifies an action group that contains permissions to add to a profiling group resource. One action group is supported, <code>agentPermissions</code>, which grants permission to perform actions required by the profiling agent, <code>ConfigureAgent</code> and <code>PostAgentProfile</code> permissions. '
          schema:
            type: string
            enum:
              - agentPermissions
        - name: profilingGroupName
          in: path
          required: true
          description: The name of the profiling group to grant access to.
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - principals
              properties:
                principals:
                  description: ' A list ARNs for the roles and users you want to grant access to the profiling group. Wildcards are not are supported in the ARNs. '
                  type: array
                  items:
                    $ref: '#/components/schemas/Principal'
                  minItems: 1
                  maxItems: 50
                revisionId:
                  description: ' A universally unique identifier (UUID) for the revision of the policy you are adding to the profiling group. Do not specify this when you add permissions to a profiling group for the first time. If a policy already exists on the profiling group, you must specify the <code>revisionId</code>. '
                  type: string
                  pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/profilingGroups/{profilingGroupName}/notificationConfiguration/{channelId}':
    delete:
      operationId: RemoveNotificationChannel
      description: Remove one anomaly notifications channel for a profiling group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveNotificationChannelResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: channelId
          in: path
          required: true
          description: The id of the channel that we want to stop receiving notifications.
          schema:
            type: string
            pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        - name: profilingGroupName
          in: path
          required: true
          description: The name of the profiling group we want to change notification configuration for.
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/profilingGroups/{profilingGroupName}/policy/{actionGroup}#revisionId':
    delete:
      operationId: RemovePermission
      description: ' Removes permissions from a profiling group''s resource-based policy that are provided using an action group. The one supported action group that can be removed is <code>agentPermission</code> which grants <code>ConfigureAgent</code> and <code>PostAgent</code> permissions. For more information, see <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-ug/resource-based-policies.html">Resource-based policies in CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>, <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html"> <code>ConfigureAgent</code> </a>, and <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_PostAgentProfile.html"> <code>PostAgentProfile</code> </a>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemovePermissionResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: actionGroup
          in: path
          required: true
          description: ' Specifies an action group that contains the permissions to remove from a profiling group''s resource-based policy. One action group is supported, <code>agentPermissions</code>, which grants <code>ConfigureAgent</code> and <code>PostAgentProfile</code> permissions. '
          schema:
            type: string
            enum:
              - agentPermissions
        - name: profilingGroupName
          in: path
          required: true
          description: The name of the profiling group.
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
        - name: revisionId
          in: query
          required: true
          description: ' A universally unique identifier (UUID) for the revision of the resource-based policy from which you want to remove permissions. '
          schema:
            type: string
            pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/internal/profilingGroups/{profilingGroupName}/anomalies/{anomalyInstanceId}/feedback':
    post:
      operationId: SubmitFeedback
      description: Sends feedback to CodeGuru Profiler about whether the anomaly detected by the analysis is useful or not.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitFeedbackResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: anomalyInstanceId
          in: path
          required: true
          description: 'The universally unique identifier (UUID) of the <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AnomalyInstance.html"> <code>AnomalyInstance</code> </a> object that is included in the analysis data.'
          schema:
            type: string
            pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        - name: profilingGroupName
          in: path
          required: true
          description: The name of the profiling group that is associated with the analysis data.
          schema:
            type: string
            pattern: '^[\w-]+$'
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
              properties:
                comment:
                  description: Optional feedback about this anomaly.
                  type: string
                type:
                  description: ' The feedback tpye. Thee are two valid values, <code>Positive</code> and <code>Negative</code>. '
                  type: string
                  enum:
                    - Positive
                    - Negative
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: ' Use to remove one or more tags from a resource. '
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: ' The Amazon Resource Name (ARN) of the resource that contains the tags to remove. '
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: ' A list of tag keys. Existing tags of resources with keys in this list are removed from the specified resource. '
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddNotificationChannelsResponse:
      type: object
      properties:
        notificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
          description: The new notification configuration for this profiling group.
      description: The structure representing the AddNotificationChannelsResponse.
    Channel:
      type: object
      required:
        - eventPublishers
        - uri
      properties:
        eventPublishers:
          $ref: '#/components/schemas/EventPublishers'
          description: List of publishers for different type of events that may be detected in an application from the profile. Anomaly detection is the only event publisher in Profiler.
        id:
          $ref: '#/components/schemas/ChannelId'
          description: Unique identifier for each <code>Channel</code> in the notification configuration of a Profiling Group. A random UUID for channelId is used when adding a channel to the notification configuration if not specified in the request.
        uri:
          $ref: '#/components/schemas/ChannelUri'
          description: Unique arn of the resource to be used for notifications. We support a valid SNS topic arn as a channel uri.
      description: Notification medium for users to get alerted for events that occur in application profile. We support SNS topic as a notification channel.
    ServiceQuotaExceededException: {}
    InternalServerException: {}
    ConflictException: {}
    ValidationException: {}
    ThrottlingException: {}
    ResourceNotFoundException: {}
    BatchGetFrameMetricDataResponse:
      type: object
      required:
        - endTime
        - endTimes
        - frameMetricData
        - resolution
        - startTime
        - unprocessedEndTimes
      properties:
        endTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' The end time of the time period for the returned time series values. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
        endTimes:
          $ref: '#/components/schemas/ListOfTimestamps'
          description: ' List of instances, or time steps, in the time series. For example, if the <code>period</code> is one day (<code>PT24H)</code>), and the <code>resolution</code> is five minutes (<code>PT5M</code>), then there are 288 <code>endTimes</code> in the list that are each five minutes appart. '
        frameMetricData:
          $ref: '#/components/schemas/FrameMetricData'
          description: 'Details of the metrics to request a time series of values. The metric includes the name of the frame, the aggregation type to calculate the metric value for the frame, and the thread states to use to get the count for the metric value of the frame.'
        resolution:
          $ref: '#/components/schemas/AggregationPeriod'
          description: <p>Resolution or granularity of the profile data used to generate the time series. This is the value used to jump through time steps in a time series. There are 3 valid values. </p> <ul> <li> <p> <code>P1D</code> — 1 day </p> </li> <li> <p> <code>PT1H</code> — 1 hour </p> </li> <li> <p> <code>PT5M</code> — 5 minutes </p> </li> </ul>
        startTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' The start time of the time period for the returned time series values. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
        unprocessedEndTimes:
          $ref: '#/components/schemas/UnprocessedEndTimeMap'
          description: List of instances which remained unprocessed. This will create a missing time step in the list of end times.
      description: The structure representing the BatchGetFrameMetricDataResponse.
    FrameMetric:
      type: object
      required:
        - frameName
        - threadStates
        - type
      properties:
        frameName:
          $ref: '#/components/schemas/String'
          description: ' Name of the method common across the multiple occurrences of a frame in an application profile.'
        threadStates:
          $ref: '#/components/schemas/ThreadStates'
          description: List of application runtime thread states used to get the counts for a frame a derive a metric value.
        type:
          $ref: '#/components/schemas/MetricType'
          description: ' A type of aggregation that specifies how a metric for a frame is analyzed. The supported value <code>AggregatedRelativeTotalTime</code> is an aggregation of the metric value for one frame that is calculated across the occurrences of all frames in a profile. '
      description: ' The frame name, metric type, and thread states. These are used to derive the value of the metric for the frame.'
    ConfigureAgentResponse:
      type: object
      required:
        - configuration
      properties:
        configuration:
          $ref: '#/components/schemas/AgentConfiguration'
          description: ' An <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AgentConfiguration.html"> <code>AgentConfiguration</code> </a> object that specifies if an agent profiles or not and for how long to return profiling data. '
      description: The structure representing the configureAgentResponse.
    String:
      type: string
    CreateProfilingGroupResponse:
      type: object
      required:
        - profilingGroup
      properties:
        profilingGroup:
          $ref: '#/components/schemas/ProfilingGroupDescription'
          description: ' The returned <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"> <code>ProfilingGroupDescription</code> </a> object that contains information about the created profiling group. '
      description: The structure representing the createProfilingGroupResponse.
    Boolean:
      type: boolean
    DeleteProfilingGroupResponse:
      type: object
      properties: {}
      description: The structure representing the deleteProfilingGroupResponse.
    DescribeProfilingGroupResponse:
      type: object
      required:
        - profilingGroup
      properties:
        profilingGroup:
          $ref: '#/components/schemas/ProfilingGroupDescription'
          description: ' The returned <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"> <code>ProfilingGroupDescription</code> </a> object that contains information about the requested profiling group. '
      description: The structure representing the describeProfilingGroupResponse.
    GetFindingsReportAccountSummaryResponse:
      type: object
      required:
        - reportSummaries
      properties:
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value to include in a future <code>GetFindingsReportAccountSummary</code> request. When the results of a <code>GetFindingsReportAccountSummary</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.'
        reportSummaries:
          $ref: '#/components/schemas/FindingsReportSummaries'
          description: 'The return list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_FindingsReportSummary.html"> <code>FindingsReportSummary</code> </a> objects taht contain summaries of analysis results for all profiling groups in your AWS account.'
      description: The structure representing the GetFindingsReportAccountSummaryResponse.
    GetNotificationConfigurationResponse:
      type: object
      required:
        - notificationConfiguration
      properties:
        notificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
          description: The current notification configuration for this profiling group.
      description: The structure representing the GetNotificationConfigurationResponse.
    GetPolicyResponse:
      type: object
      required:
        - policy
        - revisionId
      properties:
        policy:
          $ref: '#/components/schemas/String'
          description: The JSON-formatted resource-based policy attached to the <code>ProfilingGroup</code>.
        revisionId:
          $ref: '#/components/schemas/RevisionId'
          description: A unique identifier for the current revision of the returned policy.
      description: The structure representing the <code>getPolicyResponse</code>.
    GetProfileResponse:
      type: object
      required:
        - profile
      properties:
        profile:
          $ref: '#/components/schemas/AggregatedProfile'
          description: Information about the profile.
      description: The structure representing the getProfileResponse.
    GetRecommendationsResponse:
      type: object
      required:
        - anomalies
        - profileEndTime
        - profileStartTime
        - profilingGroupName
        - recommendations
      properties:
        anomalies:
          $ref: '#/components/schemas/Anomalies'
          description: ' The list of anomalies that the analysis has found for this profile. '
        profileEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' The end time of the profile the analysis data is about. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
        profileStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' The start time of the profile the analysis data is about. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
        profilingGroupName:
          $ref: '#/components/schemas/ProfilingGroupName'
          description: The name of the profiling group the analysis data is about.
        recommendations:
          $ref: '#/components/schemas/Recommendations'
          description: The list of recommendations that the analysis found for this profile.
      description: The structure representing the GetRecommendationsResponse.
    ListFindingsReportsResponse:
      type: object
      required:
        - findingsReportSummaries
      properties:
        findingsReportSummaries:
          $ref: '#/components/schemas/FindingsReportSummaries'
          description: The list of analysis results summaries.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value to include in a future <code>ListFindingsReports</code> request. When the results of a <code>ListFindingsReports</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.'
      description: The structure representing the ListFindingsReportsResponse.
    ListProfileTimesResponse:
      type: object
      required:
        - profileTimes
      properties:
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value to include in a future <code>ListProfileTimes</code> request. When the results of a <code>ListProfileTimes</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
        profileTimes:
          $ref: '#/components/schemas/ProfileTimes'
          description: 'The list of start times of the available profiles for the aggregation period in the specified time range. '
      description: The structure representing the listProfileTimesResponse.
    ListProfilingGroupsResponse:
      type: object
      required:
        - profilingGroupNames
      properties:
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value to include in a future <code>ListProfilingGroups</code> request. When the results of a <code>ListProfilingGroups</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
        profilingGroupNames:
          $ref: '#/components/schemas/ProfilingGroupNames'
          description: ' A returned list of profiling group names. A list of the names is returned only if <code>includeDescription</code> is <code>false</code>, otherwise a list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"> <code>ProfilingGroupDescription</code> </a> objects is returned. '
        profilingGroups:
          $ref: '#/components/schemas/ProfilingGroupDescriptions'
          description: ' A returned list <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"> <code>ProfilingGroupDescription</code> </a> objects. A list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"> <code>ProfilingGroupDescription</code> </a> objects is returned only if <code>includeDescription</code> is <code>true</code>, otherwise a list of profiling group names is returned. '
      description: The structure representing the listProfilingGroupsResponse.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: ' The list of tags assigned to the specified resource. This is the list of tags returned in the response. '
    PostAgentProfileResponse:
      type: object
      properties: {}
      description: The structure representing the postAgentProfileResponse.
    PutPermissionResponse:
      type: object
      required:
        - policy
        - revisionId
      properties:
        policy:
          $ref: '#/components/schemas/String'
          description: ' The JSON-formatted resource-based policy on the profiling group that includes the added permissions. '
        revisionId:
          $ref: '#/components/schemas/RevisionId'
          description: ' A universally unique identifier (UUID) for the revision of the resource-based policy that includes the added permissions. The JSON-formatted policy is in the <code>policy</code> element of the response. '
      description: The structure representing the <code>putPermissionResponse</code>.
    Principal:
      type: string
    RemoveNotificationChannelResponse:
      type: object
      properties:
        notificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
          description: The new notification configuration for this profiling group.
      description: The structure representing the RemoveNotificationChannelResponse.
    RemovePermissionResponse:
      type: object
      required:
        - policy
        - revisionId
      properties:
        policy:
          $ref: '#/components/schemas/String'
          description: ' The JSON-formatted resource-based policy on the profiling group after the specified permissions were removed. '
        revisionId:
          $ref: '#/components/schemas/RevisionId'
          description: ' A universally unique identifier (UUID) for the revision of the resource-based policy after the specified permissions were removed. The updated JSON-formatted policy is in the <code>policy</code> element of the response. '
      description: The structure representing the <code>removePermissionResponse</code>.
    SubmitFeedbackResponse:
      type: object
      properties: {}
      description: The structure representing the SubmitFeedbackResponse.
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateProfilingGroupResponse:
      type: object
      required:
        - profilingGroup
      properties:
        profilingGroup:
          $ref: '#/components/schemas/ProfilingGroupDescription'
          description: ' A <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"> <code>ProfilingGroupDescription</code> </a> that contains information about the returned updated profiling group. '
      description: The structure representing the updateProfilingGroupResponse.
    ActionGroup:
      type: string
      enum:
        - agentPermissions
    Channels:
      type: array
      items:
        $ref: '#/components/schemas/Channel'
      minItems: 1
      maxItems: 2
    ProfilingGroupName:
      type: string
      pattern: '^[\w-]+$'
      minLength: 1
      maxLength: 255
    AddNotificationChannelsRequest:
      type: object
      required:
        - channels
      title: AddNotificationChannelsRequest
      properties:
        channels:
          $ref: '#/components/schemas/Channels'
          description: One or 2 channels to report to when anomalies are detected.
      description: The structure representing the AddNotificationChannelsRequest.
    NotificationConfiguration:
      type: object
      properties:
        channels:
          $ref: '#/components/schemas/Channels'
          description: List of up to two channels to be used for sending notifications for events detected from the application profile.
      description: The configuration for notifications stored for each profiling group. This includes up to to two channels and a list of event publishers associated with each channel.
    AgentParameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    Integer:
      type: integer
    AgentConfiguration:
      type: object
      required:
        - periodInSeconds
        - shouldProfile
      properties:
        agentParameters:
          $ref: '#/components/schemas/AgentParameters'
          description: '<p> Parameters used by the profiler. The valid parameters are: </p> <ul> <li> <p> <code>MaxStackDepth</code> - The maximum depth of the stacks in the code that is represented in the profile. For example, if CodeGuru Profiler finds a method <code>A</code>, which calls method <code>B</code>, which calls method <code>C</code>, which calls method <code>D</code>, then the depth is 4. If the <code>maxDepth</code> is set to 2, then the profiler evaluates <code>A</code> and <code>B</code>. </p> </li> <li> <p> <code>MemoryUsageLimitPercent</code> - The percentage of memory that is used by the profiler.</p> </li> <li> <p> <code>MinimumTimeForReportingInMilliseconds</code> - The minimum time in milliseconds between sending reports. </p> </li> <li> <p> <code>ReportingIntervalInMilliseconds</code> - The reporting interval in milliseconds used to report profiles. </p> </li> <li> <p> <code>SamplingIntervalInMilliseconds</code> - The sampling interval in milliseconds that is used to profile samples. </p> </li> </ul>'
        periodInSeconds:
          $ref: '#/components/schemas/Integer'
          description: ' How long a profiling agent should send profiling data using <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html"> <code>ConfigureAgent</code> </a>. For example, if this is set to 300, the profiling agent calls <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html"> <code>ConfigureAgent</code> </a> every 5 minutes to submit the profiled data collected during that period. '
        shouldProfile:
          $ref: '#/components/schemas/Boolean'
          description: ' A <code>Boolean</code> that specifies whether the profiling agent collects profiling data or not. Set to <code>true</code> to enable profiling. '
      description: ' The response of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html"> <code>ConfigureAgent</code> </a> that specifies if an agent profiles or not and for how long to return profiling data. '
    AgentOrchestrationConfig:
      type: object
      required:
        - profilingEnabled
      properties:
        profilingEnabled:
          $ref: '#/components/schemas/Boolean'
          description: ' A <code>Boolean</code> that specifies whether the profiling agent collects profiling data or not. Set to <code>true</code> to enable profiling. '
      description: ' Specifies whether profiling is enabled or disabled for a profiling group. It is used by <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html"> <code>ConfigureAgent</code> </a> to enable or disable profiling for a profiling group. '
    AgentParameterField:
      type: string
      enum:
        - SamplingIntervalInMilliseconds
        - ReportingIntervalInMilliseconds
        - MinimumTimeForReportingInMilliseconds
        - MemoryUsageLimitPercent
        - MaxStackDepth
    AgentProfile:
      type: string
    AggregatedProfile:
      type: string
    AggregationPeriod:
      type: string
      enum:
        - PT5M
        - PT1H
        - P1D
    Timestamp:
      type: string
      format: date-time
    AggregatedProfileTime:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/AggregationPeriod'
          description: <p> The aggregation period. This indicates the period during which an aggregation profile collects posted agent profiles for a profiling group. Use one of three valid durations that are specified using the ISO 8601 format. </p> <ul> <li> <p> <code>P1D</code> — 1 day </p> </li> <li> <p> <code>PT1H</code> — 1 hour </p> </li> <li> <p> <code>PT5M</code> — 5 minutes </p> </li> </ul>
        start:
          $ref: '#/components/schemas/Timestamp'
          description: '<p> The time that aggregation of posted agent profiles for a profiling group starts. The aggregation profile contains profiles posted by the agent starting at this time for an aggregation period specified by the <code>period</code> property of the <code>AggregatedProfileTime</code> object. </p> <p> Specify <code>start</code> using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. </p>'
      description: ' Specifies the aggregation period and aggregation start time for an aggregated profile. An aggregated profile is used to collect posted agent profiles during an aggregation period. There are three possible aggregation periods (1 day, 1 hour, or 5 minutes). '
    Anomaly:
      type: object
      required:
        - instances
        - metric
        - reason
      properties:
        instances:
          $ref: '#/components/schemas/AnomalyInstances'
          description: ' A list of the instances of the detected anomalies during the requested period. '
        metric:
          $ref: '#/components/schemas/Metric'
          description: ' Details about the metric that the analysis used when it detected the anomaly. The metric includes the name of the frame that was analyzed with the type and thread states used to derive the metric value for that frame. '
        reason:
          $ref: '#/components/schemas/String'
          description: The reason for which metric was flagged as anomalous.
      description: ' Details about an anomaly in a specific metric of application profile. The anomaly is detected using analysis of the metric data over a period of time. '
    Anomalies:
      type: array
      items:
        $ref: '#/components/schemas/Anomaly'
    AnomalyInstances:
      type: array
      items:
        $ref: '#/components/schemas/AnomalyInstance'
    Metric:
      type: object
      required:
        - frameName
        - threadStates
        - type
      properties:
        frameName:
          $ref: '#/components/schemas/String'
          description: ' The name of the method that appears as a frame in any stack in a profile. '
        threadStates:
          $ref: '#/components/schemas/Strings'
          description: ' The list of application runtime thread states that is used to calculate the metric value for the frame. '
        type:
          $ref: '#/components/schemas/MetricType'
          description: ' A type that specifies how a metric for a frame is analyzed. The supported value <code>AggregatedRelativeTotalTime</code> is an aggregation of the metric value for one frame that is calculated across the occurences of all frames in a profile.'
      description: ' Details about the metric that the analysis used when it detected the anomaly. The metric what is analyzed to create recommendations. It includes the name of the frame that was analyzed and the type and thread states used to derive the metric value for that frame. '
    UserFeedback:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/FeedbackType'
          description: Optional <code>Positive</code> or <code>Negative</code> feedback submitted by the user about whether the recommendation is useful or not.
      description: Feedback that can be submitted for each instance of an anomaly by the user. Feedback is be used for improvements in generating recommendations for the application.
    AnomalyInstance:
      type: object
      required:
        - id
        - startTime
      properties:
        endTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' The end time of the period during which the metric is flagged as anomalous. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
        id:
          $ref: '#/components/schemas/String'
          description: ' The universally unique identifier (UUID) of an instance of an anomaly in a metric. '
        startTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' The start time of the period during which the metric is flagged as anomalous. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
        userFeedback:
          $ref: '#/components/schemas/UserFeedback'
          description: Feedback type on a specific instance of anomaly submitted by the user.
      description: The specific duration in which the metric is flagged as anomalous.
    AnomalyInstanceId:
      type: string
      pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
    FrameMetrics:
      type: array
      items:
        $ref: '#/components/schemas/FrameMetric'
    Period:
      type: string
      minLength: 1
      maxLength: 64
    BatchGetFrameMetricDataRequest:
      type: object
      title: BatchGetFrameMetricDataRequest
      properties:
        frameMetrics:
          $ref: '#/components/schemas/FrameMetrics'
          description: ' The details of the metrics that are used to request a time series of values. The metric includes the name of the frame, the aggregation type to calculate the metric value for the frame, and the thread states to use to get the count for the metric value of the frame.'
      description: The structure representing the BatchGetFrameMetricDataRequest.
    ListOfTimestamps:
      type: array
      items:
        $ref: '#/components/schemas/TimestampStructure'
    FrameMetricData:
      type: array
      items:
        $ref: '#/components/schemas/FrameMetricDatum'
    UnprocessedEndTimeMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ListOfTimestamps'
    EventPublishers:
      type: array
      items:
        $ref: '#/components/schemas/EventPublisher'
      minItems: 1
      maxItems: 1
    ChannelId:
      type: string
      pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
    ChannelUri:
      type: string
      description: 'Channel URI uniquely identifies a Notification Channel. TopicArn is the uri for an SNS channel, emailId is uri for an email channel etc. Currently we only support SNS channels and thus required to be an ARN'
    ClientToken:
      type: string
      pattern: '^[\w-]+$'
      minLength: 1
      maxLength: 64
    ComputePlatform:
      type: string
      enum:
        - Default
        - AWSLambda
    FleetInstanceId:
      type: string
      minLength: 1
      maxLength: 255
    Metadata:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ConfigureAgentRequest:
      type: object
      title: ConfigureAgentRequest
      properties:
        fleetInstanceId:
          $ref: '#/components/schemas/FleetInstanceId'
          description: ' A universally unique identifier (UUID) for a profiling instance. For example, if the profiling instance is an Amazon EC2 instance, it is the instance ID. If it is an AWS Fargate container, it is the container''s task ID. '
        metadata:
          $ref: '#/components/schemas/Metadata'
          description: '<p> Metadata captured about the compute platform the agent is running on. It includes information about sampling and reporting. The valid fields are:</p> <ul> <li> <p> <code>COMPUTE_PLATFORM</code> - The compute platform on which the agent is running </p> </li> <li> <p> <code>AGENT_ID</code> - The ID for an agent instance. </p> </li> <li> <p> <code>AWS_REQUEST_ID</code> - The AWS request ID of a Lambda invocation. </p> </li> <li> <p> <code>EXECUTION_ENVIRONMENT</code> - The execution environment a Lambda function is running on. </p> </li> <li> <p> <code>LAMBDA_FUNCTION_ARN</code> - The Amazon Resource Name (ARN) that is used to invoke a Lambda function. </p> </li> <li> <p> <code>LAMBDA_MEMORY_LIMIT_IN_MB</code> - The memory allocated to a Lambda function. </p> </li> <li> <p> <code>LAMBDA_REMAINING_TIME_IN_MILLISECONDS</code> - The time in milliseconds before execution of a Lambda function times out. </p> </li> <li> <p> <code>LAMBDA_TIME_GAP_BETWEEN_INVOKES_IN_MILLISECONDS</code> - The time in milliseconds between two invocations of a Lambda function. </p> </li> <li> <p> <code>LAMBDA_PREVIOUS_EXECUTION_TIME_IN_MILLISECONDS</code> - The time in milliseconds for the previous Lambda invocation. </p> </li> </ul>'
      description: The structure representing the configureAgentRequest.
    TagsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    CreateProfilingGroupRequest:
      type: object
      required:
        - profilingGroupName
      title: CreateProfilingGroupRequest
      properties:
        agentOrchestrationConfig:
          $ref: '#/components/schemas/AgentOrchestrationConfig'
          description: ' Specifies whether profiling is enabled or disabled for the created profiling group. '
        computePlatform:
          $ref: '#/components/schemas/ComputePlatform'
          description: ' The compute platform of the profiling group. Use <code>AWSLambda</code> if your application runs on AWS Lambda. Use <code>Default</code> if your application runs on a compute platform that is not AWS Lambda, such an Amazon EC2 instance, an on-premises server, or a different platform. If not specified, <code>Default</code> is used. '
        profilingGroupName:
          $ref: '#/components/schemas/ProfilingGroupName'
          description: The name of the profiling group to create.
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: ' A list of tags to add to the created profiling group. '
      description: The structure representing the createProfiliingGroupRequest.
    ProfilingGroupDescription:
      type: object
      properties:
        agentOrchestrationConfig:
          $ref: '#/components/schemas/AgentOrchestrationConfig'
          description: ' An <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AgentOrchestrationConfig.html"> <code>AgentOrchestrationConfig</code> </a> object that indicates if the profiling group is enabled for profiled or not. '
        arn:
          $ref: '#/components/schemas/ProfilingGroupArn'
          description: The Amazon Resource Name (ARN) identifying the profiling group resource.
        computePlatform:
          $ref: '#/components/schemas/ComputePlatform'
          description: ' The compute platform of the profiling group. If it is set to <code>AWSLambda</code>, then the profiled application runs on AWS Lambda. If it is set to <code>Default</code>, then the profiled application runs on a compute platform that is not AWS Lambda, such an Amazon EC2 instance, an on-premises server, or a different platform. The default is <code>Default</code>. '
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time when the profiling group was created. Specify using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
        name:
          $ref: '#/components/schemas/ProfilingGroupName'
          description: The name of the profiling group.
        profilingStatus:
          $ref: '#/components/schemas/ProfilingStatus'
          description: ' A <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingStatus.html"> <code>ProfilingStatus</code> </a> object that includes information about the last time a profile agent pinged back, the last time a profile was received, and the aggregation period and start time for the most recent aggregated profile. '
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: ' A list of the tags that belong to this profiling group. '
        updatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: ' The date and time when the profiling group was last updated. Specify using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
      description: ' Contains information about a profiling group. '
    DeleteProfilingGroupRequest:
      type: object
      title: DeleteProfilingGroupRequest
      properties: {}
      description: The structure representing the deleteProfilingGroupRequest.
    DescribeProfilingGroupRequest:
      type: object
      title: DescribeProfilingGroupRequest
      properties: {}
      description: The structure representing the describeProfilingGroupRequest.
    Double:
      type: number
      format: double
    EventPublisher:
      type: string
      enum:
        - AnomalyDetection
    FeedbackType:
      type: string
      enum:
        - Positive
        - Negative
    FindingsReportId:
      type: string
      pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
    FindingsReportSummary:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/FindingsReportId'
          description: The universally unique identifier (UUID) of the recommendation report.
        profileEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' The end time of the period during which the metric is flagged as anomalous. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
        profileStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The start time of the profile the analysis data is about. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.'
        profilingGroupName:
          $ref: '#/components/schemas/String'
          description: The name of the profiling group that is associated with the analysis data.
        totalNumberOfFindings:
          $ref: '#/components/schemas/Integer'
          description: The total number of different recommendations that were found by the analysis.
      description: ' Information about potential recommendations that might be created from the analysis of profiling data. '
    FindingsReportSummaries:
      type: array
      items:
        $ref: '#/components/schemas/FindingsReportSummary'
    ThreadStates:
      type: array
      items:
        $ref: '#/components/schemas/String'
    MetricType:
      type: string
      enum:
        - AggregatedRelativeTotalTime
    FrameMetricDatum:
      type: object
      required:
        - frameMetric
        - values
      properties:
        frameMetric:
          $ref: '#/components/schemas/FrameMetric'
        values:
          $ref: '#/components/schemas/FrameMetricValues'
          description: ' A list of values that are associated with a frame metric. '
      description: ' Information about a frame metric and its values. '
    FrameMetricValues:
      type: array
      items:
        $ref: '#/components/schemas/FrameMetricValue'
    FrameMetricValue:
      type: number
      format: double
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    PaginationToken:
      type: string
      pattern: '^[\w-]+$'
      minLength: 1
      maxLength: 64
    GetFindingsReportAccountSummaryRequest:
      type: object
      title: GetFindingsReportAccountSummaryRequest
      properties: {}
      description: The structure representing the GetFindingsReportAccountSummaryRequest.
    GetNotificationConfigurationRequest:
      type: object
      title: GetNotificationConfigurationRequest
      properties: {}
      description: The structure representing the GetNotificationConfigurationRequest.
    GetPolicyRequest:
      type: object
      title: GetPolicyRequest
      properties: {}
      description: ' The structure representing the <code>getPolicyRequest</code>. '
    RevisionId:
      type: string
      pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
    MaxDepth:
      type: integer
      minimum: 1
      maximum: 10000
    GetProfileRequest:
      type: object
      title: GetProfileRequest
      properties: {}
      description: The structure representing the getProfileRequest.
    Locale:
      type: string
      description: 'BCP47 language code. Supported locales: de-DE, en-GB, en-US, es-ES, fr-FR, it-IT, ja-JP, ko-KR, pt-BR, zh-CN, zh-TW'
    GetRecommendationsRequest:
      type: object
      title: GetRecommendationsRequest
      properties: {}
      description: The structure representing the GetRecommendationsRequest.
    Recommendations:
      type: array
      items:
        $ref: '#/components/schemas/Recommendation'
    ListFindingsReportsRequest:
      type: object
      title: ListFindingsReportsRequest
      properties: {}
      description: The structure representing the ListFindingsReportsRequest.
    TimestampStructure:
      type: object
      required:
        - value
      properties:
        value:
          $ref: '#/components/schemas/Timestamp'
          description: ' A <code>Timestamp</code>. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
      description: ' A data type that contains a <code>Timestamp</code> object. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. '
    OrderBy:
      type: string
      enum:
        - TimestampDescending
        - TimestampAscending
    ListProfileTimesRequest:
      type: object
      title: ListProfileTimesRequest
      properties: {}
      description: The structure representing the listProfileTimesRequest.
    ProfileTimes:
      type: array
      items:
        $ref: '#/components/schemas/ProfileTime'
    ListProfilingGroupsRequest:
      type: object
      title: ListProfilingGroupsRequest
      properties: {}
      description: The structure representing the listProfilingGroupsRequest.
    ProfilingGroupNames:
      type: array
      items:
        $ref: '#/components/schemas/ProfilingGroupName'
    ProfilingGroupDescriptions:
      type: array
      items:
        $ref: '#/components/schemas/ProfilingGroupDescription'
    ProfilingGroupArn:
      type: string
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    Match:
      type: object
      properties:
        frameAddress:
          $ref: '#/components/schemas/String'
          description: The location in the profiling graph that contains a recommendation found during analysis.
        targetFramesIndex:
          $ref: '#/components/schemas/Integer'
          description: The target frame that triggered a match.
        thresholdBreachValue:
          $ref: '#/components/schemas/Double'
          description: The value in the profile data that exceeded the recommendation threshold.
      description: The part of a profile that contains a recommendation found during analysis.
    Matches:
      type: array
      items:
        $ref: '#/components/schemas/Match'
    MetadataField:
      type: string
      enum:
        - ComputePlatform
        - AgentId
        - AwsRequestId
        - ExecutionEnvironment
        - LambdaFunctionArn
        - LambdaMemoryLimitInMB
        - LambdaRemainingTimeInMilliseconds
        - LambdaTimeGapBetweenInvokesInMilliseconds
        - LambdaPreviousExecutionTimeInMilliseconds
    Strings:
      type: array
      items:
        $ref: '#/components/schemas/String'
    TargetFrames:
      type: array
      items:
        $ref: '#/components/schemas/TargetFrame'
    Percentage:
      type: number
      format: double
      minimum: 0
      maximum: 100
    Pattern:
      type: object
      properties:
        countersToAggregate:
          $ref: '#/components/schemas/Strings'
          description: ' A list of the different counters used to determine if there is a match. '
        description:
          $ref: '#/components/schemas/String'
          description: The description of the recommendation. This explains a potential inefficiency in a profiled application.
        id:
          $ref: '#/components/schemas/String'
          description: The universally unique identifier (UUID) of this pattern.
        name:
          $ref: '#/components/schemas/String'
          description: The name for this pattern.
        resolutionSteps:
          $ref: '#/components/schemas/String'
          description: ' A string that contains the steps recommended to address the potential inefficiency. '
        targetFrames:
          $ref: '#/components/schemas/TargetFrames'
          description: A list of frame names that were searched during the analysis that generated a recommendation.
        thresholdPercent:
          $ref: '#/components/schemas/Percentage'
          description: ' The percentage of time an application spends in one method that triggers a recommendation. The percentage of time is the same as the percentage of the total gathered sample counts during analysis. '
      description: ' A set of rules used to make a recommendation during an analysis. '
    PostAgentProfileRequest:
      type: object
      required:
        - agentProfile
      title: PostAgentProfileRequest
      properties:
        agentProfile:
          $ref: '#/components/schemas/AgentProfile'
          description: ' The submitted profiling data. '
      description: The structure representing the postAgentProfileRequest.
    Principals:
      type: array
      items:
        $ref: '#/components/schemas/Principal'
      minItems: 1
      maxItems: 50
    ProfileTime:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/Timestamp'
          description: 'The start time of a profile. It is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.'
      description: ' Contains the start time of a profile. '
    ProfilingStatus:
      type: object
      properties:
        latestAgentOrchestratedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when the profiling agent most recently pinged back. Specify using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.'
        latestAgentProfileReportedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when the most recent profile was received. Specify using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.'
        latestAggregatedProfile:
          $ref: '#/components/schemas/AggregatedProfileTime'
          description: ' An <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AggregatedProfileTime.html"> <code>AggregatedProfileTime</code> </a> object that contains the aggregation period and start time for an aggregated profile. '
      description: ' Profiling status includes information about the last time a profile agent pinged back, the last time a profile was received, and the aggregation period and start time for the most recent aggregated profile. '
    PutPermissionRequest:
      type: object
      required:
        - principals
      title: PutPermissionRequest
      properties:
        principals:
          $ref: '#/components/schemas/Principals'
          description: ' A list ARNs for the roles and users you want to grant access to the profiling group. Wildcards are not are supported in the ARNs. '
        revisionId:
          $ref: '#/components/schemas/RevisionId'
          description: ' A universally unique identifier (UUID) for the revision of the policy you are adding to the profiling group. Do not specify this when you add permissions to a profiling group for the first time. If a policy already exists on the profiling group, you must specify the <code>revisionId</code>. '
      description: The structure representing the <code>putPermissionRequest</code>.
    Recommendation:
      type: object
      required:
        - allMatchesCount
        - allMatchesSum
        - endTime
        - pattern
        - startTime
        - topMatches
      properties:
        allMatchesCount:
          $ref: '#/components/schemas/Integer'
          description: How many different places in the profile graph triggered a match.
        allMatchesSum:
          $ref: '#/components/schemas/Double'
          description: How much of the total sample count is potentially affected.
        endTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'End time of the profile that was used by this analysis. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.'
        pattern:
          $ref: '#/components/schemas/Pattern'
          description: The pattern that analysis recognized in the profile to make this recommendation.
        startTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The start time of the profile that was used by this analysis. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.'
        topMatches:
          $ref: '#/components/schemas/Matches'
          description: 'List of the matches with most impact. '
      description: A potential improvement that was found from analyzing the profiling data.
    RemoveNotificationChannelRequest:
      type: object
      title: RemoveNotificationChannelRequest
      properties: {}
      description: The structure representing the RemoveNotificationChannelRequest.
    RemovePermissionRequest:
      type: object
      title: RemovePermissionRequest
      properties: {}
      description: ' <pre><code> The structure representing the &lt;code&gt;removePermissionRequest&lt;/code&gt;.&lt;/p&gt; </code></pre>'
    SubmitFeedbackRequest:
      type: object
      required:
        - type
      title: SubmitFeedbackRequest
      properties:
        comment:
          $ref: '#/components/schemas/String'
          description: Optional feedback about this anomaly.
        type:
          $ref: '#/components/schemas/FeedbackType'
          description: ' The feedback tpye. Thee are two valid values, <code>Positive</code> and <code>Negative</code>. '
      description: The structure representing the SubmitFeedbackRequest.
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/String'
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          $ref: '#/components/schemas/TagsMap'
          description: ' The list of tags that are added to the specified resource. '
    TargetFrame:
      type: array
      items:
        $ref: '#/components/schemas/String'
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateProfilingGroupRequest:
      type: object
      required:
        - agentOrchestrationConfig
      title: UpdateProfilingGroupRequest
      properties:
        agentOrchestrationConfig:
          $ref: '#/components/schemas/AgentOrchestrationConfig'
          description: ' Specifies whether profiling is enabled or disabled for a profiling group. '
      description: The structure representing the updateProfilingGroupRequest.
security:
  - hmac: []
