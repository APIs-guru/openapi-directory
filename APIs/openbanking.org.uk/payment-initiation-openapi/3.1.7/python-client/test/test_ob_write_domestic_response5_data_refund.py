# coding: utf-8

"""
    Payment Initiation API

    Swagger for Payment Initiation API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_write_domestic_response5_data_refund import OBWriteDomesticResponse5DataRefund

class TestOBWriteDomesticResponse5DataRefund(unittest.TestCase):
    """OBWriteDomesticResponse5DataRefund unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBWriteDomesticResponse5DataRefund:
        """Test OBWriteDomesticResponse5DataRefund
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBWriteDomesticResponse5DataRefund`
        """
        model = OBWriteDomesticResponse5DataRefund()
        if include_optional:
            return OBWriteDomesticResponse5DataRefund(
                account = openapi_client.models.ob_write_domestic_response5_data_refund_account.OBWriteDomesticResponse5_Data_Refund_Account(
                    identification = '0', 
                    name = '0', 
                    scheme_name = '', 
                    secondary_identification = '0', )
            )
        else:
            return OBWriteDomesticResponse5DataRefund(
                account = openapi_client.models.ob_write_domestic_response5_data_refund_account.OBWriteDomesticResponse5_Data_Refund_Account(
                    identification = '0', 
                    name = '0', 
                    scheme_name = '', 
                    secondary_identification = '0', ),
        )
        """

    def testOBWriteDomesticResponse5DataRefund(self):
        """Test OBWriteDomesticResponse5DataRefund"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
