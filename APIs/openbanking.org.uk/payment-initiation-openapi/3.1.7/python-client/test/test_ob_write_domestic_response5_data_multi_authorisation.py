# coding: utf-8

"""
    Payment Initiation API

    Swagger for Payment Initiation API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_write_domestic_response5_data_multi_authorisation import OBWriteDomesticResponse5DataMultiAuthorisation

class TestOBWriteDomesticResponse5DataMultiAuthorisation(unittest.TestCase):
    """OBWriteDomesticResponse5DataMultiAuthorisation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBWriteDomesticResponse5DataMultiAuthorisation:
        """Test OBWriteDomesticResponse5DataMultiAuthorisation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBWriteDomesticResponse5DataMultiAuthorisation`
        """
        model = OBWriteDomesticResponse5DataMultiAuthorisation()
        if include_optional:
            return OBWriteDomesticResponse5DataMultiAuthorisation(
                expiration_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_update_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                number_received = 56,
                number_required = 56,
                status = 'Authorised'
            )
        else:
            return OBWriteDomesticResponse5DataMultiAuthorisation(
                status = 'Authorised',
        )
        """

    def testOBWriteDomesticResponse5DataMultiAuthorisation(self):
        """Test OBWriteDomesticResponse5DataMultiAuthorisation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
