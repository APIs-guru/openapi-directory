# coding: utf-8

"""
    Payment Initiation API

    Swagger for Payment Initiation API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_write_domestic_scheduled_consent_response5 import OBWriteDomesticScheduledConsentResponse5

class TestOBWriteDomesticScheduledConsentResponse5(unittest.TestCase):
    """OBWriteDomesticScheduledConsentResponse5 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBWriteDomesticScheduledConsentResponse5:
        """Test OBWriteDomesticScheduledConsentResponse5
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBWriteDomesticScheduledConsentResponse5`
        """
        model = OBWriteDomesticScheduledConsentResponse5()
        if include_optional:
            return OBWriteDomesticScheduledConsentResponse5(
                data = openapi_client.models.ob_write_domestic_scheduled_consent_response5_data.OBWriteDomesticScheduledConsentResponse5_Data(
                    authorisation = openapi_client.models.ob_write_domestic_consent4_data_authorisation.OBWriteDomesticConsent4_Data_Authorisation(
                        authorisation_type = 'Any', 
                        completion_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    charges = [
                        openapi_client.models.ob_write_domestic_consent_response5_data_charges_inner.OBWriteDomesticConsentResponse5_Data_Charges_inner(
                            amount = openapi_client.models.ob_active_or_historic_currency_and_amount.OBActiveOrHistoricCurrencyAndAmount(
                                amount = '80728.8001', 
                                currency = 'AEI', ), 
                            charge_bearer = 'BorneByCreditor', 
                            type = '', )
                        ], 
                    consent_id = '0', 
                    creation_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    cut_off_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    debtor = openapi_client.models.ob_cash_account_debtor4.OBCashAccountDebtor4(
                        identification = '', 
                        name = '', 
                        scheme_name = '', 
                        secondary_identification = '', ), 
                    expected_execution_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    expected_settlement_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    initiation = openapi_client.models.ob_write_domestic_scheduled2_data_initiation.OBWriteDomesticScheduled2_Data_Initiation(
                        creditor_account = openapi_client.models.ob_write_domestic2_data_initiation_creditor_account.OBWriteDomestic2_Data_Initiation_CreditorAccount(
                            identification = '0', 
                            name = '0', 
                            scheme_name = '', 
                            secondary_identification = '0', ), 
                        creditor_postal_address = openapi_client.models.ob_postal_address6.OBPostalAddress6(
                            address_line = [
                                '0'
                                ], 
                            address_type = 'Business', 
                            building_number = '0', 
                            country = 'AE', 
                            country_sub_division = '0', 
                            department = '0', 
                            post_code = '0', 
                            street_name = '0', 
                            sub_department = '0', 
                            town_name = '0', ), 
                        debtor_account = openapi_client.models.ob_write_domestic2_data_initiation_debtor_account.OBWriteDomestic2_Data_Initiation_DebtorAccount(
                            identification = '0', 
                            name = '0', 
                            scheme_name = '', ), 
                        end_to_end_identification = '0', 
                        instructed_amount = openapi_client.models.ob_write_domestic2_data_initiation_instructed_amount.OBWriteDomestic2_Data_Initiation_InstructedAmount(
                            amount = '80728.8001', 
                            currency = 'AEI', ), 
                        instruction_identification = '0', 
                        local_instrument = '', 
                        remittance_information = openapi_client.models.ob_write_domestic2_data_initiation_remittance_information.OBWriteDomestic2_Data_Initiation_RemittanceInformation(
                            reference = '0', 
                            unstructured = '0', ), 
                        requested_execution_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        supplementary_data = { }, ), 
                    permission = 'Create', 
                    read_refund_account = 'false', 
                    sca_support_data = openapi_client.models.obsca_support_data1.OBSCASupportData1(
                        applied_authentication_approach = 'CA', 
                        reference_payment_order_id = '0', 
                        requested_sca_exemption_type = 'BillPayment', ), 
                    status = 'Authorised', 
                    status_update_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                links = openapi_client.models.links.Links(
                    first = '', 
                    last = '', 
                    next = '', 
                    prev = '', 
                    self = '', ),
                meta = openapi_client.models.meta_data.MetaData(
                    first_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    total_pages = 56, ),
                risk = openapi_client.models.ob_risk1.OBRisk1(
                    delivery_address = openapi_client.models.ob_risk1_delivery_address.OBRisk1_DeliveryAddress(
                        address_line = [
                            '0'
                            ], 
                        building_number = '0', 
                        country = 'AE', 
                        country_sub_division = '0', 
                        post_code = '0', 
                        street_name = '0', 
                        town_name = '0', ), 
                    merchant_category_code = '012', 
                    merchant_customer_identification = '0', 
                    payment_context_code = 'BillPayment', )
            )
        else:
            return OBWriteDomesticScheduledConsentResponse5(
                data = openapi_client.models.ob_write_domestic_scheduled_consent_response5_data.OBWriteDomesticScheduledConsentResponse5_Data(
                    authorisation = openapi_client.models.ob_write_domestic_consent4_data_authorisation.OBWriteDomesticConsent4_Data_Authorisation(
                        authorisation_type = 'Any', 
                        completion_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    charges = [
                        openapi_client.models.ob_write_domestic_consent_response5_data_charges_inner.OBWriteDomesticConsentResponse5_Data_Charges_inner(
                            amount = openapi_client.models.ob_active_or_historic_currency_and_amount.OBActiveOrHistoricCurrencyAndAmount(
                                amount = '80728.8001', 
                                currency = 'AEI', ), 
                            charge_bearer = 'BorneByCreditor', 
                            type = '', )
                        ], 
                    consent_id = '0', 
                    creation_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    cut_off_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    debtor = openapi_client.models.ob_cash_account_debtor4.OBCashAccountDebtor4(
                        identification = '', 
                        name = '', 
                        scheme_name = '', 
                        secondary_identification = '', ), 
                    expected_execution_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    expected_settlement_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    initiation = openapi_client.models.ob_write_domestic_scheduled2_data_initiation.OBWriteDomesticScheduled2_Data_Initiation(
                        creditor_account = openapi_client.models.ob_write_domestic2_data_initiation_creditor_account.OBWriteDomestic2_Data_Initiation_CreditorAccount(
                            identification = '0', 
                            name = '0', 
                            scheme_name = '', 
                            secondary_identification = '0', ), 
                        creditor_postal_address = openapi_client.models.ob_postal_address6.OBPostalAddress6(
                            address_line = [
                                '0'
                                ], 
                            address_type = 'Business', 
                            building_number = '0', 
                            country = 'AE', 
                            country_sub_division = '0', 
                            department = '0', 
                            post_code = '0', 
                            street_name = '0', 
                            sub_department = '0', 
                            town_name = '0', ), 
                        debtor_account = openapi_client.models.ob_write_domestic2_data_initiation_debtor_account.OBWriteDomestic2_Data_Initiation_DebtorAccount(
                            identification = '0', 
                            name = '0', 
                            scheme_name = '', ), 
                        end_to_end_identification = '0', 
                        instructed_amount = openapi_client.models.ob_write_domestic2_data_initiation_instructed_amount.OBWriteDomestic2_Data_Initiation_InstructedAmount(
                            amount = '80728.8001', 
                            currency = 'AEI', ), 
                        instruction_identification = '0', 
                        local_instrument = '', 
                        remittance_information = openapi_client.models.ob_write_domestic2_data_initiation_remittance_information.OBWriteDomestic2_Data_Initiation_RemittanceInformation(
                            reference = '0', 
                            unstructured = '0', ), 
                        requested_execution_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        supplementary_data = { }, ), 
                    permission = 'Create', 
                    read_refund_account = 'false', 
                    sca_support_data = openapi_client.models.obsca_support_data1.OBSCASupportData1(
                        applied_authentication_approach = 'CA', 
                        reference_payment_order_id = '0', 
                        requested_sca_exemption_type = 'BillPayment', ), 
                    status = 'Authorised', 
                    status_update_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                risk = openapi_client.models.ob_risk1.OBRisk1(
                    delivery_address = openapi_client.models.ob_risk1_delivery_address.OBRisk1_DeliveryAddress(
                        address_line = [
                            '0'
                            ], 
                        building_number = '0', 
                        country = 'AE', 
                        country_sub_division = '0', 
                        post_code = '0', 
                        street_name = '0', 
                        town_name = '0', ), 
                    merchant_category_code = '012', 
                    merchant_customer_identification = '0', 
                    payment_context_code = 'BillPayment', ),
        )
        """

    def testOBWriteDomesticScheduledConsentResponse5(self):
        """Test OBWriteDomesticScheduledConsentResponse5"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
