# coding: utf-8

"""
    Payment Initiation API

    Swagger for Payment Initiation API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_write_file_response3_data import OBWriteFileResponse3Data

class TestOBWriteFileResponse3Data(unittest.TestCase):
    """OBWriteFileResponse3Data unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBWriteFileResponse3Data:
        """Test OBWriteFileResponse3Data
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBWriteFileResponse3Data`
        """
        model = OBWriteFileResponse3Data()
        if include_optional:
            return OBWriteFileResponse3Data(
                charges = [
                    openapi_client.models.ob_write_domestic_consent_response5_data_charges_inner.OBWriteDomesticConsentResponse5_Data_Charges_inner(
                        amount = openapi_client.models.ob_active_or_historic_currency_and_amount.OBActiveOrHistoricCurrencyAndAmount(
                            amount = '80728.8001', 
                            currency = 'AEI', ), 
                        charge_bearer = 'BorneByCreditor', 
                        type = '', )
                    ],
                consent_id = '0',
                creation_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                debtor = openapi_client.models.ob_cash_account_debtor4.OBCashAccountDebtor4(
                    identification = '', 
                    name = '', 
                    scheme_name = '', 
                    secondary_identification = '', ),
                file_payment_id = '0',
                initiation = openapi_client.models.ob_write_file2_data_initiation.OBWriteFile2_Data_Initiation(
                    control_sum = 1.337, 
                    debtor_account = openapi_client.models.ob_write_domestic2_data_initiation_debtor_account.OBWriteDomestic2_Data_Initiation_DebtorAccount(
                        identification = '0', 
                        name = '0', 
                        scheme_name = '', 
                        secondary_identification = '0', ), 
                    file_hash = '0', 
                    file_reference = '0', 
                    file_type = '', 
                    local_instrument = '', 
                    number_of_transactions = '480728', 
                    remittance_information = openapi_client.models.ob_write_domestic2_data_initiation_remittance_information.OBWriteDomestic2_Data_Initiation_RemittanceInformation(
                        reference = '0', 
                        unstructured = '0', ), 
                    requested_execution_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    supplementary_data = { }, ),
                multi_authorisation = openapi_client.models.ob_write_domestic_response5_data_multi_authorisation.OBWriteDomesticResponse5_Data_MultiAuthorisation(
                    expiration_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_update_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    number_received = 56, 
                    number_required = 56, 
                    status = 'Authorised', ),
                status = 'InitiationCompleted',
                status_update_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return OBWriteFileResponse3Data(
                consent_id = '0',
                creation_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                file_payment_id = '0',
                initiation = openapi_client.models.ob_write_file2_data_initiation.OBWriteFile2_Data_Initiation(
                    control_sum = 1.337, 
                    debtor_account = openapi_client.models.ob_write_domestic2_data_initiation_debtor_account.OBWriteDomestic2_Data_Initiation_DebtorAccount(
                        identification = '0', 
                        name = '0', 
                        scheme_name = '', 
                        secondary_identification = '0', ), 
                    file_hash = '0', 
                    file_reference = '0', 
                    file_type = '', 
                    local_instrument = '', 
                    number_of_transactions = '480728', 
                    remittance_information = openapi_client.models.ob_write_domestic2_data_initiation_remittance_information.OBWriteDomestic2_Data_Initiation_RemittanceInformation(
                        reference = '0', 
                        unstructured = '0', ), 
                    requested_execution_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    supplementary_data = { }, ),
                status = 'InitiationCompleted',
                status_update_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testOBWriteFileResponse3Data(self):
        """Test OBWriteFileResponse3Data"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
