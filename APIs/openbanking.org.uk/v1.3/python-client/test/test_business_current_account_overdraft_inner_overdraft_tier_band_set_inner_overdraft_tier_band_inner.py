# coding: utf-8

"""
    Open Data API

    Latest Swagger specification for OpenData

    The version of the OpenAPI document: v1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.business_current_account_overdraft_inner_overdraft_tier_band_set_inner_overdraft_tier_band_inner import BusinessCurrentAccountOverdraftInnerOverdraftTierBandSetInnerOverdraftTierBandInner

class TestBusinessCurrentAccountOverdraftInnerOverdraftTierBandSetInnerOverdraftTierBandInner(unittest.TestCase):
    """BusinessCurrentAccountOverdraftInnerOverdraftTierBandSetInnerOverdraftTierBandInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BusinessCurrentAccountOverdraftInnerOverdraftTierBandSetInnerOverdraftTierBandInner:
        """Test BusinessCurrentAccountOverdraftInnerOverdraftTierBandSetInnerOverdraftTierBandInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BusinessCurrentAccountOverdraftInnerOverdraftTierBandSetInnerOverdraftTierBandInner`
        """
        model = BusinessCurrentAccountOverdraftInnerOverdraftTierBandSetInnerOverdraftTierBandInner()
        if include_optional:
            return BusinessCurrentAccountOverdraftInnerOverdraftTierBandSetInnerOverdraftTierBandInner(
                ear = '-807.8',
                fees_and_charges = [
                    openapi_client.models.business_current_account_overdraft_inner_fees_and_charges_inner.Business_current_account_Overdraft_inner_FeesAndCharges_inner(
                        fee_charge_amount = '-80728.8', 
                        fee_charge_application_frequency = 'AcademicTerm', 
                        fee_charge_calculation_frequency = 'AcademicTerm', 
                        fee_charge_other_application_frequency = openapi_client.models.business_current_account_overdraft_inner_fees_and_charges_inner_fee_charge_other_application_frequency.Business_current_account_Overdraft_inner_FeesAndCharges_inner_FeeChargeOtherApplicationFrequency(
                            code = '0123', 
                            description = '', 
                            name = '0', ), 
                        fee_charge_other_calculation_frequency = openapi_client.models.business_current_account_overdraft_inner_fees_and_charges_inner_fee_charge_other_application_frequency.Business_current_account_Overdraft_inner_FeesAndCharges_inner_FeeChargeOtherApplicationFrequency(
                            code = '0123', 
                            description = '', 
                            name = '0', ), 
                        fee_charge_other_type = , 
                        fee_charge_rate = '-807.8', 
                        fee_charge_rate_other_type = , 
                        fee_charge_rate_type = 'Gross', 
                        fee_charge_type = 'Periodic', )
                    ],
                notes = '',
                tier_band_identification = '',
                tier_value_maximum = '0',
                tier_value_minimum = '-80728.8'
            )
        else:
            return BusinessCurrentAccountOverdraftInnerOverdraftTierBandSetInnerOverdraftTierBandInner(
                tier_value_maximum = '0',
                tier_value_minimum = '-80728.8',
        )
        """

    def testBusinessCurrentAccountOverdraftInnerOverdraftTierBandSetInnerOverdraftTierBandInner(self):
        """Test BusinessCurrentAccountOverdraftInnerOverdraftTierBandSetInnerOverdraftTierBandInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
