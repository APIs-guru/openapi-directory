# coding: utf-8

"""
    Open Data API

    Latest Swagger specification for OpenData

    The version of the OpenAPI document: v1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.atms_get200_response import AtmsGet200Response

class TestAtmsGet200Response(unittest.TestCase):
    """AtmsGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AtmsGet200Response:
        """Test AtmsGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AtmsGet200Response`
        """
        model = AtmsGet200Response()
        if include_optional:
            return AtmsGet200Response(
                data = [
                    openapi_client.models.atm.ATM(
                        atmid = '0', 
                        atm_services = [
                            'Balance'
                            ], 
                        accessibility_types = [
                            'AudioCashMachine'
                            ], 
                        additional_atm_services = [
                            '0'
                            ], 
                        address = openapi_client.models.atm_address.ATM_Address(
                            building_number_or_name = '0', 
                            country = 'AE', 
                            country_sub_division = '0', 
                            optional_address_field = '0', 
                            post_code = '0', 
                            street_name = '0', 
                            town_name = '0', ), 
                        branch_identification = '0', 
                        currency = [
                            'AEI'
                            ], 
                        geographic_location = openapi_client.models.atm_geographic_location.ATM_GeographicLocation(
                            latitude = '-807.88', 
                            longitude = '-807.88', ), 
                        location_category = 'Airport', 
                        minimum_value_dispensed = '£5', 
                        organisation = openapi_client.models.atm_organisation.ATM_Organisation(
                            brand = openapi_client.models.atm_organisation_brand.ATM_Organisation_Brand(
                                trademark_id = '0', 
                                trademark_ipo_code = 'UK', ), 
                            parent_organisation = openapi_client.models.atm_organisation_parent_organisation.ATM_Organisation_ParentOrganisation(
                                bic = 'AEIOTGEIC0L', 
                                lei = 'W8Q6ZGCKEC0L3O4GI779', 
                                organisation_name = openapi_client.models.atm_organisation_parent_organisation_organisation_name.ATM_Organisation_ParentOrganisation_OrganisationName(
                                    legal_name = '0', ), ), ), 
                        site_id = '0', 
                        site_name = '0', 
                        supported_languages = [
                            ''
                            ], )
                    ],
                meta = openapi_client.models.meta_data.Meta data(
                    agreement = 'Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions', 
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    license = 'https://www.openbanking.org.uk/open-licence', 
                    terms_of_use = 'https://www.openbanking.org.uk/terms', 
                    total_results = 56, )
            )
        else:
            return AtmsGet200Response(
                data = [
                    openapi_client.models.atm.ATM(
                        atmid = '0', 
                        atm_services = [
                            'Balance'
                            ], 
                        accessibility_types = [
                            'AudioCashMachine'
                            ], 
                        additional_atm_services = [
                            '0'
                            ], 
                        address = openapi_client.models.atm_address.ATM_Address(
                            building_number_or_name = '0', 
                            country = 'AE', 
                            country_sub_division = '0', 
                            optional_address_field = '0', 
                            post_code = '0', 
                            street_name = '0', 
                            town_name = '0', ), 
                        branch_identification = '0', 
                        currency = [
                            'AEI'
                            ], 
                        geographic_location = openapi_client.models.atm_geographic_location.ATM_GeographicLocation(
                            latitude = '-807.88', 
                            longitude = '-807.88', ), 
                        location_category = 'Airport', 
                        minimum_value_dispensed = '£5', 
                        organisation = openapi_client.models.atm_organisation.ATM_Organisation(
                            brand = openapi_client.models.atm_organisation_brand.ATM_Organisation_Brand(
                                trademark_id = '0', 
                                trademark_ipo_code = 'UK', ), 
                            parent_organisation = openapi_client.models.atm_organisation_parent_organisation.ATM_Organisation_ParentOrganisation(
                                bic = 'AEIOTGEIC0L', 
                                lei = 'W8Q6ZGCKEC0L3O4GI779', 
                                organisation_name = openapi_client.models.atm_organisation_parent_organisation_organisation_name.ATM_Organisation_ParentOrganisation_OrganisationName(
                                    legal_name = '0', ), ), ), 
                        site_id = '0', 
                        site_name = '0', 
                        supported_languages = [
                            ''
                            ], )
                    ],
                meta = openapi_client.models.meta_data.Meta data(
                    agreement = 'Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions', 
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    license = 'https://www.openbanking.org.uk/open-licence', 
                    terms_of_use = 'https://www.openbanking.org.uk/terms', 
                    total_results = 56, ),
        )
        """

    def testAtmsGet200Response(self):
        """Test AtmsGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
