# coding: utf-8

"""
    Open Data API

    Latest Swagger specification for OpenData

    The version of the OpenAPI document: v1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.unsecured_sme_loans_get200_response import UnsecuredSmeLoansGet200Response

class TestUnsecuredSmeLoansGet200Response(unittest.TestCase):
    """UnsecuredSmeLoansGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UnsecuredSmeLoansGet200Response:
        """Test UnsecuredSmeLoansGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UnsecuredSmeLoansGet200Response`
        """
        model = UnsecuredSmeLoansGet200Response()
        if include_optional:
            return UnsecuredSmeLoansGet200Response(
                data = [
                    openapi_client.models._unsecured_sme_loans_get_200_response_data_inner._unsecured_sme_loans_get_200_response_data_inner(
                        arrears_treatment = '', 
                        benefits = openapi_client.models.business_current_account_benefits.Business_current_account_Benefits(
                            benefit = True, 
                            benefit_group = [
                                openapi_client.models.business_current_account_benefits_benefit_group_inner.Business_current_account_Benefits_BenefitGroup_inner(
                                    benefit_item = openapi_client.models.business_current_account_benefits_benefit_group_inner_benefit_item.Business_current_account_Benefits_BenefitGroup_inner_BenefitItem(
                                        benefit_detail = [
                                            openapi_client.models.business_current_account_benefits_benefit_group_inner_benefit_item_benefit_detail_inner.Business_current_account_Benefits_BenefitGroup_inner_BenefitItem_BenefitDetail_inner(
                                                benefit_description = '', 
                                                benefit_id = '', 
                                                benefit_name = '', 
                                                benefit_type = '', 
                                                benefit_value = '', 
                                                counter = 56, 
                                                criteria_type = [
                                                    'CashDeposit'
                                                    ], 
                                                default_to_accounts = True, 
                                                maximum_criteria = '-80728.8', 
                                                minimum_criteria = '-80728.8', 
                                                promotion_end_date = '0480-08-03', 
                                                promotion_start_date = '0480-08-03', )
                                            ], 
                                        date_of_change = '0480-08-03', 
                                        length_promotional_in_days = 56, 
                                        start_promotion_or_future_terms = '0480-08-03', 
                                        stop_promotion_or_future_terms = '0480-08-03', ), 
                                    benefit_sub_type = 'FutureMultipleTerms', )
                                ], ), 
                        currency = [
                            'AEI'
                            ], 
                        customer_access_channels = [
                            'Branch'
                            ], 
                        eligibility = openapi_client.models.business_current_account_eligibility.Business_current_account_Eligibility(
                            age_restricted = True, 
                            annual_business_turnover = '-80728.8', 
                            annual_business_turnover_currency = 'AEI', 
                            description = '', 
                            eligibility_name = '', 
                            eligibility_notes = '', 
                            eligibility_type = 'AnyBusinessCustomer', 
                            income_condition = '', 
                            income_turnover_related = True, 
                            marketing_eligibility = [
                                'ExistingCustomers'
                                ], 
                            max_number_of_accounts = '', 
                            maximum_age = 56, 
                            maximum_age_to_open = 56, 
                            maximum_opening_amount = True, 
                            min_income_turnover_paid_into_account = 56, 
                            minimum_age = 56, 
                            minimum_deposit = True, 
                            minimum_income_frequency = 'AcademicTerm', 
                            minimum_income_turnover_amount = '-80728.8', 
                            minimum_income_turnover_currency = 'AEI', 
                            minimum_operating_balance = '-80728.8', 
                            minimum_operating_balance_currency = 'AEI', 
                            minimum_operating_balance_exists = True, 
                            opening_deposit_maximum_amount = '-80728.8', 
                            opening_deposit_maximum_currency = 'AEI', 
                            opening_deposit_minimum = '-80728.8', 
                            opening_deposit_minimum_currency = 'AEI', 
                            other_financial_holding_required = True, 
                            previous_bankruptcy = True, 
                            residency_restricted = True, 
                            residency_restricted_region = 'UK', 
                            single_joint_income = 'Joint', 
                            third_sector_organisations = True, ), 
                        fees_and_charges = [
                            openapi_client.models.business_current_account_fees_and_charges_inner.Business_current_account_FeesAndCharges_inner(
                                fees = openapi_client.models.business_current_account_fees_and_charges_inner_fees.Business_current_account_FeesAndCharges_inner_Fees(
                                    date_of_change = '0480-08-03', 
                                    fee_details = [
                                        openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner(
                                            fee_detail = openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner_fee_detail.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner_FeeDetail(
                                                date_of_change = '0480-08-03', 
                                                fee_sub_details = openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner_fee_detail_fee_sub_details.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner_FeeDetail_FeeSubDetails(
                                                    fee_amount = '-80728.8', 
                                                    fee_frequency = 'AcademicTerm', 
                                                    fee_higher_tier = 56, 
                                                    fee_lower_tier = 56, 
                                                    fee_max = '-80728.8', 
                                                    fee_min = '-80728.8', 
                                                    fee_rate = '-807.8', 
                                                    fees_and_charges_notes = '', 
                                                    negotiable = True, 
                                                    representative_rate = '-807.8', ), 
                                                fee_type = 'Other', 
                                                length_promotional_in_days = 56, 
                                                other = '', 
                                                start_promotion_or_future_terms = '0480-08-03', 
                                                stop_promotion_or_future_terms = '0480-08-03', ), 
                                            fee_sub_type = 'FutureMultipleTerms', )
                                        ], 
                                    fee_higher_tier = 56, 
                                    fee_lower_tier = 56, 
                                    length_promotional_in_days = 56, 
                                    start_promotion_or_future_terms = '0480-08-03', 
                                    stop_promotion_or_future_terms = '0480-08-03', ), 
                                product_state = 'FutureMultipleTerms', )
                            ], 
                        loan_item = [
                            openapi_client.models._unsecured_sme_loans_get_200_response_data_inner_loan_item_inner._unsecured_sme_loans_get_200_response_data_inner_LoanItem_inner(
                                cca_regulated_entity = True, 
                                date_of_change = '0480-08-03', 
                                is_a_low_interest_repayment_start_possible = True, 
                                is_this_an_interest_only_loan = True, 
                                length_promotional_in_days = 56, 
                                loan_pricing = [
                                    openapi_client.models._unsecured_sme_loans_get_200_response_data_inner_loan_item_inner_loan_pricing_inner._unsecured_sme_loans_get_200_response_data_inner_LoanItem_inner_LoanPricing_inner(
                                        indicative_rate = '', 
                                        loan_length_increment = '1 year', 
                                        loan_length_increment_lower = 56, 
                                        loan_length_increment_upper = 56, 
                                        loan_size_band_lower = '-80728.8', 
                                        loan_size_band_upper = '-80728.8', 
                                        negotiable = True, 
                                        rate_comparison_type = 'APR', 
                                        repayment_frequency = [
                                            'Daily'
                                            ], 
                                        size_increment = '£5000', )
                                    ], 
                                product_state = 'FutureMultipleTerms', 
                                start_promotion_or_future_terms = '0480-08-03', 
                                stop_promotion_or_future_terms = '0480-08-03', 
                                will_the_loan_be_paid_in_tranche_drawdowns = True, )
                            ], 
                        maximum_loan_amount = '-80728.8', 
                        maximum_loan_term = 56, 
                        minimum_loan_amount = '-80728.8', 
                        minimum_loan_term = 56, 
                        organisation = openapi_client.models.atm_organisation.ATM_Organisation(
                            brand = openapi_client.models.atm_organisation_brand.ATM_Organisation_Brand(
                                trademark_id = '0', 
                                trademark_ipo_code = 'UK', ), 
                            parent_organisation = openapi_client.models.atm_organisation_parent_organisation.ATM_Organisation_ParentOrganisation(
                                bic = 'AEIOTGEIC0L', 
                                lei = 'W8Q6ZGCKEC0L3O4GI779', 
                                organisation_name = openapi_client.models.atm_organisation_parent_organisation_organisation_name.ATM_Organisation_ParentOrganisation_OrganisationName(
                                    legal_name = '0', ), ), ), 
                        payment_holiday = True, 
                        product_description = '', 
                        product_identifier = '', 
                        product_name = '', 
                        product_segment = [
                            'AgricultureSector'
                            ], 
                        product_type_name = 'FlexibleBusinessLoan', 
                        product_url = [
                            ''
                            ], 
                        tsand_cs = [
                            ''
                            ], )
                    ],
                meta = openapi_client.models.meta_data.Meta data(
                    agreement = 'Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions', 
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    license = 'https://www.openbanking.org.uk/open-licence', 
                    terms_of_use = 'https://www.openbanking.org.uk/terms', 
                    total_results = 56, )
            )
        else:
            return UnsecuredSmeLoansGet200Response(
                data = [
                    openapi_client.models._unsecured_sme_loans_get_200_response_data_inner._unsecured_sme_loans_get_200_response_data_inner(
                        arrears_treatment = '', 
                        benefits = openapi_client.models.business_current_account_benefits.Business_current_account_Benefits(
                            benefit = True, 
                            benefit_group = [
                                openapi_client.models.business_current_account_benefits_benefit_group_inner.Business_current_account_Benefits_BenefitGroup_inner(
                                    benefit_item = openapi_client.models.business_current_account_benefits_benefit_group_inner_benefit_item.Business_current_account_Benefits_BenefitGroup_inner_BenefitItem(
                                        benefit_detail = [
                                            openapi_client.models.business_current_account_benefits_benefit_group_inner_benefit_item_benefit_detail_inner.Business_current_account_Benefits_BenefitGroup_inner_BenefitItem_BenefitDetail_inner(
                                                benefit_description = '', 
                                                benefit_id = '', 
                                                benefit_name = '', 
                                                benefit_type = '', 
                                                benefit_value = '', 
                                                counter = 56, 
                                                criteria_type = [
                                                    'CashDeposit'
                                                    ], 
                                                default_to_accounts = True, 
                                                maximum_criteria = '-80728.8', 
                                                minimum_criteria = '-80728.8', 
                                                promotion_end_date = '0480-08-03', 
                                                promotion_start_date = '0480-08-03', )
                                            ], 
                                        date_of_change = '0480-08-03', 
                                        length_promotional_in_days = 56, 
                                        start_promotion_or_future_terms = '0480-08-03', 
                                        stop_promotion_or_future_terms = '0480-08-03', ), 
                                    benefit_sub_type = 'FutureMultipleTerms', )
                                ], ), 
                        currency = [
                            'AEI'
                            ], 
                        customer_access_channels = [
                            'Branch'
                            ], 
                        eligibility = openapi_client.models.business_current_account_eligibility.Business_current_account_Eligibility(
                            age_restricted = True, 
                            annual_business_turnover = '-80728.8', 
                            annual_business_turnover_currency = 'AEI', 
                            description = '', 
                            eligibility_name = '', 
                            eligibility_notes = '', 
                            eligibility_type = 'AnyBusinessCustomer', 
                            income_condition = '', 
                            income_turnover_related = True, 
                            marketing_eligibility = [
                                'ExistingCustomers'
                                ], 
                            max_number_of_accounts = '', 
                            maximum_age = 56, 
                            maximum_age_to_open = 56, 
                            maximum_opening_amount = True, 
                            min_income_turnover_paid_into_account = 56, 
                            minimum_age = 56, 
                            minimum_deposit = True, 
                            minimum_income_frequency = 'AcademicTerm', 
                            minimum_income_turnover_amount = '-80728.8', 
                            minimum_income_turnover_currency = 'AEI', 
                            minimum_operating_balance = '-80728.8', 
                            minimum_operating_balance_currency = 'AEI', 
                            minimum_operating_balance_exists = True, 
                            opening_deposit_maximum_amount = '-80728.8', 
                            opening_deposit_maximum_currency = 'AEI', 
                            opening_deposit_minimum = '-80728.8', 
                            opening_deposit_minimum_currency = 'AEI', 
                            other_financial_holding_required = True, 
                            previous_bankruptcy = True, 
                            residency_restricted = True, 
                            residency_restricted_region = 'UK', 
                            single_joint_income = 'Joint', 
                            third_sector_organisations = True, ), 
                        fees_and_charges = [
                            openapi_client.models.business_current_account_fees_and_charges_inner.Business_current_account_FeesAndCharges_inner(
                                fees = openapi_client.models.business_current_account_fees_and_charges_inner_fees.Business_current_account_FeesAndCharges_inner_Fees(
                                    date_of_change = '0480-08-03', 
                                    fee_details = [
                                        openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner(
                                            fee_detail = openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner_fee_detail.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner_FeeDetail(
                                                date_of_change = '0480-08-03', 
                                                fee_sub_details = openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner_fee_detail_fee_sub_details.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner_FeeDetail_FeeSubDetails(
                                                    fee_amount = '-80728.8', 
                                                    fee_frequency = 'AcademicTerm', 
                                                    fee_higher_tier = 56, 
                                                    fee_lower_tier = 56, 
                                                    fee_max = '-80728.8', 
                                                    fee_min = '-80728.8', 
                                                    fee_rate = '-807.8', 
                                                    fees_and_charges_notes = '', 
                                                    negotiable = True, 
                                                    representative_rate = '-807.8', ), 
                                                fee_type = 'Other', 
                                                length_promotional_in_days = 56, 
                                                other = '', 
                                                start_promotion_or_future_terms = '0480-08-03', 
                                                stop_promotion_or_future_terms = '0480-08-03', ), 
                                            fee_sub_type = 'FutureMultipleTerms', )
                                        ], 
                                    fee_higher_tier = 56, 
                                    fee_lower_tier = 56, 
                                    length_promotional_in_days = 56, 
                                    start_promotion_or_future_terms = '0480-08-03', 
                                    stop_promotion_or_future_terms = '0480-08-03', ), 
                                product_state = 'FutureMultipleTerms', )
                            ], 
                        loan_item = [
                            openapi_client.models._unsecured_sme_loans_get_200_response_data_inner_loan_item_inner._unsecured_sme_loans_get_200_response_data_inner_LoanItem_inner(
                                cca_regulated_entity = True, 
                                date_of_change = '0480-08-03', 
                                is_a_low_interest_repayment_start_possible = True, 
                                is_this_an_interest_only_loan = True, 
                                length_promotional_in_days = 56, 
                                loan_pricing = [
                                    openapi_client.models._unsecured_sme_loans_get_200_response_data_inner_loan_item_inner_loan_pricing_inner._unsecured_sme_loans_get_200_response_data_inner_LoanItem_inner_LoanPricing_inner(
                                        indicative_rate = '', 
                                        loan_length_increment = '1 year', 
                                        loan_length_increment_lower = 56, 
                                        loan_length_increment_upper = 56, 
                                        loan_size_band_lower = '-80728.8', 
                                        loan_size_band_upper = '-80728.8', 
                                        negotiable = True, 
                                        rate_comparison_type = 'APR', 
                                        repayment_frequency = [
                                            'Daily'
                                            ], 
                                        size_increment = '£5000', )
                                    ], 
                                product_state = 'FutureMultipleTerms', 
                                start_promotion_or_future_terms = '0480-08-03', 
                                stop_promotion_or_future_terms = '0480-08-03', 
                                will_the_loan_be_paid_in_tranche_drawdowns = True, )
                            ], 
                        maximum_loan_amount = '-80728.8', 
                        maximum_loan_term = 56, 
                        minimum_loan_amount = '-80728.8', 
                        minimum_loan_term = 56, 
                        organisation = openapi_client.models.atm_organisation.ATM_Organisation(
                            brand = openapi_client.models.atm_organisation_brand.ATM_Organisation_Brand(
                                trademark_id = '0', 
                                trademark_ipo_code = 'UK', ), 
                            parent_organisation = openapi_client.models.atm_organisation_parent_organisation.ATM_Organisation_ParentOrganisation(
                                bic = 'AEIOTGEIC0L', 
                                lei = 'W8Q6ZGCKEC0L3O4GI779', 
                                organisation_name = openapi_client.models.atm_organisation_parent_organisation_organisation_name.ATM_Organisation_ParentOrganisation_OrganisationName(
                                    legal_name = '0', ), ), ), 
                        payment_holiday = True, 
                        product_description = '', 
                        product_identifier = '', 
                        product_name = '', 
                        product_segment = [
                            'AgricultureSector'
                            ], 
                        product_type_name = 'FlexibleBusinessLoan', 
                        product_url = [
                            ''
                            ], 
                        tsand_cs = [
                            ''
                            ], )
                    ],
                meta = openapi_client.models.meta_data.Meta data(
                    agreement = 'Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions', 
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    license = 'https://www.openbanking.org.uk/open-licence', 
                    terms_of_use = 'https://www.openbanking.org.uk/terms', 
                    total_results = 56, ),
        )
        """

    def testUnsecuredSmeLoansGet200Response(self):
        """Test UnsecuredSmeLoansGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
