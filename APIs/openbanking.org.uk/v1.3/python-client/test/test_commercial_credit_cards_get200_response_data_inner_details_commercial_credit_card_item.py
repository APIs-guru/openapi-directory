# coding: utf-8

"""
    Open Data API

    Latest Swagger specification for OpenData

    The version of the OpenAPI document: v1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.commercial_credit_cards_get200_response_data_inner_details_commercial_credit_card_item import CommercialCreditCardsGet200ResponseDataInnerDetailsCommercialCreditCardItem

class TestCommercialCreditCardsGet200ResponseDataInnerDetailsCommercialCreditCardItem(unittest.TestCase):
    """CommercialCreditCardsGet200ResponseDataInnerDetailsCommercialCreditCardItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CommercialCreditCardsGet200ResponseDataInnerDetailsCommercialCreditCardItem:
        """Test CommercialCreditCardsGet200ResponseDataInnerDetailsCommercialCreditCardItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CommercialCreditCardsGet200ResponseDataInnerDetailsCommercialCreditCardItem`
        """
        model = CommercialCreditCardsGet200ResponseDataInnerDetailsCommercialCreditCardItem()
        if include_optional:
            return CommercialCreditCardsGet200ResponseDataInnerDetailsCommercialCreditCardItem(
                apr_rate = '-807.8',
                ability_to_set_individual_limits = True,
                access_to_online_data_reporting_tool = True,
                allocationof_repayment = '',
                annual_account_fee_type = '',
                annual_fee_amount = '-80728.8',
                balance_transfer_interest_rate_period = 'Annual',
                balance_transfer_rate = '-807.8',
                card_scheme = 'Cashcard',
                cash_advance_rate = '-807.8',
                cash_withdrawals_allowed = True,
                cashback_percent = '-807.8',
                cheque_fee_percent = '-807.8',
                convenience_cheque = True,
                date_of_change = '0480-08-03',
                days_interest_free_credit_if_payment_full = 56,
                exchange_rate_adjustment = '-807.8',
                fees_on_cheque = '-80728.8',
                foreign_cash_fee = '-80728.8',
                foreign_cash_fee_rate = '-807.8',
                foreign_purchase_fee = '-80728.8',
                foreign_purchase_fee_rate = '-807.8',
                issuing_emergency_cards_fees = '-80728.8',
                length_promotional_in_days = 56,
                maximum_number_of_cards_permitted = 56,
                minimum_credit_limit = '-80728.8',
                minimum_lending_amount = '-80728.8',
                minimum_repayment_amount = '-80728.8',
                minimum_repayment_percentage = '-807.8',
                non_sterling_cash_fee = '-80728.8',
                non_sterling_cash_fee_rate = '-807.8',
                non_sterling_purchase_fee = '-80728.8',
                non_sterling_purchase_fee_rate = '-807.8',
                non_sterling_transaction_fee = '-80728.8',
                non_sterling_transaction_fee_rate = '-807.8',
                over_limit_fee = '-80728.8',
                payment_days_after_statement = 56,
                payment_scheme_exchange_fee = '-80728.8',
                payment_scheme_exchange_fee_rate = '-807.8',
                payment_scheme_exchange_rate = '-807.8',
                purchase_rate = '-807.8',
                repayment_frequency = 'Daily',
                repayment_notes = '',
                start_promotion_or_future_terms = '0480-08-03',
                statement_at_account_level = True,
                statement_at_personal_level = True,
                stop_promotion_or_future_terms = '0480-08-03'
            )
        else:
            return CommercialCreditCardsGet200ResponseDataInnerDetailsCommercialCreditCardItem(
                apr_rate = '-807.8',
                access_to_online_data_reporting_tool = True,
                annual_fee_amount = '-80728.8',
                card_scheme = 'Cashcard',
                cash_advance_rate = '-807.8',
                cash_withdrawals_allowed = True,
                convenience_cheque = True,
                days_interest_free_credit_if_payment_full = 56,
                exchange_rate_adjustment = '-807.8',
                issuing_emergency_cards_fees = '-80728.8',
                minimum_credit_limit = '-80728.8',
                payment_days_after_statement = 56,
                purchase_rate = '-807.8',
                repayment_frequency = 'Daily',
                statement_at_account_level = True,
                statement_at_personal_level = True,
        )
        """

    def testCommercialCreditCardsGet200ResponseDataInnerDetailsCommercialCreditCardItem(self):
        """Test CommercialCreditCardsGet200ResponseDataInnerDetailsCommercialCreditCardItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
