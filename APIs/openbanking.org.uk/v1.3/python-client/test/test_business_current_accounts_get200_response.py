# coding: utf-8

"""
    Open Data API

    Latest Swagger specification for OpenData

    The version of the OpenAPI document: v1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.business_current_accounts_get200_response import BusinessCurrentAccountsGet200Response

class TestBusinessCurrentAccountsGet200Response(unittest.TestCase):
    """BusinessCurrentAccountsGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BusinessCurrentAccountsGet200Response:
        """Test BusinessCurrentAccountsGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BusinessCurrentAccountsGet200Response`
        """
        model = BusinessCurrentAccountsGet200Response()
        if include_optional:
            return BusinessCurrentAccountsGet200Response(
                data = [
                    openapi_client.models.business_current_account.Business current account(
                        access_channels = [
                            'ATM'
                            ], 
                        benefits = openapi_client.models.business_current_account_benefits.Business_current_account_Benefits(
                            benefit = True, 
                            benefit_group = [
                                openapi_client.models.business_current_account_benefits_benefit_group_inner.Business_current_account_Benefits_BenefitGroup_inner(
                                    benefit_item = openapi_client.models.business_current_account_benefits_benefit_group_inner_benefit_item.Business_current_account_Benefits_BenefitGroup_inner_BenefitItem(
                                        benefit_detail = [
                                            openapi_client.models.business_current_account_benefits_benefit_group_inner_benefit_item_benefit_detail_inner.Business_current_account_Benefits_BenefitGroup_inner_BenefitItem_BenefitDetail_inner(
                                                benefit_description = '', 
                                                benefit_id = '', 
                                                benefit_name = '', 
                                                benefit_type = '', 
                                                benefit_value = '', 
                                                counter = 56, 
                                                criteria_type = [
                                                    'CashDeposit'
                                                    ], 
                                                default_to_accounts = True, 
                                                maximum_criteria = '-80728.8', 
                                                minimum_criteria = '-80728.8', 
                                                promotion_end_date = '0480-08-03', 
                                                promotion_start_date = '0480-08-03', )
                                            ], 
                                        date_of_change = '0480-08-03', 
                                        length_promotional_in_days = 56, 
                                        start_promotion_or_future_terms = '0480-08-03', 
                                        stop_promotion_or_future_terms = '0480-08-03', ), 
                                    benefit_sub_type = 'FutureMultipleTerms', )
                                ], ), 
                        ca_pricing = [
                            openapi_client.models.business_current_account_ca_pricing_inner.Business_current_account_CAPricing_inner(
                                ca_pricing_item = openapi_client.models.business_current_account_ca_pricing_inner_ca_pricing_item.Business_current_account_CAPricing_inner_CAPricingItem(
                                    date_of_change = '0480-08-03', 
                                    exchange_rate_adjustment = '-807.8', 
                                    length_promotional_in_days = 56, 
                                    start_promotion_or_future_terms = '0480-08-03', 
                                    stop_promotion_or_future_terms = '0480-08-03', ), 
                                product_state = 'FutureMultipleTerms', )
                            ], 
                        card_notes = '', 
                        card_type = [
                            'BasicCard'
                            ], 
                        card_withdrawal_limit = '-80728.8', 
                        cheque_book_available = True, 
                        contactless = True, 
                        credit_interest = openapi_client.models.business_current_account_credit_interest.Business_current_account_CreditInterest(
                            credit_charged = True, 
                            credit_interest_group = [
                                openapi_client.models.business_current_account_credit_interest_credit_interest_group_inner.Business_current_account_CreditInterest_CreditInterestGroup_inner(
                                    credit_interest_item = openapi_client.models.business_current_account_credit_interest_credit_interest_group_inner_credit_interest_item.Business_current_account_CreditInterest_CreditInterestGroup_inner_CreditInterestItem(
                                        calculation_frequency = 'Daily', 
                                        calculation_method = 'Banded', 
                                        date_of_change = '0480-08-03', 
                                        end_date = '0480-08-03', 
                                        fixed_interest_length = 56, 
                                        interest_notes = '', 
                                        interest_rate_type = 'Fixed', 
                                        interest_tiers = [
                                            openapi_client.models.business_current_account_credit_interest_credit_interest_group_inner_credit_interest_item_interest_tiers_inner.Business_current_account_CreditInterest_CreditInterestGroup_inner_CreditInterestItem_InterestTiers_inner(
                                                apraer_rate = '-807.8', 
                                                daily_charge_for_maximum = '-80728.8', 
                                                daily_charge_for_minimum = '-80728.8', 
                                                interest_tier = '', 
                                                rate = '-807.8', 
                                                rate_comparison_type = 'APR', 
                                                tier_value_maximum = '0', 
                                                tier_value_minimum = '-80728.8', )
                                            ], 
                                        length_promotional_in_days = 56, 
                                        payment_method = 'Compound', 
                                        start_date = '0480-08-03', 
                                        start_promotion_or_future_terms = '0480-08-03', 
                                        stop_promotion_or_future_terms = '0480-08-03', ), 
                                    interest_tier_sub_type = 'FutureMultipleTerms', )
                                ], ), 
                        credit_scoring_part_of_account_opening_for_getting_an_account = True, 
                        credit_scoring_part_of_account_opening_for_id_verification = True, 
                        credit_scoring_part_of_account_opening_id_verification_is_a_hard_or_soft_credit_score = [
                            'Hard'
                            ], 
                        credit_scoring_part_of_account_opening_id_verification_text = [
                            ''
                            ], 
                        credit_scoring_part_of_account_opening_is_a_hard_or_soft_credit_score = [
                            'Hard'
                            ], 
                        credit_scoring_part_of_account_opening_text = '', 
                        currency = [
                            'AEI'
                            ], 
                        eligibility = openapi_client.models.business_current_account_eligibility.Business_current_account_Eligibility(
                            age_restricted = True, 
                            annual_business_turnover = '-80728.8', 
                            annual_business_turnover_currency = 'AEI', 
                            description = '', 
                            eligibility_name = '', 
                            eligibility_notes = '', 
                            eligibility_type = 'AnyBusinessCustomer', 
                            income_condition = '', 
                            income_turnover_related = True, 
                            marketing_eligibility = [
                                'ExistingCustomers'
                                ], 
                            max_number_of_accounts = '', 
                            maximum_age = 56, 
                            maximum_age_to_open = 56, 
                            maximum_opening_amount = True, 
                            min_income_turnover_paid_into_account = 56, 
                            minimum_age = 56, 
                            minimum_deposit = True, 
                            minimum_income_frequency = 'AcademicTerm', 
                            minimum_income_turnover_amount = '-80728.8', 
                            minimum_income_turnover_currency = 'AEI', 
                            minimum_operating_balance = '-80728.8', 
                            minimum_operating_balance_currency = 'AEI', 
                            minimum_operating_balance_exists = True, 
                            opening_deposit_maximum_amount = '-80728.8', 
                            opening_deposit_maximum_currency = 'AEI', 
                            opening_deposit_minimum = '-80728.8', 
                            opening_deposit_minimum_currency = 'AEI', 
                            other_financial_holding_required = True, 
                            previous_bankruptcy = True, 
                            residency_restricted = True, 
                            residency_restricted_region = 'UK', 
                            single_joint_income = 'Joint', 
                            third_sector_organisations = True, ), 
                        feature = [
                            openapi_client.models.business_current_account_feature_inner.Business_current_account_Feature_inner(
                                date_of_change = '0480-08-03', 
                                existing_feature = True, 
                                feature_details = [
                                    openapi_client.models.business_current_account_feature_inner_feature_details_inner.Business_current_account_Feature_inner_FeatureDetails_inner(
                                        date_of_change = '0480-08-03', 
                                        feature_description = '', 
                                        feature_name = '', 
                                        feature_sub_type = 'FutureMultipleTerms', 
                                        feature_type = '', 
                                        feature_value = '', 
                                        length_promotional_in_days = 56, 
                                        start_promotion_or_future_terms = '0480-08-03', 
                                        stop_promotion_or_future_terms = '0480-08-03', )
                                    ], 
                                length_promotional_in_days = 56, 
                                product_state = 'FutureMultipleTerms', 
                                start_promotion_or_future_terms = '0480-08-03', 
                                stop_promotion_or_future_terms = '0480-08-03', )
                            ], 
                        fees_and_charges = [
                            openapi_client.models.business_current_account_fees_and_charges_inner.Business_current_account_FeesAndCharges_inner(
                                fees = openapi_client.models.business_current_account_fees_and_charges_inner_fees.Business_current_account_FeesAndCharges_inner_Fees(
                                    date_of_change = '0480-08-03', 
                                    fee_details = [
                                        openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner(
                                            fee_detail = openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner_fee_detail.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner_FeeDetail(
                                                date_of_change = '0480-08-03', 
                                                fee_sub_details = openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner_fee_detail_fee_sub_details.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner_FeeDetail_FeeSubDetails(
                                                    fee_amount = '-80728.8', 
                                                    fee_frequency = 'AcademicTerm', 
                                                    fee_higher_tier = 56, 
                                                    fee_lower_tier = 56, 
                                                    fee_max = '-80728.8', 
                                                    fee_min = '-80728.8', 
                                                    fee_rate = '-807.8', 
                                                    fees_and_charges_notes = '', 
                                                    negotiable = True, 
                                                    representative_rate = '-807.8', ), 
                                                fee_type = 'Other', 
                                                length_promotional_in_days = 56, 
                                                other = '', 
                                                start_promotion_or_future_terms = '0480-08-03', 
                                                stop_promotion_or_future_terms = '0480-08-03', ), 
                                            fee_sub_type = 'FutureMultipleTerms', )
                                        ], 
                                    fee_higher_tier = 56, 
                                    fee_lower_tier = 56, 
                                    length_promotional_in_days = 56, 
                                    start_promotion_or_future_terms = '0480-08-03', 
                                    stop_promotion_or_future_terms = '0480-08-03', ), 
                                product_state = 'FutureMultipleTerms', )
                            ], 
                        international_payments_supported = True, 
                        maximum_monthly_charge = '-80728.8', 
                        mobile_wallet = [
                            'AndroidPay'
                            ], 
                        organisation = openapi_client.models.atm_organisation.ATM_Organisation(
                            brand = openapi_client.models.atm_organisation_brand.ATM_Organisation_Brand(
                                trademark_id = '0', 
                                trademark_ipo_code = 'UK', ), 
                            parent_organisation = openapi_client.models.atm_organisation_parent_organisation.ATM_Organisation_ParentOrganisation(
                                bic = 'AEIOTGEIC0L', 
                                lei = 'W8Q6ZGCKEC0L3O4GI779', 
                                organisation_name = openapi_client.models.atm_organisation_parent_organisation_organisation_name.ATM_Organisation_ParentOrganisation_OrganisationName(
                                    legal_name = '0', ), ), ), 
                        overdraft = [
                            openapi_client.models.business_current_account_overdraft_inner.Business_current_account_Overdraft_inner(
                                date_of_change = '0480-08-03', 
                                fee_charge_negotiable_indicator = 'false', 
                                length_promotional_in_days = 56, 
                                maximum_monthly_overdraft_charge = '-80728.8', 
                                notes = '', 
                                overdraft_product_state = 'FutureMultipleTerms', 
                                overdraft_tier_band_set = [
                                    openapi_client.models.business_current_account_overdraft_inner_overdraft_tier_band_set_inner.Business_current_account_Overdraft_inner_OverdraftTierBandSet_inner(
                                        arrangement_other_type = openapi_client.models.business_current_account_overdraft_inner_fees_and_charges_inner_fee_charge_other_application_frequency.Business_current_account_Overdraft_inner_FeesAndCharges_inner_FeeChargeOtherApplicationFrequency(
                                            code = '0123', 
                                            description = '', 
                                            name = '0', ), 
                                        arrangement_type = 'Unarranged', 
                                        buffer_amount = '-80728.8', 
                                        cma_defined_indicator = True, 
                                        ear = '-807.8', 
                                        notes = '', 
                                        overdraft_tier_band = [
                                            openapi_client.models.business_current_account_overdraft_inner_overdraft_tier_band_set_inner_overdraft_tier_band_inner.Business_current_account_Overdraft_inner_OverdraftTierBandSet_inner_OverdraftTierBand_inner(
                                                ear = '-807.8', 
                                                notes = '', 
                                                tier_band_identification = '', 
                                                tier_value_maximum = '0', 
                                                tier_value_minimum = '-80728.8', )
                                            ], 
                                        tier_band_set_identification = '', )
                                    ], 
                                overdraft_type = 'Committed', 
                                start_promotion_or_future_terms = '0480-08-03', 
                                stop_promotion_or_future_terms = '0480-08-03', 
                                term = '', )
                            ], 
                        overdraft_offered = True, 
                        product_description = '', 
                        product_identifier = '', 
                        product_name = '', 
                        product_segment = [
                            'Basic'
                            ], 
                        product_type = 'BCA', 
                        product_url = [
                            ''
                            ], 
                        tsand_cs = [
                            ''
                            ], )
                    ],
                meta = openapi_client.models.meta_data.Meta data(
                    agreement = 'Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions', 
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    license = 'https://www.openbanking.org.uk/open-licence', 
                    terms_of_use = 'https://www.openbanking.org.uk/terms', 
                    total_results = 56, )
            )
        else:
            return BusinessCurrentAccountsGet200Response(
                data = [
                    openapi_client.models.business_current_account.Business current account(
                        access_channels = [
                            'ATM'
                            ], 
                        benefits = openapi_client.models.business_current_account_benefits.Business_current_account_Benefits(
                            benefit = True, 
                            benefit_group = [
                                openapi_client.models.business_current_account_benefits_benefit_group_inner.Business_current_account_Benefits_BenefitGroup_inner(
                                    benefit_item = openapi_client.models.business_current_account_benefits_benefit_group_inner_benefit_item.Business_current_account_Benefits_BenefitGroup_inner_BenefitItem(
                                        benefit_detail = [
                                            openapi_client.models.business_current_account_benefits_benefit_group_inner_benefit_item_benefit_detail_inner.Business_current_account_Benefits_BenefitGroup_inner_BenefitItem_BenefitDetail_inner(
                                                benefit_description = '', 
                                                benefit_id = '', 
                                                benefit_name = '', 
                                                benefit_type = '', 
                                                benefit_value = '', 
                                                counter = 56, 
                                                criteria_type = [
                                                    'CashDeposit'
                                                    ], 
                                                default_to_accounts = True, 
                                                maximum_criteria = '-80728.8', 
                                                minimum_criteria = '-80728.8', 
                                                promotion_end_date = '0480-08-03', 
                                                promotion_start_date = '0480-08-03', )
                                            ], 
                                        date_of_change = '0480-08-03', 
                                        length_promotional_in_days = 56, 
                                        start_promotion_or_future_terms = '0480-08-03', 
                                        stop_promotion_or_future_terms = '0480-08-03', ), 
                                    benefit_sub_type = 'FutureMultipleTerms', )
                                ], ), 
                        ca_pricing = [
                            openapi_client.models.business_current_account_ca_pricing_inner.Business_current_account_CAPricing_inner(
                                ca_pricing_item = openapi_client.models.business_current_account_ca_pricing_inner_ca_pricing_item.Business_current_account_CAPricing_inner_CAPricingItem(
                                    date_of_change = '0480-08-03', 
                                    exchange_rate_adjustment = '-807.8', 
                                    length_promotional_in_days = 56, 
                                    start_promotion_or_future_terms = '0480-08-03', 
                                    stop_promotion_or_future_terms = '0480-08-03', ), 
                                product_state = 'FutureMultipleTerms', )
                            ], 
                        card_notes = '', 
                        card_type = [
                            'BasicCard'
                            ], 
                        card_withdrawal_limit = '-80728.8', 
                        cheque_book_available = True, 
                        contactless = True, 
                        credit_interest = openapi_client.models.business_current_account_credit_interest.Business_current_account_CreditInterest(
                            credit_charged = True, 
                            credit_interest_group = [
                                openapi_client.models.business_current_account_credit_interest_credit_interest_group_inner.Business_current_account_CreditInterest_CreditInterestGroup_inner(
                                    credit_interest_item = openapi_client.models.business_current_account_credit_interest_credit_interest_group_inner_credit_interest_item.Business_current_account_CreditInterest_CreditInterestGroup_inner_CreditInterestItem(
                                        calculation_frequency = 'Daily', 
                                        calculation_method = 'Banded', 
                                        date_of_change = '0480-08-03', 
                                        end_date = '0480-08-03', 
                                        fixed_interest_length = 56, 
                                        interest_notes = '', 
                                        interest_rate_type = 'Fixed', 
                                        interest_tiers = [
                                            openapi_client.models.business_current_account_credit_interest_credit_interest_group_inner_credit_interest_item_interest_tiers_inner.Business_current_account_CreditInterest_CreditInterestGroup_inner_CreditInterestItem_InterestTiers_inner(
                                                apraer_rate = '-807.8', 
                                                daily_charge_for_maximum = '-80728.8', 
                                                daily_charge_for_minimum = '-80728.8', 
                                                interest_tier = '', 
                                                rate = '-807.8', 
                                                rate_comparison_type = 'APR', 
                                                tier_value_maximum = '0', 
                                                tier_value_minimum = '-80728.8', )
                                            ], 
                                        length_promotional_in_days = 56, 
                                        payment_method = 'Compound', 
                                        start_date = '0480-08-03', 
                                        start_promotion_or_future_terms = '0480-08-03', 
                                        stop_promotion_or_future_terms = '0480-08-03', ), 
                                    interest_tier_sub_type = 'FutureMultipleTerms', )
                                ], ), 
                        credit_scoring_part_of_account_opening_for_getting_an_account = True, 
                        credit_scoring_part_of_account_opening_for_id_verification = True, 
                        credit_scoring_part_of_account_opening_id_verification_is_a_hard_or_soft_credit_score = [
                            'Hard'
                            ], 
                        credit_scoring_part_of_account_opening_id_verification_text = [
                            ''
                            ], 
                        credit_scoring_part_of_account_opening_is_a_hard_or_soft_credit_score = [
                            'Hard'
                            ], 
                        credit_scoring_part_of_account_opening_text = '', 
                        currency = [
                            'AEI'
                            ], 
                        eligibility = openapi_client.models.business_current_account_eligibility.Business_current_account_Eligibility(
                            age_restricted = True, 
                            annual_business_turnover = '-80728.8', 
                            annual_business_turnover_currency = 'AEI', 
                            description = '', 
                            eligibility_name = '', 
                            eligibility_notes = '', 
                            eligibility_type = 'AnyBusinessCustomer', 
                            income_condition = '', 
                            income_turnover_related = True, 
                            marketing_eligibility = [
                                'ExistingCustomers'
                                ], 
                            max_number_of_accounts = '', 
                            maximum_age = 56, 
                            maximum_age_to_open = 56, 
                            maximum_opening_amount = True, 
                            min_income_turnover_paid_into_account = 56, 
                            minimum_age = 56, 
                            minimum_deposit = True, 
                            minimum_income_frequency = 'AcademicTerm', 
                            minimum_income_turnover_amount = '-80728.8', 
                            minimum_income_turnover_currency = 'AEI', 
                            minimum_operating_balance = '-80728.8', 
                            minimum_operating_balance_currency = 'AEI', 
                            minimum_operating_balance_exists = True, 
                            opening_deposit_maximum_amount = '-80728.8', 
                            opening_deposit_maximum_currency = 'AEI', 
                            opening_deposit_minimum = '-80728.8', 
                            opening_deposit_minimum_currency = 'AEI', 
                            other_financial_holding_required = True, 
                            previous_bankruptcy = True, 
                            residency_restricted = True, 
                            residency_restricted_region = 'UK', 
                            single_joint_income = 'Joint', 
                            third_sector_organisations = True, ), 
                        feature = [
                            openapi_client.models.business_current_account_feature_inner.Business_current_account_Feature_inner(
                                date_of_change = '0480-08-03', 
                                existing_feature = True, 
                                feature_details = [
                                    openapi_client.models.business_current_account_feature_inner_feature_details_inner.Business_current_account_Feature_inner_FeatureDetails_inner(
                                        date_of_change = '0480-08-03', 
                                        feature_description = '', 
                                        feature_name = '', 
                                        feature_sub_type = 'FutureMultipleTerms', 
                                        feature_type = '', 
                                        feature_value = '', 
                                        length_promotional_in_days = 56, 
                                        start_promotion_or_future_terms = '0480-08-03', 
                                        stop_promotion_or_future_terms = '0480-08-03', )
                                    ], 
                                length_promotional_in_days = 56, 
                                product_state = 'FutureMultipleTerms', 
                                start_promotion_or_future_terms = '0480-08-03', 
                                stop_promotion_or_future_terms = '0480-08-03', )
                            ], 
                        fees_and_charges = [
                            openapi_client.models.business_current_account_fees_and_charges_inner.Business_current_account_FeesAndCharges_inner(
                                fees = openapi_client.models.business_current_account_fees_and_charges_inner_fees.Business_current_account_FeesAndCharges_inner_Fees(
                                    date_of_change = '0480-08-03', 
                                    fee_details = [
                                        openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner(
                                            fee_detail = openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner_fee_detail.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner_FeeDetail(
                                                date_of_change = '0480-08-03', 
                                                fee_sub_details = openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner_fee_detail_fee_sub_details.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner_FeeDetail_FeeSubDetails(
                                                    fee_amount = '-80728.8', 
                                                    fee_frequency = 'AcademicTerm', 
                                                    fee_higher_tier = 56, 
                                                    fee_lower_tier = 56, 
                                                    fee_max = '-80728.8', 
                                                    fee_min = '-80728.8', 
                                                    fee_rate = '-807.8', 
                                                    fees_and_charges_notes = '', 
                                                    negotiable = True, 
                                                    representative_rate = '-807.8', ), 
                                                fee_type = 'Other', 
                                                length_promotional_in_days = 56, 
                                                other = '', 
                                                start_promotion_or_future_terms = '0480-08-03', 
                                                stop_promotion_or_future_terms = '0480-08-03', ), 
                                            fee_sub_type = 'FutureMultipleTerms', )
                                        ], 
                                    fee_higher_tier = 56, 
                                    fee_lower_tier = 56, 
                                    length_promotional_in_days = 56, 
                                    start_promotion_or_future_terms = '0480-08-03', 
                                    stop_promotion_or_future_terms = '0480-08-03', ), 
                                product_state = 'FutureMultipleTerms', )
                            ], 
                        international_payments_supported = True, 
                        maximum_monthly_charge = '-80728.8', 
                        mobile_wallet = [
                            'AndroidPay'
                            ], 
                        organisation = openapi_client.models.atm_organisation.ATM_Organisation(
                            brand = openapi_client.models.atm_organisation_brand.ATM_Organisation_Brand(
                                trademark_id = '0', 
                                trademark_ipo_code = 'UK', ), 
                            parent_organisation = openapi_client.models.atm_organisation_parent_organisation.ATM_Organisation_ParentOrganisation(
                                bic = 'AEIOTGEIC0L', 
                                lei = 'W8Q6ZGCKEC0L3O4GI779', 
                                organisation_name = openapi_client.models.atm_organisation_parent_organisation_organisation_name.ATM_Organisation_ParentOrganisation_OrganisationName(
                                    legal_name = '0', ), ), ), 
                        overdraft = [
                            openapi_client.models.business_current_account_overdraft_inner.Business_current_account_Overdraft_inner(
                                date_of_change = '0480-08-03', 
                                fee_charge_negotiable_indicator = 'false', 
                                length_promotional_in_days = 56, 
                                maximum_monthly_overdraft_charge = '-80728.8', 
                                notes = '', 
                                overdraft_product_state = 'FutureMultipleTerms', 
                                overdraft_tier_band_set = [
                                    openapi_client.models.business_current_account_overdraft_inner_overdraft_tier_band_set_inner.Business_current_account_Overdraft_inner_OverdraftTierBandSet_inner(
                                        arrangement_other_type = openapi_client.models.business_current_account_overdraft_inner_fees_and_charges_inner_fee_charge_other_application_frequency.Business_current_account_Overdraft_inner_FeesAndCharges_inner_FeeChargeOtherApplicationFrequency(
                                            code = '0123', 
                                            description = '', 
                                            name = '0', ), 
                                        arrangement_type = 'Unarranged', 
                                        buffer_amount = '-80728.8', 
                                        cma_defined_indicator = True, 
                                        ear = '-807.8', 
                                        notes = '', 
                                        overdraft_tier_band = [
                                            openapi_client.models.business_current_account_overdraft_inner_overdraft_tier_band_set_inner_overdraft_tier_band_inner.Business_current_account_Overdraft_inner_OverdraftTierBandSet_inner_OverdraftTierBand_inner(
                                                ear = '-807.8', 
                                                notes = '', 
                                                tier_band_identification = '', 
                                                tier_value_maximum = '0', 
                                                tier_value_minimum = '-80728.8', )
                                            ], 
                                        tier_band_set_identification = '', )
                                    ], 
                                overdraft_type = 'Committed', 
                                start_promotion_or_future_terms = '0480-08-03', 
                                stop_promotion_or_future_terms = '0480-08-03', 
                                term = '', )
                            ], 
                        overdraft_offered = True, 
                        product_description = '', 
                        product_identifier = '', 
                        product_name = '', 
                        product_segment = [
                            'Basic'
                            ], 
                        product_type = 'BCA', 
                        product_url = [
                            ''
                            ], 
                        tsand_cs = [
                            ''
                            ], )
                    ],
                meta = openapi_client.models.meta_data.Meta data(
                    agreement = 'Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions', 
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    license = 'https://www.openbanking.org.uk/open-licence', 
                    terms_of_use = 'https://www.openbanking.org.uk/terms', 
                    total_results = 56, ),
        )
        """

    def testBusinessCurrentAccountsGet200Response(self):
        """Test BusinessCurrentAccountsGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
