# coding: utf-8

"""
    Open Data API

    Latest Swagger specification for OpenData

    The version of the OpenAPI document: v1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.business_current_account_feature_inner import BusinessCurrentAccountFeatureInner

class TestBusinessCurrentAccountFeatureInner(unittest.TestCase):
    """BusinessCurrentAccountFeatureInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BusinessCurrentAccountFeatureInner:
        """Test BusinessCurrentAccountFeatureInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BusinessCurrentAccountFeatureInner`
        """
        model = BusinessCurrentAccountFeatureInner()
        if include_optional:
            return BusinessCurrentAccountFeatureInner(
                date_of_change = '0480-08-03',
                existing_feature = True,
                feature_details = [
                    openapi_client.models.business_current_account_feature_inner_feature_details_inner.Business_current_account_Feature_inner_FeatureDetails_inner(
                        criteria_type = '', 
                        date_of_change = '0480-08-03', 
                        feature_description = '', 
                        feature_name = '', 
                        feature_sub_type = 'FutureMultipleTerms', 
                        feature_type = '', 
                        feature_value = '', 
                        length_promotional_in_days = 56, 
                        start_promotion_or_future_terms = '0480-08-03', 
                        stop_promotion_or_future_terms = '0480-08-03', )
                    ],
                length_promotional_in_days = 56,
                product_state = 'FutureMultipleTerms',
                start_promotion_or_future_terms = '0480-08-03',
                stop_promotion_or_future_terms = '0480-08-03'
            )
        else:
            return BusinessCurrentAccountFeatureInner(
                existing_feature = True,
        )
        """

    def testBusinessCurrentAccountFeatureInner(self):
        """Test BusinessCurrentAccountFeatureInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
