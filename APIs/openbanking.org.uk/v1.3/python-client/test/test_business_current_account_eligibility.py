# coding: utf-8

"""
    Open Data API

    Latest Swagger specification for OpenData

    The version of the OpenAPI document: v1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.business_current_account_eligibility import BusinessCurrentAccountEligibility

class TestBusinessCurrentAccountEligibility(unittest.TestCase):
    """BusinessCurrentAccountEligibility unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BusinessCurrentAccountEligibility:
        """Test BusinessCurrentAccountEligibility
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BusinessCurrentAccountEligibility`
        """
        model = BusinessCurrentAccountEligibility()
        if include_optional:
            return BusinessCurrentAccountEligibility(
                age_restricted = True,
                annual_business_turnover = '-80728.8',
                annual_business_turnover_currency = 'AEI',
                description = '',
                eligibility_name = '',
                eligibility_notes = '',
                eligibility_type = 'AnyBusinessCustomer',
                income_condition = '',
                income_turnover_related = True,
                marketing_eligibility = [
                    'ExistingCustomers'
                    ],
                max_number_of_accounts = '',
                maximum_age = 56,
                maximum_age_to_open = 56,
                maximum_opening_amount = True,
                min_income_turnover_paid_into_account = 56,
                minimum_age = 56,
                minimum_deposit = True,
                minimum_income_frequency = 'AcademicTerm',
                minimum_income_turnover_amount = '-80728.8',
                minimum_income_turnover_currency = 'AEI',
                minimum_operating_balance = '-80728.8',
                minimum_operating_balance_currency = 'AEI',
                minimum_operating_balance_exists = True,
                opening_deposit_maximum_amount = '-80728.8',
                opening_deposit_maximum_currency = 'AEI',
                opening_deposit_minimum = '-80728.8',
                opening_deposit_minimum_currency = 'AEI',
                other_financial_holding_required = True,
                previous_bankruptcy = True,
                residency_restricted = True,
                residency_restricted_region = 'UK',
                single_joint_income = 'Joint',
                third_sector_organisations = True
            )
        else:
            return BusinessCurrentAccountEligibility(
                age_restricted = True,
                description = '',
                income_turnover_related = True,
                other_financial_holding_required = True,
                previous_bankruptcy = True,
                residency_restricted = True,
                third_sector_organisations = True,
        )
        """

    def testBusinessCurrentAccountEligibility(self):
        """Test BusinessCurrentAccountEligibility"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
