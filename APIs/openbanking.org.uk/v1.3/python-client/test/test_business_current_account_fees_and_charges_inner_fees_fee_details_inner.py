# coding: utf-8

"""
    Open Data API

    Latest Swagger specification for OpenData

    The version of the OpenAPI document: v1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner import BusinessCurrentAccountFeesAndChargesInnerFeesFeeDetailsInner

class TestBusinessCurrentAccountFeesAndChargesInnerFeesFeeDetailsInner(unittest.TestCase):
    """BusinessCurrentAccountFeesAndChargesInnerFeesFeeDetailsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BusinessCurrentAccountFeesAndChargesInnerFeesFeeDetailsInner:
        """Test BusinessCurrentAccountFeesAndChargesInnerFeesFeeDetailsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BusinessCurrentAccountFeesAndChargesInnerFeesFeeDetailsInner`
        """
        model = BusinessCurrentAccountFeesAndChargesInnerFeesFeeDetailsInner()
        if include_optional:
            return BusinessCurrentAccountFeesAndChargesInnerFeesFeeDetailsInner(
                fee_detail = openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner_fee_detail.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner_FeeDetail(
                    date_of_change = '0480-08-03', 
                    fee_sub_details = openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner_fee_detail_fee_sub_details.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner_FeeDetail_FeeSubDetails(
                        fee_amount = '-80728.8', 
                        fee_frequency = 'AcademicTerm', 
                        fee_higher_tier = 56, 
                        fee_lower_tier = 56, 
                        fee_max = '-80728.8', 
                        fee_min = '-80728.8', 
                        fee_rate = '-807.8', 
                        fees_and_charges_notes = '', 
                        negotiable = True, 
                        representative_rate = '-807.8', ), 
                    fee_type = 'Other', 
                    length_promotional_in_days = 56, 
                    other = '', 
                    start_promotion_or_future_terms = '0480-08-03', 
                    stop_promotion_or_future_terms = '0480-08-03', ),
                fee_sub_type = 'FutureMultipleTerms'
            )
        else:
            return BusinessCurrentAccountFeesAndChargesInnerFeesFeeDetailsInner(
                fee_detail = openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner_fee_detail.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner_FeeDetail(
                    date_of_change = '0480-08-03', 
                    fee_sub_details = openapi_client.models.business_current_account_fees_and_charges_inner_fees_fee_details_inner_fee_detail_fee_sub_details.Business_current_account_FeesAndCharges_inner_Fees_FeeDetails_inner_FeeDetail_FeeSubDetails(
                        fee_amount = '-80728.8', 
                        fee_frequency = 'AcademicTerm', 
                        fee_higher_tier = 56, 
                        fee_lower_tier = 56, 
                        fee_max = '-80728.8', 
                        fee_min = '-80728.8', 
                        fee_rate = '-807.8', 
                        fees_and_charges_notes = '', 
                        negotiable = True, 
                        representative_rate = '-807.8', ), 
                    fee_type = 'Other', 
                    length_promotional_in_days = 56, 
                    other = '', 
                    start_promotion_or_future_terms = '0480-08-03', 
                    stop_promotion_or_future_terms = '0480-08-03', ),
                fee_sub_type = 'FutureMultipleTerms',
        )
        """

    def testBusinessCurrentAccountFeesAndChargesInnerFeesFeeDetailsInner(self):
        """Test BusinessCurrentAccountFeesAndChargesInnerFeesFeeDetailsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
