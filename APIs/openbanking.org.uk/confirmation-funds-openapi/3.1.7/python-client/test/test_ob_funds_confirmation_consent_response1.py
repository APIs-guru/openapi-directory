# coding: utf-8

"""
    Confirmation of Funds API Specification

    Swagger for Confirmation of Funds API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_funds_confirmation_consent_response1 import OBFundsConfirmationConsentResponse1

class TestOBFundsConfirmationConsentResponse1(unittest.TestCase):
    """OBFundsConfirmationConsentResponse1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBFundsConfirmationConsentResponse1:
        """Test OBFundsConfirmationConsentResponse1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBFundsConfirmationConsentResponse1`
        """
        model = OBFundsConfirmationConsentResponse1()
        if include_optional:
            return OBFundsConfirmationConsentResponse1(
                data = openapi_client.models.ob_funds_confirmation_consent_response1_data.OBFundsConfirmationConsentResponse1_Data(
                    consent_id = '0', 
                    creation_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    debtor_account = openapi_client.models.ob_funds_confirmation_consent1_data_debtor_account.OBFundsConfirmationConsent1_Data_DebtorAccount(
                        identification = '0', 
                        name = '0', 
                        scheme_name = '', 
                        secondary_identification = '0', ), 
                    expiration_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'Authorised', 
                    status_update_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                links = openapi_client.models.links.Links(
                    first = '', 
                    last = '', 
                    next = '', 
                    prev = '', 
                    self = '', ),
                meta = openapi_client.models.meta_data.MetaData(
                    first_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    total_pages = 56, )
            )
        else:
            return OBFundsConfirmationConsentResponse1(
                data = openapi_client.models.ob_funds_confirmation_consent_response1_data.OBFundsConfirmationConsentResponse1_Data(
                    consent_id = '0', 
                    creation_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    debtor_account = openapi_client.models.ob_funds_confirmation_consent1_data_debtor_account.OBFundsConfirmationConsent1_Data_DebtorAccount(
                        identification = '0', 
                        name = '0', 
                        scheme_name = '', 
                        secondary_identification = '0', ), 
                    expiration_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'Authorised', 
                    status_update_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
        )
        """

    def testOBFundsConfirmationConsentResponse1(self):
        """Test OBFundsConfirmationConsentResponse1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
