# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_statement2_basic import OBStatement2Basic

class TestOBStatement2Basic(unittest.TestCase):
    """OBStatement2Basic unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBStatement2Basic:
        """Test OBStatement2Basic
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBStatement2Basic`
        """
        model = OBStatement2Basic()
        if include_optional:
            return OBStatement2Basic(
                account_id = '0',
                creation_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                statement_benefit = [
                    openapi_client.models.ob_statement2_statement_benefit_inner.OBStatement2_StatementBenefit_inner(
                        amount = openapi_client.models.ob_active_or_historic_currency_and_amount_5.OBActiveOrHistoricCurrencyAndAmount_5(
                            amount = '80728.8001', 
                            currency = 'AEI', ), 
                        type = '', )
                    ],
                statement_date_time = [
                    openapi_client.models.ob_statement2_statement_date_time_inner.OBStatement2_StatementDateTime_inner(
                        date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        type = '', )
                    ],
                statement_description = [
                    '0'
                    ],
                statement_fee = [
                    openapi_client.models.ob_statement2_statement_fee_inner.OBStatement2_StatementFee_inner(
                        amount = openapi_client.models.ob_active_or_historic_currency_and_amount_6.OBActiveOrHistoricCurrencyAndAmount_6(
                            amount = '80728.8001', 
                            currency = 'AEI', ), 
                        credit_debit_indicator = 'Credit', 
                        description = '0', 
                        frequency = '', 
                        rate = 1.337, 
                        rate_type = '', 
                        type = '', )
                    ],
                statement_id = '0',
                statement_interest = [
                    openapi_client.models.ob_statement2_statement_interest_inner.OBStatement2_StatementInterest_inner(
                        amount = openapi_client.models.ob_active_or_historic_currency_and_amount_7.OBActiveOrHistoricCurrencyAndAmount_7(
                            amount = '80728.8001', 
                            currency = 'AEI', ), 
                        credit_debit_indicator = 'Credit', 
                        description = '0', 
                        frequency = '', 
                        rate = 1.337, 
                        rate_type = '', 
                        type = '', )
                    ],
                statement_rate = [
                    openapi_client.models.ob_statement2_statement_rate_inner.OBStatement2_StatementRate_inner(
                        rate = '-807', 
                        type = '', )
                    ],
                statement_reference = '0',
                statement_value = [
                    openapi_client.models.ob_statement2_statement_value_inner.OBStatement2_StatementValue_inner(
                        type = '', 
                        value = '0', )
                    ],
                type = 'AccountClosure'
            )
        else:
            return OBStatement2Basic(
                account_id = '0',
                creation_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                type = 'AccountClosure',
        )
        """

    def testOBStatement2Basic(self):
        """Test OBStatement2Basic"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
