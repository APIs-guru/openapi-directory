# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_read_product2 import OBReadProduct2

class TestOBReadProduct2(unittest.TestCase):
    """OBReadProduct2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBReadProduct2:
        """Test OBReadProduct2
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBReadProduct2`
        """
        model = OBReadProduct2()
        if include_optional:
            return OBReadProduct2(
                data = openapi_client.models.ob_read_product2_data.OBReadProduct2_Data(
                    product = [
                        openapi_client.models.ob_read_product2_data_product_inner.OBReadProduct2_Data_Product_inner(
                            account_id = '0', 
                            bca = openapi_client.models.bca.BCA(
                                credit_interest = openapi_client.models.credit_interest.CreditInterest(
                                    tier_band_set = [
                                        openapi_client.models.tier_band_set_inner.TierBandSet_inner(
                                            calculation_method = 'Compound', 
                                            destination = 'PayAway', 
                                            notes = [
                                                '0'
                                                ], 
                                            tier_band = [
                                                openapi_client.models.tier_band_inner.TierBand_inner(
                                                    aer = '-807', 
                                                    application_frequency = 'Daily', 
                                                    bank_interest_rate = '-807', 
                                                    bank_interest_rate_type = 'Gross', 
                                                    calculation_frequency = 'Daily', 
                                                    deposit_interest_applied_coverage = 'Banded', 
                                                    fixed_variable_interest_rate_type = 'Fixed', 
                                                    identification = '0', 
                                                    other_application_frequency = openapi_client.models.other_application_frequency.OtherApplicationFrequency(
                                                        code = '', 
                                                        description = '0', 
                                                        name = '0', ), 
                                                    other_bank_interest_type = openapi_client.models.other_bank_interest_type.OtherBankInterestType(
                                                        code = '', 
                                                        description = '0', 
                                                        name = '0', ), 
                                                    other_calculation_frequency = openapi_client.models.other_calculation_frequency.OtherCalculationFrequency(
                                                        code = '', 
                                                        description = '0', 
                                                        name = '0', ), 
                                                    tier_value_maximum = '-80728880015.0217', 
                                                    tier_value_minimum = '-80728880015.0217', )
                                                ], 
                                            tier_band_method = 'Banded', )
                                        ], ), 
                                other_fees_charges = [
                                    openapi_client.models.other_fees_charges_inner.OtherFeesCharges_inner(
                                        fee_charge_cap = [
                                            openapi_client.models.fee_charge_cap_inner.FeeChargeCap_inner(
                                                capping_period = 'Day', 
                                                fee_cap_amount = '-80728880015.0217', 
                                                fee_cap_occurrence = 1.337, 
                                                fee_type = [
                                                    'Other'
                                                    ], 
                                                min_max_type = 'Minimum', 
                                                other_fee_type = [
                                                    openapi_client.models.other_fee_type_inner.OtherFeeType_inner(
                                                        code = '', 
                                                        description = '0', 
                                                        name = '0', )
                                                    ], )
                                            ], 
                                        fee_charge_detail = [
                                            openapi_client.models.fee_charge_detail_inner.FeeChargeDetail_inner(
                                                application_frequency = 'OnClosing', 
                                                calculation_frequency = 'OnClosing', 
                                                fee_amount = '-80728880015.0217', 
                                                fee_applicable_range = openapi_client.models.fee_applicable_range.FeeApplicableRange(
                                                    maximum_amount = '-80728880015.0217', 
                                                    maximum_rate = '-807', 
                                                    minimum_amount = '-80728880015.0217', 
                                                    minimum_rate = '-807', ), 
                                                fee_category = 'Other', 
                                                fee_rate = '-807', 
                                                fee_rate_type = 'Gross', 
                                                fee_type = 'Other', 
                                                negotiable_indicator = True, 
                                                other_fee_category_type = openapi_client.models.other_fee_category_type.OtherFeeCategoryType(
                                                    code = '', 
                                                    description = '0', 
                                                    name = '0', ), 
                                                other_fee_rate_type = openapi_client.models.other_fee_rate_type.OtherFeeRateType(
                                                    code = '', 
                                                    description = '0', 
                                                    name = '0', ), )
                                            ], 
                                        other_tariff_type = openapi_client.models.other_tariff_type.OtherTariffType(
                                            code = '', 
                                            description = '0', 
                                            name = '0', ), 
                                        tariff_name = '0', 
                                        tariff_type = 'Electronic', )
                                    ], 
                                overdraft = openapi_client.models.overdraft.Overdraft(
                                    overdraft_tier_band_set = [
                                        openapi_client.models.overdraft_tier_band_set_inner.OverdraftTierBandSet_inner(
                                            authorised_indicator = True, 
                                            buffer_amount = '-80728880015.0217', 
                                            identification = '0', 
                                            overdraft_fees_charges = [
                                                openapi_client.models.overdraft_fees_charges_inner.OverdraftFeesCharges_inner(
                                                    overdraft_fee_charge_cap = [
                                                        openapi_client.models.overdraft_fee_charge_cap_inner.OverdraftFeeChargeCap_inner(
                                                            capping_period = 'Day', 
                                                            fee_cap_amount = '-80728880015.0217', 
                                                            fee_cap_occurrence = 1.337, 
                                                            fee_type = [
                                                                'ArrangedOverdraft'
                                                                ], 
                                                            min_max_type = 'Minimum', )
                                                        ], 
                                                    overdraft_fee_charge_detail = [
                                                        openapi_client.models.overdraft_fee_charge_detail_inner.OverdraftFeeChargeDetail_inner(
                                                            application_frequency = 'OnClosing', 
                                                            calculation_frequency = 'OnClosing', 
                                                            fee_amount = '-80728880015.0217', 
                                                            fee_rate = '-807', 
                                                            fee_rate_type = 'Gross', 
                                                            fee_type = 'ArrangedOverdraft', 
                                                            incremental_borrowing_amount = '-80728880015.0217', 
                                                            negotiable_indicator = True, 
                                                            overdraft_control_indicator = True, )
                                                        ], )
                                                ], 
                                            overdraft_tier_band = [
                                                openapi_client.models.overdraft_tier_band_inner.OverdraftTierBand_inner(
                                                    agreement_length_max = 1.337, 
                                                    agreement_length_min = 1.337, 
                                                    agreement_period = 'Day', 
                                                    bank_guaranteed_indicator = True, 
                                                    ear = '-807', 
                                                    identification = '0', 
                                                    overdraft_interest_charging_coverage = 'Banded', 
                                                    representative_apr = '-807', 
                                                    tier_value_max = '-80728880015.0217', 
                                                    tier_value_min = '-80728880015.0217', )
                                                ], 
                                            overdraft_type = 'Committed', 
                                            tier_band_method = 'Banded', )
                                        ], ), 
                                product_details = openapi_client.models.product_details.ProductDetails(
                                    fee_free_length = 1.337, 
                                    fee_free_length_period = 'Day', 
                                    segment = [
                                        'ClientAccount'
                                        ], ), ), 
                            marketing_state_id = '0', 
                            other_product_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type.OBReadProduct2_Data_Product_inner_OtherProductType(
                                description = '0', 
                                loan_interest = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest(
                                    loan_interest_tier_band_set = [
                                        openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner(
                                            calculation_method = 'ITCO', 
                                            identification = '0', 
                                            loan_interest_fees_charges = [
                                                openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_fees_charges_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestFeesCharges_inner(
                                                    loan_interest_fee_charge_cap = [
                                                        openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_fees_charges_inner_loan_interest_fee_charge_cap_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestFeesCharges_inner_LoanInterestFeeChargeCap_inner(
                                                            capping_period = 'FEAC', 
                                                            fee_cap_amount = '-80728880015.0217', 
                                                            fee_cap_occurrence = 56, 
                                                            fee_type = [
                                                                'FEPF'
                                                                ], 
                                                            min_max_type = 'FMMN', )
                                                        ], 
                                                    loan_interest_fee_charge_detail = [
                                                        openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_fees_charges_inner_loan_interest_fee_charge_detail_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestFeesCharges_inner_LoanInterestFeeChargeDetail_inner(
                                                            application_frequency = 'FEAC', 
                                                            calculation_frequency = 'FEAC', 
                                                            fee_amount = '-80728880015.0217', 
                                                            fee_rate = '-807', 
                                                            fee_rate_type = 'INBB', 
                                                            fee_type = 'FEPF', 
                                                            negotiable_indicator = True, )
                                                        ], )
                                                ], 
                                            loan_interest_tier_band = [
                                                openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_tier_band_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestTierBand_inner(
                                                    fixed_variable_interest_rate_type = 'INFI', 
                                                    identification = '0', 
                                                    loan_provider_interest_rate = '-807', 
                                                    loan_provider_interest_rate_type = 'INBB', 
                                                    max_term_period = 'PACT', 
                                                    min_term_period = 'PACT', 
                                                    other_loan_provider_interest_rate_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_tier_band_inner_other_loan_provider_interest_rate_type.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestTierBand_inner_OtherLoanProviderInterestRateType(
                                                        code = '\\', 
                                                        description = '0', 
                                                        name = '0', ), 
                                                    rep_apr = '-807', 
                                                    tier_value_max_term = 56, 
                                                    tier_value_maximum = '-80728880015.0217', 
                                                    tier_value_min_term = 56, 
                                                    tier_value_minimum = '-80728880015.0217', )
                                                ], 
                                            other_calculation_method = openapi_client.models.ob_other_code_type1_0.OB_OtherCodeType1_0(
                                                description = '0', 
                                                name = '0', ), 
                                            tier_band_method = 'INBA', )
                                        ], ), 
                                name = '0', 
                                repayment = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment(
                                    amount_type = 'RABD', 
                                    other_amount_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_other_amount_type.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_OtherAmountType(
                                        description = , 
                                        name = , ), 
                                    other_repayment_frequency = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_other_repayment_frequency.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_OtherRepaymentFrequency(
                                        description = , 
                                        name = , ), 
                                    other_repayment_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_other_repayment_type.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_OtherRepaymentType(
                                        description = , 
                                        name = , ), 
                                    repayment_fee_charges = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentFeeCharges(
                                        repayment_fee_charge_cap = [
                                            openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges_repayment_fee_charge_cap_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentFeeCharges_RepaymentFeeChargeCap_inner(
                                                fee_type = [
                                                    'FEPF'
                                                    ], 
                                                min_max_type = 'FMMN', )
                                            ], 
                                        repayment_fee_charge_detail = [
                                            openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges_repayment_fee_charge_detail_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentFeeCharges_RepaymentFeeChargeDetail_inner(
                                                application_frequency = 'FEAC', 
                                                calculation_frequency = 'FEAC', 
                                                fee_type = 'FEPF', 
                                                negotiable_indicator = True, )
                                            ], ), 
                                    repayment_frequency = 'SMDA', 
                                    repayment_holiday = [
                                        openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_holiday_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentHoliday_inner(
                                            max_holiday_length = 56, 
                                            max_holiday_period = 'PACT', )
                                        ], 
                                    repayment_type = 'USBA', ), 
                                supplementary_data = { }, ), 
                            pca = openapi_client.models.pca.PCA(), 
                            product_id = '0', 
                            product_name = '0', 
                            product_type = 'BusinessCurrentAccount', 
                            secondary_product_id = '0', )
                        ], ),
                links = openapi_client.models.links.Links(
                    first = '', 
                    last = '', 
                    next = '', 
                    prev = '', 
                    self = '', ),
                meta = openapi_client.models.meta_data.MetaData(
                    first_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    total_pages = 56, )
            )
        else:
            return OBReadProduct2(
                data = openapi_client.models.ob_read_product2_data.OBReadProduct2_Data(
                    product = [
                        openapi_client.models.ob_read_product2_data_product_inner.OBReadProduct2_Data_Product_inner(
                            account_id = '0', 
                            bca = openapi_client.models.bca.BCA(
                                credit_interest = openapi_client.models.credit_interest.CreditInterest(
                                    tier_band_set = [
                                        openapi_client.models.tier_band_set_inner.TierBandSet_inner(
                                            calculation_method = 'Compound', 
                                            destination = 'PayAway', 
                                            notes = [
                                                '0'
                                                ], 
                                            tier_band = [
                                                openapi_client.models.tier_band_inner.TierBand_inner(
                                                    aer = '-807', 
                                                    application_frequency = 'Daily', 
                                                    bank_interest_rate = '-807', 
                                                    bank_interest_rate_type = 'Gross', 
                                                    calculation_frequency = 'Daily', 
                                                    deposit_interest_applied_coverage = 'Banded', 
                                                    fixed_variable_interest_rate_type = 'Fixed', 
                                                    identification = '0', 
                                                    other_application_frequency = openapi_client.models.other_application_frequency.OtherApplicationFrequency(
                                                        code = '', 
                                                        description = '0', 
                                                        name = '0', ), 
                                                    other_bank_interest_type = openapi_client.models.other_bank_interest_type.OtherBankInterestType(
                                                        code = '', 
                                                        description = '0', 
                                                        name = '0', ), 
                                                    other_calculation_frequency = openapi_client.models.other_calculation_frequency.OtherCalculationFrequency(
                                                        code = '', 
                                                        description = '0', 
                                                        name = '0', ), 
                                                    tier_value_maximum = '-80728880015.0217', 
                                                    tier_value_minimum = '-80728880015.0217', )
                                                ], 
                                            tier_band_method = 'Banded', )
                                        ], ), 
                                other_fees_charges = [
                                    openapi_client.models.other_fees_charges_inner.OtherFeesCharges_inner(
                                        fee_charge_cap = [
                                            openapi_client.models.fee_charge_cap_inner.FeeChargeCap_inner(
                                                capping_period = 'Day', 
                                                fee_cap_amount = '-80728880015.0217', 
                                                fee_cap_occurrence = 1.337, 
                                                fee_type = [
                                                    'Other'
                                                    ], 
                                                min_max_type = 'Minimum', 
                                                other_fee_type = [
                                                    openapi_client.models.other_fee_type_inner.OtherFeeType_inner(
                                                        code = '', 
                                                        description = '0', 
                                                        name = '0', )
                                                    ], )
                                            ], 
                                        fee_charge_detail = [
                                            openapi_client.models.fee_charge_detail_inner.FeeChargeDetail_inner(
                                                application_frequency = 'OnClosing', 
                                                calculation_frequency = 'OnClosing', 
                                                fee_amount = '-80728880015.0217', 
                                                fee_applicable_range = openapi_client.models.fee_applicable_range.FeeApplicableRange(
                                                    maximum_amount = '-80728880015.0217', 
                                                    maximum_rate = '-807', 
                                                    minimum_amount = '-80728880015.0217', 
                                                    minimum_rate = '-807', ), 
                                                fee_category = 'Other', 
                                                fee_rate = '-807', 
                                                fee_rate_type = 'Gross', 
                                                fee_type = 'Other', 
                                                negotiable_indicator = True, 
                                                other_fee_category_type = openapi_client.models.other_fee_category_type.OtherFeeCategoryType(
                                                    code = '', 
                                                    description = '0', 
                                                    name = '0', ), 
                                                other_fee_rate_type = openapi_client.models.other_fee_rate_type.OtherFeeRateType(
                                                    code = '', 
                                                    description = '0', 
                                                    name = '0', ), )
                                            ], 
                                        other_tariff_type = openapi_client.models.other_tariff_type.OtherTariffType(
                                            code = '', 
                                            description = '0', 
                                            name = '0', ), 
                                        tariff_name = '0', 
                                        tariff_type = 'Electronic', )
                                    ], 
                                overdraft = openapi_client.models.overdraft.Overdraft(
                                    overdraft_tier_band_set = [
                                        openapi_client.models.overdraft_tier_band_set_inner.OverdraftTierBandSet_inner(
                                            authorised_indicator = True, 
                                            buffer_amount = '-80728880015.0217', 
                                            identification = '0', 
                                            overdraft_fees_charges = [
                                                openapi_client.models.overdraft_fees_charges_inner.OverdraftFeesCharges_inner(
                                                    overdraft_fee_charge_cap = [
                                                        openapi_client.models.overdraft_fee_charge_cap_inner.OverdraftFeeChargeCap_inner(
                                                            capping_period = 'Day', 
                                                            fee_cap_amount = '-80728880015.0217', 
                                                            fee_cap_occurrence = 1.337, 
                                                            fee_type = [
                                                                'ArrangedOverdraft'
                                                                ], 
                                                            min_max_type = 'Minimum', )
                                                        ], 
                                                    overdraft_fee_charge_detail = [
                                                        openapi_client.models.overdraft_fee_charge_detail_inner.OverdraftFeeChargeDetail_inner(
                                                            application_frequency = 'OnClosing', 
                                                            calculation_frequency = 'OnClosing', 
                                                            fee_amount = '-80728880015.0217', 
                                                            fee_rate = '-807', 
                                                            fee_rate_type = 'Gross', 
                                                            fee_type = 'ArrangedOverdraft', 
                                                            incremental_borrowing_amount = '-80728880015.0217', 
                                                            negotiable_indicator = True, 
                                                            overdraft_control_indicator = True, )
                                                        ], )
                                                ], 
                                            overdraft_tier_band = [
                                                openapi_client.models.overdraft_tier_band_inner.OverdraftTierBand_inner(
                                                    agreement_length_max = 1.337, 
                                                    agreement_length_min = 1.337, 
                                                    agreement_period = 'Day', 
                                                    bank_guaranteed_indicator = True, 
                                                    ear = '-807', 
                                                    identification = '0', 
                                                    overdraft_interest_charging_coverage = 'Banded', 
                                                    representative_apr = '-807', 
                                                    tier_value_max = '-80728880015.0217', 
                                                    tier_value_min = '-80728880015.0217', )
                                                ], 
                                            overdraft_type = 'Committed', 
                                            tier_band_method = 'Banded', )
                                        ], ), 
                                product_details = openapi_client.models.product_details.ProductDetails(
                                    fee_free_length = 1.337, 
                                    fee_free_length_period = 'Day', 
                                    segment = [
                                        'ClientAccount'
                                        ], ), ), 
                            marketing_state_id = '0', 
                            other_product_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type.OBReadProduct2_Data_Product_inner_OtherProductType(
                                description = '0', 
                                loan_interest = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest(
                                    loan_interest_tier_band_set = [
                                        openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner(
                                            calculation_method = 'ITCO', 
                                            identification = '0', 
                                            loan_interest_fees_charges = [
                                                openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_fees_charges_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestFeesCharges_inner(
                                                    loan_interest_fee_charge_cap = [
                                                        openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_fees_charges_inner_loan_interest_fee_charge_cap_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestFeesCharges_inner_LoanInterestFeeChargeCap_inner(
                                                            capping_period = 'FEAC', 
                                                            fee_cap_amount = '-80728880015.0217', 
                                                            fee_cap_occurrence = 56, 
                                                            fee_type = [
                                                                'FEPF'
                                                                ], 
                                                            min_max_type = 'FMMN', )
                                                        ], 
                                                    loan_interest_fee_charge_detail = [
                                                        openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_fees_charges_inner_loan_interest_fee_charge_detail_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestFeesCharges_inner_LoanInterestFeeChargeDetail_inner(
                                                            application_frequency = 'FEAC', 
                                                            calculation_frequency = 'FEAC', 
                                                            fee_amount = '-80728880015.0217', 
                                                            fee_rate = '-807', 
                                                            fee_rate_type = 'INBB', 
                                                            fee_type = 'FEPF', 
                                                            negotiable_indicator = True, )
                                                        ], )
                                                ], 
                                            loan_interest_tier_band = [
                                                openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_tier_band_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestTierBand_inner(
                                                    fixed_variable_interest_rate_type = 'INFI', 
                                                    identification = '0', 
                                                    loan_provider_interest_rate = '-807', 
                                                    loan_provider_interest_rate_type = 'INBB', 
                                                    max_term_period = 'PACT', 
                                                    min_term_period = 'PACT', 
                                                    other_loan_provider_interest_rate_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_tier_band_inner_other_loan_provider_interest_rate_type.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestTierBand_inner_OtherLoanProviderInterestRateType(
                                                        code = '\\', 
                                                        description = '0', 
                                                        name = '0', ), 
                                                    rep_apr = '-807', 
                                                    tier_value_max_term = 56, 
                                                    tier_value_maximum = '-80728880015.0217', 
                                                    tier_value_min_term = 56, 
                                                    tier_value_minimum = '-80728880015.0217', )
                                                ], 
                                            other_calculation_method = openapi_client.models.ob_other_code_type1_0.OB_OtherCodeType1_0(
                                                description = '0', 
                                                name = '0', ), 
                                            tier_band_method = 'INBA', )
                                        ], ), 
                                name = '0', 
                                repayment = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment(
                                    amount_type = 'RABD', 
                                    other_amount_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_other_amount_type.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_OtherAmountType(
                                        description = , 
                                        name = , ), 
                                    other_repayment_frequency = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_other_repayment_frequency.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_OtherRepaymentFrequency(
                                        description = , 
                                        name = , ), 
                                    other_repayment_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_other_repayment_type.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_OtherRepaymentType(
                                        description = , 
                                        name = , ), 
                                    repayment_fee_charges = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentFeeCharges(
                                        repayment_fee_charge_cap = [
                                            openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges_repayment_fee_charge_cap_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentFeeCharges_RepaymentFeeChargeCap_inner(
                                                fee_type = [
                                                    'FEPF'
                                                    ], 
                                                min_max_type = 'FMMN', )
                                            ], 
                                        repayment_fee_charge_detail = [
                                            openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges_repayment_fee_charge_detail_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentFeeCharges_RepaymentFeeChargeDetail_inner(
                                                application_frequency = 'FEAC', 
                                                calculation_frequency = 'FEAC', 
                                                fee_type = 'FEPF', 
                                                negotiable_indicator = True, )
                                            ], ), 
                                    repayment_frequency = 'SMDA', 
                                    repayment_holiday = [
                                        openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_holiday_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentHoliday_inner(
                                            max_holiday_length = 56, 
                                            max_holiday_period = 'PACT', )
                                        ], 
                                    repayment_type = 'USBA', ), 
                                supplementary_data = { }, ), 
                            pca = openapi_client.models.pca.PCA(), 
                            product_id = '0', 
                            product_name = '0', 
                            product_type = 'BusinessCurrentAccount', 
                            secondary_product_id = '0', )
                        ], ),
        )
        """

    def testOBReadProduct2(self):
        """Test OBReadProduct2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
