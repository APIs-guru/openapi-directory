# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_read_scheduled_payment3 import OBReadScheduledPayment3

class TestOBReadScheduledPayment3(unittest.TestCase):
    """OBReadScheduledPayment3 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBReadScheduledPayment3:
        """Test OBReadScheduledPayment3
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBReadScheduledPayment3`
        """
        model = OBReadScheduledPayment3()
        if include_optional:
            return OBReadScheduledPayment3(
                data = openapi_client.models.ob_read_scheduled_payment3_data.OBReadScheduledPayment3_Data(
                    scheduled_payment = [
                        openapi_client.models.ob_scheduled_payment3.OBScheduledPayment3(
                            account_id = '0', 
                            creditor_account = openapi_client.models.ob_cash_account5_1.OBCashAccount5_1(
                                identification = '0', 
                                name = '0', 
                                scheme_name = '', 
                                secondary_identification = '0', ), 
                            creditor_agent = openapi_client.models.ob_branch_and_financial_institution_identification5_1.OBBranchAndFinancialInstitutionIdentification5_1(
                                identification = '0', 
                                scheme_name = '', ), 
                            debtor_reference = '0', 
                            instructed_amount = openapi_client.models.ob_active_or_historic_currency_and_amount_1.OBActiveOrHistoricCurrencyAndAmount_1(
                                amount = '80728.8001', 
                                currency = 'AEI', ), 
                            reference = '0', 
                            scheduled_payment_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            scheduled_payment_id = '0', 
                            scheduled_type = 'Arrival', )
                        ], ),
                links = openapi_client.models.links.Links(
                    first = '', 
                    last = '', 
                    next = '', 
                    prev = '', 
                    self = '', ),
                meta = openapi_client.models.meta_data.MetaData(
                    first_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    total_pages = 56, )
            )
        else:
            return OBReadScheduledPayment3(
                data = openapi_client.models.ob_read_scheduled_payment3_data.OBReadScheduledPayment3_Data(
                    scheduled_payment = [
                        openapi_client.models.ob_scheduled_payment3.OBScheduledPayment3(
                            account_id = '0', 
                            creditor_account = openapi_client.models.ob_cash_account5_1.OBCashAccount5_1(
                                identification = '0', 
                                name = '0', 
                                scheme_name = '', 
                                secondary_identification = '0', ), 
                            creditor_agent = openapi_client.models.ob_branch_and_financial_institution_identification5_1.OBBranchAndFinancialInstitutionIdentification5_1(
                                identification = '0', 
                                scheme_name = '', ), 
                            debtor_reference = '0', 
                            instructed_amount = openapi_client.models.ob_active_or_historic_currency_and_amount_1.OBActiveOrHistoricCurrencyAndAmount_1(
                                amount = '80728.8001', 
                                currency = 'AEI', ), 
                            reference = '0', 
                            scheduled_payment_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            scheduled_payment_id = '0', 
                            scheduled_type = 'Arrival', )
                        ], ),
        )
        """

    def testOBReadScheduledPayment3(self):
        """Test OBReadScheduledPayment3"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
