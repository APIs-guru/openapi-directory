# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges_repayment_fee_charge_detail_inner import OBReadProduct2DataProductInnerOtherProductTypeRepaymentRepaymentFeeChargesRepaymentFeeChargeDetailInner

class TestOBReadProduct2DataProductInnerOtherProductTypeRepaymentRepaymentFeeChargesRepaymentFeeChargeDetailInner(unittest.TestCase):
    """OBReadProduct2DataProductInnerOtherProductTypeRepaymentRepaymentFeeChargesRepaymentFeeChargeDetailInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBReadProduct2DataProductInnerOtherProductTypeRepaymentRepaymentFeeChargesRepaymentFeeChargeDetailInner:
        """Test OBReadProduct2DataProductInnerOtherProductTypeRepaymentRepaymentFeeChargesRepaymentFeeChargeDetailInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBReadProduct2DataProductInnerOtherProductTypeRepaymentRepaymentFeeChargesRepaymentFeeChargeDetailInner`
        """
        model = OBReadProduct2DataProductInnerOtherProductTypeRepaymentRepaymentFeeChargesRepaymentFeeChargeDetailInner()
        if include_optional:
            return OBReadProduct2DataProductInnerOtherProductTypeRepaymentRepaymentFeeChargesRepaymentFeeChargeDetailInner(
                application_frequency = 'FEAC',
                calculation_frequency = 'FEAC',
                fee_amount = '-80728880015.0217',
                fee_rate = '-807',
                fee_rate_type = 'INBB',
                fee_type = 'FEPF',
                negotiable_indicator = True,
                notes = [
                    '0'
                    ],
                other_application_frequency = openapi_client.models.ob_other_code_type1_6.OB_OtherCodeType1_6(
                    code = '\\', 
                    description = '0', 
                    name = '0', ),
                other_calculation_frequency = openapi_client.models.ob_other_code_type1_7.OB_OtherCodeType1_7(
                    code = '\\', 
                    description = '0', 
                    name = '0', ),
                other_fee_rate_type = openapi_client.models.ob_other_code_type1_8.OB_OtherCodeType1_8(
                    code = '\\', 
                    description = '0', 
                    name = '0', ),
                other_fee_type = openapi_client.models.ob_other_fee_charge_detail_type.OB_OtherFeeChargeDetailType(
                    code = '\\', 
                    description = '0', 
                    fee_category = 'FCOT', 
                    name = '0', )
            )
        else:
            return OBReadProduct2DataProductInnerOtherProductTypeRepaymentRepaymentFeeChargesRepaymentFeeChargeDetailInner(
                application_frequency = 'FEAC',
                calculation_frequency = 'FEAC',
                fee_type = 'FEPF',
        )
        """

    def testOBReadProduct2DataProductInnerOtherProductTypeRepaymentRepaymentFeeChargesRepaymentFeeChargeDetailInner(self):
        """Test OBReadProduct2DataProductInnerOtherProductTypeRepaymentRepaymentFeeChargesRepaymentFeeChargeDetailInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
