# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.credit_interest1 import CreditInterest1

class TestCreditInterest1(unittest.TestCase):
    """CreditInterest1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreditInterest1:
        """Test CreditInterest1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreditInterest1`
        """
        model = CreditInterest1()
        if include_optional:
            return CreditInterest1(
                tier_band_set = [
                    openapi_client.models.tier_band_set_inner_1.TierBandSet_inner_1(
                        calculation_method = 'Compound', 
                        destination = 'PayAway', 
                        notes = [
                            '0'
                            ], 
                        tier_band = [
                            openapi_client.models.tier_band_inner_1.TierBand_inner_1(
                                aer = '-807', 
                                application_frequency = 'PerAcademicTerm', 
                                bank_interest_rate = '-807', 
                                bank_interest_rate_type = 'LinkedBaseRate', 
                                calculation_frequency = 'PerAcademicTerm', 
                                deposit_interest_applied_coverage = 'Tiered', 
                                fixed_variable_interest_rate_type = 'Fixed', 
                                identification = '0', 
                                other_application_frequency = openapi_client.models.other_application_frequency.OtherApplicationFrequency(
                                    code = '', 
                                    description = '0', 
                                    name = '0', ), 
                                other_bank_interest_type = openapi_client.models.other_bank_interest_type.OtherBankInterestType(
                                    code = '', 
                                    description = '0', 
                                    name = '0', ), 
                                other_calculation_frequency = openapi_client.models.other_calculation_frequency.OtherCalculationFrequency(
                                    code = '', 
                                    description = '0', 
                                    name = '0', ), 
                                tier_value_maximum = '-80728880015.0217', 
                                tier_value_minimum = '-80728880015.0217', )
                            ], 
                        tier_band_method = 'Tiered', )
                    ]
            )
        else:
            return CreditInterest1(
                tier_band_set = [
                    openapi_client.models.tier_band_set_inner_1.TierBandSet_inner_1(
                        calculation_method = 'Compound', 
                        destination = 'PayAway', 
                        notes = [
                            '0'
                            ], 
                        tier_band = [
                            openapi_client.models.tier_band_inner_1.TierBand_inner_1(
                                aer = '-807', 
                                application_frequency = 'PerAcademicTerm', 
                                bank_interest_rate = '-807', 
                                bank_interest_rate_type = 'LinkedBaseRate', 
                                calculation_frequency = 'PerAcademicTerm', 
                                deposit_interest_applied_coverage = 'Tiered', 
                                fixed_variable_interest_rate_type = 'Fixed', 
                                identification = '0', 
                                other_application_frequency = openapi_client.models.other_application_frequency.OtherApplicationFrequency(
                                    code = '', 
                                    description = '0', 
                                    name = '0', ), 
                                other_bank_interest_type = openapi_client.models.other_bank_interest_type.OtherBankInterestType(
                                    code = '', 
                                    description = '0', 
                                    name = '0', ), 
                                other_calculation_frequency = openapi_client.models.other_calculation_frequency.OtherCalculationFrequency(
                                    code = '', 
                                    description = '0', 
                                    name = '0', ), 
                                tier_value_maximum = '-80728880015.0217', 
                                tier_value_minimum = '-80728880015.0217', )
                            ], 
                        tier_band_method = 'Tiered', )
                    ],
        )
        """

    def testCreditInterest1(self):
        """Test CreditInterest1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
