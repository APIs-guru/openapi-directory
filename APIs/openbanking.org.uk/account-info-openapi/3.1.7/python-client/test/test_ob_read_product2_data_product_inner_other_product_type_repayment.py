# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment import OBReadProduct2DataProductInnerOtherProductTypeRepayment

class TestOBReadProduct2DataProductInnerOtherProductTypeRepayment(unittest.TestCase):
    """OBReadProduct2DataProductInnerOtherProductTypeRepayment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBReadProduct2DataProductInnerOtherProductTypeRepayment:
        """Test OBReadProduct2DataProductInnerOtherProductTypeRepayment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBReadProduct2DataProductInnerOtherProductTypeRepayment`
        """
        model = OBReadProduct2DataProductInnerOtherProductTypeRepayment()
        if include_optional:
            return OBReadProduct2DataProductInnerOtherProductTypeRepayment(
                amount_type = 'RABD',
                notes = [
                    '0'
                    ],
                other_amount_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_other_amount_type.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_OtherAmountType(
                    code = '\\', 
                    description = '0', 
                    name = '0', ),
                other_repayment_frequency = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_other_repayment_frequency.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_OtherRepaymentFrequency(
                    code = '\\', 
                    description = '0', 
                    name = '0', ),
                other_repayment_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_other_repayment_type.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_OtherRepaymentType(
                    code = '\\', 
                    description = '0', 
                    name = '0', ),
                repayment_fee_charges = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentFeeCharges(
                    repayment_fee_charge_cap = [
                        openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges_repayment_fee_charge_cap_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentFeeCharges_RepaymentFeeChargeCap_inner(
                            capping_period = 'PACT', 
                            fee_cap_amount = '-80728880015.0217', 
                            fee_cap_occurrence = 56, 
                            fee_type = [
                                'FEPF'
                                ], 
                            min_max_type = 'FMMN', 
                            notes = [
                                '0'
                                ], 
                            other_fee_type = [
                                openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_fees_charges_inner_loan_interest_fee_charge_cap_inner_other_fee_type_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestFeesCharges_inner_LoanInterestFeeChargeCap_inner_OtherFeeType_inner(
                                    code = '\\', 
                                    description = '0', 
                                    name = '0', )
                                ], )
                        ], 
                    repayment_fee_charge_detail = [
                        openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges_repayment_fee_charge_detail_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentFeeCharges_RepaymentFeeChargeDetail_inner(
                            application_frequency = 'FEAC', 
                            calculation_frequency = 'FEAC', 
                            fee_amount = '-80728880015.0217', 
                            fee_rate = '-807', 
                            fee_rate_type = 'INBB', 
                            fee_type = 'FEPF', 
                            negotiable_indicator = True, 
                            other_application_frequency = openapi_client.models.ob_other_code_type1_6.OB_OtherCodeType1_6(
                                code = '\\', 
                                description = '0', 
                                name = '0', ), 
                            other_calculation_frequency = openapi_client.models.ob_other_code_type1_7.OB_OtherCodeType1_7(
                                code = '\\', 
                                description = '0', 
                                name = '0', ), 
                            other_fee_rate_type = openapi_client.models.ob_other_code_type1_8.OB_OtherCodeType1_8(
                                code = '\\', 
                                description = '0', 
                                name = '0', ), )
                        ], ),
                repayment_frequency = 'SMDA',
                repayment_holiday = [
                    openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_holiday_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentHoliday_inner(
                        max_holiday_length = 56, 
                        max_holiday_period = 'PACT', 
                        notes = [
                            '0'
                            ], )
                    ],
                repayment_type = 'USBA'
            )
        else:
            return OBReadProduct2DataProductInnerOtherProductTypeRepayment(
        )
        """

    def testOBReadProduct2DataProductInnerOtherProductTypeRepayment(self):
        """Test OBReadProduct2DataProductInnerOtherProductTypeRepayment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
