# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_read_transaction6 import OBReadTransaction6

class TestOBReadTransaction6(unittest.TestCase):
    """OBReadTransaction6 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBReadTransaction6:
        """Test OBReadTransaction6
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBReadTransaction6`
        """
        model = OBReadTransaction6()
        if include_optional:
            return OBReadTransaction6(
                data = openapi_client.models.ob_read_data_transaction6.OBReadDataTransaction6(
                    transaction = [
                        openapi_client.models.ob_transaction6.OBTransaction6(
                            account_id = '0', 
                            address_line = '0', 
                            amount = openapi_client.models.ob_active_or_historic_currency_and_amount_9.OBActiveOrHistoricCurrencyAndAmount_9(
                                amount = '80728.8001', 
                                currency = 'AEI', ), 
                            balance = openapi_client.models.ob_transaction_cash_balance.OBTransactionCashBalance(
                                amount = openapi_client.models.ob_transaction_cash_balance_amount.OBTransactionCashBalance_Amount(
                                    amount = '80728.8001', 
                                    currency = 'AEI', ), 
                                credit_debit_indicator = 'Credit', 
                                type = 'ClosingAvailable', ), 
                            bank_transaction_code = openapi_client.models.ob_bank_transaction_code_structure1.OBBankTransactionCodeStructure1(
                                code = '', 
                                sub_code = '', ), 
                            booking_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            card_instrument = openapi_client.models.ob_transaction_card_instrument1.OBTransactionCardInstrument1(
                                authorisation_type = 'ConsumerDevice', 
                                card_scheme_name = 'AmericanExpress', 
                                identification = '0', 
                                name = '0', ), 
                            charge_amount = openapi_client.models.ob_active_or_historic_currency_and_amount_10.OBActiveOrHistoricCurrencyAndAmount_10(
                                amount = '80728.8001', 
                                currency = 'AEI', ), 
                            credit_debit_indicator = 'Credit', 
                            creditor_account = openapi_client.models.ob_cash_account6_0.OBCashAccount6_0(
                                identification = '0', 
                                name = '0', 
                                scheme_name = '', 
                                secondary_identification = '0', ), 
                            creditor_agent = openapi_client.models.ob_branch_and_financial_institution_identification6_1.OBBranchAndFinancialInstitutionIdentification6_1(
                                identification = '0', 
                                name = '0', 
                                postal_address = openapi_client.models.ob_postal_address6.OBPostalAddress6(
                                    address_type = 'Business', 
                                    building_number = '0', 
                                    country = 'AE', 
                                    country_sub_division = '0', 
                                    department = '0', 
                                    post_code = '0', 
                                    street_name = '0', 
                                    sub_department = '0', 
                                    town_name = '0', ), 
                                scheme_name = '', ), 
                            currency_exchange = openapi_client.models.ob_currency_exchange5.OBCurrencyExchange5(
                                contract_identification = '0', 
                                exchange_rate = 1.337, 
                                instructed_amount = openapi_client.models.ob_currency_exchange5_instructed_amount.OBCurrencyExchange5_InstructedAmount(
                                    amount = '80728.8001', 
                                    currency = 'AEI', ), 
                                quotation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                source_currency = 'AEI', 
                                target_currency = 'AEI', 
                                unit_currency = 'AEI', ), 
                            debtor_account = openapi_client.models.ob_cash_account6_1.OBCashAccount6_1(
                                identification = '0', 
                                name = '0', 
                                scheme_name = '', 
                                secondary_identification = '0', ), 
                            debtor_agent = openapi_client.models.ob_branch_and_financial_institution_identification6_2.OBBranchAndFinancialInstitutionIdentification6_2(
                                identification = '0', 
                                name = '0', 
                                scheme_name = '', ), 
                            merchant_details = openapi_client.models.ob_merchant_details1.OBMerchantDetails1(
                                merchant_category_code = '012', 
                                merchant_name = '0', ), 
                            proprietary_bank_transaction_code = openapi_client.models.proprietary_bank_transaction_code_structure1.ProprietaryBankTransactionCodeStructure1(
                                code = '0', 
                                issuer = '0', ), 
                            statement_reference = [
                                '0'
                                ], 
                            status = 'Booked', 
                            supplementary_data = { }, 
                            transaction_id = '0', 
                            transaction_information = '0', 
                            transaction_mutability = 'Mutable', 
                            transaction_reference = '0', 
                            value_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], ),
                links = openapi_client.models.links.Links(
                    first = '', 
                    last = '', 
                    next = '', 
                    prev = '', 
                    self = '', ),
                meta = openapi_client.models.meta_data.MetaData(
                    first_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    total_pages = 56, )
            )
        else:
            return OBReadTransaction6(
                data = openapi_client.models.ob_read_data_transaction6.OBReadDataTransaction6(
                    transaction = [
                        openapi_client.models.ob_transaction6.OBTransaction6(
                            account_id = '0', 
                            address_line = '0', 
                            amount = openapi_client.models.ob_active_or_historic_currency_and_amount_9.OBActiveOrHistoricCurrencyAndAmount_9(
                                amount = '80728.8001', 
                                currency = 'AEI', ), 
                            balance = openapi_client.models.ob_transaction_cash_balance.OBTransactionCashBalance(
                                amount = openapi_client.models.ob_transaction_cash_balance_amount.OBTransactionCashBalance_Amount(
                                    amount = '80728.8001', 
                                    currency = 'AEI', ), 
                                credit_debit_indicator = 'Credit', 
                                type = 'ClosingAvailable', ), 
                            bank_transaction_code = openapi_client.models.ob_bank_transaction_code_structure1.OBBankTransactionCodeStructure1(
                                code = '', 
                                sub_code = '', ), 
                            booking_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            card_instrument = openapi_client.models.ob_transaction_card_instrument1.OBTransactionCardInstrument1(
                                authorisation_type = 'ConsumerDevice', 
                                card_scheme_name = 'AmericanExpress', 
                                identification = '0', 
                                name = '0', ), 
                            charge_amount = openapi_client.models.ob_active_or_historic_currency_and_amount_10.OBActiveOrHistoricCurrencyAndAmount_10(
                                amount = '80728.8001', 
                                currency = 'AEI', ), 
                            credit_debit_indicator = 'Credit', 
                            creditor_account = openapi_client.models.ob_cash_account6_0.OBCashAccount6_0(
                                identification = '0', 
                                name = '0', 
                                scheme_name = '', 
                                secondary_identification = '0', ), 
                            creditor_agent = openapi_client.models.ob_branch_and_financial_institution_identification6_1.OBBranchAndFinancialInstitutionIdentification6_1(
                                identification = '0', 
                                name = '0', 
                                postal_address = openapi_client.models.ob_postal_address6.OBPostalAddress6(
                                    address_type = 'Business', 
                                    building_number = '0', 
                                    country = 'AE', 
                                    country_sub_division = '0', 
                                    department = '0', 
                                    post_code = '0', 
                                    street_name = '0', 
                                    sub_department = '0', 
                                    town_name = '0', ), 
                                scheme_name = '', ), 
                            currency_exchange = openapi_client.models.ob_currency_exchange5.OBCurrencyExchange5(
                                contract_identification = '0', 
                                exchange_rate = 1.337, 
                                instructed_amount = openapi_client.models.ob_currency_exchange5_instructed_amount.OBCurrencyExchange5_InstructedAmount(
                                    amount = '80728.8001', 
                                    currency = 'AEI', ), 
                                quotation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                source_currency = 'AEI', 
                                target_currency = 'AEI', 
                                unit_currency = 'AEI', ), 
                            debtor_account = openapi_client.models.ob_cash_account6_1.OBCashAccount6_1(
                                identification = '0', 
                                name = '0', 
                                scheme_name = '', 
                                secondary_identification = '0', ), 
                            debtor_agent = openapi_client.models.ob_branch_and_financial_institution_identification6_2.OBBranchAndFinancialInstitutionIdentification6_2(
                                identification = '0', 
                                name = '0', 
                                scheme_name = '', ), 
                            merchant_details = openapi_client.models.ob_merchant_details1.OBMerchantDetails1(
                                merchant_category_code = '012', 
                                merchant_name = '0', ), 
                            proprietary_bank_transaction_code = openapi_client.models.proprietary_bank_transaction_code_structure1.ProprietaryBankTransactionCodeStructure1(
                                code = '0', 
                                issuer = '0', ), 
                            statement_reference = [
                                '0'
                                ], 
                            status = 'Booked', 
                            supplementary_data = { }, 
                            transaction_id = '0', 
                            transaction_information = '0', 
                            transaction_mutability = 'Mutable', 
                            transaction_reference = '0', 
                            value_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], ),
        )
        """

    def testOBReadTransaction6(self):
        """Test OBReadTransaction6"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
