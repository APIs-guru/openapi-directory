# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_read_direct_debit2 import OBReadDirectDebit2

class TestOBReadDirectDebit2(unittest.TestCase):
    """OBReadDirectDebit2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBReadDirectDebit2:
        """Test OBReadDirectDebit2
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBReadDirectDebit2`
        """
        model = OBReadDirectDebit2()
        if include_optional:
            return OBReadDirectDebit2(
                data = openapi_client.models.ob_read_direct_debit2_data.OBReadDirectDebit2_Data(
                    direct_debit = [
                        openapi_client.models.ob_read_direct_debit2_data_direct_debit_inner.OBReadDirectDebit2_Data_DirectDebit_inner(
                            account_id = '0', 
                            direct_debit_id = '0', 
                            direct_debit_status_code = 'Active', 
                            frequency = '', 
                            mandate_identification = '0', 
                            name = '0', 
                            previous_payment_amount = openapi_client.models.ob_active_or_historic_currency_and_amount_0.OBActiveOrHistoricCurrencyAndAmount_0(
                                amount = '80728.8001', 
                                currency = 'AEI', ), 
                            previous_payment_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], ),
                links = openapi_client.models.links.Links(
                    first = '', 
                    last = '', 
                    next = '', 
                    prev = '', 
                    self = '', ),
                meta = openapi_client.models.meta_data.MetaData(
                    first_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    total_pages = 56, )
            )
        else:
            return OBReadDirectDebit2(
                data = openapi_client.models.ob_read_direct_debit2_data.OBReadDirectDebit2_Data(
                    direct_debit = [
                        openapi_client.models.ob_read_direct_debit2_data_direct_debit_inner.OBReadDirectDebit2_Data_DirectDebit_inner(
                            account_id = '0', 
                            direct_debit_id = '0', 
                            direct_debit_status_code = 'Active', 
                            frequency = '', 
                            mandate_identification = '0', 
                            name = '0', 
                            previous_payment_amount = openapi_client.models.ob_active_or_historic_currency_and_amount_0.OBActiveOrHistoricCurrencyAndAmount_0(
                                amount = '80728.8001', 
                                currency = 'AEI', ), 
                            previous_payment_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], ),
        )
        """

    def testOBReadDirectDebit2(self):
        """Test OBReadDirectDebit2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
