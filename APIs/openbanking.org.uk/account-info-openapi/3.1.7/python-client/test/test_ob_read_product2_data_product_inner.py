# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_read_product2_data_product_inner import OBReadProduct2DataProductInner

class TestOBReadProduct2DataProductInner(unittest.TestCase):
    """OBReadProduct2DataProductInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBReadProduct2DataProductInner:
        """Test OBReadProduct2DataProductInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBReadProduct2DataProductInner`
        """
        model = OBReadProduct2DataProductInner()
        if include_optional:
            return OBReadProduct2DataProductInner(
                account_id = '0',
                bca = openapi_client.models.bca.BCA(
                    credit_interest = openapi_client.models.credit_interest.CreditInterest(
                        tier_band_set = [
                            openapi_client.models.tier_band_set_inner.TierBandSet_inner(
                                calculation_method = 'Compound', 
                                destination = 'PayAway', 
                                notes = [
                                    '0'
                                    ], 
                                tier_band = [
                                    openapi_client.models.tier_band_inner.TierBand_inner(
                                        aer = '-807', 
                                        application_frequency = 'Daily', 
                                        bank_interest_rate = '-807', 
                                        bank_interest_rate_type = 'Gross', 
                                        calculation_frequency = 'Daily', 
                                        deposit_interest_applied_coverage = 'Banded', 
                                        fixed_variable_interest_rate_type = 'Fixed', 
                                        identification = '0', 
                                        other_application_frequency = openapi_client.models.other_application_frequency.OtherApplicationFrequency(
                                            code = '', 
                                            description = '0', 
                                            name = '0', ), 
                                        other_bank_interest_type = openapi_client.models.other_bank_interest_type.OtherBankInterestType(
                                            code = '', 
                                            description = '0', 
                                            name = '0', ), 
                                        other_calculation_frequency = openapi_client.models.other_calculation_frequency.OtherCalculationFrequency(
                                            code = '', 
                                            description = '0', 
                                            name = '0', ), 
                                        tier_value_maximum = '-80728880015.0217', 
                                        tier_value_minimum = '-80728880015.0217', )
                                    ], 
                                tier_band_method = 'Banded', )
                            ], ), 
                    other_fees_charges = [
                        openapi_client.models.other_fees_charges_inner.OtherFeesCharges_inner(
                            fee_charge_cap = [
                                openapi_client.models.fee_charge_cap_inner.FeeChargeCap_inner(
                                    capping_period = 'Day', 
                                    fee_cap_amount = '-80728880015.0217', 
                                    fee_cap_occurrence = 1.337, 
                                    fee_type = [
                                        'Other'
                                        ], 
                                    min_max_type = 'Minimum', 
                                    other_fee_type = [
                                        openapi_client.models.other_fee_type_inner.OtherFeeType_inner(
                                            code = '', 
                                            description = '0', 
                                            name = '0', )
                                        ], )
                                ], 
                            fee_charge_detail = [
                                openapi_client.models.fee_charge_detail_inner.FeeChargeDetail_inner(
                                    application_frequency = 'OnClosing', 
                                    calculation_frequency = 'OnClosing', 
                                    fee_amount = '-80728880015.0217', 
                                    fee_applicable_range = openapi_client.models.fee_applicable_range.FeeApplicableRange(
                                        maximum_amount = '-80728880015.0217', 
                                        maximum_rate = '-807', 
                                        minimum_amount = '-80728880015.0217', 
                                        minimum_rate = '-807', ), 
                                    fee_category = 'Other', 
                                    fee_rate = '-807', 
                                    fee_rate_type = 'Gross', 
                                    fee_type = 'Other', 
                                    negotiable_indicator = True, 
                                    other_fee_category_type = openapi_client.models.other_fee_category_type.OtherFeeCategoryType(
                                        code = '', 
                                        description = '0', 
                                        name = '0', ), 
                                    other_fee_rate_type = openapi_client.models.other_fee_rate_type.OtherFeeRateType(
                                        code = '', 
                                        description = '0', 
                                        name = '0', ), )
                                ], 
                            other_tariff_type = openapi_client.models.other_tariff_type.OtherTariffType(
                                code = '', 
                                description = '0', 
                                name = '0', ), 
                            tariff_name = '0', 
                            tariff_type = 'Electronic', )
                        ], 
                    overdraft = openapi_client.models.overdraft.Overdraft(
                        overdraft_tier_band_set = [
                            openapi_client.models.overdraft_tier_band_set_inner.OverdraftTierBandSet_inner(
                                authorised_indicator = True, 
                                buffer_amount = '-80728880015.0217', 
                                identification = '0', 
                                overdraft_fees_charges = [
                                    openapi_client.models.overdraft_fees_charges_inner.OverdraftFeesCharges_inner(
                                        overdraft_fee_charge_cap = [
                                            openapi_client.models.overdraft_fee_charge_cap_inner.OverdraftFeeChargeCap_inner(
                                                capping_period = 'Day', 
                                                fee_cap_amount = '-80728880015.0217', 
                                                fee_cap_occurrence = 1.337, 
                                                fee_type = [
                                                    'ArrangedOverdraft'
                                                    ], 
                                                min_max_type = 'Minimum', )
                                            ], 
                                        overdraft_fee_charge_detail = [
                                            openapi_client.models.overdraft_fee_charge_detail_inner.OverdraftFeeChargeDetail_inner(
                                                application_frequency = 'OnClosing', 
                                                calculation_frequency = 'OnClosing', 
                                                fee_amount = '-80728880015.0217', 
                                                fee_rate = '-807', 
                                                fee_rate_type = 'Gross', 
                                                fee_type = 'ArrangedOverdraft', 
                                                incremental_borrowing_amount = '-80728880015.0217', 
                                                negotiable_indicator = True, 
                                                overdraft_control_indicator = True, )
                                            ], )
                                    ], 
                                overdraft_tier_band = [
                                    openapi_client.models.overdraft_tier_band_inner.OverdraftTierBand_inner(
                                        agreement_length_max = 1.337, 
                                        agreement_length_min = 1.337, 
                                        agreement_period = 'Day', 
                                        bank_guaranteed_indicator = True, 
                                        ear = '-807', 
                                        identification = '0', 
                                        overdraft_interest_charging_coverage = 'Banded', 
                                        representative_apr = '-807', 
                                        tier_value_max = '-80728880015.0217', 
                                        tier_value_min = '-80728880015.0217', )
                                    ], 
                                overdraft_type = 'Committed', 
                                tier_band_method = 'Banded', )
                            ], ), 
                    product_details = openapi_client.models.product_details.ProductDetails(
                        fee_free_length = 1.337, 
                        fee_free_length_period = 'Day', 
                        segment = [
                            'ClientAccount'
                            ], ), ),
                marketing_state_id = '0',
                other_product_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type.OBReadProduct2_Data_Product_inner_OtherProductType(
                    credit_interest = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_credit_interest.OBReadProduct2_Data_Product_inner_OtherProductType_CreditInterest(
                        tier_band_set = [
                            openapi_client.models.ob_read_product2_data_product_inner_other_product_type_credit_interest_tier_band_set_inner.OBReadProduct2_Data_Product_inner_OtherProductType_CreditInterest_TierBandSet_inner(
                                calculation_method = 'ITCO', 
                                destination = 'INOT', 
                                notes = [
                                    '0'
                                    ], 
                                other_calculation_method = openapi_client.models.ob_other_code_type1_0.OB_OtherCodeType1_0(
                                    code = '\\', 
                                    description = '0', 
                                    name = '0', ), 
                                other_destination = openapi_client.models.ob_other_code_type1_0.OB_OtherCodeType1_0(
                                    code = '\\', 
                                    description = '0', 
                                    name = '0', ), 
                                tier_band = [
                                    openapi_client.models.ob_read_product2_data_product_inner_other_product_type_credit_interest_tier_band_set_inner_tier_band_inner.OBReadProduct2_Data_Product_inner_OtherProductType_CreditInterest_TierBandSet_inner_TierBand_inner(
                                        aer = '-807', 
                                        application_frequency = 'FQAT', 
                                        bank_interest_rate = '-807', 
                                        bank_interest_rate_type = 'INBB', 
                                        calculation_frequency = 'FQAT', 
                                        deposit_interest_applied_coverage = 'INBA', 
                                        fixed_variable_interest_rate_type = 'INFI', 
                                        identification = '0', 
                                        other_application_frequency = openapi_client.models.ob_other_code_type1_1.OB_OtherCodeType1_1(
                                            code = '\\', 
                                            description = '0', 
                                            name = '0', ), 
                                        other_bank_interest_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_credit_interest_tier_band_set_inner_tier_band_inner_other_bank_interest_type.OBReadProduct2_Data_Product_inner_OtherProductType_CreditInterest_TierBandSet_inner_TierBand_inner_OtherBankInterestType(
                                            code = '\\', 
                                            description = '0', 
                                            name = '0', ), 
                                        other_calculation_frequency = openapi_client.models.ob_other_code_type1_2.OB_OtherCodeType1_2(
                                            code = '\\', 
                                            description = '0', 
                                            name = '0', ), 
                                        tier_value_maximum = '-80728880015.0217', 
                                        tier_value_minimum = '-80728880015.0217', )
                                    ], 
                                tier_band_method = 'INBA', )
                            ], ), 
                    description = '0', 
                    loan_interest = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest(
                        loan_interest_tier_band_set = [
                            openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner(
                                calculation_method = 'ITCO', 
                                identification = '0', 
                                loan_interest_fees_charges = [
                                    openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_fees_charges_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestFeesCharges_inner(
                                        loan_interest_fee_charge_cap = [
                                            openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_fees_charges_inner_loan_interest_fee_charge_cap_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestFeesCharges_inner_LoanInterestFeeChargeCap_inner(
                                                capping_period = 'FEAC', 
                                                fee_cap_amount = '-80728880015.0217', 
                                                fee_cap_occurrence = 56, 
                                                fee_type = [
                                                    'FEPF'
                                                    ], 
                                                min_max_type = 'FMMN', 
                                                other_fee_type = [
                                                    openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_fees_charges_inner_loan_interest_fee_charge_cap_inner_other_fee_type_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestFeesCharges_inner_LoanInterestFeeChargeCap_inner_OtherFeeType_inner(
                                                        code = '\\', 
                                                        description = '0', 
                                                        name = '0', )
                                                    ], )
                                            ], 
                                        loan_interest_fee_charge_detail = [
                                            openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_fees_charges_inner_loan_interest_fee_charge_detail_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestFeesCharges_inner_LoanInterestFeeChargeDetail_inner(
                                                application_frequency = 'FEAC', 
                                                calculation_frequency = 'FEAC', 
                                                fee_amount = '-80728880015.0217', 
                                                fee_rate = '-807', 
                                                fee_rate_type = 'INBB', 
                                                fee_type = 'FEPF', 
                                                negotiable_indicator = True, 
                                                other_fee_rate_type = openapi_client.models.ob_other_code_type1_5.OB_OtherCodeType1_5(
                                                    code = '\\', 
                                                    description = '0', 
                                                    name = '0', ), )
                                            ], )
                                    ], 
                                loan_interest_tier_band = [
                                    openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_tier_band_inner.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestTierBand_inner(
                                        fixed_variable_interest_rate_type = 'INFI', 
                                        identification = '0', 
                                        loan_provider_interest_rate = '-807', 
                                        loan_provider_interest_rate_type = 'INBB', 
                                        max_term_period = 'PACT', 
                                        min_term_period = 'PACT', 
                                        other_loan_provider_interest_rate_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_loan_interest_loan_interest_tier_band_set_inner_loan_interest_tier_band_inner_other_loan_provider_interest_rate_type.OBReadProduct2_Data_Product_inner_OtherProductType_LoanInterest_LoanInterestTierBandSet_inner_LoanInterestTierBand_inner_OtherLoanProviderInterestRateType(
                                            code = '\\', 
                                            description = '0', 
                                            name = '0', ), 
                                        rep_apr = '-807', 
                                        tier_value_max_term = 56, 
                                        tier_value_maximum = '-80728880015.0217', 
                                        tier_value_min_term = 56, 
                                        tier_value_minimum = '-80728880015.0217', )
                                    ], 
                                tier_band_method = 'INBA', )
                            ], ), 
                    name = '0', 
                    other_fees_charges = [
                        openapi_client.models.ob_read_product2_data_product_inner_other_product_type_other_fees_charges_inner.OBReadProduct2_Data_Product_inner_OtherProductType_OtherFeesCharges_inner(
                            fee_charge_cap = [
                                openapi_client.models.ob_read_product2_data_product_inner_other_product_type_other_fees_charges_inner_fee_charge_cap_inner.OBReadProduct2_Data_Product_inner_OtherProductType_OtherFeesCharges_inner_FeeChargeCap_inner(
                                    fee_cap_amount = '-80728880015.0217', 
                                    fee_cap_occurrence = 56, 
                                    fee_type = [
                                        'FEPF'
                                        ], 
                                    min_max_type = 'FMMN', )
                                ], 
                            fee_charge_detail = [
                                openapi_client.models.ob_read_product2_data_product_inner_other_product_type_other_fees_charges_inner_fee_charge_detail_inner.OBReadProduct2_Data_Product_inner_OtherProductType_OtherFeesCharges_inner_FeeChargeDetail_inner(
                                    application_frequency = 'FEAC', 
                                    fee_amount = '-80728880015.0217', 
                                    fee_applicable_range = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_other_fees_charges_inner_fee_charge_detail_inner_fee_applicable_range.OBReadProduct2_Data_Product_inner_OtherProductType_OtherFeesCharges_inner_FeeChargeDetail_inner_FeeApplicableRange(
                                        maximum_amount = '-80728880015.0217', 
                                        maximum_rate = '-807', 
                                        minimum_amount = '-80728880015.0217', 
                                        minimum_rate = '-807', ), 
                                    fee_category = 'FCOT', 
                                    fee_rate = '-807', 
                                    fee_type = 'FEPF', 
                                    negotiable_indicator = True, 
                                    other_fee_category_type = , )
                                ], 
                            other_tariff_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_other_fees_charges_inner_other_tariff_type.OBReadProduct2_Data_Product_inner_OtherProductType_OtherFeesCharges_inner_OtherTariffType(
                                code = '\\', 
                                description = '0', 
                                name = '0', ), 
                            tariff_name = '0', 
                            tariff_type = 'TTEL', )
                        ], 
                    overdraft = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_overdraft.OBReadProduct2_Data_Product_inner_OtherProductType_Overdraft(
                        overdraft_tier_band_set = [
                            openapi_client.models.ob_read_product2_data_product_inner_other_product_type_overdraft_overdraft_tier_band_set_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Overdraft_OverdraftTierBandSet_inner(
                                authorised_indicator = True, 
                                buffer_amount = '-80728880015.0217', 
                                identification = '0', 
                                overdraft_fees_charges = [
                                    openapi_client.models.ob_read_product2_data_product_inner_other_product_type_overdraft_overdraft_tier_band_set_inner_overdraft_fees_charges_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Overdraft_OverdraftTierBandSet_inner_OverdraftFeesCharges_inner(
                                        overdraft_fee_charge_cap = [
                                            openapi_client.models.ob_read_product2_data_product_inner_other_product_type_overdraft_overdraft_tier_band_set_inner_overdraft_fees_charges_inner_overdraft_fee_charge_cap_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Overdraft_OverdraftTierBandSet_inner_OverdraftFeesCharges_inner_OverdraftFeeChargeCap_inner(
                                                fee_cap_amount = '-80728880015.0217', 
                                                fee_cap_occurrence = 56, 
                                                fee_type = [
                                                    'FBAO'
                                                    ], 
                                                min_max_type = , )
                                            ], 
                                        overdraft_fee_charge_detail = [
                                            openapi_client.models.ob_read_product2_data_product_inner_other_product_type_overdraft_overdraft_tier_band_set_inner_overdraft_fees_charges_inner_overdraft_fee_charge_detail_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Overdraft_OverdraftTierBandSet_inner_OverdraftFeesCharges_inner_OverdraftFeeChargeDetail_inner(
                                                application_frequency = 'FEAC', 
                                                fee_amount = '-80728880015.0217', 
                                                fee_rate = '-807', 
                                                fee_type = 'FBAO', 
                                                incremental_borrowing_amount = '-80728880015.0217', 
                                                negotiable_indicator = True, 
                                                overdraft_control_indicator = True, )
                                            ], )
                                    ], 
                                overdraft_tier_band = [
                                    openapi_client.models.ob_read_product2_data_product_inner_other_product_type_overdraft_overdraft_tier_band_set_inner_overdraft_tier_band_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Overdraft_OverdraftTierBandSet_inner_OverdraftTierBand_inner(
                                        agreement_length_max = 56, 
                                        agreement_length_min = 56, 
                                        agreement_period = 'PACT', 
                                        bank_guaranteed_indicator = True, 
                                        ear = '-807', 
                                        identification = '0', 
                                        overdraft_interest_charging_coverage = 'INBA', 
                                        tier_value_max = '-80728880015.0217', 
                                        tier_value_min = '-80728880015.0217', )
                                    ], 
                                overdraft_type = 'OVCO', 
                                tier_band_method = 'INBA', )
                            ], ), 
                    product_details = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_product_details.OBReadProduct2_Data_Product_inner_OtherProductType_ProductDetails(
                        fee_free_length = 56, 
                        fee_free_length_period = 'PACT', 
                        monthly_maximum_charge = '-80728880015.0217', 
                        other_segment = , 
                        segment = [
                            'GEAS'
                            ], ), 
                    repayment = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment(
                        amount_type = 'RABD', 
                        other_amount_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_other_amount_type.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_OtherAmountType(
                            code = '\\', 
                            description = '0', 
                            name = '0', ), 
                        other_repayment_frequency = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_other_repayment_frequency.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_OtherRepaymentFrequency(
                            code = '\\', 
                            description = '0', 
                            name = '0', ), 
                        other_repayment_type = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_other_repayment_type.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_OtherRepaymentType(
                            code = '\\', 
                            description = '0', 
                            name = '0', ), 
                        repayment_fee_charges = openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentFeeCharges(
                            repayment_fee_charge_cap = [
                                openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges_repayment_fee_charge_cap_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentFeeCharges_RepaymentFeeChargeCap_inner(
                                    fee_cap_amount = '-80728880015.0217', 
                                    fee_cap_occurrence = 56, 
                                    fee_type = , 
                                    min_max_type = , )
                                ], 
                            repayment_fee_charge_detail = [
                                openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_fee_charges_repayment_fee_charge_detail_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentFeeCharges_RepaymentFeeChargeDetail_inner(
                                    application_frequency = , 
                                    calculation_frequency = 'FEAC', 
                                    fee_amount = '-80728880015.0217', 
                                    fee_rate = '-807', 
                                    fee_type = , 
                                    negotiable_indicator = True, )
                                ], ), 
                        repayment_frequency = 'SMDA', 
                        repayment_holiday = [
                            openapi_client.models.ob_read_product2_data_product_inner_other_product_type_repayment_repayment_holiday_inner.OBReadProduct2_Data_Product_inner_OtherProductType_Repayment_RepaymentHoliday_inner(
                                max_holiday_length = 56, 
                                max_holiday_period = 'PACT', )
                            ], 
                        repayment_type = 'USBA', ), 
                    supplementary_data = { }, ),
                pca = openapi_client.models.pca.PCA(
                    credit_interest = openapi_client.models.credit_interest.CreditInterest(
                        tier_band_set = [
                            openapi_client.models.tier_band_set_inner_1.TierBandSet_inner_1(
                                calculation_method = 'Compound', 
                                destination = 'PayAway', 
                                notes = [
                                    '0'
                                    ], 
                                tier_band = [
                                    openapi_client.models.tier_band_inner_1.TierBand_inner_1(
                                        aer = '-807', 
                                        application_frequency = 'PerAcademicTerm', 
                                        bank_interest_rate = '-807', 
                                        bank_interest_rate_type = 'LinkedBaseRate', 
                                        calculation_frequency = 'PerAcademicTerm', 
                                        deposit_interest_applied_coverage = 'Tiered', 
                                        fixed_variable_interest_rate_type = 'Fixed', 
                                        identification = '0', 
                                        other_application_frequency = openapi_client.models.other_application_frequency.OtherApplicationFrequency(
                                            code = '', 
                                            description = '0', 
                                            name = '0', ), 
                                        other_bank_interest_type = openapi_client.models.other_bank_interest_type.OtherBankInterestType(
                                            code = '', 
                                            description = '0', 
                                            name = '0', ), 
                                        other_calculation_frequency = openapi_client.models.other_calculation_frequency.OtherCalculationFrequency(
                                            code = '', 
                                            description = '0', 
                                            name = '0', ), 
                                        tier_value_maximum = '-80728880015.0217', 
                                        tier_value_minimum = '-80728880015.0217', )
                                    ], 
                                tier_band_method = 'Tiered', )
                            ], ), 
                    other_fees_charges = openapi_client.models.other_fees_charges.OtherFeesCharges(
                        fee_charge_cap = [
                            openapi_client.models.fee_charge_cap_inner_1.FeeChargeCap_inner_1(
                                capping_period = 'AcademicTerm', 
                                fee_cap_amount = '-80728880015.0217', 
                                fee_cap_occurrence = 1.337, 
                                fee_type = [
                                    'ServiceCAccountFee'
                                    ], 
                                min_max_type = 'Minimum', 
                                other_fee_type = [
                                    openapi_client.models.other_fee_type_inner.OtherFeeType_inner(
                                        code = '', 
                                        description = '0', 
                                        name = '0', )
                                    ], )
                            ], 
                        fee_charge_detail = [
                            openapi_client.models.fee_charge_detail_inner_1.FeeChargeDetail_inner_1(
                                application_frequency = 'AccountClosing', 
                                calculation_frequency = 'AccountClosing', 
                                fee_amount = '-80728880015.0217', 
                                fee_applicable_range = openapi_client.models.fee_applicable_range.FeeApplicableRange(
                                    maximum_amount = '-80728880015.0217', 
                                    maximum_rate = '-807', 
                                    minimum_amount = '-80728880015.0217', 
                                    minimum_rate = '-807', ), 
                                fee_category = 'Other', 
                                fee_rate = '-807', 
                                fee_rate_type = 'LinkedBaseRate', 
                                fee_type = 'ServiceCAccountFee', 
                                other_fee_category_type = openapi_client.models.other_fee_category_type.OtherFeeCategoryType(
                                    code = '', 
                                    description = '0', 
                                    name = '0', ), 
                                other_fee_rate_type = openapi_client.models.other_fee_rate_type.OtherFeeRateType(
                                    code = '', 
                                    description = '0', 
                                    name = '0', ), )
                            ], ), 
                    overdraft = openapi_client.models.overdraft.Overdraft(
                        overdraft_tier_band_set = [
                            openapi_client.models.overdraft_tier_band_set_inner_1.OverdraftTierBandSet_inner_1(
                                authorised_indicator = True, 
                                buffer_amount = '-80728880015.0217', 
                                identification = '0', 
                                overdraft_fees_charges = [
                                    openapi_client.models.overdraft_fees_charges_inner_2.OverdraftFeesCharges_inner_2(
                                        overdraft_fee_charge_cap = [
                                            openapi_client.models.overdraft_fee_charge_cap_inner_1.OverdraftFeeChargeCap_inner_1(
                                                capping_period = 'AcademicTerm', 
                                                fee_cap_amount = '-80728880015.0217', 
                                                fee_cap_occurrence = 1.337, 
                                                fee_type = [
                                                    'ArrangedOverdraft'
                                                    ], 
                                                min_max_type = 'Minimum', 
                                                overdraft_control_indicator = True, )
                                            ], 
                                        overdraft_fee_charge_detail = [
                                            openapi_client.models.overdraft_fee_charge_detail_inner_1.OverdraftFeeChargeDetail_inner_1(
                                                application_frequency = 'AccountClosing', 
                                                calculation_frequency = 'AccountClosing', 
                                                fee_amount = '-80728880015.0217', 
                                                fee_rate = '-807', 
                                                fee_rate_type = 'LinkedBaseRate', 
                                                fee_type = 'ArrangedOverdraft', 
                                                incremental_borrowing_amount = '-80728880015.0217', 
                                                overdraft_control_indicator = True, )
                                            ], )
                                    ], 
                                overdraft_tier_band = [
                                    openapi_client.models.overdraft_tier_band_inner_1.OverdraftTierBand_inner_1(
                                        bank_guaranteed_indicator = True, 
                                        ear = '-807', 
                                        identification = '0', 
                                        overdraft_interest_charging_coverage = 'Tiered', 
                                        representative_apr = '-807', 
                                        tier_value_max = '-80728880015.0217', 
                                        tier_value_min = '-80728880015.0217', )
                                    ], 
                                overdraft_type = 'Committed', 
                                tier_band_method = 'Tiered', )
                            ], ), 
                    product_details = openapi_client.models.product_details.ProductDetails(
                        monthly_maximum_charge = '-80728880015.0217', 
                        segment = [
                            'Basic'
                            ], ), ),
                product_id = '0',
                product_name = '0',
                product_type = 'BusinessCurrentAccount',
                secondary_product_id = '0'
            )
        else:
            return OBReadProduct2DataProductInner(
                account_id = '0',
                product_type = 'BusinessCurrentAccount',
        )
        """

    def testOBReadProduct2DataProductInner(self):
        """Test OBReadProduct2DataProductInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
