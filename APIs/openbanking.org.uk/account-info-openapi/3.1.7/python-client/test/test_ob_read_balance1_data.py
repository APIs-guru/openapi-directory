# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_read_balance1_data import OBReadBalance1Data

class TestOBReadBalance1Data(unittest.TestCase):
    """OBReadBalance1Data unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBReadBalance1Data:
        """Test OBReadBalance1Data
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBReadBalance1Data`
        """
        model = OBReadBalance1Data()
        if include_optional:
            return OBReadBalance1Data(
                balance = [
                    openapi_client.models.ob_read_balance1_data_balance_inner.OBReadBalance1_Data_Balance_inner(
                        account_id = '0', 
                        amount = openapi_client.models.ob_read_balance1_data_balance_inner_amount.OBReadBalance1_Data_Balance_inner_Amount(
                            amount = '80728.8001', 
                            currency = 'AEI', ), 
                        credit_debit_indicator = 'Credit', 
                        credit_line = [
                            openapi_client.models.ob_read_balance1_data_balance_inner_credit_line_inner.OBReadBalance1_Data_Balance_inner_CreditLine_inner(
                                included = True, 
                                type = 'Available', )
                            ], 
                        date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        type = 'ClosingAvailable', )
                    ]
            )
        else:
            return OBReadBalance1Data(
                balance = [
                    openapi_client.models.ob_read_balance1_data_balance_inner.OBReadBalance1_Data_Balance_inner(
                        account_id = '0', 
                        amount = openapi_client.models.ob_read_balance1_data_balance_inner_amount.OBReadBalance1_Data_Balance_inner_Amount(
                            amount = '80728.8001', 
                            currency = 'AEI', ), 
                        credit_debit_indicator = 'Credit', 
                        credit_line = [
                            openapi_client.models.ob_read_balance1_data_balance_inner_credit_line_inner.OBReadBalance1_Data_Balance_inner_CreditLine_inner(
                                included = True, 
                                type = 'Available', )
                            ], 
                        date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        type = 'ClosingAvailable', )
                    ],
        )
        """

    def testOBReadBalance1Data(self):
        """Test OBReadBalance1Data"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
