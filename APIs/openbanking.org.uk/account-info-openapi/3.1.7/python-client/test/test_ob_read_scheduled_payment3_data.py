# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_read_scheduled_payment3_data import OBReadScheduledPayment3Data

class TestOBReadScheduledPayment3Data(unittest.TestCase):
    """OBReadScheduledPayment3Data unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBReadScheduledPayment3Data:
        """Test OBReadScheduledPayment3Data
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBReadScheduledPayment3Data`
        """
        model = OBReadScheduledPayment3Data()
        if include_optional:
            return OBReadScheduledPayment3Data(
                scheduled_payment = [
                    openapi_client.models.ob_scheduled_payment3.OBScheduledPayment3(
                        account_id = '0', 
                        creditor_account = openapi_client.models.ob_cash_account5_1.OBCashAccount5_1(
                            identification = '0', 
                            name = '0', 
                            scheme_name = '', 
                            secondary_identification = '0', ), 
                        creditor_agent = openapi_client.models.ob_branch_and_financial_institution_identification5_1.OBBranchAndFinancialInstitutionIdentification5_1(
                            identification = '0', 
                            scheme_name = '', ), 
                        debtor_reference = '0', 
                        instructed_amount = openapi_client.models.ob_active_or_historic_currency_and_amount_1.OBActiveOrHistoricCurrencyAndAmount_1(
                            amount = '80728.8001', 
                            currency = 'AEI', ), 
                        reference = '0', 
                        scheduled_payment_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        scheduled_payment_id = '0', 
                        scheduled_type = 'Arrival', )
                    ]
            )
        else:
            return OBReadScheduledPayment3Data(
        )
        """

    def testOBReadScheduledPayment3Data(self):
        """Test OBReadScheduledPayment3Data"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
