# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_read_party2 import OBReadParty2

class TestOBReadParty2(unittest.TestCase):
    """OBReadParty2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBReadParty2:
        """Test OBReadParty2
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBReadParty2`
        """
        model = OBReadParty2()
        if include_optional:
            return OBReadParty2(
                data = openapi_client.models.ob_read_party2_data.OBReadParty2_Data(
                    party = openapi_client.models.ob_party2.OBParty2(
                        account_role = '', 
                        address = [
                            openapi_client.models.ob_party2_address_inner.OBParty2_Address_inner(
                                address_line = [
                                    '0'
                                    ], 
                                address_type = 'Business', 
                                building_number = '0', 
                                country = 'AE', 
                                country_sub_division = '0', 
                                post_code = '0', 
                                street_name = '0', 
                                town_name = '0', )
                            ], 
                        beneficial_ownership = True, 
                        email_address = '0', 
                        full_legal_name = '0', 
                        legal_structure = '', 
                        mobile = '+480-880664))(6007)50+1', 
                        name = '0', 
                        party_id = '0', 
                        party_number = '0', 
                        party_type = 'Delegate', 
                        phone = '+480-880664))(6007)50+1', 
                        relationships = openapi_client.models.ob_party_relationships1.OBPartyRelationships1(
                            account = openapi_client.models.ob_party_relationships1_account.OBPartyRelationships1_Account(
                                id = '0', 
                                related = '', ), ), ), ),
                links = openapi_client.models.links.Links(
                    first = '', 
                    last = '', 
                    next = '', 
                    prev = '', 
                    self = '', ),
                meta = openapi_client.models.meta_data.MetaData(
                    first_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_available_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    total_pages = 56, )
            )
        else:
            return OBReadParty2(
                data = openapi_client.models.ob_read_party2_data.OBReadParty2_Data(
                    party = openapi_client.models.ob_party2.OBParty2(
                        account_role = '', 
                        address = [
                            openapi_client.models.ob_party2_address_inner.OBParty2_Address_inner(
                                address_line = [
                                    '0'
                                    ], 
                                address_type = 'Business', 
                                building_number = '0', 
                                country = 'AE', 
                                country_sub_division = '0', 
                                post_code = '0', 
                                street_name = '0', 
                                town_name = '0', )
                            ], 
                        beneficial_ownership = True, 
                        email_address = '0', 
                        full_legal_name = '0', 
                        legal_structure = '', 
                        mobile = '+480-880664))(6007)50+1', 
                        name = '0', 
                        party_id = '0', 
                        party_number = '0', 
                        party_type = 'Delegate', 
                        phone = '+480-880664))(6007)50+1', 
                        relationships = openapi_client.models.ob_party_relationships1.OBPartyRelationships1(
                            account = openapi_client.models.ob_party_relationships1_account.OBPartyRelationships1_Account(
                                id = '0', 
                                related = '', ), ), ), ),
        )
        """

    def testOBReadParty2(self):
        """Test OBReadParty2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
