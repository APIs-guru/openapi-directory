# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ob_standing_order6_detail import OBStandingOrder6Detail

class TestOBStandingOrder6Detail(unittest.TestCase):
    """OBStandingOrder6Detail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBStandingOrder6Detail:
        """Test OBStandingOrder6Detail
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBStandingOrder6Detail`
        """
        model = OBStandingOrder6Detail()
        if include_optional:
            return OBStandingOrder6Detail(
                account_id = '0',
                creditor_account = openapi_client.models.ob_cash_account5_1.OBCashAccount5_1(
                    identification = '0', 
                    name = '0', 
                    scheme_name = '', 
                    secondary_identification = '0', ),
                creditor_agent = openapi_client.models.ob_branch_and_financial_institution_identification5_1.OBBranchAndFinancialInstitutionIdentification5_1(
                    identification = '0', 
                    scheme_name = '', ),
                final_payment_amount = openapi_client.models.ob_active_or_historic_currency_and_amount_4.OBActiveOrHistoricCurrencyAndAmount_4(
                    amount = '80728.8001', 
                    currency = 'AEI', ),
                final_payment_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                first_payment_amount = openapi_client.models.ob_active_or_historic_currency_and_amount_2.OBActiveOrHistoricCurrencyAndAmount_2(
                    amount = '80728.8001', 
                    currency = 'AEI', ),
                first_payment_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                frequency = 'WkInMnthDay:05:05',
                last_payment_amount = openapi_client.models.ob_active_or_historic_currency_and_amount_11.OBActiveOrHistoricCurrencyAndAmount_11(
                    amount = '80728.8001', 
                    currency = 'AEI', ),
                last_payment_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                next_payment_amount = openapi_client.models.ob_active_or_historic_currency_and_amount_3.OBActiveOrHistoricCurrencyAndAmount_3(
                    amount = '80728.8001', 
                    currency = 'AEI', ),
                next_payment_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                number_of_payments = '0',
                reference = '0',
                standing_order_id = '0',
                standing_order_status_code = 'Active',
                supplementary_data = { }
            )
        else:
            return OBStandingOrder6Detail(
                account_id = '0',
                creditor_account = openapi_client.models.ob_cash_account5_1.OBCashAccount5_1(
                    identification = '0', 
                    name = '0', 
                    scheme_name = '', 
                    secondary_identification = '0', ),
                frequency = 'WkInMnthDay:05:05',
        )
        """

    def testOBStandingOrder6Detail(self):
        """Test OBStandingOrder6Detail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
