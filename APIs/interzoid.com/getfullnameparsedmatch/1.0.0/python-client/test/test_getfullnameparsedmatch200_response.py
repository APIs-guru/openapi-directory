# coding: utf-8

"""
    Interzoid Get Full Name Parsed Match Similarity Key API

    This API provides a similarity key used to match with other similar full name data when data fields are parsed into first name and last name components, including for purposes of deduplication, fuzzy matching, or merging of datasets. A much higher match rate will be achieved by matching on the similarity key rather than the data itself. This API is for full name data where first and last name are in separate fields. Use the Full Name Similarity Key API for first and last name data that are in the same field.

    The version of the OpenAPI document: 1.0.0
    Contact: support@interzoid.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.getfullnameparsedmatch200_response import Getfullnameparsedmatch200Response

class TestGetfullnameparsedmatch200Response(unittest.TestCase):
    """Getfullnameparsedmatch200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Getfullnameparsedmatch200Response:
        """Test Getfullnameparsedmatch200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Getfullnameparsedmatch200Response`
        """
        model = Getfullnameparsedmatch200Response()
        if include_optional:
            return Getfullnameparsedmatch200Response(
                code = '',
                credits = '',
                simkey = ''
            )
        else:
            return Getfullnameparsedmatch200Response(
        )
        """

    def testGetfullnameparsedmatch200Response(self):
        """Test Getfullnameparsedmatch200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
