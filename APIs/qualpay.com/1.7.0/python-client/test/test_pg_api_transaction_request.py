# coding: utf-8

"""
    Qualpay Payment Gateway API

    This document describes the Qualpay Payment Gateway API.

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pg_api_transaction_request import PGApiTransactionRequest

class TestPGApiTransactionRequest(unittest.TestCase):
    """PGApiTransactionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PGApiTransactionRequest:
        """Test PGApiTransactionRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PGApiTransactionRequest`
        """
        model = PGApiTransactionRequest()
        if include_optional:
            return PGApiTransactionRequest(
                amt_convenience_fee = 2.0,
                amt_fbo = 1.5,
                amt_tax = 93.5,
                amt_tran = 1193.5,
                amt_tran_fee = 2.35,
                auth_code = '620376',
                avs_address = '123 Main St',
                avs_zip = '94402',
                card_id = '86e1b00d9b0811e68df3069d8f743581',
                card_number = '4111111111111111',
                card_swipe = ';4111111111111111=08051010912345678901?8',
                cardholder_name = 'JOHN CUSTOMER',
                cavv_3ds = 'ASNFZ4kBI0VniQEjRWeJASNFZ4k=',
                client_ip = '10.1.1.4',
                customer = openapi_client.models.customer.Customer(
                    billing_addr1 = '123 Main Street', 
                    billing_addr2 = 'Suite #1234', 
                    billing_city = 'San Mateo', 
                    billing_country = 'USA', 
                    billing_country_code = '840', 
                    billing_state = 'CA', 
                    billing_zip = '94402', 
                    billing_zip4 = '1234', 
                    customer_email = 'jsmith@somewhere.com', 
                    customer_firm_name = 'Qualpay', 
                    customer_first_name = 'Joe', 
                    customer_last_name = 'Smith', 
                    customer_phone = '6503885200', 
                    shipping_addresses = [
                        openapi_client.models.shipping_address.ShippingAddress(
                            primary = True, 
                            shipping_addr1 = '1234 Main Street', 
                            shipping_addr2 = 'Ste 123', 
                            shipping_city = 'San Mateo', 
                            shipping_country = 'USA', 
                            shipping_country_code = '840', 
                            shipping_firm_name = 'Qualpay', 
                            shipping_first_name = 'Joe', 
                            shipping_last_name = 'Smith', 
                            shipping_state = 'CA', 
                            shipping_zip = '94402', 
                            shipping_zip4 = '1234', )
                        ], ),
                customer_code = 'PO # abc123',
                customer_email = 'testme@qualpay.com',
                customer_id = 'JOECUSTOMER_12',
                cvv2 = '152',
                dba_name = 'SHOE CO',
                dba_suffix = 'END PROMO',
                dda_number = '3456776866',
                developer_id = 'QualpayV1.2',
                duplicate_seconds = 300,
                echo_fields = '[ {"product" : "lawnmower"},{"purchase" : "1 yr maintenance"} ]',
                email_address = [jdoe@qualpay.com, john.doe@qualpay.com],
                email_receipt = True,
                emv_tran_id = 'ASNFZ4nwEjR1We3I85BI70V9nifASNFZ4jwHyL0U=',
                exp_date = '0921',
                fbo_id = 999000000001,
                line_items = '[{"quantity": "1","description": "Traffic Cones", "unit_of_measure": "each", "product_code": "SKU-123", "debit_credit_ind": "D", "unit_cost": "14.99"},{"quantity": "3", "description": "Spray Paint", "unit_of_measure": "EA", "product_code": "SKU-456", "debit_credit_ind": "D", "unit_cost": "5.00"}]',
                loc_id = '0001',
                mc_ucaf_data = 'ASNFZ4nwEjRWeI8BI0VnifASNFZ4jwHyL0U=',
                mc_ucaf_ind = '2',
                merch_ref_num = 'ITEM 16126 Purchased 12-15-2016',
                merchant_id = 56,
                moto_ecomm_ind = '1',
                partial_auth = True,
                payload_apple_pay = 'xxxxxxx',
                payload_google_pay = 'xxxxxxx',
                pg_id = 'd24ac6189b0b11e6966ca68d5edbef41',
                profile_id = '21200001000300000978',
                purchase_id = '55-1212',
                report_data = '[ {"shipping address" : "123 Main St."},{"shipping city, state zip" : "San Mateo, CA 94402"} ]',
                retry_attempt = 1,
                retry_id = 1234,
                session_id = '',
                subscription_id = 1234,
                tokenize = True,
                tr_number = '011111111',
                tran_currency = 840,
                type_id = 'S',
                user_id = 56,
                vendor_id = 212100026512,
                xid_3ds = 'ASNFZ4kBI0VniQEjRWeJASNFZ4k='
            )
        else:
            return PGApiTransactionRequest(
                merchant_id = 56,
        )
        """

    def testPGApiTransactionRequest(self):
        """Test PGApiTransactionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
