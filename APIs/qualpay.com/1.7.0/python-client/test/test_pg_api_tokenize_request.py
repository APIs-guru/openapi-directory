# coding: utf-8

"""
    Qualpay Payment Gateway API

    This document describes the Qualpay Payment Gateway API.

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pg_api_tokenize_request import PGApiTokenizeRequest

class TestPGApiTokenizeRequest(unittest.TestCase):
    """PGApiTokenizeRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PGApiTokenizeRequest:
        """Test PGApiTokenizeRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PGApiTokenizeRequest`
        """
        model = PGApiTokenizeRequest()
        if include_optional:
            return PGApiTokenizeRequest(
                avs_address = '123 Main St',
                avs_zip = '94402',
                card_id = '86e1b00d9b0811e68df3069d8f743581',
                card_number = '4111111111111111',
                card_swipe = ';4111111111111111=08051010912345678901?8',
                cardholder_name = 'JOHN CUSTOMER',
                client_ip = '10.1.1.4',
                cvv2 = '152',
                dda_number = '3456776866',
                developer_id = 'QualpayV1.2',
                echo_fields = '[ {"product" : "lawnmower"},{"purchase" : "1 yr maintenance"} ]',
                email_address = [jdoe@qualpay.com, john.doe@qualpay.com],
                exp_date = '0921',
                loc_id = '0001',
                merchant_id = 56,
                payload_apple_pay = 'xxxxxxx',
                payload_google_pay = 'xxxxxxx',
                profile_id = '21200001000300000978',
                report_data = '[ {"shipping address" : "123 Main St."},{"shipping city, state zip" : "San Mateo, CA 94402"} ]',
                retry_attempt = 1,
                retry_id = 1234,
                session_id = '',
                single_use = True,
                tr_number = '011111111',
                type_id = 'S',
                user_id = 56,
                vendor_id = 212100026512
            )
        else:
            return PGApiTokenizeRequest(
                exp_date = '0921',
                merchant_id = 56,
        )
        """

    def testPGApiTokenizeRequest(self):
        """Test PGApiTokenizeRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
