# coding: utf-8

# flake8: noqa

"""
    Svix API

    Welcome to the Svix API documentation!  Useful links: [Homepage](https://www.svix.com) | [Support email](mailto:support+docs@svix.com) | [Blog](https://www.svix.com/blog/) | [Slack Community](https://www.svix.com/slack/)  # Introduction  This is the reference documentation and schemas for the [Svix webhook service](https://www.svix.com) API. For tutorials and other documentation please refer to [the documentation](https://docs.svix.com).  ## Main concepts  In Svix you have four important entities you will be interacting with:  - `messages`: these are the webhooks being sent. They can have contents and a few other properties. - `application`: this is where `messages` are sent to. Usually you want to create one application for each user on your platform. - `endpoint`: endpoints are the URLs messages will be sent to. Each application can have multiple `endpoints` and each message sent to that application will be sent to all of them (unless they are not subscribed to the sent event type). - `event-type`: event types are identifiers denoting the type of the message being sent. Event types are primarily used to decide which events are sent to which endpoint.   ## Authentication  Get your authentication token (`AUTH_TOKEN`) from the [Svix dashboard](https://dashboard.svix.com) and use it as part of the `Authorization` header as such: `Authorization: Bearer ${AUTH_TOKEN}`.  <SecurityDefinitions />   ## Code samples  The code samples assume you already have the respective libraries installed and you know how to use them. For the latest information on how to do that, please refer to [the documentation](https://docs.svix.com/).   ## Idempotency  Svix supports [idempotency](https://en.wikipedia.org/wiki/Idempotence) for safely retrying requests without accidentally performing the same operation twice. This is useful when an API call is disrupted in transit and you do not receive a response.  To perform an idempotent request, pass the idempotency key in the `Idempotency-Key` header to the request. The idempotency key should be a unique value generated by the client. You can create the key in however way you like, though we suggest using UUID v4, or any other string with enough entropy to avoid collisions.  Svix's idempotency works by saving the resulting status code and body of the first request made for any given idempotency key for any successful request. Subsequent requests with the same key return the same result.  Please note that idempotency is only supported for `POST` requests.   ## Cross-Origin Resource Sharing  This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/). And that allows cross-domain communication from the browser. All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site. 

    The version of the OpenAPI document: 1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


__version__ = "1.0.0"

# import apis into sdk package
from openapi_client.api.application_api import ApplicationApi
from openapi_client.api.authentication_api import AuthenticationApi
from openapi_client.api.background_tasks_api import BackgroundTasksApi
from openapi_client.api.endpoint_api import EndpointApi
from openapi_client.api.event_type_api import EventTypeApi
from openapi_client.api.health_api import HealthApi
from openapi_client.api.integration_api import IntegrationApi
from openapi_client.api.message_api import MessageApi
from openapi_client.api.message_attempt_api import MessageAttemptApi

# import ApiClient
from openapi_client.api_response import ApiResponse
from openapi_client.api_client import ApiClient
from openapi_client.configuration import Configuration
from openapi_client.exceptions import OpenApiException
from openapi_client.exceptions import ApiTypeError
from openapi_client.exceptions import ApiValueError
from openapi_client.exceptions import ApiKeyError
from openapi_client.exceptions import ApiAttributeError
from openapi_client.exceptions import ApiException

# import models into sdk package
from openapi_client.models.app_portal_access_in import AppPortalAccessIn
from openapi_client.models.app_portal_access_out import AppPortalAccessOut
from openapi_client.models.application_in import ApplicationIn
from openapi_client.models.application_out import ApplicationOut
from openapi_client.models.application_token_expire_in import ApplicationTokenExpireIn
from openapi_client.models.background_task_finished_event import BackgroundTaskFinishedEvent
from openapi_client.models.background_task_finished_event_data import BackgroundTaskFinishedEventData
from openapi_client.models.background_task_op_webhook_status import BackgroundTaskOpWebhookStatus
from openapi_client.models.background_task_op_webhook_type import BackgroundTaskOpWebhookType
from openapi_client.models.background_task_out import BackgroundTaskOut
from openapi_client.models.background_task_status import BackgroundTaskStatus
from openapi_client.models.background_task_type import BackgroundTaskType
from openapi_client.models.dashboard_access_out import DashboardAccessOut
from openapi_client.models.endpoint_created_event import EndpointCreatedEvent
from openapi_client.models.endpoint_created_event_data import EndpointCreatedEventData
from openapi_client.models.endpoint_deleted_event import EndpointDeletedEvent
from openapi_client.models.endpoint_deleted_event_data import EndpointDeletedEventData
from openapi_client.models.endpoint_disabled_event import EndpointDisabledEvent
from openapi_client.models.endpoint_disabled_event_data import EndpointDisabledEventData
from openapi_client.models.endpoint_headers_in import EndpointHeadersIn
from openapi_client.models.endpoint_headers_out import EndpointHeadersOut
from openapi_client.models.endpoint_headers_patch_in import EndpointHeadersPatchIn
from openapi_client.models.endpoint_in import EndpointIn
from openapi_client.models.endpoint_message_out import EndpointMessageOut
from openapi_client.models.endpoint_out import EndpointOut
from openapi_client.models.endpoint_secret_out import EndpointSecretOut
from openapi_client.models.endpoint_secret_rotate_in import EndpointSecretRotateIn
from openapi_client.models.endpoint_stats import EndpointStats
from openapi_client.models.endpoint_transformation_in import EndpointTransformationIn
from openapi_client.models.endpoint_transformation_out import EndpointTransformationOut
from openapi_client.models.endpoint_update import EndpointUpdate
from openapi_client.models.endpoint_updated_event import EndpointUpdatedEvent
from openapi_client.models.endpoint_updated_event_data import EndpointUpdatedEventData
from openapi_client.models.event_example_in import EventExampleIn
from openapi_client.models.event_type_in import EventTypeIn
from openapi_client.models.event_type_out import EventTypeOut
from openapi_client.models.event_type_update import EventTypeUpdate
from openapi_client.models.http_validation_error import HTTPValidationError
from openapi_client.models.http_error_out import HttpErrorOut
from openapi_client.models.integration_in import IntegrationIn
from openapi_client.models.integration_key_out import IntegrationKeyOut
from openapi_client.models.integration_out import IntegrationOut
from openapi_client.models.integration_update import IntegrationUpdate
from openapi_client.models.list_response_application_out import ListResponseApplicationOut
from openapi_client.models.list_response_background_task_out import ListResponseBackgroundTaskOut
from openapi_client.models.list_response_endpoint_message_out import ListResponseEndpointMessageOut
from openapi_client.models.list_response_endpoint_out import ListResponseEndpointOut
from openapi_client.models.list_response_event_type_out import ListResponseEventTypeOut
from openapi_client.models.list_response_integration_out import ListResponseIntegrationOut
from openapi_client.models.list_response_message_attempt_endpoint_out import ListResponseMessageAttemptEndpointOut
from openapi_client.models.list_response_message_attempt_out import ListResponseMessageAttemptOut
from openapi_client.models.list_response_message_endpoint_out import ListResponseMessageEndpointOut
from openapi_client.models.list_response_message_out import ListResponseMessageOut
from openapi_client.models.message_attempt_endpoint_out import MessageAttemptEndpointOut
from openapi_client.models.message_attempt_exhausted_event import MessageAttemptExhaustedEvent
from openapi_client.models.message_attempt_exhausted_event_data import MessageAttemptExhaustedEventData
from openapi_client.models.message_attempt_failed_data import MessageAttemptFailedData
from openapi_client.models.message_attempt_failing_event import MessageAttemptFailingEvent
from openapi_client.models.message_attempt_failing_event_data import MessageAttemptFailingEventData
from openapi_client.models.message_attempt_out import MessageAttemptOut
from openapi_client.models.message_attempt_trigger_type import MessageAttemptTriggerType
from openapi_client.models.message_endpoint_out import MessageEndpointOut
from openapi_client.models.message_in import MessageIn
from openapi_client.models.message_out import MessageOut
from openapi_client.models.message_status import MessageStatus
from openapi_client.models.ordering import Ordering
from openapi_client.models.recover_in import RecoverIn
from openapi_client.models.recover_out import RecoverOut
from openapi_client.models.replay_in import ReplayIn
from openapi_client.models.replay_out import ReplayOut
from openapi_client.models.status_code_class import StatusCodeClass
from openapi_client.models.validation_error import ValidationError
from openapi_client.models.webhook_types import WebhookTypes
