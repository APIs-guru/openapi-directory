# coding: utf-8

"""
    Jirafe Events

    API endpoins for sending Jirafe events

    The version of the OpenAPI document: 2.0.0
    Contact: support@jirafe.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order_item import OrderItem

class TestOrderItem(unittest.TestCase):
    """OrderItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderItem:
        """Test OrderItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderItem`
        """
        model = OrderItem()
        if include_optional:
            return OrderItem(
                change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discount_price = 0,
                id = '',
                order_item_number = '',
                price = 0,
                product = openapi_client.models.product.Product(
                    ancestors = [
                        ''
                        ], 
                    attributes = [
                        openapi_client.models.attribute.Attribute(
                            id = '', 
                            name = '', 
                            value = '', )
                        ], 
                    base_product = openapi_client.models.base_product.BaseProduct(
                        code = '', 
                        id = '', 
                        name = '', ), 
                    brand = '', 
                    catalog = openapi_client.models.catalog.Catalog(
                        id = '', 
                        name = '', 
                        version_id = '', ), 
                    categories = [
                        openapi_client.models.category.Category(
                            id = '', 
                            name = '', )
                        ], 
                    change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    code = '', 
                    create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    id = '', 
                    images = [
                        openapi_client.models.image.Image()
                        ], 
                    is_order = True, 
                    is_sku = True, 
                    name = '', 
                    rating = 1.337, 
                    urls = openapi_client.models.url.Url(
                        admin = '', 
                        store = '', ), 
                    vendors = [
                        openapi_client.models.vendor.Vendor(
                            id = '', 
                            name = '', )
                        ], ),
                quantity = -9007199254740992,
                status = 'accepted'
            )
        else:
            return OrderItem(
                change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discount_price = 0,
                id = '',
                order_item_number = '',
                price = 0,
                product = openapi_client.models.product.Product(
                    ancestors = [
                        ''
                        ], 
                    attributes = [
                        openapi_client.models.attribute.Attribute(
                            id = '', 
                            name = '', 
                            value = '', )
                        ], 
                    base_product = openapi_client.models.base_product.BaseProduct(
                        code = '', 
                        id = '', 
                        name = '', ), 
                    brand = '', 
                    catalog = openapi_client.models.catalog.Catalog(
                        id = '', 
                        name = '', 
                        version_id = '', ), 
                    categories = [
                        openapi_client.models.category.Category(
                            id = '', 
                            name = '', )
                        ], 
                    change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    code = '', 
                    create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    id = '', 
                    images = [
                        openapi_client.models.image.Image()
                        ], 
                    is_order = True, 
                    is_sku = True, 
                    name = '', 
                    rating = 1.337, 
                    urls = openapi_client.models.url.Url(
                        admin = '', 
                        store = '', ), 
                    vendors = [
                        openapi_client.models.vendor.Vendor(
                            id = '', 
                            name = '', )
                        ], ),
                quantity = -9007199254740992,
                status = 'accepted',
        )
        """

    def testOrderItem(self):
        """Test OrderItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
