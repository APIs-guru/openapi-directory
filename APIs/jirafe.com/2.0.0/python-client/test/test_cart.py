# coding: utf-8

"""
    Jirafe Events

    API endpoins for sending Jirafe events

    The version of the OpenAPI document: 2.0.0
    Contact: support@jirafe.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cart import Cart

class TestCart(unittest.TestCase):
    """Cart unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Cart:
        """Test Cart
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Cart`
        """
        model = Cart()
        if include_optional:
            return Cart(
                cart_id = '',
                change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                cookies = openapi_client.models.cookies.cookies(),
                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                currency = '',
                customer = openapi_client.models.customer.Customer(
                    active_flag = True, 
                    change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    company = '', 
                    cookies = openapi_client.models.cookies.cookies(), 
                    create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    department = '', 
                    email = '', 
                    first_name = '', 
                    id = '', 
                    last_name = '', 
                    marketing_opt_in = True, 
                    name = '', 
                    phone = '', 
                    position = '', ),
                id = '',
                items = [
                    openapi_client.models.cart_item.CartItem(
                        cart_item_number = '', 
                        change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        discount_price = 0, 
                        id = '', 
                        price = 0, 
                        product = openapi_client.models.product.Product(
                            ancestors = [
                                ''
                                ], 
                            attributes = [
                                openapi_client.models.attribute.Attribute(
                                    id = '', 
                                    name = '', 
                                    value = '', )
                                ], 
                            base_product = openapi_client.models.base_product.BaseProduct(
                                code = '', 
                                id = '', 
                                name = '', ), 
                            brand = '', 
                            catalog = openapi_client.models.catalog.Catalog(
                                id = '', 
                                name = '', 
                                version_id = '', ), 
                            categories = [
                                openapi_client.models.category.Category(
                                    id = '', 
                                    name = '', )
                                ], 
                            change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            code = '', 
                            create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = '', 
                            images = [
                                openapi_client.models.image.Image()
                                ], 
                            is_order = True, 
                            is_sku = True, 
                            name = '', 
                            rating = 1.337, 
                            urls = openapi_client.models.url.Url(
                                admin = '', 
                                store = '', ), 
                            vendors = [
                                openapi_client.models.vendor.Vendor(
                                    id = '', 
                                    name = '', )
                                ], ), 
                        quantity = -9007199254740992, )
                    ],
                previous_items = [
                    openapi_client.models.cart_item.CartItem(
                        cart_item_number = '', 
                        change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        discount_price = 0, 
                        id = '', 
                        price = 0, 
                        product = openapi_client.models.product.Product(
                            ancestors = [
                                ''
                                ], 
                            attributes = [
                                openapi_client.models.attribute.Attribute(
                                    id = '', 
                                    name = '', 
                                    value = '', )
                                ], 
                            base_product = openapi_client.models.base_product.BaseProduct(
                                code = '', 
                                id = '', 
                                name = '', ), 
                            brand = '', 
                            catalog = openapi_client.models.catalog.Catalog(
                                id = '', 
                                name = '', 
                                version_id = '', ), 
                            categories = [
                                openapi_client.models.category.Category(
                                    id = '', 
                                    name = '', )
                                ], 
                            change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            code = '', 
                            create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = '', 
                            images = [
                                openapi_client.models.image.Image()
                                ], 
                            is_order = True, 
                            is_sku = True, 
                            name = '', 
                            rating = 1.337, 
                            urls = openapi_client.models.url.Url(
                                admin = '', 
                                store = '', ), 
                            vendors = [
                                openapi_client.models.vendor.Vendor(
                                    id = '', 
                                    name = '', )
                                ], ), 
                        quantity = -9007199254740992, )
                    ],
                subtotal = 1.337,
                total = 0,
                total_discounts = 0,
                total_payment_cost = 0,
                total_shipping = 0,
                total_tax = 0,
                visit = openapi_client.models.visit.Visit(
                    last_pageview_id = '', 
                    pageview_id = '', 
                    visit_id = '', 
                    visitor_id = '', )
            )
        else:
            return Cart(
                change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                currency = '',
                customer = openapi_client.models.customer.Customer(
                    active_flag = True, 
                    change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    company = '', 
                    cookies = openapi_client.models.cookies.cookies(), 
                    create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    department = '', 
                    email = '', 
                    first_name = '', 
                    id = '', 
                    last_name = '', 
                    marketing_opt_in = True, 
                    name = '', 
                    phone = '', 
                    position = '', ),
                id = '',
                items = [
                    openapi_client.models.cart_item.CartItem(
                        cart_item_number = '', 
                        change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        discount_price = 0, 
                        id = '', 
                        price = 0, 
                        product = openapi_client.models.product.Product(
                            ancestors = [
                                ''
                                ], 
                            attributes = [
                                openapi_client.models.attribute.Attribute(
                                    id = '', 
                                    name = '', 
                                    value = '', )
                                ], 
                            base_product = openapi_client.models.base_product.BaseProduct(
                                code = '', 
                                id = '', 
                                name = '', ), 
                            brand = '', 
                            catalog = openapi_client.models.catalog.Catalog(
                                id = '', 
                                name = '', 
                                version_id = '', ), 
                            categories = [
                                openapi_client.models.category.Category(
                                    id = '', 
                                    name = '', )
                                ], 
                            change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            code = '', 
                            create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = '', 
                            images = [
                                openapi_client.models.image.Image()
                                ], 
                            is_order = True, 
                            is_sku = True, 
                            name = '', 
                            rating = 1.337, 
                            urls = openapi_client.models.url.Url(
                                admin = '', 
                                store = '', ), 
                            vendors = [
                                openapi_client.models.vendor.Vendor(
                                    id = '', 
                                    name = '', )
                                ], ), 
                        quantity = -9007199254740992, )
                    ],
                subtotal = 1.337,
                total = 0,
                total_discounts = 0,
                total_payment_cost = 0,
                total_shipping = 0,
                total_tax = 0,
        )
        """

    def testCart(self):
        """Test Cart"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
