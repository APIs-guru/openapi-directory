# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.filter import Filter

class TestFilter(unittest.TestCase):
    """Filter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Filter:
        """Test Filter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Filter`
        """
        model = Filter()
        if include_optional:
            return Filter(
                description = '',
                edit_permissions = [
                    openapi_client.models.share_permission.SharePermission(
                        group = null, 
                        id = 56, 
                        project = null, 
                        role = null, 
                        type = 'user', 
                        user = null, )
                    ],
                favourite = True,
                favourited_count = 56,
                id = '',
                jql = '',
                name = '',
                owner = openapi_client.models.user.User(
                    account_id = '', 
                    account_type = 'atlassian', 
                    active = True, 
                    application_roles = null, 
                    avatar_urls = null, 
                    display_name = '', 
                    email_address = '', 
                    expand = '', 
                    groups = null, 
                    key = '', 
                    locale = '', 
                    name = '', 
                    self = '', 
                    time_zone = '', ),
                search_url = '',
                var_self = '',
                share_permissions = [
                    openapi_client.models.share_permission.SharePermission(
                        group = null, 
                        id = 56, 
                        project = null, 
                        role = null, 
                        type = 'user', 
                        user = null, )
                    ],
                shared_users = openapi_client.models.user_list.UserList(
                    end_index = 56, 
                    items = [
                        openapi_client.models.user.User(
                            account_id = '', 
                            account_type = 'atlassian', 
                            active = True, 
                            application_roles = null, 
                            avatar_urls = null, 
                            display_name = '', 
                            email_address = '', 
                            expand = '', 
                            groups = null, 
                            key = '', 
                            locale = '', 
                            name = '', 
                            self = '', 
                            time_zone = '', )
                        ], 
                    max_results = 56, 
                    size = 56, 
                    start_index = 56, ),
                subscriptions = openapi_client.models.filter_subscriptions_list.FilterSubscriptionsList(
                    end_index = 56, 
                    items = [
                        openapi_client.models.filter_subscription.FilterSubscription(
                            group = null, 
                            id = 56, 
                            user = null, )
                        ], 
                    max_results = 56, 
                    size = 56, 
                    start_index = 56, ),
                view_url = ''
            )
        else:
            return Filter(
                name = '',
        )
        """

    def testFilter(self):
        """Test Filter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
