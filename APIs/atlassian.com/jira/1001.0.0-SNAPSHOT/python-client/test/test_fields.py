# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.fields import Fields

class TestFields(unittest.TestCase):
    """Fields unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Fields:
        """Test Fields
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Fields`
        """
        model = Fields()
        if include_optional:
            return Fields(
                assignee = openapi_client.models.user_details.UserDetails(
                    account_id = '', 
                    account_type = '', 
                    active = True, 
                    avatar_urls = null, 
                    display_name = '', 
                    email_address = '', 
                    key = '', 
                    name = '', 
                    self = '', 
                    time_zone = '', ),
                issue_type = openapi_client.models.issue_type_details.IssueTypeDetails(
                    avatar_id = 56, 
                    description = '', 
                    entity_id = '', 
                    hierarchy_level = 56, 
                    icon_url = '', 
                    id = '', 
                    name = '', 
                    scope = null, 
                    self = '', 
                    subtask = True, ),
                issuetype = openapi_client.models.issue_type_details.IssueTypeDetails(
                    avatar_id = 56, 
                    description = '', 
                    entity_id = '', 
                    hierarchy_level = 56, 
                    icon_url = '', 
                    id = '', 
                    name = '', 
                    scope = null, 
                    self = '', 
                    subtask = True, ),
                priority = { },
                status = { },
                summary = '',
                timetracking = openapi_client.models.time_tracking_details.TimeTrackingDetails(
                    original_estimate = '', 
                    original_estimate_seconds = 56, 
                    remaining_estimate = '', 
                    remaining_estimate_seconds = 56, 
                    time_spent = '', 
                    time_spent_seconds = 56, )
            )
        else:
            return Fields(
        )
        """

    def testFields(self):
        """Test Fields"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
