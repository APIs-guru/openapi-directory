# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.workflow_transition_rules_update import WorkflowTransitionRulesUpdate

class TestWorkflowTransitionRulesUpdate(unittest.TestCase):
    """WorkflowTransitionRulesUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkflowTransitionRulesUpdate:
        """Test WorkflowTransitionRulesUpdate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkflowTransitionRulesUpdate`
        """
        model = WorkflowTransitionRulesUpdate()
        if include_optional:
            return WorkflowTransitionRulesUpdate(
                workflows = [
                    openapi_client.models.workflow_transition_rules.WorkflowTransitionRules(
                        conditions = [
                            openapi_client.models.app_workflow_transition_rule.AppWorkflowTransitionRule(
                                configuration = openapi_client.models.rule_configuration.RuleConfiguration(
                                    disabled = True, 
                                    tag = '', 
                                    value = '', ), 
                                id = '', 
                                key = '', 
                                transition = null, )
                            ], 
                        post_functions = [
                            openapi_client.models.app_workflow_transition_rule.AppWorkflowTransitionRule(
                                configuration = openapi_client.models.rule_configuration.RuleConfiguration(
                                    disabled = True, 
                                    tag = '', 
                                    value = '', ), 
                                id = '', 
                                key = '', 
                                transition = null, )
                            ], 
                        validators = [
                            
                            ], 
                        workflow_id = openapi_client.models.workflow_id.WorkflowId(
                            draft = True, 
                            name = '', ), )
                    ]
            )
        else:
            return WorkflowTransitionRulesUpdate(
                workflows = [
                    openapi_client.models.workflow_transition_rules.WorkflowTransitionRules(
                        conditions = [
                            openapi_client.models.app_workflow_transition_rule.AppWorkflowTransitionRule(
                                configuration = openapi_client.models.rule_configuration.RuleConfiguration(
                                    disabled = True, 
                                    tag = '', 
                                    value = '', ), 
                                id = '', 
                                key = '', 
                                transition = null, )
                            ], 
                        post_functions = [
                            openapi_client.models.app_workflow_transition_rule.AppWorkflowTransitionRule(
                                configuration = openapi_client.models.rule_configuration.RuleConfiguration(
                                    disabled = True, 
                                    tag = '', 
                                    value = '', ), 
                                id = '', 
                                key = '', 
                                transition = null, )
                            ], 
                        validators = [
                            
                            ], 
                        workflow_id = openapi_client.models.workflow_id.WorkflowId(
                            draft = True, 
                            name = '', ), )
                    ],
        )
        """

    def testWorkflowTransitionRulesUpdate(self):
        """Test WorkflowTransitionRulesUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
