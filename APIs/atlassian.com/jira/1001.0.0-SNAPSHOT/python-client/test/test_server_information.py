# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.server_information import ServerInformation

class TestServerInformation(unittest.TestCase):
    """ServerInformation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServerInformation:
        """Test ServerInformation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServerInformation`
        """
        model = ServerInformation()
        if include_optional:
            return ServerInformation(
                base_url = '',
                build_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                build_number = 56,
                deployment_type = '',
                health_checks = [
                    openapi_client.models.health_check_result.HealthCheckResult(
                        description = '', 
                        name = '', 
                        passed = True, )
                    ],
                scm_info = '',
                server_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                server_title = '',
                version = '',
                version_numbers = [
                    56
                    ]
            )
        else:
            return ServerInformation(
        )
        """

    def testServerInformation(self):
        """Test ServerInformation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
