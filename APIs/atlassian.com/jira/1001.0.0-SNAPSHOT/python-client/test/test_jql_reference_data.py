# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.jql_reference_data import JQLReferenceData

class TestJQLReferenceData(unittest.TestCase):
    """JQLReferenceData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JQLReferenceData:
        """Test JQLReferenceData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JQLReferenceData`
        """
        model = JQLReferenceData()
        if include_optional:
            return JQLReferenceData(
                jql_reserved_words = [
                    ''
                    ],
                visible_field_names = [
                    openapi_client.models.field_reference_data.FieldReferenceData(
                        auto = 'true', 
                        cfid = '', 
                        deprecated = 'true', 
                        deprecated_searcher_key = '', 
                        display_name = '', 
                        operators = [
                            ''
                            ], 
                        orderable = 'true', 
                        searchable = 'true', 
                        types = [
                            ''
                            ], 
                        value = '', )
                    ],
                visible_function_names = [
                    openapi_client.models.function_reference_data.FunctionReferenceData(
                        display_name = '', 
                        is_list = 'true', 
                        types = [
                            ''
                            ], 
                        value = '', )
                    ]
            )
        else:
            return JQLReferenceData(
        )
        """

    def testJQLReferenceData(self):
        """Test JQLReferenceData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
