# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.page_bean_workflow import PageBeanWorkflow

class TestPageBeanWorkflow(unittest.TestCase):
    """PageBeanWorkflow unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageBeanWorkflow:
        """Test PageBeanWorkflow
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageBeanWorkflow`
        """
        model = PageBeanWorkflow()
        if include_optional:
            return PageBeanWorkflow(
                is_last = True,
                max_results = 56,
                next_page = '',
                var_self = '',
                start_at = 56,
                total = 56,
                values = [
                    openapi_client.models.workflow.Workflow(
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        has_draft_workflow = True, 
                        id = openapi_client.models.published_workflow_id.PublishedWorkflowId(
                            entity_id = '', 
                            name = '', ), 
                        is_default = True, 
                        operations = openapi_client.models.workflow_operations.WorkflowOperations(
                            can_delete = True, 
                            can_edit = True, ), 
                        projects = [
                            openapi_client.models.project_details.ProjectDetails(
                                avatar_urls = null, 
                                key = '', 
                                name = '', 
                                project_category = null, 
                                project_type_key = 'software', 
                                self = '', 
                                simplified = True, )
                            ], 
                        schemes = [
                            openapi_client.models.workflow_scheme_id_name.WorkflowSchemeIdName(
                                id = '', 
                                name = '', )
                            ], 
                        statuses = [
                            openapi_client.models.workflow_status.WorkflowStatus(
                                id = '', 
                                name = '', 
                                properties = {
                                    'key' : null
                                    }, )
                            ], 
                        transitions = [
                            openapi_client.models.transition.Transition(
                                description = '', 
                                from = [
                                    ''
                                    ], 
                                id = '', 
                                name = '', 
                                rules = openapi_client.models.workflow_rules.WorkflowRules(
                                    conditions_tree = openapi_client.models.workflow_condition.WorkflowCondition(), 
                                    post_functions = [
                                        openapi_client.models.workflow_transition_rule.WorkflowTransitionRule(
                                            configuration = null, 
                                            type = '', )
                                        ], 
                                    validators = [
                                        openapi_client.models.workflow_transition_rule.WorkflowTransitionRule(
                                            configuration = null, 
                                            type = '', )
                                        ], ), 
                                screen = openapi_client.models.transition_screen_details.TransitionScreenDetails(
                                    id = '', 
                                    name = '', ), 
                                to = '', 
                                type = 'global', )
                            ], 
                        updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return PageBeanWorkflow(
        )
        """

    def testPageBeanWorkflow(self):
        """Test PageBeanWorkflow"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
