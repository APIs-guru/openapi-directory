# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.share_permission import SharePermission

class TestSharePermission(unittest.TestCase):
    """SharePermission unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SharePermission:
        """Test SharePermission
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SharePermission`
        """
        model = SharePermission()
        if include_optional:
            return SharePermission(
                group = openapi_client.models.group_name.GroupName(
                    group_id = '', 
                    name = '', 
                    self = '', ),
                id = 56,
                project = openapi_client.models.project.Project(
                    archived = True, 
                    archived_by = null, 
                    archived_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    assignee_type = 'PROJECT_LEAD', 
                    avatar_urls = null, 
                    components = [
                        openapi_client.models.project_component.ProjectComponent(
                            assignee = null, 
                            assignee_type = 'PROJECT_DEFAULT', 
                            description = '', 
                            id = '', 
                            is_assignee_type_valid = True, 
                            lead = null, 
                            lead_account_id = '', 
                            lead_user_name = '', 
                            name = '', 
                            project = '', 
                            project_id = 56, 
                            real_assignee = null, 
                            real_assignee_type = 'PROJECT_DEFAULT', 
                            self = '', )
                        ], 
                    deleted = True, 
                    deleted_by = null, 
                    deleted_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    description = '', 
                    email = '', 
                    expand = '', 
                    favourite = True, 
                    id = '', 
                    insight = null, 
                    is_private = True, 
                    issue_type_hierarchy = null, 
                    issue_types = [
                        openapi_client.models.issue_type_details.IssueTypeDetails(
                            avatar_id = 56, 
                            description = '', 
                            entity_id = '', 
                            hierarchy_level = 56, 
                            icon_url = '', 
                            id = '', 
                            name = '', 
                            scope = null, 
                            self = '', 
                            subtask = True, )
                        ], 
                    key = '', 
                    landing_page_info = null, 
                    lead = null, 
                    name = '', 
                    permissions = null, 
                    project_category = null, 
                    project_type_key = 'software', 
                    properties = {
                        'key' : null
                        }, 
                    retention_till_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    roles = {
                        'key' : ''
                        }, 
                    self = '', 
                    simplified = True, 
                    style = 'classic', 
                    url = '', 
                    uuid = '', 
                    versions = [
                        openapi_client.models.version.Version(
                            archived = True, 
                            description = '', 
                            expand = '', 
                            id = '', 
                            issues_status_for_fix_version = null, 
                            move_unfixed_issues_to = '', 
                            name = '', 
                            operations = [
                                openapi_client.models.simple_link.SimpleLink(
                                    href = '', 
                                    icon_class = '', 
                                    id = '', 
                                    label = '', 
                                    style_class = '', 
                                    title = '', 
                                    weight = 56, )
                                ], 
                            overdue = True, 
                            project = '', 
                            project_id = 56, 
                            release_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            released = True, 
                            self = '', 
                            start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            user_release_date = '', 
                            user_start_date = '', )
                        ], ),
                role = openapi_client.models.project_role.ProjectRole(
                    actors = [
                        openapi_client.models.role_actor.RoleActor(
                            actor_group = null, 
                            actor_user = null, 
                            avatar_url = '', 
                            display_name = '', 
                            id = 56, 
                            name = '', 
                            type = 'atlassian-group-role-actor', )
                        ], 
                    admin = True, 
                    current_user_role = True, 
                    default = True, 
                    description = '', 
                    id = 56, 
                    name = '', 
                    role_configurable = True, 
                    scope = null, 
                    self = '', 
                    translated_name = '', ),
                type = 'user',
                user = openapi_client.models.user_bean.UserBean(
                    account_id = '', 
                    active = True, 
                    avatar_urls = null, 
                    display_name = '', 
                    key = '', 
                    name = '', 
                    self = '', )
            )
        else:
            return SharePermission(
                type = 'user',
        )
        """

    def testSharePermission(self):
        """Test SharePermission"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
