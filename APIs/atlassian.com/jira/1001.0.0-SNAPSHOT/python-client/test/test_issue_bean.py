# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.issue_bean import IssueBean

class TestIssueBean(unittest.TestCase):
    """IssueBean unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IssueBean:
        """Test IssueBean
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IssueBean`
        """
        model = IssueBean()
        if include_optional:
            return IssueBean(
                changelog = openapi_client.models.page_of_changelogs.PageOfChangelogs(
                    histories = [
                        openapi_client.models.changelog.Changelog(
                            author = null, 
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            history_metadata = null, 
                            id = '', 
                            items = [
                                openapi_client.models.change_details.ChangeDetails(
                                    field = '', 
                                    field_id = '', 
                                    fieldtype = '', 
                                    from = '', 
                                    from_string = '', 
                                    to = '', )
                                ], )
                        ], 
                    max_results = 56, 
                    start_at = 56, 
                    total = 56, ),
                editmeta = openapi_client.models.issue_update_metadata.IssueUpdateMetadata(
                    fields = {
                        'key' : openapi_client.models.field_metadata.FieldMetadata(
                            allowed_values = [
                                null
                                ], 
                            auto_complete_url = '', 
                            configuration = {
                                'key' : null
                                }, 
                            default_value = null, 
                            has_default_value = True, 
                            key = '', 
                            name = '', 
                            operations = [
                                ''
                                ], 
                            required = True, 
                            schema = null, )
                        }, ),
                expand = '',
                fields = {
                    'key' : null
                    },
                fields_to_include = openapi_client.models.included_fields.IncludedFields(
                    actually_included = [
                        ''
                        ], 
                    excluded = [
                        ''
                        ], 
                    included = [
                        ''
                        ], ),
                id = '',
                key = '',
                names = {
                    'key' : ''
                    },
                operations = { },
                properties = {
                    'key' : null
                    },
                rendered_fields = {
                    'key' : null
                    },
                var_schema = {
                    'key' : openapi_client.models.json_type_bean.JsonTypeBean(
                        configuration = {
                            'key' : null
                            }, 
                        custom = '', 
                        custom_id = 56, 
                        items = '', 
                        system = '', 
                        type = '', )
                    },
                var_self = '',
                transitions = [
                    { }
                    ],
                versioned_representations = {
                    'key' : {
                        'key' : null
                        }
                    }
            )
        else:
            return IssueBean(
        )
        """

    def testIssueBean(self):
        """Test IssueBean"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
