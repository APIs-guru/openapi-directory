# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.jira_expression_eval_context_bean import JiraExpressionEvalContextBean

class TestJiraExpressionEvalContextBean(unittest.TestCase):
    """JiraExpressionEvalContextBean unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JiraExpressionEvalContextBean:
        """Test JiraExpressionEvalContextBean
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JiraExpressionEvalContextBean`
        """
        model = JiraExpressionEvalContextBean()
        if include_optional:
            return JiraExpressionEvalContextBean(
                board = 56,
                custom = [
                    openapi_client.models.custom_context_variable.CustomContextVariable(
                        type = '', )
                    ],
                customer_request = 56,
                issue = openapi_client.models.id_or_key_bean.IdOrKeyBean(
                    id = 56, 
                    key = '', ),
                issues = openapi_client.models.jexp_issues.JexpIssues(
                    jql = null, ),
                project = openapi_client.models.id_or_key_bean.IdOrKeyBean(
                    id = 56, 
                    key = '', ),
                service_desk = 56,
                sprint = 56
            )
        else:
            return JiraExpressionEvalContextBean(
        )
        """

    def testJiraExpressionEvalContextBean(self):
        """Test JiraExpressionEvalContextBean"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
