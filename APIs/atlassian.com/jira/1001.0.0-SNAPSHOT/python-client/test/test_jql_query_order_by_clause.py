# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.jql_query_order_by_clause import JqlQueryOrderByClause

class TestJqlQueryOrderByClause(unittest.TestCase):
    """JqlQueryOrderByClause unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JqlQueryOrderByClause:
        """Test JqlQueryOrderByClause
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JqlQueryOrderByClause`
        """
        model = JqlQueryOrderByClause()
        if include_optional:
            return JqlQueryOrderByClause(
                fields = [
                    openapi_client.models.jql_query_order_by_clause_element.JqlQueryOrderByClauseElement(
                        direction = 'asc', 
                        field = openapi_client.models.jql_query_field.JqlQueryField(
                            encoded_name = '', 
                            name = '', 
                            property = [
                                openapi_client.models.jql_query_field_entity_property.JqlQueryFieldEntityProperty(
                                    entity = 'issue', 
                                    key = 'stats', 
                                    path = 'comments.count', 
                                    type = 'number', )
                                ], ), )
                    ]
            )
        else:
            return JqlQueryOrderByClause(
                fields = [
                    openapi_client.models.jql_query_order_by_clause_element.JqlQueryOrderByClauseElement(
                        direction = 'asc', 
                        field = openapi_client.models.jql_query_field.JqlQueryField(
                            encoded_name = '', 
                            name = '', 
                            property = [
                                openapi_client.models.jql_query_field_entity_property.JqlQueryFieldEntityProperty(
                                    entity = 'issue', 
                                    key = 'stats', 
                                    path = 'comments.count', 
                                    type = 'number', )
                                ], ), )
                    ],
        )
        """

    def testJqlQueryOrderByClause(self):
        """Test JqlQueryOrderByClause"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
