# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.jira_expression_evaluation_meta_data_bean import JiraExpressionEvaluationMetaDataBean

class TestJiraExpressionEvaluationMetaDataBean(unittest.TestCase):
    """JiraExpressionEvaluationMetaDataBean unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JiraExpressionEvaluationMetaDataBean:
        """Test JiraExpressionEvaluationMetaDataBean
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JiraExpressionEvaluationMetaDataBean`
        """
        model = JiraExpressionEvaluationMetaDataBean()
        if include_optional:
            return JiraExpressionEvaluationMetaDataBean(
                complexity = openapi_client.models.jira_expressions_complexity_bean.JiraExpressionsComplexityBean(
                    beans = null, 
                    expensive_operations = null, 
                    primitive_values = null, 
                    steps = null, ),
                issues = openapi_client.models.issues_meta_bean.IssuesMetaBean(
                    jql = openapi_client.models.issues_jql_meta_data_bean.IssuesJqlMetaDataBean(
                        count = 56, 
                        max_results = 56, 
                        start_at = 56, 
                        total_count = 56, 
                        validation_warnings = [
                            ''
                            ], ), )
            )
        else:
            return JiraExpressionEvaluationMetaDataBean(
        )
        """

    def testJiraExpressionEvaluationMetaDataBean(self):
        """Test JiraExpressionEvaluationMetaDataBean"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
