# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.project import Project

class TestProject(unittest.TestCase):
    """Project unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Project:
        """Test Project
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Project`
        """
        model = Project()
        if include_optional:
            return Project(
                archived = True,
                archived_by = openapi_client.models.user.User(
                    account_id = '', 
                    account_type = 'atlassian', 
                    active = True, 
                    application_roles = null, 
                    avatar_urls = null, 
                    display_name = '', 
                    email_address = '', 
                    expand = '', 
                    groups = null, 
                    key = '', 
                    locale = '', 
                    name = '', 
                    self = '', 
                    time_zone = '', ),
                archived_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                assignee_type = 'PROJECT_LEAD',
                avatar_urls = openapi_client.models.avatar_urls_bean.AvatarUrlsBean(
                    16x16 = '', 
                    24x24 = '', 
                    32x32 = '', 
                    48x48 = '', ),
                components = [
                    openapi_client.models.project_component.ProjectComponent(
                        assignee = null, 
                        assignee_type = 'PROJECT_DEFAULT', 
                        description = '', 
                        id = '', 
                        is_assignee_type_valid = True, 
                        lead = null, 
                        lead_account_id = '', 
                        lead_user_name = '', 
                        name = '', 
                        project = '', 
                        project_id = 56, 
                        real_assignee = null, 
                        real_assignee_type = 'PROJECT_DEFAULT', 
                        self = '', )
                    ],
                deleted = True,
                deleted_by = openapi_client.models.user.User(
                    account_id = '', 
                    account_type = 'atlassian', 
                    active = True, 
                    application_roles = null, 
                    avatar_urls = null, 
                    display_name = '', 
                    email_address = '', 
                    expand = '', 
                    groups = null, 
                    key = '', 
                    locale = '', 
                    name = '', 
                    self = '', 
                    time_zone = '', ),
                deleted_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                email = '',
                expand = '',
                favourite = True,
                id = '',
                insight = openapi_client.models.project_insight.ProjectInsight(
                    last_issue_update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    total_issue_count = 56, ),
                is_private = True,
                issue_type_hierarchy = openapi_client.models.hierarchy.Hierarchy(
                    base_level_id = 56, 
                    levels = [
                        openapi_client.models.simplified_hierarchy_level.SimplifiedHierarchyLevel(
                            above_level_id = 56, 
                            below_level_id = 56, 
                            external_uuid = '', 
                            hierarchy_level_number = 56, 
                            id = 56, 
                            issue_type_ids = [
                                56
                                ], 
                            level = 56, 
                            name = '', 
                            project_configuration_id = 56, )
                        ], ),
                issue_types = [
                    openapi_client.models.issue_type_details.IssueTypeDetails(
                        avatar_id = 56, 
                        description = '', 
                        entity_id = '', 
                        hierarchy_level = 56, 
                        icon_url = '', 
                        id = '', 
                        name = '', 
                        scope = null, 
                        self = '', 
                        subtask = True, )
                    ],
                key = '',
                landing_page_info = openapi_client.models.project_landing_page_info.ProjectLandingPageInfo(
                    attributes = {
                        'key' : ''
                        }, 
                    board_id = 56, 
                    board_name = '', 
                    project_key = '', 
                    project_type = '', 
                    queue_category = '', 
                    queue_id = 56, 
                    queue_name = '', 
                    simple_board = True, 
                    simplified = True, 
                    url = '', ),
                lead = openapi_client.models.user.User(
                    account_id = '', 
                    account_type = 'atlassian', 
                    active = True, 
                    application_roles = null, 
                    avatar_urls = null, 
                    display_name = '', 
                    email_address = '', 
                    expand = '', 
                    groups = null, 
                    key = '', 
                    locale = '', 
                    name = '', 
                    self = '', 
                    time_zone = '', ),
                name = '',
                permissions = openapi_client.models.project_permissions.ProjectPermissions(
                    can_edit = True, ),
                project_category = openapi_client.models.project_category.ProjectCategory(
                    description = '', 
                    id = '', 
                    name = '', 
                    self = '', ),
                project_type_key = 'software',
                properties = {
                    'key' : null
                    },
                retention_till_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                roles = {
                    'key' : ''
                    },
                var_self = '',
                simplified = True,
                style = 'classic',
                url = '',
                uuid = '',
                versions = [
                    openapi_client.models.version.Version(
                        archived = True, 
                        description = '', 
                        expand = '', 
                        id = '', 
                        issues_status_for_fix_version = null, 
                        move_unfixed_issues_to = '', 
                        name = '', 
                        operations = [
                            openapi_client.models.simple_link.SimpleLink(
                                href = '', 
                                icon_class = '', 
                                id = '', 
                                label = '', 
                                style_class = '', 
                                title = '', 
                                weight = 56, )
                            ], 
                        overdue = True, 
                        project = '', 
                        project_id = 56, 
                        release_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        released = True, 
                        self = '', 
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        user_release_date = '', 
                        user_start_date = '', )
                    ]
            )
        else:
            return Project(
        )
        """

    def testProject(self):
        """Test Project"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
