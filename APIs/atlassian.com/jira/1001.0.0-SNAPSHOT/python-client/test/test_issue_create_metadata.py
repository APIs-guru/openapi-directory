# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.issue_create_metadata import IssueCreateMetadata

class TestIssueCreateMetadata(unittest.TestCase):
    """IssueCreateMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IssueCreateMetadata:
        """Test IssueCreateMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IssueCreateMetadata`
        """
        model = IssueCreateMetadata()
        if include_optional:
            return IssueCreateMetadata(
                expand = '',
                projects = [
                    openapi_client.models.project_issue_create_metadata.ProjectIssueCreateMetadata(
                        avatar_urls = null, 
                        expand = '', 
                        id = '', 
                        issuetypes = [
                            openapi_client.models.issue_type_issue_create_metadata.IssueTypeIssueCreateMetadata(
                                avatar_id = 56, 
                                description = '', 
                                entity_id = '', 
                                expand = '', 
                                fields = {
                                    'key' : openapi_client.models.field_metadata.FieldMetadata(
                                        allowed_values = [
                                            null
                                            ], 
                                        auto_complete_url = '', 
                                        configuration = {
                                            'key' : null
                                            }, 
                                        default_value = null, 
                                        has_default_value = True, 
                                        key = '', 
                                        name = '', 
                                        operations = [
                                            ''
                                            ], 
                                        required = True, 
                                        schema = null, )
                                    }, 
                                hierarchy_level = 56, 
                                icon_url = '', 
                                id = '', 
                                name = '', 
                                scope = null, 
                                self = '', 
                                subtask = True, )
                            ], 
                        key = '', 
                        name = '', 
                        self = '', )
                    ]
            )
        else:
            return IssueCreateMetadata(
        )
        """

    def testIssueCreateMetadata(self):
        """Test IssueCreateMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
