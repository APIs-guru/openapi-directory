# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.search_results import SearchResults

class TestSearchResults(unittest.TestCase):
    """SearchResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchResults:
        """Test SearchResults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchResults`
        """
        model = SearchResults()
        if include_optional:
            return SearchResults(
                expand = '',
                issues = [
                    openapi_client.models.issue_bean.IssueBean(
                        changelog = null, 
                        editmeta = null, 
                        expand = '', 
                        fields = {
                            'key' : null
                            }, 
                        fields_to_include = openapi_client.models.included_fields.IncludedFields(
                            actually_included = [
                                ''
                                ], 
                            excluded = [
                                ''
                                ], 
                            included = [
                                ''
                                ], ), 
                        id = '', 
                        key = '', 
                        names = {
                            'key' : ''
                            }, 
                        operations = null, 
                        properties = {
                            'key' : null
                            }, 
                        rendered_fields = {
                            'key' : null
                            }, 
                        schema = {
                            'key' : openapi_client.models.json_type_bean.JsonTypeBean(
                                configuration = {
                                    'key' : null
                                    }, 
                                custom = '', 
                                custom_id = 56, 
                                items = '', 
                                system = '', 
                                type = '', )
                            }, 
                        self = '', 
                        transitions = [
                            { }
                            ], 
                        versioned_representations = {
                            'key' : {
                                'key' : null
                                }
                            }, )
                    ],
                max_results = 56,
                names = {
                    'key' : ''
                    },
                var_schema = {
                    'key' : openapi_client.models.json_type_bean.JsonTypeBean(
                        configuration = {
                            'key' : null
                            }, 
                        custom = '', 
                        custom_id = 56, 
                        items = '', 
                        system = '', 
                        type = '', )
                    },
                start_at = 56,
                total = 56,
                warning_messages = [
                    ''
                    ]
            )
        else:
            return SearchResults(
        )
        """

    def testSearchResults(self):
        """Test SearchResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
