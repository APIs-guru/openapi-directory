# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT
    Contact: ecosystem@atlassian.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user import User

class TestUser(unittest.TestCase):
    """User unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> User:
        """Test User
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `User`
        """
        model = User()
        if include_optional:
            return User(
                account_id = '',
                account_type = 'atlassian',
                active = True,
                application_roles = openapi_client.models.simple_list_wrapper_application_role.SimpleListWrapperApplicationRole(
                    callback = openapi_client.models.callback.callback(), 
                    items = [
                        openapi_client.models.application_role.ApplicationRole(
                            default_groups = [
                                ''
                                ], 
                            default_groups_details = [
                                openapi_client.models.group_name.GroupName(
                                    group_id = '', 
                                    name = '', 
                                    self = '', )
                                ], 
                            defined = True, 
                            group_details = [
                                openapi_client.models.group_name.GroupName(
                                    group_id = '', 
                                    name = '', 
                                    self = '', )
                                ], 
                            groups = [
                                ''
                                ], 
                            has_unlimited_seats = True, 
                            key = '', 
                            name = '', 
                            number_of_seats = 56, 
                            platform = True, 
                            remaining_seats = 56, 
                            selected_by_default = True, 
                            user_count = 56, 
                            user_count_description = '', )
                        ], 
                    max_results = 56, 
                    paging_callback = openapi_client.models.callback.callback(), 
                    size = 56, ),
                avatar_urls = openapi_client.models.avatar_urls_bean.AvatarUrlsBean(
                    16x16 = '', 
                    24x24 = '', 
                    32x32 = '', 
                    48x48 = '', ),
                display_name = '',
                email_address = '',
                expand = '',
                groups = openapi_client.models.simple_list_wrapper_group_name.SimpleListWrapperGroupName(
                    callback = openapi_client.models.callback.callback(), 
                    items = [
                        openapi_client.models.group_name.GroupName(
                            group_id = '', 
                            name = '', 
                            self = '', )
                        ], 
                    max_results = 56, 
                    paging_callback = openapi_client.models.callback.callback(), 
                    size = 56, ),
                key = '',
                locale = '',
                name = '',
                var_self = '',
                time_zone = ''
            )
        else:
            return User(
        )
        """

    def testUser(self):
        """Test User"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
