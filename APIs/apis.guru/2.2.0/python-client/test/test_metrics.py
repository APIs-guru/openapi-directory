# coding: utf-8

"""
    APIs.guru

    Wikipedia for Web APIs. Repository of API definitions in OpenAPI format. **Warning**: If you want to be notified about changes in advance please join our [Slack channel](https://join.slack.com/t/mermade/shared_invite/zt-g78g7xir-MLE_CTCcXCdfJfG3CJe9qA). Client sample: [[Demo]](https://apis.guru/simple-ui) [[Repo]](https://github.com/APIs-guru/simple-ui) 

    The version of the OpenAPI document: 2.2.0
    Contact: mike.ralphson@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.metrics import Metrics

class TestMetrics(unittest.TestCase):
    """Metrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Metrics:
        """Test Metrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Metrics`
        """
        model = Metrics()
        if include_optional:
            return Metrics(
                datasets = [
                    null
                    ],
                fixed_pct = 56,
                fixes = 56,
                invalid = 56,
                issues = 56,
                num_apis = 1,
                num_drivers = 56,
                num_endpoints = 1,
                num_providers = 56,
                num_specs = 1,
                stars = 56,
                this_week = openapi_client.models.metrics_this_week.Metrics_thisWeek(
                    added = 56, 
                    updated = 56, ),
                unofficial = 56,
                unreachable = 56
            )
        else:
            return Metrics(
                num_apis = 1,
                num_endpoints = 1,
                num_specs = 1,
        )
        """

    def testMetrics(self):
        """Test Metrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
