# coding: utf-8

"""
    spoonacular API

    The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.

    The version of the OpenAPI document: 1.1
    Contact: mail@spoonacular.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.misc_api import MiscApi


class TestMiscApi(unittest.TestCase):
    """MiscApi unit test stubs"""

    def setUp(self) -> None:
        self.api = MiscApi()

    def tearDown(self) -> None:
        pass

    def test_detect_food_in_text(self) -> None:
        """Test case for detect_food_in_text

        Detect Food in Text
        """
        pass

    def test_get_a_random_food_joke(self) -> None:
        """Test case for get_a_random_food_joke

        Random Food Joke
        """
        pass

    def test_get_conversation_suggests(self) -> None:
        """Test case for get_conversation_suggests

        Conversation Suggests
        """
        pass

    def test_get_random_food_trivia(self) -> None:
        """Test case for get_random_food_trivia

        Random Food Trivia
        """
        pass

    def test_image_analysis_by_url(self) -> None:
        """Test case for image_analysis_by_url

        Image Analysis by URL
        """
        pass

    def test_image_classification_by_url(self) -> None:
        """Test case for image_classification_by_url

        Image Classification by URL
        """
        pass

    def test_search_all_food(self) -> None:
        """Test case for search_all_food

        Search All Food
        """
        pass

    def test_search_custom_foods(self) -> None:
        """Test case for search_custom_foods

        Search Custom Foods
        """
        pass

    def test_search_food_videos(self) -> None:
        """Test case for search_food_videos

        Search Food Videos
        """
        pass

    def test_search_site_content(self) -> None:
        """Test case for search_site_content

        Search Site Content
        """
        pass

    def test_talk_to_chatbot(self) -> None:
        """Test case for talk_to_chatbot

        Talk to Chatbot
        """
        pass


if __name__ == '__main__':
    unittest.main()
