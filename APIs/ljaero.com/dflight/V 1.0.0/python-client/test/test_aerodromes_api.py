# coding: utf-8

"""
    DFlight API

    [DFlight API](https://ljaero.com/solutions/dflight/) supplies the up-to-date information needed for compliance with UAV preflight assessment requirements. Separate endpoints are available for each of the following information categories: - Airspace - Weather - Temporary Flight Restrictions - Special Security Areas - Restricted Public Venues - Surface Obstacles - Aerodromes - UAS Operating Areas  You can define your geographic area of interest in one of three convenient ways: - Providing a latitude/longitude point and distance around that point - Providing a GeoJSON LineString defining your route - Providing an arbitrary GeoJSON Polygon defining your area of interest

    The version of the OpenAPI document: V 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.aerodromes_api import AerodromesApi


class TestAerodromesApi(unittest.TestCase):
    """AerodromesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AerodromesApi()

    def tearDown(self) -> None:
        pass

    def test_aerodromes_by_distance_us_v1_aerodromes_distance_query_post(self) -> None:
        """Test case for aerodromes_by_distance_us_v1_aerodromes_distance_query_post

        Retrieve aerodromes within given distance of location.
        """
        pass

    def test_aerodromes_by_poly_us_v1_aerodromes_polygon_query_post(self) -> None:
        """Test case for aerodromes_by_poly_us_v1_aerodromes_polygon_query_post

        Retrieve aerodromes located within given area.
        """
        pass

    def test_aerodromes_by_route_us_v1_aerodromes_route_query_post(self) -> None:
        """Test case for aerodromes_by_route_us_v1_aerodromes_route_query_post

        Retrieve aerodromes found along a route.
        """
        pass


if __name__ == '__main__':
    unittest.main()
