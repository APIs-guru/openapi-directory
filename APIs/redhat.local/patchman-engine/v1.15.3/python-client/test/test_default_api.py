# coding: utf-8

"""
    Patchman-engine API

    API of the Patch application on [cloud.redhat.com](cloud.redhat.com)  Syntax of the `filter[name]` query parameters is described in  [Filters documentation](https://github.com/RedHatInsights/patchman-engine/wiki/API-custom-filters)

    The version of the OpenAPI document: v1.15.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.default_api import DefaultApi


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DefaultApi()

    def tearDown(self) -> None:
        pass

    def test_deletesystem(self) -> None:
        """Test case for deletesystem

        Delete system by inventory id
        """
        pass

    def test_detail_advisory(self) -> None:
        """Test case for detail_advisory

        Show me details an advisory by given advisory name
        """
        pass

    def test_detail_system(self) -> None:
        """Test case for detail_system

        Show me details about a system by given inventory id
        """
        pass

    def test_export_advisories(self) -> None:
        """Test case for export_advisories

        Export applicable advisories for all my systems
        """
        pass

    def test_export_advisory_systems(self) -> None:
        """Test case for export_advisory_systems

        Export systems for my account
        """
        pass

    def test_export_package_systems(self) -> None:
        """Test case for export_package_systems

        Show me all my systems which have a package installed
        """
        pass

    def test_export_packages(self) -> None:
        """Test case for export_packages

        Show me all installed packages across my systems
        """
        pass

    def test_export_system_advisories(self) -> None:
        """Test case for export_system_advisories

        Export applicable advisories for all my systems
        """
        pass

    def test_export_system_packages(self) -> None:
        """Test case for export_system_packages

        Show me details about a system packages by given inventory id
        """
        pass

    def test_export_systems(self) -> None:
        """Test case for export_systems

        Export systems for my account
        """
        pass

    def test_latest_package(self) -> None:
        """Test case for latest_package

        Show me metadata of selected package
        """
        pass

    def test_list_advisories(self) -> None:
        """Test case for list_advisories

        Show me all applicable advisories for all my systems
        """
        pass

    def test_list_advisory_systems(self) -> None:
        """Test case for list_advisory_systems

        Show me systems on which the given advisory is applicable
        """
        pass

    def test_list_packages(self) -> None:
        """Test case for list_packages

        Show me all installed packages across my systems
        """
        pass

    def test_list_system_advisories(self) -> None:
        """Test case for list_system_advisories

        Show me advisories for a system by given inventory id
        """
        pass

    def test_list_systems(self) -> None:
        """Test case for list_systems

        Show me all my systems
        """
        pass

    def test_package_systems(self) -> None:
        """Test case for package_systems

        Show me all my systems which have a package installed
        """
        pass

    def test_package_versions(self) -> None:
        """Test case for package_versions

        Show me all package versions installed on some system
        """
        pass

    def test_system_packages(self) -> None:
        """Test case for system_packages

        Show me details about a system packages by given inventory id
        """
        pass

    def test_view_advisories_systems(self) -> None:
        """Test case for view_advisories_systems

        View advisory-system pairs for selected systems and advisories
        """
        pass

    def test_view_systems_advisories(self) -> None:
        """Test case for view_systems_advisories

        View system-advisory pairs for selected systems and advisories
        """
        pass


if __name__ == '__main__':
    unittest.main()
