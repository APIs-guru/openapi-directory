# coding: utf-8

"""
    SwaggerHub Registry API

    # Overview Use SwaggerHub Registry API to access, manage, and update the following resources in SwaggerHub, bypassing the web interface:   * APIs   * Domains   * Integrations   * Projects   * Templates   SwaggerHub also provides the [User Management API](https://app.swaggerhub.com/apis-docs/swagger-hub/user-management-api/) to get information about organizations and manage organization members.  # Base URL Use the following base URL for SwaggerHub SaaS:          http(s)://api.swaggerhub.com  **Note:** This documentation is for SwaggerHub SaaS. On-Premise customers should use the bundled API definition, which can be found at the URLs provided below.  Version 1.29.0 or later:      http(s)://SERVER/v1/openapi.yaml - YAML version     http(s)://SERVER/v1/openapi.json - JSON version  Earlier versions:      http(s)://SERVER/v1/swagger.yaml - YAML version     http(s)://SERVER/v1/swagger.json - JSON version  # Authentication Operations that update data or access private data require authentication using an API key. You can find your personal API key on the [API Keys](https://app.swaggerhub.com/settings/apiKey) page in your account settings. Send this key in the `Authorization` header when making requests to the Registry API:      Authorization: YOUR_API_KEY  To test API calls from this documentation page, click the **Authorize** button below and paste your API key there.  **Important:** Keep the API key secure and do not store it directly in your code. # Tools In addition to calling the Registry API directly, you can use the following tools to interact with the API from the command line or CI/CD pipeline:   * [SwaggerHub CLI](https://www.npmjs.com/package/swaggerhub-cli)   * [Maven plugin](https://github.com/swagger-api/swaggerhub-maven-plugin)  * [Gradle plugin](https://github.com/swagger-api/swaggerhub-gradle-plugin) 

    The version of the OpenAPI document: 1.0.66
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.domains_api import DomainsApi


class TestDomainsApi(unittest.TestCase):
    """DomainsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DomainsApi()

    def tearDown(self) -> None:
        pass

    def test_add_domain_comment_reply_v2(self) -> None:
        """Test case for add_domain_comment_reply_v2

        Reply to a comment
        """
        pass

    def test_add_domain_comment_v2(self) -> None:
        """Test case for add_domain_comment_v2

        Add a new comment
        """
        pass

    def test_clone_domain(self) -> None:
        """Test case for clone_domain

        Create a new domain version
        """
        pass

    def test_delete_domain(self) -> None:
        """Test case for delete_domain

        Delete a domain
        """
        pass

    def test_delete_domain_comment_reply_v2(self) -> None:
        """Test case for delete_domain_comment_reply_v2

        Delete a comment reply
        """
        pass

    def test_delete_domain_comment_v2(self) -> None:
        """Test case for delete_domain_comment_v2

        Delete a comment
        """
        pass

    def test_delete_domain_version(self) -> None:
        """Test case for delete_domain_version

        Delete a domain version
        """
        pass

    def test_fork_domain(self) -> None:
        """Test case for fork_domain

        Fork a domain
        """
        pass

    def test_get_domain_comments_v2(self) -> None:
        """Test case for get_domain_comments_v2

        Get comments for the specified domain version
        """
        pass

    def test_get_domain_default_version(self) -> None:
        """Test case for get_domain_default_version

        Get the default version of a domain
        """
        pass

    def test_get_domain_definition(self) -> None:
        """Test case for get_domain_definition

        Get the OpenAPI definition of the specified domain version
        """
        pass

    def test_get_domain_json_definition(self) -> None:
        """Test case for get_domain_json_definition

        Get the OpenAPI definition for the specified domain version in JSON format
        """
        pass

    def test_get_domain_lifecycle_settings(self) -> None:
        """Test case for get_domain_lifecycle_settings

        Get the published status for the specified domain and version
        """
        pass

    def test_get_domain_private_settings(self) -> None:
        """Test case for get_domain_private_settings

        Get the visibility (public or private) of a domain version
        """
        pass

    def test_get_domain_versions(self) -> None:
        """Test case for get_domain_versions

        Get a list of domain versions
        """
        pass

    def test_get_domain_yaml_definition(self) -> None:
        """Test case for get_domain_yaml_definition

        Get the OpenAPI definition for the specified domain version in YAML format
        """
        pass

    def test_get_owner_domains(self) -> None:
        """Test case for get_owner_domains

        Get a list of domains of the specified owner
        """
        pass

    def test_rename_domain(self) -> None:
        """Test case for rename_domain

        Rename a domain
        """
        pass

    def test_save_domain_definition(self) -> None:
        """Test case for save_domain_definition

        Create or update a domain
        """
        pass

    def test_search_apis_and_domains_0(self) -> None:
        """Test case for search_apis_and_domains_0

        Retrieve a list of currently defined APIs, domains, and templates in APIs.json format
        """
        pass

    def test_search_domains(self) -> None:
        """Test case for search_domains

        Search domains
        """
        pass

    def test_set_domain_comment_status_v2(self) -> None:
        """Test case for set_domain_comment_status_v2

        Resolve or reopen a comment
        """
        pass

    def test_set_domain_default_version(self) -> None:
        """Test case for set_domain_default_version

        Set the default version for a domain
        """
        pass

    def test_set_domain_lifecycle_settings(self) -> None:
        """Test case for set_domain_lifecycle_settings

        Publish or unpublish a domain version
        """
        pass

    def test_set_domain_private_settings(self) -> None:
        """Test case for set_domain_private_settings

        Set the visibility (public or private) of a domain version
        """
        pass

    def test_update_domain_comment_reply_v2(self) -> None:
        """Test case for update_domain_comment_reply_v2

        Update a comment reply
        """
        pass

    def test_update_domain_comment_v2(self) -> None:
        """Test case for update_domain_comment_v2

        Update a comment
        """
        pass

    def test_update_domain_comments_v2(self) -> None:
        """Test case for update_domain_comments_v2

        Bulk update comments
        """
        pass


if __name__ == '__main__':
    unittest.main()
