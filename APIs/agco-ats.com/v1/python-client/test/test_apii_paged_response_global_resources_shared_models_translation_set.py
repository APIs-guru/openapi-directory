# coding: utf-8

"""
    AGCO API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.apii_paged_response_global_resources_shared_models_translation_set import APIIPagedResponseGlobalResourcesSharedModelsTranslationSet

class TestAPIIPagedResponseGlobalResourcesSharedModelsTranslationSet(unittest.TestCase):
    """APIIPagedResponseGlobalResourcesSharedModelsTranslationSet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> APIIPagedResponseGlobalResourcesSharedModelsTranslationSet:
        """Test APIIPagedResponseGlobalResourcesSharedModelsTranslationSet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `APIIPagedResponseGlobalResourcesSharedModelsTranslationSet`
        """
        model = APIIPagedResponseGlobalResourcesSharedModelsTranslationSet()
        if include_optional:
            return APIIPagedResponseGlobalResourcesSharedModelsTranslationSet(
                entities = [
                    openapi_client.models.global_resources/shared/models/translation_set.GlobalResources.Shared.Models.TranslationSet(
                        attributes = [
                            openapi_client.models.global_resources/shared/models/translation_set_attribute.GlobalResources.Shared.Models.TranslationSetAttribute(
                                id = 56, 
                                name = 'C', 
                                translation_set_id = 56, 
                                value = '', )
                            ], 
                        file_ids = [
                            ''
                            ], 
                        id = 56, 
                        in_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        notes = '', 
                        out_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        state = 'OutForProcessing', 
                        translation_request_id = 56, )
                    ],
                metadata = openapi_client.models.api/paged_response_metadata.API.PagedResponseMetadata(
                    limit = 56, 
                    offset = 56, 
                    total_count = 56, )
            )
        else:
            return APIIPagedResponseGlobalResourcesSharedModelsTranslationSet(
        )
        """

    def testAPIIPagedResponseGlobalResourcesSharedModelsTranslationSet(self):
        """Test APIIPagedResponseGlobalResourcesSharedModelsTranslationSet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
