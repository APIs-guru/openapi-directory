# coding: utf-8

"""
    AGCO API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dealer_db_models_voucher import DealerDBModelsVoucher

class TestDealerDBModelsVoucher(unittest.TestCase):
    """DealerDBModelsVoucher unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DealerDBModelsVoucher:
        """Test DealerDBModelsVoucher
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DealerDBModelsVoucher`
        """
        model = DealerDBModelsVoucher()
        if include_optional:
            return DealerDBModelsVoucher(
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dealer_code = '',
                deleted = True,
                email = '',
                expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                license_to = '',
                modified_by = '',
                order_number = '',
                punched = True,
                punched_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                purpose = '',
                type = 'Commercial',
                voucher_code = ''
            )
        else:
            return DealerDBModelsVoucher(
        )
        """

    def testDealerDBModelsVoucher(self):
        """Test DealerDBModelsVoucher"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
