# coding: utf-8

"""
    AGCO API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_system_models_paged_client_status_metadata import UpdateSystemModelsPagedClientStatusMetadata

class TestUpdateSystemModelsPagedClientStatusMetadata(unittest.TestCase):
    """UpdateSystemModelsPagedClientStatusMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateSystemModelsPagedClientStatusMetadata:
        """Test UpdateSystemModelsPagedClientStatusMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateSystemModelsPagedClientStatusMetadata`
        """
        model = UpdateSystemModelsPagedClientStatusMetadata()
        if include_optional:
            return UpdateSystemModelsPagedClientStatusMetadata(
                limit = 56,
                offset = 56,
                report_result_expected = '',
                report_result_label = '',
                report_value_label = '',
                total_count = 56
            )
        else:
            return UpdateSystemModelsPagedClientStatusMetadata(
                limit = 56,
                offset = 56,
                report_result_expected = '',
                report_result_label = '',
                report_value_label = '',
                total_count = 56,
        )
        """

    def testUpdateSystemModelsPagedClientStatusMetadata(self):
        """Test UpdateSystemModelsPagedClientStatusMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
