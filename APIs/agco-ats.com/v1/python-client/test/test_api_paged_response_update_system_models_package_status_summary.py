# coding: utf-8

"""
    AGCO API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_paged_response_update_system_models_package_status_summary import APIPagedResponseUpdateSystemModelsPackageStatusSummary

class TestAPIPagedResponseUpdateSystemModelsPackageStatusSummary(unittest.TestCase):
    """APIPagedResponseUpdateSystemModelsPackageStatusSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> APIPagedResponseUpdateSystemModelsPackageStatusSummary:
        """Test APIPagedResponseUpdateSystemModelsPackageStatusSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `APIPagedResponseUpdateSystemModelsPackageStatusSummary`
        """
        model = APIPagedResponseUpdateSystemModelsPackageStatusSummary()
        if include_optional:
            return APIPagedResponseUpdateSystemModelsPackageStatusSummary(
                entities = [
                    openapi_client.models.update_system/models/package_status_summary.UpdateSystem.Models.PackageStatusSummary(
                        average_download_time = '', 
                        average_install_time = '', 
                        downloaded = 56, 
                        error = 56, 
                        installed = 56, 
                        package = '', 
                        package_id = '', 
                        package_status_items = [
                            openapi_client.models.update_system/models/package_status.UpdateSystem.Models.PackageStatus(
                                client_id = '', 
                                client_key = '', 
                                download_time = '', 
                                downloaded = '', 
                                install_completed = '', 
                                install_result = '', 
                                install_started = '', 
                                install_time = '', 
                                percentage = '', 
                                size = '', 
                                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], )
                    ],
                metadata = openapi_client.models.api/paged_response_metadata.API.PagedResponseMetadata(
                    limit = 56, 
                    offset = 56, 
                    total_count = 56, )
            )
        else:
            return APIPagedResponseUpdateSystemModelsPackageStatusSummary(
                entities = [
                    openapi_client.models.update_system/models/package_status_summary.UpdateSystem.Models.PackageStatusSummary(
                        average_download_time = '', 
                        average_install_time = '', 
                        downloaded = 56, 
                        error = 56, 
                        installed = 56, 
                        package = '', 
                        package_id = '', 
                        package_status_items = [
                            openapi_client.models.update_system/models/package_status.UpdateSystem.Models.PackageStatus(
                                client_id = '', 
                                client_key = '', 
                                download_time = '', 
                                downloaded = '', 
                                install_completed = '', 
                                install_result = '', 
                                install_started = '', 
                                install_time = '', 
                                percentage = '', 
                                size = '', 
                                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], )
                    ],
                metadata = openapi_client.models.api/paged_response_metadata.API.PagedResponseMetadata(
                    limit = 56, 
                    offset = 56, 
                    total_count = 56, ),
        )
        """

    def testAPIPagedResponseUpdateSystemModelsPackageStatusSummary(self):
        """Test APIPagedResponseUpdateSystemModelsPackageStatusSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
