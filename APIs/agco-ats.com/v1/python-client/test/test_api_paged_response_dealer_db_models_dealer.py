# coding: utf-8

"""
    AGCO API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_paged_response_dealer_db_models_dealer import APIPagedResponseDealerDBModelsDealer

class TestAPIPagedResponseDealerDBModelsDealer(unittest.TestCase):
    """APIPagedResponseDealerDBModelsDealer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> APIPagedResponseDealerDBModelsDealer:
        """Test APIPagedResponseDealerDBModelsDealer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `APIPagedResponseDealerDBModelsDealer`
        """
        model = APIPagedResponseDealerDBModelsDealer()
        if include_optional:
            return APIPagedResponseDealerDBModelsDealer(
                entities = [
                    openapi_client.models.dealer_db/models/dealer.DealerDB.Models.Dealer(
                        billing_address = '', 
                        billing_address2 = '', 
                        billing_address3 = '', 
                        billing_address4 = '', 
                        billing_city = '', 
                        billing_country = '', 
                        billing_country_code = '', 
                        billing_state = '', 
                        billing_zip = '', 
                        brands = [
                            ''
                            ], 
                        dealer_code = '', 
                        dealer_name = '', 
                        dealer_status = '', 
                        dealer_status_update_date = '', 
                        filler = '', 
                        is_valid = True, 
                        language_preference = '', 
                        region1 = '', 
                        region2 = '', 
                        region_mapping = '', 
                        role_brand = '', 
                        shipping_address2 = '', 
                        shipping_address3 = '', 
                        shipping_address4 = '', 
                        shipping_city = '', 
                        shipping_country = '', 
                        shipping_state = '', 
                        shipping_street = '', 
                        shipping_zip = '', 
                        telephone = '', 
                        vat_code = '', )
                    ],
                metadata = openapi_client.models.api/paged_response_metadata.API.PagedResponseMetadata(
                    limit = 56, 
                    offset = 56, 
                    total_count = 56, )
            )
        else:
            return APIPagedResponseDealerDBModelsDealer(
                entities = [
                    openapi_client.models.dealer_db/models/dealer.DealerDB.Models.Dealer(
                        billing_address = '', 
                        billing_address2 = '', 
                        billing_address3 = '', 
                        billing_address4 = '', 
                        billing_city = '', 
                        billing_country = '', 
                        billing_country_code = '', 
                        billing_state = '', 
                        billing_zip = '', 
                        brands = [
                            ''
                            ], 
                        dealer_code = '', 
                        dealer_name = '', 
                        dealer_status = '', 
                        dealer_status_update_date = '', 
                        filler = '', 
                        is_valid = True, 
                        language_preference = '', 
                        region1 = '', 
                        region2 = '', 
                        region_mapping = '', 
                        role_brand = '', 
                        shipping_address2 = '', 
                        shipping_address3 = '', 
                        shipping_address4 = '', 
                        shipping_city = '', 
                        shipping_country = '', 
                        shipping_state = '', 
                        shipping_street = '', 
                        shipping_zip = '', 
                        telephone = '', 
                        vat_code = '', )
                    ],
                metadata = openapi_client.models.api/paged_response_metadata.API.PagedResponseMetadata(
                    limit = 56, 
                    offset = 56, 
                    total_count = 56, ),
        )
        """

    def testAPIPagedResponseDealerDBModelsDealer(self):
        """Test APIPagedResponseDealerDBModelsDealer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
