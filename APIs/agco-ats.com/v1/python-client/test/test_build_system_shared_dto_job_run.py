# coding: utf-8

"""
    AGCO API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.build_system_shared_dto_job_run import BuildSystemSharedDTOJobRun

class TestBuildSystemSharedDTOJobRun(unittest.TestCase):
    """BuildSystemSharedDTOJobRun unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BuildSystemSharedDTOJobRun:
        """Test BuildSystemSharedDTOJobRun
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BuildSystemSharedDTOJobRun`
        """
        model = BuildSystemSharedDTOJobRun()
        if include_optional:
            return BuildSystemSharedDTOJobRun(
                activity_runs = [
                    openapi_client.models.build_system/shared/dto/activity_run.BuildSystem.Shared.DTO.ActivityRun(
                        activity_run_id = 56, 
                        end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        job_activity_id = 56, 
                        job_run_id = 56, 
                        parameters = [
                            openapi_client.models.build_system/shared/dto/parameter_value.BuildSystem.Shared.DTO.ParameterValue(
                                direction = 'Input', 
                                name = '', 
                                value = '', )
                            ], 
                        start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        status = openapi_client.models.build_system/shared/dto/activity_run_status.BuildSystem.Shared.DTO.ActivityRunStatus(
                            current_step = 56, 
                            step_progress = 56, 
                            step_status = '', ), 
                        steps = [
                            openapi_client.models.build_system/shared/dto/activity_step.BuildSystem.Shared.DTO.ActivityStep(
                                activity_id = 56, 
                                activity_step_id = 56, 
                                implementation_id = '', 
                                parameter_mappings = [
                                    openapi_client.models.build_system/shared/dto/parameter_mapping.BuildSystem.Shared.DTO.ParameterMapping(
                                        name = '', 
                                        source = '', 
                                        source_type = 'Constant', )
                                    ], 
                                run_order = 56, 
                                step_id = 56, 
                                step_name = '', 
                                use_config = '', )
                            ], )
                    ],
                end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                job_id = 56,
                job_run_id = 56,
                parameters = [
                    openapi_client.models.build_system/shared/dto/parameter_value.BuildSystem.Shared.DTO.ParameterValue(
                        direction = 'Input', 
                        name = '', 
                        value = '', )
                    ],
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = 'Ready'
            )
        else:
            return BuildSystemSharedDTOJobRun(
        )
        """

    def testBuildSystemSharedDTOJobRun(self):
        """Test BuildSystemSharedDTOJobRun"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
