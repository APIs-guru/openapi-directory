# coding: utf-8

"""
    Flickr API Schema

    A subset of Flickr's API defined in Swagger format.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.topic_reply import TopicReply

class TestTopicReply(unittest.TestCase):
    """TopicReply unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TopicReply:
        """Test TopicReply
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TopicReply`
        """
        model = TopicReply()
        if include_optional:
            return TopicReply(
                author = '',
                author_is_deleted = True,
                author_path_alias = '',
                authorname = '',
                can_delete = True,
                can_edit = True,
                datecreate = '',
                iconfarm = '',
                iconserver = '',
                id = '',
                is_pro = True,
                lastedit = '',
                message = openapi_client.models.get_favorites_context_by_id_200_response_count.getFavoritesContextByID_200_response_count(
                    _content = '', )
            )
        else:
            return TopicReply(
        )
        """

    def testTopicReply(self):
        """Test TopicReply"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
