# coding: utf-8

"""
    Flickr API Schema

    A subset of Flickr's API defined in Swagger format.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_person_by_id200_response import GetPersonByID200Response

class TestGetPersonByID200Response(unittest.TestCase):
    """GetPersonByID200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetPersonByID200Response:
        """Test GetPersonByID200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetPersonByID200Response`
        """
        model = GetPersonByID200Response()
        if include_optional:
            return GetPersonByID200Response(
                person = openapi_client.models.person.Person(
                    can_buy_pro = True, 
                    cover = openapi_client.models.cover.Cover(
                        farm = '', 
                        id = '', 
                        isfamily = True, 
                        isfriend = True, 
                        ispublic = True, 
                        owner = '', 
                        secret = '', 
                        server = '', 
                        title = '', 
                        y = '', ), 
                    coverphoto = openapi_client.models.photo_urls.PhotoURLs(
                        h = '', 
                        l = '', 
                        s = '', 
                        t = '', ), 
                    coverphoto_farm = '', 
                    coverphoto_server = '', 
                    description = openapi_client.models.get_favorites_context_by_id_200_response_count.getFavoritesContextByID_200_response_count(
                        _content = '', ), 
                    disable_keyboard_shortcuts = openapi_client.models.get_favorites_context_by_id_200_response_count.getFavoritesContextByID_200_response_count(
                        _content = '', ), 
                    expire = True, 
                    has_stats = True, 
                    iconfarm = '', 
                    iconserver = '', 
                    id = '', 
                    is_ad_free = True, 
                    ispro = True, 
                    location = , 
                    mbox_sha1sum = , 
                    mobileurl = , 
                    nsid = '', 
                    path_alias = '', 
                    photos = openapi_client.models.person_photos.Person_photos(
                        count = , 
                        firstdate = , 
                        firstdatetaken = , 
                        views = , ), 
                    photosurl = , 
                    profileurl = , 
                    realname = , 
                    timezone = openapi_client.models.person_timezone.Person_timezone(
                        label = '', 
                        offset = '', 
                        timezone_id = '', ), 
                    unread_messages = , 
                    user_secret = '', 
                    username = , 
                    yintl = '', ),
                stat = ''
            )
        else:
            return GetPersonByID200Response(
        )
        """

    def testGetPersonByID200Response(self):
        """Test GetPersonByID200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
