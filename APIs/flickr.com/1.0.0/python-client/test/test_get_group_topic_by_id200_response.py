# coding: utf-8

"""
    Flickr API Schema

    A subset of Flickr's API defined in Swagger format.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_group_topic_by_id200_response import GetGroupTopicByID200Response

class TestGetGroupTopicByID200Response(unittest.TestCase):
    """GetGroupTopicByID200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetGroupTopicByID200Response:
        """Test GetGroupTopicByID200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetGroupTopicByID200Response`
        """
        model = GetGroupTopicByID200Response()
        if include_optional:
            return GetGroupTopicByID200Response(
                stat = '',
                topic = openapi_client.models.topic.Topic(
                    author = '', 
                    author_is_deleted = True, 
                    author_path_alias = '', 
                    authorname = '', 
                    can_delete = True, 
                    can_edit = True, 
                    can_reply = True, 
                    count_replies = 56, 
                    datecreate = '', 
                    datelastpost = '', 
                    iconfarm = '', 
                    iconserver = '', 
                    id = '', 
                    is_locked = True, 
                    is_pro = True, 
                    is_sticky = True, 
                    last_reply = '', 
                    lastedit = '', 
                    message = openapi_client.models.get_favorites_context_by_id_200_response_count.getFavoritesContextByID_200_response_count(
                        _content = '', ), 
                    role = '', 
                    subject = '', )
            )
        else:
            return GetGroupTopicByID200Response(
        )
        """

    def testGetGroupTopicByID200Response(self):
        """Test GetGroupTopicByID200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
