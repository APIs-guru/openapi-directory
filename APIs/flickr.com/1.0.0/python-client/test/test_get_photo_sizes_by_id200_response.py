# coding: utf-8

"""
    Flickr API Schema

    A subset of Flickr's API defined in Swagger format.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_photo_sizes_by_id200_response import GetPhotoSizesByID200Response

class TestGetPhotoSizesByID200Response(unittest.TestCase):
    """GetPhotoSizesByID200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetPhotoSizesByID200Response:
        """Test GetPhotoSizesByID200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetPhotoSizesByID200Response`
        """
        model = GetPhotoSizesByID200Response()
        if include_optional:
            return GetPhotoSizesByID200Response(
                sizes = openapi_client.models.get_photo_sizes_by_id_200_response_sizes.getPhotoSizesByID_200_response_sizes(
                    canblog = 1.337, 
                    candownload = 1.337, 
                    canprint = 1.337, 
                    sizes = [
                        openapi_client.models.size.Size(
                            height = 1.337, 
                            label = '', 
                            media = '', 
                            source = '', 
                            url = '', 
                            width = 1.337, )
                        ], ),
                stat = ''
            )
        else:
            return GetPhotoSizesByID200Response(
        )
        """

    def testGetPhotoSizesByID200Response(self):
        """Test GetPhotoSizesByID200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
