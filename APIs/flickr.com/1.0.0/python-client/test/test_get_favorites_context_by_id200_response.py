# coding: utf-8

"""
    Flickr API Schema

    A subset of Flickr's API defined in Swagger format.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_favorites_context_by_id200_response import GetFavoritesContextByID200Response

class TestGetFavoritesContextByID200Response(unittest.TestCase):
    """GetFavoritesContextByID200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetFavoritesContextByID200Response:
        """Test GetFavoritesContextByID200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetFavoritesContextByID200Response`
        """
        model = GetFavoritesContextByID200Response()
        if include_optional:
            return GetFavoritesContextByID200Response(
                count = openapi_client.models.get_favorites_context_by_id_200_response_count.getFavoritesContextByID_200_response_count(
                    _content = '', ),
                nextphoto = openapi_client.models.context_photo.ContextPhoto(
                    farm = '', 
                    id = '', 
                    is_faved = True, 
                    license = 56, 
                    media = '', 
                    owner = '', 
                    safe = True, 
                    secret = '', 
                    server = '', 
                    thumb = '', 
                    title = '', 
                    url = '', ),
                prevphoto = openapi_client.models.context_photo.ContextPhoto(
                    farm = '', 
                    id = '', 
                    is_faved = True, 
                    license = 56, 
                    media = '', 
                    owner = '', 
                    safe = True, 
                    secret = '', 
                    server = '', 
                    thumb = '', 
                    title = '', 
                    url = '', ),
                stat = ''
            )
        else:
            return GetFavoritesContextByID200Response(
        )
        """

    def testGetFavoritesContextByID200Response(self):
        """Test GetFavoritesContextByID200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
