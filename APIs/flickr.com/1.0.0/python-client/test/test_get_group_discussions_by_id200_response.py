# coding: utf-8

"""
    Flickr API Schema

    A subset of Flickr's API defined in Swagger format.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_group_discussions_by_id200_response import GetGroupDiscussionsByID200Response

class TestGetGroupDiscussionsByID200Response(unittest.TestCase):
    """GetGroupDiscussionsByID200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetGroupDiscussionsByID200Response:
        """Test GetGroupDiscussionsByID200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetGroupDiscussionsByID200Response`
        """
        model = GetGroupDiscussionsByID200Response()
        if include_optional:
            return GetGroupDiscussionsByID200Response(
                iconfarm = 1.337,
                iconserver = 1.337,
                ispoolmoderated = True,
                lang = '',
                members = 1.337,
                name = '',
                page = 1.337,
                pages = 1.337,
                per_page = 1.337,
                privacy = 1.337,
                topics = [
                    openapi_client.models.topic.Topic(
                        author = '', 
                        author_is_deleted = True, 
                        author_path_alias = '', 
                        authorname = '', 
                        can_delete = True, 
                        can_edit = True, 
                        can_reply = True, 
                        count_replies = 56, 
                        datecreate = '', 
                        datelastpost = '', 
                        iconfarm = '', 
                        iconserver = '', 
                        id = '', 
                        is_locked = True, 
                        is_pro = True, 
                        is_sticky = True, 
                        last_reply = '', 
                        lastedit = '', 
                        message = openapi_client.models.get_favorites_context_by_id_200_response_count.getFavoritesContextByID_200_response_count(
                            _content = '', ), 
                        role = '', 
                        subject = '', )
                    ],
                total = 1.337
            )
        else:
            return GetGroupDiscussionsByID200Response(
        )
        """

    def testGetGroupDiscussionsByID200Response(self):
        """Test GetGroupDiscussionsByID200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
