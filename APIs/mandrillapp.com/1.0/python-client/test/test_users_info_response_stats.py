# coding: utf-8

"""
    Mandrill

    Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.users_info_response_stats import UsersInfoResponseStats

class TestUsersInfoResponseStats(unittest.TestCase):
    """UsersInfoResponseStats unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UsersInfoResponseStats:
        """Test UsersInfoResponseStats
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UsersInfoResponseStats`
        """
        model = UsersInfoResponseStats()
        if include_optional:
            return UsersInfoResponseStats(
                all_time = openapi_client.models.senders_info_response_stats_last_30_days.senders_info_response_stats_last_30_days(
                    clicks = 56, 
                    complaints = 56, 
                    hard_bounces = 56, 
                    opens = 56, 
                    rejects = 56, 
                    sent = 56, 
                    soft_bounces = 56, 
                    unique_clicks = 56, 
                    unique_opens = 56, 
                    unsubs = 56, ),
                last_30_days = openapi_client.models.senders_info_response_stats_last_30_days.senders_info_response_stats_last_30_days(
                    clicks = 56, 
                    complaints = 56, 
                    hard_bounces = 56, 
                    opens = 56, 
                    rejects = 56, 
                    sent = 56, 
                    soft_bounces = 56, 
                    unique_clicks = 56, 
                    unique_opens = 56, 
                    unsubs = 56, ),
                last_60_days = openapi_client.models.senders_info_response_stats_last_30_days.senders_info_response_stats_last_30_days(
                    clicks = 56, 
                    complaints = 56, 
                    hard_bounces = 56, 
                    opens = 56, 
                    rejects = 56, 
                    sent = 56, 
                    soft_bounces = 56, 
                    unique_clicks = 56, 
                    unique_opens = 56, 
                    unsubs = 56, ),
                last_7_days = openapi_client.models.senders_info_response_stats_last_30_days.senders_info_response_stats_last_30_days(
                    clicks = 56, 
                    complaints = 56, 
                    hard_bounces = 56, 
                    opens = 56, 
                    rejects = 56, 
                    sent = 56, 
                    soft_bounces = 56, 
                    unique_clicks = 56, 
                    unique_opens = 56, 
                    unsubs = 56, ),
                last_90_days = openapi_client.models.senders_info_response_stats_last_30_days.senders_info_response_stats_last_30_days(
                    clicks = 56, 
                    complaints = 56, 
                    hard_bounces = 56, 
                    opens = 56, 
                    rejects = 56, 
                    sent = 56, 
                    soft_bounces = 56, 
                    unique_clicks = 56, 
                    unique_opens = 56, 
                    unsubs = 56, ),
                today = openapi_client.models.senders_info_response_stats_last_30_days.senders_info_response_stats_last_30_days(
                    clicks = 56, 
                    complaints = 56, 
                    hard_bounces = 56, 
                    opens = 56, 
                    rejects = 56, 
                    sent = 56, 
                    soft_bounces = 56, 
                    unique_clicks = 56, 
                    unique_opens = 56, 
                    unsubs = 56, )
            )
        else:
            return UsersInfoResponseStats(
        )
        """

    def testUsersInfoResponseStats(self):
        """Test UsersInfoResponseStats"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
