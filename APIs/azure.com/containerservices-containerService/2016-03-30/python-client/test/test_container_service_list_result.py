# coding: utf-8

"""
    ContainerServiceClient

    The Container Service Client.

    The version of the OpenAPI document: 2016-03-30
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.container_service_list_result import ContainerServiceListResult

class TestContainerServiceListResult(unittest.TestCase):
    """ContainerServiceListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContainerServiceListResult:
        """Test ContainerServiceListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContainerServiceListResult`
        """
        model = ContainerServiceListResult()
        if include_optional:
            return ContainerServiceListResult(
                value = [
                    openapi_client.models.container_service.ContainerService(
                        properties = openapi_client.models.container_service_properties.ContainerServiceProperties(
                            agent_pool_profiles = [
                                openapi_client.models.container_service_agent_pool_profile.ContainerServiceAgentPoolProfile(
                                    count = 1, 
                                    dns_prefix = '', 
                                    fqdn = '', 
                                    name = '', 
                                    vm_size = 'Standard_A0', )
                                ], 
                            diagnostics_profile = openapi_client.models.container_service_diagnostics_profile.ContainerServiceDiagnosticsProfile(
                                vm_diagnostics = openapi_client.models.container_service_vm_diagnostics.ContainerServiceVMDiagnostics(
                                    enabled = True, 
                                    storage_uri = '', ), ), 
                            linux_profile = openapi_client.models.container_service_linux_profile.ContainerServiceLinuxProfile(
                                admin_username = '', 
                                ssh = openapi_client.models.container_service_ssh_configuration.ContainerServiceSshConfiguration(
                                    public_keys = [
                                        openapi_client.models.container_service_ssh_public_key.ContainerServiceSshPublicKey(
                                            key_data = '', )
                                        ], ), ), 
                            master_profile = openapi_client.models.container_service_master_profile.ContainerServiceMasterProfile(
                                count = 1, 
                                dns_prefix = '', 
                                fqdn = '', ), 
                            orchestrator_profile = openapi_client.models.container_service_orchestrator_profile.ContainerServiceOrchestratorProfile(
                                orchestrator_type = 'Swarm', ), 
                            provisioning_state = '', 
                            windows_profile = openapi_client.models.container_service_windows_profile.ContainerServiceWindowsProfile(
                                admin_password = '', 
                                admin_username = '', ), ), )
                    ]
            )
        else:
            return ContainerServiceListResult(
        )
        """

    def testContainerServiceListResult(self):
        """Test ContainerServiceListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
