# coding: utf-8

"""
    AutomationManagement

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2015-10-31
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.schedule_create_or_update_parameters import ScheduleCreateOrUpdateParameters

class TestScheduleCreateOrUpdateParameters(unittest.TestCase):
    """ScheduleCreateOrUpdateParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScheduleCreateOrUpdateParameters:
        """Test ScheduleCreateOrUpdateParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScheduleCreateOrUpdateParameters`
        """
        model = ScheduleCreateOrUpdateParameters()
        if include_optional:
            return ScheduleCreateOrUpdateParameters(
                name = '',
                properties = openapi_client.models.schedule_create_or_update_properties.ScheduleCreateOrUpdateProperties(
                    advanced_schedule = openapi_client.models.advanced_schedule.AdvancedSchedule(
                        month_days = [
                            56
                            ], 
                        monthly_occurrences = [
                            openapi_client.models.advanced_schedule_monthly_occurrence.AdvancedScheduleMonthlyOccurrence(
                                day = 'Monday', 
                                occurrence = 56, )
                            ], 
                        week_days = [
                            ''
                            ], ), 
                    description = '', 
                    expiry_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    frequency = 'OneTime', 
                    interval = openapi_client.models.interval.interval(), 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    time_zone = '', )
            )
        else:
            return ScheduleCreateOrUpdateParameters(
                name = '',
                properties = openapi_client.models.schedule_create_or_update_properties.ScheduleCreateOrUpdateProperties(
                    advanced_schedule = openapi_client.models.advanced_schedule.AdvancedSchedule(
                        month_days = [
                            56
                            ], 
                        monthly_occurrences = [
                            openapi_client.models.advanced_schedule_monthly_occurrence.AdvancedScheduleMonthlyOccurrence(
                                day = 'Monday', 
                                occurrence = 56, )
                            ], 
                        week_days = [
                            ''
                            ], ), 
                    description = '', 
                    expiry_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    frequency = 'OneTime', 
                    interval = openapi_client.models.interval.interval(), 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    time_zone = '', ),
        )
        """

    def testScheduleCreateOrUpdateParameters(self):
        """Test ScheduleCreateOrUpdateParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
