# coding: utf-8

"""
    ComputeDiskAdminManagementClient

    The Admin Compute Disk Management Client.

    The version of the OpenAPI document: 2018-07-30-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.disks_list200_response import DisksList200Response

class TestDisksList200Response(unittest.TestCase):
    """DisksList200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DisksList200Response:
        """Test DisksList200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DisksList200Response`
        """
        model = DisksList200Response()
        if include_optional:
            return DisksList200Response(
                next_link = '',
                value = [
                    openapi_client.models.disks_list_200_response_value_inner.Disks_List_200_response_value_inner(
                        properties = openapi_client.models.disks_list_200_response_value_inner_properties.Disks_List_200_response_value_inner_properties(
                            actual_size_gb = 56, 
                            disk_id = '', 
                            disk_sku = 'Standard_LRS', 
                            disk_type = 'Undefined', 
                            managed_by = '', 
                            provision_size_gb = 56, 
                            share_path = '', 
                            status = 'Undefined', 
                            user_resource_id = '', ), )
                    ]
            )
        else:
            return DisksList200Response(
        )
        """

    def testDisksList200Response(self):
        """Test DisksList200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
