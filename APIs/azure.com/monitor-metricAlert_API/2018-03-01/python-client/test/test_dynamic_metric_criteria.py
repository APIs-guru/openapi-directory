# coding: utf-8

"""
    MonitorManagementClient

    Azure Monitor client to create/update/delete metric based alerts.

    The version of the OpenAPI document: 2018-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dynamic_metric_criteria import DynamicMetricCriteria

class TestDynamicMetricCriteria(unittest.TestCase):
    """DynamicMetricCriteria unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DynamicMetricCriteria:
        """Test DynamicMetricCriteria
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DynamicMetricCriteria`
        """
        model = DynamicMetricCriteria()
        if include_optional:
            return DynamicMetricCriteria(
                alert_sensitivity = 'Low',
                failing_periods = openapi_client.models.dynamic_threshold_failing_periods.DynamicThresholdFailingPeriods(
                    min_failing_periods_to_alert = 1.337, 
                    number_of_evaluation_periods = 1.337, ),
                ignore_data_before = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                operator = 'GreaterThan'
            )
        else:
            return DynamicMetricCriteria(
                alert_sensitivity = 'Low',
                failing_periods = openapi_client.models.dynamic_threshold_failing_periods.DynamicThresholdFailingPeriods(
                    min_failing_periods_to_alert = 1.337, 
                    number_of_evaluation_periods = 1.337, ),
                operator = 'GreaterThan',
        )
        """

    def testDynamicMetricCriteria(self):
        """Test DynamicMetricCriteria"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
