# coding: utf-8

"""
    MonitorManagementClient

    Azure Monitor client to create/update/delete metric based alerts.

    The version of the OpenAPI document: 2018-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.multi_metric_criteria import MultiMetricCriteria

class TestMultiMetricCriteria(unittest.TestCase):
    """MultiMetricCriteria unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MultiMetricCriteria:
        """Test MultiMetricCriteria
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MultiMetricCriteria`
        """
        model = MultiMetricCriteria()
        if include_optional:
            return MultiMetricCriteria(
                criterion_type = 'StaticThresholdCriterion',
                dimensions = [
                    openapi_client.models.metric_dimension.MetricDimension(
                        name = '', 
                        operator = '', 
                        values = [
                            ''
                            ], )
                    ],
                metric_name = '',
                metric_namespace = '',
                name = '',
                time_aggregation = 'Average'
            )
        else:
            return MultiMetricCriteria(
                criterion_type = 'StaticThresholdCriterion',
                metric_name = '',
                name = '',
                time_aggregation = 'Average',
        )
        """

    def testMultiMetricCriteria(self):
        """Test MultiMetricCriteria"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
