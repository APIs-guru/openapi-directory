# coding: utf-8

"""
    MonitorManagementClient

    Azure Monitor client to create/update/delete metric based alerts.

    The version of the OpenAPI document: 2018-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.metric_alert_resource_collection import MetricAlertResourceCollection

class TestMetricAlertResourceCollection(unittest.TestCase):
    """MetricAlertResourceCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetricAlertResourceCollection:
        """Test MetricAlertResourceCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MetricAlertResourceCollection`
        """
        model = MetricAlertResourceCollection()
        if include_optional:
            return MetricAlertResourceCollection(
                value = [
                    openapi_client.models.metric_alert_resource.MetricAlertResource(
                        properties = openapi_client.models.metric_alert_properties.MetricAlertProperties(
                            actions = [
                                openapi_client.models.metric_alert_action.MetricAlertAction(
                                    action_group_id = '', 
                                    webhook_properties = {
                                        'key' : ''
                                        }, )
                                ], 
                            auto_mitigate = True, 
                            criteria = {
                                'key' : None
                                }, 
                            description = '', 
                            enabled = True, 
                            evaluation_frequency = '', 
                            last_updated_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            scopes = [
                                ''
                                ], 
                            severity = 56, 
                            target_resource_region = '', 
                            target_resource_type = '', 
                            window_size = '', ), )
                    ]
            )
        else:
            return MetricAlertResourceCollection(
        )
        """

    def testMetricAlertResourceCollection(self):
        """Test MetricAlertResourceCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
