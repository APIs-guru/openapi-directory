# coding: utf-8

"""
    MonitorManagementClient

    Azure Monitor client to create/update/delete metric based alerts.

    The version of the OpenAPI document: 2018-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.metric_alert_status_collection import MetricAlertStatusCollection

class TestMetricAlertStatusCollection(unittest.TestCase):
    """MetricAlertStatusCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetricAlertStatusCollection:
        """Test MetricAlertStatusCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MetricAlertStatusCollection`
        """
        model = MetricAlertStatusCollection()
        if include_optional:
            return MetricAlertStatusCollection(
                value = [
                    openapi_client.models.metric_alert_status.MetricAlertStatus(
                        id = '', 
                        name = '', 
                        properties = openapi_client.models.metric_alert_status_properties.MetricAlertStatusProperties(
                            dimensions = {
                                'key' : ''
                                }, 
                            status = '', 
                            timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        type = '', )
                    ]
            )
        else:
            return MetricAlertStatusCollection(
        )
        """

    def testMetricAlertStatusCollection(self):
        """Test MetricAlertStatusCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
