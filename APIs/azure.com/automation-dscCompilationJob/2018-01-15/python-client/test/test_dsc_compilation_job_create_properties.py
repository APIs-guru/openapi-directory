# coding: utf-8

"""
    AutomationManagement

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-01-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dsc_compilation_job_create_properties import DscCompilationJobCreateProperties

class TestDscCompilationJobCreateProperties(unittest.TestCase):
    """DscCompilationJobCreateProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DscCompilationJobCreateProperties:
        """Test DscCompilationJobCreateProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DscCompilationJobCreateProperties`
        """
        model = DscCompilationJobCreateProperties()
        if include_optional:
            return DscCompilationJobCreateProperties(
                configuration = openapi_client.models.dsc_configuration_association_property.DscConfigurationAssociationProperty(
                    name = '', ),
                increment_node_configuration_build = True,
                parameters = {
                    'key' : ''
                    }
            )
        else:
            return DscCompilationJobCreateProperties(
                configuration = openapi_client.models.dsc_configuration_association_property.DscConfigurationAssociationProperty(
                    name = '', ),
        )
        """

    def testDscCompilationJobCreateProperties(self):
        """Test DscCompilationJobCreateProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
