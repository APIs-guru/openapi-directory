# coding: utf-8

"""
    Azure SQL Database

    Provides create, read, update and delete functionality for Azure SQL Database resources including recommendations and operations.

    The version of the OpenAPI document: 2014-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import BaseModel, ConfigDict, Field, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class ElasticPoolActivityProperties(BaseModel):
    """
    Represents the properties of an elastic pool.
    """ # noqa: E501
    elastic_pool_name: Optional[StrictStr] = Field(default=None, description="The name of the elastic pool.", alias="elasticPoolName")
    end_time: Optional[datetime] = Field(default=None, description="The time the operation finished (ISO8601 format).", alias="endTime")
    error_code: Optional[StrictInt] = Field(default=None, description="The error code if available.", alias="errorCode")
    error_message: Optional[StrictStr] = Field(default=None, description="The error message if available.", alias="errorMessage")
    error_severity: Optional[StrictInt] = Field(default=None, description="The error severity if available.", alias="errorSeverity")
    operation: Optional[StrictStr] = Field(default=None, description="The operation name.")
    operation_id: Optional[StrictStr] = Field(default=None, description="The unique operation ID.", alias="operationId")
    percent_complete: Optional[StrictInt] = Field(default=None, description="The percentage complete if available.", alias="percentComplete")
    requested_database_dtu_cap: Optional[StrictInt] = Field(default=None, description="The requested per database DTU cap.", alias="requestedDatabaseDtuCap")
    requested_database_dtu_guarantee: Optional[StrictInt] = Field(default=None, description="The requested per database DTU guarantee.", alias="requestedDatabaseDtuGuarantee")
    requested_database_dtu_max: Optional[StrictInt] = Field(default=None, description="The requested max DTU per database if available.", alias="requestedDatabaseDtuMax")
    requested_database_dtu_min: Optional[StrictInt] = Field(default=None, description="The requested min DTU per database if available.", alias="requestedDatabaseDtuMin")
    requested_dtu: Optional[StrictInt] = Field(default=None, description="The requested DTU for the pool if available.", alias="requestedDtu")
    requested_dtu_guarantee: Optional[StrictInt] = Field(default=None, description="The requested DTU guarantee.", alias="requestedDtuGuarantee")
    requested_elastic_pool_name: Optional[StrictStr] = Field(default=None, description="The requested name for the elastic pool if available.", alias="requestedElasticPoolName")
    requested_storage_limit_in_gb: Optional[StrictInt] = Field(default=None, description="The requested storage limit for the pool in GB if available.", alias="requestedStorageLimitInGB")
    requested_storage_limit_in_mb: Optional[StrictInt] = Field(default=None, description="The requested storage limit in MB.", alias="requestedStorageLimitInMB")
    server_name: Optional[StrictStr] = Field(default=None, description="The name of the server the elastic pool is in.", alias="serverName")
    start_time: Optional[datetime] = Field(default=None, description="The time the operation started (ISO8601 format).", alias="startTime")
    state: Optional[StrictStr] = Field(default=None, description="The current state of the operation.")
    __properties: ClassVar[List[str]] = ["elasticPoolName", "endTime", "errorCode", "errorMessage", "errorSeverity", "operation", "operationId", "percentComplete", "requestedDatabaseDtuCap", "requestedDatabaseDtuGuarantee", "requestedDatabaseDtuMax", "requestedDatabaseDtuMin", "requestedDtu", "requestedDtuGuarantee", "requestedElasticPoolName", "requestedStorageLimitInGB", "requestedStorageLimitInMB", "serverName", "startTime", "state"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of ElasticPoolActivityProperties from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        """
        excluded_fields: Set[str] = set([
            "elastic_pool_name",
            "end_time",
            "error_code",
            "error_message",
            "error_severity",
            "operation",
            "operation_id",
            "percent_complete",
            "requested_database_dtu_cap",
            "requested_database_dtu_guarantee",
            "requested_database_dtu_max",
            "requested_database_dtu_min",
            "requested_dtu",
            "requested_dtu_guarantee",
            "requested_elastic_pool_name",
            "requested_storage_limit_in_gb",
            "requested_storage_limit_in_mb",
            "server_name",
            "start_time",
            "state",
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of ElasticPoolActivityProperties from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "elasticPoolName": obj.get("elasticPoolName"),
            "endTime": obj.get("endTime"),
            "errorCode": obj.get("errorCode"),
            "errorMessage": obj.get("errorMessage"),
            "errorSeverity": obj.get("errorSeverity"),
            "operation": obj.get("operation"),
            "operationId": obj.get("operationId"),
            "percentComplete": obj.get("percentComplete"),
            "requestedDatabaseDtuCap": obj.get("requestedDatabaseDtuCap"),
            "requestedDatabaseDtuGuarantee": obj.get("requestedDatabaseDtuGuarantee"),
            "requestedDatabaseDtuMax": obj.get("requestedDatabaseDtuMax"),
            "requestedDatabaseDtuMin": obj.get("requestedDatabaseDtuMin"),
            "requestedDtu": obj.get("requestedDtu"),
            "requestedDtuGuarantee": obj.get("requestedDtuGuarantee"),
            "requestedElasticPoolName": obj.get("requestedElasticPoolName"),
            "requestedStorageLimitInGB": obj.get("requestedStorageLimitInGB"),
            "requestedStorageLimitInMB": obj.get("requestedStorageLimitInMB"),
            "serverName": obj.get("serverName"),
            "startTime": obj.get("startTime"),
            "state": obj.get("state")
        })
        return _obj


