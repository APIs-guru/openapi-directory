# coding: utf-8

"""
    Azure SQL Database

    Provides create, read, update and delete functionality for Azure SQL Database resources including recommendations and operations.

    The version of the OpenAPI document: 2014-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.recommended_index_properties import RecommendedIndexProperties

class TestRecommendedIndexProperties(unittest.TestCase):
    """RecommendedIndexProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RecommendedIndexProperties:
        """Test RecommendedIndexProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RecommendedIndexProperties`
        """
        model = RecommendedIndexProperties()
        if include_optional:
            return RecommendedIndexProperties(
                action = 'Create',
                columns = [
                    ''
                    ],
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                estimated_impact = [
                    openapi_client.models.operation_impact.OperationImpact(
                        change_value_absolute = 1.337, 
                        change_value_relative = 1.337, 
                        name = '', 
                        unit = '', )
                    ],
                included_columns = [
                    ''
                    ],
                index_script = '',
                index_type = 'CLUSTERED',
                last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                reported_impact = [
                    openapi_client.models.operation_impact.OperationImpact(
                        change_value_absolute = 1.337, 
                        change_value_relative = 1.337, 
                        name = '', 
                        unit = '', )
                    ],
                var_schema = '',
                state = 'Active',
                table = ''
            )
        else:
            return RecommendedIndexProperties(
        )
        """

    def testRecommendedIndexProperties(self):
        """Test RecommendedIndexProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
