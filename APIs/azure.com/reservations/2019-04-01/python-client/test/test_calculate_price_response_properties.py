# coding: utf-8

"""
    Azure Reservation

    This API describe Azure Reservation

    The version of the OpenAPI document: 2019-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.calculate_price_response_properties import CalculatePriceResponseProperties

class TestCalculatePriceResponseProperties(unittest.TestCase):
    """CalculatePriceResponseProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CalculatePriceResponseProperties:
        """Test CalculatePriceResponseProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CalculatePriceResponseProperties`
        """
        model = CalculatePriceResponseProperties()
        if include_optional:
            return CalculatePriceResponseProperties(
                billing_currency_total = openapi_client.models.calculate_price_response_properties_billing_currency_total.CalculatePriceResponseProperties_billingCurrencyTotal(
                    amount = 1.337, 
                    currency_code = '', ),
                is_billing_partner_managed = True,
                payment_schedule = [
                    openapi_client.models.payment_detail.PaymentDetail(
                        billing_account = '', 
                        billing_currency_total = openapi_client.models.price.Price(
                            amount = 1.337, 
                            currency_code = '', ), 
                        due_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        extended_status_info = openapi_client.models.extended_status_info.ExtendedStatusInfo(
                            message = '', 
                            status_code = 'None', ), 
                        payment_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        pricing_currency_total = openapi_client.models.price.Price(
                            amount = 1.337, 
                            currency_code = '', ), 
                        status = 'Succeeded', )
                    ],
                pricing_currency_total = openapi_client.models.calculate_price_response_properties_pricing_currency_total.CalculatePriceResponseProperties_pricingCurrencyTotal(
                    amount = 1.337, 
                    currency_code = '', ),
                reservation_order_id = '',
                sku_description = '',
                sku_title = ''
            )
        else:
            return CalculatePriceResponseProperties(
        )
        """

    def testCalculatePriceResponseProperties(self):
        """Test CalculatePriceResponseProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
