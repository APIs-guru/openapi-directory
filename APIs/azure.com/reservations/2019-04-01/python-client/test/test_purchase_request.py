# coding: utf-8

"""
    Azure Reservation

    This API describe Azure Reservation

    The version of the OpenAPI document: 2019-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.purchase_request import PurchaseRequest

class TestPurchaseRequest(unittest.TestCase):
    """PurchaseRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PurchaseRequest:
        """Test PurchaseRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PurchaseRequest`
        """
        model = PurchaseRequest()
        if include_optional:
            return PurchaseRequest(
                location = '',
                properties = openapi_client.models.purchase_request_properties.PurchaseRequestProperties(
                    applied_scope_type = 'Single', 
                    applied_scopes = [
                        ''
                        ], 
                    billing_plan = 'Upfront', 
                    billing_scope_id = '', 
                    display_name = '', 
                    quantity = 56, 
                    renew = True, 
                    reserved_resource_properties = openapi_client.models.purchase_request_properties_reserved_resource_properties.PurchaseRequestProperties_reservedResourceProperties(
                        instance_flexibility = 'On', ), 
                    reserved_resource_type = 'VirtualMachines', 
                    term = 'P1Y', ),
                sku = openapi_client.models.sku_name.SkuName(
                    name = '', )
            )
        else:
            return PurchaseRequest(
        )
        """

    def testPurchaseRequest(self):
        """Test PurchaseRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
