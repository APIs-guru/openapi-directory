# coding: utf-8

"""
    Azure Dedicated HSM Resource Provider

    The Azure management API provides a RESTful set of web services that interact with Azure Dedicated HSM RP.

    The version of the OpenAPI document: 2018-10-31-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dedicated_hsm_properties import DedicatedHsmProperties

class TestDedicatedHsmProperties(unittest.TestCase):
    """DedicatedHsmProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DedicatedHsmProperties:
        """Test DedicatedHsmProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DedicatedHsmProperties`
        """
        model = DedicatedHsmProperties()
        if include_optional:
            return DedicatedHsmProperties(
                network_profile = openapi_client.models.network_profile.NetworkProfile(
                    network_interfaces = [
                        openapi_client.models.network_interface.NetworkInterface(
                            id = '', 
                            private_ip_address = '', )
                        ], 
                    subnet = openapi_client.models.api_entity_reference.ApiEntityReference(
                        id = '', ), ),
                provisioning_state = 'Succeeded',
                stamp_id = '',
                status_message = ''
            )
        else:
            return DedicatedHsmProperties(
        )
        """

    def testDedicatedHsmProperties(self):
        """Test DedicatedHsmProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
