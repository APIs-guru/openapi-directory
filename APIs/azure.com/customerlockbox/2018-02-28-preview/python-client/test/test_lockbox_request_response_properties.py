# coding: utf-8

"""
    Customer Lockbox

    Azure Customer Lockbox API Reference

    The version of the OpenAPI document: 2018-02-28-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.lockbox_request_response_properties import LockboxRequestResponseProperties

class TestLockboxRequestResponseProperties(unittest.TestCase):
    """LockboxRequestResponseProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LockboxRequestResponseProperties:
        """Test LockboxRequestResponseProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LockboxRequestResponseProperties`
        """
        model = LockboxRequestResponseProperties()
        if include_optional:
            return LockboxRequestResponseProperties(
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                duration = 56,
                expiration_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                justification = '',
                request_id = '',
                requested_resource_ids = [
                    ''
                    ],
                resource_type = '',
                status = 'Initializing',
                subscription_id = '',
                support_case_url = '',
                support_request = ''
            )
        else:
            return LockboxRequestResponseProperties(
        )
        """

    def testLockboxRequestResponseProperties(self):
        """Test LockboxRequestResponseProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
