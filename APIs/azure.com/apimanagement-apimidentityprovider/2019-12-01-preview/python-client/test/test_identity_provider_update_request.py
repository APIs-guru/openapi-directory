# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Identity Provider entity associated with your Azure API Management deployment. Setting up an external Identity Provider for authentication can help you manage the developer portal logins using the OAuth2 flow.

    The version of the OpenAPI document: 2019-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.identity_provider_update_request import IdentityProviderUpdateRequest

class TestIdentityProviderUpdateRequest(unittest.TestCase):
    """IdentityProviderUpdateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IdentityProviderUpdateRequest:
        """Test IdentityProviderUpdateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IdentityProviderUpdateRequest`
        """
        model = IdentityProviderUpdateRequest()
        if include_optional:
            return IdentityProviderUpdateRequest(
                properties = openapi_client.models.identity_provider_update_request_properties.IdentityProvider_Update_request_properties(
                    client_id = '0', 
                    client_secret = '0', )
            )
        else:
            return IdentityProviderUpdateRequest(
        )
        """

    def testIdentityProviderUpdateRequest(self):
        """Test IdentityProviderUpdateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
