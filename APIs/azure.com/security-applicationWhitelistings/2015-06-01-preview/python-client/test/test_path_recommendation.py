# coding: utf-8

"""
    Security Center

    API spec for Microsoft.Security (Azure Security Center) resource provider

    The version of the OpenAPI document: 2015-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.path_recommendation import PathRecommendation

class TestPathRecommendation(unittest.TestCase):
    """PathRecommendation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PathRecommendation:
        """Test PathRecommendation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PathRecommendation`
        """
        model = PathRecommendation()
        if include_optional:
            return PathRecommendation(
                action = 'Recommended',
                common = True,
                configuration_status = 'Configured',
                file_type = 'Exe',
                path = 'C:\Windows\System32\calc.exe',
                publisher_info = openapi_client.models.publisher_info.PublisherInfo(
                    binary_name = 'CHROME.EXE', 
                    product_name = 'GOOGLE CHROME', 
                    publisher_name = 'O=GOOGLE INC, L=MOUNTAIN VIEW, S=CALIFORNIA, C=US', 
                    version = '66.0.3359.139', ),
                type = 'File',
                user_sids = [
                    'S-1-5-18'
                    ],
                usernames = [
                    openapi_client.models.user_recommendation.UserRecommendation(
                        recommendation_action = 'Recommended', 
                        username = 'LOCAL SYSTEM', )
                    ]
            )
        else:
            return PathRecommendation(
        )
        """

    def testPathRecommendation(self):
        """Test PathRecommendation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
