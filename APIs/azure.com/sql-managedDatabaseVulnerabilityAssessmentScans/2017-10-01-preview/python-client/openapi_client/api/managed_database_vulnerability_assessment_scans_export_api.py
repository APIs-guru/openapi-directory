# coding: utf-8

"""
    SqlManagementClient

    The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.

    The version of the OpenAPI document: 2017-10-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing_extensions import Annotated
from openapi_client.models.database_vulnerability_assessment_scans_export import DatabaseVulnerabilityAssessmentScansExport

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class ManagedDatabaseVulnerabilityAssessmentScansExportApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def managed_database_vulnerability_assessment_scans_export(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        managed_instance_name: Annotated[StrictStr, Field(description="The name of the managed instance.")],
        database_name: Annotated[StrictStr, Field(description="The name of the scanned database.")],
        vulnerability_assessment_name: Annotated[StrictStr, Field(description="The name of the vulnerability assessment.")],
        scan_id: Annotated[StrictStr, Field(description="The vulnerability assessment scan Id.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> DatabaseVulnerabilityAssessmentScansExport:
        """managed_database_vulnerability_assessment_scans_export

        Convert an existing scan result to a human readable format. If already exists nothing happens

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param managed_instance_name: The name of the managed instance. (required)
        :type managed_instance_name: str
        :param database_name: The name of the scanned database. (required)
        :type database_name: str
        :param vulnerability_assessment_name: The name of the vulnerability assessment. (required)
        :type vulnerability_assessment_name: str
        :param scan_id: The vulnerability assessment scan Id. (required)
        :type scan_id: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._managed_database_vulnerability_assessment_scans_export_serialize(
            resource_group_name=resource_group_name,
            managed_instance_name=managed_instance_name,
            database_name=database_name,
            vulnerability_assessment_name=vulnerability_assessment_name,
            scan_id=scan_id,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DatabaseVulnerabilityAssessmentScansExport",
            '201': "DatabaseVulnerabilityAssessmentScansExport",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def managed_database_vulnerability_assessment_scans_export_with_http_info(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        managed_instance_name: Annotated[StrictStr, Field(description="The name of the managed instance.")],
        database_name: Annotated[StrictStr, Field(description="The name of the scanned database.")],
        vulnerability_assessment_name: Annotated[StrictStr, Field(description="The name of the vulnerability assessment.")],
        scan_id: Annotated[StrictStr, Field(description="The vulnerability assessment scan Id.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[DatabaseVulnerabilityAssessmentScansExport]:
        """managed_database_vulnerability_assessment_scans_export

        Convert an existing scan result to a human readable format. If already exists nothing happens

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param managed_instance_name: The name of the managed instance. (required)
        :type managed_instance_name: str
        :param database_name: The name of the scanned database. (required)
        :type database_name: str
        :param vulnerability_assessment_name: The name of the vulnerability assessment. (required)
        :type vulnerability_assessment_name: str
        :param scan_id: The vulnerability assessment scan Id. (required)
        :type scan_id: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._managed_database_vulnerability_assessment_scans_export_serialize(
            resource_group_name=resource_group_name,
            managed_instance_name=managed_instance_name,
            database_name=database_name,
            vulnerability_assessment_name=vulnerability_assessment_name,
            scan_id=scan_id,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DatabaseVulnerabilityAssessmentScansExport",
            '201': "DatabaseVulnerabilityAssessmentScansExport",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def managed_database_vulnerability_assessment_scans_export_without_preload_content(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        managed_instance_name: Annotated[StrictStr, Field(description="The name of the managed instance.")],
        database_name: Annotated[StrictStr, Field(description="The name of the scanned database.")],
        vulnerability_assessment_name: Annotated[StrictStr, Field(description="The name of the vulnerability assessment.")],
        scan_id: Annotated[StrictStr, Field(description="The vulnerability assessment scan Id.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """managed_database_vulnerability_assessment_scans_export

        Convert an existing scan result to a human readable format. If already exists nothing happens

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param managed_instance_name: The name of the managed instance. (required)
        :type managed_instance_name: str
        :param database_name: The name of the scanned database. (required)
        :type database_name: str
        :param vulnerability_assessment_name: The name of the vulnerability assessment. (required)
        :type vulnerability_assessment_name: str
        :param scan_id: The vulnerability assessment scan Id. (required)
        :type scan_id: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._managed_database_vulnerability_assessment_scans_export_serialize(
            resource_group_name=resource_group_name,
            managed_instance_name=managed_instance_name,
            database_name=database_name,
            vulnerability_assessment_name=vulnerability_assessment_name,
            scan_id=scan_id,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DatabaseVulnerabilityAssessmentScansExport",
            '201': "DatabaseVulnerabilityAssessmentScansExport",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _managed_database_vulnerability_assessment_scans_export_serialize(
        self,
        resource_group_name,
        managed_instance_name,
        database_name,
        vulnerability_assessment_name,
        scan_id,
        subscription_id,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if managed_instance_name is not None:
            _path_params['managedInstanceName'] = managed_instance_name
        if database_name is not None:
            _path_params['databaseName'] = database_name
        if vulnerability_assessment_name is not None:
            _path_params['vulnerabilityAssessmentName'] = vulnerability_assessment_name
        if scan_id is not None:
            _path_params['scanId'] = scan_id
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/export',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


