# coding: utf-8

"""
    DataLakeAnalyticsCatalogManagementClient

    Creates an Azure Data Lake Analytics catalog client.

    The version of the OpenAPI document: 2015-10-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.u_sql_table import USqlTable

class TestUSqlTable(unittest.TestCase):
    """USqlTable unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> USqlTable:
        """Test USqlTable
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `USqlTable`
        """
        model = USqlTable()
        if include_optional:
            return USqlTable(
                column_list = [
                    openapi_client.models.u_sql_table_column.USqlTableColumn(
                        name = '', 
                        type = '', )
                    ],
                database_name = '',
                distribution_info = openapi_client.models.u_sql_distribution_info.USqlDistributionInfo(
                    count = 56, 
                    dynamic_count = 56, 
                    keys = [
                        openapi_client.models.u_sql_directed_column.USqlDirectedColumn(
                            descending = True, 
                            name = '', )
                        ], 
                    type = 56, ),
                external_table = openapi_client.models.external_table.ExternalTable(
                    data_source = openapi_client.models.entity_id.EntityId(
                        name = openapi_client.models.ddl_name.DdlName(
                            first_part = '', 
                            second_part = '', 
                            server = '', 
                            third_part = '', ), 
                        version = '', ), 
                    table_name = '', ),
                index_list = [
                    openapi_client.models.u_sql_index.USqlIndex(
                        columns = [
                            ''
                            ], 
                        distribution_info = openapi_client.models.u_sql_distribution_info.USqlDistributionInfo(
                            count = 56, 
                            dynamic_count = 56, 
                            keys = [
                                openapi_client.models.u_sql_directed_column.USqlDirectedColumn(
                                    descending = True, 
                                    name = '', )
                                ], 
                            type = 56, ), 
                        index_id = 56, 
                        index_keys = [
                            openapi_client.models.u_sql_directed_column.USqlDirectedColumn(
                                descending = True, 
                                name = '', )
                            ], 
                        is_columnstore = True, 
                        is_unique = True, 
                        name = '', 
                        partition_function = '', 
                        partition_key_list = [
                            ''
                            ], 
                        stream_names = [
                            ''
                            ], )
                    ],
                partition_key_list = [
                    ''
                    ],
                schema_name = '',
                table_name = '',
                compute_account_name = '',
                version = ''
            )
        else:
            return USqlTable(
        )
        """

    def testUSqlTable(self):
        """Test USqlTable"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
