# coding: utf-8

"""
    DataLakeAnalyticsCatalogManagementClient

    Creates an Azure Data Lake Analytics catalog client.

    The version of the OpenAPI document: 2016-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.u_sql_table_fragment import USqlTableFragment

class TestUSqlTableFragment(unittest.TestCase):
    """USqlTableFragment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> USqlTableFragment:
        """Test USqlTableFragment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `USqlTableFragment`
        """
        model = USqlTableFragment()
        if include_optional:
            return USqlTableFragment(
                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                fragment_id = '',
                index_id = 56,
                parent_id = '',
                row_count = 56,
                size = 56,
                stream_path = ''
            )
        else:
            return USqlTableFragment(
        )
        """

    def testUSqlTableFragment(self):
        """Test USqlTableFragment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
