# coding: utf-8

"""
    DataLakeAnalyticsCatalogManagementClient

    Creates an Azure Data Lake Analytics catalog client.

    The version of the OpenAPI document: 2016-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.u_sql_assembly import USqlAssembly

class TestUSqlAssembly(unittest.TestCase):
    """USqlAssembly unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> USqlAssembly:
        """Test USqlAssembly
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `USqlAssembly`
        """
        model = USqlAssembly()
        if include_optional:
            return USqlAssembly(
                assembly_name = '',
                clr_name = '',
                database_name = '',
                dependencies = [
                    openapi_client.models.u_sql_assembly_dependency_info.USqlAssemblyDependencyInfo(
                        entity_id = openapi_client.models.entity_id.EntityId(
                            name = openapi_client.models.ddl_name.DdlName(
                                first_part = '', 
                                second_part = '', 
                                server = '', 
                                third_part = '', ), 
                            version = '', ), )
                    ],
                files = [
                    openapi_client.models.u_sql_assembly_file_info.USqlAssemblyFileInfo(
                        content_path = '', 
                        original_path = '', 
                        type = 'Assembly', )
                    ],
                is_user_defined = True,
                is_visible = True,
                compute_account_name = '',
                version = ''
            )
        else:
            return USqlAssembly(
        )
        """

    def testUSqlAssembly(self):
        """Test USqlAssembly"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
