# coding: utf-8

"""
    Microsoft Insights

    Azure Monitor client to create/update/delete Scheduled Query Rules

    The version of the OpenAPI document: 2018-04-16
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.alerting_action import AlertingAction

class TestAlertingAction(unittest.TestCase):
    """AlertingAction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlertingAction:
        """Test AlertingAction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlertingAction`
        """
        model = AlertingAction()
        if include_optional:
            return AlertingAction(
                azns_action = openapi_client.models.az_ns_action_group.AzNsActionGroup(
                    action_group = [
                        ''
                        ], 
                    custom_webhook_payload = '', 
                    email_subject = '', ),
                severity = '0',
                throttling_in_min = 56,
                trigger = openapi_client.models.trigger_condition.TriggerCondition(
                    metric_trigger = openapi_client.models.log_metric_trigger.LogMetricTrigger(
                        metric_column = '', 
                        metric_trigger_type = 'Consecutive', 
                        threshold = 1.337, 
                        threshold_operator = 'GreaterThan', ), 
                    threshold = 1.337, 
                    threshold_operator = 'GreaterThan', )
            )
        else:
            return AlertingAction(
                severity = '0',
                trigger = openapi_client.models.trigger_condition.TriggerCondition(
                    metric_trigger = openapi_client.models.log_metric_trigger.LogMetricTrigger(
                        metric_column = '', 
                        metric_trigger_type = 'Consecutive', 
                        threshold = 1.337, 
                        threshold_operator = 'GreaterThan', ), 
                    threshold = 1.337, 
                    threshold_operator = 'GreaterThan', ),
        )
        """

    def testAlertingAction(self):
        """Test AlertingAction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
