# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on OpenId Connect Provider entity associated with your Azure API Management deployment. API Management allows you to access APIs secured with token from [OpenID Connect Provider ](http://openid.net/connect/) to be accessed from the Developer Console.

    The version of the OpenAPI document: 2019-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.open_id_connect_provider_update_request_properties import OpenIdConnectProviderUpdateRequestProperties

class TestOpenIdConnectProviderUpdateRequestProperties(unittest.TestCase):
    """OpenIdConnectProviderUpdateRequestProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OpenIdConnectProviderUpdateRequestProperties:
        """Test OpenIdConnectProviderUpdateRequestProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OpenIdConnectProviderUpdateRequestProperties`
        """
        model = OpenIdConnectProviderUpdateRequestProperties()
        if include_optional:
            return OpenIdConnectProviderUpdateRequestProperties(
                client_id = '',
                client_secret = '',
                description = '',
                display_name = '',
                metadata_endpoint = ''
            )
        else:
            return OpenIdConnectProviderUpdateRequestProperties(
        )
        """

    def testOpenIdConnectProviderUpdateRequestProperties(self):
        """Test OpenIdConnectProviderUpdateRequestProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
