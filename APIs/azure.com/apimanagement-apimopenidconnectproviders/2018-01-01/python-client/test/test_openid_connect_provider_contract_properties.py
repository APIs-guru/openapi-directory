# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on OpenId Connect Provider entity associated with your Azure API Management deployment. API Management allows you to access APIs secured with token from [OpenID Connect Provider ](http://openid.net/connect/) to be accessed from the Developer Console.

    The version of the OpenAPI document: 2018-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.openid_connect_provider_contract_properties import OpenidConnectProviderContractProperties

class TestOpenidConnectProviderContractProperties(unittest.TestCase):
    """OpenidConnectProviderContractProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OpenidConnectProviderContractProperties:
        """Test OpenidConnectProviderContractProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OpenidConnectProviderContractProperties`
        """
        model = OpenidConnectProviderContractProperties()
        if include_optional:
            return OpenidConnectProviderContractProperties(
                client_id = '',
                client_secret = '',
                description = '',
                display_name = '',
                metadata_endpoint = ''
            )
        else:
            return OpenidConnectProviderContractProperties(
                client_id = '',
                display_name = '',
                metadata_endpoint = '',
        )
        """

    def testOpenidConnectProviderContractProperties(self):
        """Test OpenidConnectProviderContractProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
