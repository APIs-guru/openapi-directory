# coding: utf-8

"""
    Azure Machine Learning Workspaces

    These APIs allow end users to operate on Azure Machine Learning Workspace resources.

    The version of the OpenAPI document: 2019-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.aks import AKS

class TestAKS(unittest.TestCase):
    """AKS unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AKS:
        """Test AKS
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AKS`
        """
        model = AKS()
        if include_optional:
            return AKS(
                properties = openapi_client.models.aks_all_of_properties.AKS_allOf_properties(
                    agent_count = 1, 
                    agent_vm_size = '', 
                    aks_networking_configuration = openapi_client.models.aks_networking_configuration.AksNetworkingConfiguration(
                        dns_service_ip = '00.238.0.250', 
                        docker_bridge_cidr = '480.288.001.2/21', 
                        service_cidr = '480.288.001.2/21', 
                        subnet_id = '', ), 
                    cluster_fqdn = '', 
                    ssl_configuration = openapi_client.models.ssl_configuration.SslConfiguration(
                        cert = '', 
                        cname = '', 
                        key = '', 
                        status = 'Disabled', ), 
                    system_services = [
                        openapi_client.models.system_service.SystemService(
                            public_ip_address = '', 
                            system_service_type = '', 
                            version = '', )
                        ], )
            )
        else:
            return AKS(
        )
        """

    def testAKS(self):
        """Test AKS"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
