# coding: utf-8

"""
    Azure Machine Learning Workspaces

    These APIs allow end users to operate on Azure Machine Learning Workspace resources.

    The version of the OpenAPI document: 2019-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.aml_compute_nodes_information import AmlComputeNodesInformation
from openapi_client.models.cluster_update_parameters import ClusterUpdateParameters
from openapi_client.models.compute_resource import ComputeResource
from openapi_client.models.compute_secrets import ComputeSecrets
from openapi_client.models.paginated_compute_resources_list import PaginatedComputeResourcesList

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class MachineLearningComputesApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def machine_learning_compute_create_or_update_0(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        parameters: Annotated[ComputeResource, Field(description="Payload with Machine Learning compute definition.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ComputeResource:
        """machine_learning_compute_create_or_update_0

        Creates or updates compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param parameters: Payload with Machine Learning compute definition. (required)
        :type parameters: ComputeResource
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_create_or_update_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ComputeResource",
            '201': "ComputeResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def machine_learning_compute_create_or_update_0_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        parameters: Annotated[ComputeResource, Field(description="Payload with Machine Learning compute definition.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ComputeResource]:
        """machine_learning_compute_create_or_update_0

        Creates or updates compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param parameters: Payload with Machine Learning compute definition. (required)
        :type parameters: ComputeResource
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_create_or_update_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ComputeResource",
            '201': "ComputeResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def machine_learning_compute_create_or_update_0_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        parameters: Annotated[ComputeResource, Field(description="Payload with Machine Learning compute definition.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """machine_learning_compute_create_or_update_0

        Creates or updates compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param parameters: Payload with Machine Learning compute definition. (required)
        :type parameters: ComputeResource
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_create_or_update_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ComputeResource",
            '201': "ComputeResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _machine_learning_compute_create_or_update_0_serialize(
        self,
        subscription_id,
        resource_group_name,
        workspace_name,
        compute_name,
        api_version,
        parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if workspace_name is not None:
            _path_params['workspaceName'] = workspace_name
        if compute_name is not None:
            _path_params['computeName'] = compute_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if parameters is not None:
            _body_params = parameters


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def machine_learning_compute_delete_0(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        underlying_resource_action: Annotated[StrictStr, Field(description="Delete the underlying compute if 'Delete', or detach the underlying compute from workspace if 'Detach'.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """machine_learning_compute_delete_0

        Deletes specified Machine Learning compute.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param underlying_resource_action: Delete the underlying compute if 'Delete', or detach the underlying compute from workspace if 'Detach'. (required)
        :type underlying_resource_action: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_delete_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            underlying_resource_action=underlying_resource_action,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def machine_learning_compute_delete_0_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        underlying_resource_action: Annotated[StrictStr, Field(description="Delete the underlying compute if 'Delete', or detach the underlying compute from workspace if 'Detach'.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """machine_learning_compute_delete_0

        Deletes specified Machine Learning compute.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param underlying_resource_action: Delete the underlying compute if 'Delete', or detach the underlying compute from workspace if 'Detach'. (required)
        :type underlying_resource_action: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_delete_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            underlying_resource_action=underlying_resource_action,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def machine_learning_compute_delete_0_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        underlying_resource_action: Annotated[StrictStr, Field(description="Delete the underlying compute if 'Delete', or detach the underlying compute from workspace if 'Detach'.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """machine_learning_compute_delete_0

        Deletes specified Machine Learning compute.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param underlying_resource_action: Delete the underlying compute if 'Delete', or detach the underlying compute from workspace if 'Detach'. (required)
        :type underlying_resource_action: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_delete_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            underlying_resource_action=underlying_resource_action,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _machine_learning_compute_delete_0_serialize(
        self,
        subscription_id,
        resource_group_name,
        workspace_name,
        compute_name,
        api_version,
        underlying_resource_action,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if workspace_name is not None:
            _path_params['workspaceName'] = workspace_name
        if compute_name is not None:
            _path_params['computeName'] = compute_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if underlying_resource_action is not None:
            
            _query_params.append(('underlyingResourceAction', underlying_resource_action))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def machine_learning_compute_get_0(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ComputeResource:
        """machine_learning_compute_get_0

        Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not returned - use 'keys' nested resource to get them.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_get_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ComputeResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def machine_learning_compute_get_0_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ComputeResource]:
        """machine_learning_compute_get_0

        Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not returned - use 'keys' nested resource to get them.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_get_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ComputeResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def machine_learning_compute_get_0_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """machine_learning_compute_get_0

        Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not returned - use 'keys' nested resource to get them.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_get_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ComputeResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _machine_learning_compute_get_0_serialize(
        self,
        subscription_id,
        resource_group_name,
        workspace_name,
        compute_name,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if workspace_name is not None:
            _path_params['workspaceName'] = workspace_name
        if compute_name is not None:
            _path_params['computeName'] = compute_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def machine_learning_compute_list_by_workspace_0(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        skiptoken: Annotated[Optional[StrictStr], Field(description="Continuation token for pagination.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PaginatedComputeResourcesList:
        """machine_learning_compute_list_by_workspace_0

        Gets computes in specified workspace.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param skiptoken: Continuation token for pagination.
        :type skiptoken: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_list_by_workspace_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            api_version=api_version,
            skiptoken=skiptoken,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedComputeResourcesList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def machine_learning_compute_list_by_workspace_0_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        skiptoken: Annotated[Optional[StrictStr], Field(description="Continuation token for pagination.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PaginatedComputeResourcesList]:
        """machine_learning_compute_list_by_workspace_0

        Gets computes in specified workspace.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param skiptoken: Continuation token for pagination.
        :type skiptoken: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_list_by_workspace_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            api_version=api_version,
            skiptoken=skiptoken,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedComputeResourcesList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def machine_learning_compute_list_by_workspace_0_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        skiptoken: Annotated[Optional[StrictStr], Field(description="Continuation token for pagination.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """machine_learning_compute_list_by_workspace_0

        Gets computes in specified workspace.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param skiptoken: Continuation token for pagination.
        :type skiptoken: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_list_by_workspace_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            api_version=api_version,
            skiptoken=skiptoken,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedComputeResourcesList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _machine_learning_compute_list_by_workspace_0_serialize(
        self,
        subscription_id,
        resource_group_name,
        workspace_name,
        api_version,
        skiptoken,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if workspace_name is not None:
            _path_params['workspaceName'] = workspace_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if skiptoken is not None:
            
            _query_params.append(('$skiptoken', skiptoken))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def machine_learning_compute_list_keys_0(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ComputeSecrets:
        """machine_learning_compute_list_keys_0

        Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_list_keys_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ComputeSecrets",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def machine_learning_compute_list_keys_0_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ComputeSecrets]:
        """machine_learning_compute_list_keys_0

        Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_list_keys_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ComputeSecrets",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def machine_learning_compute_list_keys_0_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """machine_learning_compute_list_keys_0

        Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_list_keys_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ComputeSecrets",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _machine_learning_compute_list_keys_0_serialize(
        self,
        subscription_id,
        resource_group_name,
        workspace_name,
        compute_name,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if workspace_name is not None:
            _path_params['workspaceName'] = workspace_name
        if compute_name is not None:
            _path_params['computeName'] = compute_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listKeys',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def machine_learning_compute_list_nodes(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AmlComputeNodesInformation:
        """machine_learning_compute_list_nodes

        Get the details (e.g IP address, port etc) of all the compute nodes in the compute.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_list_nodes_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AmlComputeNodesInformation",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def machine_learning_compute_list_nodes_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AmlComputeNodesInformation]:
        """machine_learning_compute_list_nodes

        Get the details (e.g IP address, port etc) of all the compute nodes in the compute.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_list_nodes_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AmlComputeNodesInformation",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def machine_learning_compute_list_nodes_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """machine_learning_compute_list_nodes

        Get the details (e.g IP address, port etc) of all the compute nodes in the compute.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_list_nodes_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AmlComputeNodesInformation",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _machine_learning_compute_list_nodes_serialize(
        self,
        subscription_id,
        resource_group_name,
        workspace_name,
        compute_name,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if workspace_name is not None:
            _path_params['workspaceName'] = workspace_name
        if compute_name is not None:
            _path_params['computeName'] = compute_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listNodes',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def machine_learning_compute_update_0(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        parameters: Annotated[ClusterUpdateParameters, Field(description="Additional parameters for cluster update.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ComputeResource:
        """machine_learning_compute_update_0

        Updates properties of a compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param parameters: Additional parameters for cluster update. (required)
        :type parameters: ClusterUpdateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_update_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ComputeResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def machine_learning_compute_update_0_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        parameters: Annotated[ClusterUpdateParameters, Field(description="Additional parameters for cluster update.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ComputeResource]:
        """machine_learning_compute_update_0

        Updates properties of a compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param parameters: Additional parameters for cluster update. (required)
        :type parameters: ClusterUpdateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_update_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ComputeResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def machine_learning_compute_update_0_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the resource group in which workspace is located.")],
        workspace_name: Annotated[StrictStr, Field(description="Name of Azure Machine Learning workspace.")],
        compute_name: Annotated[StrictStr, Field(description="Name of the Azure Machine Learning compute.")],
        api_version: Annotated[StrictStr, Field(description="Version of Azure Machine Learning resource provider API.")],
        parameters: Annotated[ClusterUpdateParameters, Field(description="Additional parameters for cluster update.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """machine_learning_compute_update_0

        Updates properties of a compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation.

        :param subscription_id: Azure subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the resource group in which workspace is located. (required)
        :type resource_group_name: str
        :param workspace_name: Name of Azure Machine Learning workspace. (required)
        :type workspace_name: str
        :param compute_name: Name of the Azure Machine Learning compute. (required)
        :type compute_name: str
        :param api_version: Version of Azure Machine Learning resource provider API. (required)
        :type api_version: str
        :param parameters: Additional parameters for cluster update. (required)
        :type parameters: ClusterUpdateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machine_learning_compute_update_0_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            compute_name=compute_name,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ComputeResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _machine_learning_compute_update_0_serialize(
        self,
        subscription_id,
        resource_group_name,
        workspace_name,
        compute_name,
        api_version,
        parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if workspace_name is not None:
            _path_params['workspaceName'] = workspace_name
        if compute_name is not None:
            _path_params['computeName'] = compute_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if parameters is not None:
            _body_params = parameters


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


