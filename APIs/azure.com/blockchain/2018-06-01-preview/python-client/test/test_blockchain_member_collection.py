# coding: utf-8

"""
    BlockchainManagementClient

    REST API for Azure Blockchain Service

    The version of the OpenAPI document: 2018-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.blockchain_member_collection import BlockchainMemberCollection

class TestBlockchainMemberCollection(unittest.TestCase):
    """BlockchainMemberCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BlockchainMemberCollection:
        """Test BlockchainMemberCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BlockchainMemberCollection`
        """
        model = BlockchainMemberCollection()
        if include_optional:
            return BlockchainMemberCollection(
                next_link = '',
                value = [
                    openapi_client.models.blockchain_member.BlockchainMember(
                        properties = openapi_client.models.blockchain_member_properties.BlockchainMemberProperties(
                            consortium = '', 
                            consortium_management_account_address = '', 
                            consortium_management_account_password = '', 
                            consortium_member_display_name = '', 
                            consortium_role = '', 
                            dns = '', 
                            firewall_rules = [
                                openapi_client.models.firewall_rule.FirewallRule(
                                    end_ip_address = '', 
                                    rule_name = '', 
                                    start_ip_address = '', )
                                ], 
                            password = '', 
                            protocol = 'NotSpecified', 
                            provisioning_state = 'NotSpecified', 
                            public_key = '', 
                            root_contract_address = '', 
                            user_name = '', 
                            validator_nodes_sku = openapi_client.models.blockchain_member_nodes_sku.BlockchainMemberNodesSku(
                                capacity = 56, ), ), 
                        sku = openapi_client.models.sku.Sku(
                            name = '', 
                            tier = '', ), )
                    ]
            )
        else:
            return BlockchainMemberCollection(
        )
        """

    def testBlockchainMemberCollection(self):
        """Test BlockchainMemberCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
