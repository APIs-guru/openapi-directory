# coding: utf-8

"""
    ApplicationInsightsManagementClient

    Azure Application Insights client for saved items.

    The version of the OpenAPI document: 2015-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictStr, field_validator
from typing import List, Optional
from typing_extensions import Annotated
from openapi_client.models.application_insights_component_analytics_item import ApplicationInsightsComponentAnalyticsItem

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class DefaultApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def analytics_items_delete(
        self,
        subscription_id: Annotated[str, Field(min_length=1, strict=True, description="The ID of the target subscription.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="The name of the resource group. The name is case insensitive.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the Application Insights component resource.")],
        scope_path: Annotated[StrictStr, Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")],
        api_version: Annotated[str, Field(min_length=1, strict=True, description="The API version to use for this operation.")],
        id: Annotated[Optional[StrictStr], Field(description="The Id of a specific item defined in the Application Insights component")] = None,
        name: Annotated[Optional[StrictStr], Field(description="The name of a specific item defined in the Application Insights component")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """analytics_items_delete

        Deletes a specific Analytics Items defined within an Application Insights component.

        :param subscription_id: The ID of the target subscription. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. The name is case insensitive. (required)
        :type resource_group_name: str
        :param resource_name: The name of the Application Insights component resource. (required)
        :type resource_name: str
        :param scope_path: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. (required)
        :type scope_path: str
        :param api_version: The API version to use for this operation. (required)
        :type api_version: str
        :param id: The Id of a specific item defined in the Application Insights component
        :type id: str
        :param name: The name of a specific item defined in the Application Insights component
        :type name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._analytics_items_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_name=resource_name,
            scope_path=scope_path,
            api_version=api_version,
            id=id,
            name=name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def analytics_items_delete_with_http_info(
        self,
        subscription_id: Annotated[str, Field(min_length=1, strict=True, description="The ID of the target subscription.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="The name of the resource group. The name is case insensitive.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the Application Insights component resource.")],
        scope_path: Annotated[StrictStr, Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")],
        api_version: Annotated[str, Field(min_length=1, strict=True, description="The API version to use for this operation.")],
        id: Annotated[Optional[StrictStr], Field(description="The Id of a specific item defined in the Application Insights component")] = None,
        name: Annotated[Optional[StrictStr], Field(description="The name of a specific item defined in the Application Insights component")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """analytics_items_delete

        Deletes a specific Analytics Items defined within an Application Insights component.

        :param subscription_id: The ID of the target subscription. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. The name is case insensitive. (required)
        :type resource_group_name: str
        :param resource_name: The name of the Application Insights component resource. (required)
        :type resource_name: str
        :param scope_path: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. (required)
        :type scope_path: str
        :param api_version: The API version to use for this operation. (required)
        :type api_version: str
        :param id: The Id of a specific item defined in the Application Insights component
        :type id: str
        :param name: The name of a specific item defined in the Application Insights component
        :type name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._analytics_items_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_name=resource_name,
            scope_path=scope_path,
            api_version=api_version,
            id=id,
            name=name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def analytics_items_delete_without_preload_content(
        self,
        subscription_id: Annotated[str, Field(min_length=1, strict=True, description="The ID of the target subscription.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="The name of the resource group. The name is case insensitive.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the Application Insights component resource.")],
        scope_path: Annotated[StrictStr, Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")],
        api_version: Annotated[str, Field(min_length=1, strict=True, description="The API version to use for this operation.")],
        id: Annotated[Optional[StrictStr], Field(description="The Id of a specific item defined in the Application Insights component")] = None,
        name: Annotated[Optional[StrictStr], Field(description="The name of a specific item defined in the Application Insights component")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """analytics_items_delete

        Deletes a specific Analytics Items defined within an Application Insights component.

        :param subscription_id: The ID of the target subscription. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. The name is case insensitive. (required)
        :type resource_group_name: str
        :param resource_name: The name of the Application Insights component resource. (required)
        :type resource_name: str
        :param scope_path: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. (required)
        :type scope_path: str
        :param api_version: The API version to use for this operation. (required)
        :type api_version: str
        :param id: The Id of a specific item defined in the Application Insights component
        :type id: str
        :param name: The name of a specific item defined in the Application Insights component
        :type name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._analytics_items_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_name=resource_name,
            scope_path=scope_path,
            api_version=api_version,
            id=id,
            name=name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _analytics_items_delete_serialize(
        self,
        subscription_id,
        resource_group_name,
        resource_name,
        scope_path,
        api_version,
        id,
        name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if resource_name is not None:
            _path_params['resourceName'] = resource_name
        if scope_path is not None:
            _path_params['scopePath'] = scope_path
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if id is not None:
            
            _query_params.append(('id', id))
            
        if name is not None:
            
            _query_params.append(('name', name))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter




        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/{scopePath}/item',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def analytics_items_get(
        self,
        subscription_id: Annotated[str, Field(min_length=1, strict=True, description="The ID of the target subscription.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="The name of the resource group. The name is case insensitive.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the Application Insights component resource.")],
        scope_path: Annotated[StrictStr, Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")],
        api_version: Annotated[str, Field(min_length=1, strict=True, description="The API version to use for this operation.")],
        id: Annotated[Optional[StrictStr], Field(description="The Id of a specific item defined in the Application Insights component")] = None,
        name: Annotated[Optional[StrictStr], Field(description="The name of a specific item defined in the Application Insights component")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApplicationInsightsComponentAnalyticsItem:
        """analytics_items_get

        Gets a specific Analytics Items defined within an Application Insights component.

        :param subscription_id: The ID of the target subscription. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. The name is case insensitive. (required)
        :type resource_group_name: str
        :param resource_name: The name of the Application Insights component resource. (required)
        :type resource_name: str
        :param scope_path: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. (required)
        :type scope_path: str
        :param api_version: The API version to use for this operation. (required)
        :type api_version: str
        :param id: The Id of a specific item defined in the Application Insights component
        :type id: str
        :param name: The name of a specific item defined in the Application Insights component
        :type name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._analytics_items_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_name=resource_name,
            scope_path=scope_path,
            api_version=api_version,
            id=id,
            name=name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationInsightsComponentAnalyticsItem",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def analytics_items_get_with_http_info(
        self,
        subscription_id: Annotated[str, Field(min_length=1, strict=True, description="The ID of the target subscription.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="The name of the resource group. The name is case insensitive.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the Application Insights component resource.")],
        scope_path: Annotated[StrictStr, Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")],
        api_version: Annotated[str, Field(min_length=1, strict=True, description="The API version to use for this operation.")],
        id: Annotated[Optional[StrictStr], Field(description="The Id of a specific item defined in the Application Insights component")] = None,
        name: Annotated[Optional[StrictStr], Field(description="The name of a specific item defined in the Application Insights component")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ApplicationInsightsComponentAnalyticsItem]:
        """analytics_items_get

        Gets a specific Analytics Items defined within an Application Insights component.

        :param subscription_id: The ID of the target subscription. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. The name is case insensitive. (required)
        :type resource_group_name: str
        :param resource_name: The name of the Application Insights component resource. (required)
        :type resource_name: str
        :param scope_path: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. (required)
        :type scope_path: str
        :param api_version: The API version to use for this operation. (required)
        :type api_version: str
        :param id: The Id of a specific item defined in the Application Insights component
        :type id: str
        :param name: The name of a specific item defined in the Application Insights component
        :type name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._analytics_items_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_name=resource_name,
            scope_path=scope_path,
            api_version=api_version,
            id=id,
            name=name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationInsightsComponentAnalyticsItem",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def analytics_items_get_without_preload_content(
        self,
        subscription_id: Annotated[str, Field(min_length=1, strict=True, description="The ID of the target subscription.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="The name of the resource group. The name is case insensitive.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the Application Insights component resource.")],
        scope_path: Annotated[StrictStr, Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")],
        api_version: Annotated[str, Field(min_length=1, strict=True, description="The API version to use for this operation.")],
        id: Annotated[Optional[StrictStr], Field(description="The Id of a specific item defined in the Application Insights component")] = None,
        name: Annotated[Optional[StrictStr], Field(description="The name of a specific item defined in the Application Insights component")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """analytics_items_get

        Gets a specific Analytics Items defined within an Application Insights component.

        :param subscription_id: The ID of the target subscription. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. The name is case insensitive. (required)
        :type resource_group_name: str
        :param resource_name: The name of the Application Insights component resource. (required)
        :type resource_name: str
        :param scope_path: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. (required)
        :type scope_path: str
        :param api_version: The API version to use for this operation. (required)
        :type api_version: str
        :param id: The Id of a specific item defined in the Application Insights component
        :type id: str
        :param name: The name of a specific item defined in the Application Insights component
        :type name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._analytics_items_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_name=resource_name,
            scope_path=scope_path,
            api_version=api_version,
            id=id,
            name=name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationInsightsComponentAnalyticsItem",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _analytics_items_get_serialize(
        self,
        subscription_id,
        resource_group_name,
        resource_name,
        scope_path,
        api_version,
        id,
        name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if resource_name is not None:
            _path_params['resourceName'] = resource_name
        if scope_path is not None:
            _path_params['scopePath'] = scope_path
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if id is not None:
            
            _query_params.append(('id', id))
            
        if name is not None:
            
            _query_params.append(('name', name))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/{scopePath}/item',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def analytics_items_list(
        self,
        subscription_id: Annotated[str, Field(min_length=1, strict=True, description="The ID of the target subscription.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="The name of the resource group. The name is case insensitive.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the Application Insights component resource.")],
        scope_path: Annotated[StrictStr, Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")],
        api_version: Annotated[str, Field(min_length=1, strict=True, description="The API version to use for this operation.")],
        scope: Annotated[Optional[StrictStr], Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")] = None,
        type: Annotated[Optional[StrictStr], Field(description="Enum indicating the type of the Analytics item.")] = None,
        include_content: Annotated[Optional[StrictBool], Field(description="Flag indicating whether or not to return the content of each applicable item. If false, only return the item information.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ApplicationInsightsComponentAnalyticsItem]:
        """analytics_items_list

        Gets a list of Analytics Items defined within an Application Insights component.

        :param subscription_id: The ID of the target subscription. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. The name is case insensitive. (required)
        :type resource_group_name: str
        :param resource_name: The name of the Application Insights component resource. (required)
        :type resource_name: str
        :param scope_path: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. (required)
        :type scope_path: str
        :param api_version: The API version to use for this operation. (required)
        :type api_version: str
        :param scope: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
        :type scope: str
        :param type: Enum indicating the type of the Analytics item.
        :type type: str
        :param include_content: Flag indicating whether or not to return the content of each applicable item. If false, only return the item information.
        :type include_content: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._analytics_items_list_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_name=resource_name,
            scope_path=scope_path,
            api_version=api_version,
            scope=scope,
            type=type,
            include_content=include_content,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ApplicationInsightsComponentAnalyticsItem]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def analytics_items_list_with_http_info(
        self,
        subscription_id: Annotated[str, Field(min_length=1, strict=True, description="The ID of the target subscription.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="The name of the resource group. The name is case insensitive.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the Application Insights component resource.")],
        scope_path: Annotated[StrictStr, Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")],
        api_version: Annotated[str, Field(min_length=1, strict=True, description="The API version to use for this operation.")],
        scope: Annotated[Optional[StrictStr], Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")] = None,
        type: Annotated[Optional[StrictStr], Field(description="Enum indicating the type of the Analytics item.")] = None,
        include_content: Annotated[Optional[StrictBool], Field(description="Flag indicating whether or not to return the content of each applicable item. If false, only return the item information.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ApplicationInsightsComponentAnalyticsItem]]:
        """analytics_items_list

        Gets a list of Analytics Items defined within an Application Insights component.

        :param subscription_id: The ID of the target subscription. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. The name is case insensitive. (required)
        :type resource_group_name: str
        :param resource_name: The name of the Application Insights component resource. (required)
        :type resource_name: str
        :param scope_path: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. (required)
        :type scope_path: str
        :param api_version: The API version to use for this operation. (required)
        :type api_version: str
        :param scope: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
        :type scope: str
        :param type: Enum indicating the type of the Analytics item.
        :type type: str
        :param include_content: Flag indicating whether or not to return the content of each applicable item. If false, only return the item information.
        :type include_content: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._analytics_items_list_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_name=resource_name,
            scope_path=scope_path,
            api_version=api_version,
            scope=scope,
            type=type,
            include_content=include_content,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ApplicationInsightsComponentAnalyticsItem]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def analytics_items_list_without_preload_content(
        self,
        subscription_id: Annotated[str, Field(min_length=1, strict=True, description="The ID of the target subscription.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="The name of the resource group. The name is case insensitive.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the Application Insights component resource.")],
        scope_path: Annotated[StrictStr, Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")],
        api_version: Annotated[str, Field(min_length=1, strict=True, description="The API version to use for this operation.")],
        scope: Annotated[Optional[StrictStr], Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")] = None,
        type: Annotated[Optional[StrictStr], Field(description="Enum indicating the type of the Analytics item.")] = None,
        include_content: Annotated[Optional[StrictBool], Field(description="Flag indicating whether or not to return the content of each applicable item. If false, only return the item information.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """analytics_items_list

        Gets a list of Analytics Items defined within an Application Insights component.

        :param subscription_id: The ID of the target subscription. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. The name is case insensitive. (required)
        :type resource_group_name: str
        :param resource_name: The name of the Application Insights component resource. (required)
        :type resource_name: str
        :param scope_path: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. (required)
        :type scope_path: str
        :param api_version: The API version to use for this operation. (required)
        :type api_version: str
        :param scope: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
        :type scope: str
        :param type: Enum indicating the type of the Analytics item.
        :type type: str
        :param include_content: Flag indicating whether or not to return the content of each applicable item. If false, only return the item information.
        :type include_content: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._analytics_items_list_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_name=resource_name,
            scope_path=scope_path,
            api_version=api_version,
            scope=scope,
            type=type,
            include_content=include_content,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ApplicationInsightsComponentAnalyticsItem]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _analytics_items_list_serialize(
        self,
        subscription_id,
        resource_group_name,
        resource_name,
        scope_path,
        api_version,
        scope,
        type,
        include_content,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if resource_name is not None:
            _path_params['resourceName'] = resource_name
        if scope_path is not None:
            _path_params['scopePath'] = scope_path
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if scope is not None:
            
            _query_params.append(('scope', scope))
            
        if type is not None:
            
            _query_params.append(('type', type))
            
        if include_content is not None:
            
            _query_params.append(('includeContent', include_content))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/{scopePath}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def analytics_items_put(
        self,
        subscription_id: Annotated[str, Field(min_length=1, strict=True, description="The ID of the target subscription.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="The name of the resource group. The name is case insensitive.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the Application Insights component resource.")],
        scope_path: Annotated[StrictStr, Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")],
        api_version: Annotated[str, Field(min_length=1, strict=True, description="The API version to use for this operation.")],
        item_properties: Annotated[ApplicationInsightsComponentAnalyticsItem, Field(description="Properties that need to be specified to create a new item and add it to an Application Insights component.")],
        override_item: Annotated[Optional[StrictBool], Field(description="Flag indicating whether or not to force save an item. This allows overriding an item if it already exists.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApplicationInsightsComponentAnalyticsItem:
        """analytics_items_put

        Adds or Updates a specific Analytics Item within an Application Insights component.

        :param subscription_id: The ID of the target subscription. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. The name is case insensitive. (required)
        :type resource_group_name: str
        :param resource_name: The name of the Application Insights component resource. (required)
        :type resource_name: str
        :param scope_path: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. (required)
        :type scope_path: str
        :param api_version: The API version to use for this operation. (required)
        :type api_version: str
        :param item_properties: Properties that need to be specified to create a new item and add it to an Application Insights component. (required)
        :type item_properties: ApplicationInsightsComponentAnalyticsItem
        :param override_item: Flag indicating whether or not to force save an item. This allows overriding an item if it already exists.
        :type override_item: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._analytics_items_put_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_name=resource_name,
            scope_path=scope_path,
            api_version=api_version,
            item_properties=item_properties,
            override_item=override_item,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationInsightsComponentAnalyticsItem",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def analytics_items_put_with_http_info(
        self,
        subscription_id: Annotated[str, Field(min_length=1, strict=True, description="The ID of the target subscription.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="The name of the resource group. The name is case insensitive.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the Application Insights component resource.")],
        scope_path: Annotated[StrictStr, Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")],
        api_version: Annotated[str, Field(min_length=1, strict=True, description="The API version to use for this operation.")],
        item_properties: Annotated[ApplicationInsightsComponentAnalyticsItem, Field(description="Properties that need to be specified to create a new item and add it to an Application Insights component.")],
        override_item: Annotated[Optional[StrictBool], Field(description="Flag indicating whether or not to force save an item. This allows overriding an item if it already exists.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ApplicationInsightsComponentAnalyticsItem]:
        """analytics_items_put

        Adds or Updates a specific Analytics Item within an Application Insights component.

        :param subscription_id: The ID of the target subscription. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. The name is case insensitive. (required)
        :type resource_group_name: str
        :param resource_name: The name of the Application Insights component resource. (required)
        :type resource_name: str
        :param scope_path: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. (required)
        :type scope_path: str
        :param api_version: The API version to use for this operation. (required)
        :type api_version: str
        :param item_properties: Properties that need to be specified to create a new item and add it to an Application Insights component. (required)
        :type item_properties: ApplicationInsightsComponentAnalyticsItem
        :param override_item: Flag indicating whether or not to force save an item. This allows overriding an item if it already exists.
        :type override_item: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._analytics_items_put_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_name=resource_name,
            scope_path=scope_path,
            api_version=api_version,
            item_properties=item_properties,
            override_item=override_item,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationInsightsComponentAnalyticsItem",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def analytics_items_put_without_preload_content(
        self,
        subscription_id: Annotated[str, Field(min_length=1, strict=True, description="The ID of the target subscription.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="The name of the resource group. The name is case insensitive.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the Application Insights component resource.")],
        scope_path: Annotated[StrictStr, Field(description="Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.")],
        api_version: Annotated[str, Field(min_length=1, strict=True, description="The API version to use for this operation.")],
        item_properties: Annotated[ApplicationInsightsComponentAnalyticsItem, Field(description="Properties that need to be specified to create a new item and add it to an Application Insights component.")],
        override_item: Annotated[Optional[StrictBool], Field(description="Flag indicating whether or not to force save an item. This allows overriding an item if it already exists.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """analytics_items_put

        Adds or Updates a specific Analytics Item within an Application Insights component.

        :param subscription_id: The ID of the target subscription. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. The name is case insensitive. (required)
        :type resource_group_name: str
        :param resource_name: The name of the Application Insights component resource. (required)
        :type resource_name: str
        :param scope_path: Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. (required)
        :type scope_path: str
        :param api_version: The API version to use for this operation. (required)
        :type api_version: str
        :param item_properties: Properties that need to be specified to create a new item and add it to an Application Insights component. (required)
        :type item_properties: ApplicationInsightsComponentAnalyticsItem
        :param override_item: Flag indicating whether or not to force save an item. This allows overriding an item if it already exists.
        :type override_item: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._analytics_items_put_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_name=resource_name,
            scope_path=scope_path,
            api_version=api_version,
            item_properties=item_properties,
            override_item=override_item,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationInsightsComponentAnalyticsItem",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _analytics_items_put_serialize(
        self,
        subscription_id,
        resource_group_name,
        resource_name,
        scope_path,
        api_version,
        item_properties,
        override_item,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if resource_name is not None:
            _path_params['resourceName'] = resource_name
        if scope_path is not None:
            _path_params['scopePath'] = scope_path
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if override_item is not None:
            
            _query_params.append(('overrideItem', override_item))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if item_properties is not None:
            _body_params = item_properties


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/{scopePath}/item',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


