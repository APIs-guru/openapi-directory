# coding: utf-8

"""
    Azure Alerts Management Service Resource Provider

    REST APIs for Azure Alerts Management Service.

    The version of the OpenAPI document: 2018-05-05-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.alerts_summary import AlertsSummary

class TestAlertsSummary(unittest.TestCase):
    """AlertsSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlertsSummary:
        """Test AlertsSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlertsSummary`
        """
        model = AlertsSummary()
        if include_optional:
            return AlertsSummary(
                properties = openapi_client.models.alerts_summary_properties.alertsSummaryProperties(
                    next_link = '', 
                    smart_groups_count = 56, 
                    summary_by_monitor_service = openapi_client.models.summary_by_monitor_service.summaryByMonitorService(), 
                    summary_by_severity = openapi_client.models.alerts_summary_properties_summary_by_severity.alertsSummaryProperties_summaryBySeverity(
                        sev0 = openapi_client.models.sev0.sev0(), 
                        sev1 = openapi_client.models.sev1.sev1(), 
                        sev2 = openapi_client.models.sev2.sev2(), 
                        sev3 = openapi_client.models.sev3.sev3(), 
                        sev4 = openapi_client.models.sev4.sev4(), ), 
                    summary_by_severity_and_monitor_condition = openapi_client.models.summary_by_severity_and_monitor_condition.summaryBySeverityAndMonitorCondition(), 
                    summary_by_state = openapi_client.models.summary_by_state.summaryByState(), 
                    total = 56, ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return AlertsSummary(
        )
        """

    def testAlertsSummary(self):
        """Test AlertsSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
