# coding: utf-8

"""
    Azure Alerts Management Service Resource Provider

    REST APIs for Azure Alerts Management Service.

    The version of the OpenAPI document: 2018-11-02-privatepreview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.alerts_summary_properties import AlertsSummaryProperties

class TestAlertsSummaryProperties(unittest.TestCase):
    """AlertsSummaryProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlertsSummaryProperties:
        """Test AlertsSummaryProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlertsSummaryProperties`
        """
        model = AlertsSummaryProperties()
        if include_optional:
            return AlertsSummaryProperties(
                next_link = '',
                smart_groups_count = 56,
                summary_by_monitor_service = openapi_client.models.alerts_summary_by_monitor_service.alertsSummaryByMonitorService(
                    activity_log_administrative = 56, 
                    activity_log_autoscale = 56, 
                    activity_log_policy = 56, 
                    activity_log_recommendation = 56, 
                    activity_log_security = 56, 
                    application_insights = 56, 
                    infrastructure_insights = 56, 
                    log_analytics = 56, 
                    nagios = 56, 
                    platform = 56, 
                    scom = 56, 
                    service_health = 56, 
                    smart_detector = 56, 
                    zabbix = 56, ),
                summary_by_severity = openapi_client.models.alerts_summary_properties_summary_by_severity.alertsSummaryProperties_summaryBySeverity(
                    sev0 = openapi_client.models.sev0.sev0(), 
                    sev1 = openapi_client.models.sev1.sev1(), 
                    sev2 = openapi_client.models.sev2.sev2(), 
                    sev3 = openapi_client.models.sev3.sev3(), 
                    sev4 = openapi_client.models.sev4.sev4(), ),
                summary_by_severity_and_monitor_condition = openapi_client.models.alerts_summary_by_severity_and_monitor_condition.alertsSummaryBySeverityAndMonitorCondition(
                    sev0 = openapi_client.models.sev0.sev0(), 
                    sev1 = openapi_client.models.sev1.sev1(), 
                    sev2 = openapi_client.models.sev2.sev2(), 
                    sev3 = openapi_client.models.sev3.sev3(), 
                    sev4 = openapi_client.models.sev4.sev4(), ),
                summary_by_state = openapi_client.models.alerts_summary_by_state.alertsSummaryByState(
                    acknowledged = 56, 
                    closed = 56, 
                    new = 56, ),
                total = 56
            )
        else:
            return AlertsSummaryProperties(
        )
        """

    def testAlertsSummaryProperties(self):
        """Test AlertsSummaryProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
