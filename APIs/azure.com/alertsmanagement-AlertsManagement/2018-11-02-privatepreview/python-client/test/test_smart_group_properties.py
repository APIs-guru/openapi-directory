# coding: utf-8

"""
    Azure Alerts Management Service Resource Provider

    REST APIs for Azure Alerts Management Service.

    The version of the OpenAPI document: 2018-11-02-privatepreview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.smart_group_properties import SmartGroupProperties

class TestSmartGroupProperties(unittest.TestCase):
    """SmartGroupProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SmartGroupProperties:
        """Test SmartGroupProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SmartGroupProperties`
        """
        model = SmartGroupProperties()
        if include_optional:
            return SmartGroupProperties(
                alert_severities = [
                    openapi_client.models.smart_group_aggregated_property.smartGroupAggregatedProperty(
                        count = 56, 
                        name = '', )
                    ],
                alert_states = [
                    openapi_client.models.smart_group_aggregated_property.smartGroupAggregatedProperty(
                        count = 56, 
                        name = '', )
                    ],
                alerts_count = 56,
                last_modified_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_modified_user_name = '',
                monitor_conditions = [
                    openapi_client.models.smart_group_aggregated_property.smartGroupAggregatedProperty(
                        count = 56, 
                        name = '', )
                    ],
                monitor_services = [
                    openapi_client.models.smart_group_aggregated_property.smartGroupAggregatedProperty(
                        count = 56, 
                        name = '', )
                    ],
                next_link = '',
                resource_groups = [
                    openapi_client.models.smart_group_aggregated_property.smartGroupAggregatedProperty(
                        count = 56, 
                        name = '', )
                    ],
                resource_types = [
                    openapi_client.models.smart_group_aggregated_property.smartGroupAggregatedProperty(
                        count = 56, 
                        name = '', )
                    ],
                resources = [
                    openapi_client.models.smart_group_aggregated_property.smartGroupAggregatedProperty(
                        count = 56, 
                        name = '', )
                    ],
                severity = 'Sev0',
                smart_group_state = 'New',
                start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return SmartGroupProperties(
        )
        """

    def testSmartGroupProperties(self):
        """Test SmartGroupProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
