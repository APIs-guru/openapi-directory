# coding: utf-8

"""
    Azure Alerts Management Service Resource Provider

    Azure Alerts Management Service provides a single pane of glass of alerts across Azure Monitor.

    The version of the OpenAPI document: 2019-05-05-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.action_rules_list import ActionRulesList

class TestActionRulesList(unittest.TestCase):
    """ActionRulesList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActionRulesList:
        """Test ActionRulesList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActionRulesList`
        """
        model = ActionRulesList()
        if include_optional:
            return ActionRulesList(
                next_link = '',
                value = [
                    openapi_client.models.action_rule.ActionRule(
                        properties = openapi_client.models.action_rule_properties.ActionRuleProperties(
                            conditions = openapi_client.models.conditions.Conditions(
                                alert_context = openapi_client.models.condition.Condition(
                                    operator = 'Equals', 
                                    values = [
                                        ''
                                        ], ), 
                                alert_rule_id = openapi_client.models.condition.Condition(
                                    operator = 'Equals', ), 
                                description = , 
                                monitor_condition = , 
                                monitor_service = , 
                                severity = , 
                                target_resource_type = , ), 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            created_by = '', 
                            description = '', 
                            last_modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_modified_by = '', 
                            scope = openapi_client.models.scope.Scope(
                                scope_type = 'ResourceGroup', ), 
                            status = 'Enabled', 
                            type = 'Suppression', ), )
                    ]
            )
        else:
            return ActionRulesList(
        )
        """

    def testActionRulesList(self):
        """Test ActionRulesList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
