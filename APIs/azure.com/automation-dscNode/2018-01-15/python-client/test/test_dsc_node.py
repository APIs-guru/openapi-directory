# coding: utf-8

"""
    AutomationManagement

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-01-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dsc_node import DscNode

class TestDscNode(unittest.TestCase):
    """DscNode unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DscNode:
        """Test DscNode
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DscNode`
        """
        model = DscNode()
        if include_optional:
            return DscNode(
                properties = openapi_client.models.dsc_node_properties.DscNodeProperties(
                    account_id = '', 
                    etag = '', 
                    extension_handler = [
                        openapi_client.models.dsc_node_extension_handler_association_property.DscNodeExtensionHandlerAssociationProperty(
                            name = '', 
                            version = '', )
                        ], 
                    ip = '', 
                    last_seen = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    node_configuration = openapi_client.models.dsc_node_configuration_association_property.DscNodeConfigurationAssociationProperty(
                        name = '', ), 
                    node_id = '', 
                    registration_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = '', 
                    total_count = 56, ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return DscNode(
        )
        """

    def testDscNode(self):
        """Test DscNode"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
