# coding: utf-8

"""
    ContainerServiceClient

    The Container Service Client.

    The version of the OpenAPI document: 2020-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.managed_cluster_agent_pool_profile_properties import ManagedClusterAgentPoolProfileProperties

class TestManagedClusterAgentPoolProfileProperties(unittest.TestCase):
    """ManagedClusterAgentPoolProfileProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManagedClusterAgentPoolProfileProperties:
        """Test ManagedClusterAgentPoolProfileProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManagedClusterAgentPoolProfileProperties`
        """
        model = ManagedClusterAgentPoolProfileProperties()
        if include_optional:
            return ManagedClusterAgentPoolProfileProperties(
                availability_zones = [
                    ''
                    ],
                count = 1,
                enable_auto_scaling = True,
                enable_node_public_ip = True,
                max_count = 56,
                max_pods = 56,
                min_count = 56,
                node_labels = {
                    'key' : ''
                    },
                node_taints = [
                    ''
                    ],
                orchestrator_version = '',
                os_disk_size_gb = 0,
                os_type = 'Linux',
                provisioning_state = '',
                scale_set_eviction_policy = 'Delete',
                scale_set_priority = 'Regular',
                tags = {
                    'key' : ''
                    },
                type = 'VirtualMachineScaleSets',
                vm_size = 'Standard_A1',
                vnet_subnet_id = ''
            )
        else:
            return ManagedClusterAgentPoolProfileProperties(
                count = 1,
                vm_size = 'Standard_A1',
        )
        """

    def testManagedClusterAgentPoolProfileProperties(self):
        """Test ManagedClusterAgentPoolProfileProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
