# coding: utf-8

"""
    ContainerServiceClient

    The Container Service Client.

    The version of the OpenAPI document: 2017-08-31
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.managed_clusters_api import ManagedClustersApi


class TestManagedClustersApi(unittest.TestCase):
    """ManagedClustersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ManagedClustersApi()

    def tearDown(self) -> None:
        pass

    def test_managed_clusters_create_or_update(self) -> None:
        """Test case for managed_clusters_create_or_update

        Creates or updates a managed cluster.
        """
        pass

    def test_managed_clusters_delete(self) -> None:
        """Test case for managed_clusters_delete

        Deletes a managed cluster.
        """
        pass

    def test_managed_clusters_get(self) -> None:
        """Test case for managed_clusters_get

        Gets a managed cluster.
        """
        pass

    def test_managed_clusters_get_access_profile(self) -> None:
        """Test case for managed_clusters_get_access_profile

        Gets an access profile of a managed cluster.
        """
        pass

    def test_managed_clusters_get_access_profiles(self) -> None:
        """Test case for managed_clusters_get_access_profiles

        Gets access profile of a managed cluster.
        """
        pass

    def test_managed_clusters_get_upgrade_profile(self) -> None:
        """Test case for managed_clusters_get_upgrade_profile

        Gets upgrade profile for a managed cluster.
        """
        pass

    def test_managed_clusters_list(self) -> None:
        """Test case for managed_clusters_list

        Gets a list of managed clusters in the specified subscription.
        """
        pass

    def test_managed_clusters_list_by_resource_group(self) -> None:
        """Test case for managed_clusters_list_by_resource_group

        Lists managed clusters in the specified subscription and resource group.
        """
        pass


if __name__ == '__main__':
    unittest.main()
