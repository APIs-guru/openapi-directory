# coding: utf-8

"""
    ContainerServiceClient

    The Container Service Client.

    The version of the OpenAPI document: 2019-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.managed_cluster_properties import ManagedClusterProperties

class TestManagedClusterProperties(unittest.TestCase):
    """ManagedClusterProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManagedClusterProperties:
        """Test ManagedClusterProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManagedClusterProperties`
        """
        model = ManagedClusterProperties()
        if include_optional:
            return ManagedClusterProperties(
                aad_profile = openapi_client.models.managed_cluster_aad_profile.ManagedClusterAADProfile(
                    client_app_id = '', 
                    server_app_id = '', 
                    server_app_secret = '', 
                    tenant_id = '', ),
                addon_profiles = openapi_client.models.addon_profiles.addonProfiles(),
                agent_pool_profiles = [
                    null
                    ],
                api_server_authorized_ip_ranges = [
                    ''
                    ],
                dns_prefix = '',
                enable_pod_security_policy = True,
                enable_rbac = True,
                fqdn = '',
                kubernetes_version = '',
                linux_profile = openapi_client.models.container_service_linux_profile.ContainerServiceLinuxProfile(
                    admin_username = 'ABAMDTMv2D2ylmgd10Z3UB6UkJSIS', 
                    ssh = openapi_client.models.container_service_ssh_configuration.ContainerServiceSshConfiguration(
                        public_keys = [
                            openapi_client.models.container_service_ssh_public_key.ContainerServiceSshPublicKey(
                                key_data = '', )
                            ], ), ),
                max_agent_pools = 56,
                network_profile = openapi_client.models.container_service_network_profile.ContainerServiceNetworkProfile(
                    dns_service_ip = '10.0.0.10', 
                    docker_bridge_cidr = '172.17.0.1/16', 
                    load_balancer_sku = 'standard', 
                    network_plugin = 'kubenet', 
                    network_policy = 'calico', 
                    pod_cidr = '10.244.0.0/16', 
                    service_cidr = '10.0.0.0/16', ),
                node_resource_group = '',
                provisioning_state = '',
                service_principal_profile = openapi_client.models.managed_cluster_service_principal_profile.ManagedClusterServicePrincipalProfile(
                    client_id = '', 
                    secret = '', ),
                windows_profile = openapi_client.models.managed_cluster_windows_profile.ManagedClusterWindowsProfile(
                    admin_password = 'jUR,rZ#UM/?R,Fp^l6$ARjeJk C>i H'qT\\{<?'es#)#iK.YM{Rag2/!KB!k@5oXh.:Ts\";mGL,i&z5[P@M\"lzfB+Y,Twzfu~N^z\"mfqecVU{SE{QA<Y8XX0<}J;Krm9W'g~?)DvDDL*bOV(XvV#dU!^^&w6tJ9bNs!p)&cV37@k@XydVmI^EwIS2J&A%GfM0k4JJ&J*m*EnCVCQ$WshUv#r^8FP0pO7M$IPz8KX26Pd5*QLM3IK(Nyc2LeooBsAuXot', 
                    admin_username = 'CC4aWwWL9Y864DZtaGRyyGFZKkkp4a0U0gGbVVjddR9l98FWekFL9DLWykFbsjF7LMdeXylwK0lMGUSM4jsrh4tlnQUN5vVdMLPAPqRWMMEqkO8tHOwlhIwkT5yJOZfzRn9kqGTEBlwpCDcpNjORpuEGrQXd2sivg8GylZGwe.6gZt9ILrESWRhZJlmyQ08IE3Y1VNFIln0b2pVHpxhuKIGfVb9wPmp29mAQ651zZ6j3RdNyik8aiqWs.YeP9kHtE16Qt5H3oz3Ny4SJxvbc8u0cDBVwJi0rq2c8DwrNpN2sPinNFmz3LU26C6CXwioP4Fr79PFT1kLgMNHxS1T8LOYiEBKQB6bqWmmSPe2NdgwHfTLkqCffG9rEzD7PG2ORKnxgzXjlmxQS68oPoEuFPD.EC9tYuScbrGLh6qSELdHb6H8EYDF6v5xTHXwdBPVUXzIjzKOEHPi1VdCYjtSvvM92q3KV_S7D73VtGrthhzRtkmW07q6E5v2IyrAwE7tNkYUGkUdR59J4kn8Ges1jvYJ73u0rgAD5Xl9rTteOTyV06IDVobT3zSaaPPYaUw6pSSmSGHfV5zwWumGC5cbx70kSRoaYOsHRisRhWDOIgDDcKZSqiKYt1JVn1wK6YPcjJbW6YTJK5gVe9tDs6BVvjzVJYxKIK6uWhyxQGC1ucqwEtineBlPN6dRCUmj7C55Ofpe1x4f4fYXaRa7UN7nG6oiJuBtH08zgj1FIjx9oWk84AWEGnuvOWYzCZycNaxnXaPj86cxeYiCuuuuIUQdo3ZTkuYc7vdD6noRL25ES1odXAfeVr.2CiEaqwmDVTSmsBNkLFvCjckSRQszuPBwcxT9okEVJKEodSbYTm9j2AxfC69LWTnWhiMVFLZSJthowtUTFMBIHH1f6BaFaln9GslQRprOyy03Yfq1Fx8SLJ3zwG14NiqdwizBiXsWXT46oDh3TUifZ3YADzBX3e_D_4SnqsPI1TaWhVln6srwnqnP0Vdd_3l6KHXroyJsWR3xs7F0Gf9sMyoJGHTAEqPUNFR7zbT38BaEKxCwdf53WlCzP4lx1RoU8bG0sXsQbVJiUVA7N8VHFHSBZXCV0UEuO3VnslWx2AeQOuZj7.eme6TWM.v8yYpmoifabpmjqqDLULBiCIqBJRt5JNYH8eQ0ljQZ8xEuFoipsMPdvUUnE6SrKJtQkgb5BBDuj6uFYY1SfLJE7qSif0HoeuIXSQphPtTTKu31JDyXnozltAnrsBovrmEq.V21KKdhZEFDoRaeyIbwUazwZjkQsbKrHBboXaBBlWw2NYD6l1YfoINXYB45dawWEIYUeVa8ZpuY3QpK0JvIuWtZQHnnnf9Isy_CWfvVnlfoYLiAfHpGitfgoIklgjPBzYgtJnLViuZcw8Ws8i3MadtDtQymqmgNVw7TbBxB3C_jiBD7.4znCnaGAyZt3PE2xJg900opNCfAc2ra8x7jXNrn6ltZ2VdWaMV5bDx7bZXnoy9ROOtDF7NRTFM1TRiU6S.bdjhpjfohjPA9EiCGXtM6D0VRaAIrO9cf1cFoqplBdHw4SpEhiyod4BWa7iTDpbATHxCXa09T3XLmELpD22lKF5XY2Lz.hkMSfpG0p3lxWbzzNSP20k5xq3EO2set4ui9vSRYSqmtlKoMeMN2QzxSnxC9drFGforjwAHRk2CUXSuLVs0bg.wYDhJKngPu.AryhbZ3hdp9Q5Z4DTBswdQaRyOlRJiXjWAi2dwZPtN5NlSTYbi79t6padP5162rqhB7unp4fl5hU4hY2BH4PN50eK05s4jF1ipGNabGnFkZqE.mKJ0C_ya8aS8Zu1z8P6Byx5NCU4aLYL7TMaGlgMjq8d3sXuyXbX7OnEkgeItSvNzEFnvRgKgDQrccJSWHUzDEEJIbuftRb2btJMWAxSgVsdzHbHB0vafDkNfwo6kwEvnQEm4sHU2cm2zFaxTzEtdB5pPuRcqUZBqFZv30y0wdacX2qjlIXCJuKn5F9J6OqR2YdoKbLgzTV7Y9UtIBPtoftOQg8avqpBSt5FA3lgbcf07XJmXbofk9UNiislmpzdmn9rZc67SAe5hIRY35eG2ngvGr_olxqxxmnhU5ZM5vzOqaewMWZYqAuwnIwQylHzL8cMC177UpiajakjD556bP1pOM9G0dQABSzagkVdADdD2vNFzLWiODYUfGkSf8QbTdnsl14xkgobMV1Z_Gb6meeJ2yTZQPyLz8jOFH9txs71jUHCLs7LAR8ur6MqIJRgAlgyw2cYsTXSlJdxcm69ZiEYgzpOylDLZvgM3cikdgDnUhsYkv25sjBc9YRnQfcssUq1UseggLqRv2K82HVkC_NpXZbTTcjxtPeTNUV8NzEUMtAduEeFkTgaS4iBQUBSRjgzEHBgFxz1.93NIKDDeys1U5hbY2ec9j9LYMrBnstYRPAEbC8LTtGlVcj32RnLOyzYw64rbgWhX.5GkzAK6r8opQeglyejKMxZB3GAhXfcDSTvqIgNTpcPluAmDQ8sQMnVKuA8NFv6ynETjQrb2mmi67IYCVUhit0r8RMmKKCAOX2PnFUhVE7xL0gw0t7dKd9cfVtSimYj0LlRaINgIp12C11D1iO3pXZdyz91Dp9G1OG6Xrap02kpfX5f1PklhrlpWNz7bFuK2Kpv_gQtLACNUx9EUSSxWSS7R3dXXQ2XN89abgUH0pEA84BAp7cbEdqO7e2lLhzbVzF6n5MuVcKXA09mtW0BIOxUr9j8Tk3SfKGzuM1Lo5BPYbADDVBE1VqU31xkfSy5ZL2bW9cquk2sr3J4hsEEoFMx6gv50gCsC5bMgTk8fX9SiVQn5uNLDtPuq9r839VZro70xZ5aoUftOtgvds2Knh60vDKthAzgsVzhXwjQKxVRRfFXrfFOZS7SGkR9LMXAYRLS3HzF7oeH19gelceXeVdIeS0XUGauARS_o4S3iS9eWHUDMid4w5rMB4T6QBkpUwzLDkrjM40RGBW5zIhPJ8zqwAcG0CXfZldVKKsAmYSKKvEgNde2WIc66egNBAcFDsIBBkkI1XNxB28YEwTdwXAc0yDSQ7j00goOpC0x6Lk0klfGRFTiJpk1jIFTm7PnS.oDNHBlNilqoPCutw0YAJTN8kWDH49GtlDyLZ3K7uVU9KPetpImkkn5IfRSuXPagSP2tcC7PTbdGu8Pg05dAszryJtGAYfTvDVgJzsoqebglFomz1rsJ44HvwdEJCSuelMZCu3V.LQ9fcbNnCray7LS2gOTctN65nRIBc6UT96PeEg64JTnwyHpbjmE2plCRorGXsSt1jIGgi9aOJefGapgNk.F8RhKO5V1KTwhDH7lUFGo8GvFNqNCSVQZqZ8PXCXaRFPjmFZDG9WU4SIcY2jGbp', )
            )
        else:
            return ManagedClusterProperties(
        )
        """

    def testManagedClusterProperties(self):
        """Test ManagedClusterProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
