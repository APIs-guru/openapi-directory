# coding: utf-8

"""
    ContainerServiceClient

    The Container Service Client.

    The version of the OpenAPI document: 2019-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.managed_cluster_upgrade_profile import ManagedClusterUpgradeProfile

class TestManagedClusterUpgradeProfile(unittest.TestCase):
    """ManagedClusterUpgradeProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManagedClusterUpgradeProfile:
        """Test ManagedClusterUpgradeProfile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManagedClusterUpgradeProfile`
        """
        model = ManagedClusterUpgradeProfile()
        if include_optional:
            return ManagedClusterUpgradeProfile(
                id = '',
                name = '',
                properties = openapi_client.models.managed_cluster_upgrade_profile_properties.ManagedClusterUpgradeProfileProperties(
                    agent_pool_profiles = [
                        openapi_client.models.managed_cluster_pool_upgrade_profile.ManagedClusterPoolUpgradeProfile(
                            kubernetes_version = '', 
                            name = '', 
                            os_type = 'Linux', 
                            upgrades = [
                                openapi_client.models.agent_pool_upgrade_profile_properties_upgrades_inner.AgentPoolUpgradeProfileProperties_upgrades_inner(
                                    is_preview = True, 
                                    kubernetes_version = '', )
                                ], )
                        ], 
                    control_plane_profile = openapi_client.models.managed_cluster_pool_upgrade_profile.ManagedClusterPoolUpgradeProfile(
                        kubernetes_version = '', 
                        name = '', 
                        os_type = 'Linux', ), ),
                type = ''
            )
        else:
            return ManagedClusterUpgradeProfile(
                properties = openapi_client.models.managed_cluster_upgrade_profile_properties.ManagedClusterUpgradeProfileProperties(
                    agent_pool_profiles = [
                        openapi_client.models.managed_cluster_pool_upgrade_profile.ManagedClusterPoolUpgradeProfile(
                            kubernetes_version = '', 
                            name = '', 
                            os_type = 'Linux', 
                            upgrades = [
                                openapi_client.models.agent_pool_upgrade_profile_properties_upgrades_inner.AgentPoolUpgradeProfileProperties_upgrades_inner(
                                    is_preview = True, 
                                    kubernetes_version = '', )
                                ], )
                        ], 
                    control_plane_profile = openapi_client.models.managed_cluster_pool_upgrade_profile.ManagedClusterPoolUpgradeProfile(
                        kubernetes_version = '', 
                        name = '', 
                        os_type = 'Linux', ), ),
        )
        """

    def testManagedClusterUpgradeProfile(self):
        """Test ManagedClusterUpgradeProfile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
