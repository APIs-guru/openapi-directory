# coding: utf-8

"""
    MarketplaceOrdering.Agreements

    REST API for MarketplaceOrdering Agreements.

    The version of the OpenAPI document: 2015-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.agreement_terms import AgreementTerms

class TestAgreementTerms(unittest.TestCase):
    """AgreementTerms unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AgreementTerms:
        """Test AgreementTerms
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AgreementTerms`
        """
        model = AgreementTerms()
        if include_optional:
            return AgreementTerms(
                properties = openapi_client.models.agreement_properties.AgreementProperties(
                    accepted = True, 
                    license_text_link = '', 
                    plan = '', 
                    privacy_policy_link = '', 
                    product = '', 
                    publisher = '', 
                    retrieve_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    signature = '', ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return AgreementTerms(
        )
        """

    def testAgreementTerms(self):
        """Test AgreementTerms"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
