# coding: utf-8

"""
    AppPlatformManagementClient

    REST API for Azure Spring Cloud

    The version of the OpenAPI document: 2019-05-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.git_pattern_repository import GitPatternRepository

class TestGitPatternRepository(unittest.TestCase):
    """GitPatternRepository unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GitPatternRepository:
        """Test GitPatternRepository
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GitPatternRepository`
        """
        model = GitPatternRepository()
        if include_optional:
            return GitPatternRepository(
                host_key = '',
                host_key_algorithm = '',
                label = '',
                name = '',
                password = '',
                pattern = [
                    ''
                    ],
                private_key = '',
                search_paths = [
                    ''
                    ],
                strict_host_key_checking = True,
                uri = '',
                username = ''
            )
        else:
            return GitPatternRepository(
                name = '',
                uri = '',
        )
        """

    def testGitPatternRepository(self):
        """Test GitPatternRepository"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
