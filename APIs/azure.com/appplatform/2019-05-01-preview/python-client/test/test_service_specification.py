# coding: utf-8

"""
    AppPlatformManagementClient

    REST API for Azure Spring Cloud

    The version of the OpenAPI document: 2019-05-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_specification import ServiceSpecification

class TestServiceSpecification(unittest.TestCase):
    """ServiceSpecification unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceSpecification:
        """Test ServiceSpecification
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceSpecification`
        """
        model = ServiceSpecification()
        if include_optional:
            return ServiceSpecification(
                log_specifications = [
                    openapi_client.models.log_specification.LogSpecification(
                        blob_duration = '', 
                        display_name = '', 
                        name = '', )
                    ],
                metric_specifications = [
                    openapi_client.models.metric_specification.MetricSpecification(
                        aggregation_type = '', 
                        category = '', 
                        dimensions = [
                            openapi_client.models.metric_dimension.MetricDimension(
                                display_name = '', 
                                name = '', )
                            ], 
                        display_description = '', 
                        display_name = '', 
                        fill_gap_with_zero = True, 
                        name = '', 
                        supported_aggregation_types = [
                            ''
                            ], 
                        supported_time_grain_types = [
                            ''
                            ], 
                        unit = '', )
                    ]
            )
        else:
            return ServiceSpecification(
        )
        """

    def testServiceSpecification(self):
        """Test ServiceSpecification"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
