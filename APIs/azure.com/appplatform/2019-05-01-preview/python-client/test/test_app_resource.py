# coding: utf-8

"""
    AppPlatformManagementClient

    REST API for Azure Spring Cloud

    The version of the OpenAPI document: 2019-05-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_resource import AppResource

class TestAppResource(unittest.TestCase):
    """AppResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppResource:
        """Test AppResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppResource`
        """
        model = AppResource()
        if include_optional:
            return AppResource(
                properties = openapi_client.models.app_resource_properties.AppResourceProperties(
                    active_deployment_name = '', 
                    created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    persistent_disk = openapi_client.models.persistent_disk.PersistentDisk(
                        mount_path = '', 
                        size_in_gb = 0, 
                        used_in_gb = 0, ), 
                    provisioning_state = 'Succeeded', 
                    public = True, 
                    temporary_disk = openapi_client.models.temporary_disk.TemporaryDisk(
                        mount_path = '', 
                        size_in_gb = 0, ), 
                    url = '', ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return AppResource(
        )
        """

    def testAppResource(self):
        """Test AppResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
