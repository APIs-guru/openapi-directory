# coding: utf-8

"""
    AppPlatformManagementClient

    REST API for Azure Spring Cloud

    The version of the OpenAPI document: 2019-05-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.binding_resource_collection import BindingResourceCollection

class TestBindingResourceCollection(unittest.TestCase):
    """BindingResourceCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BindingResourceCollection:
        """Test BindingResourceCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BindingResourceCollection`
        """
        model = BindingResourceCollection()
        if include_optional:
            return BindingResourceCollection(
                next_link = '',
                value = [
                    openapi_client.models.binding_resource.BindingResource(
                        properties = openapi_client.models.binding_resource_properties.BindingResourceProperties(
                            binding_parameters = {
                                'key' : None
                                }, 
                            created_at = '', 
                            generated_properties = '', 
                            key = '', 
                            resource_id = '', 
                            resource_name = '', 
                            resource_type = '', 
                            updated_at = '', ), )
                    ]
            )
        else:
            return BindingResourceCollection(
        )
        """

    def testBindingResourceCollection(self):
        """Test BindingResourceCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
