# coding: utf-8

"""
    DatabricksClient

    ARM Databricks

    The version of the OpenAPI document: 2018-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.workspace import Workspace

class TestWorkspace(unittest.TestCase):
    """Workspace unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Workspace:
        """Test Workspace
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Workspace`
        """
        model = Workspace()
        if include_optional:
            return Workspace(
                properties = openapi_client.models.workspace_properties.WorkspaceProperties(
                    authorizations = [
                        openapi_client.models.workspace_provider_authorization.WorkspaceProviderAuthorization(
                            principal_id = '', 
                            role_definition_id = '', )
                        ], 
                    managed_resource_group_id = '', 
                    parameters = openapi_client.models.workspace_custom_parameters.WorkspaceCustomParameters(
                        aml_workspace_id = openapi_client.models.workspace_custom_string_parameter.WorkspaceCustomStringParameter(
                            type = 'Bool', 
                            value = '', ), 
                        custom_private_subnet_name = openapi_client.models.workspace_custom_string_parameter.WorkspaceCustomStringParameter(
                            value = '', ), 
                        custom_public_subnet_name = , 
                        custom_virtual_network_id = , 
                        enable_no_public_ip = openapi_client.models.workspace_custom_boolean_parameter.WorkspaceCustomBooleanParameter(
                            value = True, ), 
                        load_balancer_backend_pool_name = , 
                        load_balancer_id = , 
                        relay_namespace_name = , 
                        resource_tags = openapi_client.models.workspace_custom_object_parameter.WorkspaceCustomObjectParameter(
                            value = openapi_client.models.value.value(), ), 
                        storage_account_name = , 
                        storage_account_sku_name = , 
                        vnet_address_prefix = , ), 
                    provisioning_state = 'Accepted', 
                    ui_definition_uri = '', ),
                sku = openapi_client.models.sku.Sku(
                    name = '', 
                    tier = '', ),
                location = '',
                tags = {
                    'key' : ''
                    },
                id = '',
                name = '',
                type = ''
            )
        else:
            return Workspace(
                properties = openapi_client.models.workspace_properties.WorkspaceProperties(
                    authorizations = [
                        openapi_client.models.workspace_provider_authorization.WorkspaceProviderAuthorization(
                            principal_id = '', 
                            role_definition_id = '', )
                        ], 
                    managed_resource_group_id = '', 
                    parameters = openapi_client.models.workspace_custom_parameters.WorkspaceCustomParameters(
                        aml_workspace_id = openapi_client.models.workspace_custom_string_parameter.WorkspaceCustomStringParameter(
                            type = 'Bool', 
                            value = '', ), 
                        custom_private_subnet_name = openapi_client.models.workspace_custom_string_parameter.WorkspaceCustomStringParameter(
                            value = '', ), 
                        custom_public_subnet_name = , 
                        custom_virtual_network_id = , 
                        enable_no_public_ip = openapi_client.models.workspace_custom_boolean_parameter.WorkspaceCustomBooleanParameter(
                            value = True, ), 
                        load_balancer_backend_pool_name = , 
                        load_balancer_id = , 
                        relay_namespace_name = , 
                        resource_tags = openapi_client.models.workspace_custom_object_parameter.WorkspaceCustomObjectParameter(
                            value = openapi_client.models.value.value(), ), 
                        storage_account_name = , 
                        storage_account_sku_name = , 
                        vnet_address_prefix = , ), 
                    provisioning_state = 'Accepted', 
                    ui_definition_uri = '', ),
                location = '',
        )
        """

    def testWorkspace(self):
        """Test Workspace"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
