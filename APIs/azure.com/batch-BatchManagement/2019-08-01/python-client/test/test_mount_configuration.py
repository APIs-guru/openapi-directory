# coding: utf-8

"""
    BatchManagement

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mount_configuration import MountConfiguration

class TestMountConfiguration(unittest.TestCase):
    """MountConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MountConfiguration:
        """Test MountConfiguration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MountConfiguration`
        """
        model = MountConfiguration()
        if include_optional:
            return MountConfiguration(
                azure_blob_file_system_configuration = openapi_client.models.information_used_to_connect_to_an_azure_storage_container_using_blobfuse/.Information used to connect to an Azure Storage Container using Blobfuse.(
                    account_key = '', 
                    account_name = '', 
                    blobfuse_options = '', 
                    container_name = '', 
                    relative_mount_path = '', 
                    sas_key = '', ),
                azure_file_share_configuration = openapi_client.models.information_used_to_connect_to_an_azure_fileshare/.Information used to connect to an Azure Fileshare.(
                    account_key = '', 
                    account_name = '', 
                    azure_file_url = '', 
                    mount_options = '', 
                    relative_mount_path = '', ),
                cifs_mount_configuration = openapi_client.models.information_used_to_connect_to_a_cifs_file_system/.Information used to connect to a CIFS file system.(
                    mount_options = '', 
                    password = '', 
                    relative_mount_path = '', 
                    source = '', 
                    username = '', ),
                nfs_mount_configuration = openapi_client.models.information_used_to_connect_to_an_nfs_file_system/.Information used to connect to an NFS file system.(
                    mount_options = '', 
                    relative_mount_path = '', 
                    source = '', )
            )
        else:
            return MountConfiguration(
        )
        """

    def testMountConfiguration(self):
        """Test MountConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
