# coding: utf-8

"""
    BatchManagement

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2015-12-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing_extensions import Annotated
from openapi_client.models.activate_application_package_parameters import ActivateApplicationPackageParameters
from openapi_client.models.application_package import ApplicationPackage

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class ApplicationPackageApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def application_package_activate(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="The name of the resource group that contains the Batch account.")],
        account_name: Annotated[str, Field(min_length=3, strict=True, max_length=24, description="The name of the Batch account.")],
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        version: Annotated[StrictStr, Field(description="The version of the application to activate.")],
        api_version: Annotated[StrictStr, Field(description="The API version to be used with the HTTP request.")],
        subscription_id: Annotated[StrictStr, Field(description="A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        parameters: Annotated[ActivateApplicationPackageParameters, Field(description="The parameters for the request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """application_package_activate

        Activates the specified application package.

        :param resource_group_name: The name of the resource group that contains the Batch account. (required)
        :type resource_group_name: str
        :param account_name: The name of the Batch account. (required)
        :type account_name: str
        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param version: The version of the application to activate. (required)
        :type version: str
        :param api_version: The API version to be used with the HTTP request. (required)
        :type api_version: str
        :param subscription_id: A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param parameters: The parameters for the request. (required)
        :type parameters: ActivateApplicationPackageParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_package_activate_serialize(
            resource_group_name=resource_group_name,
            account_name=account_name,
            application_id=application_id,
            version=version,
            api_version=api_version,
            subscription_id=subscription_id,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_package_activate_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="The name of the resource group that contains the Batch account.")],
        account_name: Annotated[str, Field(min_length=3, strict=True, max_length=24, description="The name of the Batch account.")],
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        version: Annotated[StrictStr, Field(description="The version of the application to activate.")],
        api_version: Annotated[StrictStr, Field(description="The API version to be used with the HTTP request.")],
        subscription_id: Annotated[StrictStr, Field(description="A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        parameters: Annotated[ActivateApplicationPackageParameters, Field(description="The parameters for the request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """application_package_activate

        Activates the specified application package.

        :param resource_group_name: The name of the resource group that contains the Batch account. (required)
        :type resource_group_name: str
        :param account_name: The name of the Batch account. (required)
        :type account_name: str
        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param version: The version of the application to activate. (required)
        :type version: str
        :param api_version: The API version to be used with the HTTP request. (required)
        :type api_version: str
        :param subscription_id: A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param parameters: The parameters for the request. (required)
        :type parameters: ActivateApplicationPackageParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_package_activate_serialize(
            resource_group_name=resource_group_name,
            account_name=account_name,
            application_id=application_id,
            version=version,
            api_version=api_version,
            subscription_id=subscription_id,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_package_activate_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="The name of the resource group that contains the Batch account.")],
        account_name: Annotated[str, Field(min_length=3, strict=True, max_length=24, description="The name of the Batch account.")],
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        version: Annotated[StrictStr, Field(description="The version of the application to activate.")],
        api_version: Annotated[StrictStr, Field(description="The API version to be used with the HTTP request.")],
        subscription_id: Annotated[StrictStr, Field(description="A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        parameters: Annotated[ActivateApplicationPackageParameters, Field(description="The parameters for the request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """application_package_activate

        Activates the specified application package.

        :param resource_group_name: The name of the resource group that contains the Batch account. (required)
        :type resource_group_name: str
        :param account_name: The name of the Batch account. (required)
        :type account_name: str
        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param version: The version of the application to activate. (required)
        :type version: str
        :param api_version: The API version to be used with the HTTP request. (required)
        :type api_version: str
        :param subscription_id: A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param parameters: The parameters for the request. (required)
        :type parameters: ActivateApplicationPackageParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_package_activate_serialize(
            resource_group_name=resource_group_name,
            account_name=account_name,
            application_id=application_id,
            version=version,
            api_version=api_version,
            subscription_id=subscription_id,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_package_activate_serialize(
        self,
        resource_group_name,
        account_name,
        application_id,
        version,
        api_version,
        subscription_id,
        parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if account_name is not None:
            _path_params['accountName'] = account_name
        if application_id is not None:
            _path_params['applicationId'] = application_id
        if version is not None:
            _path_params['version'] = version
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if parameters is not None:
            _body_params = parameters


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationId}/versions/{version}/activate',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def application_package_create(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="The name of the resource group that contains the Batch account.")],
        account_name: Annotated[str, Field(min_length=3, strict=True, max_length=24, description="The name of the Batch account.")],
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        version: Annotated[StrictStr, Field(description="The version of the application.")],
        api_version: Annotated[StrictStr, Field(description="The API version to be used with the HTTP request.")],
        subscription_id: Annotated[StrictStr, Field(description="A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApplicationPackage:
        """application_package_create

        Creates an application package record.

        :param resource_group_name: The name of the resource group that contains the Batch account. (required)
        :type resource_group_name: str
        :param account_name: The name of the Batch account. (required)
        :type account_name: str
        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param version: The version of the application. (required)
        :type version: str
        :param api_version: The API version to be used with the HTTP request. (required)
        :type api_version: str
        :param subscription_id: A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_package_create_serialize(
            resource_group_name=resource_group_name,
            account_name=account_name,
            application_id=application_id,
            version=version,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "ApplicationPackage",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_package_create_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="The name of the resource group that contains the Batch account.")],
        account_name: Annotated[str, Field(min_length=3, strict=True, max_length=24, description="The name of the Batch account.")],
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        version: Annotated[StrictStr, Field(description="The version of the application.")],
        api_version: Annotated[StrictStr, Field(description="The API version to be used with the HTTP request.")],
        subscription_id: Annotated[StrictStr, Field(description="A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ApplicationPackage]:
        """application_package_create

        Creates an application package record.

        :param resource_group_name: The name of the resource group that contains the Batch account. (required)
        :type resource_group_name: str
        :param account_name: The name of the Batch account. (required)
        :type account_name: str
        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param version: The version of the application. (required)
        :type version: str
        :param api_version: The API version to be used with the HTTP request. (required)
        :type api_version: str
        :param subscription_id: A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_package_create_serialize(
            resource_group_name=resource_group_name,
            account_name=account_name,
            application_id=application_id,
            version=version,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "ApplicationPackage",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_package_create_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="The name of the resource group that contains the Batch account.")],
        account_name: Annotated[str, Field(min_length=3, strict=True, max_length=24, description="The name of the Batch account.")],
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        version: Annotated[StrictStr, Field(description="The version of the application.")],
        api_version: Annotated[StrictStr, Field(description="The API version to be used with the HTTP request.")],
        subscription_id: Annotated[StrictStr, Field(description="A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """application_package_create

        Creates an application package record.

        :param resource_group_name: The name of the resource group that contains the Batch account. (required)
        :type resource_group_name: str
        :param account_name: The name of the Batch account. (required)
        :type account_name: str
        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param version: The version of the application. (required)
        :type version: str
        :param api_version: The API version to be used with the HTTP request. (required)
        :type api_version: str
        :param subscription_id: A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_package_create_serialize(
            resource_group_name=resource_group_name,
            account_name=account_name,
            application_id=application_id,
            version=version,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "ApplicationPackage",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_package_create_serialize(
        self,
        resource_group_name,
        account_name,
        application_id,
        version,
        api_version,
        subscription_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if account_name is not None:
            _path_params['accountName'] = account_name
        if application_id is not None:
            _path_params['applicationId'] = application_id
        if version is not None:
            _path_params['version'] = version
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationId}/versions/{version}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def application_package_delete(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="The name of the resource group that contains the Batch account.")],
        account_name: Annotated[str, Field(min_length=3, strict=True, max_length=24, description="The name of the Batch account.")],
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        version: Annotated[StrictStr, Field(description="The version of the application to delete.")],
        api_version: Annotated[StrictStr, Field(description="The API version to be used with the HTTP request.")],
        subscription_id: Annotated[StrictStr, Field(description="A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """application_package_delete

        Deletes an application package record and its associated binary file.

        :param resource_group_name: The name of the resource group that contains the Batch account. (required)
        :type resource_group_name: str
        :param account_name: The name of the Batch account. (required)
        :type account_name: str
        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param version: The version of the application to delete. (required)
        :type version: str
        :param api_version: The API version to be used with the HTTP request. (required)
        :type api_version: str
        :param subscription_id: A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_package_delete_serialize(
            resource_group_name=resource_group_name,
            account_name=account_name,
            application_id=application_id,
            version=version,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_package_delete_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="The name of the resource group that contains the Batch account.")],
        account_name: Annotated[str, Field(min_length=3, strict=True, max_length=24, description="The name of the Batch account.")],
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        version: Annotated[StrictStr, Field(description="The version of the application to delete.")],
        api_version: Annotated[StrictStr, Field(description="The API version to be used with the HTTP request.")],
        subscription_id: Annotated[StrictStr, Field(description="A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """application_package_delete

        Deletes an application package record and its associated binary file.

        :param resource_group_name: The name of the resource group that contains the Batch account. (required)
        :type resource_group_name: str
        :param account_name: The name of the Batch account. (required)
        :type account_name: str
        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param version: The version of the application to delete. (required)
        :type version: str
        :param api_version: The API version to be used with the HTTP request. (required)
        :type api_version: str
        :param subscription_id: A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_package_delete_serialize(
            resource_group_name=resource_group_name,
            account_name=account_name,
            application_id=application_id,
            version=version,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_package_delete_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="The name of the resource group that contains the Batch account.")],
        account_name: Annotated[str, Field(min_length=3, strict=True, max_length=24, description="The name of the Batch account.")],
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        version: Annotated[StrictStr, Field(description="The version of the application to delete.")],
        api_version: Annotated[StrictStr, Field(description="The API version to be used with the HTTP request.")],
        subscription_id: Annotated[StrictStr, Field(description="A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """application_package_delete

        Deletes an application package record and its associated binary file.

        :param resource_group_name: The name of the resource group that contains the Batch account. (required)
        :type resource_group_name: str
        :param account_name: The name of the Batch account. (required)
        :type account_name: str
        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param version: The version of the application to delete. (required)
        :type version: str
        :param api_version: The API version to be used with the HTTP request. (required)
        :type api_version: str
        :param subscription_id: A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_package_delete_serialize(
            resource_group_name=resource_group_name,
            account_name=account_name,
            application_id=application_id,
            version=version,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_package_delete_serialize(
        self,
        resource_group_name,
        account_name,
        application_id,
        version,
        api_version,
        subscription_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if account_name is not None:
            _path_params['accountName'] = account_name
        if application_id is not None:
            _path_params['applicationId'] = application_id
        if version is not None:
            _path_params['version'] = version
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationId}/versions/{version}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def application_package_get(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="The name of the resource group that contains the Batch account.")],
        account_name: Annotated[str, Field(min_length=3, strict=True, max_length=24, description="The name of the Batch account.")],
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        version: Annotated[StrictStr, Field(description="The version of the application.")],
        api_version: Annotated[StrictStr, Field(description="The API version to be used with the HTTP request.")],
        subscription_id: Annotated[StrictStr, Field(description="A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApplicationPackage:
        """application_package_get

        Gets information about the specified application package.

        :param resource_group_name: The name of the resource group that contains the Batch account. (required)
        :type resource_group_name: str
        :param account_name: The name of the Batch account. (required)
        :type account_name: str
        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param version: The version of the application. (required)
        :type version: str
        :param api_version: The API version to be used with the HTTP request. (required)
        :type api_version: str
        :param subscription_id: A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_package_get_serialize(
            resource_group_name=resource_group_name,
            account_name=account_name,
            application_id=application_id,
            version=version,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationPackage",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_package_get_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="The name of the resource group that contains the Batch account.")],
        account_name: Annotated[str, Field(min_length=3, strict=True, max_length=24, description="The name of the Batch account.")],
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        version: Annotated[StrictStr, Field(description="The version of the application.")],
        api_version: Annotated[StrictStr, Field(description="The API version to be used with the HTTP request.")],
        subscription_id: Annotated[StrictStr, Field(description="A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ApplicationPackage]:
        """application_package_get

        Gets information about the specified application package.

        :param resource_group_name: The name of the resource group that contains the Batch account. (required)
        :type resource_group_name: str
        :param account_name: The name of the Batch account. (required)
        :type account_name: str
        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param version: The version of the application. (required)
        :type version: str
        :param api_version: The API version to be used with the HTTP request. (required)
        :type api_version: str
        :param subscription_id: A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_package_get_serialize(
            resource_group_name=resource_group_name,
            account_name=account_name,
            application_id=application_id,
            version=version,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationPackage",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_package_get_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="The name of the resource group that contains the Batch account.")],
        account_name: Annotated[str, Field(min_length=3, strict=True, max_length=24, description="The name of the Batch account.")],
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        version: Annotated[StrictStr, Field(description="The version of the application.")],
        api_version: Annotated[StrictStr, Field(description="The API version to be used with the HTTP request.")],
        subscription_id: Annotated[StrictStr, Field(description="A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """application_package_get

        Gets information about the specified application package.

        :param resource_group_name: The name of the resource group that contains the Batch account. (required)
        :type resource_group_name: str
        :param account_name: The name of the Batch account. (required)
        :type account_name: str
        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param version: The version of the application. (required)
        :type version: str
        :param api_version: The API version to be used with the HTTP request. (required)
        :type api_version: str
        :param subscription_id: A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_package_get_serialize(
            resource_group_name=resource_group_name,
            account_name=account_name,
            application_id=application_id,
            version=version,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationPackage",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_package_get_serialize(
        self,
        resource_group_name,
        account_name,
        application_id,
        version,
        api_version,
        subscription_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if account_name is not None:
            _path_params['accountName'] = account_name
        if application_id is not None:
            _path_params['applicationId'] = application_id
        if version is not None:
            _path_params['version'] = version
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationId}/versions/{version}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


