# coding: utf-8

"""
    BatchManagement

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-12-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_certificates_result import ListCertificatesResult

class TestListCertificatesResult(unittest.TestCase):
    """ListCertificatesResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListCertificatesResult:
        """Test ListCertificatesResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListCertificatesResult`
        """
        model = ListCertificatesResult()
        if include_optional:
            return ListCertificatesResult(
                next_link = '',
                value = [
                    openapi_client.models.certificate.Certificate(
                        properties = openapi_client.models.certificate_properties.CertificateProperties(
                            delete_certificate_error = openapi_client.models.delete_certificate_error.DeleteCertificateError(
                                code = '', 
                                details = [
                                    openapi_client.models.delete_certificate_error.DeleteCertificateError(
                                        code = '', 
                                        message = '', 
                                        target = '', )
                                    ], 
                                message = '', 
                                target = '', ), 
                            previous_provisioning_state = 'Succeeded', 
                            previous_provisioning_state_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            provisioning_state = 'Succeeded', 
                            provisioning_state_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            public_data = '', ), )
                    ]
            )
        else:
            return ListCertificatesResult(
        )
        """

    def testListCertificatesResult(self):
        """Test ListCertificatesResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
