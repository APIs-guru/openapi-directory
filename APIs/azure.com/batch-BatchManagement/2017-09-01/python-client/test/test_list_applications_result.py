# coding: utf-8

"""
    BatchManagement

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2017-09-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_applications_result import ListApplicationsResult

class TestListApplicationsResult(unittest.TestCase):
    """ListApplicationsResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListApplicationsResult:
        """Test ListApplicationsResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListApplicationsResult`
        """
        model = ListApplicationsResult()
        if include_optional:
            return ListApplicationsResult(
                next_link = '',
                value = [
                    openapi_client.models.application.Application(
                        allow_updates = True, 
                        default_version = '', 
                        display_name = '', 
                        id = '', 
                        packages = [
                            openapi_client.models.application_package.ApplicationPackage(
                                format = '', 
                                id = '', 
                                last_activation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                state = 'Pending', 
                                storage_url = '', 
                                storage_url_expiry = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                version = '', )
                            ], )
                    ]
            )
        else:
            return ListApplicationsResult(
        )
        """

    def testListApplicationsResult(self):
        """Test ListApplicationsResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
