# coding: utf-8

"""
    WebApplicationFirewallManagement

    APIs to manage web application firewall rules.

    The version of the OpenAPI document: 2019-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.managed_rule_set_list import ManagedRuleSetList

class TestManagedRuleSetList(unittest.TestCase):
    """ManagedRuleSetList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManagedRuleSetList:
        """Test ManagedRuleSetList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManagedRuleSetList`
        """
        model = ManagedRuleSetList()
        if include_optional:
            return ManagedRuleSetList(
                managed_rule_sets = [
                    openapi_client.models.managed_rule_set.ManagedRuleSet(
                        exclusions = [
                            openapi_client.models.managed_rule_exclusion.ManagedRuleExclusion(
                                match_variable = 'RequestHeaderNames', 
                                selector = '', 
                                selector_match_operator = 'Equals', )
                            ], 
                        rule_group_overrides = [
                            openapi_client.models.managed_rule_group_override.ManagedRuleGroupOverride(
                                rule_group_name = '', 
                                rules = [
                                    openapi_client.models.managed_rule_override.ManagedRuleOverride(
                                        action = 'Allow', 
                                        enabled_state = 'Disabled', 
                                        rule_id = '', )
                                    ], )
                            ], 
                        rule_set_type = '', 
                        rule_set_version = '', )
                    ]
            )
        else:
            return ManagedRuleSetList(
        )
        """

    def testManagedRuleSetList(self):
        """Test ManagedRuleSetList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
