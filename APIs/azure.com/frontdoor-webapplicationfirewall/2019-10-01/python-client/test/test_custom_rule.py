# coding: utf-8

"""
    WebApplicationFirewallManagement

    APIs to manage web application firewall rules.

    The version of the OpenAPI document: 2019-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.custom_rule import CustomRule

class TestCustomRule(unittest.TestCase):
    """CustomRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomRule:
        """Test CustomRule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomRule`
        """
        model = CustomRule()
        if include_optional:
            return CustomRule(
                action = 'Allow',
                enabled_state = 'Disabled',
                match_conditions = [
                    openapi_client.models.match_condition.MatchCondition(
                        match_value = [
                            ''
                            ], 
                        match_variable = 'RemoteAddr', 
                        negate_condition = True, 
                        operator = 'Any', 
                        selector = '', 
                        transforms = [
                            'Lowercase'
                            ], )
                    ],
                name = '',
                priority = 56,
                rate_limit_duration_in_minutes = 0,
                rate_limit_threshold = 0,
                rule_type = 'MatchRule'
            )
        else:
            return CustomRule(
                action = 'Allow',
                match_conditions = [
                    openapi_client.models.match_condition.MatchCondition(
                        match_value = [
                            ''
                            ], 
                        match_variable = 'RemoteAddr', 
                        negate_condition = True, 
                        operator = 'Any', 
                        selector = '', 
                        transforms = [
                            'Lowercase'
                            ], )
                    ],
                priority = 56,
                rule_type = 'MatchRule',
        )
        """

    def testCustomRule(self):
        """Test CustomRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
