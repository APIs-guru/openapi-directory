# coding: utf-8

"""
    WebApplicationFirewallManagement

    APIs to manage web application firewall rules.

    The version of the OpenAPI document: 2019-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.web_application_firewall_policy_list import WebApplicationFirewallPolicyList

class TestWebApplicationFirewallPolicyList(unittest.TestCase):
    """WebApplicationFirewallPolicyList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebApplicationFirewallPolicyList:
        """Test WebApplicationFirewallPolicyList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebApplicationFirewallPolicyList`
        """
        model = WebApplicationFirewallPolicyList()
        if include_optional:
            return WebApplicationFirewallPolicyList(
                next_link = '',
                value = [
                    openapi_client.models.web_application_firewall_policy.WebApplicationFirewallPolicy(
                        etag = '', 
                        properties = openapi_client.models.web_application_firewall_policy_properties.WebApplicationFirewallPolicyProperties(
                            custom_rules = openapi_client.models.custom_rule_list.CustomRuleList(
                                rules = [
                                    openapi_client.models.custom_rule.CustomRule(
                                        action = 'Allow', 
                                        enabled_state = 'Disabled', 
                                        match_conditions = [
                                            openapi_client.models.match_condition.MatchCondition(
                                                match_value = [
                                                    ''
                                                    ], 
                                                match_variable = 'RemoteAddr', 
                                                negate_condition = True, 
                                                operator = 'Any', 
                                                selector = '', 
                                                transforms = [
                                                    'Lowercase'
                                                    ], )
                                            ], 
                                        name = '', 
                                        priority = 56, 
                                        rate_limit_duration_in_minutes = 0, 
                                        rate_limit_threshold = 0, 
                                        rule_type = 'MatchRule', )
                                    ], ), 
                            frontend_endpoint_links = [
                                openapi_client.models.frontend_endpoint_link.FrontendEndpointLink(
                                    id = '', )
                                ], 
                            managed_rules = openapi_client.models.managed_rule_set_list.ManagedRuleSetList(
                                managed_rule_sets = [
                                    openapi_client.models.managed_rule_set.ManagedRuleSet(
                                        exclusions = [
                                            openapi_client.models.managed_rule_exclusion.ManagedRuleExclusion(
                                                match_variable = 'RequestHeaderNames', 
                                                selector = '', 
                                                selector_match_operator = 'Equals', )
                                            ], 
                                        rule_group_overrides = [
                                            openapi_client.models.managed_rule_group_override.ManagedRuleGroupOverride(
                                                rule_group_name = '', )
                                            ], 
                                        rule_set_type = '', 
                                        rule_set_version = '', )
                                    ], ), 
                            policy_settings = openapi_client.models.policy_settings.PolicySettings(
                                custom_block_response_body = 'zA9LCSLv1C1ylmgd0/Y2TA5TkIRHRRA401iz1CiIykN3HUO6XMsJPGh8AsaLONiNuo2ZPKNpkAmJHONf1Elbsh0SQR//', 
                                custom_block_response_status_code = 56, 
                                enabled_state = 'Disabled', 
                                mode = 'Prevention', 
                                redirect_url = '', ), 
                            provisioning_state = '', 
                            resource_state = 'Creating', ), )
                    ]
            )
        else:
            return WebApplicationFirewallPolicyList(
        )
        """

    def testWebApplicationFirewallPolicyList(self):
        """Test WebApplicationFirewallPolicyList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
