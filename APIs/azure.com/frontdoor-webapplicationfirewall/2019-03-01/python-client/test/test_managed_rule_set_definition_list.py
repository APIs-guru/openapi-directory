# coding: utf-8

"""
    WebApplicationFirewallManagement

    APIs to manage web application firewall rules.

    The version of the OpenAPI document: 2019-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.managed_rule_set_definition_list import ManagedRuleSetDefinitionList

class TestManagedRuleSetDefinitionList(unittest.TestCase):
    """ManagedRuleSetDefinitionList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManagedRuleSetDefinitionList:
        """Test ManagedRuleSetDefinitionList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManagedRuleSetDefinitionList`
        """
        model = ManagedRuleSetDefinitionList()
        if include_optional:
            return ManagedRuleSetDefinitionList(
                next_link = '',
                value = [
                    openapi_client.models.managed_rule_set_definition.ManagedRuleSetDefinition(
                        properties = openapi_client.models.managed_rule_set_definition_properties.ManagedRuleSetDefinitionProperties(
                            provisioning_state = '', 
                            rule_groups = [
                                openapi_client.models.managed_rule_group_definition.ManagedRuleGroupDefinition(
                                    description = '', 
                                    rule_group_name = '', 
                                    rules = [
                                        openapi_client.models.managed_rule_definition.ManagedRuleDefinition(
                                            default_action = 'Allow', 
                                            default_state = 'Disabled', 
                                            description = '', 
                                            rule_id = '', )
                                        ], )
                                ], 
                            rule_set_type = '', 
                            rule_set_version = '', ), )
                    ]
            )
        else:
            return ManagedRuleSetDefinitionList(
        )
        """

    def testManagedRuleSetDefinitionList(self):
        """Test ManagedRuleSetDefinitionList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
