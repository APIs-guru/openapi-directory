# coding: utf-8

"""
    Workload Monitor

    APIs for workload monitoring

    The version of the OpenAPI document: 2018-08-31-preview
    Contact: wlmengg@microsoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.monitor_properties import MonitorProperties

class TestMonitorProperties(unittest.TestCase):
    """MonitorProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MonitorProperties:
        """Test MonitorProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MonitorProperties`
        """
        model = MonitorProperties()
        if include_optional:
            return MonitorProperties(
                alert_generation = 'Enabled',
                component_type_display_name = '',
                component_type_id = '',
                component_type_name = '',
                criteria = [
                    openapi_client.models.monitor_criteria.MonitorCriteria(
                        comparison_operator = 'Equals', 
                        health_state = 'Error', 
                        threshold = 1.337, )
                    ],
                description = '',
                documentation_url = '',
                frequency = 56,
                lookback_duration = 56,
                monitor_category = 'AvailabilityHealth',
                monitor_display_name = '',
                monitor_id = '',
                monitor_name = '',
                monitor_state = 'Enabled',
                monitor_type = 'Aggregate',
                parent_monitor_display_name = '',
                parent_monitor_name = '',
                signal_name = '',
                signal_type = ''
            )
        else:
            return MonitorProperties(
        )
        """

    def testMonitorProperties(self):
        """Test MonitorProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
