# coding: utf-8

"""
    Security Center

    API spec for Microsoft.Security (Azure Security Center) resource provider

    The version of the OpenAPI document: 2015-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.adaptive_network_hardenings_list import AdaptiveNetworkHardeningsList

class TestAdaptiveNetworkHardeningsList(unittest.TestCase):
    """AdaptiveNetworkHardeningsList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdaptiveNetworkHardeningsList:
        """Test AdaptiveNetworkHardeningsList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdaptiveNetworkHardeningsList`
        """
        model = AdaptiveNetworkHardeningsList()
        if include_optional:
            return AdaptiveNetworkHardeningsList(
                next_link = '',
                value = [
                    openapi_client.models.adaptive_network_hardening.AdaptiveNetworkHardening(
                        properties = openapi_client.models.adaptive_network_hardening_properties.AdaptiveNetworkHardeningProperties(
                            effective_network_security_groups = [
                                openapi_client.models.effective_network_security_groups.EffectiveNetworkSecurityGroups(
                                    network_interface = '', 
                                    network_security_groups = [
                                        ''
                                        ], )
                                ], 
                            rules = [
                                openapi_client.models.rule.Rule(
                                    destination_port = 0, 
                                    direction = 'Inbound', 
                                    ip_addresses = [
                                        ''
                                        ], 
                                    name = '', 
                                    protocols = [
                                        'TCP'
                                        ], )
                                ], 
                            rules_calculation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                    ]
            )
        else:
            return AdaptiveNetworkHardeningsList(
        )
        """

    def testAdaptiveNetworkHardeningsList(self):
        """Test AdaptiveNetworkHardeningsList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
