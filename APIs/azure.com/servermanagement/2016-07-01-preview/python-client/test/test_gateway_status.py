# coding: utf-8

"""
    ServerManagement

    REST API for Azure Server Management Service.

    The version of the OpenAPI document: 2016-07-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.gateway_status import GatewayStatus

class TestGatewayStatus(unittest.TestCase):
    """GatewayStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GatewayStatus:
        """Test GatewayStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GatewayStatus`
        """
        model = GatewayStatus()
        if include_optional:
            return GatewayStatus(
                active_message_count = 56,
                allow_gateway_group_policy_status = True,
                available_memory_m_byte = 1.337,
                encryption_certificate_thumbprint = '',
                encryption_jwk = openapi_client.models.encryption_jwk_resource.EncryptionJwkResource(
                    alg = '', 
                    e = '', 
                    kty = '', 
                    n = '', ),
                friendly_os_name = '',
                gateway_cpu_utilization_percent = 0,
                gateway_id = '',
                gateway_version = '',
                gateway_working_set_m_byte = 1.337,
                group_policy_error = '',
                installed_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                latest_published_msi_version = '',
                logical_processor_count = 56,
                name = '',
                published_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                require_mfa_group_policy_status = True,
                secondary_encryption_certificate_thumbprint = '',
                secondary_encryption_jwk = openapi_client.models.encryption_jwk_resource.EncryptionJwkResource(
                    alg = '', 
                    e = '', 
                    kty = '', 
                    n = '', ),
                status_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                total_cpu_utilization_percent = 1.337
            )
        else:
            return GatewayStatus(
        )
        """

    def testGatewayStatus(self):
        """Test GatewayStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
