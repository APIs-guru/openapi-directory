# coding: utf-8

"""
    ServerManagement

    REST API for Azure Server Management Service.

    The version of the OpenAPI document: 2015-07-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.gateway_resources import GatewayResources

class TestGatewayResources(unittest.TestCase):
    """GatewayResources unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GatewayResources:
        """Test GatewayResources
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GatewayResources`
        """
        model = GatewayResources()
        if include_optional:
            return GatewayResources(
                next_link = '',
                value = [
                    openapi_client.models.gateway_resource.GatewayResource(
                        properties = openapi_client.models.properties.properties(
                            active_message_count = 56, 
                            auto_upgrade = 'On', 
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            desired_version = '', 
                            instances = [
                                openapi_client.models.gateway_status.GatewayStatus(
                                    available_memory_m_byte = 1.337, 
                                    friendly_os_name = '', 
                                    gateway_cpu_utilization_percent = 0, 
                                    gateway_id = '', 
                                    gateway_version = '', 
                                    gateway_working_set_m_byte = 1.337, 
                                    installed_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    logical_processor_count = 56, 
                                    name = '', 
                                    status_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    total_cpu_utilization_percent = 1.337, )
                                ], 
                            latest_published_msi_version = '', 
                            published_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                    ]
            )
        else:
            return GatewayResources(
        )
        """

    def testGatewayResources(self):
        """Test GatewayResources"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
