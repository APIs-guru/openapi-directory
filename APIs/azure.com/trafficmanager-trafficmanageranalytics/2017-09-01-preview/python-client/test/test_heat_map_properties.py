# coding: utf-8

"""
    TrafficManagerManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2017-09-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.heat_map_properties import HeatMapProperties

class TestHeatMapProperties(unittest.TestCase):
    """HeatMapProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HeatMapProperties:
        """Test HeatMapProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HeatMapProperties`
        """
        model = HeatMapProperties()
        if include_optional:
            return HeatMapProperties(
                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                endpoints = [
                    openapi_client.models.heat_map_endpoint.HeatMapEndpoint(
                        endpoint_id = 56, 
                        resource_id = '', )
                    ],
                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                traffic_flows = [
                    openapi_client.models.traffic_flow.TrafficFlow(
                        latitude = 1.337, 
                        longitude = 1.337, 
                        query_experiences = [
                            openapi_client.models.query_experience.QueryExperience(
                                endpoint_id = 56, 
                                latency = 1.337, 
                                query_count = 56, )
                            ], 
                        source_ip = '', )
                    ]
            )
        else:
            return HeatMapProperties(
        )
        """

    def testHeatMapProperties(self):
        """Test HeatMapProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
