# coding: utf-8

"""
    HealthcareApisClient

    Use this API to manage Microsoft HealthcareApis services in your Azure subscription.

    The version of the OpenAPI document: 2018-08-20-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.services_properties import ServicesProperties

class TestServicesProperties(unittest.TestCase):
    """ServicesProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServicesProperties:
        """Test ServicesProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServicesProperties`
        """
        model = ServicesProperties()
        if include_optional:
            return ServicesProperties(
                access_policies = [
                    openapi_client.models.service_access_policy_entry.ServiceAccessPolicyEntry(
                        object_id = '2ECB02082930-01FFCfeE-50AC32DcAEc8', )
                    ],
                authentication_configuration = openapi_client.models.service_authentication_configuration_info.ServiceAuthenticationConfigurationInfo(
                    audience = '', 
                    authority = '', 
                    smart_proxy_enabled = True, ),
                cors_configuration = openapi_client.models.service_cors_configuration_info.ServiceCorsConfigurationInfo(
                    allow_credentials = True, 
                    headers = [
                        ''
                        ], 
                    max_age = 0, 
                    methods = [
                        ''
                        ], 
                    origins = [
                        '*'
                        ], ),
                cosmos_db_configuration = openapi_client.models.service_cosmos_db_configuration_info.ServiceCosmosDbConfigurationInfo(
                    offer_throughput = 4E+2, ),
                provisioning_state = 'Deleting'
            )
        else:
            return ServicesProperties(
                access_policies = [
                    openapi_client.models.service_access_policy_entry.ServiceAccessPolicyEntry(
                        object_id = '2ECB02082930-01FFCfeE-50AC32DcAEc8', )
                    ],
        )
        """

    def testServicesProperties(self):
        """Test ServicesProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
