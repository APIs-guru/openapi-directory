# coding: utf-8

"""
    VirtualWANAsAServiceManagementClient

    REST API for Azure VirtualWAN As a Service.

    The version of the OpenAPI document: 2018-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_vpn_gateways_result import ListVpnGatewaysResult

class TestListVpnGatewaysResult(unittest.TestCase):
    """ListVpnGatewaysResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListVpnGatewaysResult:
        """Test ListVpnGatewaysResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListVpnGatewaysResult`
        """
        model = ListVpnGatewaysResult()
        if include_optional:
            return ListVpnGatewaysResult(
                next_link = '',
                value = [
                    openapi_client.models.vpn_gateway.VpnGateway(
                        etag = '', 
                        properties = openapi_client.models.vpn_gateway_properties.VpnGatewayProperties(
                            bgp_settings = openapi_client.models.vpn_gateway_properties_bgp_settings.VpnGatewayProperties_bgpSettings(
                                asn = 56, 
                                bgp_peering_address = '', 
                                peer_weight = 56, ), 
                            connections = [
                                openapi_client.models.vpn_connection.VpnConnection(
                                    etag = '', 
                                    name = '', )
                                ], 
                            policies = openapi_client.models.policies.Policies(
                                allow_branch_to_branch_traffic = True, 
                                allow_vnet_to_vnet_traffic = True, ), 
                            provisioning_state = 'Succeeded', 
                            virtual_hub = openapi_client.models.get_vpn_sites_configuration_request_vpn_sites_inner.GetVpnSitesConfigurationRequest_vpnSites_inner(
                                id = '', ), ), )
                    ]
            )
        else:
            return ListVpnGatewaysResult(
        )
        """

    def testListVpnGatewaysResult(self):
        """Test ListVpnGatewaysResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
