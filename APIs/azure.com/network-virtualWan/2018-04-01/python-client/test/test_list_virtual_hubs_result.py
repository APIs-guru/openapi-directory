# coding: utf-8

"""
    VirtualWANAsAServiceManagementClient

    REST API for Azure VirtualWAN As a Service.

    The version of the OpenAPI document: 2018-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_virtual_hubs_result import ListVirtualHubsResult

class TestListVirtualHubsResult(unittest.TestCase):
    """ListVirtualHubsResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListVirtualHubsResult:
        """Test ListVirtualHubsResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListVirtualHubsResult`
        """
        model = ListVirtualHubsResult()
        if include_optional:
            return ListVirtualHubsResult(
                next_link = '',
                value = [
                    openapi_client.models.virtual_hub.VirtualHub(
                        etag = '', 
                        properties = openapi_client.models.virtual_hub_properties.VirtualHubProperties(
                            address_prefix = '', 
                            hub_virtual_network_connections = [
                                openapi_client.models.hub_virtual_network_connection.HubVirtualNetworkConnection(
                                    etag = '', )
                                ], 
                            provisioning_state = 'Succeeded', 
                            virtual_wan = openapi_client.models.get_vpn_sites_configuration_request_vpn_sites_inner.GetVpnSitesConfigurationRequest_vpnSites_inner(
                                id = '', ), ), )
                    ]
            )
        else:
            return ListVirtualHubsResult(
        )
        """

    def testListVirtualHubsResult(self):
        """Test ListVirtualHubsResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
