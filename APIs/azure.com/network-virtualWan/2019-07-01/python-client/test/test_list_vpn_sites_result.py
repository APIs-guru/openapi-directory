# coding: utf-8

"""
    VirtualWANAsAServiceManagementClient

    REST API for Azure VirtualWAN As a Service.

    The version of the OpenAPI document: 2019-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_vpn_sites_result import ListVpnSitesResult

class TestListVpnSitesResult(unittest.TestCase):
    """ListVpnSitesResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListVpnSitesResult:
        """Test ListVpnSitesResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListVpnSitesResult`
        """
        model = ListVpnSitesResult()
        if include_optional:
            return ListVpnSitesResult(
                next_link = '',
                value = [
                    openapi_client.models.vpn_site.VpnSite(
                        etag = '', 
                        properties = openapi_client.models.vpn_site_properties.VpnSiteProperties(
                            address_space = openapi_client.models.p2_s_vpn_gateway_properties_custom_routes.P2SVpnGatewayProperties_customRoutes(
                                address_prefixes = [
                                    ''
                                    ], ), 
                            bgp_properties = openapi_client.models.vpn_gateway_properties_bgp_settings.VpnGatewayProperties_bgpSettings(
                                asn = 56, 
                                bgp_peering_address = '', 
                                peer_weight = 56, ), 
                            device_properties = openapi_client.models.device_properties.DeviceProperties(
                                device_model = '', 
                                device_vendor = '', 
                                link_speed_in_mbps = 56, ), 
                            ip_address = '', 
                            is_security_site = True, 
                            provisioning_state = 'Succeeded', 
                            site_key = '', 
                            virtual_wan = openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                                id = '', ), 
                            vpn_site_links = [
                                openapi_client.models.vpn_site_link.VpnSiteLink(
                                    etag = '', 
                                    name = '', 
                                    type = '', )
                                ], ), )
                    ]
            )
        else:
            return ListVpnSitesResult(
        )
        """

    def testListVpnSitesResult(self):
        """Test ListVpnSitesResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
