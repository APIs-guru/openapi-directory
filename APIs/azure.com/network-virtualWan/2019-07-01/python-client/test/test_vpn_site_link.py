# coding: utf-8

"""
    VirtualWANAsAServiceManagementClient

    REST API for Azure VirtualWAN As a Service.

    The version of the OpenAPI document: 2019-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.vpn_site_link import VpnSiteLink

class TestVpnSiteLink(unittest.TestCase):
    """VpnSiteLink unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VpnSiteLink:
        """Test VpnSiteLink
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VpnSiteLink`
        """
        model = VpnSiteLink()
        if include_optional:
            return VpnSiteLink(
                etag = '',
                name = '',
                properties = openapi_client.models.vpn_site_link_properties.VpnSiteLinkProperties(
                    bgp_properties = openapi_client.models.vpn_link_bgp_settings.VpnLinkBgpSettings(
                        asn = 56, 
                        bgp_peering_address = '', ), 
                    ip_address = '', 
                    link_properties = openapi_client.models.vpn_link_provider_properties.VpnLinkProviderProperties(
                        link_provider_name = '', 
                        link_speed_in_mbps = 56, ), 
                    provisioning_state = 'Succeeded', ),
                type = '',
                id = ''
            )
        else:
            return VpnSiteLink(
        )
        """

    def testVpnSiteLink(self):
        """Test VpnSiteLink"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
