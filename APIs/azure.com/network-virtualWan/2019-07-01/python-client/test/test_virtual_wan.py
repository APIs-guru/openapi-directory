# coding: utf-8

"""
    VirtualWANAsAServiceManagementClient

    REST API for Azure VirtualWAN As a Service.

    The version of the OpenAPI document: 2019-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.virtual_wan import VirtualWAN

class TestVirtualWAN(unittest.TestCase):
    """VirtualWAN unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VirtualWAN:
        """Test VirtualWAN
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualWAN`
        """
        model = VirtualWAN()
        if include_optional:
            return VirtualWAN(
                etag = '',
                properties = openapi_client.models.virtual_wan_properties.VirtualWanProperties(
                    allow_branch_to_branch_traffic = True, 
                    allow_vnet_to_vnet_traffic = True, 
                    disable_vpn_encryption = True, 
                    office365_local_breakout_category = 'Optimize', 
                    p2_s_vpn_server_configurations = [
                        openapi_client.models.p2_s_vpn_server_configuration.P2SVpnServerConfiguration(
                            etag = '', 
                            name = '', )
                        ], 
                    provisioning_state = 'Succeeded', 
                    security_provider_name = '', 
                    virtual_hubs = [
                        openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                            id = '', )
                        ], 
                    vpn_sites = [
                        openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                            id = '', )
                        ], ),
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return VirtualWAN(
        )
        """

    def testVirtualWAN(self):
        """Test VirtualWAN"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
