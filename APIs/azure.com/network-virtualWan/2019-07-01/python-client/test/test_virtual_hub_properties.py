# coding: utf-8

"""
    VirtualWANAsAServiceManagementClient

    REST API for Azure VirtualWAN As a Service.

    The version of the OpenAPI document: 2019-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.virtual_hub_properties import VirtualHubProperties

class TestVirtualHubProperties(unittest.TestCase):
    """VirtualHubProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VirtualHubProperties:
        """Test VirtualHubProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualHubProperties`
        """
        model = VirtualHubProperties()
        if include_optional:
            return VirtualHubProperties(
                address_prefix = '',
                express_route_gateway = openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                    id = '', ),
                p2_s_vpn_gateway = openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                    id = '', ),
                provisioning_state = 'Succeeded',
                route_table = openapi_client.models.virtual_hub_route_table.VirtualHubRouteTable(
                    routes = [
                        openapi_client.models.virtual_hub_route.VirtualHubRoute(
                            address_prefixes = [
                                ''
                                ], 
                            next_hop_ip_address = '', )
                        ], ),
                virtual_network_connections = [
                    openapi_client.models.hub_virtual_network_connection.HubVirtualNetworkConnection(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.hub_virtual_network_connection_properties.HubVirtualNetworkConnectionProperties(
                            allow_hub_to_remote_vnet_transit = True, 
                            allow_remote_vnet_to_use_hub_vnet_gateways = True, 
                            enable_internet_security = True, 
                            provisioning_state = 'Succeeded', 
                            remote_virtual_network = openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                                id = '', ), ), )
                    ],
                virtual_wan = openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                    id = '', ),
                vpn_gateway = openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                    id = '', )
            )
        else:
            return VirtualHubProperties(
        )
        """

    def testVirtualHubProperties(self):
        """Test VirtualHubProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
