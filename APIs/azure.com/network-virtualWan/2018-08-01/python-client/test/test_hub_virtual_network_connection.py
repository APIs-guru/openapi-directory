# coding: utf-8

"""
    VirtualWANAsAServiceManagementClient

    REST API for Azure VirtualWAN As a Service.

    The version of the OpenAPI document: 2018-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.hub_virtual_network_connection import HubVirtualNetworkConnection

class TestHubVirtualNetworkConnection(unittest.TestCase):
    """HubVirtualNetworkConnection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HubVirtualNetworkConnection:
        """Test HubVirtualNetworkConnection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HubVirtualNetworkConnection`
        """
        model = HubVirtualNetworkConnection()
        if include_optional:
            return HubVirtualNetworkConnection(
                etag = '',
                name = '',
                properties = openapi_client.models.hub_virtual_network_connection_properties.HubVirtualNetworkConnectionProperties(
                    allow_hub_to_remote_vnet_transit = True, 
                    allow_remote_vnet_to_use_hub_vnet_gateways = True, 
                    enable_internet_security = True, 
                    provisioning_state = 'Succeeded', 
                    remote_virtual_network = openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                        id = '', ), ),
                id = ''
            )
        else:
            return HubVirtualNetworkConnection(
        )
        """

    def testHubVirtualNetworkConnection(self):
        """Test HubVirtualNetworkConnection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
