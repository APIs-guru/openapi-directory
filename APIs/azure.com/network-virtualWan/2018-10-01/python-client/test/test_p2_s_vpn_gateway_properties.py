# coding: utf-8

"""
    VirtualWANAsAServiceManagementClient

    REST API for Azure VirtualWAN As a Service.

    The version of the OpenAPI document: 2018-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.p2_s_vpn_gateway_properties import P2SVpnGatewayProperties

class TestP2SVpnGatewayProperties(unittest.TestCase):
    """P2SVpnGatewayProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> P2SVpnGatewayProperties:
        """Test P2SVpnGatewayProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `P2SVpnGatewayProperties`
        """
        model = P2SVpnGatewayProperties()
        if include_optional:
            return P2SVpnGatewayProperties(
                p2_s_vpn_server_configuration = openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                    id = '', ),
                provisioning_state = 'Succeeded',
                virtual_hub = openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                    id = '', ),
                vpn_client_address_pool = openapi_client.models.p2_s_vpn_gateway_properties_vpn_client_address_pool.P2SVpnGatewayProperties_vpnClientAddressPool(
                    address_prefixes = [
                        ''
                        ], ),
                vpn_client_connection_health = openapi_client.models.vpn_client_connection_health.VpnClientConnectionHealth(
                    allocated_ip_addresses = [
                        ''
                        ], 
                    total_egress_bytes_transferred = 56, 
                    total_ingress_bytes_transferred = 56, 
                    vpn_client_connections_count = 56, ),
                vpn_gateway_scale_unit = 56
            )
        else:
            return P2SVpnGatewayProperties(
        )
        """

    def testP2SVpnGatewayProperties(self):
        """Test P2SVpnGatewayProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
