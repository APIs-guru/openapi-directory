# coding: utf-8

"""
    VirtualWANAsAServiceManagementClient

    REST API for Azure VirtualWAN As a Service.

    The version of the OpenAPI document: 2018-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.vpn_gateway_properties import VpnGatewayProperties

class TestVpnGatewayProperties(unittest.TestCase):
    """VpnGatewayProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VpnGatewayProperties:
        """Test VpnGatewayProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VpnGatewayProperties`
        """
        model = VpnGatewayProperties()
        if include_optional:
            return VpnGatewayProperties(
                bgp_settings = openapi_client.models.vpn_gateway_properties_bgp_settings.VpnGatewayProperties_bgpSettings(
                    asn = 56, 
                    bgp_peering_address = '', 
                    peer_weight = 56, ),
                connections = [
                    openapi_client.models.vpn_connection.VpnConnection(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.vpn_connection_properties.VpnConnectionProperties(
                            connection_bandwidth = 56, 
                            connection_status = 'Unknown', 
                            egress_bytes_transferred = 56, 
                            enable_bgp = True, 
                            enable_internet_security = True, 
                            enable_rate_limiting = True, 
                            ingress_bytes_transferred = 56, 
                            ipsec_policies = [
                                openapi_client.models.p2_s_vpn_server_configuration_properties_vpn_client_ipsec_policies_inner.P2SVpnServerConfigurationProperties_vpnClientIpsecPolicies_inner(
                                    dh_group = 'None', 
                                    ike_encryption = 'DES', 
                                    ike_integrity = 'MD5', 
                                    ipsec_encryption = 'None', 
                                    ipsec_integrity = 'MD5', 
                                    pfs_group = 'None', 
                                    sa_data_size_kilobytes = 56, 
                                    sa_life_time_seconds = 56, )
                                ], 
                            provisioning_state = 'Succeeded', 
                            remote_vpn_site = openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                                id = '', ), 
                            routing_weight = 56, 
                            shared_key = '', 
                            vpn_connection_protocol_type = 'IKEv2', ), )
                    ],
                provisioning_state = 'Succeeded',
                virtual_hub = openapi_client.models.hub_virtual_network_connection_properties_remote_virtual_network.HubVirtualNetworkConnectionProperties_remoteVirtualNetwork(
                    id = '', ),
                vpn_gateway_scale_unit = 56
            )
        else:
            return VpnGatewayProperties(
        )
        """

    def testVpnGatewayProperties(self):
        """Test VpnGatewayProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
