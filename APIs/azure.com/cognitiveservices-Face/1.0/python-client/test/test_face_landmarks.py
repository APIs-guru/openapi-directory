# coding: utf-8

"""
    Face Client

    An API for face detection, verification, and identification.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.face_landmarks import FaceLandmarks

class TestFaceLandmarks(unittest.TestCase):
    """FaceLandmarks unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FaceLandmarks:
        """Test FaceLandmarks
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FaceLandmarks`
        """
        model = FaceLandmarks()
        if include_optional:
            return FaceLandmarks(
                eye_left_bottom = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                eye_left_inner = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                eye_left_outer = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                eye_left_top = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                eye_right_bottom = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                eye_right_inner = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                eye_right_outer = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                eye_right_top = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                eyebrow_left_inner = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                eyebrow_left_outer = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                eyebrow_right_inner = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                eyebrow_right_outer = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                mouth_left = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                mouth_right = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                nose_left_alar_out_tip = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                nose_left_alar_top = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                nose_right_alar_out_tip = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                nose_right_alar_top = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                nose_root_left = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                nose_root_right = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                nose_tip = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                pupil_left = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                pupil_right = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                under_lip_bottom = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                under_lip_top = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                upper_lip_bottom = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, ),
                upper_lip_top = openapi_client.models.coordinate.Coordinate(
                    x = 1.337, 
                    y = 1.337, )
            )
        else:
            return FaceLandmarks(
        )
        """

    def testFaceLandmarks(self):
        """Test FaceLandmarks"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
