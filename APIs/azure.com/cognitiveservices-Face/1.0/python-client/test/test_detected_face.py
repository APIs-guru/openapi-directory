# coding: utf-8

"""
    Face Client

    An API for face detection, verification, and identification.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.detected_face import DetectedFace

class TestDetectedFace(unittest.TestCase):
    """DetectedFace unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DetectedFace:
        """Test DetectedFace
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DetectedFace`
        """
        model = DetectedFace()
        if include_optional:
            return DetectedFace(
                face_attributes = openapi_client.models.face_attributes.FaceAttributes(
                    accessories = [
                        openapi_client.models.accessory.Accessory(
                            confidence = 0, 
                            type = 'headWear', )
                        ], 
                    age = 1.337, 
                    blur = openapi_client.models.blur.Blur(
                        blur_level = 'Low', 
                        value = 0, ), 
                    emotion = openapi_client.models.emotion.Emotion(
                        anger = 0, 
                        contempt = 0, 
                        disgust = 0, 
                        fear = 0, 
                        happiness = 0, 
                        neutral = 0, 
                        sadness = 0, 
                        surprise = 0, ), 
                    exposure = openapi_client.models.exposure.Exposure(
                        exposure_level = 'UnderExposure', 
                        value = 0, ), 
                    facial_hair = openapi_client.models.facial_hair.FacialHair(
                        beard = 0, 
                        moustache = 0, 
                        sideburns = 0, ), 
                    gender = 'male', 
                    glasses = 'noGlasses', 
                    hair = openapi_client.models.hair.Hair(
                        bald = 0, 
                        hair_color = [
                            openapi_client.models.hair_color.HairColor(
                                color = 'unknown', 
                                confidence = 0, )
                            ], 
                        invisible = True, ), 
                    head_pose = openapi_client.models.head_pose.HeadPose(
                        pitch = 1.337, 
                        roll = 1.337, 
                        yaw = 1.337, ), 
                    makeup = openapi_client.models.makeup.Makeup(
                        eye_makeup = True, 
                        lip_makeup = True, ), 
                    noise = openapi_client.models.noise.Noise(
                        noise_level = 'Low', ), 
                    occlusion = openapi_client.models.occlusion.Occlusion(
                        eye_occluded = True, 
                        forehead_occluded = True, 
                        mouth_occluded = True, ), 
                    smile = 0, ),
                face_id = '',
                face_landmarks = openapi_client.models.face_landmarks.FaceLandmarks(
                    eye_left_bottom = openapi_client.models.coordinate.Coordinate(
                        x = 1.337, 
                        y = 1.337, ), 
                    eye_left_inner = openapi_client.models.coordinate.Coordinate(
                        x = 1.337, 
                        y = 1.337, ), 
                    eye_left_outer = , 
                    eye_left_top = , 
                    eye_right_bottom = , 
                    eye_right_inner = , 
                    eye_right_outer = , 
                    eye_right_top = , 
                    eyebrow_left_inner = , 
                    eyebrow_left_outer = , 
                    eyebrow_right_inner = , 
                    eyebrow_right_outer = , 
                    mouth_left = , 
                    mouth_right = , 
                    nose_left_alar_out_tip = , 
                    nose_left_alar_top = , 
                    nose_right_alar_out_tip = , 
                    nose_right_alar_top = , 
                    nose_root_left = , 
                    nose_root_right = , 
                    nose_tip = , 
                    pupil_left = , 
                    pupil_right = , 
                    under_lip_bottom = , 
                    under_lip_top = , 
                    upper_lip_bottom = , 
                    upper_lip_top = , ),
                face_rectangle = openapi_client.models.face_rectangle.FaceRectangle(
                    height = 56, 
                    left = 56, 
                    top = 56, 
                    width = 56, ),
                recognition_model = 'recognition_01'
            )
        else:
            return DetectedFace(
                face_rectangle = openapi_client.models.face_rectangle.FaceRectangle(
                    height = 56, 
                    left = 56, 
                    top = 56, 
                    width = 56, ),
        )
        """

    def testDetectedFace(self):
        """Test DetectedFace"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
