# coding: utf-8

"""
    Azure Alerts Management Service Resource Provider

    APIs for Azure Smart Detector Alert Rules CRUD operations.

    The version of the OpenAPI document: 2019-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.alert_rule_properties import AlertRuleProperties

class TestAlertRuleProperties(unittest.TestCase):
    """AlertRuleProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlertRuleProperties:
        """Test AlertRuleProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlertRuleProperties`
        """
        model = AlertRuleProperties()
        if include_optional:
            return AlertRuleProperties(
                action_groups = openapi_client.models.action_groups_information.ActionGroupsInformation(
                    custom_email_subject = '', 
                    custom_webhook_payload = '', 
                    group_ids = [
                        ''
                        ], ),
                description = '',
                detector = openapi_client.models.detector.Detector(
                    description = '', 
                    id = '', 
                    image_paths = [
                        ''
                        ], 
                    name = '', 
                    parameters = {
                        'key' : None
                        }, 
                    supported_resource_types = [
                        ''
                        ], ),
                frequency = '',
                scope = [
                    ''
                    ],
                severity = 'Sev0',
                state = 'Enabled',
                throttling = openapi_client.models.throttling_information.ThrottlingInformation(
                    duration = '', )
            )
        else:
            return AlertRuleProperties(
                action_groups = openapi_client.models.action_groups_information.ActionGroupsInformation(
                    custom_email_subject = '', 
                    custom_webhook_payload = '', 
                    group_ids = [
                        ''
                        ], ),
                detector = openapi_client.models.detector.Detector(
                    description = '', 
                    id = '', 
                    image_paths = [
                        ''
                        ], 
                    name = '', 
                    parameters = {
                        'key' : None
                        }, 
                    supported_resource_types = [
                        ''
                        ], ),
                frequency = '',
                scope = [
                    ''
                    ],
                severity = 'Sev0',
                state = 'Enabled',
        )
        """

    def testAlertRuleProperties(self):
        """Test AlertRuleProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
