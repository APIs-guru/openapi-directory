# coding: utf-8

"""
    ContainerInstanceManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-02-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.container_properties import ContainerProperties

class TestContainerProperties(unittest.TestCase):
    """ContainerProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContainerProperties:
        """Test ContainerProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContainerProperties`
        """
        model = ContainerProperties()
        if include_optional:
            return ContainerProperties(
                command = [
                    ''
                    ],
                environment_variables = [
                    openapi_client.models.environment_variable.EnvironmentVariable(
                        name = '', 
                        value = '', )
                    ],
                image = '',
                instance_view = openapi_client.models.container_properties_instance_view.ContainerProperties_instanceView(
                    current_state = openapi_client.models.container_state.ContainerState(
                        detail_status = '', 
                        exit_code = 56, 
                        finish_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        state = '', ), 
                    events = [
                        openapi_client.models.event.Event(
                            count = 56, 
                            first_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            message = '', 
                            name = '', 
                            type = '', )
                        ], 
                    previous_state = openapi_client.models.container_state.ContainerState(
                        detail_status = '', 
                        exit_code = 56, 
                        finish_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        state = '', ), 
                    restart_count = 56, ),
                ports = [
                    openapi_client.models.container_port.ContainerPort(
                        port = 56, 
                        protocol = 'TCP', )
                    ],
                resources = openapi_client.models.resource_requirements.ResourceRequirements(
                    limits = openapi_client.models.resource_limits.ResourceLimits(
                        cpu = 1.337, 
                        memory_in_gb = 1.337, ), 
                    requests = openapi_client.models.resource_requests.ResourceRequests(
                        cpu = 1.337, 
                        memory_in_gb = 1.337, ), ),
                volume_mounts = [
                    openapi_client.models.volume_mount.VolumeMount(
                        mount_path = '', 
                        name = '', 
                        read_only = True, )
                    ]
            )
        else:
            return ContainerProperties(
                image = '',
                resources = openapi_client.models.resource_requirements.ResourceRequirements(
                    limits = openapi_client.models.resource_limits.ResourceLimits(
                        cpu = 1.337, 
                        memory_in_gb = 1.337, ), 
                    requests = openapi_client.models.resource_requests.ResourceRequests(
                        cpu = 1.337, 
                        memory_in_gb = 1.337, ), ),
        )
        """

    def testContainerProperties(self):
        """Test ContainerProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
