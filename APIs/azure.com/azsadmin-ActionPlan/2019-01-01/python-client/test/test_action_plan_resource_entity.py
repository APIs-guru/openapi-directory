# coding: utf-8

"""
    DeploymentAdminClient

    Deployment Admin Client.

    The version of the OpenAPI document: 2019-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.action_plan_resource_entity import ActionPlanResourceEntity

class TestActionPlanResourceEntity(unittest.TestCase):
    """ActionPlanResourceEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActionPlanResourceEntity:
        """Test ActionPlanResourceEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActionPlanResourceEntity`
        """
        model = ActionPlanResourceEntity()
        if include_optional:
            return ActionPlanResourceEntity(
                e_tag = '',
                properties = openapi_client.models.action_plan_admin_properties.ActionPlanAdminProperties(
                    action_plan_instance_id = '', 
                    action_plan_uri = '', 
                    blob_container_name = '', 
                    end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    error = openapi_client.models.action_plan_admin_properties_error.ActionPlanAdminProperties_error(
                        code = '', 
                        details = openapi_client.models.extended_error_info.ExtendedErrorInfo(), 
                        message = '', ), 
                    parameters = openapi_client.models.action_plan_admin_properties_parameters.ActionPlanAdminProperties_parameters(
                        value = '', ), 
                    provisioning_state = '', 
                    resource_group_name = '', 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    subscription_id = '', ),
                id = '',
                location = '',
                name = '',
                type = ''
            )
        else:
            return ActionPlanResourceEntity(
        )
        """

    def testActionPlanResourceEntity(self):
        """Test ActionPlanResourceEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
