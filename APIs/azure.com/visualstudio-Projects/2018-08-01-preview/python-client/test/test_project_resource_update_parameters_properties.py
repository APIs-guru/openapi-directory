# coding: utf-8

"""
    Visual Studio Projects Resource Provider Client

    Use these APIs to manage Visual Studio Team Services resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://docs.microsoft.com/en-us/rest/api/index.

    The version of the OpenAPI document: 2018-08-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.project_resource_update_parameters_properties import ProjectResourceUpdateParametersProperties

class TestProjectResourceUpdateParametersProperties(unittest.TestCase):
    """ProjectResourceUpdateParametersProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectResourceUpdateParametersProperties:
        """Test ProjectResourceUpdateParametersProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectResourceUpdateParametersProperties`
        """
        model = ProjectResourceUpdateParametersProperties()
        if include_optional:
            return ProjectResourceUpdateParametersProperties(
                pipeline_bootstrap_configurations = [
                    openapi_client.models.pipeline_bootstrap_configuration.PipelineBootstrapConfiguration(
                        name = '', 
                        repository = openapi_client.models.code_repository.CodeRepository(
                            authorization = openapi_client.models.authorization.Authorization(
                                authorization_type = 'authorizationToken', 
                                parameters = {
                                    'key' : ''
                                    }, ), 
                            default_branch = '', 
                            id = '', 
                            properties = {
                                'key' : ''
                                }, 
                            repository_type = 'gitHub', ), 
                        template_id = '', 
                        template_parameters = {
                            'key' : ''
                            }, )
                    ]
            )
        else:
            return ProjectResourceUpdateParametersProperties(
        )
        """

    def testProjectResourceUpdateParametersProperties(self):
        """Test ProjectResourceUpdateParametersProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
