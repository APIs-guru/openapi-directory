# coding: utf-8

"""
    AutomationManagement

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2015-10-31
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.hybrid_runbook_worker_group import HybridRunbookWorkerGroup

class TestHybridRunbookWorkerGroup(unittest.TestCase):
    """HybridRunbookWorkerGroup unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HybridRunbookWorkerGroup:
        """Test HybridRunbookWorkerGroup
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HybridRunbookWorkerGroup`
        """
        model = HybridRunbookWorkerGroup()
        if include_optional:
            return HybridRunbookWorkerGroup(
                credential = openapi_client.models.run_as_credential_association_property.RunAsCredentialAssociationProperty(
                    name = '', ),
                group_type = 'User',
                hybrid_runbook_workers = [
                    openapi_client.models.hybrid_runbook_worker.HybridRunbookWorker(
                        ip = '', 
                        last_seen_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        registration_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                id = '',
                name = ''
            )
        else:
            return HybridRunbookWorkerGroup(
        )
        """

    def testHybridRunbookWorkerGroup(self):
        """Test HybridRunbookWorkerGroup"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
