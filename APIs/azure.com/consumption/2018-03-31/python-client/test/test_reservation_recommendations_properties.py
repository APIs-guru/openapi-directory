# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2018-03-31
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.reservation_recommendations_properties import ReservationRecommendationsProperties

class TestReservationRecommendationsProperties(unittest.TestCase):
    """ReservationRecommendationsProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReservationRecommendationsProperties:
        """Test ReservationRecommendationsProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReservationRecommendationsProperties`
        """
        model = ReservationRecommendationsProperties()
        if include_optional:
            return ReservationRecommendationsProperties(
                cost_with_no_reserved_instances = 1.337,
                first_usage_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                look_back_period = '',
                meter_id = '',
                net_savings = 1.337,
                recommended_quantity = 1.337,
                scope = '',
                term = '',
                total_cost_with_reserved_instances = 1.337
            )
        else:
            return ReservationRecommendationsProperties(
        )
        """

    def testReservationRecommendationsProperties(self):
        """Test ReservationRecommendationsProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
