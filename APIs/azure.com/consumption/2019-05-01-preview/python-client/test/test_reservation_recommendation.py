# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2019-05-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.reservation_recommendation import ReservationRecommendation

class TestReservationRecommendation(unittest.TestCase):
    """ReservationRecommendation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReservationRecommendation:
        """Test ReservationRecommendation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReservationRecommendation`
        """
        model = ReservationRecommendation()
        if include_optional:
            return ReservationRecommendation(
                properties = openapi_client.models.reservation_recommendation_properties.ReservationRecommendationProperties(
                    cost_with_no_reserved_instances = 1.337, 
                    first_usage_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    look_back_period = '', 
                    meter_id = '', 
                    net_savings = 1.337, 
                    recommended_quantity = 1.337, 
                    scope = '', 
                    term = '', 
                    total_cost_with_reserved_instances = 1.337, ),
                id = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = '',
                location = '',
                sku = ''
            )
        else:
            return ReservationRecommendation(
        )
        """

    def testReservationRecommendation(self):
        """Test ReservationRecommendation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
