# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2018-11-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.credit_summary import CreditSummary

class TestCreditSummary(unittest.TestCase):
    """CreditSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreditSummary:
        """Test CreditSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreditSummary`
        """
        model = CreditSummary()
        if include_optional:
            return CreditSummary(
                properties = openapi_client.models.credit_summary_properties.CreditSummaryProperties(
                    balance_summary = openapi_client.models.credit_balance_summary.CreditBalanceSummary(
                        current_balance = openapi_client.models.amount.Amount(
                            currency = '', 
                            value = 1.337, ), 
                        estimated_balance = openapi_client.models.amount.Amount(
                            currency = '', 
                            value = 1.337, ), ), 
                    expired_credit = , 
                    pending_credit_adjustments = , 
                    pending_eligible_charges = , ),
                id = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return CreditSummary(
        )
        """

    def testCreditSummary(self):
        """Test CreditSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
