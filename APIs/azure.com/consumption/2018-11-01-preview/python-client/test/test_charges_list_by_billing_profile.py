# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2018-11-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.charges_list_by_billing_profile import ChargesListByBillingProfile

class TestChargesListByBillingProfile(unittest.TestCase):
    """ChargesListByBillingProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChargesListByBillingProfile:
        """Test ChargesListByBillingProfile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChargesListByBillingProfile`
        """
        model = ChargesListByBillingProfile()
        if include_optional:
            return ChargesListByBillingProfile(
                value = [
                    openapi_client.models.charge_summary_by_billing_profile.ChargeSummaryByBillingProfile(
                        properties = openapi_client.models.charge_summary_properties.ChargeSummaryProperties(
                            azure_charges = openapi_client.models.amount.Amount(
                                currency = '', 
                                value = 1.337, ), 
                            billing_account_id = '', 
                            billing_period_id = '', 
                            billing_profile_id = '', 
                            charges_billed_separately = openapi_client.models.amount.Amount(
                                currency = '', 
                                value = 1.337, ), 
                            invoice_section_id = '', 
                            marketplace_charges = , 
                            usage_end = '', 
                            usage_start = '', ), )
                    ]
            )
        else:
            return ChargesListByBillingProfile(
        )
        """

    def testChargesListByBillingProfile(self):
        """Test ChargesListByBillingProfile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
