# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2018-11-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.events import Events

class TestEvents(unittest.TestCase):
    """Events unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Events:
        """Test Events
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Events`
        """
        model = Events()
        if include_optional:
            return Events(
                value = [
                    openapi_client.models.event_summary.EventSummary(
                        properties = openapi_client.models.event_properties.EventProperties(
                            adjustments = openapi_client.models.amount.Amount(
                                currency = '', 
                                value = 1.337, ), 
                            charges = openapi_client.models.amount.Amount(
                                currency = '', 
                                value = 1.337, ), 
                            closed_balance = , 
                            credit_expired = , 
                            description = '', 
                            event_type = 'NewCredit', 
                            invoice_number = '', 
                            new_credit = , 
                            transaction_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                    ]
            )
        else:
            return Events(
        )
        """

    def testEvents(self):
        """Test Events"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
