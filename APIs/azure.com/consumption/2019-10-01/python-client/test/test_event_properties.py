# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2019-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.event_properties import EventProperties

class TestEventProperties(unittest.TestCase):
    """EventProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventProperties:
        """Test EventProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventProperties`
        """
        model = EventProperties()
        if include_optional:
            return EventProperties(
                adjustments = openapi_client.models.amount.amount(
                    currency = '', 
                    value = 1.337, ),
                charges = openapi_client.models.amount.amount(
                    currency = '', 
                    value = 1.337, ),
                closed_balance = openapi_client.models.amount.amount(
                    currency = '', 
                    value = 1.337, ),
                credit_expired = openapi_client.models.amount.amount(
                    currency = '', 
                    value = 1.337, ),
                description = '',
                event_type = 'SettledCharges',
                invoice_number = '',
                new_credit = openapi_client.models.amount.amount(
                    currency = '', 
                    value = 1.337, ),
                transaction_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return EventProperties(
        )
        """

    def testEventProperties(self):
        """Test EventProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
