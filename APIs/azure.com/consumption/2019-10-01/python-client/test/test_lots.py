# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2019-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.lots import Lots

class TestLots(unittest.TestCase):
    """Lots unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Lots:
        """Test Lots
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Lots`
        """
        model = Lots()
        if include_optional:
            return Lots(
                next_link = '',
                value = [
                    openapi_client.models.lot_summary.LotSummary(
                        properties = openapi_client.models.lot_properties.LotProperties(
                            closed_balance = openapi_client.models.amount.amount(
                                currency = '', 
                                value = 1.337, ), 
                            expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            original_amount = openapi_client.models.amount.amount(
                                currency = '', 
                                value = 1.337, ), 
                            po_number = '', 
                            source = 'PurchasedCredit', 
                            start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                    ]
            )
        else:
            return Lots(
        )
        """

    def testLots(self):
        """Test Lots"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
