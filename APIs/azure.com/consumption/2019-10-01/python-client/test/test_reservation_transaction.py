# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2019-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.reservation_transaction import ReservationTransaction

class TestReservationTransaction(unittest.TestCase):
    """ReservationTransaction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReservationTransaction:
        """Test ReservationTransaction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReservationTransaction`
        """
        model = ReservationTransaction()
        if include_optional:
            return ReservationTransaction(
                properties = openapi_client.models.reservation_transaction_properties.ReservationTransactionProperties(
                    account_name = '', 
                    account_owner_email = '', 
                    amount = 1.337, 
                    arm_sku_name = '', 
                    billing_frequency = '', 
                    cost_center = '', 
                    currency = '', 
                    current_enrollment = '', 
                    department_name = '', 
                    description = '', 
                    event_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    event_type = '', 
                    purchasing_enrollment = '', 
                    purchasing_subscription_guid = '', 
                    purchasing_subscription_name = '', 
                    quantity = 1.337, 
                    region = '', 
                    reservation_order_id = '', 
                    reservation_order_name = '', 
                    term = '', ),
                id = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return ReservationTransaction(
        )
        """

    def testReservationTransaction(self):
        """Test ReservationTransaction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
