# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2019-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.price_sheet_model import PriceSheetModel

class TestPriceSheetModel(unittest.TestCase):
    """PriceSheetModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PriceSheetModel:
        """Test PriceSheetModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PriceSheetModel`
        """
        model = PriceSheetModel()
        if include_optional:
            return PriceSheetModel(
                next_link = '',
                pricesheets = [
                    openapi_client.models.price_sheet_properties.PriceSheetProperties(
                        billing_period_id = '', 
                        currency_code = '', 
                        included_quantity = 1.337, 
                        meter_details = openapi_client.models.meter_details.MeterDetails(
                            meter_category = '', 
                            meter_location = '', 
                            meter_name = '', 
                            meter_sub_category = '', 
                            pretax_standard_rate = 1.337, 
                            service_name = '', 
                            service_tier = '', 
                            total_included_quantity = 1.337, 
                            unit = '', ), 
                        meter_id = '', 
                        offer_id = '', 
                        part_number = '', 
                        unit_of_measure = '', 
                        unit_price = 1.337, )
                    ]
            )
        else:
            return PriceSheetModel(
        )
        """

    def testPriceSheetModel(self):
        """Test PriceSheetModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
