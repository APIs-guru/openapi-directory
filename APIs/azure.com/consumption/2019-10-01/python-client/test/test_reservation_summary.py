# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2019-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.reservation_summary import ReservationSummary

class TestReservationSummary(unittest.TestCase):
    """ReservationSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReservationSummary:
        """Test ReservationSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReservationSummary`
        """
        model = ReservationSummary()
        if include_optional:
            return ReservationSummary(
                properties = openapi_client.models.reservation_summary_properties.ReservationSummaryProperties(
                    avg_utilization_percentage = 1.337, 
                    kind = '', 
                    max_utilization_percentage = 1.337, 
                    min_utilization_percentage = 1.337, 
                    purchased_quantity = 1.337, 
                    remaining_quantity = 1.337, 
                    reservation_id = '', 
                    reservation_order_id = '', 
                    reserved_hours = 1.337, 
                    sku_name = '', 
                    total_reserved_quantity = 1.337, 
                    usage_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    used_hours = 1.337, 
                    used_quantity = 1.337, 
                    utilized_percentage = 1.337, ),
                id = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return ReservationSummary(
        )
        """

    def testReservationSummary(self):
        """Test ReservationSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
