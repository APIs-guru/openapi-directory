# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2019-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.legacy_charge_summary import LegacyChargeSummary

class TestLegacyChargeSummary(unittest.TestCase):
    """LegacyChargeSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LegacyChargeSummary:
        """Test LegacyChargeSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LegacyChargeSummary`
        """
        model = LegacyChargeSummary()
        if include_optional:
            return LegacyChargeSummary(
                properties = openapi_client.models.legacy_charge_summary_properties.LegacyChargeSummaryProperties(
                    azure_charges = 1.337, 
                    billing_period_id = '', 
                    charges_billed_separately = 1.337, 
                    currency = '', 
                    marketplace_charges = 1.337, 
                    usage_end = '', 
                    usage_start = '', ),
                kind = 'legacy',
                id = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return LegacyChargeSummary(
                properties = openapi_client.models.legacy_charge_summary_properties.LegacyChargeSummaryProperties(
                    azure_charges = 1.337, 
                    billing_period_id = '', 
                    charges_billed_separately = 1.337, 
                    currency = '', 
                    marketplace_charges = 1.337, 
                    usage_end = '', 
                    usage_start = '', ),
                kind = 'legacy',
        )
        """

    def testLegacyChargeSummary(self):
        """Test LegacyChargeSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
