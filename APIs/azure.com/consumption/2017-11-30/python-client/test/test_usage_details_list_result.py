# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2017-11-30
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.usage_details_list_result import UsageDetailsListResult

class TestUsageDetailsListResult(unittest.TestCase):
    """UsageDetailsListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UsageDetailsListResult:
        """Test UsageDetailsListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UsageDetailsListResult`
        """
        model = UsageDetailsListResult()
        if include_optional:
            return UsageDetailsListResult(
                next_link = '',
                value = [
                    openapi_client.models.usage_detail.UsageDetail(
                        properties = openapi_client.models.usage_detail_properties.UsageDetailProperties(
                            account_name = '', 
                            additional_properties = '', 
                            billable_quantity = 1.337, 
                            billing_period_id = '', 
                            consumed_service = '', 
                            cost_center = '', 
                            currency = '', 
                            department_name = '', 
                            instance_id = '', 
                            instance_location = '', 
                            instance_name = '', 
                            invoice_id = '', 
                            is_estimated = True, 
                            meter_details = openapi_client.models.meter_details.MeterDetails(
                                meter_category = '', 
                                meter_location = '', 
                                meter_name = '', 
                                meter_sub_category = '', 
                                pretax_standard_rate = 1.337, 
                                total_included_quantity = 1.337, 
                                unit = '', ), 
                            meter_id = '', 
                            pretax_cost = 1.337, 
                            product = '', 
                            subscription_guid = '', 
                            subscription_name = '', 
                            usage_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            usage_quantity = 1.337, 
                            usage_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                    ]
            )
        else:
            return UsageDetailsListResult(
        )
        """

    def testUsageDetailsListResult(self):
        """Test UsageDetailsListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
