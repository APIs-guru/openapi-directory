# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2019-04-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.usage_detail import UsageDetail

class TestUsageDetail(unittest.TestCase):
    """UsageDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UsageDetail:
        """Test UsageDetail
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UsageDetail`
        """
        model = UsageDetail()
        if include_optional:
            return UsageDetail(
                properties = openapi_client.models.usage_detail_properties.UsageDetailProperties(
                    account_name = '', 
                    account_owner_id = '', 
                    additional_info = '', 
                    billing_account_id = '', 
                    billing_account_name = '', 
                    billing_currency = '', 
                    billing_period_end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    billing_period_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    billing_profile_id = '', 
                    billing_profile_name = '', 
                    charge_type = '', 
                    consumed_service = '', 
                    cost = 1.337, 
                    cost_center = '', 
                    date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    effective_price = 1.337, 
                    frequency = '', 
                    invoice_section = '', 
                    is_azure_credit_eligible = True, 
                    meter_details = openapi_client.models.meter_details_response.MeterDetailsResponse(
                        meter_category = '', 
                        meter_name = '', 
                        meter_sub_category = '', 
                        service_family = '', 
                        unit_of_measure = '', ), 
                    meter_id = '', 
                    offer_id = '', 
                    part_number = '', 
                    plan_name = '', 
                    product = '', 
                    product_order_id = '', 
                    product_order_name = '', 
                    publisher_name = '', 
                    publisher_type = '', 
                    quantity = 1.337, 
                    reservation_id = '', 
                    reservation_name = '', 
                    resource_group = '', 
                    resource_id = '', 
                    resource_location = '', 
                    resource_name = '', 
                    service_info1 = '', 
                    service_info2 = '', 
                    subscription_id = '', 
                    subscription_name = '', 
                    term = '', 
                    unit_price = 1.337, ),
                id = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return UsageDetail(
        )
        """

    def testUsageDetail(self):
        """Test UsageDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
