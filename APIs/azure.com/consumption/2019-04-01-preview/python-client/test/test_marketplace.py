# coding: utf-8

"""
    ConsumptionManagementClient

    Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.

    The version of the OpenAPI document: 2019-04-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.marketplace import Marketplace

class TestMarketplace(unittest.TestCase):
    """Marketplace unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Marketplace:
        """Test Marketplace
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Marketplace`
        """
        model = Marketplace()
        if include_optional:
            return Marketplace(
                properties = openapi_client.models.marketplace_properties.MarketplaceProperties(
                    account_name = '', 
                    additional_properties = '', 
                    billing_period_id = '', 
                    consumed_quantity = 1.337, 
                    consumed_service = '', 
                    cost_center = '', 
                    currency = '', 
                    department_name = '', 
                    instance_id = '', 
                    instance_name = '', 
                    is_estimated = True, 
                    is_recurring_charge = True, 
                    meter_id = '', 
                    offer_name = '', 
                    order_number = '', 
                    plan_name = '', 
                    pretax_cost = 1.337, 
                    publisher_name = '', 
                    resource_group = '', 
                    resource_rate = 1.337, 
                    subscription_guid = '', 
                    subscription_name = '', 
                    unit_of_measure = '', 
                    usage_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    usage_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                id = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return Marketplace(
        )
        """

    def testMarketplace(self):
        """Test Marketplace"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
