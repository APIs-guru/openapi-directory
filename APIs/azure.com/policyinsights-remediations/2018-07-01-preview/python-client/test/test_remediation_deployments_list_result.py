# coding: utf-8

"""
    RemediationsClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-07-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.remediation_deployments_list_result import RemediationDeploymentsListResult

class TestRemediationDeploymentsListResult(unittest.TestCase):
    """RemediationDeploymentsListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RemediationDeploymentsListResult:
        """Test RemediationDeploymentsListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RemediationDeploymentsListResult`
        """
        model = RemediationDeploymentsListResult()
        if include_optional:
            return RemediationDeploymentsListResult(
                next_link = '',
                value = [
                    openapi_client.models.remediation_deployment.RemediationDeployment(
                        created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deployment_id = '', 
                        error = openapi_client.models.error_definition.ErrorDefinition(
                            additional_info = [
                                openapi_client.models.typed_error_info.TypedErrorInfo(
                                    info = openapi_client.models.info.info(), 
                                    type = '', )
                                ], 
                            code = '', 
                            details = [
                                openapi_client.models.error_definition.ErrorDefinition(
                                    code = '', 
                                    message = '', 
                                    target = '', )
                                ], 
                            message = '', 
                            target = '', ), 
                        last_updated_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        remediated_resource_id = '', 
                        resource_location = '', 
                        status = '', )
                    ]
            )
        else:
            return RemediationDeploymentsListResult(
        )
        """

    def testRemediationDeploymentsListResult(self):
        """Test RemediationDeploymentsListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
