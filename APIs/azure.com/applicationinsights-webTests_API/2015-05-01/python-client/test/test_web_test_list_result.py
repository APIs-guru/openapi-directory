# coding: utf-8

"""
    ApplicationInsightsManagementClient

    Azure Application Insights client for web test based alerting.

    The version of the OpenAPI document: 2015-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.web_test_list_result import WebTestListResult

class TestWebTestListResult(unittest.TestCase):
    """WebTestListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebTestListResult:
        """Test WebTestListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebTestListResult`
        """
        model = WebTestListResult()
        if include_optional:
            return WebTestListResult(
                next_link = '',
                value = [
                    openapi_client.models.web_test.WebTest(
                        kind = 'ping', 
                        properties = openapi_client.models.web_test_properties.WebTestProperties(
                            configuration = openapi_client.models.web_test_properties_configuration.WebTestProperties_Configuration(), 
                            description = '', 
                            enabled = True, 
                            frequency = 56, 
                            kind = 'ping', 
                            locations = [
                                openapi_client.models.web_test_geolocation.WebTestGeolocation(
                                    id = '', )
                                ], 
                            name = '', 
                            retry_enabled = True, 
                            synthetic_monitor_id = '', 
                            timeout = 56, 
                            provisioning_state = '', ), )
                    ]
            )
        else:
            return WebTestListResult(
                value = [
                    openapi_client.models.web_test.WebTest(
                        kind = 'ping', 
                        properties = openapi_client.models.web_test_properties.WebTestProperties(
                            configuration = openapi_client.models.web_test_properties_configuration.WebTestProperties_Configuration(), 
                            description = '', 
                            enabled = True, 
                            frequency = 56, 
                            kind = 'ping', 
                            locations = [
                                openapi_client.models.web_test_geolocation.WebTestGeolocation(
                                    id = '', )
                                ], 
                            name = '', 
                            retry_enabled = True, 
                            synthetic_monitor_id = '', 
                            timeout = 56, 
                            provisioning_state = '', ), )
                    ],
        )
        """

    def testWebTestListResult(self):
        """Test WebTestListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
