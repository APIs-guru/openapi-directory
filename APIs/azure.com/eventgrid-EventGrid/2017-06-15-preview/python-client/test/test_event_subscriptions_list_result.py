# coding: utf-8

"""
    EventGridManagementClient

    Azure EventGrid Management Client

    The version of the OpenAPI document: 2017-06-15-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.event_subscriptions_list_result import EventSubscriptionsListResult

class TestEventSubscriptionsListResult(unittest.TestCase):
    """EventSubscriptionsListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventSubscriptionsListResult:
        """Test EventSubscriptionsListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventSubscriptionsListResult`
        """
        model = EventSubscriptionsListResult()
        if include_optional:
            return EventSubscriptionsListResult(
                value = [
                    openapi_client.models.event_subscription.EventSubscription(
                        properties = openapi_client.models.event_subscription_properties.EventSubscriptionProperties(
                            destination = openapi_client.models.event_subscription_destination.EventSubscriptionDestination(
                                endpoint_type = 'WebHook', ), 
                            filter = openapi_client.models.event_subscription_filter.EventSubscriptionFilter(
                                included_event_types = [
                                    ''
                                    ], 
                                is_subject_case_sensitive = True, 
                                subject_begins_with = '', 
                                subject_ends_with = '', ), 
                            labels = [
                                ''
                                ], 
                            provisioning_state = 'Creating', 
                            topic = '', ), )
                    ]
            )
        else:
            return EventSubscriptionsListResult(
        )
        """

    def testEventSubscriptionsListResult(self):
        """Test EventSubscriptionsListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
