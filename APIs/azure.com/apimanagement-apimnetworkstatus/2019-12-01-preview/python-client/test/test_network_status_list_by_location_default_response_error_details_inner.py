# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for getting the network connectivity status of your Azure API Management deployment. When the API Management service is deployed inside a Virtual Network, it needs to have access to other Azure resources it depends on. This also gives details about the DNS Servers visible to Azure API Management deployment.

    The version of the OpenAPI document: 2019-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.network_status_list_by_location_default_response_error_details_inner import NetworkStatusListByLocationDefaultResponseErrorDetailsInner

class TestNetworkStatusListByLocationDefaultResponseErrorDetailsInner(unittest.TestCase):
    """NetworkStatusListByLocationDefaultResponseErrorDetailsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NetworkStatusListByLocationDefaultResponseErrorDetailsInner:
        """Test NetworkStatusListByLocationDefaultResponseErrorDetailsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NetworkStatusListByLocationDefaultResponseErrorDetailsInner`
        """
        model = NetworkStatusListByLocationDefaultResponseErrorDetailsInner()
        if include_optional:
            return NetworkStatusListByLocationDefaultResponseErrorDetailsInner(
                code = '',
                message = '',
                target = ''
            )
        else:
            return NetworkStatusListByLocationDefaultResponseErrorDetailsInner(
        )
        """

    def testNetworkStatusListByLocationDefaultResponseErrorDetailsInner(self):
        """Test NetworkStatusListByLocationDefaultResponseErrorDetailsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
