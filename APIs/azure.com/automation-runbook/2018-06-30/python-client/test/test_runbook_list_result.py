# coding: utf-8

"""
    AutomationManagement

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-06-30
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.runbook_list_result import RunbookListResult

class TestRunbookListResult(unittest.TestCase):
    """RunbookListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RunbookListResult:
        """Test RunbookListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RunbookListResult`
        """
        model = RunbookListResult()
        if include_optional:
            return RunbookListResult(
                next_link = '',
                value = [
                    openapi_client.models.runbook.Runbook(
                        etag = '', 
                        properties = openapi_client.models.runbook_properties.RunbookProperties(
                            creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            description = '', 
                            draft = openapi_client.models.runbook_draft.RunbookDraft(
                                creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                draft_content_link = openapi_client.models.content_link.ContentLink(
                                    content_hash = openapi_client.models.content_hash.ContentHash(
                                        algorithm = '', 
                                        value = '', ), 
                                    uri = '', 
                                    version = '', ), 
                                in_edit = True, 
                                last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                output_types = [
                                    ''
                                    ], 
                                parameters = {
                                    'key' : openapi_client.models.runbook_parameter.RunbookParameter(
                                        default_value = '', 
                                        is_mandatory = True, 
                                        position = 56, 
                                        type = '', )
                                    }, ), 
                            job_count = 56, 
                            last_modified_by = '', 
                            last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            log_activity_trace = 56, 
                            log_progress = True, 
                            log_verbose = True, 
                            output_types = [
                                ''
                                ], 
                            parameters = {
                                'key' : openapi_client.models.runbook_parameter.RunbookParameter(
                                    default_value = '', 
                                    is_mandatory = True, 
                                    position = 56, 
                                    type = '', )
                                }, 
                            provisioning_state = 'Succeeded', 
                            publish_content_link = openapi_client.models.content_link.ContentLink(
                                uri = '', 
                                version = '', ), 
                            runbook_type = 'Script', 
                            state = 'New', ), )
                    ]
            )
        else:
            return RunbookListResult(
        )
        """

    def testRunbookListResult(self):
        """Test RunbookListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
