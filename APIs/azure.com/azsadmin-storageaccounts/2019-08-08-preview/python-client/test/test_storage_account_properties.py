# coding: utf-8

"""
    StorageManagementClient

    The Admin Storage Management Client.

    The version of the OpenAPI document: 2019-08-08-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.storage_account_properties import StorageAccountProperties

class TestStorageAccountProperties(unittest.TestCase):
    """StorageAccountProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StorageAccountProperties:
        """Test StorageAccountProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StorageAccountProperties`
        """
        model = StorageAccountProperties()
        if include_optional:
            return StorageAccountProperties(
                access_tier = 'Hot',
                account_id = '',
                account_status = 'Active',
                account_type = 'Standard_LRS',
                creation_time = '',
                deleted_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                encryption = openapi_client.models.storage_encryption.StorageEncryption(
                    key_source = 'Microsoft.Storage', 
                    services = openapi_client.models.storage_encryption_services.StorageEncryptionServices(
                        blob = openapi_client.models.storage_encryption_setting.StorageEncryptionSetting(
                            enabled = True, 
                            last_enabled_time = '', ), 
                        queue = openapi_client.models.storage_encryption_setting.StorageEncryptionSetting(
                            enabled = True, 
                            last_enabled_time = '', ), 
                        table = , ), ),
                fault_domain = '',
                health_state = 'Healthy',
                primary_endpoints = openapi_client.models.primary_endpoints.primaryEndpoints(),
                primary_location = '',
                provisioning_state = 'Creating',
                status_of_primary = 'Available',
                supports_https_traffic_only = True,
                tenant_resource_group_name = '',
                tenant_storage_account_name = '',
                tenant_subscription_id = '',
                tenant_view_id = ''
            )
        else:
            return StorageAccountProperties(
        )
        """

    def testStorageAccountProperties(self):
        """Test StorageAccountProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
