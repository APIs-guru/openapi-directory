# coding: utf-8

"""
    StorageManagementClient

    The Admin Storage Management Client.

    The version of the OpenAPI document: 2015-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.storage_account_list import StorageAccountList

class TestStorageAccountList(unittest.TestCase):
    """StorageAccountList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StorageAccountList:
        """Test StorageAccountList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StorageAccountList`
        """
        model = StorageAccountList()
        if include_optional:
            return StorageAccountList(
                next_link = '',
                value = [
                    openapi_client.models.storage_account.StorageAccount(
                        properties = openapi_client.models.storage_account_properties.StorageAccountProperties(
                            account_id = '', 
                            account_status = 'Active', 
                            account_type = 'Standard_LRS', 
                            acquisition_operation_count = 56, 
                            alternate_name = '', 
                            creation_time = '', 
                            current_operation = 'None', 
                            custom_domain = '', 
                            deleted_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            permissions = 'Empty', 
                            primary_endpoints = openapi_client.models.primary_endpoints.primaryEndpoints(), 
                            primary_location = '', 
                            provisioning_state = 'Creating', 
                            recovered_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            recycled_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            resource_admin_api_version = '', 
                            status_of_primary = 'Available', 
                            tenant_resource_group_name = '', 
                            tenant_storage_account_name = '', 
                            tenant_subscription_id = '', 
                            tenant_view_id = '', 
                            wac_internal_state = 'None', ), )
                    ]
            )
        else:
            return StorageAccountList(
        )
        """

    def testStorageAccountList(self):
        """Test StorageAccountList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
