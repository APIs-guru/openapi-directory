# coding: utf-8

"""
    PolicyTrackedResourcesClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-07-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.policy_tracked_resource import PolicyTrackedResource

class TestPolicyTrackedResource(unittest.TestCase):
    """PolicyTrackedResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PolicyTrackedResource:
        """Test PolicyTrackedResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PolicyTrackedResource`
        """
        model = PolicyTrackedResource()
        if include_optional:
            return PolicyTrackedResource(
                created_by = openapi_client.models.tracked_resource_modification_details.TrackedResourceModificationDetails(
                    deployment_id = '', 
                    deployment_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    policy_details = openapi_client.models.policy_details.PolicyDetails(
                        policy_assignment_display_name = '', 
                        policy_assignment_id = '', 
                        policy_assignment_scope = '', 
                        policy_definition_id = '', 
                        policy_definition_reference_id = '', 
                        policy_set_definition_id = '', ), ),
                last_modified_by = openapi_client.models.tracked_resource_modification_details.TrackedResourceModificationDetails(
                    deployment_id = '', 
                    deployment_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    policy_details = openapi_client.models.policy_details.PolicyDetails(
                        policy_assignment_display_name = '', 
                        policy_assignment_id = '', 
                        policy_assignment_scope = '', 
                        policy_definition_id = '', 
                        policy_definition_reference_id = '', 
                        policy_set_definition_id = '', ), ),
                last_update_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                policy_details = openapi_client.models.policy_details.PolicyDetails(
                    policy_assignment_display_name = '', 
                    policy_assignment_id = '', 
                    policy_assignment_scope = '', 
                    policy_definition_id = '', 
                    policy_definition_reference_id = '', 
                    policy_set_definition_id = '', ),
                tracked_resource_id = ''
            )
        else:
            return PolicyTrackedResource(
        )
        """

    def testPolicyTrackedResource(self):
        """Test PolicyTrackedResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
