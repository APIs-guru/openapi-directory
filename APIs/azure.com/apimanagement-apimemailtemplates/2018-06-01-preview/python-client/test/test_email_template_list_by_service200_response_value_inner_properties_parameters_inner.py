# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Email Templates associated with your Azure API Management deployment.

    The version of the OpenAPI document: 2018-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.email_template_list_by_service200_response_value_inner_properties_parameters_inner import EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner

class TestEmailTemplateListByService200ResponseValueInnerPropertiesParametersInner(unittest.TestCase):
    """EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner:
        """Test EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner`
        """
        model = EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner()
        if include_optional:
            return EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner(
                description = '20',
                name = '20',
                title = '0'
            )
        else:
            return EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner(
        )
        """

    def testEmailTemplateListByService200ResponseValueInnerPropertiesParametersInner(self):
        """Test EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
