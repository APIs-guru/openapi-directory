# coding: utf-8

"""
    DeviceServices

    Use this API to manage the Windows IoT device services in your Azure subscription.

    The version of the OpenAPI document: 2019-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.device_service import DeviceService

class TestDeviceService(unittest.TestCase):
    """DeviceService unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceService:
        """Test DeviceService
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceService`
        """
        model = DeviceService()
        if include_optional:
            return DeviceService(
                etag = '',
                properties = openapi_client.models.device_service_properties.DeviceServiceProperties(
                    admin_domain_name = '', 
                    billing_domain_name = '', 
                    notes = '', 
                    quantity = 56, 
                    start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                location = '',
                tags = {
                    'key' : ''
                    },
                id = '',
                name = '',
                type = ''
            )
        else:
            return DeviceService(
        )
        """

    def testDeviceService(self):
        """Test DeviceService"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
