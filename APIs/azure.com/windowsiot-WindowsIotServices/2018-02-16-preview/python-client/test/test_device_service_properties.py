# coding: utf-8

"""
    DeviceServices

    Use this API to manage the Windows IoT device services in your Azure subscription.

    The version of the OpenAPI document: 2018-02-16-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.device_service_properties import DeviceServiceProperties

class TestDeviceServiceProperties(unittest.TestCase):
    """DeviceServiceProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceServiceProperties:
        """Test DeviceServiceProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceServiceProperties`
        """
        model = DeviceServiceProperties()
        if include_optional:
            return DeviceServiceProperties(
                admin_domain_name = '',
                billing_domain_name = '',
                notes = '',
                quantity = 56,
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return DeviceServiceProperties(
        )
        """

    def testDeviceServiceProperties(self):
        """Test DeviceServiceProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
