# coding: utf-8

"""
    Visual Studio Resource Provider Client

    Use these APIs to manage Visual Studio Team Services resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://docs.microsoft.com/en-us/rest/api/index.

    The version of the OpenAPI document: 2017-11-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pipeline_template import PipelineTemplate

class TestPipelineTemplate(unittest.TestCase):
    """PipelineTemplate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PipelineTemplate:
        """Test PipelineTemplate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PipelineTemplate`
        """
        model = PipelineTemplate()
        if include_optional:
            return PipelineTemplate(
                application_source = openapi_client.models.application_source.ApplicationSource(
                    application_configuration = {
                        'key' : ''
                        }, 
                    application_type = 'AspDotNet', 
                    source_type = 'CodeTemplate', ),
                application_target = openapi_client.models.application_target.ApplicationTarget(
                    resources = [
                        openapi_client.models.target_resource.TargetResource(
                            authorization_reference = '', 
                            id = '', 
                            role = '', )
                        ], 
                    target_type = 'WindowsAppService', ),
                authorization_details = {
                    'key' : openapi_client.models.authorization.Authorization(
                        authorization_type = 'authorizationToken', 
                        parameters = {
                            'key' : ''
                            }, )
                    }
            )
        else:
            return PipelineTemplate(
                application_source = openapi_client.models.application_source.ApplicationSource(
                    application_configuration = {
                        'key' : ''
                        }, 
                    application_type = 'AspDotNet', 
                    source_type = 'CodeTemplate', ),
                application_target = openapi_client.models.application_target.ApplicationTarget(
                    resources = [
                        openapi_client.models.target_resource.TargetResource(
                            authorization_reference = '', 
                            id = '', 
                            role = '', )
                        ], 
                    target_type = 'WindowsAppService', ),
                authorization_details = {
                    'key' : openapi_client.models.authorization.Authorization(
                        authorization_type = 'authorizationToken', 
                        parameters = {
                            'key' : ''
                            }, )
                    },
        )
        """

    def testPipelineTemplate(self):
        """Test PipelineTemplate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
