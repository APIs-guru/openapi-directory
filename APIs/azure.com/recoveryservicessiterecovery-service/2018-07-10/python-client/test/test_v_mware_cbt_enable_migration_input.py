# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-07-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v_mware_cbt_enable_migration_input import VMwareCbtEnableMigrationInput

class TestVMwareCbtEnableMigrationInput(unittest.TestCase):
    """VMwareCbtEnableMigrationInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VMwareCbtEnableMigrationInput:
        """Test VMwareCbtEnableMigrationInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VMwareCbtEnableMigrationInput`
        """
        model = VMwareCbtEnableMigrationInput()
        if include_optional:
            return VMwareCbtEnableMigrationInput(
                data_mover_run_as_account_id = '',
                disks_to_include = [
                    openapi_client.models.v_mware_cbt_disk_input.VMwareCbtDiskInput(
                        disk_id = '', 
                        disk_type = 'Standard_LRS', 
                        is_os_disk = '', 
                        log_storage_account_id = '', 
                        log_storage_account_sas_secret_name = '', )
                    ],
                license_type = 'NotSpecified',
                snapshot_run_as_account_id = '',
                target_availability_set_id = '',
                target_boot_diagnostics_storage_account_id = '',
                target_network_id = '',
                target_resource_group_id = '',
                target_subnet_name = '',
                target_vm_name = '',
                target_vm_size = '',
                vmware_machine_id = ''
            )
        else:
            return VMwareCbtEnableMigrationInput(
                data_mover_run_as_account_id = '',
                disks_to_include = [
                    openapi_client.models.v_mware_cbt_disk_input.VMwareCbtDiskInput(
                        disk_id = '', 
                        disk_type = 'Standard_LRS', 
                        is_os_disk = '', 
                        log_storage_account_id = '', 
                        log_storage_account_sas_secret_name = '', )
                    ],
                snapshot_run_as_account_id = '',
                target_network_id = '',
                target_resource_group_id = '',
                vmware_machine_id = '',
        )
        """

    def testVMwareCbtEnableMigrationInput(self):
        """Test VMwareCbtEnableMigrationInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
