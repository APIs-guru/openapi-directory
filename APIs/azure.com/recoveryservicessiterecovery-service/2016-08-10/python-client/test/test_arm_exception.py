# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-08-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.arm_exception import ARMException

class TestARMException(unittest.TestCase):
    """ARMException unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ARMException:
        """Test ARMException
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ARMException`
        """
        model = ARMException()
        if include_optional:
            return ARMException(
                code = '',
                details = [
                    openapi_client.models.arm_exception_details.ARMExceptionDetails(
                        activity_id = '', 
                        client_request_id = '', 
                        code = '', 
                        message = '', 
                        possible_causes = '', 
                        recommended_action = '', 
                        target = '', )
                    ],
                innererror = openapi_client.models.arm_inner_error.ARMInnerError(
                    cloud_id = '', 
                    container_id = '', 
                    fabric_id = '', 
                    h_v_cluster_id = '', 
                    h_v_host_id = '', 
                    live_id = '', 
                    method_status = openapi_client.models.method_call_status.MethodCallStatus(
                        contains_generic_parameters = '', 
                        is_virtual = '', 
                        parameters = [
                            ''
                            ], ), 
                    network_id = '', 
                    resource_id = '', 
                    resource_name = '', 
                    serialized_srs_log_context = '', 
                    source = '', 
                    subscription_id = '', 
                    trace = '', 
                    vm_id = '', ),
                message = '',
                target = ''
            )
        else:
            return ARMException(
        )
        """

    def testARMException(self):
        """Test ARMException"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
