# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-08-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.protectable_item import ProtectableItem

class TestProtectableItem(unittest.TestCase):
    """ProtectableItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProtectableItem:
        """Test ProtectableItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProtectableItem`
        """
        model = ProtectableItem()
        if include_optional:
            return ProtectableItem(
                properties = openapi_client.models.protectable_item_properties.ProtectableItemProperties(
                    custom_details = openapi_client.models.configuration_settings.ConfigurationSettings(), 
                    friendly_name = '', 
                    protection_readiness_errors = [
                        ''
                        ], 
                    protection_status = '', 
                    recovery_services_provider_id = '', 
                    replication_protected_item_id = '', 
                    supported_replication_providers = [
                        ''
                        ], ),
                id = '',
                location = '',
                name = '',
                type = ''
            )
        else:
            return ProtectableItem(
        )
        """

    def testProtectableItem(self):
        """Test ProtectableItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
