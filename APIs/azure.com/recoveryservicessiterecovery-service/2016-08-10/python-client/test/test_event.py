# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-08-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.event import Event

class TestEvent(unittest.TestCase):
    """Event unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Event:
        """Test Event
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Event`
        """
        model = Event()
        if include_optional:
            return Event(
                properties = openapi_client.models.event_properties.EventProperties(
                    affected_object_friendly_name = '', 
                    description = '', 
                    event_code = '', 
                    event_specific_details = openapi_client.models.event_specific_details.EventSpecificDetails(), 
                    event_type = '', 
                    fabric_id = '', 
                    health_errors = [
                        openapi_client.models.health_error.HealthError(
                            child_errors = [
                                openapi_client.models.health_error.HealthError(
                                    creation_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    entity_id = '', 
                                    error_code = '', 
                                    error_level = '', 
                                    error_message = '', 
                                    error_source = '', 
                                    error_type = '', 
                                    possible_causes = '', 
                                    recommended_action = '', 
                                    recovery_provider_error_message = '', )
                                ], 
                            creation_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            entity_id = '', 
                            error_code = '', 
                            error_level = '', 
                            error_message = '', 
                            error_source = '', 
                            error_type = '', 
                            possible_causes = '', 
                            recommended_action = '', 
                            recovery_provider_error_message = '', )
                        ], 
                    provider_specific_details = openapi_client.models.event_provider_specific_details.EventProviderSpecificDetails(), 
                    severity = '', 
                    time_of_occurrence = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                id = '',
                location = '',
                name = '',
                type = ''
            )
        else:
            return Event(
        )
        """

    def testEvent(self):
        """Test Event"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
