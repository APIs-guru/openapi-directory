# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-08-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v_mware_details import VMwareDetails

class TestVMwareDetails(unittest.TestCase):
    """VMwareDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VMwareDetails:
        """Test VMwareDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VMwareDetails`
        """
        model = VMwareDetails()
        if include_optional:
            return VMwareDetails(
                agent_count = '',
                agent_version = '',
                available_memory_in_bytes = 56,
                available_space_in_bytes = 56,
                cpu_load = '',
                cpu_load_status = '',
                cs_service_status = '',
                database_server_load = '',
                database_server_load_status = '',
                host_name = '',
                ip_address = '',
                last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                master_target_servers = [
                    openapi_client.models.master_target_server.MasterTargetServer(
                        agent_version = '', 
                        data_stores = [
                            openapi_client.models.data_store.DataStore(
                                capacity = '', 
                                free_space = '', 
                                symbolic_name = '', 
                                type = '', 
                                uuid = '', )
                            ], 
                        disk_count = 56, 
                        id = '', 
                        ip_address = '', 
                        last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        os_type = '', 
                        os_version = '', 
                        retention_volumes = [
                            openapi_client.models.retention_volume.RetentionVolume(
                                capacity_in_bytes = 56, 
                                free_space_in_bytes = 56, 
                                threshold_percentage = 56, 
                                volume_name = '', )
                            ], 
                        validation_errors = [
                            openapi_client.models.health_error.HealthError(
                                child_errors = [
                                    openapi_client.models.health_error.HealthError(
                                        creation_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        entity_id = '', 
                                        error_code = '', 
                                        error_level = '', 
                                        error_message = '', 
                                        error_source = '', 
                                        error_type = '', 
                                        possible_causes = '', 
                                        recommended_action = '', 
                                        recovery_provider_error_message = '', )
                                    ], 
                                creation_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                entity_id = '', 
                                error_code = '', 
                                error_level = '', 
                                error_message = '', 
                                error_source = '', 
                                error_type = '', 
                                possible_causes = '', 
                                recommended_action = '', 
                                recovery_provider_error_message = '', )
                            ], 
                        version_status = '', )
                    ],
                memory_usage_status = '',
                process_server_count = '',
                process_servers = [
                    openapi_client.models.process_server.ProcessServer(
                        agent_version = '', 
                        available_memory_in_bytes = 56, 
                        available_space_in_bytes = 56, 
                        cpu_load = '', 
                        cpu_load_status = '', 
                        friendly_name = '', 
                        host_id = '', 
                        id = '', 
                        ip_address = '', 
                        last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        machine_count = '', 
                        memory_usage_status = '', 
                        mobility_service_updates = [
                            openapi_client.models.mobility_service_update.MobilityServiceUpdate(
                                os_type = '', 
                                reboot_status = '', 
                                version = '', )
                            ], 
                        os_type = '', 
                        os_version = '', 
                        ps_service_status = '', 
                        replication_pair_count = '', 
                        space_usage_status = '', 
                        ssl_cert_expiry_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ssl_cert_expiry_remaining_days = 56, 
                        system_load = '', 
                        system_load_status = '', 
                        total_memory_in_bytes = 56, 
                        total_space_in_bytes = 56, 
                        version_status = '', )
                    ],
                protected_servers = '',
                ps_template_version = '',
                replication_pair_count = '',
                run_as_accounts = [
                    openapi_client.models.run_as_account.RunAsAccount(
                        account_id = '', 
                        account_name = '', )
                    ],
                space_usage_status = '',
                ssl_cert_expiry_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                ssl_cert_expiry_remaining_days = 56,
                system_load = '',
                system_load_status = '',
                total_memory_in_bytes = 56,
                total_space_in_bytes = 56,
                version_status = '',
                web_load = '',
                web_load_status = ''
            )
        else:
            return VMwareDetails(
        )
        """

    def testVMwareDetails(self):
        """Test VMwareDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
