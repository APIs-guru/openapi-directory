# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-08-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr
from typing_extensions import Annotated
from openapi_client.models.create_protection_container_mapping_input import CreateProtectionContainerMappingInput
from openapi_client.models.protection_container_mapping import ProtectionContainerMapping
from openapi_client.models.protection_container_mapping_collection import ProtectionContainerMappingCollection
from openapi_client.models.remove_protection_container_mapping_input import RemoveProtectionContainerMappingInput

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class ReplicationProtectionContainerMappingsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def replication_protection_container_mappings_create(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        mapping_name: Annotated[StrictStr, Field(description="Protection container mapping name.")],
        creation_input: Annotated[CreateProtectionContainerMappingInput, Field(description="Mapping creation input.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ProtectionContainerMapping:
        """Create protection container mapping.

        The operation to create a protection container mapping.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param mapping_name: Protection container mapping name. (required)
        :type mapping_name: str
        :param creation_input: Mapping creation input. (required)
        :type creation_input: CreateProtectionContainerMappingInput
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_create_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            mapping_name=mapping_name,
            creation_input=creation_input,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectionContainerMapping",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def replication_protection_container_mappings_create_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        mapping_name: Annotated[StrictStr, Field(description="Protection container mapping name.")],
        creation_input: Annotated[CreateProtectionContainerMappingInput, Field(description="Mapping creation input.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ProtectionContainerMapping]:
        """Create protection container mapping.

        The operation to create a protection container mapping.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param mapping_name: Protection container mapping name. (required)
        :type mapping_name: str
        :param creation_input: Mapping creation input. (required)
        :type creation_input: CreateProtectionContainerMappingInput
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_create_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            mapping_name=mapping_name,
            creation_input=creation_input,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectionContainerMapping",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def replication_protection_container_mappings_create_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        mapping_name: Annotated[StrictStr, Field(description="Protection container mapping name.")],
        creation_input: Annotated[CreateProtectionContainerMappingInput, Field(description="Mapping creation input.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create protection container mapping.

        The operation to create a protection container mapping.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param mapping_name: Protection container mapping name. (required)
        :type mapping_name: str
        :param creation_input: Mapping creation input. (required)
        :type creation_input: CreateProtectionContainerMappingInput
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_create_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            mapping_name=mapping_name,
            creation_input=creation_input,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectionContainerMapping",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _replication_protection_container_mappings_create_serialize(
        self,
        api_version,
        resource_name,
        resource_group_name,
        subscription_id,
        fabric_name,
        protection_container_name,
        mapping_name,
        creation_input,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_name is not None:
            _path_params['resourceName'] = resource_name
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if fabric_name is not None:
            _path_params['fabricName'] = fabric_name
        if protection_container_name is not None:
            _path_params['protectionContainerName'] = protection_container_name
        if mapping_name is not None:
            _path_params['mappingName'] = mapping_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if creation_input is not None:
            _body_params = creation_input


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def replication_protection_container_mappings_delete(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        mapping_name: Annotated[StrictStr, Field(description="Protection container mapping name.")],
        removal_input: Annotated[RemoveProtectionContainerMappingInput, Field(description="Removal input.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Remove protection container mapping.

        The operation to delete or remove a protection container mapping.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param mapping_name: Protection container mapping name. (required)
        :type mapping_name: str
        :param removal_input: Removal input. (required)
        :type removal_input: RemoveProtectionContainerMappingInput
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_delete_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            mapping_name=mapping_name,
            removal_input=removal_input,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def replication_protection_container_mappings_delete_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        mapping_name: Annotated[StrictStr, Field(description="Protection container mapping name.")],
        removal_input: Annotated[RemoveProtectionContainerMappingInput, Field(description="Removal input.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Remove protection container mapping.

        The operation to delete or remove a protection container mapping.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param mapping_name: Protection container mapping name. (required)
        :type mapping_name: str
        :param removal_input: Removal input. (required)
        :type removal_input: RemoveProtectionContainerMappingInput
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_delete_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            mapping_name=mapping_name,
            removal_input=removal_input,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def replication_protection_container_mappings_delete_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        mapping_name: Annotated[StrictStr, Field(description="Protection container mapping name.")],
        removal_input: Annotated[RemoveProtectionContainerMappingInput, Field(description="Removal input.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Remove protection container mapping.

        The operation to delete or remove a protection container mapping.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param mapping_name: Protection container mapping name. (required)
        :type mapping_name: str
        :param removal_input: Removal input. (required)
        :type removal_input: RemoveProtectionContainerMappingInput
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_delete_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            mapping_name=mapping_name,
            removal_input=removal_input,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _replication_protection_container_mappings_delete_serialize(
        self,
        api_version,
        resource_name,
        resource_group_name,
        subscription_id,
        fabric_name,
        protection_container_name,
        mapping_name,
        removal_input,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_name is not None:
            _path_params['resourceName'] = resource_name
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if fabric_name is not None:
            _path_params['fabricName'] = fabric_name
        if protection_container_name is not None:
            _path_params['protectionContainerName'] = protection_container_name
        if mapping_name is not None:
            _path_params['mappingName'] = mapping_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if removal_input is not None:
            _body_params = removal_input



        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}/remove',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def replication_protection_container_mappings_get(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        mapping_name: Annotated[StrictStr, Field(description="Protection Container mapping name.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ProtectionContainerMapping:
        """Gets a protection container mapping/

        Gets the details of a protection container mapping.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param mapping_name: Protection Container mapping name. (required)
        :type mapping_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_get_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            mapping_name=mapping_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectionContainerMapping",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def replication_protection_container_mappings_get_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        mapping_name: Annotated[StrictStr, Field(description="Protection Container mapping name.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ProtectionContainerMapping]:
        """Gets a protection container mapping/

        Gets the details of a protection container mapping.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param mapping_name: Protection Container mapping name. (required)
        :type mapping_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_get_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            mapping_name=mapping_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectionContainerMapping",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def replication_protection_container_mappings_get_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        mapping_name: Annotated[StrictStr, Field(description="Protection Container mapping name.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets a protection container mapping/

        Gets the details of a protection container mapping.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param mapping_name: Protection Container mapping name. (required)
        :type mapping_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_get_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            mapping_name=mapping_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectionContainerMapping",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _replication_protection_container_mappings_get_serialize(
        self,
        api_version,
        resource_name,
        resource_group_name,
        subscription_id,
        fabric_name,
        protection_container_name,
        mapping_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_name is not None:
            _path_params['resourceName'] = resource_name
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if fabric_name is not None:
            _path_params['fabricName'] = fabric_name
        if protection_container_name is not None:
            _path_params['protectionContainerName'] = protection_container_name
        if mapping_name is not None:
            _path_params['mappingName'] = mapping_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def replication_protection_container_mappings_list(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ProtectionContainerMappingCollection:
        """Gets the list of all protection container mappings in a vault.

        Lists the protection container mappings in the vault.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_list_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectionContainerMappingCollection",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def replication_protection_container_mappings_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ProtectionContainerMappingCollection]:
        """Gets the list of all protection container mappings in a vault.

        Lists the protection container mappings in the vault.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_list_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectionContainerMappingCollection",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def replication_protection_container_mappings_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets the list of all protection container mappings in a vault.

        Lists the protection container mappings in the vault.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_list_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectionContainerMappingCollection",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _replication_protection_container_mappings_list_serialize(
        self,
        api_version,
        resource_name,
        resource_group_name,
        subscription_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_name is not None:
            _path_params['resourceName'] = resource_name
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationProtectionContainerMappings',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def replication_protection_container_mappings_list_by_replication_protection_containers(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ProtectionContainerMappingCollection:
        """Gets the list of protection container mappings for a protection container.

        Lists the protection container mappings for a protection container.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_list_by_replication_protection_containers_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectionContainerMappingCollection",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def replication_protection_container_mappings_list_by_replication_protection_containers_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ProtectionContainerMappingCollection]:
        """Gets the list of protection container mappings for a protection container.

        Lists the protection container mappings for a protection container.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_list_by_replication_protection_containers_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectionContainerMappingCollection",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def replication_protection_container_mappings_list_by_replication_protection_containers_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets the list of protection container mappings for a protection container.

        Lists the protection container mappings for a protection container.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_list_by_replication_protection_containers_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectionContainerMappingCollection",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _replication_protection_container_mappings_list_by_replication_protection_containers_serialize(
        self,
        api_version,
        resource_name,
        resource_group_name,
        subscription_id,
        fabric_name,
        protection_container_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_name is not None:
            _path_params['resourceName'] = resource_name
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if fabric_name is not None:
            _path_params['fabricName'] = fabric_name
        if protection_container_name is not None:
            _path_params['protectionContainerName'] = protection_container_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def replication_protection_container_mappings_purge(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        mapping_name: Annotated[StrictStr, Field(description="Protection container mapping name.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Purge protection container mapping.

        The operation to purge(force delete) a protection container mapping

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param mapping_name: Protection container mapping name. (required)
        :type mapping_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_purge_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            mapping_name=mapping_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def replication_protection_container_mappings_purge_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        mapping_name: Annotated[StrictStr, Field(description="Protection container mapping name.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Purge protection container mapping.

        The operation to purge(force delete) a protection container mapping

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param mapping_name: Protection container mapping name. (required)
        :type mapping_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_purge_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            mapping_name=mapping_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def replication_protection_container_mappings_purge_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        resource_name: Annotated[StrictStr, Field(description="The name of the recovery services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group where the recovery services vault is present.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription Id.")],
        fabric_name: Annotated[StrictStr, Field(description="Fabric name.")],
        protection_container_name: Annotated[StrictStr, Field(description="Protection container name.")],
        mapping_name: Annotated[StrictStr, Field(description="Protection container mapping name.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Purge protection container mapping.

        The operation to purge(force delete) a protection container mapping

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param resource_name: The name of the recovery services vault. (required)
        :type resource_name: str
        :param resource_group_name: The name of the resource group where the recovery services vault is present. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription Id. (required)
        :type subscription_id: str
        :param fabric_name: Fabric name. (required)
        :type fabric_name: str
        :param protection_container_name: Protection container name. (required)
        :type protection_container_name: str
        :param mapping_name: Protection container mapping name. (required)
        :type mapping_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._replication_protection_container_mappings_purge_serialize(
            api_version=api_version,
            resource_name=resource_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            protection_container_name=protection_container_name,
            mapping_name=mapping_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _replication_protection_container_mappings_purge_serialize(
        self,
        api_version,
        resource_name,
        resource_group_name,
        subscription_id,
        fabric_name,
        protection_container_name,
        mapping_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_name is not None:
            _path_params['resourceName'] = resource_name
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if fabric_name is not None:
            _path_params['fabricName'] = fabric_name
        if protection_container_name is not None:
            _path_params['protectionContainerName'] = protection_container_name
        if mapping_name is not None:
            _path_params['mappingName'] = mapping_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter




        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


