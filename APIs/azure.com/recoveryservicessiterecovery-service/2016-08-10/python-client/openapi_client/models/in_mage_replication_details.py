# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-08-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import ConfigDict, Field, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from openapi_client.models.health_error import HealthError
from openapi_client.models.in_mage_agent_details import InMageAgentDetails
from openapi_client.models.in_mage_protected_disk_details import InMageProtectedDiskDetails
from openapi_client.models.initial_replication_details import InitialReplicationDetails
from openapi_client.models.os_disk_details import OSDiskDetails
from openapi_client.models.replication_provider_specific_settings import ReplicationProviderSpecificSettings
from openapi_client.models.vm_nic_details import VMNicDetails
from typing import Optional, Set
from typing_extensions import Self

class InMageReplicationDetails(ReplicationProviderSpecificSettings):
    """
    InMage provider specific settings
    """ # noqa: E501
    active_site_type: Optional[StrictStr] = Field(default=None, description="The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.", alias="activeSiteType")
    agent_details: Optional[InMageAgentDetails] = Field(default=None, alias="agentDetails")
    azure_storage_account_id: Optional[StrictStr] = Field(default=None, description="A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.", alias="azureStorageAccountId")
    compressed_data_rate_in_mb: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The compressed data change rate in MB.", alias="compressedDataRateInMB")
    consistency_points: Optional[Dict[str, datetime]] = Field(default=None, description="The collection of Consistency points.", alias="consistencyPoints")
    datastores: Optional[List[StrictStr]] = Field(default=None, description="The data stores of the on-premise machine Value can be list of strings that contain data store names")
    discovery_type: Optional[StrictStr] = Field(default=None, description="A value indicating the discovery type of the machine.", alias="discoveryType")
    disk_resized: Optional[StrictStr] = Field(default=None, description="A value indicating whether any disk is resized for this VM.", alias="diskResized")
    infrastructure_vm_id: Optional[StrictStr] = Field(default=None, description="The infrastructure VM Id.", alias="infrastructureVmId")
    ip_address: Optional[StrictStr] = Field(default=None, description="The source IP address.", alias="ipAddress")
    last_heartbeat: Optional[datetime] = Field(default=None, description="The last heartbeat received from the source server.", alias="lastHeartbeat")
    last_rpo_calculated_time: Optional[datetime] = Field(default=None, description="The last RPO calculated time.", alias="lastRpoCalculatedTime")
    last_update_received_time: Optional[datetime] = Field(default=None, description="The last update time received from on-prem components.", alias="lastUpdateReceivedTime")
    master_target_id: Optional[StrictStr] = Field(default=None, description="The master target Id.", alias="masterTargetId")
    multi_vm_group_id: Optional[StrictStr] = Field(default=None, description="The multi vm group Id, if any.", alias="multiVmGroupId")
    multi_vm_group_name: Optional[StrictStr] = Field(default=None, description="The multi vm group name, if any.", alias="multiVmGroupName")
    multi_vm_sync_status: Optional[StrictStr] = Field(default=None, description="A value indicating whether the multi vm sync is enabled or disabled.", alias="multiVmSyncStatus")
    os_details: Optional[OSDiskDetails] = Field(default=None, alias="osDetails")
    os_version: Optional[StrictStr] = Field(default=None, description="The OS Version of the protected item.", alias="osVersion")
    process_server_id: Optional[StrictStr] = Field(default=None, description="The process server Id.", alias="processServerId")
    protected_disks: Optional[List[InMageProtectedDiskDetails]] = Field(default=None, description="The list of protected disks.", alias="protectedDisks")
    protection_stage: Optional[StrictStr] = Field(default=None, description="The protection stage.", alias="protectionStage")
    reboot_after_update_status: Optional[StrictStr] = Field(default=None, description="A value indicating whether the source server requires a restart after update.", alias="rebootAfterUpdateStatus")
    replica_id: Optional[StrictStr] = Field(default=None, description="The replica id of the protected item.", alias="replicaId")
    resync_details: Optional[InitialReplicationDetails] = Field(default=None, alias="resyncDetails")
    retention_window_end: Optional[datetime] = Field(default=None, description="The retention window end time.", alias="retentionWindowEnd")
    retention_window_start: Optional[datetime] = Field(default=None, description="The retention window start time.", alias="retentionWindowStart")
    rpo_in_seconds: Optional[StrictInt] = Field(default=None, description="The RPO in seconds.", alias="rpoInSeconds")
    source_vm_cpu_count: Optional[StrictInt] = Field(default=None, description="The CPU count of the VM on the primary side.", alias="sourceVmCPUCount")
    source_vm_ram_size_in_mb: Optional[StrictInt] = Field(default=None, description="The RAM size of the VM on the primary side.", alias="sourceVmRAMSizeInMB")
    uncompressed_data_rate_in_mb: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The uncompressed data change rate in MB.", alias="uncompressedDataRateInMB")
    v_center_infrastructure_id: Optional[StrictStr] = Field(default=None, description="The vCenter infrastructure Id.", alias="vCenterInfrastructureId")
    validation_errors: Optional[List[HealthError]] = Field(default=None, description="The validation errors of the on-premise machine Value can be list of validation errors", alias="validationErrors")
    vm_id: Optional[StrictStr] = Field(default=None, description="The virtual machine Id.", alias="vmId")
    vm_nics: Optional[List[VMNicDetails]] = Field(default=None, description="The PE Network details.", alias="vmNics")
    vm_protection_state: Optional[StrictStr] = Field(default=None, description="The protection state for the vm.", alias="vmProtectionState")
    vm_protection_state_description: Optional[StrictStr] = Field(default=None, description="The protection state description for the vm.", alias="vmProtectionStateDescription")
    __properties: ClassVar[List[str]] = ["instanceType"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of InMageReplicationDetails from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of InMageReplicationDetails from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "instanceType": obj.get("instanceType")
        })
        return _obj


