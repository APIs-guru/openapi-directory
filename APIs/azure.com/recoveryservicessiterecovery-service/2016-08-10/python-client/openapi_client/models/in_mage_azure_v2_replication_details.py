# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-08-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import ConfigDict, Field, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from openapi_client.models.azure_vm_disk_details import AzureVmDiskDetails
from openapi_client.models.health_error import HealthError
from openapi_client.models.in_mage_azure_v2_protected_disk_details import InMageAzureV2ProtectedDiskDetails
from openapi_client.models.replication_provider_specific_settings import ReplicationProviderSpecificSettings
from openapi_client.models.vm_nic_details import VMNicDetails
from typing import Optional, Set
from typing_extensions import Self

class InMageAzureV2ReplicationDetails(ReplicationProviderSpecificSettings):
    """
    InMageAzureV2 provider specific settings
    """ # noqa: E501
    agent_version: Optional[StrictStr] = Field(default=None, description="The agent version.", alias="agentVersion")
    azure_vm_disk_details: Optional[List[AzureVmDiskDetails]] = Field(default=None, description="Azure VM Disk details.", alias="azureVMDiskDetails")
    compressed_data_rate_in_mb: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The compressed data change rate in MB.", alias="compressedDataRateInMB")
    datastores: Optional[List[StrictStr]] = Field(default=None, description="The data stores of the on-premise machine. Value can be list of strings that contain data store names.")
    discovery_type: Optional[StrictStr] = Field(default=None, description="A value indicating the discovery type of the machine. Value can be vCenter or physical.", alias="discoveryType")
    disk_resized: Optional[StrictStr] = Field(default=None, description="A value indicating whether any disk is resized for this VM.", alias="diskResized")
    enable_rdpon_target_option: Optional[StrictStr] = Field(default=None, description="The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.", alias="enableRDPOnTargetOption")
    infrastructure_vm_id: Optional[StrictStr] = Field(default=None, description="The infrastructure VM Id.", alias="infrastructureVmId")
    ip_address: Optional[StrictStr] = Field(default=None, description="The source IP address.", alias="ipAddress")
    is_agent_update_required: Optional[StrictStr] = Field(default=None, description="A value indicating whether installed agent needs to be updated.", alias="isAgentUpdateRequired")
    is_reboot_after_update_required: Optional[StrictStr] = Field(default=None, description="A value indicating whether the source server requires a restart after update.", alias="isRebootAfterUpdateRequired")
    last_heartbeat: Optional[datetime] = Field(default=None, description="The last heartbeat received from the source server.", alias="lastHeartbeat")
    last_rpo_calculated_time: Optional[datetime] = Field(default=None, description="The last RPO calculated time.", alias="lastRpoCalculatedTime")
    last_update_received_time: Optional[datetime] = Field(default=None, description="The last update time received from on-prem components.", alias="lastUpdateReceivedTime")
    license_type: Optional[StrictStr] = Field(default=None, description="License Type of the VM to be used.", alias="licenseType")
    master_target_id: Optional[StrictStr] = Field(default=None, description="The master target Id.", alias="masterTargetId")
    multi_vm_group_id: Optional[StrictStr] = Field(default=None, description="The multi vm group Id.", alias="multiVmGroupId")
    multi_vm_group_name: Optional[StrictStr] = Field(default=None, description="The multi vm group name.", alias="multiVmGroupName")
    multi_vm_sync_status: Optional[StrictStr] = Field(default=None, description="A value indicating whether multi vm sync is enabled or disabled.", alias="multiVmSyncStatus")
    os_disk_id: Optional[StrictStr] = Field(default=None, description="The id of the disk containing the OS.", alias="osDiskId")
    os_type: Optional[StrictStr] = Field(default=None, description="The type of the OS on the VM.", alias="osType")
    os_version: Optional[StrictStr] = Field(default=None, description="The OS Version of the protected item.", alias="osVersion")
    process_server_id: Optional[StrictStr] = Field(default=None, description="The process server Id.", alias="processServerId")
    protected_disks: Optional[List[InMageAzureV2ProtectedDiskDetails]] = Field(default=None, description="The list of protected disks.", alias="protectedDisks")
    protection_stage: Optional[StrictStr] = Field(default=None, description="The protection stage.", alias="protectionStage")
    recovery_availability_set_id: Optional[StrictStr] = Field(default=None, description="The recovery availability set Id.", alias="recoveryAvailabilitySetId")
    recovery_azure_log_storage_account_id: Optional[StrictStr] = Field(default=None, description="The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.", alias="recoveryAzureLogStorageAccountId")
    recovery_azure_resource_group_id: Optional[StrictStr] = Field(default=None, description="The target resource group Id.", alias="recoveryAzureResourceGroupId")
    recovery_azure_storage_account: Optional[StrictStr] = Field(default=None, description="The recovery Azure storage account.", alias="recoveryAzureStorageAccount")
    recovery_azure_vm_name: Optional[StrictStr] = Field(default=None, description="Recovery Azure given name.", alias="recoveryAzureVMName")
    recovery_azure_vm_size: Optional[StrictStr] = Field(default=None, description="The Recovery Azure VM size.", alias="recoveryAzureVMSize")
    replica_id: Optional[StrictStr] = Field(default=None, description="The replica id of the protected item.", alias="replicaId")
    resync_progress_percentage: Optional[StrictInt] = Field(default=None, description="The resync progress percentage.", alias="resyncProgressPercentage")
    rpo_in_seconds: Optional[StrictInt] = Field(default=None, description="The RPO in seconds.", alias="rpoInSeconds")
    selected_recovery_azure_network_id: Optional[StrictStr] = Field(default=None, description="The selected recovery azure network Id.", alias="selectedRecoveryAzureNetworkId")
    source_vm_cpu_count: Optional[StrictInt] = Field(default=None, description="The CPU count of the VM on the primary side.", alias="sourceVmCPUCount")
    source_vm_ram_size_in_mb: Optional[StrictInt] = Field(default=None, description="The RAM size of the VM on the primary side.", alias="sourceVmRAMSizeInMB")
    target_vm_id: Optional[StrictStr] = Field(default=None, description="The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.", alias="targetVmId")
    uncompressed_data_rate_in_mb: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The uncompressed data change rate in MB.", alias="uncompressedDataRateInMB")
    use_managed_disks: Optional[StrictStr] = Field(default=None, description="A value indicating whether managed disks should be used during failover.", alias="useManagedDisks")
    v_center_infrastructure_id: Optional[StrictStr] = Field(default=None, description="The vCenter infrastructure Id.", alias="vCenterInfrastructureId")
    validation_errors: Optional[List[HealthError]] = Field(default=None, description="The validation errors of the on-premise machine Value can be list of validation errors.", alias="validationErrors")
    vhd_name: Optional[StrictStr] = Field(default=None, description="The OS disk VHD name.", alias="vhdName")
    vm_id: Optional[StrictStr] = Field(default=None, description="The virtual machine Id.", alias="vmId")
    vm_nics: Optional[List[VMNicDetails]] = Field(default=None, description="The PE Network details.", alias="vmNics")
    vm_protection_state: Optional[StrictStr] = Field(default=None, description="The protection state for the vm.", alias="vmProtectionState")
    vm_protection_state_description: Optional[StrictStr] = Field(default=None, description="The protection state description for the vm.", alias="vmProtectionStateDescription")
    __properties: ClassVar[List[str]] = ["instanceType"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of InMageAzureV2ReplicationDetails from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of InMageAzureV2ReplicationDetails from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "instanceType": obj.get("instanceType")
        })
        return _obj


