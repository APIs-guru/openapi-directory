# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-01-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.recovery_plan_collection import RecoveryPlanCollection

class TestRecoveryPlanCollection(unittest.TestCase):
    """RecoveryPlanCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RecoveryPlanCollection:
        """Test RecoveryPlanCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RecoveryPlanCollection`
        """
        model = RecoveryPlanCollection()
        if include_optional:
            return RecoveryPlanCollection(
                next_link = '',
                value = [
                    openapi_client.models.recovery_plan.RecoveryPlan(
                        properties = openapi_client.models.recovery_plan_properties.RecoveryPlanProperties(
                            allowed_operations = [
                                ''
                                ], 
                            current_scenario = openapi_client.models.current_scenario_details.CurrentScenarioDetails(
                                job_id = '', 
                                scenario_name = '', 
                                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                            current_scenario_status = '', 
                            current_scenario_status_description = '', 
                            failover_deployment_model = '', 
                            friendly_name = '', 
                            groups = [
                                openapi_client.models.recovery_plan_group.RecoveryPlanGroup(
                                    end_group_actions = [
                                        openapi_client.models.recovery_plan_action.RecoveryPlanAction(
                                            action_name = '', 
                                            custom_details = openapi_client.models.recovery_plan_action_details.RecoveryPlanActionDetails(), 
                                            failover_directions = [
                                                'PrimaryToRecovery'
                                                ], 
                                            failover_types = [
                                                'ReverseReplicate'
                                                ], )
                                        ], 
                                    group_type = 'Shutdown', 
                                    replication_protected_items = [
                                        openapi_client.models.recovery_plan_protected_item.RecoveryPlanProtectedItem(
                                            id = '', 
                                            virtual_machine_id = '', )
                                        ], 
                                    start_group_actions = [
                                        openapi_client.models.recovery_plan_action.RecoveryPlanAction(
                                            action_name = '', 
                                            custom_details = openapi_client.models.recovery_plan_action_details.RecoveryPlanActionDetails(), 
                                            failover_directions = [
                                                'PrimaryToRecovery'
                                                ], 
                                            failover_types = [
                                                'ReverseReplicate'
                                                ], )
                                        ], )
                                ], 
                            last_planned_failover_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_test_failover_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_unplanned_failover_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            primary_fabric_friendly_name = '', 
                            primary_fabric_id = '', 
                            recovery_fabric_friendly_name = '', 
                            recovery_fabric_id = '', 
                            replication_providers = [
                                ''
                                ], ), )
                    ]
            )
        else:
            return RecoveryPlanCollection(
        )
        """

    def testRecoveryPlanCollection(self):
        """Test RecoveryPlanCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
