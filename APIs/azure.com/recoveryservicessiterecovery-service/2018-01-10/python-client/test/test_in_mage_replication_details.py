# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-01-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.in_mage_replication_details import InMageReplicationDetails

class TestInMageReplicationDetails(unittest.TestCase):
    """InMageReplicationDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InMageReplicationDetails:
        """Test InMageReplicationDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InMageReplicationDetails`
        """
        model = InMageReplicationDetails()
        if include_optional:
            return InMageReplicationDetails(
                active_site_type = '',
                agent_details = openapi_client.models.in_mage_agent_details.InMageAgentDetails(
                    agent_expiry_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    agent_update_status = '', 
                    agent_version = '', 
                    post_update_reboot_status = '', ),
                azure_storage_account_id = '',
                compressed_data_rate_in_mb = 1.337,
                consistency_points = {
                    'key' : datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                    },
                datastores = [
                    ''
                    ],
                discovery_type = '',
                disk_resized = '',
                infrastructure_vm_id = '',
                ip_address = '',
                last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_rpo_calculated_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_update_received_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                master_target_id = '',
                multi_vm_group_id = '',
                multi_vm_group_name = '',
                multi_vm_sync_status = '',
                os_details = openapi_client.models.os_disk_details.OSDiskDetails(
                    os_type = '', 
                    os_vhd_id = '', 
                    vhd_name = '', ),
                os_version = '',
                process_server_id = '',
                protected_disks = [
                    openapi_client.models.in_mage_protected_disk_details.InMageProtectedDiskDetails(
                        disk_capacity_in_bytes = 56, 
                        disk_id = '', 
                        disk_name = '', 
                        disk_resized = '', 
                        file_system_capacity_in_bytes = 56, 
                        health_error_code = '', 
                        last_rpo_calculated_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        protection_stage = '', 
                        ps_data_in_mb = 1.337, 
                        resync_duration_in_seconds = 56, 
                        resync_progress_percentage = 56, 
                        resync_required = '', 
                        rpo_in_seconds = 56, 
                        source_data_in_mb = 1.337, 
                        target_data_in_mb = 1.337, )
                    ],
                protection_stage = '',
                reboot_after_update_status = '',
                replica_id = '',
                resync_details = openapi_client.models.initial_replication_details.InitialReplicationDetails(
                    initial_replication_progress_percentage = '', 
                    initial_replication_type = '', ),
                retention_window_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                retention_window_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                rpo_in_seconds = 56,
                source_vm_cpu_count = 56,
                source_vm_ram_size_in_mb = 56,
                uncompressed_data_rate_in_mb = 1.337,
                v_center_infrastructure_id = '',
                validation_errors = [
                    openapi_client.models.health_error.HealthError(
                        creation_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        entity_id = '', 
                        error_category = '', 
                        error_code = '', 
                        error_level = '', 
                        error_message = '', 
                        error_source = '', 
                        error_type = '', 
                        inner_health_errors = [
                            openapi_client.models.inner_health_error.InnerHealthError(
                                creation_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                entity_id = '', 
                                error_category = '', 
                                error_code = '', 
                                error_level = '', 
                                error_message = '', 
                                error_source = '', 
                                error_type = '', 
                                possible_causes = '', 
                                recommended_action = '', 
                                recovery_provider_error_message = '', 
                                summary_message = '', )
                            ], 
                        possible_causes = '', 
                        recommended_action = '', 
                        recovery_provider_error_message = '', 
                        summary_message = '', )
                    ],
                vm_id = '',
                vm_nics = [
                    openapi_client.models.vm_nic_details.VMNicDetails(
                        enable_accelerated_networking_on_recovery = True, 
                        ip_address_type = '', 
                        nic_id = '', 
                        primary_nic_static_ip_address = '', 
                        recovery_nic_ip_address_type = '', 
                        recovery_vm_network_id = '', 
                        recovery_vm_subnet_name = '', 
                        replica_nic_id = '', 
                        replica_nic_static_ip_address = '', 
                        selection_type = '', 
                        source_nic_arm_id = '', 
                        v_m_network_name = '', 
                        v_m_subnet_name = '', )
                    ],
                vm_protection_state = '',
                vm_protection_state_description = ''
            )
        else:
            return InMageReplicationDetails(
        )
        """

    def testInMageReplicationDetails(self):
        """Test InMageReplicationDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
