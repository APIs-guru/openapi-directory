# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-01-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.replication_storage_classification_mappings_api import ReplicationStorageClassificationMappingsApi


class TestReplicationStorageClassificationMappingsApi(unittest.TestCase):
    """ReplicationStorageClassificationMappingsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ReplicationStorageClassificationMappingsApi()

    def tearDown(self) -> None:
        pass

    def test_replication_storage_classification_mappings_create(self) -> None:
        """Test case for replication_storage_classification_mappings_create

        Create storage classification mapping.
        """
        pass

    def test_replication_storage_classification_mappings_delete(self) -> None:
        """Test case for replication_storage_classification_mappings_delete

        Delete a storage classification mapping.
        """
        pass

    def test_replication_storage_classification_mappings_get(self) -> None:
        """Test case for replication_storage_classification_mappings_get

        Gets the details of a storage classification mapping.
        """
        pass

    def test_replication_storage_classification_mappings_list(self) -> None:
        """Test case for replication_storage_classification_mappings_list

        Gets the list of storage classification mappings objects under a vault.
        """
        pass

    def test_replication_storage_classification_mappings_list_by_replication_storage_classifications(self) -> None:
        """Test case for replication_storage_classification_mappings_list_by_replication_storage_classifications

        Gets the list of storage classification mappings objects under a storage.
        """
        pass


if __name__ == '__main__':
    unittest.main()
