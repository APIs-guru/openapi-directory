# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-01-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job_error_details import JobErrorDetails

class TestJobErrorDetails(unittest.TestCase):
    """JobErrorDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobErrorDetails:
        """Test JobErrorDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobErrorDetails`
        """
        model = JobErrorDetails()
        if include_optional:
            return JobErrorDetails(
                creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                error_level = '',
                provider_error_details = openapi_client.models.provider_error.ProviderError(
                    error_code = 56, 
                    error_id = '', 
                    error_message = '', 
                    possible_causes = '', 
                    recommended_action = '', ),
                service_error_details = openapi_client.models.service_error.ServiceError(
                    activity_id = '', 
                    code = '', 
                    message = '', 
                    possible_causes = '', 
                    recommended_action = '', ),
                task_id = ''
            )
        else:
            return JobErrorDetails(
        )
        """

    def testJobErrorDetails(self):
        """Test JobErrorDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
