# coding: utf-8

"""
    SiteRecoveryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-01-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.process_server import ProcessServer

class TestProcessServer(unittest.TestCase):
    """ProcessServer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProcessServer:
        """Test ProcessServer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProcessServer`
        """
        model = ProcessServer()
        if include_optional:
            return ProcessServer(
                agent_expiry_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                agent_version = '',
                agent_version_details = openapi_client.models.version_details.VersionDetails(
                    expiry_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'Supported', 
                    version = '', ),
                available_memory_in_bytes = 56,
                available_space_in_bytes = 56,
                cpu_load = '',
                cpu_load_status = '',
                friendly_name = '',
                health_errors = [
                    openapi_client.models.health_error.HealthError(
                        creation_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        entity_id = '', 
                        error_category = '', 
                        error_code = '', 
                        error_level = '', 
                        error_message = '', 
                        error_source = '', 
                        error_type = '', 
                        inner_health_errors = [
                            openapi_client.models.inner_health_error.InnerHealthError(
                                creation_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                entity_id = '', 
                                error_category = '', 
                                error_code = '', 
                                error_level = '', 
                                error_message = '', 
                                error_source = '', 
                                error_type = '', 
                                possible_causes = '', 
                                recommended_action = '', 
                                recovery_provider_error_message = '', 
                                summary_message = '', )
                            ], 
                        possible_causes = '', 
                        recommended_action = '', 
                        recovery_provider_error_message = '', 
                        summary_message = '', )
                    ],
                host_id = '',
                id = '',
                ip_address = '',
                last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                machine_count = '',
                memory_usage_status = '',
                mobility_service_updates = [
                    openapi_client.models.mobility_service_update.MobilityServiceUpdate(
                        os_type = '', 
                        reboot_status = '', 
                        version = '', )
                    ],
                os_type = '',
                os_version = '',
                ps_service_status = '',
                replication_pair_count = '',
                space_usage_status = '',
                ssl_cert_expiry_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                ssl_cert_expiry_remaining_days = 56,
                system_load = '',
                system_load_status = '',
                total_memory_in_bytes = 56,
                total_space_in_bytes = 56,
                version_status = ''
            )
        else:
            return ProcessServer(
        )
        """

    def testProcessServer(self):
        """Test ProcessServer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
