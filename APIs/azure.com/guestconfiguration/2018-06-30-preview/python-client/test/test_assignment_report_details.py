# coding: utf-8

"""
    GuestConfiguration

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-06-30-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.assignment_report_details import AssignmentReportDetails

class TestAssignmentReportDetails(unittest.TestCase):
    """AssignmentReportDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AssignmentReportDetails:
        """Test AssignmentReportDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AssignmentReportDetails`
        """
        model = AssignmentReportDetails()
        if include_optional:
            return AssignmentReportDetails(
                compliance_status = 'Compliant',
                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                job_id = '',
                operation_type = 'Consistency',
                resources = [
                    openapi_client.models.assignment_report_resource.AssignmentReportResource(
                        compliance_status = 'Compliant', 
                        properties = openapi_client.models.properties.properties(), 
                        reasons = [
                            openapi_client.models.assignment_report_resource_compliance_reason.AssignmentReportResourceComplianceReason(
                                code = '', 
                                phrase = '', )
                            ], )
                    ],
                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return AssignmentReportDetails(
        )
        """

    def testAssignmentReportDetails(self):
        """Test AssignmentReportDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
