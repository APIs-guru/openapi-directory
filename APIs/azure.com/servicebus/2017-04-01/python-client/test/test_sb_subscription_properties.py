# coding: utf-8

"""
    ServiceBusManagementClient

    Azure Service Bus client

    The version of the OpenAPI document: 2017-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sb_subscription_properties import SBSubscriptionProperties

class TestSBSubscriptionProperties(unittest.TestCase):
    """SBSubscriptionProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SBSubscriptionProperties:
        """Test SBSubscriptionProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SBSubscriptionProperties`
        """
        model = SBSubscriptionProperties()
        if include_optional:
            return SBSubscriptionProperties(
                accessed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                auto_delete_on_idle = '',
                count_details = openapi_client.models.message_count_details.MessageCountDetails(
                    active_message_count = 56, 
                    dead_letter_message_count = 56, 
                    scheduled_message_count = 56, 
                    transfer_dead_letter_message_count = 56, 
                    transfer_message_count = 56, ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dead_lettering_on_filter_evaluation_exceptions = True,
                dead_lettering_on_message_expiration = True,
                default_message_time_to_live = '',
                duplicate_detection_history_time_window = '',
                enable_batched_operations = True,
                forward_dead_lettered_messages_to = '',
                forward_to = '',
                lock_duration = '',
                max_delivery_count = 56,
                message_count = 56,
                requires_session = True,
                status = 'Active',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return SBSubscriptionProperties(
        )
        """

    def testSBSubscriptionProperties(self):
        """Test SBSubscriptionProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
