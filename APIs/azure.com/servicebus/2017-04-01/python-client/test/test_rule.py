# coding: utf-8

"""
    ServiceBusManagementClient

    Azure Service Bus client

    The version of the OpenAPI document: 2017-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rule import Rule

class TestRule(unittest.TestCase):
    """Rule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Rule:
        """Test Rule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Rule`
        """
        model = Rule()
        if include_optional:
            return Rule(
                properties = openapi_client.models.ruleproperties.Ruleproperties(
                    action = openapi_client.models.action.Action(
                        compatibility_level = 56, 
                        requires_preprocessing = True, 
                        sql_expression = '', ), 
                    correlation_filter = openapi_client.models.correlation_filter.CorrelationFilter(
                        content_type = '', 
                        correlation_id = '', 
                        label = '', 
                        message_id = '', 
                        properties = {
                            'key' : ''
                            }, 
                        reply_to = '', 
                        reply_to_session_id = '', 
                        requires_preprocessing = True, 
                        session_id = '', 
                        to = '', ), 
                    filter_type = 'SqlFilter', 
                    sql_filter = openapi_client.models.sql_filter.SqlFilter(
                        compatibility_level = 2E+1, 
                        requires_preprocessing = True, 
                        sql_expression = '', ), ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return Rule(
        )
        """

    def testRule(self):
        """Test Rule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
