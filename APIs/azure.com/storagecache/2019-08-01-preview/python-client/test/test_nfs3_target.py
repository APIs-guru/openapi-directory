# coding: utf-8

"""
    Storage Cache Mgmt Client

    A Storage Cache provides scalable caching service for NAS clients, serving data from either NFSv3 or Blob at-rest storage (referred to as \"Storage Targets\"). These operations allow you to manage caches.

    The version of the OpenAPI document: 2019-08-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.nfs3_target import Nfs3Target

class TestNfs3Target(unittest.TestCase):
    """Nfs3Target unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Nfs3Target:
        """Test Nfs3Target
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Nfs3Target`
        """
        model = Nfs3Target()
        if include_optional:
            return Nfs3Target(
                target = 'z',
                usage_model = ''
            )
        else:
            return Nfs3Target(
        )
        """

    def testNfs3Target(self):
        """Test Nfs3Target"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
