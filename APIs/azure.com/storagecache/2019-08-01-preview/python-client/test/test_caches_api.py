# coding: utf-8

"""
    Storage Cache Mgmt Client

    A Storage Cache provides scalable caching service for NAS clients, serving data from either NFSv3 or Blob at-rest storage (referred to as \"Storage Targets\"). These operations allow you to manage caches.

    The version of the OpenAPI document: 2019-08-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.caches_api import CachesApi


class TestCachesApi(unittest.TestCase):
    """CachesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = CachesApi()

    def tearDown(self) -> None:
        pass

    def test_caches_create(self) -> None:
        """Test case for caches_create

        """
        pass

    def test_caches_delete(self) -> None:
        """Test case for caches_delete

        """
        pass

    def test_caches_flush(self) -> None:
        """Test case for caches_flush

        """
        pass

    def test_caches_get(self) -> None:
        """Test case for caches_get

        """
        pass

    def test_caches_list(self) -> None:
        """Test case for caches_list

        """
        pass

    def test_caches_list_by_resource_group(self) -> None:
        """Test case for caches_list_by_resource_group

        """
        pass

    def test_caches_start(self) -> None:
        """Test case for caches_start

        """
        pass

    def test_caches_stop(self) -> None:
        """Test case for caches_stop

        """
        pass

    def test_caches_update(self) -> None:
        """Test case for caches_update

        """
        pass

    def test_caches_upgrade_firmware(self) -> None:
        """Test case for caches_upgrade_firmware

        """
        pass


if __name__ == '__main__':
    unittest.main()
