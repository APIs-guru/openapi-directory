# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs to get the analytics reports associated with your Azure API Management deployment.

    The version of the OpenAPI document: 2019-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.reports_list_by_request200_response import ReportsListByRequest200Response

class TestReportsListByRequest200Response(unittest.TestCase):
    """ReportsListByRequest200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReportsListByRequest200Response:
        """Test ReportsListByRequest200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReportsListByRequest200Response`
        """
        model = ReportsListByRequest200Response()
        if include_optional:
            return ReportsListByRequest200Response(
                count = 56,
                value = [
                    openapi_client.models.reports_list_by_request_200_response_value_inner.Reports_ListByRequest_200_response_value_inner(
                        api_id = '', 
                        api_region = '', 
                        api_time = 1.337, 
                        backend_response_code = '', 
                        cache = '', 
                        ip_address = '', 
                        method = '', 
                        operation_id = '', 
                        product_id = '', 
                        request_id = '', 
                        request_size = 56, 
                        response_code = 56, 
                        response_size = 56, 
                        service_time = 1.337, 
                        subscription_id = '', 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        url = '', 
                        user_id = '', )
                    ]
            )
        else:
            return ReportsListByRequest200Response(
        )
        """

    def testReportsListByRequest200Response(self):
        """Test ReportsListByRequest200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
